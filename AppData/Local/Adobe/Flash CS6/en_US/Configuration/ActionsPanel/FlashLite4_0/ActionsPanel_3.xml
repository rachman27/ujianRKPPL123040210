<?xml version="1.0" encoding="utf-8"?>
<toolbox>
   <actionspanel>
      <folder id="Top Level" name="Top Level" sort="true" tiptext="The top level contains the core ActionScript classes and global functions.">
         <folder asAncestors="Error,Object" helpurl="globalClassifier:ArgumentError" id="ArgumentError" index="true" name="ArgumentError" sort="true" tiptext="The ArgumentError class represents an error that occurs when the arguments supplied in a function do not match the arguments defined for that function.">
            <folder helpurl="globalClassifier:ArgumentError" id="Methods" name="Methods" tiptext="Methods for class ArgumentError">
               <string constructor="true" helpurl="ArgumentError:ArgumentError" name="ArgumentError" object="ArgumentError" playername="" text="new ArgumentError(%message:String%)" tiptext="Creates an ArgumentError object." version="4"/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="globalClassifier:arguments" id="arguments" index="true" name="arguments" sort="true" tiptext="An arguments object is used to store and access a function's arguments.">
            <folder helpurl="globalClassifier:arguments" id="Properties" name="Properties" tiptext="Properties for class arguments">
               <string helpurl="arguments:callee" name="callee" object="arguments" playername="" text=".callee" tiptext="A reference to the currently executing function." version=""/>
               <string helpurl="arguments:length" name="length" object="arguments" playername="" text=".length" tiptext="The number of arguments passed to the function." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="globalClassifier:Array" id="Array" index="true" name="Array" sort="true" tiptext="The Array class lets you access and manipulate arrays.">
            <folder helpurl="globalClassifier:Array" id="Methods" name="Methods" tiptext="Methods for class Array">
               <string constructor="true" helpurl="Array:Array" name="Array" object="Array" playername="" text="new Array(%values:restParam%)" tiptext="Lets you create an array that contains the specified elements." version="4"/>
               <string constructor="true" helpurl="Array:Array" name="Array" object="Array" playername="" text="new Array(%[numElements:int=0]%)" tiptext="Lets you create an array of the specified number of elements." version="4"/>
               <string helpurl="Array:AS3:concat" name="concat" object="Array" playername="" text=".concat(%args:restParam%):Array" tiptext="Concatenates the elements specified in the parameters." version="4"/>
               <string helpurl="Array:AS3:every" name="every" object="Array" playername="" text=".every(%callback:Function[,thisObject:*=null]%):Boolean" tiptext="Executes a test function on each item in the array until an item is reached that returns false for the specified function." version="4"/>
               <string helpurl="Array:AS3:filter" name="filter" object="Array" playername="" text=".filter(%callback:Function[,thisObject:*=null]%):Array" tiptext="Executes a test function on each item in the array and constructs a new array for all items that return true for the specified function." version="4"/>
               <string helpurl="Array:AS3:forEach" name="forEach" object="Array" playername="" text=".forEach(%callback:Function[,thisObject:*=null]%):void" tiptext="Executes a function on each item in the array." version="4"/>
               <string helpurl="Array:AS3:indexOf" name="indexOf" object="Array" playername="" text=".indexOf(%searchElement:*[,fromIndex:int=0]%):int" tiptext="Searches for an item in an array by using strict equality (===) and returns the index position of the item." version="4"/>
               <string helpurl="Array:AS3:join" name="join" object="Array" playername="" text=".join(%[sep:*=unknown]%):String" tiptext="Converts the elements in an array to strings." version="4"/>
               <string helpurl="Array:AS3:lastIndexOf" name="lastIndexOf" object="Array" playername="" text=".lastIndexOf(%searchElement:*[,fromIndex:int=0x7fffffff]%):int" tiptext="Searches for an item in an array, working backward from the last item, and returns the index position of the matching item using strict equality (===)." version="4"/>
               <string helpurl="Array:AS3:map" name="map" object="Array" playername="" text=".map(%callback:Function[,thisObject:*=null]%):Array" tiptext="Executes a function on each item in an array, and constructs a new array of items corresponding to the results of the function on each item in the original array." version="4"/>
               <string helpurl="Array:AS3:pop" name="pop" object="Array" playername="" text=".pop(%%)" tiptext="Removes the last element from an array and returns the value of that element." version="4"/>
               <string helpurl="Array:AS3:push" name="push" object="Array" playername="" text=".push(%args:restParam%):uint" tiptext="Adds one or more elements to the end of an array and returns the new length of the array." version="4"/>
               <string helpurl="Array:AS3:reverse" name="reverse" object="Array" playername="" text=".reverse(%%):Array" tiptext="Reverses the array in place." version="4"/>
               <string helpurl="Array:AS3:shift" name="shift" object="Array" playername="" text=".shift(%%)" tiptext="Removes the first element from an array and returns that element." version="4"/>
               <string helpurl="Array:AS3:slice" name="slice" object="Array" playername="" text=".slice(%[startIndex:int=0,endIndex:int=16777215]%):Array" tiptext="Returns a new array that consists of a range of elements from the original array." version="4"/>
               <string helpurl="Array:AS3:some" name="some" object="Array" playername="" text=".some(%callback:Function[,thisObject:*=null]%):Boolean" tiptext="Executes a test function on each item in the array until an item is reached that returns true." version="4"/>
               <string helpurl="Array:AS3:sortOn" name="sortOn" object="Array" playername="" text=".sortOn(%fieldName:Object[,options:Object=null]%):Array" tiptext="Sorts the elements in an array according to one or more fields in the array." version="4"/>
               <string helpurl="Array:AS3:sort" name="sort" object="Array" playername="" text=".sort(%args:restParam%):Array" tiptext="Sorts the elements in an array." version="4"/>
               <string helpurl="Array:AS3:splice" name="splice" object="Array" playername="" text=".splice(%startIndex:int,deleteCount:uint,values:restParam%):Array" tiptext="Adds elements to and removes elements from an array." version="4"/>
               <string helpurl="Array:toLocaleString" name="toLocaleString" object="Array" playername="" text=".toLocaleString(%%):String" tiptext="Returns a string that represents the elements in the specified array." version="4"/>
               <string helpurl="Array:toString" name="toString" object="Array" playername="" text=".toString(%%):String" tiptext="Returns a string that represents the elements in the specified array." version="4"/>
               <string helpurl="Array:AS3:unshift" name="unshift" object="Array" playername="" text=".unshift(%args:restParam%):uint" tiptext="Adds one or more elements to the beginning of an array and returns the new length of the array." version="4"/>
            </folder>
            <folder helpurl="globalClassifier:Array" id="Properties" name="Properties" tiptext="Properties for class Array">
               <string constant="true" helpurl="Array:CASEINSENSITIVE" name="CASEINSENSITIVE" object="Array" playername="" text="Array.CASEINSENSITIVE" tiptext="Specifies case-insensitive sorting for the Array class sorting methods." version=""/>
               <string constant="true" helpurl="Array:DESCENDING" name="DESCENDING" object="Array" playername="" text="Array.DESCENDING" tiptext="Specifies descending sorting for the Array class sorting methods." version=""/>
               <string constant="true" helpurl="Array:NUMERIC" name="NUMERIC" object="Array" playername="" text="Array.NUMERIC" tiptext="Specifies numeric (instead of character-string) sorting for the Array class sorting methods." version=""/>
               <string constant="true" helpurl="Array:RETURNINDEXEDARRAY" name="RETURNINDEXEDARRAY" object="Array" playername="" text="Array.RETURNINDEXEDARRAY" tiptext="Specifies that a sort returns an array that consists of array indices." version=""/>
               <string constant="true" helpurl="Array:UNIQUESORT" name="UNIQUESORT" object="Array" playername="" text="Array.UNIQUESORT" tiptext="Specifies the unique sorting requirement for the Array class sorting methods." version=""/>
               <string helpurl="Array:length:get" name="length" object="Array" playername="" text=".length" tiptext="A non-negative integer specifying the number of elements in the array." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="globalClassifier:Boolean" id="Boolean" index="true" name="Boolean" sort="true" tiptext="A Boolean object is a data type that can have one of two values, either true or false, used for logical operations.">
            <folder helpurl="globalClassifier:Boolean" id="Methods" name="Methods" tiptext="Methods for class Boolean">
               <string constructor="true" helpurl="Boolean:Boolean" name="Boolean" object="Boolean" playername="" text="new Boolean(%[expression:Object=false]%)" tiptext="Creates a Boolean object with the specified value." version="4"/>
               <string helpurl="Boolean:AS3:toString" name="toString" object="Boolean" playername="" text=".toString(%%):String" tiptext="Returns the string representation (&quot;true&quot; or &quot;false&quot;) of the Boolean object." version="4"/>
               <string helpurl="Boolean:AS3:valueOf" name="valueOf" object="Boolean" playername="" text=".valueOf(%%):Boolean" tiptext="Returns true if the value of the specified Boolean object is true; false otherwise." version="4"/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="globalClassifier:Date" id="Date" index="true" name="Date" sort="true" tiptext="The Date class represents date and time information.">
            <folder helpurl="globalClassifier:Date" id="Methods" name="Methods" tiptext="Methods for class Date">
               <string constructor="true" helpurl="Date:Date" name="Date" object="Date" playername="" text="new Date(%yearOrTimevalue:Object,month:Number[,date:Number=1,hour:Number=0,minute:Number=0,second:Number=0,millisecond:Number=0]%)" tiptext="Constructs a new Date object that holds the specified date and time." version="4"/>
               <string helpurl="Date:UTC" name="UTC" object="Date" playername="" static="true" text="Date.UTC(%year:Number,month:Number[,date:Number=1,hour:Number=0,minute:Number=0,second:Number=0,millisecond:Number=0]%):Number" tiptext="Returns the number of milliseconds between midnight on January 1, 1970, universal time, and the time specified in the parameters." version="4"/>
               <string helpurl="Date:AS3:getDate" name="getDate" object="Date" playername="" text=".getDate(%%):Number" tiptext="Returns the day of the month (an integer from 1 to 31) specified by a Date object according to local time." version="4"/>
               <string helpurl="Date:AS3:getDay" name="getDay" object="Date" playername="" text=".getDay(%%):Number" tiptext="Returns the day of the week (0 for Sunday, 1 for Monday, and so on) specified by this Date according to local time." version="4"/>
               <string helpurl="Date:AS3:getFullYear" name="getFullYear" object="Date" playername="" text=".getFullYear(%%):Number" tiptext="Returns the full year (a four-digit number, such as 2000) of a Date object according to local time." version="4"/>
               <string helpurl="Date:AS3:getHours" name="getHours" object="Date" playername="" text=".getHours(%%):Number" tiptext="Returns the hour (an integer from 0 to 23) of the day portion of a Date object according to local time." version="4"/>
               <string helpurl="Date:AS3:getMilliseconds" name="getMilliseconds" object="Date" playername="" text=".getMilliseconds(%%):Number" tiptext="Returns the milliseconds (an integer from 0 to 999) portion of a Date object according to local time." version="4"/>
               <string helpurl="Date:AS3:getMinutes" name="getMinutes" object="Date" playername="" text=".getMinutes(%%):Number" tiptext="Returns the minutes (an integer from 0 to 59) portion of a Date object according to local time." version="4"/>
               <string helpurl="Date:AS3:getMonth" name="getMonth" object="Date" playername="" text=".getMonth(%%):Number" tiptext="Returns the month (0 for January, 1 for February, and so on) portion of this  Date according to local time." version="4"/>
               <string helpurl="Date:AS3:getSeconds" name="getSeconds" object="Date" playername="" text=".getSeconds(%%):Number" tiptext="Returns the seconds (an integer from 0 to 59) portion of a Date object according to local time." version="4"/>
               <string helpurl="Date:AS3:getTime" name="getTime" object="Date" playername="" text=".getTime(%%):Number" tiptext="Returns the number of milliseconds since midnight January 1, 1970, universal time, for a Date object." version="4"/>
               <string helpurl="Date:AS3:getTimezoneOffset" name="getTimezoneOffset" object="Date" playername="" text=".getTimezoneOffset(%%):Number" tiptext="Returns the difference, in minutes, between universal time (UTC) and the computer's local time." version="4"/>
               <string helpurl="Date:AS3:getUTCDate" name="getUTCDate" object="Date" playername="" text=".getUTCDate(%%):Number" tiptext="Returns the day of the month (an integer from 1 to 31) of a Date object, according to universal time (UTC)." version="4"/>
               <string helpurl="Date:AS3:getUTCDay" name="getUTCDay" object="Date" playername="" text=".getUTCDay(%%):Number" tiptext="Returns the day of the week (0 for Sunday, 1 for Monday, and so on) of this Date  according to universal time (UTC)." version="4"/>
               <string helpurl="Date:AS3:getUTCFullYear" name="getUTCFullYear" object="Date" playername="" text=".getUTCFullYear(%%):Number" tiptext="Returns the four-digit year of a Date object according to universal time (UTC)." version="4"/>
               <string helpurl="Date:AS3:getUTCHours" name="getUTCHours" object="Date" playername="" text=".getUTCHours(%%):Number" tiptext="Returns the hour (an integer from 0 to 23) of the day of a Date object according to universal time (UTC)." version="4"/>
               <string helpurl="Date:AS3:getUTCMilliseconds" name="getUTCMilliseconds" object="Date" playername="" text=".getUTCMilliseconds(%%):Number" tiptext="Returns the milliseconds (an integer from 0 to 999) portion of a Date object according to universal time (UTC)." version="4"/>
               <string helpurl="Date:AS3:getUTCMinutes" name="getUTCMinutes" object="Date" playername="" text=".getUTCMinutes(%%):Number" tiptext="Returns the minutes (an integer from 0 to 59) portion of a Date object according to universal time (UTC)." version="4"/>
               <string helpurl="Date:AS3:getUTCMonth" name="getUTCMonth" object="Date" playername="" text=".getUTCMonth(%%):Number" tiptext="Returns the month (0 [January] to 11 [December]) portion of a Date object according to universal time (UTC)." version="4"/>
               <string helpurl="Date:AS3:getUTCSeconds" name="getUTCSeconds" object="Date" playername="" text=".getUTCSeconds(%%):Number" tiptext="Returns the seconds (an integer from 0 to 59) portion of a Date object according to universal time (UTC)." version="4"/>
               <string helpurl="Date:parse" name="parse" object="Date" playername="" static="true" text="Date.parse(%date:String%):Number" tiptext="Converts a string representing a date into a number equaling the number of milliseconds elapsed since January 1, 1970, UTC." version="4"/>
               <string helpurl="Date:AS3:setDate" name="setDate" object="Date" playername="" text=".setDate(%day:Number%):Number" tiptext="Sets the day of the month, according to local time, and returns the new time in milliseconds." version="4"/>
               <string helpurl="Date:AS3:setFullYear" name="setFullYear" object="Date" playername="" text=".setFullYear(%year:Number,month:Number,day:Number%):Number" tiptext="Sets the year, according to local time, and returns the new time in milliseconds." version="4"/>
               <string helpurl="Date:AS3:setHours" name="setHours" object="Date" playername="" text=".setHours(%hour:Number,minute:Number,second:Number,millisecond:Number%):Number" tiptext="Sets the hour, according to local time, and returns the new time in milliseconds." version="4"/>
               <string helpurl="Date:AS3:setMilliseconds" name="setMilliseconds" object="Date" playername="" text=".setMilliseconds(%millisecond:Number%):Number" tiptext="Sets the milliseconds, according to local time, and returns the new time in milliseconds." version="4"/>
               <string helpurl="Date:AS3:setMinutes" name="setMinutes" object="Date" playername="" text=".setMinutes(%minute:Number,second:Number,millisecond:Number%):Number" tiptext="Sets the minutes, according to local time, and returns the new time in milliseconds." version="4"/>
               <string helpurl="Date:AS3:setMonth" name="setMonth" object="Date" playername="" text=".setMonth(%month:Number,day:Number%):Number" tiptext="Sets the month and optionally the day of the month, according to local time, and returns the new time in milliseconds." version="4"/>
               <string helpurl="Date:AS3:setSeconds" name="setSeconds" object="Date" playername="" text=".setSeconds(%second:Number,millisecond:Number%):Number" tiptext="Sets the seconds, according to local time, and returns the new time in milliseconds." version="4"/>
               <string helpurl="Date:AS3:setTime" name="setTime" object="Date" playername="" text=".setTime(%millisecond:Number%):Number" tiptext="Sets the date in milliseconds since midnight on January 1, 1970, and returns the new time in milliseconds." version="4"/>
               <string helpurl="Date:AS3:setUTCDate" name="setUTCDate" object="Date" playername="" text=".setUTCDate(%day:Number%):Number" tiptext="Sets the day of the month, in universal time (UTC), and returns the new time in milliseconds." version="4"/>
               <string helpurl="Date:AS3:setUTCFullYear" name="setUTCFullYear" object="Date" playername="" text=".setUTCFullYear(%year:Number,month:Number,day:Number%):Number" tiptext="Sets the year, in universal time (UTC), and returns the new time in milliseconds." version="4"/>
               <string helpurl="Date:AS3:setUTCHours" name="setUTCHours" object="Date" playername="" text=".setUTCHours(%hour:Number,minute:Number,second:Number,millisecond:Number%):Number" tiptext="Sets the hour, in universal time (UTC), and returns the new time in milliseconds." version="4"/>
               <string helpurl="Date:AS3:setUTCMilliseconds" name="setUTCMilliseconds" object="Date" playername="" text=".setUTCMilliseconds(%millisecond:Number%):Number" tiptext="Sets the milliseconds, in universal time (UTC), and returns the new time in milliseconds." version="4"/>
               <string helpurl="Date:AS3:setUTCMinutes" name="setUTCMinutes" object="Date" playername="" text=".setUTCMinutes(%minute:Number,second:Number,millisecond:Number%):Number" tiptext="Sets the minutes, in universal time (UTC), and returns the new time in milliseconds." version="4"/>
               <string helpurl="Date:AS3:setUTCMonth" name="setUTCMonth" object="Date" playername="" text=".setUTCMonth(%month:Number,day:Number%):Number" tiptext="Sets the month, and optionally the day, in universal time(UTC) and returns the new time in milliseconds." version="4"/>
               <string helpurl="Date:AS3:setUTCSeconds" name="setUTCSeconds" object="Date" playername="" text=".setUTCSeconds(%second:Number,millisecond:Number%):Number" tiptext="Sets the seconds, and optionally the milliseconds, in universal time (UTC) and returns the new time in milliseconds." version="4"/>
               <string helpurl="Date:AS3:toDateString" name="toDateString" object="Date" playername="" text=".toDateString(%%):String" tiptext="Returns a string representation of the day and date only, and does not include the time or timezone." version="4"/>
               <string helpurl="Date:AS3:toLocaleDateString" name="toLocaleDateString" object="Date" playername="" text=".toLocaleDateString(%%):String" tiptext="Returns a String representation of the day and date only, and does not include the time or timezone." version="4"/>
               <string helpurl="Date:AS3:toLocaleString" name="toLocaleString" object="Date" playername="" text=".toLocaleString(%%):String" tiptext="Returns a String representation of the day, date, time, given in local time." version="4"/>
               <string helpurl="Date:AS3:toLocaleTimeString" name="toLocaleTimeString" object="Date" playername="" text=".toLocaleTimeString(%%):String" tiptext="Returns a String representation of the time only, and does not include the day, date, year, or timezone." version="4"/>
               <string helpurl="Date:AS3:toString" name="toString" object="Date" playername="" text=".toString(%%):String" tiptext="Returns a String representation of the day, date, time, and timezone." version="4"/>
               <string helpurl="Date:AS3:toTimeString" name="toTimeString" object="Date" playername="" text=".toTimeString(%%):String" tiptext="Returns a String representation of the time and timezone only, and does not include the day and date." version="4"/>
               <string helpurl="Date:AS3:toUTCString" name="toUTCString" object="Date" playername="" text=".toUTCString(%%):String" tiptext="Returns a String representation of the day, date, and time in universal time (UTC)." version="4"/>
               <string helpurl="Date:AS3:valueOf" name="valueOf" object="Date" playername="" text=".valueOf(%%):Number" tiptext="Returns the number of milliseconds since midnight January 1, 1970, universal time, for a Date object." version="4"/>
            </folder>
            <folder helpurl="globalClassifier:Date" id="Properties" name="Properties" tiptext="Properties for class Date">
               <string helpurl="Date:AS3:dateUTC:get" name="dateUTC" object="Date" playername="" text=".dateUTC" tiptext="The day of the month (an integer from 1 to 31) of a Date object according to universal time (UTC)." version=""/>
               <string helpurl="Date:AS3:date:get" name="date" object="Date" playername="" text=".date" tiptext="The day of the month (an integer from 1 to 31) specified by a Date object according to local time." version=""/>
               <string helpurl="Date:AS3:dayUTC:get" name="dayUTC" object="Date" playername="" text=".dayUTC" tiptext="The day of the week (0 for Sunday, 1 for Monday, and so on) of this Date  according to universal time (UTC)." version=""/>
               <string helpurl="Date:AS3:day:get" name="day" object="Date" playername="" text=".day" tiptext="The day of the week (0 for Sunday, 1 for Monday, and so on) specified by this Date according to local time." version=""/>
               <string helpurl="Date:AS3:fullYearUTC:get" name="fullYearUTC" object="Date" playername="" text=".fullYearUTC" tiptext="The four-digit year of a Date object according to universal time (UTC)." version=""/>
               <string helpurl="Date:AS3:fullYear:get" name="fullYear" object="Date" playername="" text=".fullYear" tiptext="The full year (a four-digit number, such as 2000) of a Date object according to local time." version=""/>
               <string helpurl="Date:AS3:hoursUTC:get" name="hoursUTC" object="Date" playername="" text=".hoursUTC" tiptext="The hour (an integer from 0 to 23) of the day of a Date object according to universal time (UTC)." version=""/>
               <string helpurl="Date:AS3:hours:get" name="hours" object="Date" playername="" text=".hours" tiptext="The hour (an integer from 0 to 23) of the day portion of a Date object according to local time." version=""/>
               <string helpurl="Date:AS3:millisecondsUTC:get" name="millisecondsUTC" object="Date" playername="" text=".millisecondsUTC" tiptext="The milliseconds (an integer from 0 to 999) portion of a Date object according to universal time (UTC)." version=""/>
               <string helpurl="Date:AS3:milliseconds:get" name="milliseconds" object="Date" playername="" text=".milliseconds" tiptext="The milliseconds (an integer from 0 to 999) portion of a Date object according to local time." version=""/>
               <string helpurl="Date:AS3:minutesUTC:get" name="minutesUTC" object="Date" playername="" text=".minutesUTC" tiptext="The minutes (an integer from 0 to 59) portion of a Date object according to universal time (UTC)." version=""/>
               <string helpurl="Date:AS3:minutes:get" name="minutes" object="Date" playername="" text=".minutes" tiptext="The minutes (an integer from 0 to 59) portion of a Date object according to local time." version=""/>
               <string helpurl="Date:AS3:monthUTC:get" name="monthUTC" object="Date" playername="" text=".monthUTC" tiptext="The month (0 [January] to 11 [December]) portion of a Date object according to universal time (UTC)." version=""/>
               <string helpurl="Date:AS3:month:get" name="month" object="Date" playername="" text=".month" tiptext="The month (0 for January, 1 for February, and so on) portion of a  Date object according to local time." version=""/>
               <string helpurl="Date:AS3:secondsUTC:get" name="secondsUTC" object="Date" playername="" text=".secondsUTC" tiptext="The seconds (an integer from 0 to 59) portion of a Date object according to universal time (UTC)." version=""/>
               <string helpurl="Date:AS3:seconds:get" name="seconds" object="Date" playername="" text=".seconds" tiptext="The seconds (an integer from 0 to 59) portion of a Date object according to local time." version=""/>
               <string helpurl="Date:AS3:time:get" name="time" object="Date" playername="" text=".time" tiptext="The number of milliseconds since midnight January 1, 1970, universal time, for a Date object." version=""/>
               <string helpurl="Date:AS3:timezoneOffset:get" name="timezoneOffset" object="Date" playername="" text=".timezoneOffset" tiptext="The difference, in minutes, between universal time (UTC) and the computer's local time." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Error,Object" helpurl="globalClassifier:DefinitionError" id="DefinitionError" index="true" name="DefinitionError" sort="true" tiptext="The DefinitionError class represents an error that occurs when user code attempts to define an identifier that is already defined.">
            <folder helpurl="globalClassifier:DefinitionError" id="Methods" name="Methods" tiptext="Methods for class DefinitionError">
               <string constructor="true" helpurl="DefinitionError:DefinitionError" name="DefinitionError" object="DefinitionError" playername="" text="new DefinitionError(%message:String%)" tiptext="Creates a new DefinitionError object." version="4"/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="globalClassifier:Error" id="Error" index="true" name="Error" sort="true" tiptext="The Error class contains information about an error that occurred in a script.">
            <folder helpurl="globalClassifier:Error" id="Methods" name="Methods" tiptext="Methods for class Error">
               <string constructor="true" helpurl="Error:Error" name="Error" object="Error" playername="" text="new Error(%message:String[,id:int=0]%)" tiptext="Creates a new Error instance with the specified error message." version="4"/>
               <string helpurl="Error:getStackTrace" name="getStackTrace" object="Error" playername="" text=".getStackTrace(%%):String" tiptext="Returns the call stack for an error in a readable form." version="4"/>
               <string helpurl="Error:toString" name="toString" object="Error" playername="" text=".toString(%%):String" tiptext="Returns the error message, or the word &quot;Error&quot; if the message is undefined." version="4"/>
            </folder>
            <folder helpurl="globalClassifier:Error" id="Properties" name="Properties" tiptext="Properties for class Error">
               <string helpurl="Error:message" name="message" object="Error" playername="" text=".message" tiptext="Contains the message associated with the Error object." version=""/>
               <string helpurl="Error:name" name="name" object="Error" playername="" text=".name" tiptext="Contains the name of the Error object." version=""/>
               <string helpurl="Error:errorID:get" name="errorID" object="Error" playername="" text=".errorID" tiptext="Contains the reference number associated with the specific error message." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Error,Object" helpurl="globalClassifier:EvalError" id="EvalError" index="true" name="EvalError" sort="true" tiptext="The EvalError class represents an error that occurs when user code calls the eval() function or attempts to use the new operator with the Function object.">
            <folder helpurl="globalClassifier:EvalError" id="Methods" name="Methods" tiptext="Methods for class EvalError">
               <string constructor="true" helpurl="EvalError:EvalError" name="EvalError" object="EvalError" playername="" text="new EvalError(%message:String%)" tiptext="Creates a new EvalError object." version="4"/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="globalClassifier:Function" id="Function" index="true" name="Function" sort="true" tiptext="A function is the basic unit of code that can be invoked in ActionScript.">
            <folder helpurl="globalClassifier:Function" id="Methods" name="Methods" tiptext="Methods for class Function">
               <string helpurl="Function:AS3:apply" name="apply" object="Function" playername="" text=".apply(%[thisArg:*=unknown,argArray:*=unknown]%)" tiptext="Specifies the object instance on which the Function is called." version="4"/>
               <string helpurl="Function:AS3:call" name="call" object="Function" playername="" text=".call(%[thisArg:*=unknown,args:restParam]%)" tiptext="Invokes this Function." version="4"/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="globalClassifier:int" id="int" index="true" name="int" sort="true" tiptext="The int class lets you work with the data type representing a 32-bit signed integer.">
            <folder helpurl="globalClassifier:int" id="Methods" name="Methods" tiptext="Methods for class int">
               <string constructor="true" helpurl="int:int" name="int" object="int" playername="" text="new int(%num:Object%)" tiptext="Constructor; creates a new int object." version="4"/>
               <string helpurl="int:AS3:toExponential" name="toExponential" object="int" playername="" text=".toExponential(%fractionDigits:uint%):String" tiptext="Returns a string representation of the number in exponential notation." version="4"/>
               <string helpurl="int:AS3:toFixed" name="toFixed" object="int" playername="" text=".toFixed(%fractionDigits:uint%):String" tiptext="Returns a string representation of the number in fixed-point notation." version="4"/>
               <string helpurl="int:AS3:toPrecision" name="toPrecision" object="int" playername="" text=".toPrecision(%precision:uint%):String" tiptext="Returns a string representation of the number either in exponential notation or in fixed-point notation." version="4"/>
               <string helpurl="int:AS3:toString" name="toString" object="int" playername="" text=".toString(%radix:uint%):String" tiptext="Returns the string representation of an int object." version="4"/>
               <string helpurl="int:AS3:valueOf" name="valueOf" object="int" playername="" text=".valueOf(%%):int" tiptext="Returns the primitive value of the specified int object." version="4"/>
            </folder>
            <folder helpurl="globalClassifier:int" id="Properties" name="Properties" tiptext="Properties for class int">
               <string constant="true" helpurl="int:MAX_VALUE" name="MAX_VALUE" object="int" playername="" text="int.MAX_VALUE" tiptext="The largest representable 32-bit signed integer, which is 2,147,483,647." version=""/>
               <string constant="true" helpurl="int:MIN_VALUE" name="MIN_VALUE" object="int" playername="" text="int.MIN_VALUE" tiptext="The smallest representable 32-bit signed integer, which is -2,147,483,648." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="globalClassifier:Math" id="Math" index="true" name="Math" sort="true" tiptext="The Math class contains methods and constants that represent common mathematical functions and values.">
            <folder helpurl="globalClassifier:Math" id="Methods" name="Methods" tiptext="Methods for class Math">
               <string helpurl="Math:abs" name="abs" object="Math" playername="" static="true" text="Math.abs(%val:Number%):Number" tiptext="Returns the absolute value of the specified Number." version="4"/>
               <string helpurl="Math:acos" name="acos" object="Math" playername="" static="true" text="Math.acos(%val:Number%):Number" tiptext="Returns the arc cosine, in radians, of the specified Number." version="4"/>
               <string helpurl="Math:asin" name="asin" object="Math" playername="" static="true" text="Math.asin(%val:Number%):Number" tiptext="Returns the value, in radians, of the arc sine of the specified Number parameter." version="4"/>
               <string helpurl="Math:atan2" name="atan2" object="Math" playername="" static="true" text="Math.atan2(%y:Number,x:Number%):Number" tiptext="Returns the angle of the point y/x in radians, when measured counterclockwise from a circle's x axis." version="4"/>
               <string helpurl="Math:atan" name="atan" object="Math" playername="" static="true" text="Math.atan(%val:Number%):Number" tiptext="Returns the angle, in radians, whose tangent is specified by parameter val." version="4"/>
               <string helpurl="Math:ceil" name="ceil" object="Math" playername="" static="true" text="Math.ceil(%val:Number%):Number" tiptext="Returns the ceiling of the specified number or expression." version="4"/>
               <string helpurl="Math:cos" name="cos" object="Math" playername="" static="true" text="Math.cos(%angleRadians:Number%):Number" tiptext="Returns the cosine of the specified angle." version="4"/>
               <string helpurl="Math:exp" name="exp" object="Math" playername="" static="true" text="Math.exp(%val:Number%):Number" tiptext="Returns the value of the base of the natural logarithm (e), to the power of the exponent specified in the parameter val." version="4"/>
               <string helpurl="Math:floor" name="floor" object="Math" playername="" static="true" text="Math.floor(%val:Number%):Number" tiptext="Returns the floor of the number or expression specified in the parameter val." version="4"/>
               <string helpurl="Math:log" name="log" object="Math" playername="" static="true" text="Math.log(%val:Number%):Number" tiptext="Returns the natural logarithm of parameter val." version="4"/>
               <string helpurl="Math:max" name="max" object="Math" playername="" static="true" text="Math.max(%val1:Number,val2:Number,rest:restParam%):Number" tiptext="Evaluates parameters val1 and val2 and returns the larger value." version="4"/>
               <string helpurl="Math:min" name="min" object="Math" playername="" static="true" text="Math.min(%val1:Number,val2:Number,rest:restParam%):Number" tiptext="Evaluates parameters val1 and val2 and returns the smaller value." version="4"/>
               <string helpurl="Math:pow" name="pow" object="Math" playername="" static="true" text="Math.pow(%base:Number,pow:Number%):Number" tiptext="Returns val1 to the power of val2." version="4"/>
               <string helpurl="Math:random" name="random" object="Math" playername="" static="true" text="Math.random(%%):Number" tiptext="Returns a pseudo-random number n, where 0 &amp;lt;= n &amp;lt; 1." version="4"/>
               <string helpurl="Math:round" name="round" object="Math" playername="" static="true" text="Math.round(%val:Number%):Number" tiptext="Returns the value of parameter val rounded up or down to the nearest integer." version="4"/>
               <string helpurl="Math:sin" name="sin" object="Math" playername="" static="true" text="Math.sin(%angleRadians:Number%):Number" tiptext="Returns the sine of the specified angle." version="4"/>
               <string helpurl="Math:sqrt" name="sqrt" object="Math" playername="" static="true" text="Math.sqrt(%val:Number%):Number" tiptext="Returns the square root of the specified number." version="4"/>
               <string helpurl="Math:tan" name="tan" object="Math" playername="" static="true" text="Math.tan(%angleRadians:Number%):Number" tiptext="Returns the tangent of the specified angle." version="4"/>
            </folder>
            <folder helpurl="globalClassifier:Math" id="Properties" name="Properties" tiptext="Properties for class Math">
               <string constant="true" helpurl="Math:E" name="E" object="Math" playername="" text="Math.E" tiptext="A mathematical constant for the base of natural logarithms, expressed as e." version=""/>
               <string constant="true" helpurl="Math:LN10" name="LN10" object="Math" playername="" text="Math.LN10" tiptext="A mathematical constant for the natural logarithm of 10, expressed as loge10, with an approximate value of 2.302585092994046." version=""/>
               <string constant="true" helpurl="Math:LN2" name="LN2" object="Math" playername="" text="Math.LN2" tiptext="A mathematical constant for the natural logarithm of 2, expressed as loge2, with an approximate value of 0.6931471805599453." version=""/>
               <string constant="true" helpurl="Math:LOG10E" name="LOG10E" object="Math" playername="" text="Math.LOG10E" tiptext="A mathematical constant for the base-10 logarithm of the constant e (Math.E), expressed as log10e, with an approximate value of 0.4342944819032518." version=""/>
               <string constant="true" helpurl="Math:LOG2E" name="LOG2E" object="Math" playername="" text="Math.LOG2E" tiptext="A mathematical constant for the base-2 logarithm of the constant e, expressed as log2e, with an approximate value of 1.442695040888963387." version=""/>
               <string constant="true" helpurl="Math:PI" name="PI" object="Math" playername="" text="Math.PI" tiptext="A mathematical constant for the ratio of the circumference of a circle to its diameter, expressed as pi, with a value of 3.141592653589793." version=""/>
               <string constant="true" helpurl="Math:SQRT1_2" name="SQRT1_2" object="Math" playername="" text="Math.SQRT1_2" tiptext="A mathematical constant for the square root of one-half, with an approximate value of 0.7071067811865476." version=""/>
               <string constant="true" helpurl="Math:SQRT2" name="SQRT2" object="Math" playername="" text="Math.SQRT2" tiptext="A mathematical constant for the square root of 2, with an approximate value of 1.4142135623730951." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="globalClassifier:Namespace" id="Namespace" index="true" name="Namespace" sort="true" tiptext="The Namespace class contains methods and properties for defining and working with namespaces.">
            <folder helpurl="globalClassifier:Namespace" id="Methods" name="Methods" tiptext="Methods for class Namespace">
               <string constructor="true" helpurl="Namespace:Namespace" name="Namespace" object="Namespace" playername="" text="new Namespace(%prefixValue:*,uriValue:*%)" tiptext="Creates a Namespace object, given the prefixValue and uriValue." version="9"/>
               <string constructor="true" helpurl="Namespace:Namespace" name="Namespace" object="Namespace" playername="" text="new Namespace(%uriValue:*%)" tiptext="Creates a Namespace object, given the uriValue." version="9"/>
               <string helpurl="Namespace:AS3:toString" name="toString" object="Namespace" playername="" text=".toString(%%):String" tiptext="Equivalent to the Namespace.uri property." version="9"/>
               <string helpurl="Namespace:AS3:valueOf" name="valueOf" object="Namespace" playername="" text=".valueOf(%%):String" tiptext="Equivalent to the Namespace.uri property." version="9"/>
            </folder>
            <folder helpurl="globalClassifier:Namespace" id="Properties" name="Properties" tiptext="Properties for class Namespace">
               <string helpurl="Namespace:prefix:get" name="prefix" object="Namespace" playername="" text=".prefix" tiptext="The prefix of the namespace." version=""/>
               <string helpurl="Namespace:uri:get" name="uri" object="Namespace" playername="" text=".uri" tiptext="The Uniform Resource Identifier (URI) of the namespace." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="globalClassifier:Number" id="Number" index="true" name="Number" sort="true" tiptext="A data type representing an IEEE-754 double-precision floating-point number.">
            <folder helpurl="globalClassifier:Number" id="Methods" name="Methods" tiptext="Methods for class Number">
               <string constructor="true" helpurl="Number:Number" name="Number" object="Number" playername="" text="new Number(%num:Object%)" tiptext="Creates a Number with the specified value." version="4"/>
               <string helpurl="Number:AS3:toExponential" name="toExponential" object="Number" playername="" text=".toExponential(%fractionDigits:uint%):String" tiptext="Returns a string representation of the number in exponential notation." version="4"/>
               <string helpurl="Number:AS3:toFixed" name="toFixed" object="Number" playername="" text=".toFixed(%fractionDigits:uint%):String" tiptext="Returns a string representation of the number in fixed-point notation." version="4"/>
               <string helpurl="Number:AS3:toPrecision" name="toPrecision" object="Number" playername="" text=".toPrecision(%precision:uint%):String" tiptext="Returns a string representation of the number either in exponential notation or in fixed-point notation." version="4"/>
               <string helpurl="Number:AS3:toString" name="toString" object="Number" playername="" text=".toString(%[radix:Number=10]%):String" tiptext="Returns the string representation of this Number using the specified radix parameter as the numeric base." version="4"/>
               <string helpurl="Number:AS3:valueOf" name="valueOf" object="Number" playername="" text=".valueOf(%%):Number" tiptext="Returns the primitive value type of the specified Number object." version="4"/>
            </folder>
            <folder helpurl="globalClassifier:Number" id="Properties" name="Properties" tiptext="Properties for class Number">
               <string constant="true" helpurl="Number:MAX_VALUE" name="MAX_VALUE" object="Number" playername="" text="Number.MAX_VALUE" tiptext="The largest representable number (double-precision IEEE-754)." version=""/>
               <string constant="true" helpurl="Number:MIN_VALUE" name="MIN_VALUE" object="Number" playername="" text="Number.MIN_VALUE" tiptext="The smallest representable non-negative, non-zero, number (double-precision IEEE-754)." version=""/>
               <string constant="true" helpurl="Number:NEGATIVE_INFINITY" name="NEGATIVE_INFINITY" object="Number" playername="" text="Number.NEGATIVE_INFINITY" tiptext="Specifies the IEEE-754 value representing negative infinity." version=""/>
               <string constant="true" helpurl="Number:NaN" name="NaN" object="Number" playername="" text="Number.NaN" tiptext="The IEEE-754 value representing Not a Number (NaN)." version=""/>
               <string constant="true" helpurl="Number:POSITIVE_INFINITY" name="POSITIVE_INFINITY" object="Number" playername="" text="Number.POSITIVE_INFINITY" tiptext="Specifies the IEEE-754 value representing positive infinity." version=""/>
            </folder>
         </folder>
         <folder helpurl="globalClassifier:Object" id="Object" index="true" name="Object" sort="true" tiptext="The Object class is at the root of the ActionScript runtime class hierarchy.">
            <folder helpurl="globalClassifier:Object" id="Methods" name="Methods" tiptext="Methods for class Object">
               <string constructor="true" helpurl="Object:Object" name="Object" object="Object" playername="" text="new Object(%%)" tiptext="Creates an Object object and stores a reference to the object's constructor method in the object's constructor property." version="4"/>
               <string helpurl="Object:AS3:hasOwnProperty" name="hasOwnProperty" object="Object" playername="" text=".hasOwnProperty(%name:String%):Boolean" tiptext="Indicates whether an object has a specified property defined." version="4"/>
               <string helpurl="Object:AS3:isPrototypeOf" name="isPrototypeOf" object="Object" playername="" text=".isPrototypeOf(%theClass:Object%):Boolean" tiptext="Indicates whether an instance of the Object class is in the prototype chain of the object specified as the parameter." version="4"/>
               <string helpurl="Object:AS3:propertyIsEnumerable" name="propertyIsEnumerable" object="Object" playername="" text=".propertyIsEnumerable(%name:String%):Boolean" tiptext="Indicates whether the specified property exists and is enumerable." version="4"/>
               <string helpurl="Object:setPropertyIsEnumerable" name="setPropertyIsEnumerable" object="Object" playername="" text=".setPropertyIsEnumerable(%name:String[,isEnum:Boolean=true]%):void" tiptext="Sets the availability of a dynamic property for loop operations." version="4"/>
               <string helpurl="Object:toLocaleString" name="toLocaleString" object="Object" playername="" text=".toLocaleString(%%):String" tiptext="Returns the string representation of this object, formatted according to locale-specific conventions." version="4"/>
               <string helpurl="Object:toString" name="toString" object="Object" playername="" text=".toString(%%):String" tiptext="Returns the string representation of the specified object." version="4"/>
               <string helpurl="Object:valueOf" name="valueOf" object="Object" playername="" text=".valueOf(%%):Object" tiptext="Returns the primitive value of the specified object." version="4"/>
            </folder>
            <folder helpurl="globalClassifier:Object" id="Properties" name="Properties" tiptext="Properties for class Object">
               <string helpurl="Object:constructor" name="constructor" object="Object" playername="" text=".constructor" tiptext="A reference to the class object or constructor function for a given object instance." version=""/>
               <string helpurl="Object:prototype" name="prototype" object="Object" playername="" text=".prototype" tiptext="A reference to the prototype object of a class or function object." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="globalClassifier:QName" id="QName" index="true" name="QName" sort="true" tiptext="QName objects represent qualified names of XML elements and attributes.">
            <folder helpurl="globalClassifier:QName" id="Methods" name="Methods" tiptext="Methods for class QName">
               <string constructor="true" helpurl="QName:QName" name="QName" object="QName" playername="" text="new QName(%qname:QName%)" tiptext="Creates a QName object that is a copy of another QName object." version="9"/>
               <string constructor="true" helpurl="QName:QName" name="QName" object="QName" playername="" text="new QName(%uri:Namespace,localName:QName%)" tiptext="Creates a QName object with a URI object from a Namespace object and a localName from a QName object." version="9"/>
               <string helpurl="QName:AS3:toString" name="toString" object="QName" playername="" text=".toString(%%):String" tiptext="Returns a string composed of the URI, and the local name for the QName object, separated by &quot;::&quot;." version="9"/>
               <string helpurl="QName:AS3:valueOf" name="valueOf" object="QName" playername="" text=".valueOf(%%):QName" tiptext="Returns the QName object." version="9"/>
            </folder>
            <folder helpurl="globalClassifier:QName" id="Properties" name="Properties" tiptext="Properties for class QName">
               <string helpurl="QName:localName:get" name="localName" object="QName" playername="" text=".localName" tiptext="The local name of the QName object." version=""/>
               <string helpurl="QName:uri:get" name="uri" object="QName" playername="" text=".uri" tiptext="The Uniform Resource Identifier (URI) of the QName object." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Error,Object" helpurl="globalClassifier:RangeError" id="RangeError" index="true" name="RangeError" sort="true" tiptext="A RangeError exception is thrown when a numeric value is outside the acceptable range.">
            <folder helpurl="globalClassifier:RangeError" id="Methods" name="Methods" tiptext="Methods for class RangeError">
               <string constructor="true" helpurl="RangeError:RangeError" name="RangeError" object="RangeError" playername="" text="new RangeError(%message:String%)" tiptext="Creates a new RangeError object." version="4"/>
            </folder>
         </folder>
         <folder asAncestors="Error,Object" helpurl="globalClassifier:ReferenceError" id="ReferenceError" index="true" name="ReferenceError" sort="true" tiptext="A ReferenceError exception is thrown when a reference to an undefined property is attempted on a sealed (nondynamic) object.">
            <folder helpurl="globalClassifier:ReferenceError" id="Methods" name="Methods" tiptext="Methods for class ReferenceError">
               <string constructor="true" helpurl="ReferenceError:ReferenceError" name="ReferenceError" object="ReferenceError" playername="" text="new ReferenceError(%message:String%)" tiptext="Creates a new ReferenceError object." version="4"/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="globalClassifier:RegExp" id="RegExp" index="true" name="RegExp" sort="true" tiptext="The RegExp class lets you work with regular expressions, which are patterns that you can use to perform searches in strings and to replace text in strings.">
            <folder helpurl="globalClassifier:RegExp" id="Methods" name="Methods" tiptext="Methods for class RegExp">
               <string constructor="true" helpurl="RegExp:RegExp" name="RegExp" object="RegExp" playername="" text="new RegExp(%re:String,flags:String%)" tiptext="Lets you construct a regular expression from two strings." version="9"/>
               <string helpurl="RegExp:AS3:exec" name="exec" object="RegExp" playername="" text=".exec(%str:String%):Object" tiptext="Performs a search for the regular expression on the given string str." version="4"/>
               <string helpurl="RegExp:AS3:test" name="test" object="RegExp" playername="" text=".test(%str:String%):Boolean" tiptext="Tests for the match of the regular expression in the given string str." version="4"/>
            </folder>
            <folder helpurl="globalClassifier:RegExp" id="Properties" name="Properties" tiptext="Properties for class RegExp">
               <string helpurl="RegExp:dotall:get" name="dotall" object="RegExp" playername="" text=".dotall" tiptext="Specifies whether the dot character (.) in a regular expression pattern matches new-line characters." version=""/>
               <string helpurl="RegExp:extended:get" name="extended" object="RegExp" playername="" text=".extended" tiptext="Specifies whether to use extended mode for the regular expression." version=""/>
               <string helpurl="RegExp:global:get" name="global" object="RegExp" playername="" text=".global" tiptext="Specifies whether to use global matching for the regular expression." version=""/>
               <string helpurl="RegExp:ignoreCase:get" name="ignoreCase" object="RegExp" playername="" text=".ignoreCase" tiptext="Specifies whether the regular expression ignores case sensitivity." version=""/>
               <string helpurl="RegExp:lastIndex:get" name="lastIndex" object="RegExp" playername="" text=".lastIndex" tiptext="Specifies the index position in the string at which to start the next search." version=""/>
               <string helpurl="RegExp:multiline:get" name="multiline" object="RegExp" playername="" text=".multiline" tiptext="Specifies whether the m (multiline) flag is set." version=""/>
               <string helpurl="RegExp:source:get" name="source" object="RegExp" playername="" text=".source" tiptext="Specifies the pattern portion of the regular expression." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Error,Object" helpurl="globalClassifier:SecurityError" id="SecurityError" index="true" name="SecurityError" sort="true" tiptext="The SecurityError exception is thrown when some type of security violation takes place.">
            <folder helpurl="globalClassifier:SecurityError" id="Methods" name="Methods" tiptext="Methods for class SecurityError">
               <string constructor="true" helpurl="SecurityError:SecurityError" name="SecurityError" object="SecurityError" playername="" text="new SecurityError(%message:String%)" tiptext="Creates a new SecurityError object." version="4"/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="globalClassifier:String" id="String" index="true" name="String" sort="true" tiptext="The String class is a data type that represents a string of characters.">
            <folder helpurl="globalClassifier:String" id="Methods" name="Methods" tiptext="Methods for class String">
               <string constructor="true" helpurl="String:String" name="String" object="String" playername="" text="new String(%val:String%)" tiptext="Creates a new String object initialized to the specified string." version="4"/>
               <string helpurl="String:AS3:charAt" name="charAt" object="String" playername="" text=".charAt(%[index:Number=0]%):String" tiptext="Returns the character in the position specified by the index parameter." version="4"/>
               <string helpurl="String:AS3:charCodeAt" name="charCodeAt" object="String" playername="" text=".charCodeAt(%[index:Number=0]%):Number" tiptext="Returns the numeric Unicode character code of the character at the specified index." version="4"/>
               <string helpurl="String:AS3:concat" name="concat" object="String" playername="" text=".concat(%args:restParam%):String" tiptext="Appends the supplied arguments to the end of the String object, converting them to strings if necessary, and returns the resulting string." version="4"/>
               <string helpurl="String:AS3:fromCharCode" name="fromCharCode" object="String" playername="" static="true" text="String.fromCharCode(%charCodes:restParam%):String" tiptext="Returns a string comprising the characters represented by the Unicode character codes in the parameters." version="4"/>
               <string helpurl="String:AS3:indexOf" name="indexOf" object="String" playername="" text=".indexOf(%val:String[,startIndex:Number=0]%):int" tiptext="Searches the string and returns the position of the first occurrence of val found at or after startIndex within the calling string." version="4"/>
               <string helpurl="String:AS3:lastIndexOf" name="lastIndexOf" object="String" playername="" text=".lastIndexOf(%val:String[,startIndex:Number=0x7FFFFFFF]%):int" tiptext="Searches the string from right to left and returns the index of the last occurrence of val found before startIndex." version="4"/>
               <string helpurl="String:AS3:localeCompare" name="localeCompare" object="String" playername="" text=".localeCompare(%other:String,values:restParam%):int" tiptext="Compares the sort order of two or more strings and returns the result of the comparison as an integer." version="4"/>
               <string helpurl="String:AS3:match" name="match" object="String" playername="" text=".match(%pattern:*%):Array" tiptext="Matches the specifed pattern against the string." version="4"/>
               <string helpurl="String:AS3:replace" name="replace" object="String" playername="" text=".replace(%pattern:*,repl:Object%):String" tiptext="Matches the specifed pattern against the string and returns a new string in which the first match of pattern is replaced with the content specified by repl." version="4"/>
               <string helpurl="String:AS3:search" name="search" object="String" playername="" text=".search(%pattern:*%):int" tiptext="Searches for the specifed pattern and returns the index of the first matching substring." version="4"/>
               <string helpurl="String:AS3:slice" name="slice" object="String" playername="" text=".slice(%[startIndex:Number=0,endIndex:Number=0x7fffffff]%):String" tiptext="Returns a string that includes the startIndex character and all characters up to, but not including, the endIndex character." version="4"/>
               <string helpurl="String:AS3:split" name="split" object="String" playername="" text=".split(%delimiter:*[,limit:Number=0x7fffffff]%):Array" tiptext="Splits a String object into an array of substrings by dividing it wherever the specified delimiter parameter occurs." version="4"/>
               <string helpurl="String:AS3:substr" name="substr" object="String" playername="" text=".substr(%[startIndex:Number=0,len:Number=0x7fffffff]%):String" tiptext="Returns a substring consisting of the characters that start at the specified  startIndex and with a length specified by len." version="4"/>
               <string helpurl="String:AS3:substring" name="substring" object="String" playername="" text=".substring(%[startIndex:Number=0,endIndex:Number=0x7fffffff]%):String" tiptext="Returns a string consisting of the character specified by startIndex and all characters up to endIndex - 1." version="4"/>
               <string helpurl="String:AS3:toLocaleLowerCase" name="toLocaleLowerCase" object="String" playername="" text=".toLocaleLowerCase(%%):String" tiptext="Returns a copy of this string, with all uppercase characters converted to lowercase." version="4"/>
               <string helpurl="String:AS3:toLocaleUpperCase" name="toLocaleUpperCase" object="String" playername="" text=".toLocaleUpperCase(%%):String" tiptext="Returns a copy of this string, with all lowercase characters converted to uppercase." version="4"/>
               <string helpurl="String:AS3:toLowerCase" name="toLowerCase" object="String" playername="" text=".toLowerCase(%%):String" tiptext="Returns a copy of this string, with all uppercase characters converted to lowercase." version="4"/>
               <string helpurl="String:AS3:toUpperCase" name="toUpperCase" object="String" playername="" text=".toUpperCase(%%):String" tiptext="Returns a copy of this string, with all lowercase characters converted to uppercase." version="4"/>
               <string helpurl="String:AS3:valueOf" name="valueOf" object="String" playername="" text=".valueOf(%%):String" tiptext="Returns the primitive value of a String instance." version="4"/>
            </folder>
            <folder helpurl="globalClassifier:String" id="Properties" name="Properties" tiptext="Properties for class String">
               <string helpurl="String:length:get" name="length" object="String" playername="" text=".length" tiptext="An integer specifying the number of characters in the specified String object." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Error,Object" helpurl="globalClassifier:SyntaxError" id="SyntaxError" index="true" name="SyntaxError" sort="true" tiptext="A SyntaxError exception is thrown when a parsing error occurs, for one of the following reasons:.">
            <folder helpurl="globalClassifier:SyntaxError" id="Methods" name="Methods" tiptext="Methods for class SyntaxError">
               <string constructor="true" helpurl="SyntaxError:SyntaxError" name="SyntaxError" object="SyntaxError" playername="" text="new SyntaxError(%message:String%)" tiptext="Creates a new SyntaxError object." version="4"/>
            </folder>
         </folder>
         <folder asAncestors="Error,Object" helpurl="globalClassifier:TypeError" id="TypeError" index="true" name="TypeError" sort="true" tiptext="A TypeError exception is thrown when the actual type of an operand is different from the expected type.">
            <folder helpurl="globalClassifier:TypeError" id="Methods" name="Methods" tiptext="Methods for class TypeError">
               <string constructor="true" helpurl="TypeError:TypeError" name="TypeError" object="TypeError" playername="" text="new TypeError(%message:String%)" tiptext="Creates a new TypeError object." version="4"/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="globalClassifier:uint" id="uint" index="true" name="uint" sort="true" tiptext="The uint class provides methods for working with a data type representing a 32-bit unsigned integer.">
            <folder helpurl="globalClassifier:uint" id="Methods" name="Methods" tiptext="Methods for class uint">
               <string constructor="true" helpurl="uint:uint" name="uint" object="uint" playername="" text="new uint(%num:Object%)" tiptext="Creates a new uint object." version="4"/>
               <string helpurl="uint:AS3:toExponential" name="toExponential" object="uint" playername="" text=".toExponential(%fractionDigits:uint%):String" tiptext="Returns a string representation of the number in exponential notation." version="4"/>
               <string helpurl="uint:AS3:toFixed" name="toFixed" object="uint" playername="" text=".toFixed(%fractionDigits:uint%):String" tiptext="Returns a string representation of the number in fixed-point notation." version="4"/>
               <string helpurl="uint:AS3:toPrecision" name="toPrecision" object="uint" playername="" text=".toPrecision(%precision:uint%):String" tiptext="Returns a string representation of the number either in exponential notation or in fixed-point notation." version="4"/>
               <string helpurl="uint:AS3:toString" name="toString" object="uint" playername="" text=".toString(%radix:uint%):String" tiptext="Returns the string representation of a uint object." version="4"/>
               <string helpurl="uint:AS3:valueOf" name="valueOf" object="uint" playername="" text=".valueOf(%%):uint" tiptext="Returns the primitive uint type value of the specified uint object." version="4"/>
            </folder>
            <folder helpurl="globalClassifier:uint" id="Properties" name="Properties" tiptext="Properties for class uint">
               <string constant="true" helpurl="uint:MAX_VALUE" name="MAX_VALUE" object="uint" playername="" text="uint.MAX_VALUE" tiptext="The largest representable 32-bit unsigned integer, which is 4,294,967,295." version=""/>
               <string constant="true" helpurl="uint:MIN_VALUE" name="MIN_VALUE" object="uint" playername="" text="uint.MIN_VALUE" tiptext="The smallest representable unsigned integer, which is 0." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Error,Object" helpurl="globalClassifier:URIError" id="URIError" index="true" name="URIError" sort="true" tiptext="A URIError exception is thrown when one of the global URI handling functions is used in a way that is incompatible with its definition.">
            <folder helpurl="globalClassifier:URIError" id="Methods" name="Methods" tiptext="Methods for class URIError">
               <string constructor="true" helpurl="URIError:URIError" name="URIError" object="URIError" playername="" text="new URIError(%message:String%)" tiptext="Creates a new URIError object." version="4"/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="globalClassifier:Vector" id="Vector" index="true" name="Vector" sort="true" tiptext="The Vector class lets you access and manipulate a vector &amp;#8212; an array whose elements all have the same data type.">
            <folder helpurl="globalClassifier:Vector" id="Methods" name="Methods" tiptext="Methods for class Vector">
               <string constructor="true" helpurl="Vector:Vector" name="Vector" object="Vector" playername="" text="new Vector(%[length:uint=0,fixed:Boolean=false]%)" tiptext="Creates a Vector with the specified base type." version="4"/>
               <string helpurl="Vector:AS3:concat" name="concat" object="Vector" playername="" text=".concat(%args:restParam%):Vector$T" tiptext="Concatenates the elements specified in the parameters." version="4"/>
               <string helpurl="Vector:AS3:every" name="every" object="Vector" playername="" text=".every(%callback:Function[,thisObject:Object=null]%):Boolean" tiptext="Executes a test function on each item in the Vector until an item is reached that returns false for the specified function." version="4"/>
               <string helpurl="Vector:AS3:filter" name="filter" object="Vector" playername="" text=".filter(%callback:Function[,thisObject:Object=null]%):Vector$T" tiptext="Executes a test function on each item in the Vector and returns a new Vector containing all items that return true for the specified function." version="4"/>
               <string helpurl="Vector:AS3:forEach" name="forEach" object="Vector" playername="" text=".forEach(%callback:Function[,thisObject:Object=null]%):void" tiptext="Executes a function on each item in the Vector." version="4"/>
               <string helpurl="Vector:AS3:indexOf" name="indexOf" object="Vector" playername="" text=".indexOf(%searchElement:T[,fromIndex:int=0]%):int" tiptext="Searches for an item in the Vector and returns the index position of the item." version="4"/>
               <string helpurl="Vector:AS3:join" name="join" object="Vector" playername="" text=".join(%[sep:String=,]%):String" tiptext="Converts the elements in the Vector to strings." version="4"/>
               <string helpurl="Vector:AS3:lastIndexOf" name="lastIndexOf" object="Vector" playername="" text=".lastIndexOf(%searchElement:T[,fromIndex:int=0x7fffffff]%):int" tiptext="Searches for an item in the Vector, working backward from the specified index position, and returns the index position of the matching item." version="4"/>
               <string helpurl="Vector:AS3:map" name="map" object="Vector" playername="" text=".map(%callback:Function[,thisObject:Object=null]%):Vector$T" tiptext="Executes a function on each item in the Vector, and returns a new Vector of items corresponding to the results of calling the function on each item in this Vector." version="4"/>
               <string helpurl="Vector:AS3:pop" name="pop" object="Vector" playername="" text=".pop(%%):T" tiptext="Removes the last element from the Vector and returns that element." version="4"/>
               <string helpurl="Vector:AS3:push" name="push" object="Vector" playername="" text=".push(%args:restParam%):uint" tiptext="Adds one or more elements to the end of the Vector and returns the new length of the Vector." version="4"/>
               <string helpurl="Vector:AS3:reverse" name="reverse" object="Vector" playername="" text=".reverse(%%):Vector$T" tiptext="Reverses the order of the elements in the Vector." version="4"/>
               <string helpurl="Vector:AS3:shift" name="shift" object="Vector" playername="" text=".shift(%%):T" tiptext="Removes the first element from the Vector and returns that element." version="4"/>
               <string helpurl="Vector:AS3:slice" name="slice" object="Vector" playername="" text=".slice(%[startIndex:int=0,endIndex:int=16777215]%):Vector$T" tiptext="Returns a new Vector that consists of a range of elements from the original Vector." version="4"/>
               <string helpurl="Vector:AS3:some" name="some" object="Vector" playername="" text=".some(%callback:Function[,thisObject:Object=null]%):Boolean" tiptext="Executes a test function on each item in the Vector until an item is reached that returns true." version="4"/>
               <string helpurl="Vector:AS3:sort" name="sort" object="Vector" playername="" text=".sort(%compareFunction:Function%):Vector$T" tiptext="Sorts the elements in the Vector." version="4"/>
               <string helpurl="Vector:AS3:splice" name="splice" object="Vector" playername="" text=".splice(%startIndex:int[,deleteCount:uint=4294967295,items:restParam]%):Vector$T" tiptext="Adds elements to and removes elements from the Vector." version="4"/>
               <string helpurl="Vector:toLocaleString" name="toLocaleString" object="Vector" playername="" text=".toLocaleString(%%):String" tiptext="Returns a string that represents the elements in the specified Vector." version="4"/>
               <string helpurl="Vector:toString" name="toString" object="Vector" playername="" text=".toString(%%):String" tiptext="Returns a string that represents the elements in the Vector." version="4"/>
               <string helpurl="Vector:AS3:unshift" name="unshift" object="Vector" playername="" text=".unshift(%args:restParam%):uint" tiptext="Adds one or more elements to the beginning of the Vector and returns the new length of the Vector." version="4"/>
            </folder>
            <folder helpurl="globalClassifier:Vector" id="Properties" name="Properties" tiptext="Properties for class Vector">
               <string helpurl="Vector:fixed:get" name="fixed" object="Vector" playername="" text=".fixed" tiptext="Indicates whether the length property of the Vector can be changed." version=""/>
               <string helpurl="Vector:length:get" name="length" object="Vector" playername="" text=".length" tiptext="The range of valid indices available in the Vector." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Error,Object" helpurl="globalClassifier:VerifyError" id="VerifyError" index="true" name="VerifyError" sort="true" tiptext="The VerifyError class represents an error that occurs when a malformed or corrupted SWF file is encountered.">
            <folder helpurl="globalClassifier:VerifyError" id="Methods" name="Methods" tiptext="Methods for class VerifyError">
               <string constructor="true" helpurl="VerifyError:VerifyError" name="VerifyError" object="VerifyError" playername="" text="new VerifyError(%message:String%)" tiptext="Creates a new VerifyError object." version="4"/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="globalClassifier:XML" id="XML" index="true" name="XML" sort="true" tiptext="The XML class contains methods and properties for working with XML objects.">
            <folder helpurl="globalClassifier:XML" id="Methods" name="Methods" tiptext="Methods for class XML">
               <string constructor="true" helpurl="XML:XML" name="XML" object="XML" playername="" text="new XML(%value:Object%)" tiptext="Creates a new XML object." version="9"/>
               <string helpurl="XML:AS3:addNamespace" name="addNamespace" object="XML" playername="" text=".addNamespace(%ns:Object%):XML" tiptext="Adds a namespace to the set of in-scope namespaces for the XML object." version="9"/>
               <string helpurl="XML:AS3:appendChild" name="appendChild" object="XML" playername="" text=".appendChild(%child:Object%):XML" tiptext="Appends the given child to the end of the XML object's properties." version="9"/>
               <string helpurl="XML:AS3:attribute" name="attribute" object="XML" playername="" text=".attribute(%attributeName:*%):XMLList" tiptext="Returns the XML value of the attribute that has the name matching the attributeName parameter." version="9"/>
               <string helpurl="XML:AS3:attributes" name="attributes" object="XML" playername="" text=".attributes(%%):XMLList" tiptext="Returns a list of attribute values for the given XML object." version="9"/>
               <string helpurl="XML:AS3:childIndex" name="childIndex" object="XML" playername="" text=".childIndex(%%):int" tiptext="Identifies the zero-indexed position of this XML object within the context of its parent." version="9"/>
               <string helpurl="XML:AS3:child" name="child" object="XML" playername="" text=".child(%propertyName:Object%):XMLList" tiptext="Lists the children of an XML object." version="9"/>
               <string helpurl="XML:AS3:children" name="children" object="XML" playername="" text=".children(%%):XMLList" tiptext="Lists the children of the XML object in the sequence in which they appear." version="9"/>
               <string helpurl="XML:AS3:comments" name="comments" object="XML" playername="" text=".comments(%%):XMLList" tiptext="Lists the properties of the XML object that contain XML comments." version="9"/>
               <string helpurl="XML:AS3:contains" name="contains" object="XML" playername="" text=".contains(%value:XML%):Boolean" tiptext="Compares the XML object against the given value parameter." version="9"/>
               <string helpurl="XML:AS3:copy" name="copy" object="XML" playername="" text=".copy(%%):XML" tiptext="Returns a copy of the given XML object." version="9"/>
               <string helpurl="XML:AS3:defaultSettings" name="defaultSettings" object="XML" playername="" static="true" text="XML.defaultSettings(%%):Object" tiptext="Returns an object with the following properties set to the default values: ignoreComments, ignoreProcessingInstructions, ignoreWhitespace, prettyIndent, and prettyPrinting." version="9"/>
               <string helpurl="XML:AS3:descendants" name="descendants" object="XML" playername="" text=".descendants(%[name:Object=*]%):XMLList" tiptext="Returns all descendants (children, grandchildren, great-grandchildren, and so on) of the XML object that have the given name parameter." version="9"/>
               <string helpurl="XML:AS3:elements" name="elements" object="XML" playername="" text=".elements(%[name:Object=*]%):XMLList" tiptext="Lists the elements of an XML object." version="9"/>
               <string helpurl="XML:AS3:hasComplexContent" name="hasComplexContent" object="XML" playername="" text=".hasComplexContent(%%):Boolean" tiptext="Checks to see whether the XML object contains complex content." version="9"/>
               <string helpurl="XML:AS3:hasOwnProperty" name="hasOwnProperty" object="XML" playername="" text=".hasOwnProperty(%p:String%):Boolean" tiptext="Checks to see whether the object has the property specified by the p parameter." version="9"/>
               <string helpurl="XML:AS3:hasSimpleContent" name="hasSimpleContent" object="XML" playername="" text=".hasSimpleContent(%%):Boolean" tiptext="Checks to see whether the XML object contains simple content." version="9"/>
               <string helpurl="XML:AS3:inScopeNamespaces" name="inScopeNamespaces" object="XML" playername="" text=".inScopeNamespaces(%%):Array" tiptext="Lists the namespaces for the XML object, based on the object's parent." version="9"/>
               <string helpurl="XML:AS3:insertChildAfter" name="insertChildAfter" object="XML" playername="" text=".insertChildAfter(%child1:Object,child2:Object%)" tiptext="Inserts the given child2 parameter after the child1 parameter in this XML object and returns the resulting object." version="9"/>
               <string helpurl="XML:AS3:insertChildBefore" name="insertChildBefore" object="XML" playername="" text=".insertChildBefore(%child1:Object,child2:Object%)" tiptext="Inserts the given child2 parameter before the child1 parameter in this XML object and returns the resulting object." version="9"/>
               <string helpurl="XML:AS3:length" name="length" object="XML" playername="" text=".length(%%):int" tiptext="For XML objects, this method always returns the integer 1." version="9"/>
               <string helpurl="XML:AS3:localName" name="localName" object="XML" playername="" text=".localName(%%):Object" tiptext="Gives the local name portion of the qualified name of the XML object." version="9"/>
               <string helpurl="XML:AS3:name" name="name" object="XML" playername="" text=".name(%%):Object" tiptext="Gives the qualified name for the XML object." version="9"/>
               <string helpurl="XML:AS3:namespaceDeclarations" name="namespaceDeclarations" object="XML" playername="" text=".namespaceDeclarations(%%):Array" tiptext="Lists namespace declarations associated with the XML object in the context of its parent." version="9"/>
               <string helpurl="XML:AS3:namespace" name="namespace" object="XML" playername="" text=".namespace(%[prefix:String=null]%)" tiptext="If no parameter is provided, gives the namespace associated with the qualified name of this XML object." version="9"/>
               <string helpurl="XML:AS3:nodeKind" name="nodeKind" object="XML" playername="" text=".nodeKind(%%):String" tiptext="Specifies the type of node: text, comment, processing-instruction, attribute, or element." version="9"/>
               <string helpurl="XML:AS3:normalize" name="normalize" object="XML" playername="" text=".normalize(%%):XML" tiptext="For the XML object and all descendant XML objects, merges adjacent text nodes and eliminates empty text nodes." version="9"/>
               <string helpurl="XML:AS3:parent" name="parent" object="XML" playername="" text=".parent(%%)" tiptext="Returns the parent of the XML object." version="9"/>
               <string helpurl="XML:AS3:prependChild" name="prependChild" object="XML" playername="" text=".prependChild(%value:Object%):XML" tiptext="Inserts a copy of the provided child object into the XML element before any existing XML properties for that element." version="9"/>
               <string helpurl="XML:AS3:processingInstructions" name="processingInstructions" object="XML" playername="" text=".processingInstructions(%[name:String=*]%):XMLList" tiptext="If a name parameter is provided, lists all the children of the XML object that contain processing instructions with that name." version="9"/>
               <string helpurl="XML:AS3:propertyIsEnumerable" name="propertyIsEnumerable" object="XML" playername="" text=".propertyIsEnumerable(%p:String%):Boolean" tiptext="Checks whether the property p is in the set of properties that can be iterated in a for..in statement applied to the XML object." version="9"/>
               <string helpurl="XML:AS3:removeNamespace" name="removeNamespace" object="XML" playername="" text=".removeNamespace(%ns:Namespace%):XML" tiptext="Removes the given namespace for this object and all descendants." version="9"/>
               <string helpurl="XML:AS3:replace" name="replace" object="XML" playername="" text=".replace(%propertyName:Object,value:XML%):XML" tiptext="Replaces the properties specified by the propertyName parameter with the given value parameter." version="9"/>
               <string helpurl="XML:AS3:setChildren" name="setChildren" object="XML" playername="" text=".setChildren(%value:Object%):XML" tiptext="Replaces the child properties of the XML object with the specified set of XML properties, provided in the value parameter." version="9"/>
               <string helpurl="XML:AS3:setLocalName" name="setLocalName" object="XML" playername="" text=".setLocalName(%name:String%):void" tiptext="Changes the local name of the XML object to the given name parameter." version="9"/>
               <string helpurl="XML:AS3:setName" name="setName" object="XML" playername="" text=".setName(%name:String%):void" tiptext="Sets the name of the XML object to the given qualified name or attribute name." version="9"/>
               <string helpurl="XML:AS3:setNamespace" name="setNamespace" object="XML" playername="" text=".setNamespace(%ns:Namespace%):void" tiptext="Sets the namespace associated with the XML object." version="9"/>
               <string helpurl="XML:AS3:setSettings" name="setSettings" object="XML" playername="" static="true" text="XML.setSettings(%rest:restParam%):void" tiptext="Sets values for the following XML properties: ignoreComments, ignoreProcessingInstructions, ignoreWhitespace, prettyIndent, and prettyPrinting." version="9"/>
               <string helpurl="XML:AS3:settings" name="settings" object="XML" playername="" static="true" text="XML.settings(%%):Object" tiptext="Retrieves the following properties: ignoreComments, ignoreProcessingInstructions, ignoreWhitespace, prettyIndent, and prettyPrinting." version="9"/>
               <string helpurl="XML:AS3:text" name="text" object="XML" playername="" text=".text(%%):XMLList" tiptext="Returns an XMLList object of all XML properties of the XML object that represent XML text nodes." version="9"/>
               <string helpurl="XML:AS3:toString" name="toString" object="XML" playername="" text=".toString(%%):String" tiptext="Returns a string representation of the XML object." version="9"/>
               <string helpurl="XML:AS3:toXMLString" name="toXMLString" object="XML" playername="" text=".toXMLString(%%):String" tiptext="Returns a string representation of the XML object." version="9"/>
               <string helpurl="XML:AS3:valueOf" name="valueOf" object="XML" playername="" text=".valueOf(%%):XML" tiptext="Returns the XML object." version="9"/>
            </folder>
            <folder helpurl="globalClassifier:XML" id="Properties" name="Properties" tiptext="Properties for class XML">
               <string helpurl="XML:ignoreComments:get" name="ignoreComments" object="XML" playername="" text=".ignoreComments" tiptext="Determines whether XML comments are ignored when XML objects parse the source XML data." version=""/>
               <string helpurl="XML:ignoreProcessingInstructions:get" name="ignoreProcessingInstructions" object="XML" playername="" text=".ignoreProcessingInstructions" tiptext="Determines whether XML processing instructions are ignored when XML objects parse the source XML data." version=""/>
               <string helpurl="XML:ignoreWhitespace:get" name="ignoreWhitespace" object="XML" playername="" text=".ignoreWhitespace" tiptext="Determines whether white space characters at the beginning and end of text nodes are ignored during parsing." version=""/>
               <string helpurl="XML:prettyIndent:get" name="prettyIndent" object="XML" playername="" text=".prettyIndent" tiptext="Determines the amount of indentation applied by the toString() and toXMLString() methods when the XML.prettyPrinting property is set to true." version=""/>
               <string helpurl="XML:prettyPrinting:get" name="prettyPrinting" object="XML" playername="" text=".prettyPrinting" tiptext="Determines whether the toString() and toXMLString() methods normalize white space characters between some tags." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="globalClassifier:XMLList" id="XMLList" index="true" name="XMLList" sort="true" tiptext="The XMLList class contains methods for working with one or more XML elements.">
            <folder helpurl="globalClassifier:XMLList" id="Methods" name="Methods" tiptext="Methods for class XMLList">
               <string constructor="true" helpurl="XMLList:XMLList" name="XMLList" object="XMLList" playername="" text="new XMLList(%value:Object%)" tiptext="Creates a new XMLList object." version="9"/>
               <string helpurl="XMLList:AS3:attribute" name="attribute" object="XMLList" playername="" text=".attribute(%attributeName:*%):XMLList" tiptext="Calls the attribute() method of each XML object and returns an XMLList object of the results." version="9"/>
               <string helpurl="XMLList:AS3:attributes" name="attributes" object="XMLList" playername="" text=".attributes(%%):XMLList" tiptext="Calls the attributes() method of each XML object and returns an XMLList object of attributes for each XML object." version="9"/>
               <string helpurl="XMLList:AS3:child" name="child" object="XMLList" playername="" text=".child(%propertyName:Object%):XMLList" tiptext="Calls the child() method of each XML object and returns an XMLList object thatcontains the results in order." version="9"/>
               <string helpurl="XMLList:AS3:children" name="children" object="XMLList" playername="" text=".children(%%):XMLList" tiptext="Calls the children() method of each XML object and returns an XMLList object that contains the results." version="9"/>
               <string helpurl="XMLList:AS3:comments" name="comments" object="XMLList" playername="" text=".comments(%%):XMLList" tiptext="Calls the comments() method of each XML object and returns an XMLList of comments." version="9"/>
               <string helpurl="XMLList:AS3:contains" name="contains" object="XMLList" playername="" text=".contains(%value:XML%):Boolean" tiptext="Checks whether the XMLList object contains an XML object that is equal to the given value parameter." version="9"/>
               <string helpurl="XMLList:AS3:copy" name="copy" object="XMLList" playername="" text=".copy(%%):XMLList" tiptext="Returns a copy of the given XMLList object." version="9"/>
               <string helpurl="XMLList:AS3:descendants" name="descendants" object="XMLList" playername="" text=".descendants(%[name:Object=*]%):XMLList" tiptext="Returns all descendants (children, grandchildren, great-grandchildren, and so on) of the XML object that have the given name parameter." version="9"/>
               <string helpurl="XMLList:AS3:elements" name="elements" object="XMLList" playername="" text=".elements(%[name:Object=*]%):XMLList" tiptext="Calls the elements() method of each XML object." version="9"/>
               <string helpurl="XMLList:AS3:hasComplexContent" name="hasComplexContent" object="XMLList" playername="" text=".hasComplexContent(%%):Boolean" tiptext="Checks whether the XMLList object contains complex content." version="9"/>
               <string helpurl="XMLList:AS3:hasOwnProperty" name="hasOwnProperty" object="XMLList" playername="" text=".hasOwnProperty(%p:String%):Boolean" tiptext="Checks for the property specified by p." version="9"/>
               <string helpurl="XMLList:AS3:hasSimpleContent" name="hasSimpleContent" object="XMLList" playername="" text=".hasSimpleContent(%%):Boolean" tiptext="Checks whether the XMLList object contains simple content." version="9"/>
               <string helpurl="XMLList:AS3:length" name="length" object="XMLList" playername="" text=".length(%%):int" tiptext="Returns the number of properties in the XMLList object." version="9"/>
               <string helpurl="XMLList:AS3:normalize" name="normalize" object="XMLList" playername="" text=".normalize(%%):XMLList" tiptext="Merges adjacent text nodes and eliminates empty text nodes for each of the following: all text nodes in the XMLList, all the XML objects contained in the XMLList, and the descendants of all the XML objects in the XMLList." version="9"/>
               <string helpurl="XMLList:AS3:parent" name="parent" object="XMLList" playername="" text=".parent(%%):Object" tiptext="Returns the parent of the XMLList object if all items in the XMLList object have the same parent." version="9"/>
               <string helpurl="XMLList:AS3:processingInstructions" name="processingInstructions" object="XMLList" playername="" text=".processingInstructions(%[name:String=*]%):XMLList" tiptext="If a name parameter is provided, lists all the children of the XMLList object that contain processing instructions with that name." version="9"/>
               <string helpurl="XMLList:AS3:propertyIsEnumerable" name="propertyIsEnumerable" object="XMLList" playername="" text=".propertyIsEnumerable(%p:String%):Boolean" tiptext="Checks whether the property p is in the set of properties that can be iterated in a for..in statement applied to the XMLList object." version="9"/>
               <string helpurl="XMLList:AS3:text" name="text" object="XMLList" playername="" text=".text(%%):XMLList" tiptext="Calls the text() method of each XML object and returns an XMLList object that contains the results." version="9"/>
               <string helpurl="XMLList:AS3:toString" name="toString" object="XMLList" playername="" text=".toString(%%):String" tiptext="Returns a string representation of all the XML objects in an XMLList object." version="9"/>
               <string helpurl="XMLList:AS3:toXMLString" name="toXMLString" object="XMLList" playername="" text=".toXMLString(%%):String" tiptext="Returns a string representation of all the XML objects in an XMLList object." version="9"/>
               <string helpurl="XMLList:AS3:valueOf" name="valueOf" object="XMLList" playername="" text=".valueOf(%%):XMLList" tiptext="Returns the XMLList object." version="9"/>
            </folder>
         </folder>
      </folder>
      <folder id="Language Elements" index="true" name="Language Elements" sort="true" tiptext="Language elements that perform or specify an action at runtime">
         <folder helpurl="globalClassifier:methodSummary" id="Global Functions" name="Global Functions" tiptext="Methods available in every script">
            <string helpurl="globalClassifier:Array" name="Array" playername="" text="Array(%args:restParam%):Array" tiptext="Creates a new array." version="4"/>
            <string helpurl="globalClassifier:Boolean" name="Boolean" playername="" text="Boolean(%expression:Object%):Boolean" tiptext="Converts the expression parameter to a Boolean value and returns the value." version="4"/>
            <string helpurl="globalClassifier:Number" name="Number" playername="" text="Number(%expression:Object%):Number" tiptext="Converts a given value to a Number value." version="4"/>
            <string helpurl="globalClassifier:Object" name="Object" playername="" text="Object(%value:Object%):Object" tiptext="Every value in ActionScript 3.0 is an object, which means that calling Object() on a value returns that value." version="4"/>
            <string helpurl="globalClassifier:String" name="String" playername="" text="String(%expression:Object%):String" tiptext="Returns a string representation of the specified parameter." version="4"/>
            <string helpurl="globalClassifier:Vector" name="Vector" playername="" text="Vector(%sourceArray:Object%):Vector$T" tiptext="Creates a new Vector instance whose elements are instances of the specified data type." version="4"/>
            <string helpurl="globalClassifier:XMLList" name="XMLList" playername="" text="XMLList(%expression:Object%):XMLList" tiptext="Converts an object to an XMLList object." version="4"/>
            <string helpurl="globalClassifier:XML" name="XML" playername="" text="XML(%expression:Object%):XML" tiptext="Converts an object to an XML object." version="4"/>
            <string helpurl="globalClassifier:decodeURIComponent" name="decodeURIComponent" playername="" text="decodeURIComponent(%uri:String%):String" tiptext="Decodes an encoded URI component into a string." version="4"/>
            <string helpurl="globalClassifier:decodeURI" name="decodeURI" playername="" text="decodeURI(%uri:String%):String" tiptext="Decodes an encoded URI into a string." version="4"/>
            <string helpurl="globalClassifier:encodeURIComponent" name="encodeURIComponent" playername="" text="encodeURIComponent(%uri:String%):String" tiptext="Encodes a string into a valid URI component." version="4"/>
            <string helpurl="globalClassifier:encodeURI" name="encodeURI" playername="" text="encodeURI(%uri:String%):String" tiptext="Encodes a string into a valid URI (Uniform Resource Identifier)." version="4"/>
            <string helpurl="globalClassifier:escape" name="escape" playername="" text="escape(%str:String%):String" tiptext="Converts the parameter to a string and encodes it in a URL-encoded format, where most nonalphanumeric characters are replaced with % hexadecimal sequences." version="4"/>
            <string helpurl="globalClassifier:int" name="int" playername="" text="int(%value:Number%):int" tiptext="Converts a given numeric value to an integer value." version="4"/>
            <string helpurl="globalClassifier:isFinite" name="isFinite" playername="" text="isFinite(%num:Number%):Boolean" tiptext="Returns true if the value is a finite number, or false if the value is Infinity or -Infinity." version="4"/>
            <string helpurl="globalClassifier:isNaN" name="isNaN" playername="" text="isNaN(%num:Number%):Boolean" tiptext="Returns true if the value is NaN(not a number)." version="4"/>
            <string helpurl="globalClassifier:isXMLName" name="isXMLName" playername="" text="isXMLName(%str:String%):Boolean" tiptext="Determines whether the specified string is a valid name for an XML element or attribute." version="4"/>
            <string helpurl="globalClassifier:parseFloat" name="parseFloat" playername="" text="parseFloat(%str:String%):Number" tiptext="Converts a string to a floating-point number." version="4"/>
            <string helpurl="globalClassifier:parseInt" name="parseInt" playername="" text="parseInt(%str:String[,radix:uint=0]%):Number" tiptext="Converts a string to an integer." version="4"/>
            <string helpurl="globalClassifier:trace" name="trace" playername="" quickey="tr" text="trace(%arguments:restParam%):void" tiptext="Displays expressions, or writes to log files, while debugging." version="4"/>
            <string helpurl="globalClassifier:uint" name="uint" playername="" text="uint(%value:Number%):uint" tiptext="Converts a given numeric value to an unsigned integer value." version="4"/>
            <string helpurl="globalClassifier:unescape" name="unescape" playername="" text="unescape(%str:String%):String" tiptext="Evaluates the parameter str as a string, decodes the string from URL-encoded format (converting all hexadecimal sequences to ASCII characters), and returns the string." version="4"/>
         </folder>
         <folder helpurl="globalClassifier:constantSummary" id="Global Constants" name="Global Constants" tiptext="Constants availabe in every script">
            <string constant="true" helpurl="globalValue:-Infinity" name="-Infinity" playername="" text="-Infinity" tiptext="A special value representing negative Infinity." version=""/>
            <string constant="true" helpurl="globalValue:Infinity" name="Infinity" playername="" text="Infinity" tiptext="A special value representing positive Infinity." version=""/>
            <string constant="true" helpurl="globalValue:NaN" name="NaN" playername="" text="NaN" tiptext="A special member of the Number data type that represents a value that is &quot;not a number&quot; (NaN)." version=""/>
            <string constant="true" helpurl="globalValue:undefined" name="undefined" playername="" text="undefined" tiptext="A special value that applies to untyped variables that have not been initialized or dynamic object properties that are not initialized." version=""/>
         </folder>
      </folder>
      <folder helpurl="fl.accessibility" id="fl.accessibility" name="fl.accessibility" sort="true" tiptext="Classes for package fl.accessibility">
         <folder asAncestors="flash.accessibility:AccessibilityImplementation,Object" helpurl="fl.accessibility:AccImpl" id="[fl.accessibility.AccImpl]" index="true" name="AccImpl" sort="true" tiptext="The AccImpl class, also called the Accessibility Implementation class, is the base class for the implementation of accessibility in components.">
            <folder helpurl="fl.accessibility:AccImpl" id="Methods" name="Methods" tiptext="Methods for class AccImpl">
               <string helpurl="fl.accessibility:AccImpl:enableAccessibility" name="enableAccessibility" object="[fl.accessibility.AccImpl]" playername="" static="true" text="AccImpl.enableAccessibility(%%):void" tiptext="Enables accessibility for a component." version="1.0"/>
            </folder>
         </folder>
         <folder asAncestors="fl.accessibility:LabelButtonAccImpl,fl.accessibility:AccImpl,flash.accessibility:AccessibilityImplementation,Object" helpurl="fl.accessibility:ButtonAccImpl" id="[fl.accessibility.ButtonAccImpl]" index="true" name="ButtonAccImpl" sort="true" tiptext="The ButtonAccImpl class, also called the Button Accessibility Implementation class, enables communication between a Button component and a screen reader.">
            <folder helpurl="fl.accessibility:ButtonAccImpl" id="Methods" name="Methods" tiptext="Methods for class ButtonAccImpl">
               <string helpurl="fl.accessibility:ButtonAccImpl:enableAccessibility" name="enableAccessibility" object="[fl.accessibility.ButtonAccImpl]" playername="" static="true" text="ButtonAccImpl.enableAccessibility(%%):void" tiptext="Enables accessibility for a Button component." version="1.0"/>
            </folder>
         </folder>
         <folder asAncestors="fl.accessibility:LabelButtonAccImpl,fl.accessibility:AccImpl,flash.accessibility:AccessibilityImplementation,Object" helpurl="fl.accessibility:CheckBoxAccImpl" id="[fl.accessibility.CheckBoxAccImpl]" index="true" name="CheckBoxAccImpl" sort="true" tiptext="The CheckBoxAccImpl class, also called the CheckBox Accessibility Implementation class, is used to make a CheckBox component accessible.">
            <folder helpurl="fl.accessibility:CheckBoxAccImpl" id="Methods" name="Methods" tiptext="Methods for class CheckBoxAccImpl">
               <string helpurl="fl.accessibility:CheckBoxAccImpl:enableAccessibility" name="enableAccessibility" object="[fl.accessibility.CheckBoxAccImpl]" playername="" static="true" text="CheckBoxAccImpl.enableAccessibility(%%):void" tiptext="Enables accessibility for a CheckBox component." version="1.0"/>
            </folder>
         </folder>
         <folder asAncestors="fl.accessibility:AccImpl,flash.accessibility:AccessibilityImplementation,Object" helpurl="fl.accessibility:ComboBoxAccImpl" id="[fl.accessibility.ComboBoxAccImpl]" index="true" name="ComboBoxAccImpl" sort="true" tiptext="The ComboBoxAccImpl class, also called the ComboBox Accessibility Implementation class, is used to make a ComboBox component accessible.">
            <folder helpurl="fl.accessibility:ComboBoxAccImpl" id="Methods" name="Methods" tiptext="Methods for class ComboBoxAccImpl">
               <string helpurl="fl.accessibility:ComboBoxAccImpl:enableAccessibility" name="enableAccessibility" object="[fl.accessibility.ComboBoxAccImpl]" playername="" static="true" text="ComboBoxAccImpl.enableAccessibility(%%):void" tiptext="Enables accessibility for a ComboBox component." version="1.0"/>
            </folder>
         </folder>
         <folder asAncestors="fl.accessibility:SelectableListAccImpl,fl.accessibility:AccImpl,flash.accessibility:AccessibilityImplementation,Object" helpurl="fl.accessibility:DataGridAccImpl" id="[fl.accessibility.DataGridAccImpl]" index="true" name="DataGridAccImpl" sort="true" tiptext="The DataGridAccImpl class, also called the DataGrid Accessibility Implementation class, is used to make a DataGrid component accessible.">
            <folder helpurl="fl.accessibility:DataGridAccImpl" id="Methods" name="Methods" tiptext="Methods for class DataGridAccImpl">
               <string helpurl="fl.accessibility:DataGridAccImpl:enableAccessibility" name="enableAccessibility" object="[fl.accessibility.DataGridAccImpl]" playername="" static="true" text="DataGridAccImpl.enableAccessibility(%%):void" tiptext="Enables accessibility for a DataGrid component." version="1.0"/>
            </folder>
         </folder>
         <folder asAncestors="fl.accessibility:AccImpl,flash.accessibility:AccessibilityImplementation,Object" helpurl="fl.accessibility:LabelButtonAccImpl" id="[fl.accessibility.LabelButtonAccImpl]" index="true" name="LabelButtonAccImpl" sort="true" tiptext="The LabelButtonAccImpl class, also called the LabelButton Accessibility Implementation class, is used to make a LabelButton component accessible.">
            <folder helpurl="fl.accessibility:LabelButtonAccImpl" id="Methods" name="Methods" tiptext="Methods for class LabelButtonAccImpl">
               <string helpurl="fl.accessibility:LabelButtonAccImpl:enableAccessibility" name="enableAccessibility" object="[fl.accessibility.LabelButtonAccImpl]" playername="" static="true" text="LabelButtonAccImpl.enableAccessibility(%%):void" tiptext="Enables accessibility for a LabelButton component." version="1.0"/>
            </folder>
         </folder>
         <folder asAncestors="fl.accessibility:SelectableListAccImpl,fl.accessibility:AccImpl,flash.accessibility:AccessibilityImplementation,Object" helpurl="fl.accessibility:ListAccImpl" id="[fl.accessibility.ListAccImpl]" index="true" name="ListAccImpl" sort="true" tiptext="The ListAccImpl class, also called the List Accessiblity Implementation class, is used to make a List component accessible.">
            <folder helpurl="fl.accessibility:ListAccImpl" id="Methods" name="Methods" tiptext="Methods for class ListAccImpl">
               <string helpurl="fl.accessibility:ListAccImpl:enableAccessibility" name="enableAccessibility" object="[fl.accessibility.ListAccImpl]" playername="" static="true" text="ListAccImpl.enableAccessibility(%%):void" tiptext="Enables accessibility for a List component." version="1.0"/>
            </folder>
         </folder>
         <folder asAncestors="fl.accessibility:CheckBoxAccImpl,fl.accessibility:LabelButtonAccImpl,fl.accessibility:AccImpl,flash.accessibility:AccessibilityImplementation,Object" helpurl="fl.accessibility:RadioButtonAccImpl" id="[fl.accessibility.RadioButtonAccImpl]" index="true" name="RadioButtonAccImpl" sort="true" tiptext="The RadioButtonAccImpl class, also called the RadioButton Accessibility Implementation class, is used to make a RadioButton component accessible.">
            <folder helpurl="fl.accessibility:RadioButtonAccImpl" id="Methods" name="Methods" tiptext="Methods for class RadioButtonAccImpl">
               <string helpurl="fl.accessibility:RadioButtonAccImpl:enableAccessibility" name="enableAccessibility" object="[fl.accessibility.RadioButtonAccImpl]" playername="" static="true" text="RadioButtonAccImpl.enableAccessibility(%%):void" tiptext="Enables accessibility for a RadioButton component." version="1.0"/>
            </folder>
         </folder>
         <folder asAncestors="fl.accessibility:AccImpl,flash.accessibility:AccessibilityImplementation,Object" helpurl="fl.accessibility:SelectableListAccImpl" id="[fl.accessibility.SelectableListAccImpl]" index="true" name="SelectableListAccImpl" sort="true" tiptext="The SelectableListAccImpl class, also called the SelectableList Accessibility Implementation class, is used to make a SelectableList component accessible.">
            <folder helpurl="fl.accessibility:SelectableListAccImpl" id="Methods" name="Methods" tiptext="Methods for class SelectableListAccImpl">
               <string helpurl="fl.accessibility:SelectableListAccImpl:enableAccessibility" name="enableAccessibility" object="[fl.accessibility.SelectableListAccImpl]" playername="" static="true" text="SelectableListAccImpl.enableAccessibility(%%):void" tiptext="Enables accessibility for a SelectableList component." version="1.0"/>
            </folder>
         </folder>
         <folder asAncestors="fl.accessibility:SelectableListAccImpl,fl.accessibility:AccImpl,flash.accessibility:AccessibilityImplementation,Object" helpurl="fl.accessibility:TileListAccImpl" id="[fl.accessibility.TileListAccImpl]" index="true" name="TileListAccImpl" sort="true" tiptext="The TileListAccImpl class, also called the Tile List Accessibility Implementation class, is used to make a TileList component accessible.">
            <folder helpurl="fl.accessibility:TileListAccImpl" id="Methods" name="Methods" tiptext="Methods for class TileListAccImpl">
               <string helpurl="fl.accessibility:TileListAccImpl:enableAccessibility" name="enableAccessibility" object="[fl.accessibility.TileListAccImpl]" playername="" static="true" text="TileListAccImpl.enableAccessibility(%%):void" tiptext="Enables accessibility for a TileList component." version="1.0"/>
            </folder>
         </folder>
         <folder asAncestors="flash.accessibility:AccessibilityProperties,Object" helpurl="fl.accessibility:UIComponentAccImpl" id="[fl.accessibility.UIComponentAccImpl]" index="true" name="UIComponentAccImpl" sort="true" tiptext="The UIComponentAccImpl class, also called the UIComponent Accessibility Implementation class, is used to make a UIComponent accessible.">
            <folder helpurl="fl.accessibility:UIComponentAccImpl" id="Methods" name="Methods" tiptext="Methods for class UIComponentAccImpl">
               <string helpurl="fl.accessibility:UIComponentAccImpl:enableAccessibility" name="enableAccessibility" object="[fl.accessibility.UIComponentAccImpl]" playername="" static="true" text="UIComponentAccImpl.enableAccessibility(%%):void" tiptext="Enables accessibility for a UIComponent component." version="1.0"/>
            </folder>
         </folder>
      </folder>
      <folder helpurl="fl.containers" id="fl.containers" name="fl.containers" sort="true" tiptext="Classes for package fl.containers">
         <folder asAncestors="fl.core:UIComponent,flash.display:Sprite,flash.display:DisplayObjectContainer,flash.display:InteractiveObject,flash.display:DisplayObject,flash.events:EventDispatcher,Object" helpurl="fl.containers:BaseScrollPane" id="[fl.containers.BaseScrollPane]" index="true" name="BaseScrollPane" sort="true" tiptext="The BaseScrollPane class handles basic scroll pane functionality including events, styling, drawing the mask and background, the layout of scroll bars, and the handling of scroll positions.">
            <folder helpurl="fl.containers:BaseScrollPane" id="Methods" name="Methods" tiptext="Methods for class BaseScrollPane">
               <string constructor="true" helpurl="fl.containers:BaseScrollPane:BaseScrollPane" name="BaseScrollPane" object="[fl.containers.BaseScrollPane]" playername="" text="new BaseScrollPane(%%)" tiptext="Creates a new BaseScrollPane component instance." version="1.0"/>
               <string helpurl="fl.containers:BaseScrollPane:getStyleDefinition" name="getStyleDefinition" object="[fl.containers.BaseScrollPane]" playername="" static="true" text="BaseScrollPane.getStyleDefinition(%%):Object" tiptext="Retrieves the default style map for the current component." version="1.0"/>
            </folder>
            <folder helpurl="fl.containers:BaseScrollPane" id="Properties" name="Properties" tiptext="Properties for class BaseScrollPane">
               <string helpurl="fl.containers:BaseScrollPane:horizontalLineScrollSize:get" name="horizontalLineScrollSize" object="[fl.containers.BaseScrollPane]" playername="" text=".horizontalLineScrollSize" tiptext="Gets or sets a value that describes the amount of content to be scrolled, horizontally, when a scroll arrow is clicked." version=""/>
               <string helpurl="fl.containers:BaseScrollPane:horizontalPageScrollSize:get" name="horizontalPageScrollSize" object="[fl.containers.BaseScrollPane]" playername="" text=".horizontalPageScrollSize" tiptext="Gets or sets the count of pixels by which to move the scroll thumb on the horizontal scroll bar when the scroll bar track is pressed." version=""/>
               <string helpurl="fl.containers:BaseScrollPane:horizontalScrollBar:get" name="horizontalScrollBar" object="[fl.containers.BaseScrollPane]" playername="" text=".horizontalScrollBar" tiptext="Gets a reference to the horizontal scroll bar." version=""/>
               <string helpurl="fl.containers:BaseScrollPane:horizontalScrollPolicy:get" name="horizontalScrollPolicy" object="[fl.containers.BaseScrollPane]" playername="" text=".horizontalScrollPolicy" tiptext="Gets or sets a value that indicates the state of the horizontal scroll bar." version=""/>
               <string helpurl="fl.containers:BaseScrollPane:horizontalScrollPosition:get" name="horizontalScrollPosition" object="[fl.containers.BaseScrollPane]" playername="" text=".horizontalScrollPosition" tiptext="Gets or sets a value that describes the horizontal position of the horizontal scroll bar in the scroll pane, in pixels." version=""/>
               <string helpurl="fl.containers:BaseScrollPane:maxHorizontalScrollPosition:get" name="maxHorizontalScrollPosition" object="[fl.containers.BaseScrollPane]" playername="" text=".maxHorizontalScrollPosition" tiptext="Gets the maximum horizontal scroll position for the current content, in pixels." version=""/>
               <string helpurl="fl.containers:BaseScrollPane:maxVerticalScrollPosition:get" name="maxVerticalScrollPosition" object="[fl.containers.BaseScrollPane]" playername="" text=".maxVerticalScrollPosition" tiptext="Gets the maximum vertical scroll position for the current content, in pixels." version=""/>
               <string helpurl="fl.containers:BaseScrollPane:useBitmapScrolling:get" name="useBitmapScrolling" object="[fl.containers.BaseScrollPane]" playername="" text=".useBitmapScrolling" tiptext="When set to true, the cacheAsBitmap property for the scrolling content is set to true; when set to false this value is turned off." version=""/>
               <string helpurl="fl.containers:BaseScrollPane:verticalLineScrollSize:get" name="verticalLineScrollSize" object="[fl.containers.BaseScrollPane]" playername="" text=".verticalLineScrollSize" tiptext="Gets or sets a value that describes how many pixels to scroll vertically when a scroll arrow is clicked." version=""/>
               <string helpurl="fl.containers:BaseScrollPane:verticalPageScrollSize:get" name="verticalPageScrollSize" object="[fl.containers.BaseScrollPane]" playername="" text=".verticalPageScrollSize" tiptext="Gets or sets the count of pixels by which to move the scroll thumb on the vertical scroll bar when the scroll bar track is pressed." version=""/>
               <string helpurl="fl.containers:BaseScrollPane:verticalScrollBar:get" name="verticalScrollBar" object="[fl.containers.BaseScrollPane]" playername="" text=".verticalScrollBar" tiptext="Gets a reference to the vertical scroll bar." version=""/>
               <string helpurl="fl.containers:BaseScrollPane:verticalScrollPolicy:get" name="verticalScrollPolicy" object="[fl.containers.BaseScrollPane]" playername="" text=".verticalScrollPolicy" tiptext="Gets or sets a value that indicates the state of the vertical scroll bar." version=""/>
               <string helpurl="fl.containers:BaseScrollPane:verticalScrollPosition:get" name="verticalScrollPosition" object="[fl.containers.BaseScrollPane]" playername="" text=".verticalScrollPosition" tiptext="Gets or sets a value that describes the vertical position of the vertical scroll bar in the scroll pane, in pixels." version=""/>
            </folder>
            <folder helpurl="fl.containers:BaseScrollPane" id="Events" name="Events" tiptext="Events for class BaseScrollPane">
               <string helpurl="fl.containers:BaseScrollPane_fl.events.ScrollEvent.SCROLL_scroll" name="scroll" object="[fl.containers.BaseScrollPane]" playername="" text=".addEventListener(%type:String=ScrollEvent.SCROLL{ScrollEvent.SCROLL},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user scrolls content by using the scroll bars on the component or the wheel on a mouse device." version=""/>
            </folder>
         </folder>
         <folder asAncestors="fl.containers:BaseScrollPane,fl.core:UIComponent,flash.display:Sprite,flash.display:DisplayObjectContainer,flash.display:InteractiveObject,flash.display:DisplayObject,flash.events:EventDispatcher,Object" helpurl="fl.containers:ScrollPane" id="[fl.containers.ScrollPane]" index="true" name="ScrollPane" sort="true" tiptext="The ScrollPane component displays display objects and JPEG, GIF, and PNG files, as well as SWF files, in a scrollable area.">
            <folder helpurl="fl.containers:ScrollPane" id="Methods" name="Methods" tiptext="Methods for class ScrollPane">
               <string constructor="true" helpurl="fl.containers:ScrollPane:ScrollPane" name="ScrollPane" object="[fl.containers.ScrollPane]" playername="" text="new ScrollPane(%%)" tiptext="Creates a new ScrollPane component instance." version="1.0"/>
               <string helpurl="fl.containers:ScrollPane:getStyleDefinition" name="getStyleDefinition" object="[fl.containers.ScrollPane]" playername="" static="true" text="ScrollPane.getStyleDefinition(%%):Object" tiptext="Retrieves the default style map for the current component." version="1.0"/>
               <string helpurl="fl.containers:ScrollPane:load" name="load" object="[fl.containers.ScrollPane]" playername="" text=".load(%request:flash.net:URLRequest[,context:flash.system:LoaderContext=null]%):void" tiptext="The request parameter of this method accepts only a URLRequest object whose source property contains a string, a class, or a URLRequest object." version="1.0"/>
               <string helpurl="fl.containers:ScrollPane:refreshPane" name="refreshPane" object="[fl.containers.ScrollPane]" playername="" text=".refreshPane(%%):void" tiptext="Reloads the contents of the scroll pane." version="1.0"/>
               <string helpurl="fl.containers:ScrollPane:update" name="update" object="[fl.containers.ScrollPane]" playername="" text=".update(%%):void" tiptext="Refreshes the scroll bar properties based on the width and height of the content." version="1.0"/>
            </folder>
            <folder helpurl="fl.containers:ScrollPane" id="Properties" name="Properties" tiptext="Properties for class ScrollPane">
               <string helpurl="fl.containers:ScrollPane:bytesLoaded:get" name="bytesLoaded" object="[fl.containers.ScrollPane]" playername="" text=".bytesLoaded" tiptext="Gets the count of bytes of content that have been loaded." version=""/>
               <string helpurl="fl.containers:ScrollPane:bytesTotal:get" name="bytesTotal" object="[fl.containers.ScrollPane]" playername="" text=".bytesTotal" tiptext="Gets the count of bytes of content to be loaded." version=""/>
               <string helpurl="fl.containers:ScrollPane:content:get" name="content" object="[fl.containers.ScrollPane]" playername="" text=".content" tiptext="Gets a reference to the content loaded into the scroll pane." version=""/>
               <string helpurl="fl.containers:ScrollPane:percentLoaded:get" name="percentLoaded" object="[fl.containers.ScrollPane]" playername="" text=".percentLoaded" tiptext="Gets a number between 0 and 100 indicating what percentage of the content is loaded." version=""/>
               <string helpurl="fl.containers:ScrollPane:scrollDrag:get" name="scrollDrag" object="[fl.containers.ScrollPane]" playername="" text=".scrollDrag" tiptext="Gets or sets a value that indicates whether scrolling occurs when a user drags on content within the scroll pane." version=""/>
               <string helpurl="fl.containers:ScrollPane:source:get" name="source" object="[fl.containers.ScrollPane]" playername="" text=".source" tiptext="Gets or sets an absolute or relative URL that identifies the location of the SWF or image file to load, the class name of a movie clip in the library, a reference to a display object, or a instance name of a movie clip on the same level as the component." version=""/>
            </folder>
            <folder helpurl="fl.containers:ScrollPane" id="Events" name="Events" tiptext="Events for class ScrollPane">
               <string helpurl="fl.containers:ScrollPane_flash.events.SecurityErrorEvent.SECURITY_ERROR_securityError" name="securityError" object="[fl.containers.ScrollPane]" playername="" text=".addEventListener(%type:String=SecurityErrorEvent.SECURITY_ERROR{SecurityErrorEvent.SECURITY_ERROR,Event.OPEN,IOErrorEvent.IO_ERROR,Event.INIT,Event.COMPLETE,ProgressEvent.PROGRESS,ScrollEvent.SCROLL},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched after a security error occurs while content is loading." version=""/>
               <string helpurl="fl.containers:ScrollPane_flash.events.Event.OPEN_open" name="open" object="[fl.containers.ScrollPane]" playername="" text=".addEventListener(%type:String=Event.OPEN{SecurityErrorEvent.SECURITY_ERROR,Event.OPEN,IOErrorEvent.IO_ERROR,Event.INIT,Event.COMPLETE,ProgressEvent.PROGRESS,ScrollEvent.SCROLL},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched after a network operation starts." version=""/>
               <string helpurl="fl.containers:ScrollPane_flash.events.IOErrorEvent.IO_ERROR_ioError" name="ioError" object="[fl.containers.ScrollPane]" playername="" text=".addEventListener(%type:String=IOErrorEvent.IO_ERROR{SecurityErrorEvent.SECURITY_ERROR,Event.OPEN,IOErrorEvent.IO_ERROR,Event.INIT,Event.COMPLETE,ProgressEvent.PROGRESS,ScrollEvent.SCROLL},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched after an input or output error occurs." version=""/>
               <string helpurl="fl.containers:ScrollPane_flash.events.Event.INIT_init" name="init" object="[fl.containers.ScrollPane]" playername="" text=".addEventListener(%type:String=Event.INIT{SecurityErrorEvent.SECURITY_ERROR,Event.OPEN,IOErrorEvent.IO_ERROR,Event.INIT,Event.COMPLETE,ProgressEvent.PROGRESS,ScrollEvent.SCROLL},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the properties and methods of a loaded SWF file are accessible." version=""/>
               <string helpurl="fl.containers:ScrollPane_flash.events.Event.COMPLETE_complete" name="complete" object="[fl.containers.ScrollPane]" playername="" text=".addEventListener(%type:String=Event.COMPLETE{SecurityErrorEvent.SECURITY_ERROR,Event.OPEN,IOErrorEvent.IO_ERROR,Event.INIT,Event.COMPLETE,ProgressEvent.PROGRESS,ScrollEvent.SCROLL},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when content has finished loading." version=""/>
               <string helpurl="fl.containers:ScrollPane_flash.events.ProgressEvent.PROGRESS_progress" name="progress" object="[fl.containers.ScrollPane]" playername="" text=".addEventListener(%type:String=ProgressEvent.PROGRESS{SecurityErrorEvent.SECURITY_ERROR,Event.OPEN,IOErrorEvent.IO_ERROR,Event.INIT,Event.COMPLETE,ProgressEvent.PROGRESS,ScrollEvent.SCROLL},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched while content is loading." version=""/>
               <string helpurl="fl.containers:ScrollPane_fl.events.ScrollEvent.SCROLL_scroll" name="scroll" object="[fl.containers.ScrollPane]" playername="" text=".addEventListener(%type:String=ScrollEvent.SCROLL{SecurityErrorEvent.SECURITY_ERROR,Event.OPEN,IOErrorEvent.IO_ERROR,Event.INIT,Event.COMPLETE,ProgressEvent.PROGRESS,ScrollEvent.SCROLL},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user scrolls content by using the scroll bars on the component or the wheel on a mouse device." version=""/>
            </folder>
         </folder>
         <folder asAncestors="fl.core:UIComponent,flash.display:Sprite,flash.display:DisplayObjectContainer,flash.display:InteractiveObject,flash.display:DisplayObject,flash.events:EventDispatcher,Object" helpurl="fl.containers:UILoader" id="[fl.containers.UILoader]" index="true" name="UILoader" sort="true" tiptext="The UILoader class makes it possible to set content to load and to then monitor the loading operation at run time.">
            <folder helpurl="fl.containers:UILoader" id="Methods" name="Methods" tiptext="Methods for class UILoader">
               <string constructor="true" helpurl="fl.containers:UILoader:UILoader" name="UILoader" object="[fl.containers.UILoader]" playername="" text="new UILoader(%%)" tiptext="Creates a new UILoader component instance." version="1.0"/>
               <string helpurl="fl.containers:UILoader:close" name="close" object="[fl.containers.UILoader]" playername="" text=".close(%%):void" tiptext="Cancels a load() method operation that is currently in progress for the Loader instance." version="1.0"/>
               <string helpurl="fl.containers:UILoader:getStyleDefinition" name="getStyleDefinition" object="[fl.containers.UILoader]" playername="" static="true" text="UILoader.getStyleDefinition(%%):Object" tiptext="Retrieves the default style map for the current component." version="1.0"/>
               <string helpurl="fl.containers:UILoader:loadBytes" name="loadBytes" object="[fl.containers.UILoader]" playername="" text=".loadBytes(%bytes:flash.utils:ByteArray[,context:flash.system:LoaderContext=null]%):void" tiptext="Loads binary data that is stored in a ByteArray object." version="1.0"/>
               <string helpurl="fl.containers:UILoader:load" name="load" object="[fl.containers.UILoader]" playername="" text=".load(%[request:flash.net:URLRequest=null,context:flash.system:LoaderContext=null]%):void" tiptext="Loads the specified content or, if no content is specified, loads the content from the location identified by the source property." version="1.0"/>
               <string helpurl="fl.containers:UILoader:setSize" name="setSize" object="[fl.containers.UILoader]" playername="" text=".setSize(%w:Number,h:Number%):void" tiptext="Resizes the component to the requested size." version="1.0"/>
               <string helpurl="fl.containers:UILoader:unload" name="unload" object="[fl.containers.UILoader]" playername="" text=".unload(%%):void" tiptext="Removes a child of this UILoader object that was loaded by using either the load() method or the source property." version="1.0"/>
            </folder>
            <folder helpurl="fl.containers:UILoader" id="Properties" name="Properties" tiptext="Properties for class UILoader">
               <string helpurl="fl.containers:UILoader:autoLoad:get" name="autoLoad" object="[fl.containers.UILoader]" playername="" text=".autoLoad" tiptext="Gets or sets a value that indicates whether the UILoader instance automatically loads the specified content." version=""/>
               <string helpurl="fl.containers:UILoader:bytesLoaded:get" name="bytesLoaded" object="[fl.containers.UILoader]" playername="" text=".bytesLoaded" tiptext="Gets the count of bytes of content that have been loaded." version=""/>
               <string helpurl="fl.containers:UILoader:bytesTotal:get" name="bytesTotal" object="[fl.containers.UILoader]" playername="" text=".bytesTotal" tiptext="Gets the count of bytes of content to be loaded." version=""/>
               <string helpurl="fl.containers:UILoader:content:get" name="content" object="[fl.containers.UILoader]" playername="" text=".content" tiptext="Contains the root display object of the SWF file or image file (a JPEG, PNG, or GIF format file) that was loaded by using the load() method or setting the source property." version=""/>
               <string helpurl="fl.containers:UILoader:maintainAspectRatio:get" name="maintainAspectRatio" object="[fl.containers.UILoader]" playername="" text=".maintainAspectRatio" tiptext="Gets or sets a value that indicates whether to maintain the aspect ratio that was used in the original image or to resize the image at the curent width and height of the UILoader component." version=""/>
               <string helpurl="fl.containers:UILoader:percentLoaded:get" name="percentLoaded" object="[fl.containers.UILoader]" playername="" text=".percentLoaded" tiptext="Gets a number between 0 and 100 indicating what percentage of the content is loaded." version=""/>
               <string helpurl="fl.containers:UILoader:scaleContent:get" name="scaleContent" object="[fl.containers.UILoader]" playername="" text=".scaleContent" tiptext="Gets or sets a value that indicates whether to automatically scale the image to the size of the UILoader instance." version=""/>
               <string helpurl="fl.containers:UILoader:source:get" name="source" object="[fl.containers.UILoader]" playername="" text=".source" tiptext="Gets or sets an absolute or relative URL that identifies the location of the SWF or image file to load, the class name of a movie clip in the library, a reference to a display object, or a instance name of a movie clip on the same level as the component." version=""/>
            </folder>
            <folder helpurl="fl.containers:UILoader" id="Events" name="Events" tiptext="Events for class UILoader">
               <string helpurl="fl.containers:UILoader_flash.events.SecurityErrorEvent.SECURITY_ERROR_securityError" name="securityError" object="[fl.containers.UILoader]" playername="" text=".addEventListener(%type:String=SecurityErrorEvent.SECURITY_ERROR{SecurityErrorEvent.SECURITY_ERROR,ComponentEvent.RESIZE,ProgressEvent.PROGRESS,Event.OPEN,IOErrorEvent.IO_ERROR,Event.INIT,Event.COMPLETE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched after a security error occurs while content is loading." version=""/>
               <string helpurl="fl.containers:UILoader_fl.events.ComponentEvent.RESIZE_resize" name="resize" object="[fl.containers.UILoader]" playername="" text=".addEventListener(%type:String=ComponentEvent.RESIZE{SecurityErrorEvent.SECURITY_ERROR,ComponentEvent.RESIZE,ProgressEvent.PROGRESS,Event.OPEN,IOErrorEvent.IO_ERROR,Event.INIT,Event.COMPLETE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched after the component is resized." version=""/>
               <string helpurl="fl.containers:UILoader_flash.events.ProgressEvent.PROGRESS_progress" name="progress" object="[fl.containers.UILoader]" playername="" text=".addEventListener(%type:String=ProgressEvent.PROGRESS{SecurityErrorEvent.SECURITY_ERROR,ComponentEvent.RESIZE,ProgressEvent.PROGRESS,Event.OPEN,IOErrorEvent.IO_ERROR,Event.INIT,Event.COMPLETE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when content is loading." version=""/>
               <string helpurl="fl.containers:UILoader_flash.events.Event.OPEN_open" name="open" object="[fl.containers.UILoader]" playername="" text=".addEventListener(%type:String=Event.OPEN{SecurityErrorEvent.SECURITY_ERROR,ComponentEvent.RESIZE,ProgressEvent.PROGRESS,Event.OPEN,IOErrorEvent.IO_ERROR,Event.INIT,Event.COMPLETE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched after a network operation starts." version=""/>
               <string helpurl="fl.containers:UILoader_flash.events.IOErrorEvent.IO_ERROR_ioError" name="ioError" object="[fl.containers.UILoader]" playername="" text=".addEventListener(%type:String=IOErrorEvent.IO_ERROR{SecurityErrorEvent.SECURITY_ERROR,ComponentEvent.RESIZE,ProgressEvent.PROGRESS,Event.OPEN,IOErrorEvent.IO_ERROR,Event.INIT,Event.COMPLETE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched after an input or output error occurs." version=""/>
               <string helpurl="fl.containers:UILoader_flash.events.Event.INIT_init" name="init" object="[fl.containers.UILoader]" playername="" text=".addEventListener(%type:String=Event.INIT{SecurityErrorEvent.SECURITY_ERROR,ComponentEvent.RESIZE,ProgressEvent.PROGRESS,Event.OPEN,IOErrorEvent.IO_ERROR,Event.INIT,Event.COMPLETE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the properties and methods of a loaded SWF file are accessible." version=""/>
               <string helpurl="fl.containers:UILoader_flash.events.Event.COMPLETE_complete" name="complete" object="[fl.containers.UILoader]" playername="" text=".addEventListener(%type:String=Event.COMPLETE{SecurityErrorEvent.SECURITY_ERROR,ComponentEvent.RESIZE,ProgressEvent.PROGRESS,Event.OPEN,IOErrorEvent.IO_ERROR,Event.INIT,Event.COMPLETE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when content loading is complete." version=""/>
            </folder>
         </folder>
      </folder>
      <folder helpurl="fl.controls" id="fl.controls" name="fl.controls" sort="true" tiptext="Classes for package fl.controls">
         <folder asAncestors="fl.core:UIComponent,flash.display:Sprite,flash.display:DisplayObjectContainer,flash.display:InteractiveObject,flash.display:DisplayObject,flash.events:EventDispatcher,Object" helpurl="fl.controls:BaseButton" id="[fl.controls.BaseButton]" index="true" name="BaseButton" sort="true" tiptext="The BaseButton class is the base class for all button components, defining properties and methods that are common to all buttons.">
            <folder helpurl="fl.controls:BaseButton" id="Methods" name="Methods" tiptext="Methods for class BaseButton">
               <string constructor="true" helpurl="fl.controls:BaseButton:BaseButton" name="BaseButton" object="[fl.controls.BaseButton]" playername="" text="new BaseButton(%%)" tiptext="Creates a new BaseButton instance." version="1.0"/>
               <string helpurl="fl.controls:BaseButton:getStyleDefinition" name="getStyleDefinition" object="[fl.controls.BaseButton]" playername="" static="true" text="BaseButton.getStyleDefinition(%%):Object" tiptext="Retrieves the default style map for the current component." version="1.0"/>
               <string helpurl="fl.controls:BaseButton:setMouseState" name="setMouseState" object="[fl.controls.BaseButton]" playername="" text=".setMouseState(%state:String%):void" tiptext="Set the mouse state via ActionScript." version="1.0"/>
            </folder>
            <folder helpurl="fl.controls:BaseButton" id="Properties" name="Properties" tiptext="Properties for class BaseButton">
               <string helpurl="fl.controls:BaseButton:autoRepeat:get" name="autoRepeat" object="[fl.controls.BaseButton]" playername="" text=".autoRepeat" tiptext="Gets or sets a Boolean value that indicates whether the buttonDown event is dispatched more than one time when the user holds the mouse button down over the component." version=""/>
               <string helpurl="fl.controls:BaseButton:enabled:get" name="enabled" object="[fl.controls.BaseButton]" playername="" text=".enabled" tiptext="Gets or sets a value that indicates whether the component can accept user input." version=""/>
               <string helpurl="fl.controls:BaseButton:selected:get" name="selected" object="[fl.controls.BaseButton]" playername="" text=".selected" tiptext="Gets or sets a Boolean value that indicates whether a toggle button is selected." version=""/>
            </folder>
            <folder helpurl="fl.controls:BaseButton" id="Events" name="Events" tiptext="Events for class BaseButton">
               <string helpurl="fl.controls:BaseButton_flash.events.Event.CHANGE_change" name="change" object="[fl.controls.BaseButton]" playername="" text=".addEventListener(%type:String=Event.CHANGE{Event.CHANGE,ComponentEvent.BUTTON_DOWN},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the value of the selected property of a toggle Button component changes." version=""/>
               <string helpurl="fl.controls:BaseButton_fl.events.ComponentEvent.BUTTON_DOWN_buttonDown" name="buttonDown" object="[fl.controls.BaseButton]" playername="" text=".addEventListener(%type:String=ComponentEvent.BUTTON_DOWN{Event.CHANGE,ComponentEvent.BUTTON_DOWN},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user presses the Button component." version=""/>
            </folder>
         </folder>
         <folder asAncestors="fl.controls:LabelButton,fl.controls:BaseButton,fl.core:UIComponent,flash.display:Sprite,flash.display:DisplayObjectContainer,flash.display:InteractiveObject,flash.display:DisplayObject,flash.events:EventDispatcher,Object" helpurl="fl.controls:Button" id="[fl.controls.Button]" index="true" name="Button" sort="true" tiptext="The Button component represents a commonly used rectangular button.">
            <folder helpurl="fl.controls:Button" id="Methods" name="Methods" tiptext="Methods for class Button">
               <string constructor="true" helpurl="fl.controls:Button:Button" name="Button" object="[fl.controls.Button]" playername="" text="new Button(%%)" tiptext="Creates a new Button component instance." version="1.0"/>
               <string helpurl="fl.controls:Button:getStyleDefinition" name="getStyleDefinition" object="[fl.controls.Button]" playername="" static="true" text="Button.getStyleDefinition(%%):Object" tiptext="Retrieves the default style map for the current component." version="1.0"/>
            </folder>
            <folder helpurl="fl.controls:Button" id="Properties" name="Properties" tiptext="Properties for class Button">
               <string helpurl="fl.controls:Button:emphasized:get" name="emphasized" object="[fl.controls.Button]" playername="" text=".emphasized" tiptext="Gets or sets a Boolean value that indicates whether a border is drawn around the Button component when the button is in its up state." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="fl.controls:ButtonLabelPlacement" id="[fl.controls.ButtonLabelPlacement]" index="true" name="ButtonLabelPlacement" sort="true" tiptext="The ButtonLabelPlacement class defines constants for the values of the labelPlacement property of a Button, CheckBox, or RadioButton component.">
            <folder helpurl="fl.controls:ButtonLabelPlacement" id="Properties" name="Properties" tiptext="Properties for class ButtonLabelPlacement">
               <string constant="true" helpurl="fl.controls:ButtonLabelPlacement:BOTTOM" name="BOTTOM" object="[fl.controls.ButtonLabelPlacement]" playername="" text="ButtonLabelPlacement.BOTTOM" tiptext="The label appears below the icon." version=""/>
               <string constant="true" helpurl="fl.controls:ButtonLabelPlacement:LEFT" name="LEFT" object="[fl.controls.ButtonLabelPlacement]" playername="" text="ButtonLabelPlacement.LEFT" tiptext="The label appears to the left of the icon." version=""/>
               <string constant="true" helpurl="fl.controls:ButtonLabelPlacement:RIGHT" name="RIGHT" object="[fl.controls.ButtonLabelPlacement]" playername="" text="ButtonLabelPlacement.RIGHT" tiptext="The label appears to the right of the icon." version=""/>
               <string constant="true" helpurl="fl.controls:ButtonLabelPlacement:TOP" name="TOP" object="[fl.controls.ButtonLabelPlacement]" playername="" text="ButtonLabelPlacement.TOP" tiptext="The label appears above the icon." version=""/>
            </folder>
         </folder>
         <folder asAncestors="fl.controls:LabelButton,fl.controls:BaseButton,fl.core:UIComponent,flash.display:Sprite,flash.display:DisplayObjectContainer,flash.display:InteractiveObject,flash.display:DisplayObject,flash.events:EventDispatcher,Object" helpurl="fl.controls:CheckBox" id="[fl.controls.CheckBox]" index="true" name="CheckBox" sort="true" tiptext="The CheckBox component displays a small box that can contain a check mark.">
            <folder helpurl="fl.controls:CheckBox" id="Methods" name="Methods" tiptext="Methods for class CheckBox">
               <string constructor="true" helpurl="fl.controls:CheckBox:CheckBox" name="CheckBox" object="[fl.controls.CheckBox]" playername="" text="new CheckBox(%%)" tiptext="Creates a new CheckBox component instance." version="1.0"/>
               <string helpurl="fl.controls:CheckBox:drawFocus" name="drawFocus" object="[fl.controls.CheckBox]" playername="" text=".drawFocus(%focused:Boolean%):void" tiptext="Shows or hides the focus indicator around this component." version="1.0"/>
               <string helpurl="fl.controls:CheckBox:getStyleDefinition" name="getStyleDefinition" object="[fl.controls.CheckBox]" playername="" static="true" text="CheckBox.getStyleDefinition(%%):Object" tiptext="Retrieves the default style map for the current component." version="1.0"/>
            </folder>
            <folder helpurl="fl.controls:CheckBox" id="Properties" name="Properties" tiptext="Properties for class CheckBox">
               <string helpurl="fl.controls:CheckBox:autoRepeat:get" name="autoRepeat" object="[fl.controls.CheckBox]" playername="" text=".autoRepeat" tiptext="A CheckBox never auto-repeats by definition, so the autoRepeat property is set to false in the constructor and cannot be changed for a CheckBox." version=""/>
               <string helpurl="fl.controls:CheckBox:toggle:get" name="toggle" object="[fl.controls.CheckBox]" playername="" text=".toggle" tiptext="A CheckBox toggles by definition, so the toggle property is set to true in the constructor and cannot be changed for a CheckBox." version=""/>
            </folder>
         </folder>
         <folder asAncestors="fl.core:UIComponent,flash.display:Sprite,flash.display:DisplayObjectContainer,flash.display:InteractiveObject,flash.display:DisplayObject,flash.events:EventDispatcher,Object" helpurl="fl.controls:ColorPicker" id="[fl.controls.ColorPicker]" index="true" name="ColorPicker" sort="true" tiptext="The ColorPicker component displays a list of one or more swatches from which the user can select a color.">
            <folder helpurl="fl.controls:ColorPicker" id="Methods" name="Methods" tiptext="Methods for class ColorPicker">
               <string constructor="true" helpurl="fl.controls:ColorPicker:ColorPicker" name="ColorPicker" object="[fl.controls.ColorPicker]" playername="" text="new ColorPicker(%%)" tiptext="Creates an instance of the ColorPicker class." version="1.0"/>
               <string helpurl="fl.controls:ColorPicker:close" name="close" object="[fl.controls.ColorPicker]" playername="" text=".close(%%):void" tiptext="Hides the color palette." version="1.0"/>
               <string helpurl="fl.controls:ColorPicker:getStyleDefinition" name="getStyleDefinition" object="[fl.controls.ColorPicker]" playername="" static="true" text="ColorPicker.getStyleDefinition(%%):Object" tiptext="Retrieves the default style map for the current component." version="1.0"/>
               <string helpurl="fl.controls:ColorPicker:open" name="open" object="[fl.controls.ColorPicker]" playername="" text=".open(%%):void" tiptext="Shows the color palette." version="1.0"/>
            </folder>
            <folder helpurl="fl.controls:ColorPicker" id="Properties" name="Properties" tiptext="Properties for class ColorPicker">
               <string helpurl="fl.controls:ColorPicker:textField" name="textField" object="[fl.controls.ColorPicker]" playername="" text=".textField" tiptext="A reference to the internal text field of the ColorPicker component." version=""/>
               <string helpurl="fl.controls:ColorPicker:colors:get" name="colors" object="[fl.controls.ColorPicker]" playername="" text=".colors" tiptext="Gets or sets the array of custom colors that the ColorPicker component provides." version=""/>
               <string helpurl="fl.controls:ColorPicker:editable:get" name="editable" object="[fl.controls.ColorPicker]" playername="" text=".editable" tiptext="Gets or sets a Boolean value that indicates whether the internal text field of the ColorPicker component is editable." version=""/>
               <string helpurl="fl.controls:ColorPicker:enabled:get" name="enabled" object="[fl.controls.ColorPicker]" playername="" text=".enabled" tiptext="Gets or sets a value that indicates whether the component can accept user interaction." version=""/>
               <string helpurl="fl.controls:ColorPicker:hexValue:get" name="hexValue" object="[fl.controls.ColorPicker]" playername="" text=".hexValue" tiptext="Gets the string value of the current color selection." version=""/>
               <string helpurl="fl.controls:ColorPicker:imeMode:get" name="imeMode" object="[fl.controls.ColorPicker]" playername="" text=".imeMode" tiptext="Gets or sets the mode of the input method editor (IME)." version=""/>
               <string helpurl="fl.controls:ColorPicker:selectedColor:get" name="selectedColor" object="[fl.controls.ColorPicker]" playername="" text=".selectedColor" tiptext="Gets or sets the swatch that is currently highlighted in the palette of the ColorPicker component." version=""/>
               <string helpurl="fl.controls:ColorPicker:showTextField:get" name="showTextField" object="[fl.controls.ColorPicker]" playername="" text=".showTextField" tiptext="Gets or sets a Boolean value that indicates whether the internal text field of the ColorPicker component is displayed." version=""/>
            </folder>
            <folder helpurl="fl.controls:ColorPicker" id="Events" name="Events" tiptext="Events for class ColorPicker">
               <string helpurl="fl.controls:ColorPicker_fl.events.ColorPickerEvent.ENTER_enter" name="enter" object="[fl.controls.ColorPicker]" playername="" text=".addEventListener(%type:String=ColorPickerEvent.ENTER{ColorPickerEvent.ENTER,ColorPickerEvent.ITEM_ROLL_OUT,ColorPickerEvent.ITEM_ROLL_OVER,ColorPickerEvent.CHANGE,Event.CLOSE,Event.OPEN},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user presses the Enter key after editing the internal text field of the ColorPicker component." version=""/>
               <string helpurl="fl.controls:ColorPicker_fl.events.ColorPickerEvent.ITEM_ROLL_OUT_itemRollOut" name="itemRollOut" object="[fl.controls.ColorPicker]" playername="" text=".addEventListener(%type:String=ColorPickerEvent.ITEM_ROLL_OUT{ColorPickerEvent.ENTER,ColorPickerEvent.ITEM_ROLL_OUT,ColorPickerEvent.ITEM_ROLL_OVER,ColorPickerEvent.CHANGE,Event.CLOSE,Event.OPEN},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user rolls out of a swatch in the color palette." version=""/>
               <string helpurl="fl.controls:ColorPicker_fl.events.ColorPickerEvent.ITEM_ROLL_OVER_itemRollOver" name="itemRollOver" object="[fl.controls.ColorPicker]" playername="" text=".addEventListener(%type:String=ColorPickerEvent.ITEM_ROLL_OVER{ColorPickerEvent.ENTER,ColorPickerEvent.ITEM_ROLL_OUT,ColorPickerEvent.ITEM_ROLL_OVER,ColorPickerEvent.CHANGE,Event.CLOSE,Event.OPEN},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user rolls over a swatch in the color palette." version=""/>
               <string helpurl="fl.controls:ColorPicker_fl.events.ColorPickerEvent.CHANGE_change" name="change" object="[fl.controls.ColorPicker]" playername="" text=".addEventListener(%type:String=ColorPickerEvent.CHANGE{ColorPickerEvent.ENTER,ColorPickerEvent.ITEM_ROLL_OUT,ColorPickerEvent.ITEM_ROLL_OVER,ColorPickerEvent.CHANGE,Event.CLOSE,Event.OPEN},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user clicks a color in the palette." version=""/>
               <string helpurl="fl.controls:ColorPicker_flash.events.Event.CLOSE_close" name="close" object="[fl.controls.ColorPicker]" playername="" text=".addEventListener(%type:String=Event.CLOSE{ColorPickerEvent.ENTER,ColorPickerEvent.ITEM_ROLL_OUT,ColorPickerEvent.ITEM_ROLL_OVER,ColorPickerEvent.CHANGE,Event.CLOSE,Event.OPEN},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user closes the color palette." version=""/>
               <string helpurl="fl.controls:ColorPicker_flash.events.Event.OPEN_open" name="open" object="[fl.controls.ColorPicker]" playername="" text=".addEventListener(%type:String=Event.OPEN{ColorPickerEvent.ENTER,ColorPickerEvent.ITEM_ROLL_OUT,ColorPickerEvent.ITEM_ROLL_OVER,ColorPickerEvent.CHANGE,Event.CLOSE,Event.OPEN},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user opens the color palette." version=""/>
            </folder>
         </folder>
         <folder asAncestors="fl.core:UIComponent,flash.display:Sprite,flash.display:DisplayObjectContainer,flash.display:InteractiveObject,flash.display:DisplayObject,flash.events:EventDispatcher,Object" helpurl="fl.controls:ComboBox" id="[fl.controls.ComboBox]" index="true" name="ComboBox" sort="true" tiptext="The ComboBox component contains a drop-down list from which the user can select one value.">
            <folder helpurl="fl.controls:ComboBox" id="Methods" name="Methods" tiptext="Methods for class ComboBox">
               <string constructor="true" helpurl="fl.controls:ComboBox:ComboBox" name="ComboBox" object="[fl.controls.ComboBox]" playername="" text="new ComboBox(%%)" tiptext="Creates a new ComboBox component instance." version="1.0"/>
               <string helpurl="fl.controls:ComboBox:addItemAt" name="addItemAt" object="[fl.controls.ComboBox]" playername="" text=".addItemAt(%item:Object,index:uint%):void" tiptext="Inserts an item into the list at the specified index location." version="1.0"/>
               <string helpurl="fl.controls:ComboBox:addItem" name="addItem" object="[fl.controls.ComboBox]" playername="" text=".addItem(%item:Object%):void" tiptext="Appends an item to the end of the list of items." version="1.0"/>
               <string helpurl="fl.controls:ComboBox:close" name="close" object="[fl.controls.ComboBox]" playername="" text=".close(%%):void" tiptext="Closes the drop-down list." version="1.0"/>
               <string helpurl="fl.controls:ComboBox:getItemAt" name="getItemAt" object="[fl.controls.ComboBox]" playername="" text=".getItemAt(%index:uint%):Object" tiptext="Retrieves the item at the specified index." version="1.0"/>
               <string helpurl="fl.controls:ComboBox:getStyleDefinition" name="getStyleDefinition" object="[fl.controls.ComboBox]" playername="" static="true" text="ComboBox.getStyleDefinition(%%):Object" tiptext="Retrieves the default style map for the current component." version="1.0"/>
               <string helpurl="fl.controls:ComboBox:itemToLabel" name="itemToLabel" object="[fl.controls.ComboBox]" playername="" text=".itemToLabel(%item:Object%):String" tiptext="Retrieves the string that the renderer displays for the given data object based on the labelField and labelFunction properties." version="1.0"/>
               <string helpurl="fl.controls:ComboBox:open" name="open" object="[fl.controls.ComboBox]" playername="" text=".open(%%):void" tiptext="Opens the drop-down list." version="1.0"/>
               <string helpurl="fl.controls:ComboBox:removeAll" name="removeAll" object="[fl.controls.ComboBox]" playername="" text=".removeAll(%%):void" tiptext="Removes all items from the list." version="1.0"/>
               <string helpurl="fl.controls:ComboBox:removeItemAt" name="removeItemAt" object="[fl.controls.ComboBox]" playername="" text=".removeItemAt(%index:uint%):void" tiptext="Removes the item at the specified index position." version="1.0"/>
               <string helpurl="fl.controls:ComboBox:removeItem" name="removeItem" object="[fl.controls.ComboBox]" playername="" text=".removeItem(%item:Object%):Object" tiptext="Removes the specified item from the list." version="1.0"/>
               <string helpurl="fl.controls:ComboBox:replaceItemAt" name="replaceItemAt" object="[fl.controls.ComboBox]" playername="" text=".replaceItemAt(%item:Object,index:uint%):Object" tiptext="Replaces the item at the specified index location with another item." version="1.0"/>
               <string helpurl="fl.controls:ComboBox:sortItemsOn" name="sortItemsOn" object="[fl.controls.ComboBox]" playername="" text=".sortItemsOn(%field:String[,options:Object=null]%)" tiptext="Sorts the elements of the current data provider by one or more of its fields." version="1.0"/>
               <string helpurl="fl.controls:ComboBox:sortItems" name="sortItems" object="[fl.controls.ComboBox]" playername="" text=".sortItems(%sortArgs:restParam%)" tiptext="Sorts the elements of the current data provider." version="1.0"/>
            </folder>
            <folder helpurl="fl.controls:ComboBox" id="Properties" name="Properties" tiptext="Properties for class ComboBox">
               <string helpurl="fl.controls:ComboBox:dataProvider:get" name="dataProvider" object="[fl.controls.ComboBox]" playername="" text=".dataProvider" tiptext="Gets or sets the data model of the list of items to be viewed." version=""/>
               <string helpurl="fl.controls:ComboBox:dropdownWidth:get" name="dropdownWidth" object="[fl.controls.ComboBox]" playername="" text=".dropdownWidth" tiptext="Gets or sets the maximum width of the drop-down list, in pixels." version=""/>
               <string helpurl="fl.controls:ComboBox:dropdown:get" name="dropdown" object="[fl.controls.ComboBox]" playername="" text=".dropdown" tiptext="Gets a reference to the List component that the ComboBox component contains." version=""/>
               <string helpurl="fl.controls:ComboBox:editable:get" name="editable" object="[fl.controls.ComboBox]" playername="" text=".editable" tiptext="Gets or sets a Boolean value that indicates whether the ComboBox component is editable or read-only." version=""/>
               <string helpurl="fl.controls:ComboBox:labelField:get" name="labelField" object="[fl.controls.ComboBox]" playername="" text=".labelField" tiptext="Gets or sets the name of the field in the dataProvider object to be displayed as the label for the TextInput field and drop-down list." version=""/>
               <string helpurl="fl.controls:ComboBox:labelFunction:get" name="labelFunction" object="[fl.controls.ComboBox]" playername="" text=".labelFunction" tiptext="Gets or sets the function to be used to obtain the label for the item." version=""/>
               <string helpurl="fl.controls:ComboBox:length:get" name="length" object="[fl.controls.ComboBox]" playername="" text=".length" tiptext="Gets the number of items in the list." version=""/>
               <string helpurl="fl.controls:ComboBox:prompt:get" name="prompt" object="[fl.controls.ComboBox]" playername="" text=".prompt" tiptext="Gets or sets the prompt for the ComboBox component." version=""/>
               <string helpurl="fl.controls:ComboBox:restrict:get" name="restrict" object="[fl.controls.ComboBox]" playername="" text=".restrict" tiptext="Gets or sets the characters that a user can enter in the text field." version=""/>
               <string helpurl="fl.controls:ComboBox:rowCount:get" name="rowCount" object="[fl.controls.ComboBox]" playername="" text=".rowCount" tiptext="Gets or sets the maximum number of rows that can appear in a drop-down  list that does not have a scroll bar." version=""/>
               <string helpurl="fl.controls:ComboBox:selectedIndex:get" name="selectedIndex" object="[fl.controls.ComboBox]" playername="" text=".selectedIndex" tiptext="Gets or sets the index of the item that is selected in a single-selection list." version=""/>
               <string helpurl="fl.controls:ComboBox:selectedItem:get" name="selectedItem" object="[fl.controls.ComboBox]" playername="" text=".selectedItem" tiptext="Gets or sets the value of the item that is selected in the drop-down list." version=""/>
               <string helpurl="fl.controls:ComboBox:selectedLabel:get" name="selectedLabel" object="[fl.controls.ComboBox]" playername="" text=".selectedLabel" tiptext="Gets the string that is displayed in the TextInput portion of the ComboBox component." version=""/>
               <string helpurl="fl.controls:ComboBox:textField:get" name="textField" object="[fl.controls.ComboBox]" playername="" text=".textField" tiptext="Gets a reference to the TextInput component that the ComboBox component contains." version=""/>
               <string helpurl="fl.controls:ComboBox:text:get" name="text" object="[fl.controls.ComboBox]" playername="" text=".text" tiptext="Gets or sets the text that the text box contains in an editable ComboBox component." version=""/>
               <string helpurl="fl.controls:ComboBox:value:get" name="value" object="[fl.controls.ComboBox]" playername="" text=".value" tiptext="Gets the label of an item in an editable ComboBox component." version=""/>
            </folder>
            <folder helpurl="fl.controls:ComboBox" id="Events" name="Events" tiptext="Events for class ComboBox">
               <string helpurl="fl.controls:ComboBox_fl.events.ScrollEvent.SCROLL_scroll" name="scroll" object="[fl.controls.ComboBox]" playername="" text=".addEventListener(%type:String=ScrollEvent.SCROLL{ScrollEvent.SCROLL,Event.OPEN,ComponentEvent.ENTER,Event.CLOSE,ListEvent.ITEM_ROLL_OUT,ListEvent.ITEM_ROLL_OVER,Event.CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user scrolls the drop-down list of the ComboBox component." version=""/>
               <string helpurl="fl.controls:ComboBox_flash.events.Event.OPEN_open" name="open" object="[fl.controls.ComboBox]" playername="" text=".addEventListener(%type:String=Event.OPEN{ScrollEvent.SCROLL,Event.OPEN,ComponentEvent.ENTER,Event.CLOSE,ListEvent.ITEM_ROLL_OUT,ListEvent.ITEM_ROLL_OVER,Event.CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user clicks the drop-down button to display the drop-down list." version=""/>
               <string helpurl="fl.controls:ComboBox_fl.events.ComponentEvent.ENTER_enter" name="enter" object="[fl.controls.ComboBox]" playername="" text=".addEventListener(%type:String=ComponentEvent.ENTER{ScrollEvent.SCROLL,Event.OPEN,ComponentEvent.ENTER,Event.CLOSE,ListEvent.ITEM_ROLL_OUT,ListEvent.ITEM_ROLL_OVER,Event.CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched if the editable property is set to true and the user presses the Enter key while typing in the editable text field." version=""/>
               <string helpurl="fl.controls:ComboBox_flash.events.Event.CLOSE_close" name="close" object="[fl.controls.ComboBox]" playername="" text=".addEventListener(%type:String=Event.CLOSE{ScrollEvent.SCROLL,Event.OPEN,ComponentEvent.ENTER,Event.CLOSE,ListEvent.ITEM_ROLL_OUT,ListEvent.ITEM_ROLL_OVER,Event.CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the drop-down list is dismissed for any reason." version=""/>
               <string helpurl="fl.controls:ComboBox_fl.events.ListEvent.ITEM_ROLL_OUT_itemRollOut" name="itemRollOut" object="[fl.controls.ComboBox]" playername="" text=".addEventListener(%type:String=ListEvent.ITEM_ROLL_OUT{ScrollEvent.SCROLL,Event.OPEN,ComponentEvent.ENTER,Event.CLOSE,ListEvent.ITEM_ROLL_OUT,ListEvent.ITEM_ROLL_OVER,Event.CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user rolls the pointer off of an item in the component." version=""/>
               <string helpurl="fl.controls:ComboBox_fl.events.ListEvent.ITEM_ROLL_OVER_itemRollOver" name="itemRollOver" object="[fl.controls.ComboBox]" playername="" text=".addEventListener(%type:String=ListEvent.ITEM_ROLL_OVER{ScrollEvent.SCROLL,Event.OPEN,ComponentEvent.ENTER,Event.CLOSE,ListEvent.ITEM_ROLL_OUT,ListEvent.ITEM_ROLL_OVER,Event.CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user rolls the pointer over an item in the component." version=""/>
               <string helpurl="fl.controls:ComboBox_flash.events.Event.CHANGE_change" name="change" object="[fl.controls.ComboBox]" playername="" text=".addEventListener(%type:String=Event.CHANGE{ScrollEvent.SCROLL,Event.OPEN,ComponentEvent.ENTER,Event.CLOSE,ListEvent.ITEM_ROLL_OUT,ListEvent.ITEM_ROLL_OVER,Event.CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user changes the selection in the ComboBox component or, if the ComboBox component is editable, each time the user enters a keystroke in the text field." version=""/>
            </folder>
         </folder>
         <folder asAncestors="fl.controls:SelectableList,fl.containers:BaseScrollPane,fl.core:UIComponent,flash.display:Sprite,flash.display:DisplayObjectContainer,flash.display:InteractiveObject,flash.display:DisplayObject,flash.events:EventDispatcher,Object" helpurl="fl.controls:DataGrid" id="[fl.controls.DataGrid]" index="true" name="DataGrid" sort="true" tiptext="The DataGrid class is a list-based component that provides a grid of rows and columns.">
            <folder helpurl="fl.controls:DataGrid" id="Methods" name="Methods" tiptext="Methods for class DataGrid">
               <string constructor="true" helpurl="fl.controls:DataGrid:DataGrid" name="DataGrid" object="[fl.controls.DataGrid]" playername="" text="new DataGrid(%%)" tiptext="Creates a new DataGrid component instance." version="1.0"/>
               <string helpurl="fl.controls:DataGrid:addColumnAt" name="addColumnAt" object="[fl.controls.DataGrid]" playername="" text=".addColumnAt(%column:*,index:uint%):fl.controls.dataGridClasses:DataGridColumn" tiptext="Inserts a column at the specified index in the columns array." version="1.0"/>
               <string helpurl="fl.controls:DataGrid:addColumn" name="addColumn" object="[fl.controls.DataGrid]" playername="" text=".addColumn(%column:*%):fl.controls.dataGridClasses:DataGridColumn" tiptext="Adds a column to the end of the columns array." version="1.0"/>
               <string helpurl="fl.controls:DataGrid:createItemEditor" name="createItemEditor" object="[fl.controls.DataGrid]" playername="" text=".createItemEditor(%colIndex:uint,rowIndex:uint%):void" tiptext="Uses the editor specified by the itemEditor property to create an item editor for the item renderer at the column and row index identified by the editedItemPosition property." version="1.0"/>
               <string helpurl="fl.controls:DataGrid:destroyItemEditor" name="destroyItemEditor" object="[fl.controls.DataGrid]" playername="" text=".destroyItemEditor(%%):void" tiptext="Closes an item editor that is currently open on an item renderer." version="1.0"/>
               <string helpurl="fl.controls:DataGrid:editField" name="editField" object="[fl.controls.DataGrid]" playername="" text=".editField(%index:uint,dataField:String,data:Object%):void" tiptext="Edits a given field or property in the DataGrid component." version="1.0"/>
               <string helpurl="fl.controls:DataGrid:getCellRendererAt" name="getCellRendererAt" object="[fl.controls.DataGrid]" playername="" text=".getCellRendererAt(%row:uint,column:uint%):fl.controls.listClasses:ICellRenderer" tiptext="Get the instance of a cell renderer at the specified position in the DataGrid." version="1.0"/>
               <string helpurl="fl.controls:DataGrid:getColumnAt" name="getColumnAt" object="[fl.controls.DataGrid]" playername="" text=".getColumnAt(%index:uint%):fl.controls.dataGridClasses:DataGridColumn" tiptext="Retrieves the column that is located at the specified index of the columns array." version="1.0"/>
               <string helpurl="fl.controls:DataGrid:getColumnCount" name="getColumnCount" object="[fl.controls.DataGrid]" playername="" text=".getColumnCount(%%):uint" tiptext="Retrieves the number of columns in the DataGrid component." version="1.0"/>
               <string helpurl="fl.controls:DataGrid:getColumnIndex" name="getColumnIndex" object="[fl.controls.DataGrid]" playername="" text=".getColumnIndex(%name:String%):int" tiptext="Retrieves the index of the column of the specified name, or -1 if no match is found." version="1.0"/>
               <string helpurl="fl.controls:DataGrid:getStyleDefinition" name="getStyleDefinition" object="[fl.controls.DataGrid]" playername="" static="true" text="DataGrid.getStyleDefinition(%%):Object" tiptext="Retrieves the default style map for the current component." version="1.0"/>
               <string helpurl="fl.controls:DataGrid:itemToCellRenderer" name="itemToCellRenderer" object="[fl.controls.DataGrid]" playername="" text=".itemToCellRenderer(%item:Object%):fl.controls.listClasses:ICellRenderer" tiptext="The DataGrid component has multiple cells for any given item, so the itemToCellRenderer method always returns null." version="1.0"/>
               <string helpurl="fl.controls:DataGrid:removeAllColumns" name="removeAllColumns" object="[fl.controls.DataGrid]" playername="" text=".removeAllColumns(%%):void" tiptext="Removes all columns from the DataGrid component." version="1.0"/>
               <string helpurl="fl.controls:DataGrid:removeColumnAt" name="removeColumnAt" object="[fl.controls.DataGrid]" playername="" text=".removeColumnAt(%index:uint%):fl.controls.dataGridClasses:DataGridColumn" tiptext="Removes the column that is located at the specified index of the columns array." version="1.0"/>
               <string helpurl="fl.controls:DataGrid:scrollToIndex" name="scrollToIndex" object="[fl.controls.DataGrid]" playername="" text=".scrollToIndex(%newCaretIndex:int%):void" tiptext="Scrolls the list to the item at the specified index." version="1.0"/>
               <string helpurl="fl.controls:DataGrid:spaceColumnsEqually" name="spaceColumnsEqually" object="[fl.controls.DataGrid]" playername="" text=".spaceColumnsEqually(%%):void" tiptext="Resets the widths of the visible columns to the same size." version="1.0"/>
            </folder>
            <folder helpurl="fl.controls:DataGrid" id="Properties" name="Properties" tiptext="Properties for class DataGrid">
               <string helpurl="fl.controls:DataGrid:editable" name="editable" object="[fl.controls.DataGrid]" playername="" text=".editable" tiptext="Indicates whether or not the user can edit items in the data provider." version=""/>
               <string helpurl="fl.controls:DataGrid:itemEditorInstance" name="itemEditorInstance" object="[fl.controls.DataGrid]" playername="" text=".itemEditorInstance" tiptext="A reference to the currently active instance of the item editor, if one exists." version=""/>
               <string helpurl="fl.controls:DataGrid:resizableColumns" name="resizableColumns" object="[fl.controls.DataGrid]" playername="" text=".resizableColumns" tiptext="Indicates whether the user can change the size of the columns." version=""/>
               <string helpurl="fl.controls:DataGrid:sortableColumns" name="sortableColumns" object="[fl.controls.DataGrid]" playername="" text=".sortableColumns" tiptext="Indicates whether the user can sort the items in the data provider by clicking on a column header cell." version=""/>
               <string helpurl="fl.controls:DataGrid:columns:get" name="columns" object="[fl.controls.DataGrid]" playername="" text=".columns" tiptext="Gets or sets an array of DataGridColumn objects, one for each column that can be displayed." version=""/>
               <string helpurl="fl.controls:DataGrid:editedItemPosition:get" name="editedItemPosition" object="[fl.controls.DataGrid]" playername="" text=".editedItemPosition" tiptext="Gets or sets the column and row index of the item renderer for the data provider item that is being edited." version=""/>
               <string helpurl="fl.controls:DataGrid:editedItemRenderer:get" name="editedItemRenderer" object="[fl.controls.DataGrid]" playername="" text=".editedItemRenderer" tiptext="Gets a reference to the item renderer in the DataGrid component whose item is currently being edited." version=""/>
               <string helpurl="fl.controls:DataGrid:headerHeight:get" name="headerHeight" object="[fl.controls.DataGrid]" playername="" text=".headerHeight" tiptext="Gets or sets the height of the DataGrid header, in pixels." version=""/>
               <string helpurl="fl.controls:DataGrid:horizontalScrollPolicy:get" name="horizontalScrollPolicy" object="[fl.controls.DataGrid]" playername="" text=".horizontalScrollPolicy" tiptext="Gets or sets a Boolean value that indicates whether the horizontal scroll bar is always on." version=""/>
               <string helpurl="fl.controls:DataGrid:imeMode:get" name="imeMode" object="[fl.controls.DataGrid]" playername="" text=".imeMode" tiptext="Gets or sets the mode of the input method editor (IME)." version=""/>
               <string helpurl="fl.controls:DataGrid:labelFunction:get" name="labelFunction" object="[fl.controls.DataGrid]" playername="" text=".labelFunction" tiptext="Gets or sets a function that determines which fields of each item to use for the label text." version=""/>
               <string helpurl="fl.controls:DataGrid:minColumnWidth:get" name="minColumnWidth" object="[fl.controls.DataGrid]" playername="" text=".minColumnWidth" tiptext="Gets or sets the minimum width of a DataGrid column, in pixels." version=""/>
               <string helpurl="fl.controls:DataGrid:rowCount:get" name="rowCount" object="[fl.controls.DataGrid]" playername="" text=".rowCount" tiptext="Gets or sets the number of rows that are at least partially visible in the list." version=""/>
               <string helpurl="fl.controls:DataGrid:rowHeight:get" name="rowHeight" object="[fl.controls.DataGrid]" playername="" text=".rowHeight" tiptext="Gets or sets the height of each row in the DataGrid component, in pixels." version=""/>
               <string helpurl="fl.controls:DataGrid:showHeaders:get" name="showHeaders" object="[fl.controls.DataGrid]" playername="" text=".showHeaders" tiptext="Gets or sets a Boolean value that indicates whether the DataGrid component shows column headers." version=""/>
               <string helpurl="fl.controls:DataGrid:sortDescending:get" name="sortDescending" object="[fl.controls.DataGrid]" playername="" text=".sortDescending" tiptext="Gets the order in which a column is sorted when the user clicks its header." version=""/>
               <string helpurl="fl.controls:DataGrid:sortIndex:get" name="sortIndex" object="[fl.controls.DataGrid]" playername="" text=".sortIndex" tiptext="Gets the index of the column to be sorted." version=""/>
            </folder>
            <folder helpurl="fl.controls:DataGrid" id="Events" name="Events" tiptext="Events for class DataGrid">
               <string helpurl="fl.controls:DataGrid_fl.events.DataGridEvent.ITEM_FOCUS_OUT_itemFocusOut" name="itemFocusOut" object="[fl.controls.DataGrid]" playername="" text=".addEventListener(%type:String=DataGridEvent.ITEM_FOCUS_OUT{DataGridEvent.ITEM_FOCUS_OUT,DataGridEvent.ITEM_FOCUS_IN,DataGridEvent.ITEM_EDIT_END,DataGridEvent.ITEM_EDIT_BEGIN,DataGridEvent.ITEM_EDIT_BEGINNING,DataGridEvent.COLUMN_STRETCH,DataGridEvent.HEADER_RELEASE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched after an item loses focus." version=""/>
               <string helpurl="fl.controls:DataGrid_fl.events.DataGridEvent.ITEM_FOCUS_IN_itemFocusIn" name="itemFocusIn" object="[fl.controls.DataGrid]" playername="" text=".addEventListener(%type:String=DataGridEvent.ITEM_FOCUS_IN{DataGridEvent.ITEM_FOCUS_OUT,DataGridEvent.ITEM_FOCUS_IN,DataGridEvent.ITEM_EDIT_END,DataGridEvent.ITEM_EDIT_BEGIN,DataGridEvent.ITEM_EDIT_BEGINNING,DataGridEvent.COLUMN_STRETCH,DataGridEvent.HEADER_RELEASE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched after an item receives focus." version=""/>
               <string helpurl="fl.controls:DataGrid_fl.events.DataGridEvent.ITEM_EDIT_END_itemEditEnd" name="itemEditEnd" object="[fl.controls.DataGrid]" playername="" text=".addEventListener(%type:String=DataGridEvent.ITEM_EDIT_END{DataGridEvent.ITEM_FOCUS_OUT,DataGridEvent.ITEM_FOCUS_IN,DataGridEvent.ITEM_EDIT_END,DataGridEvent.ITEM_EDIT_BEGIN,DataGridEvent.ITEM_EDIT_BEGINNING,DataGridEvent.COLUMN_STRETCH,DataGridEvent.HEADER_RELEASE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when an item editing session ends for any reason." version=""/>
               <string helpurl="fl.controls:DataGrid_fl.events.DataGridEvent.ITEM_EDIT_BEGIN_itemEditBegin" name="itemEditBegin" object="[fl.controls.DataGrid]" playername="" text=".addEventListener(%type:String=DataGridEvent.ITEM_EDIT_BEGIN{DataGridEvent.ITEM_FOCUS_OUT,DataGridEvent.ITEM_FOCUS_IN,DataGridEvent.ITEM_EDIT_END,DataGridEvent.ITEM_EDIT_BEGIN,DataGridEvent.ITEM_EDIT_BEGINNING,DataGridEvent.COLUMN_STRETCH,DataGridEvent.HEADER_RELEASE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched after the editedItemPosition property is set and the item can be edited." version=""/>
               <string helpurl="fl.controls:DataGrid_fl.events.DataGridEvent.ITEM_EDIT_BEGINNING_itemEditBeginning" name="itemEditBeginning" object="[fl.controls.DataGrid]" playername="" text=".addEventListener(%type:String=DataGridEvent.ITEM_EDIT_BEGINNING{DataGridEvent.ITEM_FOCUS_OUT,DataGridEvent.ITEM_FOCUS_IN,DataGridEvent.ITEM_EDIT_END,DataGridEvent.ITEM_EDIT_BEGIN,DataGridEvent.ITEM_EDIT_BEGINNING,DataGridEvent.COLUMN_STRETCH,DataGridEvent.HEADER_RELEASE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched after a user prepares to edit an item, for example, by releasing the mouse button over the item." version=""/>
               <string helpurl="fl.controls:DataGrid_fl.events.DataGridEvent.COLUMN_STRETCH_columnStretch" name="columnStretch" object="[fl.controls.DataGrid]" playername="" text=".addEventListener(%type:String=DataGridEvent.COLUMN_STRETCH{DataGridEvent.ITEM_FOCUS_OUT,DataGridEvent.ITEM_FOCUS_IN,DataGridEvent.ITEM_EDIT_END,DataGridEvent.ITEM_EDIT_BEGIN,DataGridEvent.ITEM_EDIT_BEGINNING,DataGridEvent.COLUMN_STRETCH,DataGridEvent.HEADER_RELEASE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched after a user expands a column horizontally." version=""/>
               <string helpurl="fl.controls:DataGrid_fl.events.DataGridEvent.HEADER_RELEASE_headerRelease" name="headerRelease" object="[fl.controls.DataGrid]" playername="" text=".addEventListener(%type:String=DataGridEvent.HEADER_RELEASE{DataGridEvent.ITEM_FOCUS_OUT,DataGridEvent.ITEM_FOCUS_IN,DataGridEvent.ITEM_EDIT_END,DataGridEvent.ITEM_EDIT_BEGIN,DataGridEvent.ITEM_EDIT_BEGINNING,DataGridEvent.COLUMN_STRETCH,DataGridEvent.HEADER_RELEASE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched after the user clicks a header cell." version=""/>
            </folder>
         </folder>
         <folder asAncestors="fl.core:UIComponent,flash.display:Sprite,flash.display:DisplayObjectContainer,flash.display:InteractiveObject,flash.display:DisplayObject,flash.events:EventDispatcher,Object" helpurl="fl.controls:Label" id="[fl.controls.Label]" index="true" name="Label" sort="true" tiptext="A Label component displays one or more lines of plain or HTML-formatted text that can be formatted for alignment and size.">
            <folder helpurl="fl.controls:Label" id="Methods" name="Methods" tiptext="Methods for class Label">
               <string constructor="true" helpurl="fl.controls:Label:Label" name="Label" object="[fl.controls.Label]" playername="" text="new Label(%%)" tiptext="Creates a new Label component instance." version="1.0"/>
               <string helpurl="fl.controls:Label:getStyleDefinition" name="getStyleDefinition" object="[fl.controls.Label]" playername="" static="true" text="Label.getStyleDefinition(%%):Object" tiptext="Retrieves the default style map for the current component." version="1.0"/>
            </folder>
            <folder helpurl="fl.controls:Label" id="Properties" name="Properties" tiptext="Properties for class Label">
               <string helpurl="fl.controls:Label:textField" name="textField" object="[fl.controls.Label]" playername="" text=".textField" tiptext="A reference to the internal text field of the Label component." version=""/>
               <string helpurl="fl.controls:Label:autoSize:get" name="autoSize" object="[fl.controls.Label]" playername="" text=".autoSize" tiptext="Gets or sets a string that indicates how a label is sized and aligned to fit the value of its text property." version=""/>
               <string helpurl="fl.controls:Label:condenseWhite:get" name="condenseWhite" object="[fl.controls.Label]" playername="" text=".condenseWhite" tiptext="Gets or sets a value that indicates whether extra white space such as spaces and line breaks should be removed from a Label component that contains HTML text." version=""/>
               <string helpurl="fl.controls:Label:height:get" name="height" object="[fl.controls.Label]" playername="" text=".height" tiptext="Gets or sets the height of the component, in pixels." version=""/>
               <string helpurl="fl.controls:Label:htmlText:get" name="htmlText" object="[fl.controls.Label]" playername="" text=".htmlText" tiptext="Gets or sets the text to be displayed by the Label component, including HTML markup that expresses the styles of that text." version=""/>
               <string helpurl="fl.controls:Label:selectable:get" name="selectable" object="[fl.controls.Label]" playername="" text=".selectable" tiptext="Gets or sets a value that indicates whether the text can be selected." version=""/>
               <string helpurl="fl.controls:Label:text:get" name="text" object="[fl.controls.Label]" playername="" text=".text" tiptext="Gets or sets the plain text to be displayed by the Label component." version=""/>
               <string helpurl="fl.controls:Label:width:get" name="width" object="[fl.controls.Label]" playername="" text=".width" tiptext="Gets or sets the width of the component, in pixels." version=""/>
               <string helpurl="fl.controls:Label:wordWrap:get" name="wordWrap" object="[fl.controls.Label]" playername="" text=".wordWrap" tiptext="Gets or sets a value that indicates whether the text field supports word wrapping." version=""/>
            </folder>
            <folder helpurl="fl.controls:Label" id="Events" name="Events" tiptext="Events for class Label">
               <string helpurl="fl.controls:Label_fl.events.ComponentEvent.RESIZE_resize" name="resize" object="[fl.controls.Label]" playername="" text=".addEventListener(%type:String=ComponentEvent.RESIZE{ComponentEvent.RESIZE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched after there is a change in the width or height of the component." version=""/>
            </folder>
         </folder>
         <folder asAncestors="fl.controls:BaseButton,fl.core:UIComponent,flash.display:Sprite,flash.display:DisplayObjectContainer,flash.display:InteractiveObject,flash.display:DisplayObject,flash.events:EventDispatcher,Object" helpurl="fl.controls:LabelButton" id="[fl.controls.LabelButton]" index="true" name="LabelButton" sort="true" tiptext="The LabelButton class is an abstract class that extends the BaseButton class by adding a label, an icon, and toggle functionality.">
            <folder helpurl="fl.controls:LabelButton" id="Methods" name="Methods" tiptext="Methods for class LabelButton">
               <string constructor="true" helpurl="fl.controls:LabelButton:LabelButton" name="LabelButton" object="[fl.controls.LabelButton]" playername="" text="new LabelButton(%%)" tiptext="Creates a new LabelButton component instance." version="1.0"/>
               <string helpurl="fl.controls:LabelButton:getStyleDefinition" name="getStyleDefinition" object="[fl.controls.LabelButton]" playername="" static="true" text="LabelButton.getStyleDefinition(%%):Object" tiptext="Retrieves the default style map for the current component." version="1.0"/>
            </folder>
            <folder helpurl="fl.controls:LabelButton" id="Properties" name="Properties" tiptext="Properties for class LabelButton">
               <string helpurl="fl.controls:LabelButton:textField" name="textField" object="[fl.controls.LabelButton]" playername="" text=".textField" tiptext="A reference to the component's internal text field." version=""/>
               <string helpurl="fl.controls:LabelButton:labelPlacement:get" name="labelPlacement" object="[fl.controls.LabelButton]" playername="" text=".labelPlacement" tiptext="Position of the label in relation to a specified icon." version=""/>
               <string helpurl="fl.controls:LabelButton:label:get" name="label" object="[fl.controls.LabelButton]" playername="" text=".label" tiptext="Gets or sets the text label for the component." version=""/>
               <string helpurl="fl.controls:LabelButton:selected:get" name="selected" object="[fl.controls.LabelButton]" playername="" text=".selected" tiptext="Gets or sets a Boolean value that indicates whether a toggle button is toggled in the on or off position." version=""/>
               <string helpurl="fl.controls:LabelButton:toggle:get" name="toggle" object="[fl.controls.LabelButton]" playername="" text=".toggle" tiptext="Gets or sets a Boolean value that indicates whether a button can be toggled." version=""/>
            </folder>
            <folder helpurl="fl.controls:LabelButton" id="Events" name="Events" tiptext="Events for class LabelButton">
               <string helpurl="fl.controls:LabelButton_fl.events.ComponentEvent.LABEL_CHANGE_labelChange" name="labelChange" object="[fl.controls.LabelButton]" playername="" text=".addEventListener(%type:String=ComponentEvent.LABEL_CHANGE{ComponentEvent.LABEL_CHANGE,MouseEvent.CLICK},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched after the label value changes." version=""/>
               <string helpurl="fl.controls:LabelButton_flash.events.MouseEvent.CLICK_click" name="click" object="[fl.controls.LabelButton]" playername="" text=".addEventListener(%type:String=MouseEvent.CLICK{ComponentEvent.LABEL_CHANGE,MouseEvent.CLICK},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched after the toggle button receives input from a mouse device or from the spacebar." version=""/>
            </folder>
         </folder>
         <folder asAncestors="fl.controls:SelectableList,fl.containers:BaseScrollPane,fl.core:UIComponent,flash.display:Sprite,flash.display:DisplayObjectContainer,flash.display:InteractiveObject,flash.display:DisplayObject,flash.events:EventDispatcher,Object" helpurl="fl.controls:List" id="[fl.controls.List]" index="true" name="List" sort="true" tiptext="The List component displays list-based information and is ideally suited for the display of arrays of information.">
            <folder helpurl="fl.controls:List" id="Methods" name="Methods" tiptext="Methods for class List">
               <string constructor="true" helpurl="fl.controls:List:List" name="List" object="[fl.controls.List]" playername="" text="new List(%%)" tiptext="Creates a new List component instance." version="1.0"/>
               <string helpurl="fl.controls:List:getStyleDefinition" name="getStyleDefinition" object="[fl.controls.List]" playername="" static="true" text="List.getStyleDefinition(%%):Object" tiptext="Retrieves the default style map for the current component." version="1.0"/>
               <string helpurl="fl.controls:List:itemToLabel" name="itemToLabel" object="[fl.controls.List]" playername="" text=".itemToLabel(%item:Object%):String" tiptext="Retrieves the string that the renderer displays for the given data object based on the labelField and labelFunction properties." version="1.0"/>
               <string helpurl="fl.controls:List:scrollToIndex" name="scrollToIndex" object="[fl.controls.List]" playername="" text=".scrollToIndex(%newCaretIndex:int%):void" tiptext="Scrolls the list to the item at the specified index." version="1.0"/>
            </folder>
            <folder helpurl="fl.controls:List" id="Properties" name="Properties" tiptext="Properties for class List">
               <string helpurl="fl.controls:List:iconField:get" name="iconField" object="[fl.controls.List]" playername="" text=".iconField" tiptext="Gets or sets the item field that provides the icon for the item." version=""/>
               <string helpurl="fl.controls:List:iconFunction:get" name="iconFunction" object="[fl.controls.List]" playername="" text=".iconFunction" tiptext="Gets or sets the function to be used to obtain the icon for the item." version=""/>
               <string helpurl="fl.controls:List:labelField:get" name="labelField" object="[fl.controls.List]" playername="" text=".labelField" tiptext="Gets or sets the name of the field in the dataProvider object to be displayed as the label for the TextInput field and drop-down list." version=""/>
               <string helpurl="fl.controls:List:labelFunction:get" name="labelFunction" object="[fl.controls.List]" playername="" text=".labelFunction" tiptext="Gets or sets the function to be used to obtain the label for the item." version=""/>
               <string helpurl="fl.controls:List:rowCount:get" name="rowCount" object="[fl.controls.List]" playername="" text=".rowCount" tiptext="Gets or sets the number of rows that are at least partially visible in the list." version=""/>
               <string helpurl="fl.controls:List:rowHeight:get" name="rowHeight" object="[fl.controls.List]" playername="" text=".rowHeight" tiptext="Gets or sets the height of each row in the list, in pixels." version=""/>
            </folder>
         </folder>
         <folder asAncestors="fl.core:UIComponent,flash.display:Sprite,flash.display:DisplayObjectContainer,flash.display:InteractiveObject,flash.display:DisplayObject,flash.events:EventDispatcher,Object" helpurl="fl.controls:NumericStepper" id="[fl.controls.NumericStepper]" index="true" name="NumericStepper" sort="true" tiptext="The NumericStepper component displays an ordered set of numbers from which the user can make a selection.">
            <folder helpurl="fl.controls:NumericStepper" id="Methods" name="Methods" tiptext="Methods for class NumericStepper">
               <string constructor="true" helpurl="fl.controls:NumericStepper:NumericStepper" name="NumericStepper" object="[fl.controls.NumericStepper]" playername="" text="new NumericStepper(%%)" tiptext="Creates a new NumericStepper component instance." version="1.0"/>
               <string helpurl="fl.controls:NumericStepper:drawFocus" name="drawFocus" object="[fl.controls.NumericStepper]" playername="" text=".drawFocus(%focused:Boolean%):void" tiptext="Shows or hides the focus indicator on this component." version="1.0"/>
               <string helpurl="fl.controls:NumericStepper:getStyleDefinition" name="getStyleDefinition" object="[fl.controls.NumericStepper]" playername="" static="true" text="NumericStepper.getStyleDefinition(%%):Object" tiptext="Retrieves the default style map for the current component." version="1.0"/>
               <string helpurl="fl.controls:NumericStepper:setFocus" name="setFocus" object="[fl.controls.NumericStepper]" playername="" text=".setFocus(%%):void" tiptext="Sets focus to the component instance." version="1.0"/>
            </folder>
            <folder helpurl="fl.controls:NumericStepper" id="Properties" name="Properties" tiptext="Properties for class NumericStepper">
               <string helpurl="fl.controls:NumericStepper:enabled:get" name="enabled" object="[fl.controls.NumericStepper]" playername="" text=".enabled" tiptext="Gets or sets a value that indicates whether the component can accept user interaction." version=""/>
               <string helpurl="fl.controls:NumericStepper:imeMode:get" name="imeMode" object="[fl.controls.NumericStepper]" playername="" text=".imeMode" tiptext="Gets or sets the mode of the input method editor (IME)." version=""/>
               <string helpurl="fl.controls:NumericStepper:maximum:get" name="maximum" object="[fl.controls.NumericStepper]" playername="" text=".maximum" tiptext="Gets or sets the maximum value in the sequence of numeric values." version=""/>
               <string helpurl="fl.controls:NumericStepper:minimum:get" name="minimum" object="[fl.controls.NumericStepper]" playername="" text=".minimum" tiptext="Gets or sets the minimum number in the sequence of numeric values." version=""/>
               <string helpurl="fl.controls:NumericStepper:nextValue:get" name="nextValue" object="[fl.controls.NumericStepper]" playername="" text=".nextValue" tiptext="Gets the next value in the sequence of values." version=""/>
               <string helpurl="fl.controls:NumericStepper:previousValue:get" name="previousValue" object="[fl.controls.NumericStepper]" playername="" text=".previousValue" tiptext="Gets the previous value in the sequence of values." version=""/>
               <string helpurl="fl.controls:NumericStepper:stepSize:get" name="stepSize" object="[fl.controls.NumericStepper]" playername="" text=".stepSize" tiptext="Gets or sets a nonzero number that describes the unit of change between values." version=""/>
               <string helpurl="fl.controls:NumericStepper:textField:get" name="textField" object="[fl.controls.NumericStepper]" playername="" text=".textField" tiptext="Gets a reference to the TextInput component that the NumericStepper component contains." version=""/>
               <string helpurl="fl.controls:NumericStepper:value:get" name="value" object="[fl.controls.NumericStepper]" playername="" text=".value" tiptext="Gets or sets the current value of the NumericStepper component." version=""/>
            </folder>
            <folder helpurl="fl.controls:NumericStepper" id="Events" name="Events" tiptext="Events for class NumericStepper">
               <string helpurl="fl.controls:NumericStepper_flash.events.Event.CHANGE_change" name="change" object="[fl.controls.NumericStepper]" playername="" text=".addEventListener(%type:String=Event.CHANGE{Event.CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user changes the value of the NumericStepper component." version=""/>
            </folder>
         </folder>
         <folder asAncestors="fl.core:UIComponent,flash.display:Sprite,flash.display:DisplayObjectContainer,flash.display:InteractiveObject,flash.display:DisplayObject,flash.events:EventDispatcher,Object" helpurl="fl.controls:ProgressBar" id="[fl.controls.ProgressBar]" index="true" name="ProgressBar" sort="true" tiptext="The ProgressBar component displays the progress of content that is being loaded.">
            <folder helpurl="fl.controls:ProgressBar" id="Methods" name="Methods" tiptext="Methods for class ProgressBar">
               <string constructor="true" helpurl="fl.controls:ProgressBar:ProgressBar" name="ProgressBar" object="[fl.controls.ProgressBar]" playername="" text="new ProgressBar(%%)" tiptext="Creates a new ProgressBar component instance." version="1.0"/>
               <string helpurl="fl.controls:ProgressBar:getStyleDefinition" name="getStyleDefinition" object="[fl.controls.ProgressBar]" playername="" static="true" text="ProgressBar.getStyleDefinition(%%):Object" tiptext="Retrieves the default style map for the current component." version="1.0"/>
               <string helpurl="fl.controls:ProgressBar:reset" name="reset" object="[fl.controls.ProgressBar]" playername="" text=".reset(%%):void" tiptext="Resets the progress bar for a new load operation." version="1.0"/>
               <string helpurl="fl.controls:ProgressBar:setProgress" name="setProgress" object="[fl.controls.ProgressBar]" playername="" text=".setProgress(%value:Number,maximum:Number%):void" tiptext="Sets the state of the bar to reflect the amount of progress made when using manual mode." version="1.0"/>
            </folder>
            <folder helpurl="fl.controls:ProgressBar" id="Properties" name="Properties" tiptext="Properties for class ProgressBar">
               <string helpurl="fl.controls:ProgressBar:direction:get" name="direction" object="[fl.controls.ProgressBar]" playername="" text=".direction" tiptext="Indicates the fill direction for the progress bar." version=""/>
               <string helpurl="fl.controls:ProgressBar:indeterminate:get" name="indeterminate" object="[fl.controls.ProgressBar]" playername="" text=".indeterminate" tiptext="Gets or sets a value that indicates the type of fill that the progress bar uses and whether the loading source is known or unknown." version=""/>
               <string helpurl="fl.controls:ProgressBar:maximum:get" name="maximum" object="[fl.controls.ProgressBar]" playername="" text=".maximum" tiptext="Gets or sets the maximum value for the progress bar when the ProgressBar.mode property is set to ProgressBarMode.MANUAL." version=""/>
               <string helpurl="fl.controls:ProgressBar:minimum:get" name="minimum" object="[fl.controls.ProgressBar]" playername="" text=".minimum" tiptext="Gets or sets the minimum value for the progress bar when the ProgressBar.mode property is set to ProgressBarMode.MANUAL." version=""/>
               <string helpurl="fl.controls:ProgressBar:mode:get" name="mode" object="[fl.controls.ProgressBar]" playername="" text=".mode" tiptext="Gets or sets the method to be used to update the progress bar." version=""/>
               <string helpurl="fl.controls:ProgressBar:percentComplete:get" name="percentComplete" object="[fl.controls.ProgressBar]" playername="" text=".percentComplete" tiptext="Gets a number between 0 and 100 that indicates the percentage of the content has already loaded." version=""/>
               <string helpurl="fl.controls:ProgressBar:source:get" name="source" object="[fl.controls.ProgressBar]" playername="" text=".source" tiptext="Gets or sets a reference to the content that is being loaded and for which the ProgressBar is measuring the progress of the load operation." version=""/>
               <string helpurl="fl.controls:ProgressBar:value:get" name="value" object="[fl.controls.ProgressBar]" playername="" text=".value" tiptext="Gets or sets a value that indicates the amount of progress that has been made in the load operation." version=""/>
            </folder>
            <folder helpurl="fl.controls:ProgressBar" id="Events" name="Events" tiptext="Events for class ProgressBar">
               <string helpurl="fl.controls:ProgressBar_flash.events.ProgressEvent.PROGRESS_progress" name="progress" object="[fl.controls.ProgressBar]" playername="" text=".addEventListener(%type:String=ProgressEvent.PROGRESS{ProgressEvent.PROGRESS,Event.COMPLETE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched as content loads in event mode or polled mode." version=""/>
               <string helpurl="fl.controls:ProgressBar_flash.events.Event.COMPLETE_complete" name="complete" object="[fl.controls.ProgressBar]" playername="" text=".addEventListener(%type:String=Event.COMPLETE{ProgressEvent.PROGRESS,Event.COMPLETE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the load operation completes." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="fl.controls:ProgressBarDirection" id="[fl.controls.ProgressBarDirection]" index="true" name="ProgressBarDirection" sort="true" tiptext="The ProgressBarDirection class defines the values for the direction property of the ProgressBar class.">
            <folder helpurl="fl.controls:ProgressBarDirection" id="Properties" name="Properties" tiptext="Properties for class ProgressBarDirection">
               <string constant="true" helpurl="fl.controls:ProgressBarDirection:LEFT" name="LEFT" object="[fl.controls.ProgressBarDirection]" playername="" text="ProgressBarDirection.LEFT" tiptext="Fill the progress bar from right to left." version=""/>
               <string constant="true" helpurl="fl.controls:ProgressBarDirection:RIGHT" name="RIGHT" object="[fl.controls.ProgressBarDirection]" playername="" text="ProgressBarDirection.RIGHT" tiptext="Fill the progress bar from left to right." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="fl.controls:ProgressBarMode" id="[fl.controls.ProgressBarMode]" index="true" name="ProgressBarMode" sort="true" tiptext="The ProgressBarMode class defines the values for the mode property of the ProgressBar class.">
            <folder helpurl="fl.controls:ProgressBarMode" id="Properties" name="Properties" tiptext="Properties for class ProgressBarMode">
               <string constant="true" helpurl="fl.controls:ProgressBarMode:EVENT" name="EVENT" object="[fl.controls.ProgressBarMode]" playername="" text="ProgressBarMode.EVENT" tiptext="The component specified by the source property must dispatch progress and complete events." version=""/>
               <string constant="true" helpurl="fl.controls:ProgressBarMode:MANUAL" name="MANUAL" object="[fl.controls.ProgressBarMode]" playername="" text="ProgressBarMode.MANUAL" tiptext="Manually update the status of the ProgressBar component." version=""/>
               <string constant="true" helpurl="fl.controls:ProgressBarMode:POLLED" name="POLLED" object="[fl.controls.ProgressBarMode]" playername="" text="ProgressBarMode.POLLED" tiptext="Progress is updated by polling the source." version=""/>
            </folder>
         </folder>
         <folder asAncestors="fl.controls:LabelButton,fl.controls:BaseButton,fl.core:UIComponent,flash.display:Sprite,flash.display:DisplayObjectContainer,flash.display:InteractiveObject,flash.display:DisplayObject,flash.events:EventDispatcher,Object" helpurl="fl.controls:RadioButton" id="[fl.controls.RadioButton]" index="true" name="RadioButton" sort="true" tiptext="The RadioButton component lets you force a user to make a single selection from a set of choices.">
            <folder helpurl="fl.controls:RadioButton" id="Methods" name="Methods" tiptext="Methods for class RadioButton">
               <string constructor="true" helpurl="fl.controls:RadioButton:RadioButton" name="RadioButton" object="[fl.controls.RadioButton]" playername="" text="new RadioButton(%%)" tiptext="Creates a new RadioButton component instance." version="1.0"/>
               <string helpurl="fl.controls:RadioButton:drawFocus" name="drawFocus" object="[fl.controls.RadioButton]" playername="" text=".drawFocus(%focused:Boolean%):void" tiptext="Shows or hides the focus indicator around this component instance." version="1.0"/>
               <string helpurl="fl.controls:RadioButton:getStyleDefinition" name="getStyleDefinition" object="[fl.controls.RadioButton]" playername="" static="true" text="RadioButton.getStyleDefinition(%%):Object" tiptext="Retrieves the default style map for the current component." version="1.0"/>
            </folder>
            <folder helpurl="fl.controls:RadioButton" id="Properties" name="Properties" tiptext="Properties for class RadioButton">
               <string helpurl="fl.controls:RadioButton:autoRepeat:get" name="autoRepeat" object="[fl.controls.RadioButton]" playername="" text=".autoRepeat" tiptext="A radio button never auto-repeats by definition, so the autoRepeat property is set to false in the constructor and cannot be changed." version=""/>
               <string helpurl="fl.controls:RadioButton:groupName:get" name="groupName" object="[fl.controls.RadioButton]" playername="" text=".groupName" tiptext="The group name for a radio button instance or group." version=""/>
               <string helpurl="fl.controls:RadioButton:group:get" name="group" object="[fl.controls.RadioButton]" playername="" text=".group" tiptext="The RadioButtonGroup object to which this RadioButton belongs." version=""/>
               <string helpurl="fl.controls:RadioButton:selected:get" name="selected" object="[fl.controls.RadioButton]" playername="" text=".selected" tiptext="Indicates whether a radio button is currently selected (true) or deselected (false)." version=""/>
               <string helpurl="fl.controls:RadioButton:toggle:get" name="toggle" object="[fl.controls.RadioButton]" playername="" text=".toggle" tiptext="A radio button is a toggle button; its toggle property is set to true in the constructor and cannot be changed." version=""/>
               <string helpurl="fl.controls:RadioButton:value:get" name="value" object="[fl.controls.RadioButton]" playername="" text=".value" tiptext="A user-defined value that is associated with a radio button." version=""/>
            </folder>
            <folder helpurl="fl.controls:RadioButton" id="Events" name="Events" tiptext="Events for class RadioButton">
               <string helpurl="fl.controls:RadioButton_flash.events.MouseEvent.CLICK_click" name="click" object="[fl.controls.RadioButton]" playername="" text=".addEventListener(%type:String=MouseEvent.CLICK{MouseEvent.CLICK,Event.CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user clicks the radio button with the mouse or spacebar." version=""/>
               <string helpurl="fl.controls:RadioButton_flash.events.Event.CHANGE_change" name="change" object="[fl.controls.RadioButton]" playername="" text=".addEventListener(%type:String=Event.CHANGE{MouseEvent.CLICK,Event.CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the radio button instance's selected property changes." version=""/>
            </folder>
         </folder>
         <folder asAncestors="flash.events:EventDispatcher,Object" helpurl="fl.controls:RadioButtonGroup" id="[fl.controls.RadioButtonGroup]" index="true" name="RadioButtonGroup" sort="true" tiptext="The RadioButtonGroup class defines a group of RadioButton components to act as a single component.">
            <folder helpurl="fl.controls:RadioButtonGroup" id="Methods" name="Methods" tiptext="Methods for class RadioButtonGroup">
               <string constructor="true" helpurl="fl.controls:RadioButtonGroup:RadioButtonGroup" name="RadioButtonGroup" object="[fl.controls.RadioButtonGroup]" playername="" text="new RadioButtonGroup(%name:String%)" tiptext="Creates a new RadioButtonGroup instance." version="1.0"/>
               <string helpurl="fl.controls:RadioButtonGroup:addRadioButton" name="addRadioButton" object="[fl.controls.RadioButtonGroup]" playername="" text=".addRadioButton(%radioButton:fl.controls:RadioButton%):void" tiptext="Adds a radio button to the internal radio button array for use with radio button group indexing, which allows for the selection of a single radio button in a group of radio buttons." version="1.0"/>
               <string helpurl="fl.controls:RadioButtonGroup:getGroup" name="getGroup" object="[fl.controls.RadioButtonGroup]" playername="" static="true" text="RadioButtonGroup.getGroup(%name:String%):fl.controls:RadioButtonGroup" tiptext="Retrieves a reference to the specified radio button group." version="1.0"/>
               <string helpurl="fl.controls:RadioButtonGroup:getRadioButtonAt" name="getRadioButtonAt" object="[fl.controls.RadioButtonGroup]" playername="" text=".getRadioButtonAt(%index:int%):fl.controls:RadioButton" tiptext="Retrieves the RadioButton component at the specified index location." version="1.0"/>
               <string helpurl="fl.controls:RadioButtonGroup:getRadioButtonIndex" name="getRadioButtonIndex" object="[fl.controls.RadioButtonGroup]" playername="" text=".getRadioButtonIndex(%radioButton:fl.controls:RadioButton%):int" tiptext="Returns the index of the specified RadioButton instance." version="1.0"/>
               <string helpurl="fl.controls:RadioButtonGroup:removeRadioButton" name="removeRadioButton" object="[fl.controls.RadioButtonGroup]" playername="" text=".removeRadioButton(%radioButton:fl.controls:RadioButton%):void" tiptext="Clears the RadioButton instance from the internal list of radio buttons." version="1.0"/>
            </folder>
            <folder helpurl="fl.controls:RadioButtonGroup" id="Properties" name="Properties" tiptext="Properties for class RadioButtonGroup">
               <string helpurl="fl.controls:RadioButtonGroup:name:get" name="name" object="[fl.controls.RadioButtonGroup]" playername="" text=".name" tiptext="Gets the instance name of the radio button." version=""/>
               <string helpurl="fl.controls:RadioButtonGroup:numRadioButtons:get" name="numRadioButtons" object="[fl.controls.RadioButtonGroup]" playername="" text=".numRadioButtons" tiptext="Gets the number of radio buttons in this radio button group." version=""/>
               <string helpurl="fl.controls:RadioButtonGroup:selectedData:get" name="selectedData" object="[fl.controls.RadioButtonGroup]" playername="" text=".selectedData" tiptext="Gets or sets the selected radio button's value property." version=""/>
               <string helpurl="fl.controls:RadioButtonGroup:selection:get" name="selection" object="[fl.controls.RadioButtonGroup]" playername="" text=".selection" tiptext="Gets or sets a reference to the radio button that is currently selected from the radio button group." version=""/>
            </folder>
            <folder helpurl="fl.controls:RadioButtonGroup" id="Events" name="Events" tiptext="Events for class RadioButtonGroup">
               <string helpurl="fl.controls:RadioButtonGroup_flash.events.MouseEvent.CLICK_click" name="click" object="[fl.controls.RadioButtonGroup]" playername="" text=".addEventListener(%type:String=MouseEvent.CLICK{MouseEvent.CLICK,Event.CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a RadioButton instance is clicked." version=""/>
               <string helpurl="fl.controls:RadioButtonGroup_flash.events.Event.CHANGE_change" name="change" object="[fl.controls.RadioButtonGroup]" playername="" text=".addEventListener(%type:String=Event.CHANGE{MouseEvent.CLICK,Event.CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the selected RadioButton instance in a group changes." version=""/>
            </folder>
         </folder>
         <folder asAncestors="fl.core:UIComponent,flash.display:Sprite,flash.display:DisplayObjectContainer,flash.display:InteractiveObject,flash.display:DisplayObject,flash.events:EventDispatcher,Object" helpurl="fl.controls:ScrollBar" id="[fl.controls.ScrollBar]" index="true" name="ScrollBar" sort="true" tiptext="The ScrollBar component provides the end user with a way to control the portion of data that is displayed when there is too much data to fit in the display area.">
            <folder helpurl="fl.controls:ScrollBar" id="Methods" name="Methods" tiptext="Methods for class ScrollBar">
               <string constructor="true" helpurl="fl.controls:ScrollBar:ScrollBar" name="ScrollBar" object="[fl.controls.ScrollBar]" playername="" text="new ScrollBar(%%)" tiptext="Creates a new ScrollBar component instance." version="1.0"/>
               <string helpurl="fl.controls:ScrollBar:getStyleDefinition" name="getStyleDefinition" object="[fl.controls.ScrollBar]" playername="" static="true" text="ScrollBar.getStyleDefinition(%%):Object" tiptext="Retrieves the default style map for the current component." version="1.0"/>
               <string helpurl="fl.controls:ScrollBar:setScrollProperties" name="setScrollProperties" object="[fl.controls.ScrollBar]" playername="" text=".setScrollProperties(%pageSize:Number,minScrollPosition:Number,maxScrollPosition:Number[,pageScrollSize:Number=0]%):void" tiptext="Sets the range and viewport size of the ScrollBar component." version="1.0"/>
               <string helpurl="fl.controls:ScrollBar:setSize" name="setSize" object="[fl.controls.ScrollBar]" playername="" text=".setSize(%width:Number,height:Number%):void" tiptext="Sets the component to the specified width and height." version="1.0"/>
            </folder>
            <folder helpurl="fl.controls:ScrollBar" id="Properties" name="Properties" tiptext="Properties for class ScrollBar">
               <string helpurl="fl.controls:ScrollBar:direction:get" name="direction" object="[fl.controls.ScrollBar]" playername="" text=".direction" tiptext="Gets or sets a value that indicates whether the scroll bar scrolls horizontally or vertically." version=""/>
               <string helpurl="fl.controls:ScrollBar:enabled:get" name="enabled" object="[fl.controls.ScrollBar]" playername="" text=".enabled" tiptext="Gets or sets a Boolean value that indicates whether the scroll bar is enabled." version=""/>
               <string helpurl="fl.controls:ScrollBar:height:get" name="height" object="[fl.controls.ScrollBar]" playername="" text=".height" tiptext="Gets or sets the height of the component, in pixels." version=""/>
               <string helpurl="fl.controls:ScrollBar:lineScrollSize:get" name="lineScrollSize" object="[fl.controls.ScrollBar]" playername="" text=".lineScrollSize" tiptext="Gets or sets a value that represents the increment by which to scroll the page when the scroll bar track is pressed." version=""/>
               <string helpurl="fl.controls:ScrollBar:maxScrollPosition:get" name="maxScrollPosition" object="[fl.controls.ScrollBar]" playername="" text=".maxScrollPosition" tiptext="Gets or sets a number that represents the maximum scroll position." version=""/>
               <string helpurl="fl.controls:ScrollBar:minScrollPosition:get" name="minScrollPosition" object="[fl.controls.ScrollBar]" playername="" text=".minScrollPosition" tiptext="Gets or sets a number that represents the minimum scroll position." version=""/>
               <string helpurl="fl.controls:ScrollBar:pageScrollSize:get" name="pageScrollSize" object="[fl.controls.ScrollBar]" playername="" text=".pageScrollSize" tiptext="Gets or sets a value that represents the increment by which the page is scrolled when the scroll bar track is pressed." version=""/>
               <string helpurl="fl.controls:ScrollBar:pageSize:get" name="pageSize" object="[fl.controls.ScrollBar]" playername="" text=".pageSize" tiptext="Gets or sets the number of lines that a page contains." version=""/>
               <string helpurl="fl.controls:ScrollBar:scrollPosition:get" name="scrollPosition" object="[fl.controls.ScrollBar]" playername="" text=".scrollPosition" tiptext="Gets or sets the current scroll position and updates the position of the thumb." version=""/>
               <string helpurl="fl.controls:ScrollBar:width:get" name="width" object="[fl.controls.ScrollBar]" playername="" text=".width" tiptext="Gets or sets the width of the component, in pixels." version=""/>
            </folder>
            <folder helpurl="fl.controls:ScrollBar" id="Events" name="Events" tiptext="Events for class ScrollBar">
               <string helpurl="fl.controls:ScrollBar_fl.events.ScrollEvent.SCROLL_scroll" name="scroll" object="[fl.controls.ScrollBar]" playername="" text=".addEventListener(%type:String=ScrollEvent.SCROLL{ScrollEvent.SCROLL},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the ScrollBar instance's scrollPosition property changes." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="fl.controls:ScrollBarDirection" id="[fl.controls.ScrollBarDirection]" index="true" name="ScrollBarDirection" sort="true" tiptext="Defines the values for the direction property of the ScrollBar component.">
            <folder helpurl="fl.controls:ScrollBarDirection" id="Properties" name="Properties" tiptext="Properties for class ScrollBarDirection">
               <string constant="true" helpurl="fl.controls:ScrollBarDirection:HORIZONTAL" name="HORIZONTAL" object="[fl.controls.ScrollBarDirection]" playername="" text="ScrollBarDirection.HORIZONTAL" tiptext="Indicates that the ScrollBar component instance is used for horizontal scrolling." version=""/>
               <string constant="true" helpurl="fl.controls:ScrollBarDirection:VERTICAL" name="VERTICAL" object="[fl.controls.ScrollBarDirection]" playername="" text="ScrollBarDirection.VERTICAL" tiptext="Indicates that the ScrollBar component instance is used for vertical scrolling." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="fl.controls:ScrollPolicy" id="[fl.controls.ScrollPolicy]" index="true" name="ScrollPolicy" sort="true" tiptext="Values for the horizontalScrollPolicy and verticalScrollPolicy properties of the BaseScrollPane class.">
            <folder helpurl="fl.controls:ScrollPolicy" id="Properties" name="Properties" tiptext="Properties for class ScrollPolicy">
               <string constant="true" helpurl="fl.controls:ScrollPolicy:AUTO" name="AUTO" object="[fl.controls.ScrollPolicy]" playername="" text="ScrollPolicy.AUTO" tiptext="Show the scroll bar if the children exceed the owner's dimensions." version=""/>
               <string constant="true" helpurl="fl.controls:ScrollPolicy:OFF" name="OFF" object="[fl.controls.ScrollPolicy]" playername="" text="ScrollPolicy.OFF" tiptext="Never show the scroll bar." version=""/>
               <string constant="true" helpurl="fl.controls:ScrollPolicy:ON" name="ON" object="[fl.controls.ScrollPolicy]" playername="" text="ScrollPolicy.ON" tiptext="Always show the scroll bar." version=""/>
            </folder>
         </folder>
         <folder asAncestors="fl.containers:BaseScrollPane,fl.core:UIComponent,flash.display:Sprite,flash.display:DisplayObjectContainer,flash.display:InteractiveObject,flash.display:DisplayObject,flash.events:EventDispatcher,Object" helpurl="fl.controls:SelectableList" id="[fl.controls.SelectableList]" index="true" name="SelectableList" sort="true" tiptext="The SelectableList is the base class for all list-based components--for example, the List, TileList, DataGrid, and ComboBox components.">
            <folder helpurl="fl.controls:SelectableList" id="Methods" name="Methods" tiptext="Methods for class SelectableList">
               <string constructor="true" helpurl="fl.controls:SelectableList:SelectableList" name="SelectableList" object="[fl.controls.SelectableList]" playername="" text="new SelectableList(%%)" tiptext="Creates a new SelectableList instance." version="1.0"/>
               <string helpurl="fl.controls:SelectableList:addItemAt" name="addItemAt" object="[fl.controls.SelectableList]" playername="" text=".addItemAt(%item:Object,index:uint%):void" tiptext="Inserts an item into the list at the specified index location." version="1.0"/>
               <string helpurl="fl.controls:SelectableList:addItem" name="addItem" object="[fl.controls.SelectableList]" playername="" text=".addItem(%item:Object%):void" tiptext="Appends an item to the end of the list of items." version="1.0"/>
               <string helpurl="fl.controls:SelectableList:clearRendererStyle" name="clearRendererStyle" object="[fl.controls.SelectableList]" playername="" text=".clearRendererStyle(%name:String[,column:int=-1]%):void" tiptext="Clears a style that is set on the renderers in the list." version="1.0"/>
               <string helpurl="fl.controls:SelectableList:clearSelection" name="clearSelection" object="[fl.controls.SelectableList]" playername="" text=".clearSelection(%%):void" tiptext="Clears the currently selected item in the list and sets the selectedIndex property to -1." version="1.0"/>
               <string helpurl="fl.controls:SelectableList:getItemAt" name="getItemAt" object="[fl.controls.SelectableList]" playername="" text=".getItemAt(%index:uint%):Object" tiptext="Retrieves the item at the specified index." version="1.0"/>
               <string helpurl="fl.controls:SelectableList:getNextIndexAtLetter" name="getNextIndexAtLetter" object="[fl.controls.SelectableList]" playername="" text=".getNextIndexAtLetter(%firstLetter:String[,startIndex:int=-1]%):int" tiptext="Returns the index of the next item in the dataProvider in which the label's first character matches a specified string character." version="1.0"/>
               <string helpurl="fl.controls:SelectableList:getRendererStyle" name="getRendererStyle" object="[fl.controls.SelectableList]" playername="" text=".getRendererStyle(%name:String[,column:int=-1]%):Object" tiptext="Retrieves a style that is set on the renderers in the list." version="1.0"/>
               <string helpurl="fl.controls:SelectableList:getStyleDefinition" name="getStyleDefinition" object="[fl.controls.SelectableList]" playername="" static="true" text="SelectableList.getStyleDefinition(%%):Object" tiptext="Retrieves the default style map for the current component." version="1.0"/>
               <string helpurl="fl.controls:SelectableList:invalidateItemAt" name="invalidateItemAt" object="[fl.controls.SelectableList]" playername="" text=".invalidateItemAt(%index:uint%):void" tiptext="Invalidates the renderer for the item at the specified index." version="1.0"/>
               <string helpurl="fl.controls:SelectableList:invalidateItem" name="invalidateItem" object="[fl.controls.SelectableList]" playername="" text=".invalidateItem(%item:Object%):void" tiptext="Invalidates a specific item renderer." version="1.0"/>
               <string helpurl="fl.controls:SelectableList:invalidateList" name="invalidateList" object="[fl.controls.SelectableList]" playername="" text=".invalidateList(%%):void" tiptext="Invalidates the whole list, forcing the list items to be redrawn." version="1.0"/>
               <string helpurl="fl.controls:SelectableList:isItemSelected" name="isItemSelected" object="[fl.controls.SelectableList]" playername="" text=".isItemSelected(%item:Object%):Boolean" tiptext="Checks whether the specified item is selected in the list." version="1.0"/>
               <string helpurl="fl.controls:SelectableList:itemToCellRenderer" name="itemToCellRenderer" object="[fl.controls.SelectableList]" playername="" text=".itemToCellRenderer(%item:Object%):fl.controls.listClasses:ICellRenderer" tiptext="Retrieves the ICellRenderer for a given item object, if there is one." version="1.0"/>
               <string helpurl="fl.controls:SelectableList:itemToLabel" name="itemToLabel" object="[fl.controls.SelectableList]" playername="" text=".itemToLabel(%item:Object%):String" tiptext="Retrieves the string that the renderer displays for the given data object based on the label properties of the object." version="1.0"/>
               <string helpurl="fl.controls:SelectableList:removeAll" name="removeAll" object="[fl.controls.SelectableList]" playername="" text=".removeAll(%%):void" tiptext="Removes all items from the list." version="1.0"/>
               <string helpurl="fl.controls:SelectableList:removeItemAt" name="removeItemAt" object="[fl.controls.SelectableList]" playername="" text=".removeItemAt(%index:uint%):Object" tiptext="Removes the item at the specified index position." version="1.0"/>
               <string helpurl="fl.controls:SelectableList:removeItem" name="removeItem" object="[fl.controls.SelectableList]" playername="" text=".removeItem(%item:Object%):Object" tiptext="Removes the specified item from the list." version="1.0"/>
               <string helpurl="fl.controls:SelectableList:replaceItemAt" name="replaceItemAt" object="[fl.controls.SelectableList]" playername="" text=".replaceItemAt(%item:Object,index:uint%):Object" tiptext="Replaces the item at the specified index location with another item." version="1.0"/>
               <string helpurl="fl.controls:SelectableList:scrollToIndex" name="scrollToIndex" object="[fl.controls.SelectableList]" playername="" text=".scrollToIndex(%newCaretIndex:int%):void" tiptext="Scrolls the list to the item at the specified index." version="1.0"/>
               <string helpurl="fl.controls:SelectableList:scrollToSelected" name="scrollToSelected" object="[fl.controls.SelectableList]" playername="" text=".scrollToSelected(%%):void" tiptext="Scrolls the list to the item at the location indicated by the current value of the selectedIndex property." version="1.0"/>
               <string helpurl="fl.controls:SelectableList:setRendererStyle" name="setRendererStyle" object="[fl.controls.SelectableList]" playername="" text=".setRendererStyle(%name:String,style:Object[,column:uint=0]%):void" tiptext="Sets a style on the renderers in the list." version="1.0"/>
               <string helpurl="fl.controls:SelectableList:sortItemsOn" name="sortItemsOn" object="[fl.controls.SelectableList]" playername="" text=".sortItemsOn(%field:String[,options:Object=null]%)" tiptext="Sorts the elements of the current data provider by one or more of its fields." version="1.0"/>
               <string helpurl="fl.controls:SelectableList:sortItems" name="sortItems" object="[fl.controls.SelectableList]" playername="" text=".sortItems(%sortArgs:restParam%)" tiptext="Sorts the elements of the current data provider." version="1.0"/>
            </folder>
            <folder helpurl="fl.controls:SelectableList" id="Properties" name="Properties" tiptext="Properties for class SelectableList">
               <string helpurl="fl.controls:SelectableList:allowMultipleSelection:get" name="allowMultipleSelection" object="[fl.controls.SelectableList]" playername="" text=".allowMultipleSelection" tiptext="Gets a Boolean value that indicates whether more than one list item can be selected at a time." version=""/>
               <string helpurl="fl.controls:SelectableList:dataProvider:get" name="dataProvider" object="[fl.controls.SelectableList]" playername="" text=".dataProvider" tiptext="Gets or sets the data model of the list of items to be viewed." version=""/>
               <string helpurl="fl.controls:SelectableList:length:get" name="length" object="[fl.controls.SelectableList]" playername="" text=".length" tiptext="Gets the number of items in the data provider." version=""/>
               <string helpurl="fl.controls:SelectableList:maxHorizontalScrollPosition:get" name="maxHorizontalScrollPosition" object="[fl.controls.SelectableList]" playername="" text=".maxHorizontalScrollPosition" tiptext="Gets or sets the number of pixels that the list scrolls to the right when the horizontalScrollPolicy property is set to ScrollPolicy.ON." version=""/>
               <string helpurl="fl.controls:SelectableList:rowCount:get" name="rowCount" object="[fl.controls.SelectableList]" playername="" text=".rowCount" tiptext="Gets the number of rows that are at least partially visible in the list." version=""/>
               <string helpurl="fl.controls:SelectableList:selectable:get" name="selectable" object="[fl.controls.SelectableList]" playername="" text=".selectable" tiptext="Gets or sets a Boolean value that indicates whether the items in the list can be selected." version=""/>
               <string helpurl="fl.controls:SelectableList:selectedIndex:get" name="selectedIndex" object="[fl.controls.SelectableList]" playername="" text=".selectedIndex" tiptext="Gets or sets the index of the item that is selected in a single-selection list." version=""/>
               <string helpurl="fl.controls:SelectableList:selectedIndices:get" name="selectedIndices" object="[fl.controls.SelectableList]" playername="" text=".selectedIndices" tiptext="Gets or sets an array that contains the items that were selected from a multiple-selection list." version=""/>
               <string helpurl="fl.controls:SelectableList:selectedItem:get" name="selectedItem" object="[fl.controls.SelectableList]" playername="" text=".selectedItem" tiptext="Gets or sets the item that was selected from a single-selection list." version=""/>
               <string helpurl="fl.controls:SelectableList:selectedItems:get" name="selectedItems" object="[fl.controls.SelectableList]" playername="" text=".selectedItems" tiptext="Gets or sets an array that contains the objects for the items that were selected from the multiple-selection list." version=""/>
            </folder>
            <folder helpurl="fl.controls:SelectableList" id="Events" name="Events" tiptext="Events for class SelectableList">
               <string helpurl="fl.controls:SelectableList_fl.events.ScrollEvent.SCROLL_scroll" name="scroll" object="[fl.controls.SelectableList]" playername="" text=".addEventListener(%type:String=ScrollEvent.SCROLL{ScrollEvent.SCROLL,Event.CHANGE,ListEvent.ITEM_DOUBLE_CLICK,ListEvent.ITEM_CLICK,MouseEvent.ROLL_OUT,MouseEvent.ROLL_OVER,ListEvent.ITEM_ROLL_OVER,ListEvent.ITEM_ROLL_OUT},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user scrolls horizontally or vertically." version=""/>
               <string helpurl="fl.controls:SelectableList_flash.events.Event.CHANGE_change" name="change" object="[fl.controls.SelectableList]" playername="" text=".addEventListener(%type:String=Event.CHANGE{ScrollEvent.SCROLL,Event.CHANGE,ListEvent.ITEM_DOUBLE_CLICK,ListEvent.ITEM_CLICK,MouseEvent.ROLL_OUT,MouseEvent.ROLL_OVER,ListEvent.ITEM_ROLL_OVER,ListEvent.ITEM_ROLL_OUT},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a different item is selected in the list." version=""/>
               <string helpurl="fl.controls:SelectableList_fl.events.ListEvent.ITEM_DOUBLE_CLICK_itemDoubleClick" name="itemDoubleClick" object="[fl.controls.SelectableList]" playername="" text=".addEventListener(%type:String=ListEvent.ITEM_DOUBLE_CLICK{ScrollEvent.SCROLL,Event.CHANGE,ListEvent.ITEM_DOUBLE_CLICK,ListEvent.ITEM_CLICK,MouseEvent.ROLL_OUT,MouseEvent.ROLL_OVER,ListEvent.ITEM_ROLL_OVER,ListEvent.ITEM_ROLL_OUT},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user clicks an item in the component twice in rapid succession." version=""/>
               <string helpurl="fl.controls:SelectableList_fl.events.ListEvent.ITEM_CLICK_itemClick" name="itemClick" object="[fl.controls.SelectableList]" playername="" text=".addEventListener(%type:String=ListEvent.ITEM_CLICK{ScrollEvent.SCROLL,Event.CHANGE,ListEvent.ITEM_DOUBLE_CLICK,ListEvent.ITEM_CLICK,MouseEvent.ROLL_OUT,MouseEvent.ROLL_OVER,ListEvent.ITEM_ROLL_OVER,ListEvent.ITEM_ROLL_OUT},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user clicks an item in the component." version=""/>
               <string helpurl="fl.controls:SelectableList_flash.events.MouseEvent.ROLL_OUT_rollOut" name="rollOut" object="[fl.controls.SelectableList]" playername="" text=".addEventListener(%type:String=MouseEvent.ROLL_OUT{ScrollEvent.SCROLL,Event.CHANGE,ListEvent.ITEM_DOUBLE_CLICK,ListEvent.ITEM_CLICK,MouseEvent.ROLL_OUT,MouseEvent.ROLL_OVER,ListEvent.ITEM_ROLL_OVER,ListEvent.ITEM_ROLL_OUT},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user rolls the pointer off of the component." version=""/>
               <string helpurl="fl.controls:SelectableList_flash.events.MouseEvent.ROLL_OVER_rollOver" name="rollOver" object="[fl.controls.SelectableList]" playername="" text=".addEventListener(%type:String=MouseEvent.ROLL_OVER{ScrollEvent.SCROLL,Event.CHANGE,ListEvent.ITEM_DOUBLE_CLICK,ListEvent.ITEM_CLICK,MouseEvent.ROLL_OUT,MouseEvent.ROLL_OVER,ListEvent.ITEM_ROLL_OVER,ListEvent.ITEM_ROLL_OUT},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user rolls the pointer over the component." version=""/>
               <string helpurl="fl.controls:SelectableList_fl.events.ListEvent.ITEM_ROLL_OVER_itemRollOver" name="itemRollOver" object="[fl.controls.SelectableList]" playername="" text=".addEventListener(%type:String=ListEvent.ITEM_ROLL_OVER{ScrollEvent.SCROLL,Event.CHANGE,ListEvent.ITEM_DOUBLE_CLICK,ListEvent.ITEM_CLICK,MouseEvent.ROLL_OUT,MouseEvent.ROLL_OVER,ListEvent.ITEM_ROLL_OVER,ListEvent.ITEM_ROLL_OUT},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user rolls the pointer over an item in the component." version=""/>
               <string helpurl="fl.controls:SelectableList_fl.events.ListEvent.ITEM_ROLL_OUT_itemRollOut" name="itemRollOut" object="[fl.controls.SelectableList]" playername="" text=".addEventListener(%type:String=ListEvent.ITEM_ROLL_OUT{ScrollEvent.SCROLL,Event.CHANGE,ListEvent.ITEM_DOUBLE_CLICK,ListEvent.ITEM_CLICK,MouseEvent.ROLL_OUT,MouseEvent.ROLL_OVER,ListEvent.ITEM_ROLL_OVER,ListEvent.ITEM_ROLL_OUT},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user rolls the pointer off of an item in the component." version=""/>
            </folder>
         </folder>
         <folder asAncestors="fl.core:UIComponent,flash.display:Sprite,flash.display:DisplayObjectContainer,flash.display:InteractiveObject,flash.display:DisplayObject,flash.events:EventDispatcher,Object" helpurl="fl.controls:Slider" id="[fl.controls.Slider]" index="true" name="Slider" sort="true" tiptext="The Slider component lets users select a value by moving a slider thumb between the end points of the slider track.">
            <folder helpurl="fl.controls:Slider" id="Methods" name="Methods" tiptext="Methods for class Slider">
               <string constructor="true" helpurl="fl.controls:Slider:Slider" name="Slider" object="[fl.controls.Slider]" playername="" text="new Slider(%%)" tiptext="Creates a new Slider component instance." version="1.0"/>
               <string helpurl="fl.controls:Slider:getStyleDefinition" name="getStyleDefinition" object="[fl.controls.Slider]" playername="" static="true" text="Slider.getStyleDefinition(%%):Object" tiptext="Retrieves the default style map for the current component." version="1.0"/>
               <string helpurl="fl.controls:Slider:setSize" name="setSize" object="[fl.controls.Slider]" playername="" text=".setSize(%width:Number,height:Number%):void" tiptext="Sets the component to the specified width and height." version="1.0"/>
            </folder>
            <folder helpurl="fl.controls:Slider" id="Properties" name="Properties" tiptext="Properties for class Slider">
               <string helpurl="fl.controls:Slider:direction:get" name="direction" object="[fl.controls.Slider]" playername="" text=".direction" tiptext="Sets the direction of the slider." version=""/>
               <string helpurl="fl.controls:Slider:enabled:get" name="enabled" object="[fl.controls.Slider]" playername="" text=".enabled" tiptext="Gets or sets a value that indicates whether the component can accept user interaction." version=""/>
               <string helpurl="fl.controls:Slider:maximum:get" name="maximum" object="[fl.controls.Slider]" playername="" text=".maximum" tiptext="The maximum allowed value on the Slider component instance." version=""/>
               <string helpurl="fl.controls:Slider:minimum:get" name="minimum" object="[fl.controls.Slider]" playername="" text=".minimum" tiptext="The minimum value allowed on the Slider component instance." version=""/>
               <string helpurl="fl.controls:Slider:snapInterval:get" name="snapInterval" object="[fl.controls.Slider]" playername="" text=".snapInterval" tiptext="Gets or sets the increment by which the value is increased or decreased as the user moves the slider thumb." version=""/>
               <string helpurl="fl.controls:Slider:tickInterval:get" name="tickInterval" object="[fl.controls.Slider]" playername="" text=".tickInterval" tiptext="The spacing of the tick marks relative to the maximum value of the component." version=""/>
               <string helpurl="fl.controls:Slider:value:get" name="value" object="[fl.controls.Slider]" playername="" text=".value" tiptext="Gets or sets the current value of the Slider component." version=""/>
               <string helpurl="fl.controls:Slider:liveDragging:set" name="liveDragging" object="[fl.controls.Slider]" playername="" text=".liveDragging" tiptext="Gets or sets a Boolean value that indicates whether the SliderEvent.CHANGE event is dispatched continuously as the user moves the slider thumb." version=""/>
            </folder>
            <folder helpurl="fl.controls:Slider" id="Events" name="Events" tiptext="Events for class Slider">
               <string helpurl="fl.controls:Slider_fl.events.SliderEvent.CHANGE_change" name="change" object="[fl.controls.Slider]" playername="" text=".addEventListener(%type:String=SliderEvent.CHANGE{SliderEvent.CHANGE,SliderEvent.THUMB_DRAG,SliderEvent.THUMB_RELEASE,SliderEvent.THUMB_PRESS},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the value of the Slider component changes as a result of mouse or keyboard interaction." version=""/>
               <string helpurl="fl.controls:Slider_fl.events.SliderEvent.THUMB_DRAG_thumbDrag" name="thumbDrag" object="[fl.controls.Slider]" playername="" text=".addEventListener(%type:String=SliderEvent.THUMB_DRAG{SliderEvent.CHANGE,SliderEvent.THUMB_DRAG,SliderEvent.THUMB_RELEASE,SliderEvent.THUMB_PRESS},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the slider thumb is pressed and then moved by the mouse." version=""/>
               <string helpurl="fl.controls:Slider_fl.events.SliderEvent.THUMB_RELEASE_thumbRelease" name="thumbRelease" object="[fl.controls.Slider]" playername="" text=".addEventListener(%type:String=SliderEvent.THUMB_RELEASE{SliderEvent.CHANGE,SliderEvent.THUMB_DRAG,SliderEvent.THUMB_RELEASE,SliderEvent.THUMB_PRESS},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the slider thumb is pressed and released." version=""/>
               <string helpurl="fl.controls:Slider_fl.events.SliderEvent.THUMB_PRESS_thumbPress" name="thumbPress" object="[fl.controls.Slider]" playername="" text=".addEventListener(%type:String=SliderEvent.THUMB_PRESS{SliderEvent.CHANGE,SliderEvent.THUMB_DRAG,SliderEvent.THUMB_RELEASE,SliderEvent.THUMB_PRESS},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the slider thumb is pressed." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="fl.controls:SliderDirection" id="[fl.controls.SliderDirection]" index="true" name="SliderDirection" sort="true" tiptext="The orientation of the Slider component.">
            <folder helpurl="fl.controls:SliderDirection" id="Properties" name="Properties" tiptext="Properties for class SliderDirection">
               <string helpurl="fl.controls:SliderDirection:HORIZONTAL" name="HORIZONTAL" object="[fl.controls.SliderDirection]" playername="" text=".HORIZONTAL" tiptext="Position the Slider component on the horizontal axis." version=""/>
               <string helpurl="fl.controls:SliderDirection:VERTICAL" name="VERTICAL" object="[fl.controls.SliderDirection]" playername="" text=".VERTICAL" tiptext="Position the Slider component on the vertical axis." version=""/>
            </folder>
         </folder>
         <folder asAncestors="fl.core:UIComponent,flash.display:Sprite,flash.display:DisplayObjectContainer,flash.display:InteractiveObject,flash.display:DisplayObject,flash.events:EventDispatcher,Object" helpurl="fl.controls:TextArea" id="[fl.controls.TextArea]" index="true" name="TextArea" sort="true" tiptext="The TextArea component is a multiline text field with a border and optional scroll bars.">
            <folder helpurl="fl.controls:TextArea" id="Methods" name="Methods" tiptext="Methods for class TextArea">
               <string constructor="true" helpurl="fl.controls:TextArea:TextArea" name="TextArea" object="[fl.controls.TextArea]" playername="" text="new TextArea(%%)" tiptext="Creates a new TextArea component instance." version="1.0"/>
               <string helpurl="fl.controls:TextArea:appendText" name="appendText" object="[fl.controls.TextArea]" playername="" text=".appendText(%text:String%):void" tiptext="Appends the specified string after the last character that the TextArea component contains." version="1.0"/>
               <string helpurl="fl.controls:TextArea:drawFocus" name="drawFocus" object="[fl.controls.TextArea]" playername="" text=".drawFocus(%focused:Boolean%):void" tiptext="Shows or hides the focus indicator on this component." version="1.0"/>
               <string helpurl="fl.controls:TextArea:getLineMetrics" name="getLineMetrics" object="[fl.controls.TextArea]" playername="" text=".getLineMetrics(%lineIndex:int%):flash.text:TextLineMetrics" tiptext="Retrieves information about a specified line of text." version="1.0"/>
               <string helpurl="fl.controls:TextArea:getStyleDefinition" name="getStyleDefinition" object="[fl.controls.TextArea]" playername="" static="true" text="TextArea.getStyleDefinition(%%):Object" tiptext="Retrieves the default style map for the current component." version="1.0"/>
               <string helpurl="fl.controls:TextArea:setSelection" name="setSelection" object="[fl.controls.TextArea]" playername="" text=".setSelection(%setSelection:int,endIndex:int%):void" tiptext="Sets the range of a selection made in a text area that has focus." version="1.0"/>
            </folder>
            <folder helpurl="fl.controls:TextArea" id="Properties" name="Properties" tiptext="Properties for class TextArea">
               <string helpurl="fl.controls:TextArea:textField" name="textField" object="[fl.controls.TextArea]" playername="" text=".textField" tiptext="A reference to the internal text field of the TextArea component." version=""/>
               <string helpurl="fl.controls:TextArea:alwaysShowSelection:get" name="alwaysShowSelection" object="[fl.controls.TextArea]" playername="" text=".alwaysShowSelection" tiptext="Gets or sets a Boolean value that indicates whether Flash Player highlights a selection in the text field when the text field does not have focus." version=""/>
               <string helpurl="fl.controls:TextArea:condenseWhite:get" name="condenseWhite" object="[fl.controls.TextArea]" playername="" text=".condenseWhite" tiptext="Gets or sets a Boolean value that indicates whether extra white space is removed from a TextArea component that contains HTML text." version=""/>
               <string helpurl="fl.controls:TextArea:displayAsPassword:get" name="displayAsPassword" object="[fl.controls.TextArea]" playername="" text=".displayAsPassword" tiptext="Gets or sets a Boolean value that indicates whether the TextArea component instance is the text field for a password." version=""/>
               <string helpurl="fl.controls:TextArea:editable:get" name="editable" object="[fl.controls.TextArea]" playername="" text=".editable" tiptext="Gets or sets a Boolean value that indicates whether the user can edit the text in the component." version=""/>
               <string helpurl="fl.controls:TextArea:enabled:get" name="enabled" object="[fl.controls.TextArea]" playername="" text=".enabled" tiptext="Gets or sets a value that indicates whether the component can accept user interaction." version=""/>
               <string helpurl="fl.controls:TextArea:horizontalScrollBar:get" name="horizontalScrollBar" object="[fl.controls.TextArea]" playername="" text=".horizontalScrollBar" tiptext="Gets a reference to the horizontal scroll bar." version=""/>
               <string helpurl="fl.controls:TextArea:horizontalScrollPolicy:get" name="horizontalScrollPolicy" object="[fl.controls.TextArea]" playername="" text=".horizontalScrollPolicy" tiptext="Gets or sets the scroll policy for the horizontal scroll bar." version=""/>
               <string helpurl="fl.controls:TextArea:horizontalScrollPosition:get" name="horizontalScrollPosition" object="[fl.controls.TextArea]" playername="" text=".horizontalScrollPosition" tiptext="Gets or sets the change in the position of the scroll bar thumb, in pixels, after the user scrolls the text field horizontally." version=""/>
               <string helpurl="fl.controls:TextArea:htmlText:get" name="htmlText" object="[fl.controls.TextArea]" playername="" text=".htmlText" tiptext="Gets or sets the HTML representation of the string that the text field contains." version=""/>
               <string helpurl="fl.controls:TextArea:imeMode:get" name="imeMode" object="[fl.controls.TextArea]" playername="" text=".imeMode" tiptext="Gets or sets the mode of the input method editor (IME)." version=""/>
               <string helpurl="fl.controls:TextArea:length:get" name="length" object="[fl.controls.TextArea]" playername="" text=".length" tiptext="Gets the count of characters that the TextArea component contains." version=""/>
               <string helpurl="fl.controls:TextArea:maxChars:get" name="maxChars" object="[fl.controls.TextArea]" playername="" text=".maxChars" tiptext="Gets or sets the maximum number of characters that a user can enter in the text field." version=""/>
               <string helpurl="fl.controls:TextArea:maxHorizontalScrollPosition:get" name="maxHorizontalScrollPosition" object="[fl.controls.TextArea]" playername="" text=".maxHorizontalScrollPosition" tiptext="Gets the maximum value of the horizontalScrollPosition property." version=""/>
               <string helpurl="fl.controls:TextArea:maxVerticalScrollPosition:get" name="maxVerticalScrollPosition" object="[fl.controls.TextArea]" playername="" text=".maxVerticalScrollPosition" tiptext="Gets the maximum value of the verticalScrollPosition property." version=""/>
               <string helpurl="fl.controls:TextArea:restrict:get" name="restrict" object="[fl.controls.TextArea]" playername="" text=".restrict" tiptext="Gets or sets the string of characters that the text field accepts from a user." version=""/>
               <string helpurl="fl.controls:TextArea:selectionBeginIndex:get" name="selectionBeginIndex" object="[fl.controls.TextArea]" playername="" text=".selectionBeginIndex" tiptext="Gets the index position of the first selected character in a selection of one or more characters." version=""/>
               <string helpurl="fl.controls:TextArea:selectionEndIndex:get" name="selectionEndIndex" object="[fl.controls.TextArea]" playername="" text=".selectionEndIndex" tiptext="Gets the index position of the last selected character in a selection of one or more characters." version=""/>
               <string helpurl="fl.controls:TextArea:textHeight:get" name="textHeight" object="[fl.controls.TextArea]" playername="" text=".textHeight" tiptext="Gets the height of the text, in pixels." version=""/>
               <string helpurl="fl.controls:TextArea:textWidth:get" name="textWidth" object="[fl.controls.TextArea]" playername="" text=".textWidth" tiptext="Gets the width of the text, in pixels." version=""/>
               <string helpurl="fl.controls:TextArea:text:get" name="text" object="[fl.controls.TextArea]" playername="" text=".text" tiptext="Gets or sets a string which contains the text that is currently in the TextInput component." version=""/>
               <string helpurl="fl.controls:TextArea:verticalScrollBar:get" name="verticalScrollBar" object="[fl.controls.TextArea]" playername="" text=".verticalScrollBar" tiptext="Gets a reference to the vertical scroll bar." version=""/>
               <string helpurl="fl.controls:TextArea:verticalScrollPolicy:get" name="verticalScrollPolicy" object="[fl.controls.TextArea]" playername="" text=".verticalScrollPolicy" tiptext="Gets or sets the scroll policy for the vertical scroll bar." version=""/>
               <string helpurl="fl.controls:TextArea:verticalScrollPosition:get" name="verticalScrollPosition" object="[fl.controls.TextArea]" playername="" text=".verticalScrollPosition" tiptext="Gets or sets the change in the position of the scroll bar thumb, in pixels, after the user scrolls the text field vertically." version=""/>
               <string helpurl="fl.controls:TextArea:wordWrap:get" name="wordWrap" object="[fl.controls.TextArea]" playername="" text=".wordWrap" tiptext="Gets or sets a Boolean value that indicates whether the text wraps at the end of the line." version=""/>
            </folder>
            <folder helpurl="fl.controls:TextArea" id="Events" name="Events" tiptext="Events for class TextArea">
               <string helpurl="fl.controls:TextArea_fl.events.ScrollEvent.SCROLL_scroll" name="scroll" object="[fl.controls.TextArea]" playername="" text=".addEventListener(%type:String=ScrollEvent.SCROLL{ScrollEvent.SCROLL,ComponentEvent.ENTER,TextEvent.TEXT_INPUT,Event.CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the content is scrolled." version=""/>
               <string helpurl="fl.controls:TextArea_fl.events.ComponentEvent.ENTER_enter" name="enter" object="[fl.controls.TextArea]" playername="" text=".addEventListener(%type:String=ComponentEvent.ENTER{ScrollEvent.SCROLL,ComponentEvent.ENTER,TextEvent.TEXT_INPUT,Event.CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user presses the Enter key while in the component." version=""/>
               <string helpurl="fl.controls:TextArea_flash.events.TextEvent.TEXT_INPUT_textInput" name="textInput" object="[fl.controls.TextArea]" playername="" text=".addEventListener(%type:String=TextEvent.TEXT_INPUT{ScrollEvent.SCROLL,ComponentEvent.ENTER,TextEvent.TEXT_INPUT,Event.CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user enters, deletes, or pastes text into the component." version=""/>
               <string helpurl="fl.controls:TextArea_flash.events.Event.CHANGE_change" name="change" object="[fl.controls.TextArea]" playername="" text=".addEventListener(%type:String=Event.CHANGE{ScrollEvent.SCROLL,ComponentEvent.ENTER,TextEvent.TEXT_INPUT,Event.CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the text in the TextArea component changes." version=""/>
            </folder>
         </folder>
         <folder asAncestors="fl.core:UIComponent,flash.display:Sprite,flash.display:DisplayObjectContainer,flash.display:InteractiveObject,flash.display:DisplayObject,flash.events:EventDispatcher,Object" helpurl="fl.controls:TextInput" id="[fl.controls.TextInput]" index="true" name="TextInput" sort="true" tiptext="The TextInput component is a single-line text component that contains a native ActionScript TextField object.">
            <folder helpurl="fl.controls:TextInput" id="Methods" name="Methods" tiptext="Methods for class TextInput">
               <string constructor="true" helpurl="fl.controls:TextInput:TextInput" name="TextInput" object="[fl.controls.TextInput]" playername="" text="new TextInput(%%)" tiptext="Creates a new TextInput component instance." version="1.0"/>
               <string helpurl="fl.controls:TextInput:appendText" name="appendText" object="[fl.controls.TextInput]" playername="" text=".appendText(%text:String%):void" tiptext="Appends the specified string after the last character that the TextArea contains." version="1.0"/>
               <string helpurl="fl.controls:TextInput:drawFocus" name="drawFocus" object="[fl.controls.TextInput]" playername="" text=".drawFocus(%focused:Boolean%):void" tiptext="Shows or hides the focus indicator on this component." version="1.0"/>
               <string helpurl="fl.controls:TextInput:getLineMetrics" name="getLineMetrics" object="[fl.controls.TextInput]" playername="" text=".getLineMetrics(%index:int%):flash.text:TextLineMetrics" tiptext="Retrieves information about a specified line of text." version="1.0"/>
               <string helpurl="fl.controls:TextInput:getStyleDefinition" name="getStyleDefinition" object="[fl.controls.TextInput]" playername="" static="true" text="TextInput.getStyleDefinition(%%):Object" tiptext="Retrieves the default style map for the current component." version="1.0"/>
               <string helpurl="fl.controls:TextInput:setSelection" name="setSelection" object="[fl.controls.TextInput]" playername="" text=".setSelection(%beginIndex:int,endIndex:int%):void" tiptext="Sets the range of a selection made in a text area that has focus." version="1.0"/>
            </folder>
            <folder helpurl="fl.controls:TextInput" id="Properties" name="Properties" tiptext="Properties for class TextInput">
               <string helpurl="fl.controls:TextInput:textField" name="textField" object="[fl.controls.TextInput]" playername="" text=".textField" tiptext="A reference to the internal text field of the TextInput component." version=""/>
               <string helpurl="fl.controls:TextInput:alwaysShowSelection:get" name="alwaysShowSelection" object="[fl.controls.TextInput]" playername="" text=".alwaysShowSelection" tiptext="Gets or sets a Boolean value that indicates how a selection is displayed when the text field does not have focus." version=""/>
               <string helpurl="fl.controls:TextInput:condenseWhite:get" name="condenseWhite" object="[fl.controls.TextInput]" playername="" text=".condenseWhite" tiptext="Gets or sets a Boolean value that indicates whether extra white space is removed from a TextInput component that contains HTML text." version=""/>
               <string helpurl="fl.controls:TextInput:displayAsPassword:get" name="displayAsPassword" object="[fl.controls.TextInput]" playername="" text=".displayAsPassword" tiptext="Gets or sets a Boolean value that indicates whether the current TextInput component instance was created to contain a password or to contain text." version=""/>
               <string helpurl="fl.controls:TextInput:editable:get" name="editable" object="[fl.controls.TextInput]" playername="" text=".editable" tiptext="Gets or sets a Boolean value that indicates whether the text field can be edited by the user." version=""/>
               <string helpurl="fl.controls:TextInput:enabled:get" name="enabled" object="[fl.controls.TextInput]" playername="" text=".enabled" tiptext="Gets or sets a value that indicates whether the component can accept user interaction." version=""/>
               <string helpurl="fl.controls:TextInput:horizontalScrollPosition:get" name="horizontalScrollPosition" object="[fl.controls.TextInput]" playername="" text=".horizontalScrollPosition" tiptext="Gets or sets the position of the thumb of the horizontal scroll bar." version=""/>
               <string helpurl="fl.controls:TextInput:htmlText:get" name="htmlText" object="[fl.controls.TextInput]" playername="" text=".htmlText" tiptext="Contains the HTML representation of the string that the text field contains." version=""/>
               <string helpurl="fl.controls:TextInput:imeMode:get" name="imeMode" object="[fl.controls.TextInput]" playername="" text=".imeMode" tiptext="Gets or sets the mode of the input method editor (IME)." version=""/>
               <string helpurl="fl.controls:TextInput:length:get" name="length" object="[fl.controls.TextInput]" playername="" text=".length" tiptext="Gets the number of characters in a TextInput component." version=""/>
               <string helpurl="fl.controls:TextInput:maxChars:get" name="maxChars" object="[fl.controls.TextInput]" playername="" text=".maxChars" tiptext="Gets or sets the maximum number of characters that a user can enter in the text field." version=""/>
               <string helpurl="fl.controls:TextInput:maxHorizontalScrollPosition:get" name="maxHorizontalScrollPosition" object="[fl.controls.TextInput]" playername="" text=".maxHorizontalScrollPosition" tiptext="Gets a value that describes the furthest position to which the text field can be scrolled to the right." version=""/>
               <string helpurl="fl.controls:TextInput:restrict:get" name="restrict" object="[fl.controls.TextInput]" playername="" text=".restrict" tiptext="Gets or sets the string of characters that the text field accepts from a user." version=""/>
               <string helpurl="fl.controls:TextInput:selectionBeginIndex:get" name="selectionBeginIndex" object="[fl.controls.TextInput]" playername="" text=".selectionBeginIndex" tiptext="Gets the index value of the first selected character in a selection of one or more characters." version=""/>
               <string helpurl="fl.controls:TextInput:selectionEndIndex:get" name="selectionEndIndex" object="[fl.controls.TextInput]" playername="" text=".selectionEndIndex" tiptext="Gets the index position of the last selected character in a selection of one or more characters." version=""/>
               <string helpurl="fl.controls:TextInput:textHeight:get" name="textHeight" object="[fl.controls.TextInput]" playername="" text=".textHeight" tiptext="The height of the text, in pixels." version=""/>
               <string helpurl="fl.controls:TextInput:textWidth:get" name="textWidth" object="[fl.controls.TextInput]" playername="" text=".textWidth" tiptext="The width of the text, in pixels." version=""/>
               <string helpurl="fl.controls:TextInput:text:get" name="text" object="[fl.controls.TextInput]" playername="" text=".text" tiptext="Gets or sets a string which contains the text that is currently in the TextInput component." version=""/>
            </folder>
            <folder helpurl="fl.controls:TextInput" id="Events" name="Events" tiptext="Events for class TextInput">
               <string helpurl="fl.controls:TextInput_flash.events.TextEvent.TEXT_INPUT_textInput" name="textInput" object="[fl.controls.TextInput]" playername="" text=".addEventListener(%type:String=TextEvent.TEXT_INPUT{TextEvent.TEXT_INPUT,ComponentEvent.ENTER,Event.CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user inputs text." version=""/>
               <string helpurl="fl.controls:TextInput_fl.events.ComponentEvent.ENTER_enter" name="enter" object="[fl.controls.TextInput]" playername="" text=".addEventListener(%type:String=ComponentEvent.ENTER{TextEvent.TEXT_INPUT,ComponentEvent.ENTER,Event.CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user presses the Enter key." version=""/>
               <string helpurl="fl.controls:TextInput_flash.events.Event.CHANGE_change" name="change" object="[fl.controls.TextInput]" playername="" text=".addEventListener(%type:String=Event.CHANGE{TextEvent.TEXT_INPUT,ComponentEvent.ENTER,Event.CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when user input changes text in the TextInput component." version=""/>
            </folder>
         </folder>
         <folder asAncestors="fl.controls:SelectableList,fl.containers:BaseScrollPane,fl.core:UIComponent,flash.display:Sprite,flash.display:DisplayObjectContainer,flash.display:InteractiveObject,flash.display:DisplayObject,flash.events:EventDispatcher,Object" helpurl="fl.controls:TileList" id="[fl.controls.TileList]" index="true" name="TileList" sort="true" tiptext="The TileList class provides a grid of rows and columns that is typically used to format and display images in a &quot;tiled&quot; format.">
            <folder helpurl="fl.controls:TileList" id="Methods" name="Methods" tiptext="Methods for class TileList">
               <string constructor="true" helpurl="fl.controls:TileList:TileList" name="TileList" object="[fl.controls.TileList]" playername="" text="new TileList(%%)" tiptext="Creates a new List component instance." version="1.0"/>
               <string helpurl="fl.controls:TileList:getStyleDefinition" name="getStyleDefinition" object="[fl.controls.TileList]" playername="" static="true" text="TileList.getStyleDefinition(%%):Object" tiptext="Retrieves the default style map for the current component." version="1.0"/>
               <string helpurl="fl.controls:TileList:itemToLabel" name="itemToLabel" object="[fl.controls.TileList]" playername="" text=".itemToLabel(%item:Object%):String" tiptext="Retrieves the string that the renderer displays for a given data object based on the labelField and labelFunction properties." version="1.0"/>
               <string helpurl="fl.controls:TileList:scrollToIndex" name="scrollToIndex" object="[fl.controls.TileList]" playername="" text=".scrollToIndex(%newCaretIndex:int%):void" tiptext="Scrolls the list to the item at the specified index." version="1.0"/>
            </folder>
            <folder helpurl="fl.controls:TileList" id="Properties" name="Properties" tiptext="Properties for class TileList">
               <string helpurl="fl.controls:TileList:columnCount:get" name="columnCount" object="[fl.controls.TileList]" playername="" text=".columnCount" tiptext="Gets or sets the number of columns that are at least partially visible in the list." version=""/>
               <string helpurl="fl.controls:TileList:columnWidth:get" name="columnWidth" object="[fl.controls.TileList]" playername="" text=".columnWidth" tiptext="Gets or sets the width that is applied to a column in the list, in pixels." version=""/>
               <string helpurl="fl.controls:TileList:dataProvider:get" name="dataProvider" object="[fl.controls.TileList]" playername="" text=".dataProvider" tiptext="Gets or sets the data model of the list of items to be viewed." version=""/>
               <string helpurl="fl.controls:TileList:direction:get" name="direction" object="[fl.controls.TileList]" playername="" text=".direction" tiptext="Gets or sets a value that indicates whether the TileList component scrolls horizontally or vertically." version=""/>
               <string helpurl="fl.controls:TileList:iconField:get" name="iconField" object="[fl.controls.TileList]" playername="" text=".iconField" tiptext="Gets or sets the item field that provides the icon for the item." version=""/>
               <string helpurl="fl.controls:TileList:iconFunction:get" name="iconFunction" object="[fl.controls.TileList]" playername="" text=".iconFunction" tiptext="Gets or sets the function to be used to obtain the icon for the item." version=""/>
               <string helpurl="fl.controls:TileList:innerHeight:get" name="innerHeight" object="[fl.controls.TileList]" playername="" text=".innerHeight" tiptext="Gets the height of the content area, in pixels." version=""/>
               <string helpurl="fl.controls:TileList:innerWidth:get" name="innerWidth" object="[fl.controls.TileList]" playername="" text=".innerWidth" tiptext="Gets the width of the content area, in pixels." version=""/>
               <string helpurl="fl.controls:TileList:labelField:get" name="labelField" object="[fl.controls.TileList]" playername="" text=".labelField" tiptext="Gets or sets a field in each item that contains a label for each tile." version=""/>
               <string helpurl="fl.controls:TileList:labelFunction:get" name="labelFunction" object="[fl.controls.TileList]" playername="" text=".labelFunction" tiptext="Gets a function that indicates the fields of an item that provide the label text for a tile." version=""/>
               <string helpurl="fl.controls:TileList:maxHorizontalScrollPosition:get" name="maxHorizontalScrollPosition" object="[fl.controls.TileList]" playername="" text=".maxHorizontalScrollPosition" tiptext="Gets the maximum horizontal scroll position for the current content, in pixels." version=""/>
               <string helpurl="fl.controls:TileList:rowCount:get" name="rowCount" object="[fl.controls.TileList]" playername="" text=".rowCount" tiptext="Gets or sets the number of rows that are at least partially visible in the list." version=""/>
               <string helpurl="fl.controls:TileList:rowHeight:get" name="rowHeight" object="[fl.controls.TileList]" playername="" text=".rowHeight" tiptext="Gets or sets the height that is applied to each row in the list, in pixels." version=""/>
               <string helpurl="fl.controls:TileList:scrollPolicy:get" name="scrollPolicy" object="[fl.controls.TileList]" playername="" text=".scrollPolicy" tiptext="Gets or sets the scroll policy for the TileList component." version=""/>
               <string helpurl="fl.controls:TileList:sourceField:get" name="sourceField" object="[fl.controls.TileList]" playername="" text=".sourceField" tiptext="Gets or sets the item field that provides the source path for a tile." version=""/>
               <string helpurl="fl.controls:TileList:sourceFunction:get" name="sourceFunction" object="[fl.controls.TileList]" playername="" text=".sourceFunction" tiptext="Gets or sets the function to be used to obtain the source path for a tile." version=""/>
            </folder>
         </folder>
         <folder asAncestors="fl.controls:ScrollBar,fl.core:UIComponent,flash.display:Sprite,flash.display:DisplayObjectContainer,flash.display:InteractiveObject,flash.display:DisplayObject,flash.events:EventDispatcher,Object" helpurl="fl.controls:UIScrollBar" id="[fl.controls.UIScrollBar]" index="true" name="UIScrollBar" sort="true" tiptext="The UIScrollBar class includes all of the scroll bar functionality, but adds a scrollTarget property so it can be attached to a TextField instance or a TLFTextField instance.">
            <folder helpurl="fl.controls:UIScrollBar" id="Methods" name="Methods" tiptext="Methods for class UIScrollBar">
               <string constructor="true" helpurl="fl.controls:UIScrollBar:UIScrollBar" name="UIScrollBar" object="[fl.controls.UIScrollBar]" playername="" text="new UIScrollBar(%%)" tiptext="Creates a new UIScrollBar component instance." version="1.0"/>
               <string helpurl="fl.controls:UIScrollBar:getStyleDefinition" name="getStyleDefinition" object="[fl.controls.UIScrollBar]" playername="" static="true" text="UIScrollBar.getStyleDefinition(%%):Object" tiptext="Retrieves the default style map for the current component." version="1.0"/>
               <string helpurl="fl.controls:UIScrollBar:setScrollProperties" name="setScrollProperties" object="[fl.controls.UIScrollBar]" playername="" text=".setScrollProperties(%pageSize:Number,minScrollPosition:Number,maxScrollPosition:Number[,pageScrollSize:Number=0]%):void" tiptext="Sets the range and viewport size of the ScrollBar component." version="1.0"/>
               <string helpurl="fl.controls:UIScrollBar:update" name="update" object="[fl.controls.UIScrollBar]" playername="" text=".update(%%):void" tiptext="Forces the scroll bar to update its scroll properties immediately." version="1.0"/>
            </folder>
            <folder helpurl="fl.controls:UIScrollBar" id="Properties" name="Properties" tiptext="Properties for class UIScrollBar">
               <string helpurl="fl.controls:UIScrollBar:direction:get" name="direction" object="[fl.controls.UIScrollBar]" playername="" text=".direction" tiptext="Gets or sets a value that indicates whether the scroll bar scrolls horizontally or vertically." version=""/>
               <string helpurl="fl.controls:UIScrollBar:scrollTarget:get" name="scrollTarget" object="[fl.controls.UIScrollBar]" playername="" text=".scrollTarget" tiptext="Registers a TextField instance or a TLFTextField instance with the ScrollBar component instance." version=""/>
            </folder>
         </folder>
      </folder>
      <folder helpurl="fl.controls.dataGridClasses" id="fl.controls.dataGridClasses" name="fl.controls.dataGridClasses" sort="true" tiptext="Classes for package fl.controls.dataGridClasses">
         <folder asAncestors="fl.controls:TextInput,fl.core:UIComponent,flash.display:Sprite,flash.display:DisplayObjectContainer,flash.display:InteractiveObject,flash.display:DisplayObject,flash.events:EventDispatcher,Object" helpurl="fl.controls.dataGridClasses:DataGridCellEditor" id="[fl.controls.dataGridClasses.DataGridCellEditor]" index="true" name="DataGridCellEditor" sort="true" tiptext="The DataGridCellEditor class defines the default item editor for a DataGrid control.">
            <folder helpurl="fl.controls.dataGridClasses:DataGridCellEditor" id="Methods" name="Methods" tiptext="Methods for class DataGridCellEditor">
               <string constructor="true" helpurl="fl.controls.dataGridClasses:DataGridCellEditor:DataGridCellEditor" name="DataGridCellEditor" object="[fl.controls.dataGridClasses.DataGridCellEditor]" playername="" text="new DataGridCellEditor(%%):void" tiptext="Creates a new DataGridCellEditor instance." version="1.0"/>
               <string helpurl="fl.controls.dataGridClasses:DataGridCellEditor:getStyleDefinition" name="getStyleDefinition" object="[fl.controls.dataGridClasses.DataGridCellEditor]" playername="" static="true" text="DataGridCellEditor.getStyleDefinition(%%):Object" tiptext="Retrieves the default style map for the current component." version="1.0"/>
               <string helpurl="fl.controls.dataGridClasses:DataGridCellEditor:setMouseState" name="setMouseState" object="[fl.controls.dataGridClasses.DataGridCellEditor]" playername="" text=".setMouseState(%state:String%):void" tiptext="Sets the current cell to a specific mouse state." version="1.0"/>
            </folder>
            <folder helpurl="fl.controls.dataGridClasses:DataGridCellEditor" id="Properties" name="Properties" tiptext="Properties for class DataGridCellEditor">
               <string helpurl="fl.controls.dataGridClasses:DataGridCellEditor:data:get" name="data" object="[fl.controls.dataGridClasses.DataGridCellEditor]" playername="" text=".data" tiptext="Gets or sets an Object that represents the data that is associated with a component." version=""/>
               <string helpurl="fl.controls.dataGridClasses:DataGridCellEditor:listData:get" name="listData" object="[fl.controls.dataGridClasses.DataGridCellEditor]" playername="" text=".listData" tiptext="Gets or sets the list properties that are applied to the cell--for example, the index and selected values." version=""/>
               <string helpurl="fl.controls.dataGridClasses:DataGridCellEditor:selected:get" name="selected" object="[fl.controls.dataGridClasses.DataGridCellEditor]" playername="" text=".selected" tiptext="Indicates whether the cell is included in the indices that were selected by the owner." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="fl.controls.dataGridClasses:DataGridColumn" id="[fl.controls.dataGridClasses.DataGridColumn]" index="true" name="DataGridColumn" sort="true" tiptext="The DataGridColumn class describes a column in a DataGrid component.">
            <folder helpurl="fl.controls.dataGridClasses:DataGridColumn" id="Methods" name="Methods" tiptext="Methods for class DataGridColumn">
               <string constructor="true" helpurl="fl.controls.dataGridClasses:DataGridColumn:DataGridColumn" name="DataGridColumn" object="[fl.controls.dataGridClasses.DataGridColumn]" playername="" text="new DataGridColumn(%[columnName:String=null]%)" tiptext="Creates a new DataGridColumn instance." version="1.0"/>
               <string helpurl="fl.controls.dataGridClasses:DataGridColumn:itemToLabel" name="itemToLabel" object="[fl.controls.dataGridClasses.DataGridColumn]" playername="" text=".itemToLabel(%data:Object%):String" tiptext="Returns the string that the item renderer displays for the given data object." version="1.0"/>
               <string helpurl="fl.controls.dataGridClasses:DataGridColumn:toString" name="toString" object="[fl.controls.dataGridClasses.DataGridColumn]" playername="" text=".toString(%%):String" tiptext="Returns a string representation of the DataGridColumn object." version="1.0"/>
            </folder>
            <folder helpurl="fl.controls.dataGridClasses:DataGridColumn" id="Properties" name="Properties" tiptext="Properties for class DataGridColumn">
               <string helpurl="fl.controls.dataGridClasses:DataGridColumn:dataField" name="dataField" object="[fl.controls.dataGridClasses.DataGridColumn]" playername="" text=".dataField" tiptext="Identifies the name of the field or property in the data provider item that is associated with the column." version=""/>
               <string helpurl="fl.controls.dataGridClasses:DataGridColumn:editable" name="editable" object="[fl.controls.dataGridClasses.DataGridColumn]" playername="" text=".editable" tiptext="Indicates whether the items in the column can be edited." version=""/>
               <string helpurl="fl.controls.dataGridClasses:DataGridColumn:editorDataField" name="editorDataField" object="[fl.controls.dataGridClasses.DataGridColumn]" playername="" text=".editorDataField" tiptext="Identifies the name of the property of the item editor that contains the new data for the list item." version=""/>
               <string helpurl="fl.controls.dataGridClasses:DataGridColumn:itemEditor" name="itemEditor" object="[fl.controls.dataGridClasses.DataGridColumn]" playername="" text=".itemEditor" tiptext="Indicates the class of the instances of the item editor to use for the column, when it is editable." version=""/>
               <string helpurl="fl.controls.dataGridClasses:DataGridColumn:resizable" name="resizable" object="[fl.controls.dataGridClasses.DataGridColumn]" playername="" text=".resizable" tiptext="Indicates whether the user is allowed to change the width of the column." version=""/>
               <string helpurl="fl.controls.dataGridClasses:DataGridColumn:sortDescending" name="sortDescending" object="[fl.controls.dataGridClasses.DataGridColumn]" playername="" text=".sortDescending" tiptext="Indicates whether the DataGridColumn is to be sorted in ascending or descending order." version=""/>
               <string helpurl="fl.controls.dataGridClasses:DataGridColumn:sortOptions" name="sortOptions" object="[fl.controls.dataGridClasses.DataGridColumn]" playername="" text=".sortOptions" tiptext="One or more defined constants, identified by name or number and separated by the bitwise OR (|) operator." version=""/>
               <string helpurl="fl.controls.dataGridClasses:DataGridColumn:sortable" name="sortable" object="[fl.controls.dataGridClasses.DataGridColumn]" playername="" text=".sortable" tiptext="Indicates whether the user can click on the header of the current column to sort the data provider." version=""/>
               <string helpurl="fl.controls.dataGridClasses:DataGridColumn:cellRenderer:get" name="cellRenderer" object="[fl.controls.dataGridClasses.DataGridColumn]" playername="" text=".cellRenderer" tiptext="The class that is used to render the items in this column." version=""/>
               <string helpurl="fl.controls.dataGridClasses:DataGridColumn:headerRenderer:get" name="headerRenderer" object="[fl.controls.dataGridClasses.DataGridColumn]" playername="" text=".headerRenderer" tiptext="The class that is used to render the header of this column." version=""/>
               <string helpurl="fl.controls.dataGridClasses:DataGridColumn:headerText:get" name="headerText" object="[fl.controls.dataGridClasses.DataGridColumn]" playername="" text=".headerText" tiptext="The column name to be displayed in the column header." version=""/>
               <string helpurl="fl.controls.dataGridClasses:DataGridColumn:imeMode:get" name="imeMode" object="[fl.controls.dataGridClasses.DataGridColumn]" playername="" text=".imeMode" tiptext="The mode of the input method editor (IME)." version=""/>
               <string helpurl="fl.controls.dataGridClasses:DataGridColumn:labelFunction:get" name="labelFunction" object="[fl.controls.dataGridClasses.DataGridColumn]" playername="" text=".labelFunction" tiptext="A function that determines the text to be displayed in this column." version=""/>
               <string helpurl="fl.controls.dataGridClasses:DataGridColumn:minWidth:get" name="minWidth" object="[fl.controls.dataGridClasses.DataGridColumn]" playername="" text=".minWidth" tiptext="The minimum width of the column, in pixels." version=""/>
               <string helpurl="fl.controls.dataGridClasses:DataGridColumn:sortCompareFunction:get" name="sortCompareFunction" object="[fl.controls.dataGridClasses.DataGridColumn]" playername="" text=".sortCompareFunction" tiptext="A callback function that is called when sorting the data in the column." version=""/>
               <string helpurl="fl.controls.dataGridClasses:DataGridColumn:visible:get" name="visible" object="[fl.controls.dataGridClasses.DataGridColumn]" playername="" text=".visible" tiptext="Indicates whether the column is visible." version=""/>
               <string helpurl="fl.controls.dataGridClasses:DataGridColumn:width:get" name="width" object="[fl.controls.dataGridClasses.DataGridColumn]" playername="" text=".width" tiptext="The width of the column, in pixels." version=""/>
            </folder>
         </folder>
         <folder asAncestors="fl.controls:LabelButton,fl.controls:BaseButton,fl.core:UIComponent,flash.display:Sprite,flash.display:DisplayObjectContainer,flash.display:InteractiveObject,flash.display:DisplayObject,flash.events:EventDispatcher,Object" helpurl="fl.controls.dataGridClasses:HeaderRenderer" id="[fl.controls.dataGridClasses.HeaderRenderer]" index="true" name="HeaderRenderer" sort="true" tiptext="The HeaderRenderer class displays the column header for the current DataGrid column.">
            <folder helpurl="fl.controls.dataGridClasses:HeaderRenderer" id="Methods" name="Methods" tiptext="Methods for class HeaderRenderer">
               <string constructor="true" helpurl="fl.controls.dataGridClasses:HeaderRenderer:HeaderRenderer" name="HeaderRenderer" object="[fl.controls.dataGridClasses.HeaderRenderer]" playername="" text="new HeaderRenderer(%%):void" tiptext="Creates a new HeaderRenderer instance." version="1.0"/>
               <string helpurl="fl.controls.dataGridClasses:HeaderRenderer:getStyleDefinition" name="getStyleDefinition" object="[fl.controls.dataGridClasses.HeaderRenderer]" playername="" static="true" text="HeaderRenderer.getStyleDefinition(%%):Object" tiptext="Retrieves the default style map for the current component." version="1.0"/>
            </folder>
            <folder helpurl="fl.controls.dataGridClasses:HeaderRenderer" id="Properties" name="Properties" tiptext="Properties for class HeaderRenderer">
               <string helpurl="fl.controls.dataGridClasses:HeaderRenderer:column:get" name="column" object="[fl.controls.dataGridClasses.HeaderRenderer]" playername="" text=".column" tiptext="The index of the column that belongs to this HeaderRenderer instance." version=""/>
            </folder>
         </folder>
      </folder>
      <folder helpurl="fl.controls.listClasses" id="fl.controls.listClasses" name="fl.controls.listClasses" sort="true" tiptext="Classes for package fl.controls.listClasses">
         <folder asAncestors="fl.controls:LabelButton,fl.controls:BaseButton,fl.core:UIComponent,flash.display:Sprite,flash.display:DisplayObjectContainer,flash.display:InteractiveObject,flash.display:DisplayObject,flash.events:EventDispatcher,Object" helpurl="fl.controls.listClasses:CellRenderer" id="[fl.controls.listClasses.CellRenderer]" index="true" name="CellRenderer" sort="true" tiptext="The CellRenderer class defines methods and properties for list-based components to use to manipulate and display custom cell content in each of their rows.">
            <folder helpurl="fl.controls.listClasses:CellRenderer" id="Methods" name="Methods" tiptext="Methods for class CellRenderer">
               <string constructor="true" helpurl="fl.controls.listClasses:CellRenderer:CellRenderer" name="CellRenderer" object="[fl.controls.listClasses.CellRenderer]" playername="" text="new CellRenderer(%%):void" tiptext="Creates a new CellRenderer instance." version="1.0"/>
               <string helpurl="fl.controls.listClasses:CellRenderer:getStyleDefinition" name="getStyleDefinition" object="[fl.controls.listClasses.CellRenderer]" playername="" static="true" text="CellRenderer.getStyleDefinition(%%):Object" tiptext="Retrieves the default style map for the current component." version="1.0"/>
               <string helpurl="fl.controls.listClasses:CellRenderer:setSize" name="setSize" object="[fl.controls.listClasses.CellRenderer]" playername="" text=".setSize(%width:Number,height:Number%):void" tiptext="Specifies the dimensions at which the data should be rendered." version="1.0"/>
            </folder>
            <folder helpurl="fl.controls.listClasses:CellRenderer" id="Properties" name="Properties" tiptext="Properties for class CellRenderer">
               <string helpurl="fl.controls.listClasses:CellRenderer:data:get" name="data" object="[fl.controls.listClasses.CellRenderer]" playername="" text=".data" tiptext="Gets or sets an Object that represents the data that is associated with a component." version=""/>
               <string helpurl="fl.controls.listClasses:CellRenderer:listData:get" name="listData" object="[fl.controls.listClasses.CellRenderer]" playername="" text=".listData" tiptext="Gets or sets the list properties that are applied to the cell--for example, the index and selected values." version=""/>
               <string helpurl="fl.controls.listClasses:CellRenderer:selected:get" name="selected" object="[fl.controls.listClasses.CellRenderer]" playername="" text=".selected" tiptext="Gets or sets a Boolean value that indicates whether the current cell is selected." version=""/>
            </folder>
         </folder>
         <folder helpurl="fl.controls.listClasses:ICellRenderer" id="[fl.controls.listClasses.ICellRenderer]" index="true" name="ICellRenderer" sort="true" tiptext="The ICellRenderer interface provides the methods and properties that a cell renderer requires.">
            <folder helpurl="fl.controls.listClasses:ICellRenderer" id="Methods" name="Methods" tiptext="Methods for class ICellRenderer">
               <string helpurl="fl.controls.listClasses:ICellRenderer:setMouseState" name="setMouseState" object="[fl.controls.listClasses.ICellRenderer]" playername="" text=".setMouseState(%state:String%):void" tiptext="Sets the current cell to a specific mouse state." version="1.0"/>
               <string helpurl="fl.controls.listClasses:ICellRenderer:setSize" name="setSize" object="[fl.controls.listClasses.ICellRenderer]" playername="" text=".setSize(%width:Number,height:Number%):void" tiptext="Sets the size of the data according to the pixel values specified by the width and height parameters." version="1.0"/>
            </folder>
            <folder helpurl="fl.controls.listClasses:ICellRenderer" id="Properties" name="Properties" tiptext="Properties for class ICellRenderer">
               <string helpurl="fl.controls.listClasses:ICellRenderer:data:get" name="data" object="[fl.controls.listClasses.ICellRenderer]" playername="" text=".data" tiptext="Gets or sets an Object that represents the data that is associated with a component." version=""/>
               <string helpurl="fl.controls.listClasses:ICellRenderer:listData:get" name="listData" object="[fl.controls.listClasses.ICellRenderer]" playername="" text=".listData" tiptext="Gets or sets the list properties that are applied to the cell--for example, the index and selected values." version=""/>
               <string helpurl="fl.controls.listClasses:ICellRenderer:selected:get" name="selected" object="[fl.controls.listClasses.ICellRenderer]" playername="" text=".selected" tiptext="Gets or sets a Boolean value that indicates whether the current cell is selected." version=""/>
               <string helpurl="fl.controls.listClasses:ICellRenderer:x:set" name="x" object="[fl.controls.listClasses.ICellRenderer]" playername="" text=".x" tiptext="Sets the x coordinate of the cell renderer" version=""/>
               <string helpurl="fl.controls.listClasses:ICellRenderer:y:set" name="y" object="[fl.controls.listClasses.ICellRenderer]" playername="" text=".y" tiptext="Sets the y coordinate of the cell renderer" version=""/>
            </folder>
         </folder>
         <folder asAncestors="fl.controls.listClasses:CellRenderer,fl.controls:LabelButton,fl.controls:BaseButton,fl.core:UIComponent,flash.display:Sprite,flash.display:DisplayObjectContainer,flash.display:InteractiveObject,flash.display:DisplayObject,flash.events:EventDispatcher,Object" helpurl="fl.controls.listClasses:ImageCell" id="[fl.controls.listClasses.ImageCell]" index="true" name="ImageCell" sort="true" tiptext="The ImageCell is the default cell renderer for the TileList component.">
            <folder helpurl="fl.controls.listClasses:ImageCell" id="Methods" name="Methods" tiptext="Methods for class ImageCell">
               <string constructor="true" helpurl="fl.controls.listClasses:ImageCell:ImageCell" name="ImageCell" object="[fl.controls.listClasses.ImageCell]" playername="" text="new ImageCell(%%)" tiptext="Creates a new ImageCell instance." version="1.0"/>
               <string helpurl="fl.controls.listClasses:ImageCell:getStyleDefinition" name="getStyleDefinition" object="[fl.controls.listClasses.ImageCell]" playername="" static="true" text="ImageCell.getStyleDefinition(%%):Object" tiptext="Retrieves the default style map for the current component." version="1.0"/>
            </folder>
            <folder helpurl="fl.controls.listClasses:ImageCell" id="Properties" name="Properties" tiptext="Properties for class ImageCell">
               <string helpurl="fl.controls.listClasses:ImageCell:listData:get" name="listData" object="[fl.controls.listClasses.ImageCell]" playername="" text=".listData" tiptext="Gets or sets the list properties that are applied to the cell, for example, the index and selected values." version=""/>
               <string helpurl="fl.controls.listClasses:ImageCell:source:get" name="source" object="[fl.controls.listClasses.ImageCell]" playername="" text=".source" tiptext="Gets or sets an absolute or relative URL that identifies the location of the SWF or image file to load, the class name of a movie clip in the library, or a reference to a display object." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="fl.controls.listClasses:ListData" id="[fl.controls.listClasses.ListData]" index="true" name="ListData" sort="true" tiptext="ListData is a messenger class that holds information relevant to a specific cell in a list-based component.">
            <folder helpurl="fl.controls.listClasses:ListData" id="Methods" name="Methods" tiptext="Methods for class ListData">
               <string constructor="true" helpurl="fl.controls.listClasses:ListData:ListData" name="ListData" object="[fl.controls.listClasses.ListData]" playername="" text="new ListData(%label:String,icon:Object,owner:fl.core:UIComponent,index:uint,row:uint[,col:uint=0]%)" tiptext="Creates a new instance of the ListData class as specified by its parameters." version="1.0"/>
            </folder>
            <folder helpurl="fl.controls.listClasses:ListData" id="Properties" name="Properties" tiptext="Properties for class ListData">
               <string helpurl="fl.controls.listClasses:ListData:column:get" name="column" object="[fl.controls.listClasses.ListData]" playername="" text=".column" tiptext="The column in which the data item is displayed." version=""/>
               <string helpurl="fl.controls.listClasses:ListData:icon:get" name="icon" object="[fl.controls.listClasses.ListData]" playername="" text=".icon" tiptext="A class that represents the icon for the item in the List component, computed from the List class method." version=""/>
               <string helpurl="fl.controls.listClasses:ListData:index:get" name="index" object="[fl.controls.listClasses.ListData]" playername="" text=".index" tiptext="The index of the item in the data provider." version=""/>
               <string helpurl="fl.controls.listClasses:ListData:label:get" name="label" object="[fl.controls.listClasses.ListData]" playername="" text=".label" tiptext="The label to be displayed in the cell." version=""/>
               <string helpurl="fl.controls.listClasses:ListData:owner:get" name="owner" object="[fl.controls.listClasses.ListData]" playername="" text=".owner" tiptext="A reference to the List object that owns this item." version=""/>
               <string helpurl="fl.controls.listClasses:ListData:row:get" name="row" object="[fl.controls.listClasses.ListData]" playername="" text=".row" tiptext="The row in which the data item is displayed." version=""/>
            </folder>
         </folder>
         <folder asAncestors="fl.controls.listClasses:ListData,Object" helpurl="fl.controls.listClasses:TileListData" id="[fl.controls.listClasses.TileListData]" index="true" name="TileListData" sort="true" tiptext="TileListData is a messenger class that holds information relevant to a specific cell in the list-based TileListData component.">
            <folder helpurl="fl.controls.listClasses:TileListData" id="Methods" name="Methods" tiptext="Methods for class TileListData">
               <string constructor="true" helpurl="fl.controls.listClasses:TileListData:TileListData" name="TileListData" object="[fl.controls.listClasses.TileListData]" playername="" text="new TileListData(%label:String,icon:Object,source:Object,owner:fl.core:UIComponent,index:uint,row:uint[,col:uint=0]%)" tiptext="Creates a new instance of the TileListData class as specified by its parameters." version="1.0"/>
            </folder>
            <folder helpurl="fl.controls.listClasses:TileListData" id="Properties" name="Properties" tiptext="Properties for class TileListData">
               <string helpurl="fl.controls.listClasses:TileListData:source:get" name="source" object="[fl.controls.listClasses.TileListData]" playername="" text=".source" tiptext="Gets or sets an absolute or relative URL that identifies the location of the SWF or image file to load, the class name of a movie clip in the library, or a reference to a display object." version=""/>
            </folder>
         </folder>
      </folder>
      <folder helpurl="fl.controls.progressBarClasses" id="fl.controls.progressBarClasses" name="fl.controls.progressBarClasses" sort="true" tiptext="Classes for package fl.controls.progressBarClasses">
         <folder asAncestors="fl.core:UIComponent,flash.display:Sprite,flash.display:DisplayObjectContainer,flash.display:InteractiveObject,flash.display:DisplayObject,flash.events:EventDispatcher,Object" helpurl="fl.controls.progressBarClasses:IndeterminateBar" id="[fl.controls.progressBarClasses.IndeterminateBar]" index="true" name="IndeterminateBar" sort="true" tiptext="The IndeterminateBar class handles the drawing of the progress bar component when the size of the source that is being loaded is unknown.">
            <folder helpurl="fl.controls.progressBarClasses:IndeterminateBar" id="Methods" name="Methods" tiptext="Methods for class IndeterminateBar">
               <string constructor="true" helpurl="fl.controls.progressBarClasses:IndeterminateBar:IndeterminateBar" name="IndeterminateBar" object="[fl.controls.progressBarClasses.IndeterminateBar]" playername="" text="new IndeterminateBar(%%)" tiptext="Creates a new instance of the IndeterminateBar component." version="1.0"/>
               <string helpurl="fl.controls.progressBarClasses:IndeterminateBar:getStyleDefinition" name="getStyleDefinition" object="[fl.controls.progressBarClasses.IndeterminateBar]" playername="" static="true" text="IndeterminateBar.getStyleDefinition(%%):Object" tiptext="Retrieves the default style map for the current component." version="1.0"/>
            </folder>
            <folder helpurl="fl.controls.progressBarClasses:IndeterminateBar" id="Properties" name="Properties" tiptext="Properties for class IndeterminateBar">
               <string helpurl="fl.controls.progressBarClasses:IndeterminateBar:visible:get" name="visible" object="[fl.controls.progressBarClasses.IndeterminateBar]" playername="" text=".visible" tiptext="Gets or sets a Boolean value that indicates whether the indeterminate bar is visible." version=""/>
            </folder>
         </folder>
      </folder>
      <folder helpurl="fl.core" id="fl.core" name="fl.core" sort="true" tiptext="Classes for package fl.core">
         <folder asAncestors="Object" helpurl="fl.core:InvalidationType" id="[fl.core.InvalidationType]" index="true" name="InvalidationType" sort="true" tiptext="The InvalidationType class defines InvalidationType constants that are used by the type property of an event object that is dispatched after a component is invalidated.">
            <folder helpurl="fl.core:InvalidationType" id="Properties" name="Properties" tiptext="Properties for class InvalidationType">
               <string constant="true" helpurl="fl.core:InvalidationType:ALL" name="ALL" object="[fl.core.InvalidationType]" playername="" text="InvalidationType.ALL" tiptext="The InvalidationType.ALL constant defines the value of the type property of the event object that is dispatched to indicate that the component should redraw itself entirely." version=""/>
               <string constant="true" helpurl="fl.core:InvalidationType:DATA" name="DATA" object="[fl.core.InvalidationType]" playername="" text="InvalidationType.DATA" tiptext="The InvalidationType.DATA constant defines the value of the type property of the event object that is dispatched to indicate that the data that belongs to a component is invalid." version=""/>
               <string constant="true" helpurl="fl.core:InvalidationType:RENDERER_STYLES" name="RENDERER_STYLES" object="[fl.core.InvalidationType]" playername="" text="InvalidationType.RENDERER_STYLES" tiptext="The InvalidationType.RENDERER_STYLES constant defines the value of the type property of the event object that is dispatched to indicate that the renderer styles of the component are invalid." version=""/>
               <string constant="true" helpurl="fl.core:InvalidationType:SCROLL" name="SCROLL" object="[fl.core.InvalidationType]" playername="" text="InvalidationType.SCROLL" tiptext="The InvalidationType.SCROLL constant defines the value of the type property of the event object that is dispatched to indicate that the scroll position of the component is invalid." version=""/>
               <string constant="true" helpurl="fl.core:InvalidationType:SELECTED" name="SELECTED" object="[fl.core.InvalidationType]" playername="" text="InvalidationType.SELECTED" tiptext="The InvalidationType.SELECTED constant defines the value of the type property of the event object that is dispatched to indicate that the selected property of the component is invalid." version=""/>
               <string constant="true" helpurl="fl.core:InvalidationType:SIZE" name="SIZE" object="[fl.core.InvalidationType]" playername="" text="InvalidationType.SIZE" tiptext="The InvalidationType.SIZE constant defines the value of the type property of the event object that is dispatched to indicate that the screen dimensions of the component are invalid." version=""/>
               <string constant="true" helpurl="fl.core:InvalidationType:STATE" name="STATE" object="[fl.core.InvalidationType]" playername="" text="InvalidationType.STATE" tiptext="The InvalidationType.STATE constant defines the value of the type property of the event object that is dispatched to indicate that the state of the component is invalid." version=""/>
               <string constant="true" helpurl="fl.core:InvalidationType:STYLES" name="STYLES" object="[fl.core.InvalidationType]" playername="" text="InvalidationType.STYLES" tiptext="The InvalidationType.STYLES constant defines the value of the type property of the event object that is dispatched to indicate that the styles of the component are invalid." version=""/>
            </folder>
         </folder>
         <folder asAncestors="flash.display:Sprite,flash.display:DisplayObjectContainer,flash.display:InteractiveObject,flash.display:DisplayObject,flash.events:EventDispatcher,Object" helpurl="fl.core:UIComponent" id="[fl.core.UIComponent]" index="true" name="UIComponent" sort="true" tiptext="The UIComponent class is the base class for all visual components, both interactive and noninteractive.">
            <folder helpurl="fl.core:UIComponent" id="Methods" name="Methods" tiptext="Methods for class UIComponent">
               <string constructor="true" helpurl="fl.core:UIComponent:UIComponent" name="UIComponent" object="[fl.core.UIComponent]" playername="" text="new UIComponent(%%)" tiptext="Creates a new UIComponent component instance." version="1.0"/>
               <string helpurl="fl.core:UIComponent:clearStyle" name="clearStyle" object="[fl.core.UIComponent]" playername="" text=".clearStyle(%style:String%):void" tiptext="Deletes a style property from this component instance." version="1.0"/>
               <string helpurl="fl.core:UIComponent:drawFocus" name="drawFocus" object="[fl.core.UIComponent]" playername="" text=".drawFocus(%focused:Boolean%):void" tiptext="Shows or hides the focus indicator on this component." version="1.0"/>
               <string helpurl="fl.core:UIComponent:drawNow" name="drawNow" object="[fl.core.UIComponent]" playername="" text=".drawNow(%%):void" tiptext="Initiates an immediate draw operation, without invalidating everything as invalidateNow does." version="1.0"/>
               <string helpurl="fl.core:UIComponent:getFocus" name="getFocus" object="[fl.core.UIComponent]" playername="" text=".getFocus(%%):flash.display:InteractiveObject" tiptext="Retrieves the object that currently has focus." version="1.0"/>
               <string helpurl="fl.core:UIComponent:getStyleDefinition" name="getStyleDefinition" object="[fl.core.UIComponent]" playername="" static="true" text="UIComponent.getStyleDefinition(%%):Object" tiptext="Retrieves the default style map for the current component." version="1.0"/>
               <string helpurl="fl.core:UIComponent:getStyleValue" name="getStyleValue" object="[fl.core.UIComponent]" playername="" text=".getStyleValue(%name:String%):Object" tiptext="Returns the specified style for a component, considering all styles set on the global level, component level and instance level." version="1.0"/>
               <string helpurl="fl.core:UIComponent:getStyle" name="getStyle" object="[fl.core.UIComponent]" playername="" text=".getStyle(%style:String%):Object" tiptext="Retrieves a style property that is set in the style lookup chain of the component." version="1.0"/>
               <string helpurl="fl.core:UIComponent:invalidate" name="invalidate" object="[fl.core.UIComponent]" playername="" text=".invalidate(%[property:String=unknown,callLater:Boolean=true]%):void" tiptext="Marks a property as invalid and redraws the component on the next frame unless otherwise specified." version="1.0"/>
               <string helpurl="fl.core:UIComponent:mergeStyles" name="mergeStyles" object="[fl.core.UIComponent]" playername="" static="true" text="UIComponent.mergeStyles(%list:restParam%):Object" tiptext="Merges the styles from multiple classes into one object." version="1.0"/>
               <string helpurl="fl.core:UIComponent:move" name="move" object="[fl.core.UIComponent]" playername="" text=".move(%x:Number,y:Number%):void" tiptext="Moves the component to the specified position within its parent." version="1.0"/>
               <string helpurl="fl.core:UIComponent:setFocus" name="setFocus" object="[fl.core.UIComponent]" playername="" text=".setFocus(%%):void" tiptext="Sets the focus to this component." version="1.0"/>
               <string helpurl="fl.core:UIComponent:setSize" name="setSize" object="[fl.core.UIComponent]" playername="" text=".setSize(%width:Number,height:Number%):void" tiptext="Sets the component to the specified width and height." version="1.0"/>
               <string helpurl="fl.core:UIComponent:setStyle" name="setStyle" object="[fl.core.UIComponent]" playername="" text=".setStyle(%style:String,value:Object%):void" tiptext="Sets a style property on this component instance." version="1.0"/>
               <string helpurl="fl.core:UIComponent:validateNow" name="validateNow" object="[fl.core.UIComponent]" playername="" text=".validateNow(%%):void" tiptext="Validates and updates the properties and layout of this object, redrawing it if necessary." version="1.0"/>
            </folder>
            <folder helpurl="fl.core:UIComponent" id="Properties" name="Properties" tiptext="Properties for class UIComponent">
               <string constant="true" helpurl="fl.core:UIComponent:version" name="version" object="[fl.core.UIComponent]" playername="" text="UIComponent.version" tiptext="The version number of the components." version=""/>
               <string helpurl="fl.core:UIComponent:enabled:get" name="enabled" object="[fl.core.UIComponent]" playername="" text=".enabled" tiptext="Gets or sets a value that indicates whether the component can accept user interaction." version=""/>
               <string helpurl="fl.core:UIComponent:focusEnabled:get" name="focusEnabled" object="[fl.core.UIComponent]" playername="" text=".focusEnabled" tiptext="Gets or sets a Boolean value that indicates whether the component can receive focus after the user clicks it." version=""/>
               <string helpurl="fl.core:UIComponent:focusManager:get" name="focusManager" object="[fl.core.UIComponent]" playername="" text=".focusManager" tiptext="Gets or sets the FocusManager that controls focus for this component and its peers." version=""/>
               <string helpurl="fl.core:UIComponent:height:get" name="height" object="[fl.core.UIComponent]" playername="" text=".height" tiptext="Gets or sets the height of the component, in pixels." version=""/>
               <string helpurl="fl.core:UIComponent:mouseFocusEnabled:get" name="mouseFocusEnabled" object="[fl.core.UIComponent]" playername="" text=".mouseFocusEnabled" tiptext="Gets or sets a value that indicates whether the component can receive focus after the user clicks it." version=""/>
               <string helpurl="fl.core:UIComponent:scaleX:get" name="scaleX" object="[fl.core.UIComponent]" playername="" text=".scaleX" tiptext="Multiplies the current width of the component by a scale factor." version=""/>
               <string helpurl="fl.core:UIComponent:scaleY:get" name="scaleY" object="[fl.core.UIComponent]" playername="" text=".scaleY" tiptext="Multiplies the current height of the component by a scale factor." version=""/>
               <string helpurl="fl.core:UIComponent:visible:get" name="visible" object="[fl.core.UIComponent]" playername="" text=".visible" tiptext="Gets or sets a value that indicates whether the current component instance is visible." version=""/>
               <string helpurl="fl.core:UIComponent:width:get" name="width" object="[fl.core.UIComponent]" playername="" text=".width" tiptext="Gets or sets the width of the component, in pixels." version=""/>
               <string helpurl="fl.core:UIComponent:x:get" name="x" object="[fl.core.UIComponent]" playername="" text=".x" tiptext="Gets or sets the x coordinate that represents the position of the component along the x axis within its parent container." version=""/>
               <string helpurl="fl.core:UIComponent:y:get" name="y" object="[fl.core.UIComponent]" playername="" text=".y" tiptext="Gets or sets the y coordinate that represents the position of the component along the y axis within its parent container." version=""/>
            </folder>
            <folder helpurl="fl.core:UIComponent" id="Events" name="Events" tiptext="Events for class UIComponent">
               <string helpurl="fl.core:UIComponent_fl.events.ComponentEvent.HIDE_hide" name="hide" object="[fl.core.UIComponent]" playername="" text=".addEventListener(%type:String=ComponentEvent.HIDE{ComponentEvent.HIDE,ComponentEvent.SHOW,ComponentEvent.RESIZE,ComponentEvent.MOVE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched after the component visibility changes from visible to invisible." version=""/>
               <string helpurl="fl.core:UIComponent_fl.events.ComponentEvent.SHOW_show" name="show" object="[fl.core.UIComponent]" playername="" text=".addEventListener(%type:String=ComponentEvent.SHOW{ComponentEvent.HIDE,ComponentEvent.SHOW,ComponentEvent.RESIZE,ComponentEvent.MOVE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched after the component visibility changes from invisible to visible." version=""/>
               <string helpurl="fl.core:UIComponent_fl.events.ComponentEvent.RESIZE_resize" name="resize" object="[fl.core.UIComponent]" playername="" text=".addEventListener(%type:String=ComponentEvent.RESIZE{ComponentEvent.HIDE,ComponentEvent.SHOW,ComponentEvent.RESIZE,ComponentEvent.MOVE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched after the component is resized." version=""/>
               <string helpurl="fl.core:UIComponent_fl.events.ComponentEvent.MOVE_move" name="move" object="[fl.core.UIComponent]" playername="" text=".addEventListener(%type:String=ComponentEvent.MOVE{ComponentEvent.HIDE,ComponentEvent.SHOW,ComponentEvent.RESIZE,ComponentEvent.MOVE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched after the component is moved." version=""/>
            </folder>
         </folder>
      </folder>
      <folder helpurl="fl.data" id="fl.data" name="fl.data" sort="true" tiptext="Classes for package fl.data">
         <folder asAncestors="flash.events:EventDispatcher,Object" helpurl="fl.data:DataProvider" id="[fl.data.DataProvider]" index="true" name="DataProvider" sort="true" tiptext="The DataProvider class provides methods and properties that allow you to query and modify the data in any list-based component--for example, in a List, DataGrid, TileList, or ComboBox component.">
            <folder helpurl="fl.data:DataProvider" id="Methods" name="Methods" tiptext="Methods for class DataProvider">
               <string constructor="true" helpurl="fl.data:DataProvider:DataProvider" name="DataProvider" object="[fl.data.DataProvider]" playername="" text="new DataProvider(%[value:Object=null]%)" tiptext="Creates a new DataProvider object using a list, XML instance or an array of data objects as the data source." version="1.0"/>
               <string helpurl="fl.data:DataProvider:addItemAt" name="addItemAt" object="[fl.data.DataProvider]" playername="" text=".addItemAt(%item:Object,index:uint%):void" tiptext="Adds a new item to the data provider at the specified index." version="1.0"/>
               <string helpurl="fl.data:DataProvider:addItem" name="addItem" object="[fl.data.DataProvider]" playername="" text=".addItem(%item:Object%):void" tiptext="Appends an item to the end of the data provider." version="1.0"/>
               <string helpurl="fl.data:DataProvider:addItemsAt" name="addItemsAt" object="[fl.data.DataProvider]" playername="" text=".addItemsAt(%items:Object,index:uint%):void" tiptext="Adds several items to the data provider at the specified index and dispatches a DataChangeType.ADD event." version="1.0"/>
               <string helpurl="fl.data:DataProvider:addItems" name="addItems" object="[fl.data.DataProvider]" playername="" text=".addItems(%items:Object%):void" tiptext="Appends multiple items to the end of the DataProvider and dispatches a DataChangeType.ADD event." version="1.0"/>
               <string helpurl="fl.data:DataProvider:clone" name="clone" object="[fl.data.DataProvider]" playername="" text=".clone(%%):fl.data:DataProvider" tiptext="Creates a copy of the current DataProvider object." version="1.0"/>
               <string helpurl="fl.data:DataProvider:concat" name="concat" object="[fl.data.DataProvider]" playername="" text=".concat(%items:Object%):void" tiptext="Concatenates the specified items to the end of the current data provider." version="1.0"/>
               <string helpurl="fl.data:DataProvider:getItemAt" name="getItemAt" object="[fl.data.DataProvider]" playername="" text=".getItemAt(%index:uint%):Object" tiptext="Returns the item at the specified index." version="1.0"/>
               <string helpurl="fl.data:DataProvider:getItemIndex" name="getItemIndex" object="[fl.data.DataProvider]" playername="" text=".getItemIndex(%item:Object%):int" tiptext="Returns the index of the specified item." version="1.0"/>
               <string helpurl="fl.data:DataProvider:invalidateItemAt" name="invalidateItemAt" object="[fl.data.DataProvider]" playername="" text=".invalidateItemAt(%index:int%):void" tiptext="Invalidates the item at the specified index." version="1.0"/>
               <string helpurl="fl.data:DataProvider:invalidateItem" name="invalidateItem" object="[fl.data.DataProvider]" playername="" text=".invalidateItem(%item:Object%):void" tiptext="Invalidates the specified item." version="1.0"/>
               <string helpurl="fl.data:DataProvider:invalidate" name="invalidate" object="[fl.data.DataProvider]" playername="" text=".invalidate(%%):void" tiptext="Invalidates all the data items that the DataProvider contains and dispatches a DataChangeEvent.INVALIDATE_ALL event." version="1.0"/>
               <string helpurl="fl.data:DataProvider:merge" name="merge" object="[fl.data.DataProvider]" playername="" text=".merge(%newData:Object%):void" tiptext="Appends the specified data into the data that the data provider contains and removes any duplicate items." version="1.0"/>
               <string helpurl="fl.data:DataProvider:removeAll" name="removeAll" object="[fl.data.DataProvider]" playername="" text=".removeAll(%%):void" tiptext="Removes all items from the data provider and dispatches a DataChangeType.REMOVE_ALL event." version="1.0"/>
               <string helpurl="fl.data:DataProvider:removeItemAt" name="removeItemAt" object="[fl.data.DataProvider]" playername="" text=".removeItemAt(%index:uint%):Object" tiptext="Removes the item at the specified index and dispatches a DataChangeType.REMOVE event." version="1.0"/>
               <string helpurl="fl.data:DataProvider:removeItem" name="removeItem" object="[fl.data.DataProvider]" playername="" text=".removeItem(%item:Object%):Object" tiptext="Removes the specified item from the data provider and dispatches a DataChangeType.REMOVE event." version="1.0"/>
               <string helpurl="fl.data:DataProvider:replaceItemAt" name="replaceItemAt" object="[fl.data.DataProvider]" playername="" text=".replaceItemAt(%newItem:Object,index:uint%):Object" tiptext="Replaces the item at the specified index and dispatches a DataChangeType.REPLACE event." version="1.0"/>
               <string helpurl="fl.data:DataProvider:replaceItem" name="replaceItem" object="[fl.data.DataProvider]" playername="" text=".replaceItem(%newItem:Object,oldItem:Object%):Object" tiptext="Replaces an existing item with a new item and dispatches a DataChangeType.REPLACE event." version="1.0"/>
               <string helpurl="fl.data:DataProvider:sortOn" name="sortOn" object="[fl.data.DataProvider]" playername="" text=".sortOn(%fieldName:Object[,options:Object=null]%)" tiptext="Sorts the items that the data provider contains by the specified field and dispatches a DataChangeType.SORT event." version="1.0"/>
               <string helpurl="fl.data:DataProvider:sort" name="sort" object="[fl.data.DataProvider]" playername="" text=".sort(%sortArgs:restParam%)" tiptext="Sorts the items that the data provider contains and dispatches a DataChangeType.SORT event." version="1.0"/>
               <string helpurl="fl.data:DataProvider:toArray" name="toArray" object="[fl.data.DataProvider]" playername="" text=".toArray(%%):Array" tiptext="Creates an Array object representation of the data that the data provider contains." version="1.0"/>
               <string helpurl="fl.data:DataProvider:toString" name="toString" object="[fl.data.DataProvider]" playername="" text=".toString(%%):String" tiptext="Creates a string representation of the data that the data provider contains." version="1.0"/>
            </folder>
            <folder helpurl="fl.data:DataProvider" id="Properties" name="Properties" tiptext="Properties for class DataProvider">
               <string helpurl="fl.data:DataProvider:length:get" name="length" object="[fl.data.DataProvider]" playername="" text=".length" tiptext="The number of items that the data provider contains." version=""/>
            </folder>
            <folder helpurl="fl.data:DataProvider" id="Events" name="Events" tiptext="Events for class DataProvider">
               <string helpurl="fl.data:DataProvider_fl.events.DataChangeEvent.DATA_CHANGE_dataChange" name="dataChange" object="[fl.data.DataProvider]" playername="" text=".addEventListener(%type:String=DataChangeEvent.DATA_CHANGE{DataChangeEvent.DATA_CHANGE,DataChangeEvent.PRE_DATA_CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched after the data is changed." version=""/>
               <string helpurl="fl.data:DataProvider_fl.events.DataChangeEvent.PRE_DATA_CHANGE_preDataChange" name="preDataChange" object="[fl.data.DataProvider]" playername="" text=".addEventListener(%type:String=DataChangeEvent.PRE_DATA_CHANGE{DataChangeEvent.DATA_CHANGE,DataChangeEvent.PRE_DATA_CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched before the data is changed." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="fl.data:SimpleCollectionItem" id="[fl.data.SimpleCollectionItem]" index="true" name="SimpleCollectionItem" sort="true" tiptext="The SimpleCollectionItem class defines a single item in an inspectable property that represents a data provider.">
            <folder helpurl="fl.data:SimpleCollectionItem" id="Methods" name="Methods" tiptext="Methods for class SimpleCollectionItem">
               <string constructor="true" helpurl="fl.data:SimpleCollectionItem:SimpleCollectionItem" name="SimpleCollectionItem" object="[fl.data.SimpleCollectionItem]" playername="" text="new SimpleCollectionItem(%%)" tiptext="Creates a new SimpleCollectionItem object." version="1.0"/>
            </folder>
            <folder helpurl="fl.data:SimpleCollectionItem" id="Properties" name="Properties" tiptext="Properties for class SimpleCollectionItem">
               <string helpurl="fl.data:SimpleCollectionItem:data" name="data" object="[fl.data.SimpleCollectionItem]" playername="" text=".data" tiptext="The data property of the object." version=""/>
               <string helpurl="fl.data:SimpleCollectionItem:label" name="label" object="[fl.data.SimpleCollectionItem]" playername="" text=".label" tiptext="The label property of the object." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="fl.data:TileListCollectionItem" id="[fl.data.TileListCollectionItem]" index="true" name="TileListCollectionItem" sort="true" tiptext="The TileListCollectionItem class defines a single item in an inspectable property that represents a data provider.">
            <folder helpurl="fl.data:TileListCollectionItem" id="Methods" name="Methods" tiptext="Methods for class TileListCollectionItem">
               <string constructor="true" helpurl="fl.data:TileListCollectionItem:TileListCollectionItem" name="TileListCollectionItem" object="[fl.data.TileListCollectionItem]" playername="" text="new TileListCollectionItem(%%)" tiptext="Creates a new TileListCollectionItem object." version="1.0"/>
            </folder>
            <folder helpurl="fl.data:TileListCollectionItem" id="Properties" name="Properties" tiptext="Properties for class TileListCollectionItem">
               <string helpurl="fl.data:TileListCollectionItem:label" name="label" object="[fl.data.TileListCollectionItem]" playername="" text=".label" tiptext="The label property of the object." version=""/>
               <string helpurl="fl.data:TileListCollectionItem:source" name="source" object="[fl.data.TileListCollectionItem]" playername="" text=".source" tiptext="The source property of the object." version=""/>
            </folder>
         </folder>
      </folder>
      <folder helpurl="fl.events" id="fl.events" name="fl.events" sort="true" tiptext="Classes for package fl.events">
         <folder asAncestors="flash.events:Event,Object" helpurl="fl.events:ColorPickerEvent" id="[fl.events.ColorPickerEvent]" index="true" name="ColorPickerEvent" sort="true" tiptext="The ColorPickerEvent class defines events that are associated with the ColorPicker component.">
            <folder helpurl="fl.events:ColorPickerEvent" id="Methods" name="Methods" tiptext="Methods for class ColorPickerEvent">
               <string constructor="true" helpurl="fl.events:ColorPickerEvent:ColorPickerEvent" name="ColorPickerEvent" object="[fl.events.ColorPickerEvent]" playername="" text="new ColorPickerEvent(%type:String,color:uint%)" tiptext="Creates a new ColorPickerEvent object." version="1.0"/>
               <string helpurl="fl.events:ColorPickerEvent:clone" name="clone" object="[fl.events.ColorPickerEvent]" playername="" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of the ColorPickerEvent object and sets the value of each parameter to match the original." version="1.0"/>
               <string helpurl="fl.events:ColorPickerEvent:toString" name="toString" object="[fl.events.ColorPickerEvent]" playername="" text=".toString(%%):String" tiptext="Returns a string that contains all the properties of the ColorPickerEvent object." version="1.0"/>
            </folder>
            <folder helpurl="fl.events:ColorPickerEvent" id="Properties" name="Properties" tiptext="Properties for class ColorPickerEvent">
               <string constant="true" helpurl="fl.events:ColorPickerEvent:CHANGE" name="CHANGE" object="[fl.events.ColorPickerEvent]" playername="" text="ColorPickerEvent.CHANGE" tiptext="Defines the value of the type property of the change event object." version=""/>
               <string constant="true" helpurl="fl.events:ColorPickerEvent:ENTER" name="ENTER" object="[fl.events.ColorPickerEvent]" playername="" text="ColorPickerEvent.ENTER" tiptext="Defines the value of the type property of an enter event object." version=""/>
               <string constant="true" helpurl="fl.events:ColorPickerEvent:ITEM_ROLL_OUT" name="ITEM_ROLL_OUT" object="[fl.events.ColorPickerEvent]" playername="" text="ColorPickerEvent.ITEM_ROLL_OUT" tiptext="Defines the value of the type property for an itemRollOut event object." version=""/>
               <string constant="true" helpurl="fl.events:ColorPickerEvent:ITEM_ROLL_OVER" name="ITEM_ROLL_OVER" object="[fl.events.ColorPickerEvent]" playername="" text="ColorPickerEvent.ITEM_ROLL_OVER" tiptext="Defines the value of the type property for an itemRollOver event object." version=""/>
               <string helpurl="fl.events:ColorPickerEvent:color:get" name="color" object="[fl.events.ColorPickerEvent]" playername="" text=".color" tiptext="Gets the color value that is associated with the event." version=""/>
            </folder>
         </folder>
         <folder asAncestors="flash.events:Event,Object" helpurl="fl.events:ComponentEvent" id="[fl.events.ComponentEvent]" index="true" name="ComponentEvent" sort="true" tiptext="The ComponentEvent class defines events that are associated with the UIComponent class.">
            <folder helpurl="fl.events:ComponentEvent" id="Methods" name="Methods" tiptext="Methods for class ComponentEvent">
               <string constructor="true" helpurl="fl.events:ComponentEvent:ComponentEvent" name="ComponentEvent" object="[fl.events.ComponentEvent]" playername="" text="new ComponentEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false]%)" tiptext="Creates a new ComponentEvent object that contains information about a component event." version="1.0"/>
               <string helpurl="fl.events:ComponentEvent:clone" name="clone" object="[fl.events.ComponentEvent]" playername="" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of the ComponentEvent object and sets the value of each parameter to match the original." version="1.0"/>
               <string helpurl="fl.events:ComponentEvent:toString" name="toString" object="[fl.events.ComponentEvent]" playername="" text=".toString(%%):String" tiptext="Returns a string that contains all the properties of the ComponentEvent object." version="1.0"/>
            </folder>
            <folder helpurl="fl.events:ComponentEvent" id="Properties" name="Properties" tiptext="Properties for class ComponentEvent">
               <string constant="true" helpurl="fl.events:ComponentEvent:BUTTON_DOWN" name="BUTTON_DOWN" object="[fl.events.ComponentEvent]" playername="" text="ComponentEvent.BUTTON_DOWN" tiptext="Defines the value of the type property of a buttonDown event object." version=""/>
               <string constant="true" helpurl="fl.events:ComponentEvent:ENTER" name="ENTER" object="[fl.events.ComponentEvent]" playername="" text="ComponentEvent.ENTER" tiptext="Defines the value of the type property of an enter event object." version=""/>
               <string constant="true" helpurl="fl.events:ComponentEvent:HIDE" name="HIDE" object="[fl.events.ComponentEvent]" playername="" text="ComponentEvent.HIDE" tiptext="Defines the value of the type property of a hide event object." version=""/>
               <string constant="true" helpurl="fl.events:ComponentEvent:LABEL_CHANGE" name="LABEL_CHANGE" object="[fl.events.ComponentEvent]" playername="" text="ComponentEvent.LABEL_CHANGE" tiptext="Defines the value of the type property of a labelChange event object." version=""/>
               <string constant="true" helpurl="fl.events:ComponentEvent:MOVE" name="MOVE" object="[fl.events.ComponentEvent]" playername="" text="ComponentEvent.MOVE" tiptext="Defines the value of the type property of a move event object." version=""/>
               <string constant="true" helpurl="fl.events:ComponentEvent:RESIZE" name="RESIZE" object="[fl.events.ComponentEvent]" playername="" text="ComponentEvent.RESIZE" tiptext="Defines the value of the type property of a resize event object." version=""/>
               <string constant="true" helpurl="fl.events:ComponentEvent:SHOW" name="SHOW" object="[fl.events.ComponentEvent]" playername="" text="ComponentEvent.SHOW" tiptext="Defines the value of the type property of a show event object." version=""/>
            </folder>
         </folder>
         <folder asAncestors="flash.events:Event,Object" helpurl="fl.events:DataChangeEvent" id="[fl.events.DataChangeEvent]" index="true" name="DataChangeEvent" sort="true" tiptext="The DataChangeEvent class defines the event that is dispatched when the data that is associated with a component changes.">
            <folder helpurl="fl.events:DataChangeEvent" id="Methods" name="Methods" tiptext="Methods for class DataChangeEvent">
               <string constructor="true" helpurl="fl.events:DataChangeEvent:DataChangeEvent" name="DataChangeEvent" object="[fl.events.DataChangeEvent]" playername="" text="new DataChangeEvent(%eventType:String,changeType:String,items:Array[,startIndex:int=-1,endIndex:int=-1]%):void" tiptext="Creates a new DataChangeEvent object with the specified parameters." version="1.0"/>
               <string helpurl="fl.events:DataChangeEvent:clone" name="clone" object="[fl.events.DataChangeEvent]" playername="" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of the DataEvent object and sets the value of each parameter to match that of the original." version="1.0"/>
               <string helpurl="fl.events:DataChangeEvent:toString" name="toString" object="[fl.events.DataChangeEvent]" playername="" text=".toString(%%):String" tiptext="Returns a string that contains all the properties of the DataChangeEvent object." version="1.0"/>
            </folder>
            <folder helpurl="fl.events:DataChangeEvent" id="Properties" name="Properties" tiptext="Properties for class DataChangeEvent">
               <string constant="true" helpurl="fl.events:DataChangeEvent:DATA_CHANGE" name="DATA_CHANGE" object="[fl.events.DataChangeEvent]" playername="" text="DataChangeEvent.DATA_CHANGE" tiptext="Defines the value of the type property of a dataChange event object." version=""/>
               <string constant="true" helpurl="fl.events:DataChangeEvent:PRE_DATA_CHANGE" name="PRE_DATA_CHANGE" object="[fl.events.DataChangeEvent]" playername="" text="DataChangeEvent.PRE_DATA_CHANGE" tiptext="Defines the value of the type property of a preDataChange event object." version=""/>
               <string helpurl="fl.events:DataChangeEvent:changeType:get" name="changeType" object="[fl.events.DataChangeEvent]" playername="" text=".changeType" tiptext="Gets the type of the change that triggered the event." version=""/>
               <string helpurl="fl.events:DataChangeEvent:endIndex:get" name="endIndex" object="[fl.events.DataChangeEvent]" playername="" text=".endIndex" tiptext="Gets the index of the last changed item in the array of items that were changed." version=""/>
               <string helpurl="fl.events:DataChangeEvent:items:get" name="items" object="[fl.events.DataChangeEvent]" playername="" text=".items" tiptext="Gets an array that contains the changed items." version=""/>
               <string helpurl="fl.events:DataChangeEvent:startIndex:get" name="startIndex" object="[fl.events.DataChangeEvent]" playername="" text=".startIndex" tiptext="Gets the index of the first changed item in the array of items that were changed." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="fl.events:DataChangeType" id="[fl.events.DataChangeType]" index="true" name="DataChangeType" sort="true" tiptext="The DataChangeType class defines constants for the DataChangeEvent.changeType event.">
            <folder helpurl="fl.events:DataChangeType" id="Properties" name="Properties" tiptext="Properties for class DataChangeType">
               <string constant="true" helpurl="fl.events:DataChangeType:ADD" name="ADD" object="[fl.events.DataChangeType]" playername="" text="DataChangeType.ADD" tiptext="Items were added to the data provider." version=""/>
               <string constant="true" helpurl="fl.events:DataChangeType:CHANGE" name="CHANGE" object="[fl.events.DataChangeType]" playername="" text="DataChangeType.CHANGE" tiptext="A change was made to the component data." version=""/>
               <string constant="true" helpurl="fl.events:DataChangeType:INVALIDATE_ALL" name="INVALIDATE_ALL" object="[fl.events.DataChangeType]" playername="" text="DataChangeType.INVALIDATE_ALL" tiptext="The data set is invalid." version=""/>
               <string constant="true" helpurl="fl.events:DataChangeType:INVALIDATE" name="INVALIDATE" object="[fl.events.DataChangeType]" playername="" text="DataChangeType.INVALIDATE" tiptext="A change was made to the data contained in an item." version=""/>
               <string constant="true" helpurl="fl.events:DataChangeType:REMOVE_ALL" name="REMOVE_ALL" object="[fl.events.DataChangeType]" playername="" text="DataChangeType.REMOVE_ALL" tiptext="All items were removed from the data provider." version=""/>
               <string constant="true" helpurl="fl.events:DataChangeType:REMOVE" name="REMOVE" object="[fl.events.DataChangeType]" playername="" text="DataChangeType.REMOVE" tiptext="Items were removed from the data provider." version=""/>
               <string constant="true" helpurl="fl.events:DataChangeType:REPLACE" name="REPLACE" object="[fl.events.DataChangeType]" playername="" text="DataChangeType.REPLACE" tiptext="The items in the data provider were replaced by new items." version=""/>
               <string constant="true" helpurl="fl.events:DataChangeType:SORT" name="SORT" object="[fl.events.DataChangeType]" playername="" text="DataChangeType.SORT" tiptext="The data provider was sorted." version=""/>
            </folder>
         </folder>
         <folder asAncestors="fl.events:ListEvent,flash.events:Event,Object" helpurl="fl.events:DataGridEvent" id="[fl.events.DataGridEvent]" index="true" name="DataGridEvent" sort="true" tiptext="The DataGridEvent class defines events that are associated with the DataGrid component.">
            <folder helpurl="fl.events:DataGridEvent" id="Methods" name="Methods" tiptext="Methods for class DataGridEvent">
               <string constructor="true" helpurl="fl.events:DataGridEvent:DataGridEvent" name="DataGridEvent" object="[fl.events.DataGridEvent]" playername="" text="new DataGridEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,columnIndex:int=-1,rowIndex:int=-1,itemRenderer:Object=null,dataField:String=null,reason:String=null]%)" tiptext="Creates a new DataGridEvent object with the specified parameters." version="1.0"/>
               <string helpurl="fl.events:DataGridEvent:clone" name="clone" object="[fl.events.DataGridEvent]" playername="" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of the DataGridEvent object and sets the value of each property to match the original." version="1.0"/>
               <string helpurl="fl.events:DataGridEvent:toString" name="toString" object="[fl.events.DataGridEvent]" playername="" text=".toString(%%):String" tiptext="Returns a string that contains all the properties of the DataGridEvent object." version="1.0"/>
            </folder>
            <folder helpurl="fl.events:DataGridEvent" id="Properties" name="Properties" tiptext="Properties for class DataGridEvent">
               <string constant="true" helpurl="fl.events:DataGridEvent:COLUMN_STRETCH" name="COLUMN_STRETCH" object="[fl.events.DataGridEvent]" playername="" text="DataGridEvent.COLUMN_STRETCH" tiptext="The DataGridEvent.COLUMN_STRETCH constant defines the value of the type property of a columnStretch event object." version=""/>
               <string constant="true" helpurl="fl.events:DataGridEvent:HEADER_RELEASE" name="HEADER_RELEASE" object="[fl.events.DataGridEvent]" playername="" text="DataGridEvent.HEADER_RELEASE" tiptext="The DataGridEvent.HEADER_RELEASE constant defines the value of the type property of a headerRelease event object." version=""/>
               <string constant="true" helpurl="fl.events:DataGridEvent:ITEM_EDIT_BEGINNING" name="ITEM_EDIT_BEGINNING" object="[fl.events.DataGridEvent]" playername="" text="DataGridEvent.ITEM_EDIT_BEGINNING" tiptext="The DataGridEvent.ITEM__EDIT_BEGINNING constant defines the value of the type property of an itemEditBeginning event object." version=""/>
               <string constant="true" helpurl="fl.events:DataGridEvent:ITEM_EDIT_BEGIN" name="ITEM_EDIT_BEGIN" object="[fl.events.DataGridEvent]" playername="" text="DataGridEvent.ITEM_EDIT_BEGIN" tiptext="The DataGridEvent.ITEM_EDIT_BEGIN constant defines the value of the type property of an itemEditBegin event object." version=""/>
               <string constant="true" helpurl="fl.events:DataGridEvent:ITEM_EDIT_END" name="ITEM_EDIT_END" object="[fl.events.DataGridEvent]" playername="" text="DataGridEvent.ITEM_EDIT_END" tiptext="The DataGridEvent.ITEM_EDIT_END constant defines the value of the type property of an itemEditEnd event object." version=""/>
               <string constant="true" helpurl="fl.events:DataGridEvent:ITEM_FOCUS_IN" name="ITEM_FOCUS_IN" object="[fl.events.DataGridEvent]" playername="" text="DataGridEvent.ITEM_FOCUS_IN" tiptext="The DataGridEvent.ITEM_FOCUS_IN constant defines the value of the type property of a itemFocusIn event object." version=""/>
               <string constant="true" helpurl="fl.events:DataGridEvent:ITEM_FOCUS_OUT" name="ITEM_FOCUS_OUT" object="[fl.events.DataGridEvent]" playername="" text="DataGridEvent.ITEM_FOCUS_OUT" tiptext="The DataGridEvent.ITEM_FOCUS_OUT constant defines the value of the type property of an itemFocusOut event object." version=""/>
               <string helpurl="fl.events:DataGridEvent:dataField:get" name="dataField" object="[fl.events.DataGridEvent]" playername="" text=".dataField" tiptext="Gets or sets the name of the field or property in the data associated with the column." version=""/>
               <string helpurl="fl.events:DataGridEvent:itemRenderer:get" name="itemRenderer" object="[fl.events.DataGridEvent]" playername="" text=".itemRenderer" tiptext="Gets the item renderer for the item that is being edited or the header renderer that is being clicked or resized." version=""/>
               <string helpurl="fl.events:DataGridEvent:reason:get" name="reason" object="[fl.events.DataGridEvent]" playername="" text=".reason" tiptext="Gets the reason the itemEditEnd event was dispatched." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="fl.events:DataGridEventReason" id="[fl.events.DataGridEventReason]" index="true" name="DataGridEventReason" sort="true" tiptext="The DataGridEventReason class defines constants that are used for the values of the reason property of the DataGridEvent object when the value of the type property is itemEditEnd.">
            <folder helpurl="fl.events:DataGridEventReason" id="Properties" name="Properties" tiptext="Properties for class DataGridEventReason">
               <string constant="true" helpurl="fl.events:DataGridEventReason:CANCELLED" name="CANCELLED" object="[fl.events.DataGridEventReason]" playername="" text="DataGridEventReason.CANCELLED" tiptext="The user canceled editing and does not want to save the edited data." version=""/>
               <string constant="true" helpurl="fl.events:DataGridEventReason:NEW_COLUMN" name="NEW_COLUMN" object="[fl.events.DataGridEventReason]" playername="" text="DataGridEventReason.NEW_COLUMN" tiptext="The user moved focus to a new column in the same row." version=""/>
               <string constant="true" helpurl="fl.events:DataGridEventReason:NEW_ROW" name="NEW_ROW" object="[fl.events.DataGridEventReason]" playername="" text="DataGridEventReason.NEW_ROW" tiptext="Indicates that the user moved focus to a new row." version=""/>
               <string constant="true" helpurl="fl.events:DataGridEventReason:OTHER" name="OTHER" object="[fl.events.DataGridEventReason]" playername="" text="DataGridEventReason.OTHER" tiptext="The list component lost focus, was scrolled, or is in a state where editing is not allowed." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="fl.events:InteractionInputType" id="[fl.events.InteractionInputType]" index="true" name="InteractionInputType" sort="true" tiptext="The InteractionInputType class defines constants for the values of the triggerEvent property of the SliderEvent object.">
            <folder helpurl="fl.events:InteractionInputType" id="Properties" name="Properties" tiptext="Properties for class InteractionInputType">
               <string constant="true" helpurl="fl.events:InteractionInputType:KEYBOARD" name="KEYBOARD" object="[fl.events.InteractionInputType]" playername="" text="InteractionInputType.KEYBOARD" tiptext="The InteractionInputType.KEYBOARD constant defines the value of the type property of a keyboard event object." version=""/>
               <string constant="true" helpurl="fl.events:InteractionInputType:MOUSE" name="MOUSE" object="[fl.events.InteractionInputType]" playername="" text="InteractionInputType.MOUSE" tiptext="The InteractionInputType.MOUSE constant defines the value of the type property of a mouse event object." version=""/>
            </folder>
         </folder>
         <folder asAncestors="flash.events:Event,Object" helpurl="fl.events:ListEvent" id="[fl.events.ListEvent]" index="true" name="ListEvent" sort="true" tiptext="The ListEvent class defines events for list-based components including the List, DataGrid, TileList, and ComboBox components.">
            <folder helpurl="fl.events:ListEvent" id="Methods" name="Methods" tiptext="Methods for class ListEvent">
               <string constructor="true" helpurl="fl.events:ListEvent:ListEvent" name="ListEvent" object="[fl.events.ListEvent]" playername="" text="new ListEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,columnIndex:int=-1,rowIndex:int=-1,index:int=-1,item:Object=null]%)" tiptext="Creates a new ListEvent object with the specified parameters." version="1.0"/>
               <string helpurl="fl.events:ListEvent:clone" name="clone" object="[fl.events.ListEvent]" playername="" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of the ListEvent object and sets the value of each parameter to match the original." version="1.0"/>
               <string helpurl="fl.events:ListEvent:toString" name="toString" object="[fl.events.ListEvent]" playername="" text=".toString(%%):String" tiptext="Returns a string that contains all the properties of the ListEvent object." version="1.0"/>
            </folder>
            <folder helpurl="fl.events:ListEvent" id="Properties" name="Properties" tiptext="Properties for class ListEvent">
               <string constant="true" helpurl="fl.events:ListEvent:ITEM_CLICK" name="ITEM_CLICK" object="[fl.events.ListEvent]" playername="" text="ListEvent.ITEM_CLICK" tiptext="Defines the value of the type property of an itemClick event object." version=""/>
               <string constant="true" helpurl="fl.events:ListEvent:ITEM_DOUBLE_CLICK" name="ITEM_DOUBLE_CLICK" object="[fl.events.ListEvent]" playername="" text="ListEvent.ITEM_DOUBLE_CLICK" tiptext="Defines the value of the type property of an itemDoubleClick event object." version=""/>
               <string constant="true" helpurl="fl.events:ListEvent:ITEM_ROLL_OUT" name="ITEM_ROLL_OUT" object="[fl.events.ListEvent]" playername="" text="ListEvent.ITEM_ROLL_OUT" tiptext="Defines the value of the type property of an itemRollOut event object." version=""/>
               <string constant="true" helpurl="fl.events:ListEvent:ITEM_ROLL_OVER" name="ITEM_ROLL_OVER" object="[fl.events.ListEvent]" playername="" text="ListEvent.ITEM_ROLL_OVER" tiptext="Defines the value of the type property of an itemRollOver event object." version=""/>
               <string helpurl="fl.events:ListEvent:columnIndex:get" name="columnIndex" object="[fl.events.ListEvent]" playername="" text=".columnIndex" tiptext="Gets the column index of the item that is associated with this event." version=""/>
               <string helpurl="fl.events:ListEvent:index:get" name="index" object="[fl.events.ListEvent]" playername="" text=".index" tiptext="Gets the zero-based index of the cell that contains the renderer." version=""/>
               <string helpurl="fl.events:ListEvent:item:get" name="item" object="[fl.events.ListEvent]" playername="" text=".item" tiptext="Gets the data that belongs to the current cell renderer." version=""/>
               <string helpurl="fl.events:ListEvent:rowIndex:get" name="rowIndex" object="[fl.events.ListEvent]" playername="" text=".rowIndex" tiptext="Gets the row index of the item that is associated with this event." version=""/>
            </folder>
         </folder>
         <folder asAncestors="flash.events:ErrorEvent,flash.events:TextEvent,flash.events:Event,Object" helpurl="fl.events:RSLErrorEvent" id="[fl.events.RSLErrorEvent]" index="true" name="RSLErrorEvent" sort="true" tiptext="The RSLErrorEvent class defines an error event dispatched by RSLPreloader.">
            <folder helpurl="fl.events:RSLErrorEvent" id="Methods" name="Methods" tiptext="Methods for class RSLErrorEvent">
               <string constructor="true" helpurl="fl.events:RSLErrorEvent:RSLErrorEvent" name="RSLErrorEvent" object="[fl.events.RSLErrorEvent]" playername="" text="new RSLErrorEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,rslsLoaded:int=0,rslsFailed:int=0,rslsTotal:int=0,failedURLs:Array=null]%)" tiptext="Creates an RSLErrorEvent object that contains information about RSLError events." version="2"/>
            </folder>
            <folder helpurl="fl.events:RSLErrorEvent" id="Properties" name="Properties" tiptext="Properties for class RSLErrorEvent">
               <string constant="true" helpurl="fl.events:RSLErrorEvent:RSL_LOAD_FAILED" name="RSL_LOAD_FAILED" object="[fl.events.RSLErrorEvent]" playername="" text="RSLErrorEvent.RSL_LOAD_FAILED" tiptext="Error dispatched by RSLPreloader when all RSLs have finished downloading and one or more have failed." version=""/>
               <string helpurl="fl.events:RSLErrorEvent:failedURLs:get" name="failedURLs" object="[fl.events.RSLErrorEvent]" playername="" text=".failedURLs" tiptext="Returns an array of files that have failed to download." version=""/>
               <string helpurl="fl.events:RSLErrorEvent:rslsFailed:get" name="rslsFailed" object="[fl.events.RSLErrorEvent]" playername="" text=".rslsFailed" tiptext="Returns the number of files that have failed to download." version=""/>
               <string helpurl="fl.events:RSLErrorEvent:rslsLoaded:get" name="rslsLoaded" object="[fl.events.RSLErrorEvent]" playername="" text=".rslsLoaded" tiptext="Returns the number of files that have downloaded successfully." version=""/>
               <string helpurl="fl.events:RSLErrorEvent:rslsTotal:get" name="rslsTotal" object="[fl.events.RSLErrorEvent]" playername="" text=".rslsTotal" tiptext="Returns the total number of files that have downloaded, successfully or not." version=""/>
            </folder>
         </folder>
         <folder asAncestors="flash.events:Event,Object" helpurl="fl.events:RSLEvent" id="[fl.events.RSLEvent]" index="true" name="RSLEvent" sort="true" tiptext="The RSLEvent class defines events dispatched by RSLPreloader.">
            <folder helpurl="fl.events:RSLEvent" id="Methods" name="Methods" tiptext="Methods for class RSLEvent">
               <string constructor="true" helpurl="fl.events:RSLEvent:RSLEvent" name="RSLEvent" object="[fl.events.RSLEvent]" playername="" text="new RSLEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,rslsLoaded:int=0,rslsFailed:int=0,rslsTotal:int=0,bytesLoaded:int=0,bytesTotal:int=0]%)" tiptext="Creates an Event object with specific information relevant to RSL events." version="2"/>
            </folder>
            <folder helpurl="fl.events:RSLEvent" id="Properties" name="Properties" tiptext="Properties for class RSLEvent">
               <string constant="true" helpurl="fl.events:RSLEvent:RSL_LOAD_COMPLETE" name="RSL_LOAD_COMPLETE" object="[fl.events.RSLEvent]" playername="" text="RSLEvent.RSL_LOAD_COMPLETE" tiptext="Event dispatched by RSLPreloader when all RSLs have successfully downloading." version=""/>
               <string constant="true" helpurl="fl.events:RSLEvent:RSL_PROGRESS" name="RSL_PROGRESS" object="[fl.events.RSLEvent]" playername="" text="RSLEvent.RSL_PROGRESS" tiptext="Event dispatched by RSLPreloader to indicate progress in downloading RSL files." version=""/>
               <string helpurl="fl.events:RSLEvent:bytesLoaded:get" name="bytesLoaded" object="[fl.events.RSLEvent]" playername="" text=".bytesLoaded" tiptext="Returns the total number of downloaded bytes in files that have successfully downloaded." version=""/>
               <string helpurl="fl.events:RSLEvent:bytesTotal:get" name="bytesTotal" object="[fl.events.RSLEvent]" playername="" text=".bytesTotal" tiptext="Returns the total number of downloaded bytes in files that have downloaded, successful or not." version=""/>
               <string helpurl="fl.events:RSLEvent:rslsFailed:get" name="rslsFailed" object="[fl.events.RSLEvent]" playername="" text=".rslsFailed" tiptext="Returns the number of files that have failed to download." version=""/>
               <string helpurl="fl.events:RSLEvent:rslsLoaded:get" name="rslsLoaded" object="[fl.events.RSLEvent]" playername="" text=".rslsLoaded" tiptext="Returns the number of files that have downloaded successfully." version=""/>
               <string helpurl="fl.events:RSLEvent:rslsTotal:get" name="rslsTotal" object="[fl.events.RSLEvent]" playername="" text=".rslsTotal" tiptext="Returns the total number of files that have downloaded, successfully or not." version=""/>
            </folder>
         </folder>
         <folder asAncestors="flash.events:Event,Object" helpurl="fl.events:ScrollEvent" id="[fl.events.ScrollEvent]" index="true" name="ScrollEvent" sort="true" tiptext="The ScrollEvent class defines the scroll event that is associated with the ScrollBar component.">
            <folder helpurl="fl.events:ScrollEvent" id="Methods" name="Methods" tiptext="Methods for class ScrollEvent">
               <string constructor="true" helpurl="fl.events:ScrollEvent:ScrollEvent" name="ScrollEvent" object="[fl.events.ScrollEvent]" playername="" text="new ScrollEvent(%direction:String,delta:Number,position:Number%)" tiptext="Creates a new ScrollEvent object with the specified parameters." version="1.0"/>
               <string helpurl="fl.events:ScrollEvent:clone" name="clone" object="[fl.events.ScrollEvent]" playername="" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of the ScrollEvent object and sets the value of each parameter to match the original." version="1.0"/>
               <string helpurl="fl.events:ScrollEvent:toString" name="toString" object="[fl.events.ScrollEvent]" playername="" text=".toString(%%):String" tiptext="Returns a string that contains all the properties of the ScrollEvent object." version="1.0"/>
            </folder>
            <folder helpurl="fl.events:ScrollEvent" id="Properties" name="Properties" tiptext="Properties for class ScrollEvent">
               <string constant="true" helpurl="fl.events:ScrollEvent:SCROLL" name="SCROLL" object="[fl.events.ScrollEvent]" playername="" text="ScrollEvent.SCROLL" tiptext="Defines the value of the type property of a scroll event object." version=""/>
               <string helpurl="fl.events:ScrollEvent:delta:get" name="delta" object="[fl.events.ScrollEvent]" playername="" text=".delta" tiptext="Gets the size of the change in scroll position, in pixels." version=""/>
               <string helpurl="fl.events:ScrollEvent:direction:get" name="direction" object="[fl.events.ScrollEvent]" playername="" text=".direction" tiptext="Gets a constant value that indicates the direction of movement associated with the event." version=""/>
               <string helpurl="fl.events:ScrollEvent:position:get" name="position" object="[fl.events.ScrollEvent]" playername="" text=".position" tiptext="Gets the current scroll position, in pixels." version=""/>
            </folder>
         </folder>
         <folder asAncestors="flash.events:Event,Object" helpurl="fl.events:SliderEvent" id="[fl.events.SliderEvent]" index="true" name="SliderEvent" sort="true" tiptext="The SliderEvent class defines events that are associated with the Slider component.">
            <folder helpurl="fl.events:SliderEvent" id="Methods" name="Methods" tiptext="Methods for class SliderEvent">
               <string constructor="true" helpurl="fl.events:SliderEvent:SliderEvent" name="SliderEvent" object="[fl.events.SliderEvent]" playername="" text="new SliderEvent(%type:String,value:Number,clickTarget:String,triggerEvent:String[,keyCode:int=0]%)" tiptext="Creates a new SliderEvent object with the specified parameters." version="1.0"/>
               <string helpurl="fl.events:SliderEvent:clone" name="clone" object="[fl.events.SliderEvent]" playername="" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of the SliderEvent object and sets the value of each parameter to match the original." version="1.0"/>
               <string helpurl="fl.events:SliderEvent:toString" name="toString" object="[fl.events.SliderEvent]" playername="" text=".toString(%%):String" tiptext="Returns a string that contains all the properties of the SliderEvent object." version="1.0"/>
            </folder>
            <folder helpurl="fl.events:SliderEvent" id="Properties" name="Properties" tiptext="Properties for class SliderEvent">
               <string constant="true" helpurl="fl.events:SliderEvent:CHANGE" name="CHANGE" object="[fl.events.SliderEvent]" playername="" text="SliderEvent.CHANGE" tiptext="Defines the value of the type property of a change event object." version=""/>
               <string constant="true" helpurl="fl.events:SliderEvent:THUMB_DRAG" name="THUMB_DRAG" object="[fl.events.SliderEvent]" playername="" text="SliderEvent.THUMB_DRAG" tiptext="Defines the value of the type property of a thumbDrag event object." version=""/>
               <string constant="true" helpurl="fl.events:SliderEvent:THUMB_PRESS" name="THUMB_PRESS" object="[fl.events.SliderEvent]" playername="" text="SliderEvent.THUMB_PRESS" tiptext="Defines the value of the type property of a thumbPress event object." version=""/>
               <string constant="true" helpurl="fl.events:SliderEvent:THUMB_RELEASE" name="THUMB_RELEASE" object="[fl.events.SliderEvent]" playername="" text="SliderEvent.THUMB_RELEASE" tiptext="Defines the value of the type property of a thumbRelease event object." version=""/>
               <string helpurl="fl.events:SliderEvent:clickTarget:get" name="clickTarget" object="[fl.events.SliderEvent]" playername="" text=".clickTarget" tiptext="Gets a string that indicates whether the slider thumb or a slider track was pressed." version=""/>
               <string helpurl="fl.events:SliderEvent:keyCode:get" name="keyCode" object="[fl.events.SliderEvent]" playername="" text=".keyCode" tiptext="Gets the key code for the key that was pressed to trigger the event." version=""/>
               <string helpurl="fl.events:SliderEvent:triggerEvent:get" name="triggerEvent" object="[fl.events.SliderEvent]" playername="" text=".triggerEvent" tiptext="Gets the type of device that was used to send the input." version=""/>
               <string helpurl="fl.events:SliderEvent:value:get" name="value" object="[fl.events.SliderEvent]" playername="" text=".value" tiptext="Gets the new value of the slider, based on its position." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="fl.events:SliderEventClickTarget" id="[fl.events.SliderEventClickTarget]" index="true" name="SliderEventClickTarget" sort="true" tiptext="The SliderEventClickTarget class defines constants for the values of the clickTarget property of the SliderEvent class.">
            <folder helpurl="fl.events:SliderEventClickTarget" id="Properties" name="Properties" tiptext="Properties for class SliderEventClickTarget">
               <string constant="true" helpurl="fl.events:SliderEventClickTarget:THUMB" name="THUMB" object="[fl.events.SliderEventClickTarget]" playername="" text="SliderEventClickTarget.THUMB" tiptext="The Slider thumb was clicked." version=""/>
               <string constant="true" helpurl="fl.events:SliderEventClickTarget:TRACK" name="TRACK" object="[fl.events.SliderEventClickTarget]" playername="" text="SliderEventClickTarget.TRACK" tiptext="The Slider track was clicked." version=""/>
            </folder>
         </folder>
      </folder>
      <folder helpurl="fl.ik" id="fl.ik" name="fl.ik" sort="true" tiptext="Classes for package fl.ik">
         <folder asAncestors="Object" helpurl="fl.ik:IKArmature" id="[fl.ik.IKArmature]" index="true" name="IKArmature" sort="true" tiptext="The IKArmature class describes an inverse kinematics (IK) armature.">
            <folder helpurl="fl.ik:IKArmature" id="Methods" name="Methods" tiptext="Methods for class IKArmature">
               <string helpurl="fl.ik:IKArmature:getBoneByName" name="getBoneByName" object="[fl.ik.IKArmature]" playername="" text=".getBoneByName(%targetName:String%):fl.ik:IKBone" tiptext="Returns the specified bone." version="1.5"/>
               <string helpurl="fl.ik:IKArmature:registerElements" name="registerElements" object="[fl.ik.IKArmature]" playername="" text=".registerElements(%container:flash.display:DisplayObjectContainer%)" tiptext="Activates inverse kinematic (IK) movement for a library symbol instance that contains an armature." version="1.5"/>
            </folder>
            <folder helpurl="fl.ik:IKArmature" id="Properties" name="Properties" tiptext="Properties for class IKArmature">
               <string helpurl="fl.ik:IKArmature:container:get" name="container" object="[fl.ik.IKArmature]" playername="" text=".container" tiptext="Returns DisplayObjectContainer passed into call to registerElements." version=""/>
               <string helpurl="fl.ik:IKArmature:name:get" name="name" object="[fl.ik.IKArmature]" playername="" text=".name" tiptext="The name of the armature." version=""/>
               <string helpurl="fl.ik:IKArmature:rootJoint:get" name="rootJoint" object="[fl.ik.IKArmature]" playername="" text=".rootJoint" tiptext="The root joint in the armature." version=""/>
               <string helpurl="fl.ik:IKArmature:springsEnabled:get" name="springsEnabled" object="[fl.ik.IKArmature]" playername="" text=".springsEnabled" tiptext="Specifies whether springs are enabled for an armature." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="fl.ik:IKBone" id="[fl.ik.IKBone]" index="true" name="IKBone" sort="true" tiptext="The IKBone class describes a single segment, which is a foundational component of an inverse kinematics (IK) armature.">
            <folder helpurl="fl.ik:IKBone" id="Properties" name="Properties" tiptext="Properties for class IKBone">
               <string helpurl="fl.ik:IKBone:headJoint:get" name="headJoint" object="[fl.ik.IKBone]" playername="" text=".headJoint" tiptext="The head joint of the bone." version=""/>
               <string helpurl="fl.ik:IKBone:name:get" name="name" object="[fl.ik.IKBone]" playername="" text=".name" tiptext="The name of the bone." version=""/>
               <string helpurl="fl.ik:IKBone:tailJoint:get" name="tailJoint" object="[fl.ik.IKBone]" playername="" text=".tailJoint" tiptext="The tail joint of the bone." version=""/>
            </folder>
         </folder>
         <folder asAncestors="flash.events:Event,Object" helpurl="fl.ik:IKEvent" id="[fl.ik.IKEvent]" index="true" name="IKEvent" sort="true" tiptext="The IKEvent class defines events related to objects that contain inverse kinematics (IK) armatures.">
            <folder helpurl="fl.ik:IKEvent" id="Methods" name="Methods" tiptext="Methods for class IKEvent">
               <string constructor="true" helpurl="fl.ik:IKEvent:IKEvent" name="IKEvent" object="[fl.ik.IKEvent]" playername="" text="new IKEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false]%)" tiptext="Creates an event object that contains information about IK events." version="1.5"/>
            </folder>
            <folder helpurl="fl.ik:IKEvent" id="Properties" name="Properties" tiptext="Properties for class IKEvent">
               <string constant="true" helpurl="fl.ik:IKEvent:DISTANCE_LIMIT" name="DISTANCE_LIMIT" object="[fl.ik.IKEvent]" playername="" text="IKEvent.DISTANCE_LIMIT" tiptext="Defines the value of the type property of a distanceLimit event object." version=""/>
               <string constant="true" helpurl="fl.ik:IKEvent:ITERATION_LIMIT" name="ITERATION_LIMIT" object="[fl.ik.IKEvent]" playername="" text="IKEvent.ITERATION_LIMIT" tiptext="Defines the value of the type property of an iterationLimit event object." version=""/>
               <string constant="true" helpurl="fl.ik:IKEvent:SINGLE_STEP" name="SINGLE_STEP" object="[fl.ik.IKEvent]" playername="" text="IKEvent.SINGLE_STEP" tiptext="Defines the value of the type property of a singleStep event object." version=""/>
               <string constant="true" helpurl="fl.ik:IKEvent:TIME_LIMIT" name="TIME_LIMIT" object="[fl.ik.IKEvent]" playername="" text="IKEvent.TIME_LIMIT" tiptext="Defines the value of the type property of a timeLimit event object." version=""/>
               <string helpurl="fl.ik:IKEvent:distance:get" name="distance" object="[fl.ik.IKEvent]" playername="" text=".distance" tiptext="The distance in pixels from the original position of the joint." version=""/>
               <string helpurl="fl.ik:IKEvent:iterationCount:get" name="iterationCount" object="[fl.ik.IKEvent]" playername="" text=".iterationCount" tiptext="Number of iterations of IK moves performed." version=""/>
               <string helpurl="fl.ik:IKEvent:joint:get" name="joint" object="[fl.ik.IKEvent]" playername="" text=".joint" tiptext="The joint related to the event." version=""/>
               <string helpurl="fl.ik:IKEvent:time:get" name="time" object="[fl.ik.IKEvent]" playername="" text=".time" tiptext="The time elapsed in milliseconds since the previous dispatch of the IKEvent." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="fl.ik:IKJoint" id="[fl.ik.IKJoint]" index="true" name="IKJoint" sort="true" tiptext="The IKJoint class defines a connection between two bones, which are required foundational components of an inverse kinematics (IK) armature.">
            <folder helpurl="fl.ik:IKJoint" id="Methods" name="Methods" tiptext="Methods for class IKJoint">
               <string helpurl="fl.ik:IKJoint:clearSpringAngle" name="clearSpringAngle" object="[fl.ik.IKJoint]" playername="" text=".clearSpringAngle(%%):void" tiptext="Clears the current spring angle." version="1.5"/>
               <string helpurl="fl.ik:IKJoint:clearSpringPoint" name="clearSpringPoint" object="[fl.ik.IKJoint]" playername="" text=".clearSpringPoint(%%):void" tiptext="Clears the current spring point." version="1.5"/>
               <string helpurl="fl.ik:IKJoint:getChildAt" name="getChildAt" object="[fl.ik.IKJoint]" playername="" text=".getChildAt(%iChild:int%):fl.ik:IKJoint" tiptext="Returns the child IKJoint object at the specified index value." version="1.5"/>
               <string helpurl="fl.ik:IKJoint:getChildIndex" name="getChildIndex" object="[fl.ik.IKJoint]" playername="" text=".getChildIndex(%child:fl.ik:IKJoint%):int" tiptext="Returns the index value of the specified IKJoint object." version="1.5"/>
               <string helpurl="fl.ik:IKJoint:getDamping" name="getDamping" object="[fl.ik.IKJoint]" playername="" text=".getDamping(%%):Number" tiptext="" version=""/>
               <string helpurl="fl.ik:IKJoint:getJointValue" name="getJointValue" object="[fl.ik.IKJoint]" playername="" text=".getJointValue(%dof:int%):Number" tiptext="Retrieves the current value of the specified type of degree of freedom." version="1.5"/>
               <string helpurl="fl.ik:IKJoint:getSpringAngle" name="getSpringAngle" object="[fl.ik.IKJoint]" playername="" text=".getSpringAngle(%%):Number" tiptext="Returns the current spring angle." version="1.5"/>
               <string helpurl="fl.ik:IKJoint:getSpringPt" name="getSpringPt" object="[fl.ik.IKJoint]" playername="" text=".getSpringPt(%%):flash.geom:Point" tiptext="Returns the current spring point." version="1.5"/>
               <string helpurl="fl.ik:IKJoint:getStrength" name="getStrength" object="[fl.ik.IKJoint]" playername="" text=".getStrength(%%):Number" tiptext="" version=""/>
               <string helpurl="fl.ik:IKJoint:getTransformationPoint" name="getTransformationPoint" object="[fl.ik.IKJoint]" playername="" text=".getTransformationPoint(%%):flash.geom:Point" tiptext="" version=""/>
               <string helpurl="fl.ik:IKJoint:hasPhysics" name="hasPhysics" object="[fl.ik.IKJoint]" playername="" text=".hasPhysics(%[recursive:Boolean=true]%):Boolean" tiptext="Returns whether the sub-tree (children) of the joint has physics applied." version="1.5"/>
               <string helpurl="fl.ik:IKJoint:hasSpringAngle" name="hasSpringAngle" object="[fl.ik.IKJoint]" playername="" text=".hasSpringAngle(%%):Boolean" tiptext="Returns whether the current spring angle is set." version="1.5"/>
               <string helpurl="fl.ik:IKJoint:hasSpringPoint" name="hasSpringPoint" object="[fl.ik.IKJoint]" playername="" text=".hasSpringPoint(%%):Boolean" tiptext="Returns whether a spring point is currently set." version="1.5"/>
               <string helpurl="fl.ik:IKJoint:isConstrained" name="isConstrained" object="[fl.ik.IKJoint]" playername="" text=".isConstrained(%dof:int%):Boolean" tiptext="Returns if the type of degree of freedom is constrained." version="1.5"/>
               <string helpurl="fl.ik:IKJoint:isEnabled" name="isEnabled" object="[fl.ik.IKJoint]" playername="" text=".isEnabled(%dof:int%)" tiptext="Returns if the specified type of degree of freedom is enabled." version="1.5"/>
               <string helpurl="fl.ik:IKJoint:setConstrained" name="setConstrained" object="[fl.ik.IKJoint]" playername="" text=".setConstrained(%dof:int,constrained:Boolean%):void" tiptext="Sets the constraint of the specified type of degree of freedom." version="1.5"/>
               <string helpurl="fl.ik:IKJoint:setEnabled" name="setEnabled" object="[fl.ik.IKJoint]" playername="" text=".setEnabled(%dof:int,enable:Boolean%)" tiptext="Enables or disables the specified type of degree of freedom." version="1.5"/>
               <string helpurl="fl.ik:IKJoint:setSpringAngle" name="setSpringAngle" object="[fl.ik.IKJoint]" playername="" text=".setSpringAngle(%angle:Number%):void" tiptext="Sets the current spring angle." version="1.5"/>
               <string helpurl="fl.ik:IKJoint:setSpringPt" name="setSpringPt" object="[fl.ik.IKJoint]" playername="" text=".setSpringPt(%pt:flash.geom:Point%):void" tiptext="Sets the current spring point." version="1.5"/>
            </folder>
            <folder helpurl="fl.ik:IKJoint" id="Properties" name="Properties" tiptext="Properties for class IKJoint">
               <string helpurl="fl.ik:IKJoint:DOF_ROTATION" name="DOF_ROTATION" object="[fl.ik.IKJoint]" playername="" text=".DOF_ROTATION" tiptext="Static constant for the rotation degree of freedom." version=""/>
               <string helpurl="fl.ik:IKJoint:DOF_XTRANS" name="DOF_XTRANS" object="[fl.ik.IKJoint]" playername="" text=".DOF_XTRANS" tiptext="Static constant for the x-translation degree of freedom." version=""/>
               <string helpurl="fl.ik:IKJoint:DOF_YTRANS" name="DOF_YTRANS" object="[fl.ik.IKJoint]" playername="" text=".DOF_YTRANS" tiptext="Static constant for the y-translation degree of freedom." version=""/>
               <string helpurl="fl.ik:IKJoint:bone:get" name="bone" object="[fl.ik.IKJoint]" playername="" text=".bone" tiptext="The head bone associated with the IKJoint object." version=""/>
               <string helpurl="fl.ik:IKJoint:name:get" name="name" object="[fl.ik.IKJoint]" playername="" text=".name" tiptext="The IKJoint instance's name." version=""/>
               <string helpurl="fl.ik:IKJoint:numChildren:get" name="numChildren" object="[fl.ik.IKJoint]" playername="" text=".numChildren" tiptext="Returns the number of IKJoint objects branching from the specified IKJoint." version=""/>
               <string helpurl="fl.ik:IKJoint:parent:get" name="parent" object="[fl.ik.IKJoint]" playername="" text=".parent" tiptext="The parent IKJoint object." version=""/>
               <string helpurl="fl.ik:IKJoint:position:get" name="position" object="[fl.ik.IKJoint]" playername="" text=".position" tiptext="The IKJoint's coordinates." version=""/>
               <string helpurl="fl.ik:IKJoint:rotationConstrained:get" name="rotationConstrained" object="[fl.ik.IKJoint]" playername="" text=".rotationConstrained" tiptext="Returns if the rotation is constrained." version=""/>
               <string helpurl="fl.ik:IKJoint:rotationEnabled:get" name="rotationEnabled" object="[fl.ik.IKJoint]" playername="" text=".rotationEnabled" tiptext="Specifies if the rotation is enabled." version=""/>
               <string helpurl="fl.ik:IKJoint:rotationMax:get" name="rotationMax" object="[fl.ik.IKJoint]" playername="" text=".rotationMax" tiptext="The maximum rotation value." version=""/>
               <string helpurl="fl.ik:IKJoint:rotationMin:get" name="rotationMin" object="[fl.ik.IKJoint]" playername="" text=".rotationMin" tiptext="The minimum rotation value." version=""/>
               <string helpurl="fl.ik:IKJoint:rotation:get" name="rotation" object="[fl.ik.IKJoint]" playername="" text=".rotation" tiptext="The current rotation value." version=""/>
               <string helpurl="fl.ik:IKJoint:speed:get" name="speed" object="[fl.ik.IKJoint]" playername="" text=".speed" tiptext="The rotation speed degree of freedom; the xTranslation and yTranslation properties respect the same speed setting." version=""/>
               <string helpurl="fl.ik:IKJoint:springDamping:get" name="springDamping" object="[fl.ik.IKJoint]" playername="" text=".springDamping" tiptext="The spring damping value." version=""/>
               <string helpurl="fl.ik:IKJoint:springPosition:get" name="springPosition" object="[fl.ik.IKJoint]" playername="" text=".springPosition" tiptext="The spring position (for translational joints) or angle (for rotational joints)." version=""/>
               <string helpurl="fl.ik:IKJoint:springStrength:get" name="springStrength" object="[fl.ik.IKJoint]" playername="" text=".springStrength" tiptext="The spring strength value." version=""/>
               <string helpurl="fl.ik:IKJoint:xTranslationConstrained:get" name="xTranslationConstrained" object="[fl.ik.IKJoint]" playername="" text=".xTranslationConstrained" tiptext="Returns if the x-translation is constrained." version=""/>
               <string helpurl="fl.ik:IKJoint:xTranslationEnabled:get" name="xTranslationEnabled" object="[fl.ik.IKJoint]" playername="" text=".xTranslationEnabled" tiptext="Specifies if the x-translation is enabled." version=""/>
               <string helpurl="fl.ik:IKJoint:xTranslationMax:get" name="xTranslationMax" object="[fl.ik.IKJoint]" playername="" text=".xTranslationMax" tiptext="The maximum x-translation value." version=""/>
               <string helpurl="fl.ik:IKJoint:xTranslationMin:get" name="xTranslationMin" object="[fl.ik.IKJoint]" playername="" text=".xTranslationMin" tiptext="The minimum x-translation value." version=""/>
               <string helpurl="fl.ik:IKJoint:xTranslation:get" name="xTranslation" object="[fl.ik.IKJoint]" playername="" text=".xTranslation" tiptext="The current x-translation value." version=""/>
               <string helpurl="fl.ik:IKJoint:yTranslationConstrained:get" name="yTranslationConstrained" object="[fl.ik.IKJoint]" playername="" text=".yTranslationConstrained" tiptext="Returns if the y-translation is constrained." version=""/>
               <string helpurl="fl.ik:IKJoint:yTranslationEnabled:get" name="yTranslationEnabled" object="[fl.ik.IKJoint]" playername="" text=".yTranslationEnabled" tiptext="Specifies if the y-translation is enabled." version=""/>
               <string helpurl="fl.ik:IKJoint:yTranslationMax:get" name="yTranslationMax" object="[fl.ik.IKJoint]" playername="" text=".yTranslationMax" tiptext="The maximum y-translation value." version=""/>
               <string helpurl="fl.ik:IKJoint:yTranslationMin:get" name="yTranslationMin" object="[fl.ik.IKJoint]" playername="" text=".yTranslationMin" tiptext="The minimum y-translation value." version=""/>
               <string helpurl="fl.ik:IKJoint:yTranslation:get" name="yTranslation" object="[fl.ik.IKJoint]" playername="" text=".yTranslation" tiptext="The current y-translation value." version=""/>
            </folder>
         </folder>
         <folder asAncestors="flash.events:EventDispatcher,Object" helpurl="fl.ik:IKManager" id="[fl.ik.IKManager]" index="true" name="IKManager" sort="true" tiptext="The IKManager class is a container class that represents all the inverse kinematics (IK) trees (armatures) defined in a document, and allows the management of those armatures at run time.">
            <folder helpurl="fl.ik:IKManager" id="Methods" name="Methods" tiptext="Methods for class IKManager">
               <string helpurl="fl.ik:IKManager:getArmatureAt" name="getArmatureAt" object="[fl.ik.IKManager]" playername="" static="true" text="IKManager.getArmatureAt(%index:int%):fl.ik:IKArmature" tiptext="Returns the armature at the specified index." version="1.5"/>
               <string helpurl="fl.ik:IKManager:getArmatureByName" name="getArmatureByName" object="[fl.ik.IKManager]" playername="" static="true" text="IKManager.getArmatureByName(%name:String%):fl.ik:IKArmature" tiptext="Returns the armature with the specified name." version="1.5"/>
               <string helpurl="fl.ik:IKManager:setStage" name="setStage" object="[fl.ik.IKManager]" playername="" static="true" text="IKManager.setStage(%stage:flash.display:DisplayObjectContainer%):void" tiptext="Use this method to indicate the container of symbols in a loaded SWF file." version="1.5"/>
               <string helpurl="fl.ik:IKManager:trackAllArmatures" name="trackAllArmatures" object="[fl.ik.IKManager]" playername="" static="true" text="IKManager.trackAllArmatures(%[enable:Boolean=true]%):void" tiptext="Enables or disables live-tracking for all armatures." version="1.5"/>
               <string helpurl="fl.ik:IKManager:trackIKArmature" name="trackIKArmature" object="[fl.ik.IKManager]" playername="" static="true" text="IKManager.trackIKArmature(%theTree:fl.ik:IKArmature[,enable:Boolean=true]%):void" tiptext="Enables or disables live-tracking for the specified IKArmature instance." version="1.5"/>
               <string helpurl="fl.ik:IKManager:trackIKObject" name="trackIKObject" object="[fl.ik.IKManager]" playername="" static="true" text="IKManager.trackIKObject(%target:flash.display:DisplayObject[,enable:Boolean=true]%)" tiptext="Enables or disables live-tracking for the specified IK display object instance." version="1.5"/>
            </folder>
            <folder helpurl="fl.ik:IKManager" id="Properties" name="Properties" tiptext="Properties for class IKManager">
               <string helpurl="fl.ik:IKManager:numArmatures:get" name="numArmatures" object="[fl.ik.IKManager]" playername="" text=".numArmatures" tiptext="The number of armatures on the stage." version=""/>
            </folder>
         </folder>
         <folder asAncestors="flash.events:EventDispatcher,Object" helpurl="fl.ik:IKMover" id="[fl.ik.IKMover]" index="true" name="IKMover" sort="true" tiptext="The IKMover class initiates and controls the inverse kinematic (IK) movement of armatures.">
            <folder helpurl="fl.ik:IKMover" id="Methods" name="Methods" tiptext="Methods for class IKMover">
               <string constructor="true" helpurl="fl.ik:IKMover:IKMover" name="IKMover" object="[fl.ik.IKMover]" playername="" text="new IKMover(%endEffector:fl.ik:IKJoint,targetIn:flash.geom:Point%)" tiptext="Constructor for an IKMover object." version="1.5"/>
               <string helpurl="fl.ik:IKMover:applyPhysics" name="applyPhysics" object="[fl.ik.IKMover]" playername="" text=".applyPhysics(%%):void" tiptext="" version=""/>
               <string helpurl="fl.ik:IKMover:moveTo" name="moveTo" object="[fl.ik.IKMover]" playername="" text=".moveTo(%targetIn:flash.geom:Point%)" tiptext="Moves the associated IKJoint object to the target point, updating all the related IKJoint objectss based on their IK constraints." version="1.5"/>
            </folder>
            <folder helpurl="fl.ik:IKMover" id="Properties" name="Properties" tiptext="Properties for class IKMover">
               <string helpurl="fl.ik:IKMover:distanceLimit:get" name="distanceLimit" object="[fl.ik.IKMover]" playername="" text=".distanceLimit" tiptext="The maximum distance (in pixels) the IK engine should move for each iteration." version=""/>
               <string helpurl="fl.ik:IKMover:iterationLimit:get" name="iterationLimit" object="[fl.ik.IKMover]" playername="" text=".iterationLimit" tiptext="Specifies the maximum number of iterations the IK engine performs for each movement." version=""/>
               <string helpurl="fl.ik:IKMover:limitByDistance:get" name="limitByDistance" object="[fl.ik.IKMover]" playername="" text=".limitByDistance" tiptext="Specifies whether the IK engine ends a movement after the distanceLimit value is exceeded." version=""/>
               <string helpurl="fl.ik:IKMover:limitByIteration:get" name="limitByIteration" object="[fl.ik.IKMover]" playername="" text=".limitByIteration" tiptext="Specifies whether the IK engine ends a movement after the iterationLimit value is exceeded." version=""/>
               <string helpurl="fl.ik:IKMover:limitByTime:get" name="limitByTime" object="[fl.ik.IKMover]" playername="" text=".limitByTime" tiptext="Specifies whether the IK engine ends a movement after a specified timeLimit is exceeded." version=""/>
               <string helpurl="fl.ik:IKMover:stepCount:get" name="stepCount" object="[fl.ik.IKMover]" playername="" text=".stepCount" tiptext="The number of iterations of the IK movement." version=""/>
               <string helpurl="fl.ik:IKMover:timeLimit:get" name="timeLimit" object="[fl.ik.IKMover]" playername="" text=".timeLimit" tiptext="Specifies the maximum time (in milliseconds) the IK engine performs the movement." version=""/>
            </folder>
         </folder>
      </folder>
      <folder helpurl="fl.lang" id="fl.lang" name="fl.lang" sort="true" tiptext="Classes for package fl.lang">
         <folder asAncestors="flash.events:EventDispatcher,Object" helpurl="fl.lang:Locale" id="[fl.lang.Locale]" index="true" name="Locale" sort="true" tiptext="The fl.lang.Locale class allows you to control how multilanguage text is displayed in a SWF file.">
            <folder helpurl="fl.lang:Locale" id="Methods" name="Methods" tiptext="Methods for class Locale">
               <string helpurl="fl.lang:Locale:addDelayedInstance" name="addDelayedInstance" object="[fl.lang.Locale]" playername="" static="true" text="Locale.addDelayedInstance(%instance:Object,stringID:String%)" tiptext="Adds the {instance, string ID} pair into the internal array for later use." version="1.0"/>
               <string helpurl="fl.lang:Locale:addXMLPath" name="addXMLPath" object="[fl.lang.Locale]" playername="" static="true" text="Locale.addXMLPath(%langCode:String,path:String%):void" tiptext="Adds the {languageCode and languagePath} pair into the internal array for later use." version="1.0"/>
               <string helpurl="fl.lang:Locale:checkXMLStatus" name="checkXMLStatus" object="[fl.lang.Locale]" playername="" static="true" text="Locale.checkXMLStatus(%%):Boolean" tiptext="Returns true if the XML file is loaded; false otherwise." version="1.0"/>
               <string helpurl="fl.lang:Locale:getDefaultLang" name="getDefaultLang" object="[fl.lang.Locale]" playername="" static="true" text="Locale.getDefaultLang(%%):String" tiptext="The default language code as set in the Strings panel dialog box or by calling the setDefaultLang() method." version="1.0"/>
               <string helpurl="fl.lang:Locale:initialize" name="initialize" object="[fl.lang.Locale]" playername="" static="true" text="Locale.initialize(%%):void" tiptext="Automatically determines the language to use and loads the XML language file." version="1.0"/>
               <string helpurl="fl.lang:Locale:loadLanguageXML" name="loadLanguageXML" object="[fl.lang.Locale]" playername="" static="true" text="Locale.loadLanguageXML(%xmlLanguageCode:String[,customXmlCompleteCallback:Function=null]%):void" tiptext="Loads the specified XML language file." version="1.0"/>
               <string helpurl="fl.lang:Locale:loadStringEx" name="loadStringEx" object="[fl.lang.Locale]" playername="" static="true" text="Locale.loadStringEx(%stringID:String,languageCode:String%):String" tiptext="Returns the string value associated with the given string ID and language code." version="1.0"/>
               <string helpurl="fl.lang:Locale:loadString" name="loadString" object="[fl.lang.Locale]" playername="" static="true" text="Locale.loadString(%id:String%):String" tiptext="Returns the string value associated with the given string ID in the current language." version="1.0"/>
               <string helpurl="fl.lang:Locale:setDefaultLang" name="setDefaultLang" object="[fl.lang.Locale]" playername="" static="true" text="Locale.setDefaultLang(%langCode:String%):void" tiptext="Sets the default language code." version="1.0"/>
               <string helpurl="fl.lang:Locale:setLoadCallback" name="setLoadCallback" object="[fl.lang.Locale]" playername="" static="true" text="Locale.setLoadCallback(%loadCallback:Function%)" tiptext="Sets the callback function that is called after the XML file is loaded." version="1.0"/>
               <string helpurl="fl.lang:Locale:setString" name="setString" object="[fl.lang.Locale]" playername="" static="true" text="Locale.setString(%stringID:String,languageCode:String,stringValue:String%):void" tiptext="Sets the new string value of a given string ID and language code." version="1.0"/>
            </folder>
            <folder helpurl="fl.lang:Locale" id="Properties" name="Properties" tiptext="Properties for class Locale">
               <string helpurl="fl.lang:Locale:autoReplace:get" name="autoReplace" object="[fl.lang.Locale]" playername="" text=".autoReplace" tiptext="Determines whether strings are replaced automatically after loading the XML file." version=""/>
               <string helpurl="fl.lang:Locale:languageCodeArray:get" name="languageCodeArray" object="[fl.lang.Locale]" playername="" text=".languageCodeArray" tiptext="An array containing language codes for the languages that have been specified or loaded into the FLA file." version=""/>
               <string helpurl="fl.lang:Locale:stringIDArray:get" name="stringIDArray" object="[fl.lang.Locale]" playername="" text=".stringIDArray" tiptext="An array containing all the string IDs in the FLA file." version=""/>
            </folder>
         </folder>
      </folder>
      <folder helpurl="fl.livepreview" id="fl.livepreview" name="fl.livepreview" sort="true" tiptext="Classes for package fl.livepreview">
         <folder asAncestors="flash.display:MovieClip,flash.display:Sprite,flash.display:DisplayObjectContainer,flash.display:InteractiveObject,flash.display:DisplayObject,flash.events:EventDispatcher,Object" helpurl="fl.livepreview:LivePreviewParent" id="[fl.livepreview.LivePreviewParent]" index="true" name="LivePreviewParent" sort="true" tiptext="The LivePreviewParent class provides the timeline for a SWC file or for a compiled clip that is being exported when ActionScript 3.0 is selected.">
            <folder helpurl="fl.livepreview:LivePreviewParent" id="Methods" name="Methods" tiptext="Methods for class LivePreviewParent">
               <string constructor="true" helpurl="fl.livepreview:LivePreviewParent:LivePreviewParent" name="LivePreviewParent" object="[fl.livepreview.LivePreviewParent]" playername="" text="new LivePreviewParent(%%)" tiptext="Initializes the scale and align modes of the Stage, sets the myInstance property, resizes myInstance to the proper size and uses the ExternalInterface class to expose functions to Flash." version="1.0"/>
               <string helpurl="fl.livepreview:LivePreviewParent:onResize" name="onResize" object="[fl.livepreview.LivePreviewParent]" playername="" text=".onResize(%width:Number,height:Number%):void" tiptext="Resizes the component instance on the Stage to the specified dimensions, either by calling a user-defined method, or by separately setting the width and height properties." version="1.0"/>
               <string helpurl="fl.livepreview:LivePreviewParent:onUpdate" name="onUpdate" object="[fl.livepreview.LivePreviewParent]" playername="" text=".onUpdate(%updateArray:restParam%):void" tiptext="Updates the properties of the component instance." version="1.0"/>
            </folder>
            <folder helpurl="fl.livepreview:LivePreviewParent" id="Properties" name="Properties" tiptext="Properties for class LivePreviewParent">
               <string helpurl="fl.livepreview:LivePreviewParent:myInstance" name="myInstance" object="[fl.livepreview.LivePreviewParent]" playername="" text=".myInstance" tiptext="The component instance associated with the live preview." version=""/>
            </folder>
         </folder>
      </folder>
      <folder helpurl="fl.managers" id="fl.managers" name="fl.managers" sort="true" tiptext="Classes for package fl.managers">
         <folder asAncestors="Object" helpurl="fl.managers:FocusManager" id="[fl.managers.FocusManager]" index="true" name="FocusManager" sort="true" tiptext="The FocusManager class manages focus for a set of components that are navigated by mouse or keyboard as a tab loop.">
            <folder helpurl="fl.managers:FocusManager" id="Methods" name="Methods" tiptext="Methods for class FocusManager">
               <string constructor="true" helpurl="fl.managers:FocusManager:FocusManager" name="FocusManager" object="[fl.managers.FocusManager]" playername="" text="new FocusManager(%container:flash.display:DisplayObjectContainer%)" tiptext="Creates a new FocusManager instance." version="1.0"/>
               <string helpurl="fl.managers:FocusManager:activate" name="activate" object="[fl.managers.FocusManager]" playername="" text=".activate(%%):void" tiptext="Activates the FocusManager instance." version="1.0"/>
               <string helpurl="fl.managers:FocusManager:deactivate" name="deactivate" object="[fl.managers.FocusManager]" playername="" text=".deactivate(%%):void" tiptext="Deactivates the FocusManager." version="1.0"/>
               <string helpurl="fl.managers:FocusManager:findFocusManagerComponent" name="findFocusManagerComponent" object="[fl.managers.FocusManager]" playername="" text=".findFocusManagerComponent(%component:flash.display:InteractiveObject%):flash.display:InteractiveObject" tiptext="Retrieves the interactive object that contains the given object, if any." version="1.0"/>
               <string helpurl="fl.managers:FocusManager:getFocus" name="getFocus" object="[fl.managers.FocusManager]" playername="" text=".getFocus(%%):flash.display:InteractiveObject" tiptext="Gets the interactive object that currently has focus." version="1.0"/>
               <string helpurl="fl.managers:FocusManager:getNextFocusManagerComponent" name="getNextFocusManagerComponent" object="[fl.managers.FocusManager]" playername="" text=".getNextFocusManagerComponent(%[backward:Boolean=false]%):flash.display:InteractiveObject" tiptext="Retrieves the interactive object that would receive focus if the user pressed the Tab key to navigate to the next object." version="1.0"/>
               <string helpurl="fl.managers:FocusManager:hideFocus" name="hideFocus" object="[fl.managers.FocusManager]" playername="" text=".hideFocus(%%):void" tiptext="Sets the showFocusIndicator value to false and removes the visual focus indicator from the object that has focus, if any." version="1.0"/>
               <string helpurl="fl.managers:FocusManager:setFocus" name="setFocus" object="[fl.managers.FocusManager]" playername="" text=".setFocus(%component:flash.display:InteractiveObject%):void" tiptext="Sets focus on an IFocusManagerComponent component." version="1.0"/>
               <string helpurl="fl.managers:FocusManager:showFocus" name="showFocus" object="[fl.managers.FocusManager]" playername="" text=".showFocus(%%):void" tiptext="Sets the showFocusIndicator value to true and draws the visual focus indicator on the object with focus, if any." version="1.0"/>
            </folder>
            <folder helpurl="fl.managers:FocusManager" id="Properties" name="Properties" tiptext="Properties for class FocusManager">
               <string helpurl="fl.managers:FocusManager:defaultButtonEnabled:get" name="defaultButtonEnabled" object="[fl.managers.FocusManager]" playername="" text=".defaultButtonEnabled" tiptext="Gets or sets a value that indicates whether the default button is enabled." version=""/>
               <string helpurl="fl.managers:FocusManager:defaultButton:get" name="defaultButton" object="[fl.managers.FocusManager]" playername="" text=".defaultButton" tiptext="Gets or sets the current default button." version=""/>
               <string helpurl="fl.managers:FocusManager:nextTabIndex:get" name="nextTabIndex" object="[fl.managers.FocusManager]" playername="" text=".nextTabIndex" tiptext="Gets the next unique tab index to use in this tab loop." version=""/>
               <string helpurl="fl.managers:FocusManager:showFocusIndicator:get" name="showFocusIndicator" object="[fl.managers.FocusManager]" playername="" text=".showFocusIndicator" tiptext="Gets or sets a value that indicates whether a component that has focus should be marked with a visual indicator of focus." version=""/>
            </folder>
         </folder>
         <folder helpurl="fl.managers:IFocusManager" id="[fl.managers.IFocusManager]" index="true" name="IFocusManager" sort="true" tiptext="Implement the IFocusManager interface to create a custom focus manager.">
            <folder helpurl="fl.managers:IFocusManager" id="Methods" name="Methods" tiptext="Methods for class IFocusManager">
               <string helpurl="fl.managers:IFocusManager:activate" name="activate" object="[fl.managers.IFocusManager]" playername="" text=".activate(%%):void" tiptext="Activates a focus manager." version="1.0"/>
               <string helpurl="fl.managers:IFocusManager:deactivate" name="deactivate" object="[fl.managers.IFocusManager]" playername="" text=".deactivate(%%):void" tiptext="Deactivates a focus manager." version="1.0"/>
               <string helpurl="fl.managers:IFocusManager:findFocusManagerComponent" name="findFocusManagerComponent" object="[fl.managers.IFocusManager]" playername="" text=".findFocusManagerComponent(%component:flash.display:InteractiveObject%):flash.display:InteractiveObject" tiptext="Retrieves the IFocusManagerComponent object that contains the specified object, if there is one." version="1.0"/>
               <string helpurl="fl.managers:IFocusManager:getFocus" name="getFocus" object="[fl.managers.IFocusManager]" playername="" text=".getFocus(%%):flash.display:InteractiveObject" tiptext="Retrieves the IFocusManagerComponent component that currently has focus." version="1.0"/>
               <string helpurl="fl.managers:IFocusManager:getNextFocusManagerComponent" name="getNextFocusManagerComponent" object="[fl.managers.IFocusManager]" playername="" text=".getNextFocusManagerComponent(%[backward:Boolean=false]%):flash.display:InteractiveObject" tiptext="Retrieves the component that receives focus next if the user causes focus to move by using the Tab key." version="1.0"/>
               <string helpurl="fl.managers:IFocusManager:hideFocus" name="hideFocus" object="[fl.managers.IFocusManager]" playername="" text=".hideFocus(%%):void" tiptext="Sets the showFocusIndicator property to false." version="1.0"/>
               <string helpurl="fl.managers:IFocusManager:setFocus" name="setFocus" object="[fl.managers.IFocusManager]" playername="" text=".setFocus(%o:flash.display:InteractiveObject%):void" tiptext="Sets focus to an IFocusManagerComponent component." version="1.0"/>
               <string helpurl="fl.managers:IFocusManager:showFocus" name="showFocus" object="[fl.managers.IFocusManager]" playername="" text=".showFocus(%%):void" tiptext="Sets the showFocusIndicator property to true." version="1.0"/>
            </folder>
            <folder helpurl="fl.managers:IFocusManager" id="Properties" name="Properties" tiptext="Properties for class IFocusManager">
               <string helpurl="fl.managers:IFocusManager:defaultButtonEnabled:get" name="defaultButtonEnabled" object="[fl.managers.IFocusManager]" playername="" text=".defaultButtonEnabled" tiptext="Gets or sets a value that indicates whether the default button is enabled." version=""/>
               <string helpurl="fl.managers:IFocusManager:defaultButton:get" name="defaultButton" object="[fl.managers.IFocusManager]" playername="" text=".defaultButton" tiptext="Gets or sets a reference to the default button." version=""/>
               <string helpurl="fl.managers:IFocusManager:nextTabIndex:get" name="nextTabIndex" object="[fl.managers.IFocusManager]" playername="" text=".nextTabIndex" tiptext="Gets the next unique tab index to use in the current tab loop." version=""/>
               <string helpurl="fl.managers:IFocusManager:showFocusIndicator:get" name="showFocusIndicator" object="[fl.managers.IFocusManager]" playername="" text=".showFocusIndicator" tiptext="Gets or sets a value that determines whether the user interface changes to indicate that a specific component has focus." version=""/>
            </folder>
         </folder>
         <folder helpurl="fl.managers:IFocusManagerComponent" id="[fl.managers.IFocusManagerComponent]" index="true" name="IFocusManagerComponent" sort="true" tiptext="The IFocusManagerComponent interface provides methods and properties that give components the capability to receive focus.">
            <folder helpurl="fl.managers:IFocusManagerComponent" id="Methods" name="Methods" tiptext="Methods for class IFocusManagerComponent">
               <string helpurl="fl.managers:IFocusManagerComponent:drawFocus" name="drawFocus" object="[fl.managers.IFocusManagerComponent]" playername="" text=".drawFocus(%draw:Boolean%):void" tiptext="Draws a visual focus indicator." version="1.0"/>
               <string helpurl="fl.managers:IFocusManagerComponent:setFocus" name="setFocus" object="[fl.managers.IFocusManagerComponent]" playername="" text=".setFocus(%%):void" tiptext="Sets focus for a component." version="1.0"/>
            </folder>
            <folder helpurl="fl.managers:IFocusManagerComponent" id="Properties" name="Properties" tiptext="Properties for class IFocusManagerComponent">
               <string helpurl="fl.managers:IFocusManagerComponent:focusEnabled:get" name="focusEnabled" object="[fl.managers.IFocusManagerComponent]" playername="" text=".focusEnabled" tiptext="Gets or sets a Boolean value that indicates whether a selected component can receive focus from the focus manager." version=""/>
               <string helpurl="fl.managers:IFocusManagerComponent:mouseFocusEnabled:get" name="mouseFocusEnabled" object="[fl.managers.IFocusManagerComponent]" playername="" text=".mouseFocusEnabled" tiptext="Gets a Boolean value that indicates whether a component that is selected by using a mouse device can receive focus." version=""/>
               <string helpurl="fl.managers:IFocusManagerComponent:tabEnabled:get" name="tabEnabled" object="[fl.managers.IFocusManagerComponent]" playername="" text=".tabEnabled" tiptext="Gets a Boolean value that indicates whether pressing the Tab key can move focus to this component." version=""/>
               <string helpurl="fl.managers:IFocusManagerComponent:tabIndex:get" name="tabIndex" object="[fl.managers.IFocusManagerComponent]" playername="" text=".tabIndex" tiptext="Gets the order in which the component receives focus, if tabEnabledis set to true." version=""/>
            </folder>
         </folder>
         <folder helpurl="fl.managers:IFocusManagerGroup" id="[fl.managers.IFocusManagerGroup]" index="true" name="IFocusManagerGroup" sort="true" tiptext="The IFocusManagerGroup interface provides properties that are used to manage a set of components of which only one can be selected at a time.">
            <folder helpurl="fl.managers:IFocusManagerGroup" id="Properties" name="Properties" tiptext="Properties for class IFocusManagerGroup">
               <string helpurl="fl.managers:IFocusManagerGroup:groupName:get" name="groupName" object="[fl.managers.IFocusManagerGroup]" playername="" text=".groupName" tiptext="Gets or sets the name of the group of components to which this component belongs." version=""/>
               <string helpurl="fl.managers:IFocusManagerGroup:selected:get" name="selected" object="[fl.managers.IFocusManagerGroup]" playername="" text=".selected" tiptext="Gets or sets a Boolean value that indicates whether this component is selected." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="fl.managers:StyleManager" id="[fl.managers.StyleManager]" index="true" name="StyleManager" sort="true" tiptext="The StyleManager class provides static methods that can be used to get and set styles for a component instance, an entire component type, or all user interface components in a Flash document.">
            <folder helpurl="fl.managers:StyleManager" id="Methods" name="Methods" tiptext="Methods for class StyleManager">
               <string constructor="true" helpurl="fl.managers:StyleManager:StyleManager" name="StyleManager" object="[fl.managers.StyleManager]" playername="" text="new StyleManager(%%)" tiptext="Creates a new StyleManager object." version="1.0"/>
               <string helpurl="fl.managers:StyleManager:clearComponentStyle" name="clearComponentStyle" object="[fl.managers.StyleManager]" playername="" static="true" text="StyleManager.clearComponentStyle(%component:Object,name:String%):void" tiptext="Removes a style from the specified component." version="1.0"/>
               <string helpurl="fl.managers:StyleManager:clearStyle" name="clearStyle" object="[fl.managers.StyleManager]" playername="" static="true" text="StyleManager.clearStyle(%name:String%):void" tiptext="Removes a global style from all user interface components in a document." version="1.0"/>
               <string helpurl="fl.managers:StyleManager:getComponentStyle" name="getComponentStyle" object="[fl.managers.StyleManager]" playername="" static="true" text="StyleManager.getComponentStyle(%component:Object,name:String%):Object" tiptext="Gets a style that exists on a specific component." version="1.0"/>
               <string helpurl="fl.managers:StyleManager:getStyle" name="getStyle" object="[fl.managers.StyleManager]" playername="" static="true" text="StyleManager.getStyle(%name:String%):Object" tiptext="Gets a global style by name." version="1.0"/>
               <string helpurl="fl.managers:StyleManager:registerInstance" name="registerInstance" object="[fl.managers.StyleManager]" playername="" static="true" text="StyleManager.registerInstance(%instance:fl.core:UIComponent%):void" tiptext="Registers a component instance with the style manager." version="1.0"/>
               <string helpurl="fl.managers:StyleManager:setComponentStyle" name="setComponentStyle" object="[fl.managers.StyleManager]" playername="" static="true" text="StyleManager.setComponentStyle(%component:Object,name:String,style:Object%):void" tiptext="Sets a style on all instances of a component type, for example, on all instances of a Button component, or on all instances of a ComboBox component." version="1.0"/>
               <string helpurl="fl.managers:StyleManager:setStyle" name="setStyle" object="[fl.managers.StyleManager]" playername="" static="true" text="StyleManager.setStyle(%name:String,style:Object%):void" tiptext="Sets a global style for all user interface components in a document." version="1.0"/>
            </folder>
         </folder>
      </folder>
      <folder helpurl="fl.motion" id="fl.motion" name="fl.motion" sort="true" tiptext="Classes for package fl.motion">
         <folder asAncestors="Object" helpurl="fl.motion:AdjustColor" id="[fl.motion.AdjustColor]" index="true" name="AdjustColor" sort="true" tiptext="The AdjustColor class defines various color properties, such as brightness, contrast, hue, and saturation, to support the ColorMatrixFilter class.">
            <folder helpurl="fl.motion:AdjustColor" id="Methods" name="Methods" tiptext="Methods for class AdjustColor">
               <string constructor="true" helpurl="fl.motion:AdjustColor:AdjustColor" name="AdjustColor" object="[fl.motion.AdjustColor]" playername="" text="new AdjustColor(%%)" tiptext="The AdjustColor class defines various color properties to support the ColorMatrixFilter." version="1.0"/>
               <string helpurl="fl.motion:AdjustColor:AllValuesAreSet" name="AllValuesAreSet" object="[fl.motion.AdjustColor]" playername="" text=".AllValuesAreSet(%%):Boolean" tiptext="Verifies if all four AdjustColor properties are set." version="1.0"/>
               <string helpurl="fl.motion:AdjustColor:CalculateFinalFlatArray" name="CalculateFinalFlatArray" object="[fl.motion.AdjustColor]" playername="" text=".CalculateFinalFlatArray(%%):Array" tiptext="Returns the flat array of values for all four properties." version="1.0"/>
            </folder>
            <folder helpurl="fl.motion:AdjustColor" id="Properties" name="Properties" tiptext="Properties for class AdjustColor">
               <string helpurl="fl.motion:AdjustColor:brightness:set" name="brightness" object="[fl.motion.AdjustColor]" playername="" text=".brightness" tiptext="Sets the brightness of the AdjustColor filter." version=""/>
               <string helpurl="fl.motion:AdjustColor:contrast:set" name="contrast" object="[fl.motion.AdjustColor]" playername="" text=".contrast" tiptext="Sets the contrast of the AdjustColor filter." version=""/>
               <string helpurl="fl.motion:AdjustColor:hue:set" name="hue" object="[fl.motion.AdjustColor]" playername="" text=".hue" tiptext="Sets the hue of the AdjustColor filter." version=""/>
               <string helpurl="fl.motion:AdjustColor:saturation:set" name="saturation" object="[fl.motion.AdjustColor]" playername="" text=".saturation" tiptext="Sets the saturation of the AdjustColor filter." version=""/>
            </folder>
         </folder>
         <folder asAncestors="fl.motion:AnimatorBase,flash.events:EventDispatcher,Object" helpurl="fl.motion:Animator" id="[fl.motion.Animator]" index="true" name="Animator" sort="true" tiptext="The Animator class applies an XML description of a motion tween to a display object.">
            <folder helpurl="fl.motion:Animator" id="Methods" name="Methods" tiptext="Methods for class Animator">
               <string constructor="true" helpurl="fl.motion:Animator:Animator" name="Animator" object="[fl.motion.Animator]" playername="" text="new Animator(%[xml:XML=null,target:flash.display:DisplayObject=null]%)" tiptext="Creates an Animator object to apply the XML-based motion tween description to a display object." version="1.0"/>
               <string helpurl="fl.motion:Animator:fromXMLString" name="fromXMLString" object="[fl.motion.Animator]" playername="" static="true" text="Animator.fromXMLString(%xmlString:String[,target:flash.display:DisplayObject=null]%):fl.motion:Animator" tiptext="Creates an Animator object from a string of XML." version="1.0"/>
               <string helpurl="fl.motion:Animator:matricesEqual" name="matricesEqual" object="[fl.motion.Animator]" playername="" static="true" text="Animator.matricesEqual(%a:flash.geom:Matrix,b:flash.geom:Matrix%):Boolean" tiptext="" version="1"/>
            </folder>
         </folder>
         <folder asAncestors="fl.motion:AnimatorBase,flash.events:EventDispatcher,Object" helpurl="fl.motion:Animator3D" id="[fl.motion.Animator3D]" index="true" name="Animator3D" sort="true" tiptext="The Animator3D class applies an XML description of a three-dimensional motion tween to a display object.">
            <folder helpurl="fl.motion:Animator3D" id="Methods" name="Methods" tiptext="Methods for class Animator3D">
               <string constructor="true" helpurl="fl.motion:Animator3D:Animator3D" name="Animator3D" object="[fl.motion.Animator3D]" playername="" text="new Animator3D(%[xml:XML=null,target:flash.display:DisplayObject=null]%)" tiptext="Creates an Animator3D object to apply the XML-based motion tween description in three dimensions to a display object." version="1.0"/>
               <string helpurl="fl.motion:Animator3D:convertMatrixToMatrix3D" name="convertMatrixToMatrix3D" object="[fl.motion.Animator3D]" playername="" static="true" text="Animator3D.convertMatrixToMatrix3D(%mat2D:flash.geom:Matrix%):flash.geom:Matrix3D" tiptext="" version=""/>
               <string helpurl="fl.motion:Animator3D:matrices3DEqual" name="matrices3DEqual" object="[fl.motion.Animator3D]" playername="" static="true" text="Animator3D.matrices3DEqual(%a:flash.geom:Matrix3D,b:flash.geom:Matrix3D%):Boolean" tiptext="" version=""/>
            </folder>
            <folder helpurl="fl.motion:Animator3D" id="Properties" name="Properties" tiptext="Properties for class Animator3D">
               <string helpurl="fl.motion:Animator3D:initialPosition:set" name="initialPosition" object="[fl.motion.Animator3D]" playername="" text=".initialPosition" tiptext="Establishes, the x-, y-, and z- coordinates of the display object." version=""/>
            </folder>
         </folder>
         <folder asAncestors="flash.events:EventDispatcher,Object" helpurl="fl.motion:AnimatorBase" id="[fl.motion.AnimatorBase]" index="true" name="AnimatorBase" sort="true" tiptext="The AnimatorBase class applies an XML description of a motion tween to a display object.">
            <folder helpurl="fl.motion:AnimatorBase" id="Methods" name="Methods" tiptext="Methods for class AnimatorBase">
               <string constructor="true" helpurl="fl.motion:AnimatorBase:AnimatorBase" name="AnimatorBase" object="[fl.motion.AnimatorBase]" playername="" text="new AnimatorBase(%[xml:XML=null,target:flash.display:DisplayObject=null]%)" tiptext="Creates an AnimatorBase object to apply the XML-based motion tween description to a display object." version="1.0"/>
               <string helpurl="fl.motion:AnimatorBase:end" name="end" object="[fl.motion.AnimatorBase]" playername="" text=".end(%[reset:Boolean=false,stopEnterFrame:Boolean=true,pastLastFrame:Boolean=false]%):void" tiptext="Stops the animation and Flash Player goes immediately to the last frame in the animation sequence." version="1.0"/>
               <string helpurl="fl.motion:AnimatorBase:nextFrame" name="nextFrame" object="[fl.motion.AnimatorBase]" playername="" text=".nextFrame(%[reset:Boolean=false,stopEnterFrame:Boolean=true]%):void" tiptext="Advances Flash Player to the next frame in the animation sequence." version="1.0"/>
               <string helpurl="fl.motion:AnimatorBase:pause" name="pause" object="[fl.motion.AnimatorBase]" playername="" text=".pause(%%):void" tiptext="Pauses the animation until you call the resume() method." version="1.0"/>
               <string helpurl="fl.motion:AnimatorBase:play" name="play" object="[fl.motion.AnimatorBase]" playername="" text=".play(%[startTime:int=-1,startEnterFrame:Boolean=true]%):void" tiptext="Begins the animation." version="1.0"/>
               <string helpurl="fl.motion:AnimatorBase:processCurrentFrame" name="processCurrentFrame" object="[fl.motion.AnimatorBase]" playername="" static="true" text="AnimatorBase.processCurrentFrame(%parent:flash.display:MovieClip,anim:fl.motion:AnimatorBase,startEnterFrame:Boolean[,playOnly:Boolean=false]%):void" tiptext="" version=""/>
               <string helpurl="fl.motion:AnimatorBase:registerParentFrameHandler" name="registerParentFrameHandler" object="[fl.motion.AnimatorBase]" playername="" static="true" text="AnimatorBase.registerParentFrameHandler(%parent:flash.display:MovieClip,anim:fl.motion:AnimatorBase,spanStart:int[,repeatCount:int=0,useCurrentFrame:Boolean=false]%):void" tiptext="Registers the given MovieClip and an AnimatorBase instance for a child of that MovieClip." version="1.0"/>
               <string helpurl="fl.motion:AnimatorBase:resume" name="resume" object="[fl.motion.AnimatorBase]" playername="" text=".resume(%%):void" tiptext="Resumes the animation after it has been paused by the pause() method." version="1.0"/>
               <string helpurl="fl.motion:AnimatorBase:rewind" name="rewind" object="[fl.motion.AnimatorBase]" playername="" text=".rewind(%%):void" tiptext="Sets Flash Player to the first frame of the animation." version="1.0"/>
               <string helpurl="fl.motion:AnimatorBase:startFrameEvents" name="startFrameEvents" object="[fl.motion.AnimatorBase]" playername="" text=".startFrameEvents(%%):void" tiptext="Initiates frame events." version="1.0"/>
               <string helpurl="fl.motion:AnimatorBase:stop" name="stop" object="[fl.motion.AnimatorBase]" playername="" text=".stop(%%):void" tiptext="Stops the animation and Flash Player goes back to the first frame in the animation sequence." version="1.0"/>
               <string helpurl="fl.motion:AnimatorBase:useCurrentFrame" name="useCurrentFrame" object="[fl.motion.AnimatorBase]" playername="" text=".useCurrentFrame(%enable:Boolean,spanStart:int%):void" tiptext="Sets the currentFrame property whenever a new frame is entered, and sets whether the target's animation is synchronized to the frames in its parent MovieClips's timeline." version="1.0"/>
            </folder>
            <folder helpurl="fl.motion:AnimatorBase" id="Properties" name="Properties" tiptext="Properties for class AnimatorBase">
               <string helpurl="fl.motion:AnimatorBase:autoRewind" name="autoRewind" object="[fl.motion.AnimatorBase]" playername="" text=".autoRewind" tiptext="Sets the animation to restart after it finishes." version=""/>
               <string helpurl="fl.motion:AnimatorBase:orientToPath" name="orientToPath" object="[fl.motion.AnimatorBase]" playername="" text=".orientToPath" tiptext="Sets the position of the display object along the motion path." version=""/>
               <string helpurl="fl.motion:AnimatorBase:positionMatrix" name="positionMatrix" object="[fl.motion.AnimatorBase]" playername="" text=".positionMatrix" tiptext="The Matrix object that applies an overall transformation to the motion path." version=""/>
               <string helpurl="fl.motion:AnimatorBase:repeatCount" name="repeatCount" object="[fl.motion.AnimatorBase]" playername="" text=".repeatCount" tiptext="Number of times to repeat the animation." version=""/>
               <string helpurl="fl.motion:AnimatorBase:transformationPointZ" name="transformationPointZ" object="[fl.motion.AnimatorBase]" playername="" text=".transformationPointZ" tiptext="The z-coordinate point of reference for rotating or scaling a display object." version=""/>
               <string helpurl="fl.motion:AnimatorBase:transformationPoint" name="transformationPoint" object="[fl.motion.AnimatorBase]" playername="" text=".transformationPoint" tiptext="The point of reference for rotating or scaling a display object." version=""/>
               <string helpurl="fl.motion:AnimatorBase:frameEvent:get" name="frameEvent" object="[fl.motion.AnimatorBase]" playername="" text=".frameEvent" tiptext="The name of the event object created by the Event.ENTER_FRAME event." version=""/>
               <string helpurl="fl.motion:AnimatorBase:instanceFactoryClass:get" name="instanceFactoryClass" object="[fl.motion.AnimatorBase]" playername="" text=".instanceFactoryClass" tiptext="When creating instances with ActionScript, this is the class that creates the instance." version=""/>
               <string helpurl="fl.motion:AnimatorBase:isPlaying:get" name="isPlaying" object="[fl.motion.AnimatorBase]" playername="" text=".isPlaying" tiptext="Indicates whether the animation is currently playing." version=""/>
               <string helpurl="fl.motion:AnimatorBase:motionArray:get" name="motionArray" object="[fl.motion.AnimatorBase]" playername="" text=".motionArray" tiptext="The Array of objects that contains the motion tween properties for the animation." version=""/>
               <string helpurl="fl.motion:AnimatorBase:motion:get" name="motion" object="[fl.motion.AnimatorBase]" playername="" text=".motion" tiptext="The object that contains the motion tween properties for the animation." version=""/>
               <string helpurl="fl.motion:AnimatorBase:placeholderName:get" name="placeholderName" object="[fl.motion.AnimatorBase]" playername="" text=".placeholderName" tiptext="When creating instances with ActionScript, this is the instance that appears on stage that we will replace." version=""/>
               <string helpurl="fl.motion:AnimatorBase:sceneName:get" name="sceneName" object="[fl.motion.AnimatorBase]" playername="" text=".sceneName" tiptext="A reference for exported scenes, for 3D motion, so the scene can be loaded into a parent timeline." version=""/>
               <string helpurl="fl.motion:AnimatorBase:spanEnd:get" name="spanEnd" object="[fl.motion.AnimatorBase]" playername="" text=".spanEnd" tiptext="Returns the frame of the target's parent on which the animation of the target ends." version=""/>
               <string helpurl="fl.motion:AnimatorBase:spanStart:get" name="spanStart" object="[fl.motion.AnimatorBase]" playername="" text=".spanStart" tiptext="Returns the frame of the target's parent on which the animation of the target begins." version=""/>
               <string helpurl="fl.motion:AnimatorBase:targetName:get" name="targetName" object="[fl.motion.AnimatorBase]" playername="" text=".targetName" tiptext="The name of the target object as seen by the parent DisplayObjectContainer." version=""/>
               <string helpurl="fl.motion:AnimatorBase:targetParentButton:get" name="targetParentButton" object="[fl.motion.AnimatorBase]" playername="" text=".targetParentButton" tiptext="" version=""/>
               <string helpurl="fl.motion:AnimatorBase:targetParent:get" name="targetParent" object="[fl.motion.AnimatorBase]" playername="" text=".targetParent" tiptext="The target parent DisplayObjectContainer being animated, which can be used in conjunction with targetName to retrieve the target object after it is removed and then replaced on the timeline." version=""/>
               <string helpurl="fl.motion:AnimatorBase:targetState3D:get" name="targetState3D" object="[fl.motion.AnimatorBase]" playername="" text=".targetState3D" tiptext="The initial orientation for the target object." version=""/>
               <string helpurl="fl.motion:AnimatorBase:target:get" name="target" object="[fl.motion.AnimatorBase]" playername="" text=".target" tiptext="The display object being animated." version=""/>
               <string helpurl="fl.motion:AnimatorBase:time:get" name="time" object="[fl.motion.AnimatorBase]" playername="" text=".time" tiptext="A zero-based integer that indicates and controls the time in the current animation." version=""/>
               <string helpurl="fl.motion:AnimatorBase:usingCurrentFrame:get" name="usingCurrentFrame" object="[fl.motion.AnimatorBase]" playername="" text=".usingCurrentFrame" tiptext="Indicates whether the currentFrame property is checked whenever a new frame is entered andwhether the target's animation is synchronized to the frames in its parent's timeline, or always advancing no matter what the parent's current frame is." version=""/>
               <string helpurl="fl.motion:AnimatorBase:initialPosition:set" name="initialPosition" object="[fl.motion.AnimatorBase]" playername="" text=".initialPosition" tiptext="An array of coordinates defining the starting location of the animation." version=""/>
            </folder>
            <folder helpurl="fl.motion:AnimatorBase" id="Events" name="Events" tiptext="Events for class AnimatorBase">
               <string helpurl="fl.motion:AnimatorBase_fl.motion.MotionEvent.TIME_CHANGE_timeChange" name="timeChange" object="[fl.motion.AnimatorBase]" playername="" text=".addEventListener(%type:String=MotionEvent.TIME_CHANGE{MotionEvent.TIME_CHANGE,MotionEvent.MOTION_UPDATE,MotionEvent.MOTION_START,MotionEvent.MOTION_END},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the Animator's time value has changed, but the screen has not yet been updated (i.e., the motionUpdate event)." version=""/>
               <string helpurl="fl.motion:AnimatorBase_fl.motion.MotionEvent.MOTION_UPDATE_motionUpdate" name="motionUpdate" object="[fl.motion.AnimatorBase]" playername="" text=".addEventListener(%type:String=MotionEvent.MOTION_UPDATE{MotionEvent.TIME_CHANGE,MotionEvent.MOTION_UPDATE,MotionEvent.MOTION_START,MotionEvent.MOTION_END},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the motion has changed and the screen has been updated." version=""/>
               <string helpurl="fl.motion:AnimatorBase_fl.motion.MotionEvent.MOTION_START_motionStart" name="motionStart" object="[fl.motion.AnimatorBase]" playername="" text=".addEventListener(%type:String=MotionEvent.MOTION_START{MotionEvent.TIME_CHANGE,MotionEvent.MOTION_UPDATE,MotionEvent.MOTION_START,MotionEvent.MOTION_END},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the motion starts playing." version=""/>
               <string helpurl="fl.motion:AnimatorBase_fl.motion.MotionEvent.MOTION_END_motionEnd" name="motionEnd" object="[fl.motion.AnimatorBase]" playername="" text=".addEventListener(%type:String=MotionEvent.MOTION_END{MotionEvent.TIME_CHANGE,MotionEvent.MOTION_UPDATE,MotionEvent.MOTION_START,MotionEvent.MOTION_END},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the motion finishes playing, either when it reaches the end, or when the motion is interrupted by a call to the stop() or end() methods." version=""/>
            </folder>
         </folder>
         <folder asAncestors="fl.motion:AnimatorFactoryBase,Object" helpurl="fl.motion:AnimatorFactory" id="[fl.motion.AnimatorFactory]" index="true" name="AnimatorFactory" sort="true" tiptext="The AnimatorFactory class provides ActionScript-based support to associate one Motion object with multiple display objects.">
            <folder helpurl="fl.motion:AnimatorFactory" id="Methods" name="Methods" tiptext="Methods for class AnimatorFactory">
               <string constructor="true" helpurl="fl.motion:AnimatorFactory:AnimatorFactory" name="AnimatorFactory" object="[fl.motion.AnimatorFactory]" playername="" text="new AnimatorFactory(%motion:fl.motion:MotionBase[,motionArray:Array=null]%)" tiptext="Creates an AnimatorFactory instance you can use to assign the properties of a MotionBase object to display objects." version="1.0"/>
            </folder>
         </folder>
         <folder asAncestors="fl.motion:AnimatorFactoryBase,Object" helpurl="fl.motion:AnimatorFactory3D" id="[fl.motion.AnimatorFactory3D]" index="true" name="AnimatorFactory3D" sort="true" tiptext="The AnimatorFactory3D class provides ActionScript-based support to associate one Motion object containing three-dimensional properties with multiple display objects.">
            <folder helpurl="fl.motion:AnimatorFactory3D" id="Methods" name="Methods" tiptext="Methods for class AnimatorFactory3D">
               <string constructor="true" helpurl="fl.motion:AnimatorFactory3D:AnimatorFactory3D" name="AnimatorFactory3D" object="[fl.motion.AnimatorFactory3D]" playername="" text="new AnimatorFactory3D(%motion:fl.motion:MotionBase[,motionArray:Array=null]%)" tiptext="Creates an AnimatorFactory3D instance you can use to assign the properties of a MotionBase object to display objects." version="1.0"/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="fl.motion:AnimatorFactoryBase" id="[fl.motion.AnimatorFactoryBase]" index="true" name="AnimatorFactoryBase" sort="true" tiptext="The AnimatorFactoryBase class provides ActionScript-based support to display and tween multiple targeted objects with one Motion dynamically at runtime.">
            <folder helpurl="fl.motion:AnimatorFactoryBase" id="Methods" name="Methods" tiptext="Methods for class AnimatorFactoryBase">
               <string constructor="true" helpurl="fl.motion:AnimatorFactoryBase:AnimatorFactoryBase" name="AnimatorFactoryBase" object="[fl.motion.AnimatorFactoryBase]" playername="" text="new AnimatorFactoryBase(%motion:fl.motion:MotionBase[,motionArray:Array=null]%)" tiptext="Creates an instance of the AnimatorFactoryBase class." version="1.0"/>
               <string helpurl="fl.motion:AnimatorFactoryBase:addTargetInfo" name="addTargetInfo" object="[fl.motion.AnimatorFactoryBase]" playername="" text=".addTargetInfo(%targetParent:flash.display:DisplayObject,targetName:String[,repeatCount:int=0,autoPlay:Boolean=true,startFrame:int=-1,useCurrentFrame:Boolean=false,initialPosition:Array=null,zIndex:int=-1,placeholderName:String=null,instanceFactoryClass:Class=null]%):fl.motion:AnimatorBase" tiptext="References the parent DisplayObjectContainer and then creates and returns an AnimatorBase instance whose target property is set to the DisplayObject (if applicable) that is the targetName property of the targetParent,and whose Motion property is stored in the AnimatorFactoryBase instance upon creation." version="1.0"/>
               <string helpurl="fl.motion:AnimatorFactoryBase:addTarget" name="addTarget" object="[fl.motion.AnimatorFactoryBase]" playername="" text=".addTarget(%target:flash.display:DisplayObject[,repeatCount:int=0,autoPlay:Boolean=true,startFrame:int=-1,useCurrentFrame:Boolean=false]%):fl.motion:AnimatorBase" tiptext="Creates and returns an AnimatorBase instance whose target property is set to the DisplayObject (if applicable)that is the targetName property of the targetParent,and whose Motion property is stored in the AnimatorFactoryBase instance upon creation." version="1.0"/>
            </folder>
            <folder helpurl="fl.motion:AnimatorFactoryBase" id="Properties" name="Properties" tiptext="Properties for class AnimatorFactoryBase">
               <string helpurl="fl.motion:AnimatorFactoryBase:motion:get" name="motion" object="[fl.motion.AnimatorFactoryBase]" playername="" text=".motion" tiptext="The MotionBase instance that the AnimatorFactoryBase instance and its target objects are associated with." version=""/>
               <string helpurl="fl.motion:AnimatorFactoryBase:sceneName:set" name="sceneName" object="[fl.motion.AnimatorFactoryBase]" playername="" text=".sceneName" tiptext="A reference for exported scenes, for 3D motion, so the scene can be loaded into a parent timeline." version=""/>
               <string helpurl="fl.motion:AnimatorFactoryBase:transformationPointZ:set" name="transformationPointZ" object="[fl.motion.AnimatorFactoryBase]" playername="" text=".transformationPointZ" tiptext="The z-coordinate point of reference for rotating or scaling a display object." version=""/>
               <string helpurl="fl.motion:AnimatorFactoryBase:transformationPoint:set" name="transformationPoint" object="[fl.motion.AnimatorFactoryBase]" playername="" text=".transformationPoint" tiptext="The point of reference for rotating or scaling a display object." version=""/>
            </folder>
         </folder>
         <folder asAncestors="fl.motion:AnimatorFactoryBase,Object" helpurl="fl.motion:AnimatorFactoryUniversal" id="[fl.motion.AnimatorFactoryUniversal]" index="true" name="AnimatorFactoryUniversal" sort="true" tiptext="The AnimatorFactoryUniversal class provides ActionScript-based support to associate one Motion object with multiple display objects.">
            <folder helpurl="fl.motion:AnimatorFactoryUniversal" id="Methods" name="Methods" tiptext="Methods for class AnimatorFactoryUniversal">
               <string constructor="true" helpurl="fl.motion:AnimatorFactoryUniversal:AnimatorFactoryUniversal" name="AnimatorFactoryUniversal" object="[fl.motion.AnimatorFactoryUniversal]" playername="" text="new AnimatorFactoryUniversal(%motion:fl.motion:MotionBase,motionArray:Array%)" tiptext="Creates an AnimatorFactory instance you can use to assign the properties of a MotionBase object to display objects." version="1.0"/>
            </folder>
         </folder>
         <folder asAncestors="fl.motion:Animator3D,fl.motion:AnimatorBase,flash.events:EventDispatcher,Object" helpurl="fl.motion:AnimatorUniversal" id="[fl.motion.AnimatorUniversal]" index="true" name="AnimatorUniversal" sort="true" tiptext="The AnimatorUniversal class applies an ActionScript description of a two and three-dimensional motion to a display object.">
            <folder helpurl="fl.motion:AnimatorUniversal" id="Methods" name="Methods" tiptext="Methods for class AnimatorUniversal">
               <string constructor="true" helpurl="fl.motion:AnimatorUniversal:AnimatorUniversal" name="AnimatorUniversal" object="[fl.motion.AnimatorUniversal]" playername="" text="new AnimatorUniversal(%%)" tiptext="Creates an AnimatorUniversal object motion to a display object." version="1.0"/>
               <string helpurl="fl.motion:AnimatorUniversal:setTargetState" name="setTargetState" object="[fl.motion.AnimatorUniversal]" playername="" text=".setTargetState(%%):void" tiptext="" version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="fl.motion:BezierEase" id="[fl.motion.BezierEase]" index="true" name="BezierEase" sort="true" tiptext="The BezierEase class provides precise easing control for a motion tween between two keyframes.">
            <folder helpurl="fl.motion:BezierEase" id="Methods" name="Methods" tiptext="Methods for class BezierEase">
               <string constructor="true" helpurl="fl.motion:BezierEase:BezierEase" name="BezierEase" object="[fl.motion.BezierEase]" playername="" text="new BezierEase(%[xml:XML=null]%)" tiptext="Constructor for BezierEase instances." version="1.0"/>
               <string helpurl="fl.motion:BezierEase:getValue" name="getValue" object="[fl.motion.BezierEase]" playername="" text=".getValue(%time:Number,begin:Number,change:Number,duration:Number%):Number" tiptext="Calculates an interpolated value for a numerical property of animation, using a Bezier easing curve." version="1.0"/>
            </folder>
            <folder helpurl="fl.motion:BezierEase" id="Properties" name="Properties" tiptext="Properties for class BezierEase">
               <string helpurl="fl.motion:BezierEase:points" name="points" object="[fl.motion.BezierEase]" playername="" text=".points" tiptext="An ordered collection of points in the custom easing curve." version=""/>
               <string helpurl="fl.motion:BezierEase:target:get" name="target" object="[fl.motion.BezierEase]" playername="" text=".target" tiptext="The name of the animation property to target." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="fl.motion:BezierSegment" id="[fl.motion.BezierSegment]" index="true" name="BezierSegment" sort="true" tiptext="A Bezier segment consists of four Point objects that define a single cubic Bezier curve.">
            <folder helpurl="fl.motion:BezierSegment" id="Methods" name="Methods" tiptext="Methods for class BezierSegment">
               <string constructor="true" helpurl="fl.motion:BezierSegment:BezierSegment" name="BezierSegment" object="[fl.motion.BezierSegment]" playername="" text="new BezierSegment(%a:flash.geom:Point,b:flash.geom:Point,c:flash.geom:Point,d:flash.geom:Point%)" tiptext="Constructor for BezierSegment instances." version="1.0"/>
               <string helpurl="fl.motion:BezierSegment:getCubicCoefficients" name="getCubicCoefficients" object="[fl.motion.BezierSegment]" playername="" static="true" text="BezierSegment.getCubicCoefficients(%a:Number,b:Number,c:Number,d:Number%):Array" tiptext="Calculates the coefficients for a cubic polynomial equation, given the values of the corresponding cubic Bezier equation." version="1.0"/>
               <string helpurl="fl.motion:BezierSegment:getCubicRoots" name="getCubicRoots" object="[fl.motion.BezierSegment]" playername="" static="true" text="BezierSegment.getCubicRoots(%[a:Number=0,b:Number=0,c:Number=0,d:Number=0]%):Array" tiptext="Finds the real solutions, if they exist, to a cubic polynomial equation of the form: at^3 + bt^2 + ct + d." version="1.0"/>
               <string helpurl="fl.motion:BezierSegment:getQuadraticRoots" name="getQuadraticRoots" object="[fl.motion.BezierSegment]" playername="" static="true" text="BezierSegment.getQuadraticRoots(%a:Number,b:Number,c:Number%):Array" tiptext="Finds the real solutions, if they exist, to a quadratic equation of the form: at^2 + bt + c." version="1.0"/>
               <string helpurl="fl.motion:BezierSegment:getSingleValue" name="getSingleValue" object="[fl.motion.BezierSegment]" playername="" static="true" text="BezierSegment.getSingleValue(%t:Number[,a:Number=0,b:Number=0,c:Number=0,d:Number=0]%):Number" tiptext="Calculates the value of a one-dimensional cubic Bezier equation at a specific time." version="1.0"/>
               <string helpurl="fl.motion:BezierSegment:getValue" name="getValue" object="[fl.motion.BezierSegment]" playername="" text=".getValue(%t:Number%):flash.geom:Point" tiptext="Calculates the location of a two-dimensional cubic Bezier curve at a specific time." version="1.0"/>
               <string helpurl="fl.motion:BezierSegment:getYForX" name="getYForX" object="[fl.motion.BezierSegment]" playername="" text=".getYForX(%x:Number[,coefficients:Array=null]%):Number" tiptext="Finds the y value of a cubic Bezier curve at a given x coordinate." version="1.0"/>
            </folder>
            <folder helpurl="fl.motion:BezierSegment" id="Properties" name="Properties" tiptext="Properties for class BezierSegment">
               <string helpurl="fl.motion:BezierSegment:a" name="a" object="[fl.motion.BezierSegment]" playername="" text=".a" tiptext="The first point of the Bezier curve." version=""/>
               <string helpurl="fl.motion:BezierSegment:b" name="b" object="[fl.motion.BezierSegment]" playername="" text=".b" tiptext="The second point of the Bezier curve." version=""/>
               <string helpurl="fl.motion:BezierSegment:c" name="c" object="[fl.motion.BezierSegment]" playername="" text=".c" tiptext="The third point of the Bezier curve." version=""/>
               <string helpurl="fl.motion:BezierSegment:d" name="d" object="[fl.motion.BezierSegment]" playername="" text=".d" tiptext="The fourth point of the Bezier curve." version=""/>
            </folder>
         </folder>
         <folder asAncestors="flash.geom:ColorTransform,Object" helpurl="fl.motion:Color" id="[fl.motion.Color]" index="true" name="Color" sort="true" tiptext="The Color class extends the Flash Player ColorTransform class, adding the ability to control brightness and tint.">
            <folder helpurl="fl.motion:Color" id="Methods" name="Methods" tiptext="Methods for class Color">
               <string constructor="true" helpurl="fl.motion:Color:Color" name="Color" object="[fl.motion.Color]" playername="" text="new Color(%[redMultiplier:Number=1.0,greenMultiplier:Number=1.0,blueMultiplier:Number=1.0,alphaMultiplier:Number=1.0,redOffset:Number=0,greenOffset:Number=0,blueOffset:Number=0,alphaOffset:Number=0]%)" tiptext="Constructor for Color instances." version="1.0"/>
               <string helpurl="fl.motion:Color:fromXML" name="fromXML" object="[fl.motion.Color]" playername="" static="true" text="Color.fromXML(%xml:XML%):fl.motion:Color" tiptext="Creates a Color instance from XML." version="1.0"/>
               <string helpurl="fl.motion:Color:interpolateColor" name="interpolateColor" object="[fl.motion.Color]" playername="" static="true" text="Color.interpolateColor(%fromColor:uint,toColor:uint,progress:Number%):uint" tiptext="Blends smoothly from one color value to another." version="1.0"/>
               <string helpurl="fl.motion:Color:interpolateTransform" name="interpolateTransform" object="[fl.motion.Color]" playername="" static="true" text="Color.interpolateTransform(%fromColor:flash.geom:ColorTransform,toColor:flash.geom:ColorTransform,progress:Number%):flash.geom:ColorTransform" tiptext="Blends smoothly from one ColorTransform object to another." version="1.0"/>
               <string helpurl="fl.motion:Color:setTint" name="setTint" object="[fl.motion.Color]" playername="" text=".setTint(%tintColor:uint,tintMultiplier:Number%):void" tiptext="Sets the tint color and amount at the same time." version="1.0"/>
            </folder>
            <folder helpurl="fl.motion:Color" id="Properties" name="Properties" tiptext="Properties for class Color">
               <string helpurl="fl.motion:Color:brightness:get" name="brightness" object="[fl.motion.Color]" playername="" text=".brightness" tiptext="The percentage of brightness, as a decimal between -1 and 1." version=""/>
               <string helpurl="fl.motion:Color:tintColor:get" name="tintColor" object="[fl.motion.Color]" playername="" text=".tintColor" tiptext="The tinting color value in the 0xRRGGBB format." version=""/>
               <string helpurl="fl.motion:Color:tintMultiplier:get" name="tintMultiplier" object="[fl.motion.Color]" playername="" text=".tintMultiplier" tiptext="The percentage to apply the tint color, as a decimal value between 0 and 1." version=""/>
            </folder>
         </folder>
         <folder asAncestors="fl.motion:DynamicMatrix,Object" helpurl="fl.motion:ColorMatrix" id="[fl.motion.ColorMatrix]" index="true" name="ColorMatrix" sort="true" tiptext="The ColorMatrix class calculates and stores color matrixes based on given values.">
            <folder helpurl="fl.motion:ColorMatrix" id="Methods" name="Methods" tiptext="Methods for class ColorMatrix">
               <string constructor="true" helpurl="fl.motion:ColorMatrix:ColorMatrix" name="ColorMatrix" object="[fl.motion.ColorMatrix]" playername="" text="new ColorMatrix(%%)" tiptext="Calculates and stores color matrixes based on given values." version="1.0"/>
               <string helpurl="fl.motion:ColorMatrix:GetFlatArray" name="GetFlatArray" object="[fl.motion.ColorMatrix]" playername="" text=".GetFlatArray(%%):Array" tiptext="Calculates and returns a flat array of 20 numerical values representing the four matrixes set in this object." version="1.0"/>
               <string helpurl="fl.motion:ColorMatrix:SetBrightnessMatrix" name="SetBrightnessMatrix" object="[fl.motion.ColorMatrix]" playername="" text=".SetBrightnessMatrix(%value:Number%):void" tiptext="Calculates and stores a brightness matrix based on the given value." version="1.0"/>
               <string helpurl="fl.motion:ColorMatrix:SetContrastMatrix" name="SetContrastMatrix" object="[fl.motion.ColorMatrix]" playername="" text=".SetContrastMatrix(%value:Number%):void" tiptext="Calculates and stores a contrast matrix based on the given value." version="1.0"/>
               <string helpurl="fl.motion:ColorMatrix:SetHueMatrix" name="SetHueMatrix" object="[fl.motion.ColorMatrix]" playername="" text=".SetHueMatrix(%angle:Number%):void" tiptext="Calculates and stores a hue matrix based on the given value." version="1.0"/>
               <string helpurl="fl.motion:ColorMatrix:SetSaturationMatrix" name="SetSaturationMatrix" object="[fl.motion.ColorMatrix]" playername="" text=".SetSaturationMatrix(%value:Number%):void" tiptext="Calculates and stores a saturation matrix based on the given value." version="1.0"/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="fl.motion:CustomEase" id="[fl.motion.CustomEase]" index="true" name="CustomEase" sort="true" tiptext="The CustomEase class is used to modify specific properties of the easing behavior of a motion tween as the tween progresses over time.">
            <folder helpurl="fl.motion:CustomEase" id="Methods" name="Methods" tiptext="Methods for class CustomEase">
               <string constructor="true" helpurl="fl.motion:CustomEase:CustomEase" name="CustomEase" object="[fl.motion.CustomEase]" playername="" text="new CustomEase(%[xml:XML=null]%)" tiptext="Constructor for CustomEase instances." version="1.0"/>
               <string helpurl="fl.motion:CustomEase:getValue" name="getValue" object="[fl.motion.CustomEase]" playername="" text=".getValue(%time:Number,begin:Number,change:Number,duration:Number%):Number" tiptext="Calculates an interpolated value for a numerical property of animation, using a custom easing curve." version="1.0"/>
            </folder>
            <folder helpurl="fl.motion:CustomEase" id="Properties" name="Properties" tiptext="Properties for class CustomEase">
               <string helpurl="fl.motion:CustomEase:points" name="points" object="[fl.motion.CustomEase]" playername="" text=".points" tiptext="An ordered collection of points in the custom easing curve." version=""/>
               <string helpurl="fl.motion:CustomEase:target:get" name="target" object="[fl.motion.CustomEase]" playername="" text=".target" tiptext="The name of the animation property to target." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="fl.motion:DynamicMatrix" id="[fl.motion.DynamicMatrix]" index="true" name="DynamicMatrix" sort="true" tiptext="The DynamicMatrix class calculates and stores a matrix based on given values.">
            <folder helpurl="fl.motion:DynamicMatrix" id="Methods" name="Methods" tiptext="Methods for class DynamicMatrix">
               <string constructor="true" helpurl="fl.motion:DynamicMatrix:DynamicMatrix" name="DynamicMatrix" object="[fl.motion.DynamicMatrix]" playername="" text="new DynamicMatrix(%width:int,height:int%)" tiptext="Constructs a matrix with the given number of rows and columns." version="1.0"/>
               <string helpurl="fl.motion:DynamicMatrix:Add" name="Add" object="[fl.motion.DynamicMatrix]" playername="" text=".Add(%inMatrix:fl.motion:DynamicMatrix%):Boolean" tiptext="Adds the current matrix with a specified matrix." version="1.0"/>
               <string helpurl="fl.motion:DynamicMatrix:GetHeight" name="GetHeight" object="[fl.motion.DynamicMatrix]" playername="" text=".GetHeight(%%):Number" tiptext="Returns the number of rows in the current matrix." version="1.0"/>
               <string helpurl="fl.motion:DynamicMatrix:GetValue" name="GetValue" object="[fl.motion.DynamicMatrix]" playername="" text=".GetValue(%row:int,col:int%):Number" tiptext="Returns the value at the specified zero-based row and column in the current matrix." version="1.0"/>
               <string helpurl="fl.motion:DynamicMatrix:GetWidth" name="GetWidth" object="[fl.motion.DynamicMatrix]" playername="" text=".GetWidth(%%):Number" tiptext="Returns the number of columns in the current matrix." version="1.0"/>
               <string helpurl="fl.motion:DynamicMatrix:LoadIdentity" name="LoadIdentity" object="[fl.motion.DynamicMatrix]" playername="" text=".LoadIdentity(%%):void" tiptext="Sets the current matrix to an identity matrix." version="1.0"/>
               <string helpurl="fl.motion:DynamicMatrix:LoadZeros" name="LoadZeros" object="[fl.motion.DynamicMatrix]" playername="" text=".LoadZeros(%%):void" tiptext="Sets all values in the current matrix to zero." version="1.0"/>
               <string helpurl="fl.motion:DynamicMatrix:MultiplyNumber" name="MultiplyNumber" object="[fl.motion.DynamicMatrix]" playername="" text=".MultiplyNumber(%value:Number%):Boolean" tiptext="Multiplies a number with each item in the matrix and stores the results in the current matrix." version="1.0"/>
               <string helpurl="fl.motion:DynamicMatrix:Multiply" name="Multiply" object="[fl.motion.DynamicMatrix]" playername="" text=".Multiply(%inMatrix:fl.motion:DynamicMatrix[,order:int=unknown]%):Boolean" tiptext="Multiplies the current matrix with a specified matrix; and either appends or prepends the specified matrix." version="1.0"/>
               <string helpurl="fl.motion:DynamicMatrix:SetValue" name="SetValue" object="[fl.motion.DynamicMatrix]" playername="" text=".SetValue(%row:int,col:int,value:Number%):void" tiptext="Sets the value at a specified zero-based row and column in the current matrix." version="1.0"/>
            </folder>
            <folder helpurl="fl.motion:DynamicMatrix" id="Properties" name="Properties" tiptext="Properties for class DynamicMatrix">
               <string constant="true" helpurl="fl.motion:DynamicMatrix:MATRIX_ORDER_APPEND" name="MATRIX_ORDER_APPEND" object="[fl.motion.DynamicMatrix]" playername="" text="DynamicMatrix.MATRIX_ORDER_APPEND" tiptext="Specifies that a matrix is appended for concatenation." version=""/>
               <string constant="true" helpurl="fl.motion:DynamicMatrix:MATRIX_ORDER_PREPEND" name="MATRIX_ORDER_PREPEND" object="[fl.motion.DynamicMatrix]" playername="" text="DynamicMatrix.MATRIX_ORDER_PREPEND" tiptext="Specifies that a matrix is prepended for concatenation." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="fl.motion:FunctionEase" id="[fl.motion.FunctionEase]" index="true" name="FunctionEase" sort="true" tiptext="The FunctionEase class allows custom interpolation functions to be used with the fl.motion framework in place of other interpolations like SimpleEase and CustomEase.">
            <folder helpurl="fl.motion:FunctionEase" id="Methods" name="Methods" tiptext="Methods for class FunctionEase">
               <string constructor="true" helpurl="fl.motion:FunctionEase:FunctionEase" name="FunctionEase" object="[fl.motion.FunctionEase]" playername="" text="new FunctionEase(%[xml:XML=null]%)" tiptext="Constructor for FunctionEase instances." version="1.0"/>
               <string helpurl="fl.motion:FunctionEase:getValue" name="getValue" object="[fl.motion.FunctionEase]" playername="" text=".getValue(%time:Number,begin:Number,change:Number,duration:Number%):Number" tiptext="Calculates an interpolated value for a numerical property of animation, using the specified easing function." version="1.0"/>
            </folder>
            <folder helpurl="fl.motion:FunctionEase" id="Properties" name="Properties" tiptext="Properties for class FunctionEase">
               <string helpurl="fl.motion:FunctionEase:easingFunction" name="easingFunction" object="[fl.motion.FunctionEase]" playername="" text=".easingFunction" tiptext="A reference to a function with a (t, b, c, d) signature like the methods in the fl.motion.easing classes." version=""/>
               <string helpurl="fl.motion:FunctionEase:parameters" name="parameters" object="[fl.motion.FunctionEase]" playername="" text=".parameters" tiptext="An optional array of values to be passed to the easing function as additional arguments." version=""/>
               <string helpurl="fl.motion:FunctionEase:functionName:get" name="functionName" object="[fl.motion.FunctionEase]" playername="" text=".functionName" tiptext="The fully qualified name of an easing function, such as fl.motion.easing.Bounce.easeOut()." version=""/>
               <string helpurl="fl.motion:FunctionEase:target:get" name="target" object="[fl.motion.FunctionEase]" playername="" text=".target" tiptext="The name of the animation property to target." version=""/>
            </folder>
         </folder>
         <folder helpurl="fl.motion:ITween" id="[fl.motion.ITween]" index="true" name="ITween" sort="true" tiptext="The ITween interface defines the application programming interface (API) that interpolation classes implement in order to work with the fl.motion classes.">
            <folder helpurl="fl.motion:ITween" id="Methods" name="Methods" tiptext="Methods for class ITween">
               <string helpurl="fl.motion:ITween:getValue" name="getValue" object="[fl.motion.ITween]" playername="" text=".getValue(%time:Number,begin:Number,change:Number,duration:Number%):Number" tiptext="Calculates an interpolated value for a numerical property of animation." version="1.0"/>
            </folder>
            <folder helpurl="fl.motion:ITween" id="Properties" name="Properties" tiptext="Properties for class ITween">
               <string helpurl="fl.motion:ITween:target:get" name="target" object="[fl.motion.ITween]" playername="" text=".target" tiptext="The name of the animation property to target." version=""/>
            </folder>
         </folder>
         <folder asAncestors="fl.motion:KeyframeBase,Object" helpurl="fl.motion:Keyframe" id="[fl.motion.Keyframe]" index="true" name="Keyframe" sort="true" tiptext="The Keyframe class defines the visual state at a specific time in a motion tween.">
            <folder helpurl="fl.motion:Keyframe" id="Methods" name="Methods" tiptext="Methods for class Keyframe">
               <string constructor="true" helpurl="fl.motion:Keyframe:Keyframe" name="Keyframe" object="[fl.motion.Keyframe]" playername="" text="new Keyframe(%[xml:XML=null]%)" tiptext="Constructor for keyframe instances." version="1.0"/>
               <string helpurl="fl.motion:Keyframe:getTween" name="getTween" object="[fl.motion.Keyframe]" playername="" text=".getTween(%target:String%):fl.motion:ITween" tiptext="Retrieves an ITween object for a specific animation property." version="1.0"/>
            </folder>
            <folder helpurl="fl.motion:Keyframe" id="Properties" name="Properties" tiptext="Properties for class Keyframe">
               <string helpurl="fl.motion:Keyframe:tweenScale" name="tweenScale" object="[fl.motion.Keyframe]" playername="" text=".tweenScale" tiptext="A flag that controls whether scale will be interpolated during a tween." version=""/>
               <string helpurl="fl.motion:Keyframe:tweenSnap" name="tweenSnap" object="[fl.motion.Keyframe]" playername="" text=".tweenSnap" tiptext="Stores the value of the Snap checkbox for motion tweens, which snaps the object to a motion guide." version=""/>
               <string helpurl="fl.motion:Keyframe:tweenSync" name="tweenSync" object="[fl.motion.Keyframe]" playername="" text=".tweenSync" tiptext="Stores the value of the Sync checkbox for motion tweens, which affects graphic symbols only." version=""/>
               <string helpurl="fl.motion:Keyframe:tweens" name="tweens" object="[fl.motion.Keyframe]" playername="" text=".tweens" tiptext="An array that contains each tween object to be applied to the target object at a particular keyframe." version=""/>
               <string helpurl="fl.motion:Keyframe:tweensLength:get" name="tweensLength" object="[fl.motion.Keyframe]" playername="" text=".tweensLength" tiptext="The number of frames for the tween." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="fl.motion:KeyframeBase" id="[fl.motion.KeyframeBase]" index="true" name="KeyframeBase" sort="true" tiptext="The KeyframeBase class defines the visual state at a specific time in a motion tween.">
            <folder helpurl="fl.motion:KeyframeBase" id="Methods" name="Methods" tiptext="Methods for class KeyframeBase">
               <string constructor="true" helpurl="fl.motion:KeyframeBase:KeyframeBase" name="KeyframeBase" object="[fl.motion.KeyframeBase]" playername="" text="new KeyframeBase(%[xml:XML=null]%)" tiptext="Constructor for keyframe instances." version="1.0"/>
               <string helpurl="fl.motion:KeyframeBase:affectsTweenable" name="affectsTweenable" object="[fl.motion.KeyframeBase]" playername="" text=".affectsTweenable(%tweenableName:String%):Boolean" tiptext="Indicates whether the keyframe has an influence on a specific animation property." version="1.0"/>
               <string helpurl="fl.motion:KeyframeBase:getValue" name="getValue" object="[fl.motion.KeyframeBase]" playername="" text=".getValue(%tweenableName:String%):Number" tiptext="Retrieves the value of a specific tweenable property on the keyframe." version="1.0"/>
               <string helpurl="fl.motion:KeyframeBase:setAdjustColorProperty" name="setAdjustColorProperty" object="[fl.motion.KeyframeBase]" playername="" text=".setAdjustColorProperty(%filterIndex:int,propertyName:String,value:*%):void" tiptext="Sets one of the four AdjustColor properties to the AdjustColor object for the given filter index." version="1.0"/>
               <string helpurl="fl.motion:KeyframeBase:setValue" name="setValue" object="[fl.motion.KeyframeBase]" playername="" text=".setValue(%tweenableName:String,newValue:Number%):void" tiptext="Changes the value of a specific tweenable property on the keyframe." version="1.0"/>
            </folder>
            <folder helpurl="fl.motion:KeyframeBase" id="Properties" name="Properties" tiptext="Properties for class KeyframeBase">
               <string helpurl="fl.motion:KeyframeBase:adjustColorObjects" name="adjustColorObjects" object="[fl.motion.KeyframeBase]" playername="" text=".adjustColorObjects" tiptext="Stores AdjustColor instances mapped to their corresponding index in the filters Array for this keyframe." version=""/>
               <string helpurl="fl.motion:KeyframeBase:blank" name="blank" object="[fl.motion.KeyframeBase]" playername="" text=".blank" tiptext="Indicates that the target object should not be displayed on this keyframe." version=""/>
               <string helpurl="fl.motion:KeyframeBase:blendMode" name="blendMode" object="[fl.motion.KeyframeBase]" playername="" text=".blendMode" tiptext="A value from the BlendMode class that specifies how Flash Player mixes the display object's colors with graphics underneath it." version=""/>
               <string helpurl="fl.motion:KeyframeBase:cacheAsBitmap" name="cacheAsBitmap" object="[fl.motion.KeyframeBase]" playername="" text=".cacheAsBitmap" tiptext="If set to true, Flash Player caches an internal bitmap representation of the display object." version=""/>
               <string helpurl="fl.motion:KeyframeBase:color" name="color" object="[fl.motion.KeyframeBase]" playername="" text=".color" tiptext="A color object that adjusts the color transform in the target object." version=""/>
               <string helpurl="fl.motion:KeyframeBase:filters" name="filters" object="[fl.motion.KeyframeBase]" playername="" text=".filters" tiptext="An array that contains each filter object to be applied to the target object at a particular keyframe." version=""/>
               <string helpurl="fl.motion:KeyframeBase:firstFrame" name="firstFrame" object="[fl.motion.KeyframeBase]" playername="" text=".firstFrame" tiptext="Stores the name of the first frame for motion tweens, which affects graphic symbols only." version=""/>
               <string helpurl="fl.motion:KeyframeBase:label" name="label" object="[fl.motion.KeyframeBase]" playername="" text=".label" tiptext="A string used to describe the keyframe." version=""/>
               <string helpurl="fl.motion:KeyframeBase:loop" name="loop" object="[fl.motion.KeyframeBase]" playername="" text=".loop" tiptext="Stores the value of the Loop checkbox for motion tweens, which affects graphic symbols only." version=""/>
               <string helpurl="fl.motion:KeyframeBase:matrix3D" name="matrix3D" object="[fl.motion.KeyframeBase]" playername="" text=".matrix3D" tiptext="Stores matrix3d property if one exists for this keyframe." version=""/>
               <string helpurl="fl.motion:KeyframeBase:matrix" name="matrix" object="[fl.motion.KeyframeBase]" playername="" text=".matrix" tiptext="Stores matrix property if one exists for this keyframe." version=""/>
               <string helpurl="fl.motion:KeyframeBase:orientToPath" name="orientToPath" object="[fl.motion.KeyframeBase]" playername="" text=".orientToPath" tiptext="If set to true, this property causes the target object to rotate automatically to follow the angle of its path." version=""/>
               <string helpurl="fl.motion:KeyframeBase:rotateDirection" name="rotateDirection" object="[fl.motion.KeyframeBase]" playername="" text=".rotateDirection" tiptext="Controls how the target object rotates during a motion tween, with a value from the RotateDirection class." version=""/>
               <string helpurl="fl.motion:KeyframeBase:rotateTimes" name="rotateTimes" object="[fl.motion.KeyframeBase]" playername="" text=".rotateTimes" tiptext="Adds rotation to the target object during a motion tween, in addition to any existing rotation." version=""/>
               <string helpurl="fl.motion:KeyframeBase:rotationConcat" name="rotationConcat" object="[fl.motion.KeyframeBase]" playername="" text=".rotationConcat" tiptext="The rotation (z-axis) values of the target object in the motion relative to previous orientation as applied from the transformation point, as opposed to absolute rotation values, and separate from skewY values." version=""/>
               <string helpurl="fl.motion:KeyframeBase:rotationX" name="rotationX" object="[fl.motion.KeyframeBase]" playername="" text=".rotationX" tiptext="Stores rotationX property for this keyframe." version=""/>
               <string helpurl="fl.motion:KeyframeBase:rotationY" name="rotationY" object="[fl.motion.KeyframeBase]" playername="" text=".rotationY" tiptext="Stores rotationY property for this keyframe." version=""/>
               <string helpurl="fl.motion:KeyframeBase:scaleX" name="scaleX" object="[fl.motion.KeyframeBase]" playername="" text=".scaleX" tiptext="Indicates the horizontal scale as a percentage of the object as applied from the transformation point." version=""/>
               <string helpurl="fl.motion:KeyframeBase:scaleY" name="scaleY" object="[fl.motion.KeyframeBase]" playername="" text=".scaleY" tiptext="Indicates the vertical scale as a percentage of the object as applied from the transformation point." version=""/>
               <string helpurl="fl.motion:KeyframeBase:skewX" name="skewX" object="[fl.motion.KeyframeBase]" playername="" text=".skewX" tiptext="Indicates the horizontal skew angle of the target object in degrees as applied from the transformation point." version=""/>
               <string helpurl="fl.motion:KeyframeBase:skewY" name="skewY" object="[fl.motion.KeyframeBase]" playername="" text=".skewY" tiptext="Indicates the vertical skew angle of the target object in degrees as applied from the transformation point." version=""/>
               <string helpurl="fl.motion:KeyframeBase:useRotationConcat" name="useRotationConcat" object="[fl.motion.KeyframeBase]" playername="" text=".useRotationConcat" tiptext="If set to true, this property causes the target object to rotate when data for motion is supplied by addpropertyarray." version=""/>
               <string helpurl="fl.motion:KeyframeBase:x" name="x" object="[fl.motion.KeyframeBase]" playername="" text=".x" tiptext="The horizontal position of the target object's transformation point in its parent's coordinate space." version=""/>
               <string helpurl="fl.motion:KeyframeBase:y" name="y" object="[fl.motion.KeyframeBase]" playername="" text=".y" tiptext="The vertical position of the target object's transformation point in its parent's coordinate space." version=""/>
               <string helpurl="fl.motion:KeyframeBase:z" name="z" object="[fl.motion.KeyframeBase]" playername="" text=".z" tiptext="The depth (z-axis) position of the target object's transformation point in its parent's coordinate space." version=""/>
               <string helpurl="fl.motion:KeyframeBase:index:get" name="index" object="[fl.motion.KeyframeBase]" playername="" text=".index" tiptext="The keyframe's unique time value in the motion tween." version=""/>
               <string helpurl="fl.motion:KeyframeBase:rotation:get" name="rotation" object="[fl.motion.KeyframeBase]" playername="" text=".rotation" tiptext="Indicates the rotation of the target object in degrees from its original orientation as applied from the transformation point." version=""/>
               <string helpurl="fl.motion:KeyframeBase:tweensLength:get" name="tweensLength" object="[fl.motion.KeyframeBase]" playername="" text=".tweensLength" tiptext="The number of frames for the tween." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="fl.motion:MatrixTransformer" id="[fl.motion.MatrixTransformer]" index="true" name="MatrixTransformer" sort="true" tiptext="The MatrixTransformer class contains methods for modifying individual properties of a transformation matrix: horizontal and vertical scale, horizontal and vertical skew, and rotation.">
            <folder helpurl="fl.motion:MatrixTransformer" id="Methods" name="Methods" tiptext="Methods for class MatrixTransformer">
               <string helpurl="fl.motion:MatrixTransformer:getRotationRadians" name="getRotationRadians" object="[fl.motion.MatrixTransformer]" playername="" static="true" text="MatrixTransformer.getRotationRadians(%m:flash.geom:Matrix%):Number" tiptext="Calculates the angle of rotation present in a matrix, in radians." version="1.0"/>
               <string helpurl="fl.motion:MatrixTransformer:getRotation" name="getRotation" object="[fl.motion.MatrixTransformer]" playername="" static="true" text="MatrixTransformer.getRotation(%m:flash.geom:Matrix%):Number" tiptext="Calculates the angle of rotation present in a matrix, in degrees." version="1.0"/>
               <string helpurl="fl.motion:MatrixTransformer:getScaleX" name="getScaleX" object="[fl.motion.MatrixTransformer]" playername="" static="true" text="MatrixTransformer.getScaleX(%m:flash.geom:Matrix%):Number" tiptext="Calculates the horizontal scale present in a matrix." version="1.0"/>
               <string helpurl="fl.motion:MatrixTransformer:getScaleY" name="getScaleY" object="[fl.motion.MatrixTransformer]" playername="" static="true" text="MatrixTransformer.getScaleY(%m:flash.geom:Matrix%):Number" tiptext="Calculates the vertical scale present in a matrix." version="1.0"/>
               <string helpurl="fl.motion:MatrixTransformer:getSkewXRadians" name="getSkewXRadians" object="[fl.motion.MatrixTransformer]" playername="" static="true" text="MatrixTransformer.getSkewXRadians(%m:flash.geom:Matrix%):Number" tiptext="Calculates the angle of horizontal skew present in a matrix, in radians." version="1.0"/>
               <string helpurl="fl.motion:MatrixTransformer:getSkewX" name="getSkewX" object="[fl.motion.MatrixTransformer]" playername="" static="true" text="MatrixTransformer.getSkewX(%m:flash.geom:Matrix%):Number" tiptext="Calculates the angle of horizontal skew present in a matrix, in degrees." version="1.0"/>
               <string helpurl="fl.motion:MatrixTransformer:getSkewYRadians" name="getSkewYRadians" object="[fl.motion.MatrixTransformer]" playername="" static="true" text="MatrixTransformer.getSkewYRadians(%m:flash.geom:Matrix%):Number" tiptext="Calculates the angle of vertical skew present in a matrix, in radians." version="1.0"/>
               <string helpurl="fl.motion:MatrixTransformer:getSkewY" name="getSkewY" object="[fl.motion.MatrixTransformer]" playername="" static="true" text="MatrixTransformer.getSkewY(%m:flash.geom:Matrix%):Number" tiptext="Calculates the angle of vertical skew present in a matrix, in degrees." version="1.0"/>
               <string helpurl="fl.motion:MatrixTransformer:matchInternalPointWithExternal" name="matchInternalPointWithExternal" object="[fl.motion.MatrixTransformer]" playername="" static="true" text="MatrixTransformer.matchInternalPointWithExternal(%m:flash.geom:Matrix,internalPoint:flash.geom:Point,externalPoint:flash.geom:Point%):void" tiptext="Moves a matrix as necessary to align an internal point with an external point." version="1.0"/>
               <string helpurl="fl.motion:MatrixTransformer:rotateAroundExternalPoint" name="rotateAroundExternalPoint" object="[fl.motion.MatrixTransformer]" playername="" static="true" text="MatrixTransformer.rotateAroundExternalPoint(%m:flash.geom:Matrix,x:Number,y:Number,angleDegrees:Number%):void" tiptext="Rotates a matrix about a point defined outside the matrix's transformation space." version="1.0"/>
               <string helpurl="fl.motion:MatrixTransformer:rotateAroundInternalPoint" name="rotateAroundInternalPoint" object="[fl.motion.MatrixTransformer]" playername="" static="true" text="MatrixTransformer.rotateAroundInternalPoint(%m:flash.geom:Matrix,x:Number,y:Number,angleDegrees:Number%):void" tiptext="Rotates a matrix about a point defined inside the matrix's transformation space." version="1.0"/>
               <string helpurl="fl.motion:MatrixTransformer:setRotationRadians" name="setRotationRadians" object="[fl.motion.MatrixTransformer]" playername="" static="true" text="MatrixTransformer.setRotationRadians(%m:flash.geom:Matrix,rotation:Number%):void" tiptext="Changes the angle of rotation in a matrix." version="1.0"/>
               <string helpurl="fl.motion:MatrixTransformer:setRotation" name="setRotation" object="[fl.motion.MatrixTransformer]" playername="" static="true" text="MatrixTransformer.setRotation(%m:flash.geom:Matrix,rotation:Number%):void" tiptext="Changes the angle of rotation in a matrix." version="1.0"/>
               <string helpurl="fl.motion:MatrixTransformer:setScaleX" name="setScaleX" object="[fl.motion.MatrixTransformer]" playername="" static="true" text="MatrixTransformer.setScaleX(%m:flash.geom:Matrix,scaleX:Number%):void" tiptext="Changes the horizontal scale in a matrix." version="1.0"/>
               <string helpurl="fl.motion:MatrixTransformer:setScaleY" name="setScaleY" object="[fl.motion.MatrixTransformer]" playername="" static="true" text="MatrixTransformer.setScaleY(%m:flash.geom:Matrix,scaleY:Number%):void" tiptext="Changes the vertical scale in a matrix." version="1.0"/>
               <string helpurl="fl.motion:MatrixTransformer:setSkewXRadians" name="setSkewXRadians" object="[fl.motion.MatrixTransformer]" playername="" static="true" text="MatrixTransformer.setSkewXRadians(%m:flash.geom:Matrix,skewX:Number%):void" tiptext="Changes the horizontal skew in a matrix." version="1.0"/>
               <string helpurl="fl.motion:MatrixTransformer:setSkewX" name="setSkewX" object="[fl.motion.MatrixTransformer]" playername="" static="true" text="MatrixTransformer.setSkewX(%m:flash.geom:Matrix,skewX:Number%):void" tiptext="Changes the horizontal skew in a matrix." version="1.0"/>
               <string helpurl="fl.motion:MatrixTransformer:setSkewYRadians" name="setSkewYRadians" object="[fl.motion.MatrixTransformer]" playername="" static="true" text="MatrixTransformer.setSkewYRadians(%m:flash.geom:Matrix,skewY:Number%):void" tiptext="Changes the vertical skew in a matrix." version="1.0"/>
               <string helpurl="fl.motion:MatrixTransformer:setSkewY" name="setSkewY" object="[fl.motion.MatrixTransformer]" playername="" static="true" text="MatrixTransformer.setSkewY(%m:flash.geom:Matrix,skewY:Number%):void" tiptext="Changes the vertical skew in a matrix." version="1.0"/>
            </folder>
         </folder>
         <folder asAncestors="fl.motion:MotionBase,Object" helpurl="fl.motion:Motion" id="[fl.motion.Motion]" index="true" name="Motion" sort="true" tiptext="The Motion class stores a keyframe animation sequence that can be applied to a visual object.">
            <folder helpurl="fl.motion:Motion" id="Methods" name="Methods" tiptext="Methods for class Motion">
               <string constructor="true" helpurl="fl.motion:Motion:Motion" name="Motion" object="[fl.motion.Motion]" playername="" text="new Motion(%[xml:XML=null]%)" tiptext="Constructor for Motion instances." version="1.0"/>
               <string helpurl="fl.motion:Motion:fromXMLString" name="fromXMLString" object="[fl.motion.Motion]" playername="" static="true" text="Motion.fromXMLString(%xmlString:String%):fl.motion:Motion" tiptext="A method needed to create a Motion instance from a string of XML." version="1.0"/>
               <string helpurl="fl.motion:Motion:getColorTransform" name="getColorTransform" object="[fl.motion.Motion]" playername="" text=".getColorTransform(%index:int%):flash.geom:ColorTransform" tiptext="Retrieves an interpolated ColorTransform object at a specific time index in the Motion instance." version="1.0"/>
               <string helpurl="fl.motion:Motion:getFilters" name="getFilters" object="[fl.motion.Motion]" playername="" text=".getFilters(%index:Number%):Array" tiptext="Retrieves an interpolated array of filters at a specific time index in the Motion instance." version="1.0"/>
               <string helpurl="fl.motion:Motion:interpolateFilters" name="interpolateFilters" object="[fl.motion.Motion]" playername="" static="true" text="Motion.interpolateFilters(%fromFilters:Array,toFilters:Array,progress:Number%):Array" tiptext="Blends filters smoothly from one array of filter objects to another." version="1.0"/>
               <string helpurl="fl.motion:Motion:interpolateFilter" name="interpolateFilter" object="[fl.motion.Motion]" playername="" static="true" text="Motion.interpolateFilter(%fromFilter:flash.filters:BitmapFilter,toFilter:flash.filters:BitmapFilter,progress:Number%):flash.filters:BitmapFilter" tiptext="Blends filters smoothly from one filter object to another." version="1.0"/>
            </folder>
            <folder helpurl="fl.motion:Motion" id="Properties" name="Properties" tiptext="Properties for class Motion">
               <string helpurl="fl.motion:Motion:source" name="source" object="[fl.motion.Motion]" playername="" text=".source" tiptext="An object that stores information about the context in which the motion was created, such as frame rate, dimensions, transformation point, and initial position, scale, rotation, and skew." version=""/>
               <string helpurl="fl.motion:Motion:keyframesCompact:get" name="keyframesCompact" object="[fl.motion.Motion]" playername="" text=".keyframesCompact" tiptext="A compact array of keyframes, where each index is occupied by a keyframe." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="fl.motion:MotionBase" id="[fl.motion.MotionBase]" index="true" name="MotionBase" sort="true" tiptext="The MotionBase class stores a keyframe animation sequence that can be applied to a visual object.">
            <folder helpurl="fl.motion:MotionBase" id="Methods" name="Methods" tiptext="Methods for class MotionBase">
               <string constructor="true" helpurl="fl.motion:MotionBase:MotionBase" name="MotionBase" object="[fl.motion.MotionBase]" playername="" text="new MotionBase(%[xml:XML=null]%)" tiptext="Constructor for MotionBase instances." version="1.0"/>
               <string helpurl="fl.motion:MotionBase:addFilterPropertyArray" name="addFilterPropertyArray" object="[fl.motion.MotionBase]" playername="" text=".addFilterPropertyArray(%index:int,name:String,values:Array[,startFrame:int=-1,endFrame:int=-1]%):void" tiptext="Modifies a filter property in all corresponding keyframes for a Motion object." version="1.0"/>
               <string helpurl="fl.motion:MotionBase:addKeyframe" name="addKeyframe" object="[fl.motion.MotionBase]" playername="" text=".addKeyframe(%newKeyframe:fl.motion:KeyframeBase%):void" tiptext="Adds a keyframe object to the Motion instance." version="1.0"/>
               <string helpurl="fl.motion:MotionBase:addPropertyArray" name="addPropertyArray" object="[fl.motion.MotionBase]" playername="" text=".addPropertyArray(%name:String,values:Array[,startFrame:int=-1,endFrame:int=-1]%):void" tiptext="Stores an array of values in corresponding keyframes for a declared property of the Motion class." version="1.0"/>
               <string helpurl="fl.motion:MotionBase:getColorTransform" name="getColorTransform" object="[fl.motion.MotionBase]" playername="" text=".getColorTransform(%index:int%):flash.geom:ColorTransform" tiptext="Retrieves an interpolated ColorTransform object at a specific time index in the Motion instance." version="1.0"/>
               <string helpurl="fl.motion:MotionBase:getCurrentKeyframe" name="getCurrentKeyframe" object="[fl.motion.MotionBase]" playername="" text=".getCurrentKeyframe(%index:int,tweenableName:String%):fl.motion:KeyframeBase" tiptext="Retrieves the keyframe that is currently active at a specific frame in the Motion instance." version="1.0"/>
               <string helpurl="fl.motion:MotionBase:getFilters" name="getFilters" object="[fl.motion.MotionBase]" playername="" text=".getFilters(%index:Number%):Array" tiptext="Retrieves an interpolated array of filters at a specific time index in the Motion instance." version="1.0"/>
               <string helpurl="fl.motion:MotionBase:getMatrix3D" name="getMatrix3D" object="[fl.motion.MotionBase]" playername="" text=".getMatrix3D(%index:int%):Object" tiptext="Returns the Matrix3D object for the specified index position of the frame of animation." version="1.0"/>
               <string helpurl="fl.motion:MotionBase:getMatrix" name="getMatrix" object="[fl.motion.MotionBase]" playername="" text=".getMatrix(%index:int%):flash.geom:Matrix" tiptext="Returns the Matrix object for the specified index position of the frame of animation." version="1.0"/>
               <string helpurl="fl.motion:MotionBase:getNextKeyframe" name="getNextKeyframe" object="[fl.motion.MotionBase]" playername="" text=".getNextKeyframe(%index:int,tweenableName:String%):fl.motion:KeyframeBase" tiptext="Retrieves the next keyframe after a specific frame in the Motion instance." version="1.0"/>
               <string helpurl="fl.motion:MotionBase:getValue" name="getValue" object="[fl.motion.MotionBase]" playername="" text=".getValue(%index:Number,tweenableName:String%):Number" tiptext="Retrieves the value for an animation property at a point in time." version="1.0"/>
               <string helpurl="fl.motion:MotionBase:initFilters" name="initFilters" object="[fl.motion.MotionBase]" playername="" text=".initFilters(%filterClasses:Array,gradientSubarrayLengths:Array[,startFrame:int=-1,endFrame:int=-1]%):void" tiptext="Initializes the filters list for the target object and copies the list of filters to each Keyframe instance of the Motion object." version="1.0"/>
               <string helpurl="fl.motion:MotionBase:overrideTargetTransform" name="overrideTargetTransform" object="[fl.motion.MotionBase]" playername="" text=".overrideTargetTransform(%[scale:Boolean=true,skew:Boolean=true,rotate:Boolean=true]%):void" tiptext="" version=""/>
               <string helpurl="fl.motion:MotionBase:setValue" name="setValue" object="[fl.motion.MotionBase]" playername="" text=".setValue(%index:int,tweenableName:String,value:Number%):void" tiptext="Sets the value of a specific tweenables property at a given time index in the Motion instance." version="1.0"/>
               <string helpurl="fl.motion:MotionBase:useRotationConcat" name="useRotationConcat" object="[fl.motion.MotionBase]" playername="" text=".useRotationConcat(%index:int%):Boolean" tiptext="Rotates the target object when data for the motion is supplied by the addPropertyArray() method." version="1.0"/>
            </folder>
            <folder helpurl="fl.motion:MotionBase" id="Properties" name="Properties" tiptext="Properties for class MotionBase">
               <string helpurl="fl.motion:MotionBase:keyframes" name="keyframes" object="[fl.motion.MotionBase]" playername="" text=".keyframes" tiptext="An array of keyframes that define the motion's behavior over time." version=""/>
               <string helpurl="fl.motion:MotionBase:duration:get" name="duration" object="[fl.motion.MotionBase]" playername="" text=".duration" tiptext="Controls the Motion instance's length of time, measured in frames." version=""/>
               <string helpurl="fl.motion:MotionBase:is3D:get" name="is3D" object="[fl.motion.MotionBase]" playername="" text=".is3D" tiptext="Specifies whether the motion contains 3D property changes." version=""/>
               <string helpurl="fl.motion:MotionBase:initialMatrix:set" name="initialMatrix" object="[fl.motion.MotionBase]" playername="" text=".initialMatrix" tiptext="Used when an array of MotionBase instances are passed into a AnimatorBase subclass." version=""/>
               <string helpurl="fl.motion:MotionBase:initialPosition:set" name="initialPosition" object="[fl.motion.MotionBase]" playername="" text=".initialPosition" tiptext="Used when an array of MotionBase instances are passed into a AnimatorBase subclass." version=""/>
               <string helpurl="fl.motion:MotionBase:spanStart:set" name="spanStart" object="[fl.motion.MotionBase]" playername="" text=".spanStart" tiptext="Used when an array of MotionBase instances are passed into a AnimatorBase subclass." version=""/>
               <string helpurl="fl.motion:MotionBase:transformationPointZ:set" name="transformationPointZ" object="[fl.motion.MotionBase]" playername="" text=".transformationPointZ" tiptext="Used when an array of MotionBase instances are passed into a AnimatorBase subclass." version=""/>
               <string helpurl="fl.motion:MotionBase:transformationPoint:set" name="transformationPoint" object="[fl.motion.MotionBase]" playername="" text=".transformationPoint" tiptext="Used when an array of MotionBase instances are passed into a AnimatorBase subclass." version=""/>
            </folder>
         </folder>
         <folder asAncestors="flash.events:Event,Object" helpurl="fl.motion:MotionEvent" id="[fl.motion.MotionEvent]" index="true" name="MotionEvent" sort="true" tiptext="The MotionEvent class represents events that are broadcast by the fl.motion.Animator class.">
            <folder helpurl="fl.motion:MotionEvent" id="Methods" name="Methods" tiptext="Methods for class MotionEvent">
               <string constructor="true" helpurl="fl.motion:MotionEvent:MotionEvent" name="MotionEvent" object="[fl.motion.MotionEvent]" playername="" text="new MotionEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false]%)" tiptext="Constructor." version="1.0"/>
            </folder>
            <folder helpurl="fl.motion:MotionEvent" id="Properties" name="Properties" tiptext="Properties for class MotionEvent">
               <string constant="true" helpurl="fl.motion:MotionEvent:MOTION_END" name="MOTION_END" object="[fl.motion.MotionEvent]" playername="" text="MotionEvent.MOTION_END" tiptext="Indicates that the motion has stopped, whether by an explicit call to Animator.stop() or Animator.end(), or by reaching the end of the Motion instance." version=""/>
               <string constant="true" helpurl="fl.motion:MotionEvent:MOTION_START" name="MOTION_START" object="[fl.motion.MotionEvent]" playername="" text="MotionEvent.MOTION_START" tiptext="Indicates that the Motion instance has started playing." version=""/>
               <string constant="true" helpurl="fl.motion:MotionEvent:MOTION_UPDATE" name="MOTION_UPDATE" object="[fl.motion.MotionEvent]" playername="" text="MotionEvent.MOTION_UPDATE" tiptext="Indicates that the Motion instance has changed and the screen has been updated." version=""/>
               <string constant="true" helpurl="fl.motion:MotionEvent:TIME_CHANGE" name="TIME_CHANGE" object="[fl.motion.MotionEvent]" playername="" text="MotionEvent.TIME_CHANGE" tiptext="Indicates that the Animator instance's time value has changed, but the screen has not yet been updated (Flash Player has not dispatched the motionUpdate event)." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="fl.motion:RotateDirection" id="[fl.motion.RotateDirection]" index="true" name="RotateDirection" sort="true" tiptext="The RotateDirection class provides constant values for rotation behavior during a tween.">
            <folder helpurl="fl.motion:RotateDirection" id="Properties" name="Properties" tiptext="Properties for class RotateDirection">
               <string constant="true" helpurl="fl.motion:RotateDirection:AUTO" name="AUTO" object="[fl.motion.RotateDirection]" playername="" text="RotateDirection.AUTO" tiptext="Chooses a direction of rotation that requires the least amount of turning." version=""/>
               <string constant="true" helpurl="fl.motion:RotateDirection:CCW" name="CCW" object="[fl.motion.RotateDirection]" playername="" text="RotateDirection.CCW" tiptext="Ensures that the object rotates counterclockwise during a tween to match the rotation of the object in the following keyframe." version=""/>
               <string constant="true" helpurl="fl.motion:RotateDirection:CW" name="CW" object="[fl.motion.RotateDirection]" playername="" text="RotateDirection.CW" tiptext="Ensures that the object rotates clockwise during a tween to match the rotation of the object in the following keyframe." version=""/>
               <string constant="true" helpurl="fl.motion:RotateDirection:NONE" name="NONE" object="[fl.motion.RotateDirection]" playername="" text="RotateDirection.NONE" tiptext="Prevents the object from rotating during a tween until the next keyframe is reached." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="fl.motion:SimpleEase" id="[fl.motion.SimpleEase]" index="true" name="SimpleEase" sort="true" tiptext="The SimpleEase class allows you to control an animation with the kind of percentage easing that is used in the Flash timeline.">
            <folder helpurl="fl.motion:SimpleEase" id="Methods" name="Methods" tiptext="Methods for class SimpleEase">
               <string constructor="true" helpurl="fl.motion:SimpleEase:SimpleEase" name="SimpleEase" object="[fl.motion.SimpleEase]" playername="" text="new SimpleEase(%[xml:XML=null]%)" tiptext="Constructor for SimpleEase instances." version="1.0"/>
               <string helpurl="fl.motion:SimpleEase:easeNone" name="easeNone" object="[fl.motion.SimpleEase]" playername="" static="true" text="SimpleEase.easeNone(%time:Number,begin:Number,change:Number,duration:Number%):Number" tiptext="Calculates an interpolated value for a numerical property of animation, using a linear tween of constant velocity." version="1.0"/>
               <string helpurl="fl.motion:SimpleEase:easeQuadPercent" name="easeQuadPercent" object="[fl.motion.SimpleEase]" playername="" static="true" text="SimpleEase.easeQuadPercent(%time:Number,begin:Number,change:Number,duration:Number,percent:Number%):Number" tiptext="Calculates an interpolated value for a numerical property of animation, using a percentage of quadratic easing." version="1.0"/>
               <string helpurl="fl.motion:SimpleEase:getValue" name="getValue" object="[fl.motion.SimpleEase]" playername="" text=".getValue(%time:Number,begin:Number,change:Number,duration:Number%):Number" tiptext="Calculates an interpolated value for a numerical property of animation, using a percentage of quadratic easing." version="1.0"/>
            </folder>
            <folder helpurl="fl.motion:SimpleEase" id="Properties" name="Properties" tiptext="Properties for class SimpleEase">
               <string helpurl="fl.motion:SimpleEase:ease:get" name="ease" object="[fl.motion.SimpleEase]" playername="" text=".ease" tiptext="A percentage between -1 (100% ease in or acceleration) and 1 (100% ease out or deceleration)." version=""/>
               <string helpurl="fl.motion:SimpleEase:target:get" name="target" object="[fl.motion.SimpleEase]" playername="" text=".target" tiptext="The name of the animation property to target." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="fl.motion:Source" id="[fl.motion.Source]" index="true" name="Source" sort="true" tiptext="The Source class stores information about the context in which a Motion instance was generated.">
            <folder helpurl="fl.motion:Source" id="Methods" name="Methods" tiptext="Methods for class Source">
               <string constructor="true" helpurl="fl.motion:Source:Source" name="Source" object="[fl.motion.Source]" playername="" text="new Source(%[xml:XML=null]%)" tiptext="Constructor for Source instances." version="1.0"/>
            </folder>
            <folder helpurl="fl.motion:Source" id="Properties" name="Properties" tiptext="Properties for class Source">
               <string helpurl="fl.motion:Source:dimensions" name="dimensions" object="[fl.motion.Source]" playername="" text=".dimensions" tiptext="Indicates the position and size of the bounding box of the object from which the Motion instance was generated." version=""/>
               <string helpurl="fl.motion:Source:elementType" name="elementType" object="[fl.motion.Source]" playername="" text=".elementType" tiptext="Indicates the type of object from which the Motion instance was generated." version=""/>
               <string helpurl="fl.motion:Source:frameRate" name="frameRate" object="[fl.motion.Source]" playername="" text=".frameRate" tiptext="Indicates the frames per second of the movie in which the Motion instance was generated." version=""/>
               <string helpurl="fl.motion:Source:instanceName" name="instanceName" object="[fl.motion.Source]" playername="" text=".instanceName" tiptext="Indicates the instance name given to the movie clip from which the Motion instance was generated." version=""/>
               <string helpurl="fl.motion:Source:linkageID" name="linkageID" object="[fl.motion.Source]" playername="" text=".linkageID" tiptext="Indicates the library linkage identifier for the symbol from which the Motion instance was generated." version=""/>
               <string helpurl="fl.motion:Source:rotation" name="rotation" object="[fl.motion.Source]" playername="" text=".rotation" tiptext="Indicates the rotation value of the original object." version=""/>
               <string helpurl="fl.motion:Source:scaleX" name="scaleX" object="[fl.motion.Source]" playername="" text=".scaleX" tiptext="Indicates the scaleX value of the original object." version=""/>
               <string helpurl="fl.motion:Source:scaleY" name="scaleY" object="[fl.motion.Source]" playername="" text=".scaleY" tiptext="Indicates the scaleY value of the original object." version=""/>
               <string helpurl="fl.motion:Source:skewX" name="skewX" object="[fl.motion.Source]" playername="" text=".skewX" tiptext="Indicates the skewX value of the original object." version=""/>
               <string helpurl="fl.motion:Source:skewY" name="skewY" object="[fl.motion.Source]" playername="" text=".skewY" tiptext="Indicates the skewY value of the original object." version=""/>
               <string helpurl="fl.motion:Source:symbolName" name="symbolName" object="[fl.motion.Source]" playername="" text=".symbolName" tiptext="Indicates the name of the symbol from which the Motion instance was generated." version=""/>
               <string helpurl="fl.motion:Source:transformationPoint" name="transformationPoint" object="[fl.motion.Source]" playername="" text=".transformationPoint" tiptext="Specifies the location of the transformation or &quot;pivot&quot; point of the original object, from which transformations are applied." version=""/>
               <string helpurl="fl.motion:Source:x" name="x" object="[fl.motion.Source]" playername="" text=".x" tiptext="Indicates the x value of the original object." version=""/>
               <string helpurl="fl.motion:Source:y" name="y" object="[fl.motion.Source]" playername="" text=".y" tiptext="Indicates the y value of the original object." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="fl.motion:Tweenables" id="[fl.motion.Tweenables]" index="true" name="Tweenables" sort="true" tiptext="The Tweenables class provides constant values for the names of animation properties used in the MotionBase and KeyframeBase classes.">
            <folder helpurl="fl.motion:Tweenables" id="Properties" name="Properties" tiptext="Properties for class Tweenables">
               <string constant="true" helpurl="fl.motion:Tweenables:ROTATION_CONCAT" name="ROTATION_CONCAT" object="[fl.motion.Tweenables]" playername="" text="Tweenables.ROTATION_CONCAT" tiptext="Constant for the rotationConcat property." version=""/>
               <string constant="true" helpurl="fl.motion:Tweenables:ROTATION_X" name="ROTATION_X" object="[fl.motion.Tweenables]" playername="" text="Tweenables.ROTATION_X" tiptext="Constant for the rotationX property." version=""/>
               <string constant="true" helpurl="fl.motion:Tweenables:ROTATION_Y" name="ROTATION_Y" object="[fl.motion.Tweenables]" playername="" text="Tweenables.ROTATION_Y" tiptext="Constant for the rotationY property." version=""/>
               <string constant="true" helpurl="fl.motion:Tweenables:ROTATION" name="ROTATION" object="[fl.motion.Tweenables]" playername="" text="Tweenables.ROTATION" tiptext="Constant for the rotation property." version=""/>
               <string constant="true" helpurl="fl.motion:Tweenables:SCALE_X" name="SCALE_X" object="[fl.motion.Tweenables]" playername="" text="Tweenables.SCALE_X" tiptext="Constant for the scaleX property." version=""/>
               <string constant="true" helpurl="fl.motion:Tweenables:SCALE_Y" name="SCALE_Y" object="[fl.motion.Tweenables]" playername="" text="Tweenables.SCALE_Y" tiptext="Constant for the scaleY property." version=""/>
               <string constant="true" helpurl="fl.motion:Tweenables:SKEW_X" name="SKEW_X" object="[fl.motion.Tweenables]" playername="" text="Tweenables.SKEW_X" tiptext="Constant for the skewX property." version=""/>
               <string constant="true" helpurl="fl.motion:Tweenables:SKEW_Y" name="SKEW_Y" object="[fl.motion.Tweenables]" playername="" text="Tweenables.SKEW_Y" tiptext="Constant for the skewY property." version=""/>
               <string constant="true" helpurl="fl.motion:Tweenables:X" name="X" object="[fl.motion.Tweenables]" playername="" text="Tweenables.X" tiptext="Constant for the x property." version=""/>
               <string constant="true" helpurl="fl.motion:Tweenables:Y" name="Y" object="[fl.motion.Tweenables]" playername="" text="Tweenables.Y" tiptext="Constant for the y property." version=""/>
               <string constant="true" helpurl="fl.motion:Tweenables:Z" name="Z" object="[fl.motion.Tweenables]" playername="" text="Tweenables.Z" tiptext="Constant for the z property." version=""/>
            </folder>
         </folder>
      </folder>
      <folder helpurl="fl.motion.easing" id="fl.motion.easing" name="fl.motion.easing" sort="true" tiptext="Classes for package fl.motion.easing">
         <folder asAncestors="Object" helpurl="fl.motion.easing:Back" id="[fl.motion.easing.Back]" index="true" name="Back" sort="true" tiptext="The Back class defines three easing functions to implement motion with ActionScript animations.">
            <folder helpurl="fl.motion.easing:Back" id="Methods" name="Methods" tiptext="Methods for class Back">
               <string helpurl="fl.motion.easing:Back:easeInOut" name="easeInOut" object="[fl.motion.easing.Back]" playername="" static="true" text="Back.easeInOut(%t:Number,b:Number,c:Number,d:Number[,s:Number=0]%):Number" tiptext="The easeInOut() method combines the motion of the easeIn() and easeOut() methods to start the motion by backtracking, then reversing direction and moving toward the target, overshooting the target slightly, reversing direction again, and then moving back toward the target." version="1.0"/>
               <string helpurl="fl.motion.easing:Back:easeIn" name="easeIn" object="[fl.motion.easing.Back]" playername="" static="true" text="Back.easeIn(%t:Number,b:Number,c:Number,d:Number[,s:Number=0]%):Number" tiptext="The easeIn() method starts the motion by backtracking and then reversing direction and moving toward the target." version="1.0"/>
               <string helpurl="fl.motion.easing:Back:easeOut" name="easeOut" object="[fl.motion.easing.Back]" playername="" static="true" text="Back.easeOut(%t:Number,b:Number,c:Number,d:Number[,s:Number=0]%):Number" tiptext="The easeOut() method starts the motion by moving towards the target, overshooting it slightly, and then reversing direction back toward the target." version="1.0"/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="fl.motion.easing:Bounce" id="[fl.motion.easing.Bounce]" index="true" name="Bounce" sort="true" tiptext="The Bounce class defines three easing functions to implement bouncing motion with ActionScript animation, similar to a ball falling and bouncing on a floor with several decaying rebounds.">
            <folder helpurl="fl.motion.easing:Bounce" id="Methods" name="Methods" tiptext="Methods for class Bounce">
               <string helpurl="fl.motion.easing:Bounce:easeInOut" name="easeInOut" object="[fl.motion.easing.Bounce]" playername="" static="true" text="Bounce.easeInOut(%t:Number,b:Number,c:Number,d:Number%):Number" tiptext="The easeInOut() method combines the motion of the easeIn() and easeOut() methods to start the bounce motion slowly, accelerate motion, then decelerate." version="1.0"/>
               <string helpurl="fl.motion.easing:Bounce:easeIn" name="easeIn" object="[fl.motion.easing.Bounce]" playername="" static="true" text="Bounce.easeIn(%t:Number,b:Number,c:Number,d:Number%):Number" tiptext="The easeIn() method starts the bounce motion slowly and then accelerates motion as it executes." version="1.0"/>
               <string helpurl="fl.motion.easing:Bounce:easeOut" name="easeOut" object="[fl.motion.easing.Bounce]" playername="" static="true" text="Bounce.easeOut(%t:Number,b:Number,c:Number,d:Number%):Number" tiptext="The easeOut() method starts the bounce motion fast and then decelerates motion as it executes." version="1.0"/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="fl.motion.easing:Circular" id="[fl.motion.easing.Circular]" index="true" name="Circular" sort="true" tiptext="The Circular class defines three easing functions to implement motion with ActionScript animation.">
            <folder helpurl="fl.motion.easing:Circular" id="Methods" name="Methods" tiptext="Methods for class Circular">
               <string helpurl="fl.motion.easing:Circular:easeInOut" name="easeInOut" object="[fl.motion.easing.Circular]" playername="" static="true" text="Circular.easeInOut(%t:Number,b:Number,c:Number,d:Number%):Number" tiptext="The easeInOut() method combines the motion of the easeIn() and easeOut() methods to start the motion from a zero velocity, accelerate motion, then decelerate to a zero velocity." version="1.0"/>
               <string helpurl="fl.motion.easing:Circular:easeIn" name="easeIn" object="[fl.motion.easing.Circular]" playername="" static="true" text="Circular.easeIn(%t:Number,b:Number,c:Number,d:Number%):Number" tiptext="The easeIn() method starts motion from zero velocity and then accelerates motion as it executes." version="1.0"/>
               <string helpurl="fl.motion.easing:Circular:easeOut" name="easeOut" object="[fl.motion.easing.Circular]" playername="" static="true" text="Circular.easeOut(%t:Number,b:Number,c:Number,d:Number%):Number" tiptext="The easeOut() method starts motion fast and then decelerates motion to a zero velocity as it executes." version="1.0"/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="fl.motion.easing:Cubic" id="[fl.motion.easing.Cubic]" index="true" name="Cubic" sort="true" tiptext="The Cubic class defines three easing functions to implement motion with ActionScript animation.">
            <folder helpurl="fl.motion.easing:Cubic" id="Methods" name="Methods" tiptext="Methods for class Cubic">
               <string helpurl="fl.motion.easing:Cubic:easeInOut" name="easeInOut" object="[fl.motion.easing.Cubic]" playername="" static="true" text="Cubic.easeInOut(%t:Number,b:Number,c:Number,d:Number%):Number" tiptext="The easeInOut() method combines the motion of the easeIn() and easeOut() methods to start the motion from a zero velocity, accelerate motion, then decelerate to a zero velocity." version="1.0"/>
               <string helpurl="fl.motion.easing:Cubic:easeIn" name="easeIn" object="[fl.motion.easing.Cubic]" playername="" static="true" text="Cubic.easeIn(%t:Number,b:Number,c:Number,d:Number%):Number" tiptext="The easeIn() method starts motion from zero velocity and then accelerates motion as it executes." version="1.0"/>
               <string helpurl="fl.motion.easing:Cubic:easeOut" name="easeOut" object="[fl.motion.easing.Cubic]" playername="" static="true" text="Cubic.easeOut(%t:Number,b:Number,c:Number,d:Number%):Number" tiptext="The easeOut() method starts motion fast and then decelerates motion to a zero velocity as it executes." version="1.0"/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="fl.motion.easing:Elastic" id="[fl.motion.easing.Elastic]" index="true" name="Elastic" sort="true" tiptext="The Elastic class defines three easing functions to implement motion with ActionScript animation, where the motion is defined by an exponentially decaying sine wave.">
            <folder helpurl="fl.motion.easing:Elastic" id="Methods" name="Methods" tiptext="Methods for class Elastic">
               <string helpurl="fl.motion.easing:Elastic:easeInOut" name="easeInOut" object="[fl.motion.easing.Elastic]" playername="" static="true" text="Elastic.easeInOut(%t:Number,b:Number,c:Number,d:Number[,a:Number=0,p:Number=0]%):Number" tiptext="The easeInOut() method combines the motion of the easeIn() and easeOut() methods to start the motion slowly, accelerate motion, then decelerate." version="1.0"/>
               <string helpurl="fl.motion.easing:Elastic:easeIn" name="easeIn" object="[fl.motion.easing.Elastic]" playername="" static="true" text="Elastic.easeIn(%t:Number,b:Number,c:Number,d:Number[,a:Number=0,p:Number=0]%):Number" tiptext="The easeIn() method starts motion slowly and then accelerates motion as it executes." version="1.0"/>
               <string helpurl="fl.motion.easing:Elastic:easeOut" name="easeOut" object="[fl.motion.easing.Elastic]" playername="" static="true" text="Elastic.easeOut(%t:Number,b:Number,c:Number,d:Number[,a:Number=0,p:Number=0]%):Number" tiptext="The easeOut() method starts motion fast and then decelerates motion as it executes." version="1.0"/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="fl.motion.easing:Exponential" id="[fl.motion.easing.Exponential]" index="true" name="Exponential" sort="true" tiptext="The Exponential class defines three easing functions to implement motion with ActionScript animation.">
            <folder helpurl="fl.motion.easing:Exponential" id="Methods" name="Methods" tiptext="Methods for class Exponential">
               <string helpurl="fl.motion.easing:Exponential:easeInOut" name="easeInOut" object="[fl.motion.easing.Exponential]" playername="" static="true" text="Exponential.easeInOut(%t:Number,b:Number,c:Number,d:Number%):Number" tiptext="The easeInOut() method combines the motion of the easeIn() and easeOut() methods to start the motion from a zero velocity, accelerate motion, then decelerate to a zero velocity." version="1.0"/>
               <string helpurl="fl.motion.easing:Exponential:easeIn" name="easeIn" object="[fl.motion.easing.Exponential]" playername="" static="true" text="Exponential.easeIn(%t:Number,b:Number,c:Number,d:Number%):Number" tiptext="The easeIn() method starts motion slowly and then accelerates motion as it executes." version="1.0"/>
               <string helpurl="fl.motion.easing:Exponential:easeOut" name="easeOut" object="[fl.motion.easing.Exponential]" playername="" static="true" text="Exponential.easeOut(%t:Number,b:Number,c:Number,d:Number%):Number" tiptext="The easeOut() method starts motion fast and then decelerates motion to a zero velocity as it executes." version="1.0"/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="fl.motion.easing:Linear" id="[fl.motion.easing.Linear]" index="true" name="Linear" sort="true" tiptext="The Linear class defines easing functions to implement non-accelerated motion with ActionScript animations.">
            <folder helpurl="fl.motion.easing:Linear" id="Methods" name="Methods" tiptext="Methods for class Linear">
               <string helpurl="fl.motion.easing:Linear:easeInOut" name="easeInOut" object="[fl.motion.easing.Linear]" playername="" static="true" text="Linear.easeInOut(%t:Number,b:Number,c:Number,d:Number%):Number" tiptext="The easeInOut() method defines a constant motion with no acceleration." version="1.0"/>
               <string helpurl="fl.motion.easing:Linear:easeIn" name="easeIn" object="[fl.motion.easing.Linear]" playername="" static="true" text="Linear.easeIn(%t:Number,b:Number,c:Number,d:Number%):Number" tiptext="The easeIn() method defines a constant motion with no acceleration." version="1.0"/>
               <string helpurl="fl.motion.easing:Linear:easeNone" name="easeNone" object="[fl.motion.easing.Linear]" playername="" static="true" text="Linear.easeNone(%t:Number,b:Number,c:Number,d:Number%):Number" tiptext="The easeNone() method defines a constant motion with no acceleration." version="1.0"/>
               <string helpurl="fl.motion.easing:Linear:easeOut" name="easeOut" object="[fl.motion.easing.Linear]" playername="" static="true" text="Linear.easeOut(%t:Number,b:Number,c:Number,d:Number%):Number" tiptext="The easeOut() method defines a constant motion with no acceleration." version="1.0"/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="fl.motion.easing:Quadratic" id="[fl.motion.easing.Quadratic]" index="true" name="Quadratic" sort="true" tiptext="The Quadratic class defines three easing functions to implement accelerated motion with ActionScript animations.">
            <folder helpurl="fl.motion.easing:Quadratic" id="Methods" name="Methods" tiptext="Methods for class Quadratic">
               <string helpurl="fl.motion.easing:Quadratic:easeInOut" name="easeInOut" object="[fl.motion.easing.Quadratic]" playername="" static="true" text="Quadratic.easeInOut(%t:Number,b:Number,c:Number,d:Number%):Number" tiptext="The easeInOut() method combines the motion of the easeIn() and easeOut() methods to start the motion from a zero velocity, accelerate motion, then decelerate to a zero velocity." version="1.0"/>
               <string helpurl="fl.motion.easing:Quadratic:easeIn" name="easeIn" object="[fl.motion.easing.Quadratic]" playername="" static="true" text="Quadratic.easeIn(%t:Number,b:Number,c:Number,d:Number%):Number" tiptext="The easeIn() method starts motion from a zero velocity and then accelerates motion as it executes." version="1.0"/>
               <string helpurl="fl.motion.easing:Quadratic:easeOut" name="easeOut" object="[fl.motion.easing.Quadratic]" playername="" static="true" text="Quadratic.easeOut(%t:Number,b:Number,c:Number,d:Number%):Number" tiptext="The easeOut() method starts motion fast and then decelerates motion to a zero velocity as it executes." version="1.0"/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="fl.motion.easing:Quartic" id="[fl.motion.easing.Quartic]" index="true" name="Quartic" sort="true" tiptext="The Quartic class defines three easing functions to implement motion with ActionScript animation.">
            <folder helpurl="fl.motion.easing:Quartic" id="Methods" name="Methods" tiptext="Methods for class Quartic">
               <string helpurl="fl.motion.easing:Quartic:easeInOut" name="easeInOut" object="[fl.motion.easing.Quartic]" playername="" static="true" text="Quartic.easeInOut(%t:Number,b:Number,c:Number,d:Number%):Number" tiptext="The easeInOut() method combines the motion of the easeIn() and easeOut() methods to start the motion from a zero velocity, accelerate motion, then decelerate to a zero velocity." version="1.0"/>
               <string helpurl="fl.motion.easing:Quartic:easeIn" name="easeIn" object="[fl.motion.easing.Quartic]" playername="" static="true" text="Quartic.easeIn(%t:Number,b:Number,c:Number,d:Number%):Number" tiptext="The easeIn() method starts motion from zero velocity and then accelerates motion as it executes." version="1.0"/>
               <string helpurl="fl.motion.easing:Quartic:easeOut" name="easeOut" object="[fl.motion.easing.Quartic]" playername="" static="true" text="Quartic.easeOut(%t:Number,b:Number,c:Number,d:Number%):Number" tiptext="The easeOut() method starts motion fast and then decelerates motion to a zero velocity as it executes." version="1.0"/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="fl.motion.easing:Quintic" id="[fl.motion.easing.Quintic]" index="true" name="Quintic" sort="true" tiptext="The Quintic class defines three easing functions to implement motion with ActionScript animation.">
            <folder helpurl="fl.motion.easing:Quintic" id="Methods" name="Methods" tiptext="Methods for class Quintic">
               <string helpurl="fl.motion.easing:Quintic:easeInOut" name="easeInOut" object="[fl.motion.easing.Quintic]" playername="" static="true" text="Quintic.easeInOut(%t:Number,b:Number,c:Number,d:Number%):Number" tiptext="The easeInOut() method combines the motion of the easeIn() and easeOut() methods to start the motion from a zero velocity, accelerate motion, then decelerate to a zero velocity." version="1.0"/>
               <string helpurl="fl.motion.easing:Quintic:easeIn" name="easeIn" object="[fl.motion.easing.Quintic]" playername="" static="true" text="Quintic.easeIn(%t:Number,b:Number,c:Number,d:Number%):Number" tiptext="The easeIn() method starts motion from zero velocity and then accelerates motion as it executes." version="1.0"/>
               <string helpurl="fl.motion.easing:Quintic:easeOut" name="easeOut" object="[fl.motion.easing.Quintic]" playername="" static="true" text="Quintic.easeOut(%t:Number,b:Number,c:Number,d:Number%):Number" tiptext="The easeOut() method starts motion fast and then decelerates motion to a zero velocity as it executes." version="1.0"/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="fl.motion.easing:Sine" id="[fl.motion.easing.Sine]" index="true" name="Sine" sort="true" tiptext="The Sine class defines three easing functions to implement motion with ActionScript animation.">
            <folder helpurl="fl.motion.easing:Sine" id="Methods" name="Methods" tiptext="Methods for class Sine">
               <string helpurl="fl.motion.easing:Sine:easeInOut" name="easeInOut" object="[fl.motion.easing.Sine]" playername="" static="true" text="Sine.easeInOut(%t:Number,b:Number,c:Number,d:Number%):Number" tiptext="The easeInOut() method combines the motion of the easeIn() and easeOut() methods to start the motion from a zero velocity, accelerate motion, then decelerate to a zero velocity." version="1.0"/>
               <string helpurl="fl.motion.easing:Sine:easeIn" name="easeIn" object="[fl.motion.easing.Sine]" playername="" static="true" text="Sine.easeIn(%t:Number,b:Number,c:Number,d:Number%):Number" tiptext="The easeIn() method starts motion from zero velocity and then accelerates motion as it executes." version="1.0"/>
               <string helpurl="fl.motion.easing:Sine:easeOut" name="easeOut" object="[fl.motion.easing.Sine]" playername="" static="true" text="Sine.easeOut(%t:Number,b:Number,c:Number,d:Number%):Number" tiptext="The easeOut() method starts motion fast and then decelerates motion to a zero velocity as it executes." version="1.0"/>
            </folder>
         </folder>
      </folder>
      <folder helpurl="fl.rsl" id="fl.rsl" name="fl.rsl" sort="true" tiptext="Classes for package fl.rsl">
         <folder asAncestors="flash.events:EventDispatcher,Object" helpurl="fl.rsl:RSLInfo" id="[fl.rsl.RSLInfo]" index="true" name="RSLInfo" sort="true" tiptext="The RSLInfo class allows to you specify the use of RSLs (Runtime Shared Library Files).">
            <folder helpurl="fl.rsl:RSLInfo" id="Methods" name="Methods" tiptext="Methods for class RSLInfo">
               <string constructor="true" helpurl="fl.rsl:RSLInfo:RSLInfo" name="RSLInfo" object="[fl.rsl.RSLInfo]" playername="" text="new RSLInfo(%%)" tiptext="Constructor." version="2"/>
               <string helpurl="fl.rsl:RSLInfo:addEntry" name="addEntry" object="[fl.rsl.RSLInfo]" playername="" text=".addEntry(%url:String[,policyFileURL:String=null]%):void" tiptext="Adds a series of URLs (RSL files and policy files)." version="2"/>
               <string helpurl="fl.rsl:RSLInfo:load" name="load" object="[fl.rsl.RSLInfo]" playername="" text=".load(%%):void" tiptext="Starts the RSL download." version="2"/>
            </folder>
            <folder helpurl="fl.rsl:RSLInfo" id="Properties" name="Properties" tiptext="Properties for class RSLInfo">
               <string helpurl="fl.rsl:RSLInfo:bytesLoaded:get" name="bytesLoaded" object="[fl.rsl.RSLInfo]" playername="" text=".bytesLoaded" tiptext="Indicates the number of bytes that have been loaded thus far for all files being loaded." version=""/>
               <string helpurl="fl.rsl:RSLInfo:bytesTotal:get" name="bytesTotal" object="[fl.rsl.RSLInfo]" playername="" text=".bytesTotal" tiptext="Indicates the total number of bytes that have been loaded thus far for all files being loaded." version=""/>
               <string helpurl="fl.rsl:RSLInfo:complete:get" name="complete" object="[fl.rsl.RSLInfo]" playername="" text=".complete" tiptext="Returns a value of true if the download has completed successfully and false if the download is not yet complete or has failed." version=""/>
               <string helpurl="fl.rsl:RSLInfo:currentAttemptIndex:get" name="currentAttemptIndex" object="[fl.rsl.RSLInfo]" playername="" text=".currentAttemptIndex" tiptext="Returns the index of the URL currently attempting to download." version=""/>
               <string helpurl="fl.rsl:RSLInfo:failed:get" name="failed" object="[fl.rsl.RSLInfo]" playername="" text=".failed" tiptext="Returns a value of true if the download has failed and false if the download is not yet complete or has completed successfully." version=""/>
               <string helpurl="fl.rsl:RSLInfo:loader:get" name="loader" object="[fl.rsl.RSLInfo]" playername="" text=".loader" tiptext="Returns the loader used to download the RSL." version=""/>
               <string helpurl="fl.rsl:RSLInfo:policyFileURLs:get" name="policyFileURLs" object="[fl.rsl.RSLInfo]" playername="" text=".policyFileURLs" tiptext="Returns an array of policy file URLs that have been added via addEntry()." version=""/>
               <string helpurl="fl.rsl:RSLInfo:rslURLs:get" name="rslURLs" object="[fl.rsl.RSLInfo]" playername="" text=".rslURLs" tiptext="Returns an array of RSL URLs added via addEntry()." version=""/>
            </folder>
         </folder>
         <folder asAncestors="flash.events:EventDispatcher,Object" helpurl="fl.rsl:RSLPreloader" id="[fl.rsl.RSLPreloader]" index="true" name="RSLPreloader" sort="true" tiptext="The RSLPreloader class manages preloading of RSLs (Runtime Shared Libraries) before playing other content.">
            <folder helpurl="fl.rsl:RSLPreloader" id="Methods" name="Methods" tiptext="Methods for class RSLPreloader">
               <string constructor="true" helpurl="fl.rsl:RSLPreloader:RSLPreloader" name="RSLPreloader" object="[fl.rsl.RSLPreloader]" playername="" text="new RSLPreloader(%[mainTimeline:flash.display:MovieClip=null]%)" tiptext="Constructor." version="2"/>
               <string helpurl="fl.rsl:RSLPreloader:addRSLInfo" name="addRSLInfo" object="[fl.rsl.RSLPreloader]" playername="" text=".addRSLInfo(%info:fl.rsl:RSLInfo%):void" tiptext="Adds a descriptive RSLInfo record to the SWF or SWZ file being downloaded." version="2"/>
               <string helpurl="fl.rsl:RSLPreloader:getRSLInfoAt" name="getRSLInfoAt" object="[fl.rsl.RSLPreloader]" playername="" text=".getRSLInfoAt(%index:int%):fl.rsl:RSLInfo" tiptext="Gets the RSLInfo record added via addRSLInfo() at the specified index." version="2"/>
               <string helpurl="fl.rsl:RSLPreloader:loadContent" name="loadContent" object="[fl.rsl.RSLPreloader]" playername="" text=".loadContent(%%):void" tiptext="The loadContent method is called from frame 2 of the wrapper SWF when a content class name is supplied to the start() method." version="2"/>
               <string helpurl="fl.rsl:RSLPreloader:start" name="start" object="[fl.rsl.RSLPreloader]" playername="" text=".start(%[preloaderAnimClass:Class=null,contentClassName:String=null]%):void" tiptext="Starts downloading the RSL files." version="2"/>
            </folder>
            <folder helpurl="fl.rsl:RSLPreloader" id="Properties" name="Properties" tiptext="Properties for class RSLPreloader">
               <string helpurl="fl.rsl:RSLPreloader:debugWaitTime:get" name="debugWaitTime" object="[fl.rsl.RSLPreloader]" playername="" text=".debugWaitTime" tiptext="Set this value to the number of milliseconds to wait before downloading the first RSL file." version=""/>
               <string helpurl="fl.rsl:RSLPreloader:numRSLInfos:get" name="numRSLInfos" object="[fl.rsl.RSLPreloader]" playername="" text=".numRSLInfos" tiptext="The number of RSLInfo instances added via addRSLInfo()." version=""/>
            </folder>
            <folder helpurl="fl.rsl:RSLPreloader" id="Events" name="Events" tiptext="Events for class RSLPreloader">
               <string helpurl="fl.rsl:RSLPreloader__rslLoadFailed" name="rslLoadFailed" object="[fl.rsl.RSLPreloader]" playername="" text=".addEventListener(%type:String=RSLErrorEvent.RSL_LOAD_FAILED{RSLErrorEvent.RSL_LOAD_FAILED,RSLEvent.RSL_PROGRESS,RSLEvent.RSL_LOAD_COMPLETE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched by RSLPreloader when all RSLs have finished downloading and one or more have failed." version=""/>
               <string helpurl="fl.rsl:RSLPreloader__rslProgress" name="rslProgress" object="[fl.rsl.RSLPreloader]" playername="" text=".addEventListener(%type:String=RSLEvent.RSL_PROGRESS{RSLErrorEvent.RSL_LOAD_FAILED,RSLEvent.RSL_PROGRESS,RSLEvent.RSL_LOAD_COMPLETE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched by RSLPreloader to indicate progress in downloading RSL files." version=""/>
               <string helpurl="fl.rsl:RSLPreloader__rslLoadComplete" name="rslLoadComplete" object="[fl.rsl.RSLPreloader]" playername="" text=".addEventListener(%type:String=RSLEvent.RSL_LOAD_COMPLETE{RSLErrorEvent.RSL_LOAD_FAILED,RSLEvent.RSL_PROGRESS,RSLEvent.RSL_LOAD_COMPLETE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched by RSLPreloader when all RSLs have completed loading." version=""/>
            </folder>
         </folder>
         <folder asAncestors="fl.rsl:RSLInfo,flash.events:EventDispatcher,Object" helpurl="fl.rsl:SWZInfo" id="[fl.rsl.SWZInfo]" index="true" name="SWZInfo" sort="true" tiptext="The SWZInfo class indicates how to download a SWZ file, which is a signed Runtime Shared Library (RSL).">
            <folder helpurl="fl.rsl:SWZInfo" id="Methods" name="Methods" tiptext="Methods for class SWZInfo">
               <string constructor="true" helpurl="fl.rsl:SWZInfo:SWZInfo" name="SWZInfo" object="[fl.rsl.SWZInfo]" playername="" text="new SWZInfo(%digest:String%)" tiptext="Constructor." version="2"/>
            </folder>
            <folder helpurl="fl.rsl:SWZInfo" id="Properties" name="Properties" tiptext="Properties for class SWZInfo">
               <string helpurl="fl.rsl:SWZInfo:digest:get" name="digest" object="[fl.rsl.SWZInfo]" playername="" text=".digest" tiptext="Returns the read-only digest that was set in the constructor." version=""/>
            </folder>
         </folder>
      </folder>
      <folder helpurl="fl.text" id="fl.text" name="fl.text" sort="true" tiptext="Classes for package fl.text">
         <folder asAncestors="flash.display:Sprite,flash.display:DisplayObjectContainer,flash.display:InteractiveObject,flash.display:DisplayObject,flash.events:EventDispatcher,Object" helpurl="fl.text:TLFTextField" id="[fl.text.TLFTextField]" index="true" name="TLFTextField" sort="true" tiptext="Use the TLFTextField class to create text fields that use the advanced text display features of the Text Layout Framework (TLF).">
            <folder helpurl="fl.text:TLFTextField" id="Methods" name="Methods" tiptext="Methods for class TLFTextField">
               <string constructor="true" helpurl="fl.text:TLFTextField:TLFTextField" name="TLFTextField" object="[fl.text.TLFTextField]" playername="" text="new TLFTextField(%%)" tiptext="Constructor for TLFTextField objects." version="1.5"/>
               <string helpurl="fl.text:TLFTextField:appendText" name="appendText" object="[fl.text.TLFTextField]" playername="" text=".appendText(%newText:String%):void" tiptext="Appends text to the end of the existing text of the TextField." version="1.5"/>
               <string helpurl="fl.text:TLFTextField:getCharBoundaries" name="getCharBoundaries" object="[fl.text.TLFTextField]" playername="" text=".getCharBoundaries(%charIndex:int%):flash.geom:Rectangle" tiptext="Returns a rectangle that is the bounding box of the character." version="1.5"/>
               <string helpurl="fl.text:TLFTextField:getCharIndexAtPoint" name="getCharIndexAtPoint" object="[fl.text.TLFTextField]" playername="" text=".getCharIndexAtPoint(%x:Number,y:Number%):int" tiptext="Returns the zero-based index value of the character." version="1.5"/>
               <string helpurl="fl.text:TLFTextField:getFirstCharInParagraph" name="getFirstCharInParagraph" object="[fl.text.TLFTextField]" playername="" text=".getFirstCharInParagraph(%charIndex:int%):int" tiptext="The zero-based index value of the character." version="1.5"/>
               <string helpurl="fl.text:TLFTextField:getImageReference" name="getImageReference" object="[fl.text.TLFTextField]" playername="" text=".getImageReference(%id:String%):flash.display:DisplayObject" tiptext="Returns a DisplayObject reference for the given id, for an image or SWF filethat has been added to an HTML-formatted text field by using an &amp;lt;img&amp;gt; tag." version="1.5"/>
               <string helpurl="fl.text:TLFTextField:getLineIndexAtPoint" name="getLineIndexAtPoint" object="[fl.text.TLFTextField]" playername="" text=".getLineIndexAtPoint(%x:Number,y:Number%):int" tiptext="The zero-based index value of the line at a specified point." version="1.5"/>
               <string helpurl="fl.text:TLFTextField:getLineIndexOfChar" name="getLineIndexOfChar" object="[fl.text.TLFTextField]" playername="" text=".getLineIndexOfChar(%charIndex:int%):int" tiptext="The zero-based index value of the line containing the character that the the charIndex parameter specifies." version="1.5"/>
               <string helpurl="fl.text:TLFTextField:getLineLength" name="getLineLength" object="[fl.text.TLFTextField]" playername="" text=".getLineLength(%lineIndex:int%):int" tiptext="Returns the number of characters in a specific text line." version="1.5"/>
               <string helpurl="fl.text:TLFTextField:getLineMetrics" name="getLineMetrics" object="[fl.text.TLFTextField]" playername="" text=".getLineMetrics(%lineIndex:int%):flash.text:TextLineMetrics" tiptext="Returns metrics information about a given text line." version="1.5"/>
               <string helpurl="fl.text:TLFTextField:getLineOffset" name="getLineOffset" object="[fl.text.TLFTextField]" playername="" text=".getLineOffset(%lineIndex:int%):int" tiptext="The zero-based index value of the first character in the line." version="1.5"/>
               <string helpurl="fl.text:TLFTextField:getLineText" name="getLineText" object="[fl.text.TLFTextField]" playername="" text=".getLineText(%lineIndex:int%):String" tiptext="The text string contained in the specified line." version="1.5"/>
               <string helpurl="fl.text:TLFTextField:getParagraphLength" name="getParagraphLength" object="[fl.text.TLFTextField]" playername="" text=".getParagraphLength(%charIndex:int%):int" tiptext="The zero-based index value of the character." version="1.5"/>
               <string helpurl="fl.text:TLFTextField:getTextFormat" name="getTextFormat" object="[fl.text.TLFTextField]" playername="" text=".getTextFormat(%[beginIndex:int=-1,endIndex:int=-1]%):flash.text:TextFormat" tiptext="Returns a TextFormat object." version="1.5"/>
               <string helpurl="fl.text:TLFTextField:isFontCompatible" name="isFontCompatible" object="[fl.text.TLFTextField]" playername="" text=".isFontCompatible(%fontName:String,fontStyle:String%):Boolean" tiptext="Returns true if an embedded font is available with the specified fontName and fontStylewhere Font.fontType is flash.text.FontType.EMBEDDED_CFF." version="1.5"/>
               <string helpurl="fl.text:TLFTextField:replaceSelectedText" name="replaceSelectedText" object="[fl.text.TLFTextField]" playername="" text=".replaceSelectedText(%value:String%):void" tiptext="Replaces the current selection with the contents of the value parameter." version="1.5"/>
               <string helpurl="fl.text:TLFTextField:replaceText" name="replaceText" object="[fl.text.TLFTextField]" playername="" text=".replaceText(%beginIndex:int,endIndex:int,newText:String%):void" tiptext="Replaces a range of characters." version="1.5"/>
               <string helpurl="fl.text:TLFTextField:setSelection" name="setSelection" object="[fl.text.TLFTextField]" playername="" text=".setSelection(%begIdx:int,endIdx:int%):void" tiptext="Sets a new text selection." version="1.5"/>
               <string helpurl="fl.text:TLFTextField:setTextFormat" name="setTextFormat" object="[fl.text.TLFTextField]" playername="" text=".setTextFormat(%format:flash.text:TextFormat[,beginIndex:int=-1,endIndex:int=-1]%):void" tiptext="Applies text formatting." version="1.5"/>
            </folder>
            <folder helpurl="fl.text:TLFTextField" id="Properties" name="Properties" tiptext="Properties for class TLFTextField">
               <string helpurl="fl.text:TLFTextField:alwaysShowSelection:get" name="alwaysShowSelection" object="[fl.text.TLFTextField]" playername="" text=".alwaysShowSelection" tiptext="When set to true and the text field is not in focus, Flash Player highlights the selection in the text field in light blue." version=""/>
               <string helpurl="fl.text:TLFTextField:antiAliasType:get" name="antiAliasType" object="[fl.text.TLFTextField]" playername="" text=".antiAliasType" tiptext="The type of anti-aliasing used for this text field." version=""/>
               <string helpurl="fl.text:TLFTextField:autoSize:get" name="autoSize" object="[fl.text.TLFTextField]" playername="" text=".autoSize" tiptext="Controls automatic sizing and alignment of text fields." version=""/>
               <string helpurl="fl.text:TLFTextField:backgroundAlpha:get" name="backgroundAlpha" object="[fl.text.TLFTextField]" playername="" text=".backgroundAlpha" tiptext="Specifies the alpha value of the text field background." version=""/>
               <string helpurl="fl.text:TLFTextField:backgroundColor:get" name="backgroundColor" object="[fl.text.TLFTextField]" playername="" text=".backgroundColor" tiptext="Specifies the color of the text field background." version=""/>
               <string helpurl="fl.text:TLFTextField:background:get" name="background" object="[fl.text.TLFTextField]" playername="" text=".background" tiptext="Specifies whether the text field has a background fill." version=""/>
               <string helpurl="fl.text:TLFTextField:blockProgression:get" name="blockProgression" object="[fl.text.TLFTextField]" playername="" text=".blockProgression" tiptext="Specifies a vertical or horizontal progression of line placement." version=""/>
               <string helpurl="fl.text:TLFTextField:borderAlpha:get" name="borderAlpha" object="[fl.text.TLFTextField]" playername="" text=".borderAlpha" tiptext="Specifies the alpha value of the border." version=""/>
               <string helpurl="fl.text:TLFTextField:borderColor:get" name="borderColor" object="[fl.text.TLFTextField]" playername="" text=".borderColor" tiptext="Specifies the color of the text field border." version=""/>
               <string helpurl="fl.text:TLFTextField:borderWidth:get" name="borderWidth" object="[fl.text.TLFTextField]" playername="" text=".borderWidth" tiptext="Specifies the width of the border." version=""/>
               <string helpurl="fl.text:TLFTextField:border:get" name="border" object="[fl.text.TLFTextField]" playername="" text=".border" tiptext="Specifies whether the text field has a border." version=""/>
               <string helpurl="fl.text:TLFTextField:bottomScrollV:get" name="bottomScrollV" object="[fl.text.TLFTextField]" playername="" text=".bottomScrollV" tiptext="An integer (1-based index) that indicates the bottommost line that is currently visible in the specified text field." version=""/>
               <string helpurl="fl.text:TLFTextField:caretIndex:get" name="caretIndex" object="[fl.text.TLFTextField]" playername="" text=".caretIndex" tiptext="The index of the insertion point (caret) position." version=""/>
               <string helpurl="fl.text:TLFTextField:columnCount:get" name="columnCount" object="[fl.text.TLFTextField]" playername="" text=".columnCount" tiptext="Number of text columns (adopts default value if undefined during cascade)." version=""/>
               <string helpurl="fl.text:TLFTextField:columnGap:get" name="columnGap" object="[fl.text.TLFTextField]" playername="" text=".columnGap" tiptext="Specifies the amount of gutter space, in pixels, to leave between the columns (adopts default value if undefined during cascade)." version=""/>
               <string helpurl="fl.text:TLFTextField:columnWidth:get" name="columnWidth" object="[fl.text.TLFTextField]" playername="" text=".columnWidth" tiptext="Column width in pixels (adopts default value if undefined during cascade)." version=""/>
               <string helpurl="fl.text:TLFTextField:condenseWhite:get" name="condenseWhite" object="[fl.text.TLFTextField]" playername="" text=".condenseWhite" tiptext="A Boolean value that specifies whether extra white space (spaces, line breaks, and so on) in a text field with HTML text is removed." version=""/>
               <string helpurl="fl.text:TLFTextField:defaultTextFormat:get" name="defaultTextFormat" object="[fl.text.TLFTextField]" playername="" text=".defaultTextFormat" tiptext="Specifies the format applied to newly inserted text, such as text entered by a user or text inserted with the replaceSelectedText() method." version=""/>
               <string helpurl="fl.text:TLFTextField:direction:get" name="direction" object="[fl.text.TLFTextField]" playername="" text=".direction" tiptext="Specifies the default bidirectional embedding level of the text in the text block." version=""/>
               <string helpurl="fl.text:TLFTextField:displayAsPassword:get" name="displayAsPassword" object="[fl.text.TLFTextField]" playername="" text=".displayAsPassword" tiptext="Specifies whether the text field is a password text field." version=""/>
               <string helpurl="fl.text:TLFTextField:embedFonts:get" name="embedFonts" object="[fl.text.TLFTextField]" playername="" text=".embedFonts" tiptext="Specifies whether to render by using embedded font outlines." version=""/>
               <string helpurl="fl.text:TLFTextField:firstBaselineOffset:get" name="firstBaselineOffset" object="[fl.text.TLFTextField]" playername="" text=".firstBaselineOffset" tiptext="Specifies the baseline position of the first line in the container." version=""/>
               <string helpurl="fl.text:TLFTextField:gridFitType:get" name="gridFitType" object="[fl.text.TLFTextField]" playername="" text=".gridFitType" tiptext="The type of grid fitting used for this text field." version=""/>
               <string helpurl="fl.text:TLFTextField:htmlText:get" name="htmlText" object="[fl.text.TLFTextField]" playername="" text=".htmlText" tiptext="Contains the HTML representation of the text field contents." version=""/>
               <string helpurl="fl.text:TLFTextField:length:get" name="length" object="[fl.text.TLFTextField]" playername="" text=".length" tiptext="The number of characters in a text field." version=""/>
               <string helpurl="fl.text:TLFTextField:maxChars:get" name="maxChars" object="[fl.text.TLFTextField]" playername="" text=".maxChars" tiptext="The maximum number of characters that the text field can contain, as entered by a user." version=""/>
               <string helpurl="fl.text:TLFTextField:maxScrollH:get" name="maxScrollH" object="[fl.text.TLFTextField]" playername="" text=".maxScrollH" tiptext="The maximum value of scrollH." version=""/>
               <string helpurl="fl.text:TLFTextField:maxScrollV:get" name="maxScrollV" object="[fl.text.TLFTextField]" playername="" text=".maxScrollV" tiptext="The maximum value of scrollV." version=""/>
               <string helpurl="fl.text:TLFTextField:mouseWheelEnabled:get" name="mouseWheelEnabled" object="[fl.text.TLFTextField]" playername="" text=".mouseWheelEnabled" tiptext="A Boolean value that indicates whether Flash Player automatically scrolls multiline text fields when the user clicks a text field and rolls the mouse wheel." version=""/>
               <string helpurl="fl.text:TLFTextField:multiline:get" name="multiline" object="[fl.text.TLFTextField]" playername="" text=".multiline" tiptext="Indicates whether text field is a multiline text field." version=""/>
               <string helpurl="fl.text:TLFTextField:numLines:get" name="numLines" object="[fl.text.TLFTextField]" playername="" text=".numLines" tiptext="Defines the number of text lines in a multiline text field." version=""/>
               <string helpurl="fl.text:TLFTextField:paddingBottom:get" name="paddingBottom" object="[fl.text.TLFTextField]" playername="" text=".paddingBottom" tiptext="Botttom inset in pixels (adopts default value if undefined during cascade)." version=""/>
               <string helpurl="fl.text:TLFTextField:paddingLeft:get" name="paddingLeft" object="[fl.text.TLFTextField]" playername="" text=".paddingLeft" tiptext="Left inset in pixels (adopts default value if undefined during cascade)." version=""/>
               <string helpurl="fl.text:TLFTextField:paddingRight:get" name="paddingRight" object="[fl.text.TLFTextField]" playername="" text=".paddingRight" tiptext="Right inset in pixels (adopts default value if undefined during cascade)." version=""/>
               <string helpurl="fl.text:TLFTextField:paddingTop:get" name="paddingTop" object="[fl.text.TLFTextField]" playername="" text=".paddingTop" tiptext="Top inset in pixels (adopts default value if undefined during cascade)." version=""/>
               <string helpurl="fl.text:TLFTextField:restrict:get" name="restrict" object="[fl.text.TLFTextField]" playername="" text=".restrict" tiptext="Indicates the set of characters that a user can enter into the text field." version=""/>
               <string helpurl="fl.text:TLFTextField:scrollH:get" name="scrollH" object="[fl.text.TLFTextField]" playername="" text=".scrollH" tiptext="The current horizontal scrolling position." version=""/>
               <string helpurl="fl.text:TLFTextField:scrollV:get" name="scrollV" object="[fl.text.TLFTextField]" playername="" text=".scrollV" tiptext="The vertical position of text in a text field." version=""/>
               <string helpurl="fl.text:TLFTextField:selectable:get" name="selectable" object="[fl.text.TLFTextField]" playername="" text=".selectable" tiptext="A Boolean value that indicates whether the text field is selectable." version=""/>
               <string helpurl="fl.text:TLFTextField:selectionBeginIndex:get" name="selectionBeginIndex" object="[fl.text.TLFTextField]" playername="" text=".selectionBeginIndex" tiptext="The zero-based character index value of the first character in the current selection." version=""/>
               <string helpurl="fl.text:TLFTextField:selectionEndIndex:get" name="selectionEndIndex" object="[fl.text.TLFTextField]" playername="" text=".selectionEndIndex" tiptext="The zero-based character index value of the last character in the current selection." version=""/>
               <string helpurl="fl.text:TLFTextField:sharpness:get" name="sharpness" object="[fl.text.TLFTextField]" playername="" text=".sharpness" tiptext="Sharpness is not applicable to TLF TextFields." version=""/>
               <string helpurl="fl.text:TLFTextField:styleSheet:get" name="styleSheet" object="[fl.text.TLFTextField]" playername="" text=".styleSheet" tiptext="Style sheets are not supported by TLF TextFields." version=""/>
               <string helpurl="fl.text:TLFTextField:textColor:get" name="textColor" object="[fl.text.TLFTextField]" playername="" text=".textColor" tiptext="The color of the text in a text field, in hexadecimal format." version=""/>
               <string helpurl="fl.text:TLFTextField:textFlow:get" name="textFlow" object="[fl.text.TLFTextField]" playername="" text=".textFlow" tiptext="Use this property to assign formatting from the TLF classes in the flashx packages to the TLFTextField instance." version=""/>
               <string helpurl="fl.text:TLFTextField:textHeight:get" name="textHeight" object="[fl.text.TLFTextField]" playername="" text=".textHeight" tiptext="The height of the text in pixels." version=""/>
               <string helpurl="fl.text:TLFTextField:textWidth:get" name="textWidth" object="[fl.text.TLFTextField]" playername="" text=".textWidth" tiptext="The width of the text in pixels." version=""/>
               <string helpurl="fl.text:TLFTextField:text:get" name="text" object="[fl.text.TLFTextField]" playername="" text=".text" tiptext="A string that is the current text in the text field." version=""/>
               <string helpurl="fl.text:TLFTextField:thickness:get" name="thickness" object="[fl.text.TLFTextField]" playername="" text=".thickness" tiptext="The thickness property is not applicable to the TLF TextField." version=""/>
               <string helpurl="fl.text:TLFTextField:tlfMarkup:get" name="tlfMarkup" object="[fl.text.TLFTextField]" playername="" text=".tlfMarkup" tiptext="Sets or gets the TLF markup of the text in the TLF text field." version=""/>
               <string helpurl="fl.text:TLFTextField:type:get" name="type" object="[fl.text.TLFTextField]" playername="" text=".type" tiptext="The type of the text field." version=""/>
               <string helpurl="fl.text:TLFTextField:useRichTextClipboard:get" name="useRichTextClipboard" object="[fl.text.TLFTextField]" playername="" text=".useRichTextClipboard" tiptext="Specifies whether to copy the text formatting along with the text to the clipboard." version=""/>
               <string helpurl="fl.text:TLFTextField:verticalAlign:get" name="verticalAlign" object="[fl.text.TLFTextField]" playername="" text=".verticalAlign" tiptext="Vertical alignment or justification (adopts default value if undefined during cascade)." version=""/>
               <string helpurl="fl.text:TLFTextField:wordWrap:get" name="wordWrap" object="[fl.text.TLFTextField]" playername="" text=".wordWrap" tiptext="A Boolean value that indicates whether the text field has word wrap." version=""/>
            </folder>
            <folder helpurl="fl.text:TLFTextField" id="Events" name="Events" tiptext="Events for class TLFTextField">
               <string helpurl="fl.text:TLFTextField_flash.events.TextEvent.TEXT_INPUT_textInput" name="textInput" object="[fl.text.TLFTextField]" playername="" text=".addEventListener(%type:String=TextEvent.TEXT_INPUT{TextEvent.TEXT_INPUT,Event.SCROLL,TextEvent.LINK,Event.CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Flash Player dispatches the textInput event when a user enters one or more characters of text." version=""/>
               <string helpurl="fl.text:TLFTextField_flash.events.Event.SCROLL_scroll" name="scroll" object="[fl.text.TLFTextField]" playername="" text=".addEventListener(%type:String=Event.SCROLL{TextEvent.TEXT_INPUT,Event.SCROLL,TextEvent.LINK,Event.CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched by a TextField object after the user scrolls." version=""/>
               <string helpurl="fl.text:TLFTextField_flash.events.TextEvent.LINK_link" name="link" object="[fl.text.TLFTextField]" playername="" text=".addEventListener(%type:String=TextEvent.LINK{TextEvent.TEXT_INPUT,Event.SCROLL,TextEvent.LINK,Event.CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a user clicks a hyperlink in an HTML-enabled text field, where the URL begins with &quot;event:&quot;." version=""/>
               <string helpurl="fl.text:TLFTextField_flash.events.Event.CHANGE_change" name="change" object="[fl.text.TLFTextField]" playername="" text=".addEventListener(%type:String=Event.CHANGE{TextEvent.TEXT_INPUT,Event.SCROLL,TextEvent.LINK,Event.CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched after a control value is modified, unlike the textInput event, which is dispatched before the value is modified." version=""/>
            </folder>
         </folder>
      </folder>
      <folder helpurl="fl.transitions" id="fl.transitions" name="fl.transitions" sort="true" tiptext="Classes for package fl.transitions">
         <folder asAncestors="fl.transitions:Transition,flash.events:EventDispatcher,Object" helpurl="fl.transitions:Iris" id="[fl.transitions.Iris]" index="true" name="Iris" sort="true" tiptext="The Iris class reveals the movie clip object by using an animated mask of a square shape or a circle shape that zooms in or out.">
            <folder helpurl="fl.transitions:Iris" id="Properties" name="Properties" tiptext="Properties for class Iris">
               <string constant="true" helpurl="fl.transitions:Iris:CIRCLE" name="CIRCLE" object="[fl.transitions.Iris]" playername="" text="Iris.CIRCLE" tiptext="Used to specify a circle mask shape for the transition effect." version=""/>
               <string constant="true" helpurl="fl.transitions:Iris:SQUARE" name="SQUARE" object="[fl.transitions.Iris]" playername="" text="Iris.SQUARE" tiptext="Used to specify a square mask shape for the transition effect." version=""/>
            </folder>
         </folder>
         <folder asAncestors="flash.events:EventDispatcher,Object" helpurl="fl.transitions:Transition" id="[fl.transitions.Transition]" index="true" name="Transition" sort="true" tiptext="The Transition class is the base class for all transition classes.">
            <folder helpurl="fl.transitions:Transition" id="Properties" name="Properties" tiptext="Properties for class Transition">
               <string constant="true" helpurl="fl.transitions:Transition:IN" name="IN" object="[fl.transitions.Transition]" playername="" text="Transition.IN" tiptext="Constant for the direction property that determines the type of easing." version=""/>
               <string constant="true" helpurl="fl.transitions:Transition:OUT" name="OUT" object="[fl.transitions.Transition]" playername="" text="Transition.OUT" tiptext="Constant for the direction property that determines the type of easing." version=""/>
               <string helpurl="fl.transitions:Transition:direction:get" name="direction" object="[fl.transitions.Transition]" playername="" text=".direction" tiptext="Determines the easing direction for the Tween instance." version=""/>
               <string helpurl="fl.transitions:Transition:duration:get" name="duration" object="[fl.transitions.Transition]" playername="" text=".duration" tiptext="Determines the length of time for the Tween instance." version=""/>
               <string helpurl="fl.transitions:Transition:easing:get" name="easing" object="[fl.transitions.Transition]" playername="" text=".easing" tiptext="Sets the tweening effect for the animation." version=""/>
            </folder>
         </folder>
         <folder asAncestors="flash.events:EventDispatcher,Object" helpurl="fl.transitions:TransitionManager" id="[fl.transitions.TransitionManager]" index="true" name="TransitionManager" sort="true" tiptext="The TransitionManager class defines animation effects.">
            <folder helpurl="fl.transitions:TransitionManager" id="Methods" name="Methods" tiptext="Methods for class TransitionManager">
               <string constructor="true" helpurl="fl.transitions:TransitionManager:TransitionManager" name="TransitionManager" object="[fl.transitions.TransitionManager]" playername="" text="new TransitionManager(%content:flash.display:MovieClip%)" tiptext="Constructor function for creating a new TransitionManager instance." version="1.0"/>
               <string helpurl="fl.transitions:TransitionManager:startTransition" name="startTransition" object="[fl.transitions.TransitionManager]" playername="" text=".startTransition(%transParams:Object%):fl.transitions:Transition" tiptext="Creates a transition instance and starts it." version="1.0"/>
               <string helpurl="fl.transitions:TransitionManager:start" name="start" object="[fl.transitions.TransitionManager]" playername="" static="true" text="TransitionManager.start(%content:flash.display:MovieClip,transParams:Object%):fl.transitions:Transition" tiptext="Creates a new TransitionManager instance, designates the target object, applies a transition, and starts the transition." version="1.0"/>
            </folder>
            <folder helpurl="fl.transitions:TransitionManager" id="Properties" name="Properties" tiptext="Properties for class TransitionManager">
               <string helpurl="fl.transitions:TransitionManager:contentAppearance:get" name="contentAppearance" object="[fl.transitions.TransitionManager]" playername="" text=".contentAppearance" tiptext="An object that contains the saved visual properties of the content (target movie clip) to which the transitions will be applied." version=""/>
               <string helpurl="fl.transitions:TransitionManager:content:get" name="content" object="[fl.transitions.TransitionManager]" playername="" text=".content" tiptext="The movie clip instance to which TransitionManager is to apply a transition." version=""/>
            </folder>
         </folder>
         <folder asAncestors="flash.events:EventDispatcher,Object" helpurl="fl.transitions:Tween" id="[fl.transitions.Tween]" index="true" name="Tween" sort="true" tiptext="The Tween class lets you use ActionScript to move, resize, and fade movie clips by specifying a property of the target movie clip to animate over a number of frames or seconds.">
            <folder helpurl="fl.transitions:Tween" id="Methods" name="Methods" tiptext="Methods for class Tween">
               <string constructor="true" helpurl="fl.transitions:Tween:Tween" name="Tween" object="[fl.transitions.Tween]" playername="" text="new Tween(%obj:Object,prop:String,func:Function,begin:Number,finish:Number,duration:Number[,useSeconds:Boolean=false]%)" tiptext="Creates an instance of the Tween class." version="1.0"/>
               <string helpurl="fl.transitions:Tween:continueTo" name="continueTo" object="[fl.transitions.Tween]" playername="" text=".continueTo(%finish:Number,duration:Number%):void" tiptext="Instructs the tweened animation to continue tweening from its current animation point to a new finish and duration point." version="1.0"/>
               <string helpurl="fl.transitions:Tween:fforward" name="fforward" object="[fl.transitions.Tween]" playername="" text=".fforward(%%):void" tiptext="Forwards the tweened animation directly to the final value of the tweened animation." version="1.0"/>
               <string helpurl="fl.transitions:Tween:nextFrame" name="nextFrame" object="[fl.transitions.Tween]" playername="" text=".nextFrame(%%):void" tiptext="Forwards the tweened animation to the next frame of an animation that was stopped." version="1.0"/>
               <string helpurl="fl.transitions:Tween:prevFrame" name="prevFrame" object="[fl.transitions.Tween]" playername="" text=".prevFrame(%%):void" tiptext="Plays the previous frame of the tweened animation from the current stopping point of an animation that was stopped." version="1.0"/>
               <string helpurl="fl.transitions:Tween:resume" name="resume" object="[fl.transitions.Tween]" playername="" text=".resume(%%):void" tiptext="Resumes the play of a tweened animation that has been stopped." version="1.0"/>
               <string helpurl="fl.transitions:Tween:rewind" name="rewind" object="[fl.transitions.Tween]" playername="" text=".rewind(%[t:Number=0]%):void" tiptext="Moves the play of a tweened animation back to its starting value." version="1.0"/>
               <string helpurl="fl.transitions:Tween:start" name="start" object="[fl.transitions.Tween]" playername="" text=".start(%%):void" tiptext="Starts the play of a tweened animation from its starting point." version="1.0"/>
               <string helpurl="fl.transitions:Tween:stop" name="stop" object="[fl.transitions.Tween]" playername="" text=".stop(%%):void" tiptext="Stops the play of a tweened animation at its current value." version="1.0"/>
               <string helpurl="fl.transitions:Tween:yoyo" name="yoyo" object="[fl.transitions.Tween]" playername="" text=".yoyo(%%):void" tiptext="Instructs the tweened animation to play in reverse from its last direction of tweened property increments." version="1.0"/>
            </folder>
            <folder helpurl="fl.transitions:Tween" id="Properties" name="Properties" tiptext="Properties for class Tween">
               <string helpurl="fl.transitions:Tween:begin" name="begin" object="[fl.transitions.Tween]" playername="" text=".begin" tiptext="The initial value of the target object's designated property before the tween starts." version=""/>
               <string helpurl="fl.transitions:Tween:func" name="func" object="[fl.transitions.Tween]" playername="" text=".func" tiptext="The easing function which is used with the tween." version=""/>
               <string helpurl="fl.transitions:Tween:isPlaying" name="isPlaying" object="[fl.transitions.Tween]" playername="" text=".isPlaying" tiptext="Indicates whether the tween is currently playing." version=""/>
               <string helpurl="fl.transitions:Tween:looping" name="looping" object="[fl.transitions.Tween]" playername="" text=".looping" tiptext="Indicates whether the tween will loop." version=""/>
               <string helpurl="fl.transitions:Tween:obj" name="obj" object="[fl.transitions.Tween]" playername="" text=".obj" tiptext="The target object that is being tweened." version=""/>
               <string helpurl="fl.transitions:Tween:prop" name="prop" object="[fl.transitions.Tween]" playername="" text=".prop" tiptext="The name of the property affected by the tween of the target object." version=""/>
               <string helpurl="fl.transitions:Tween:useSeconds" name="useSeconds" object="[fl.transitions.Tween]" playername="" text=".useSeconds" tiptext="Indicates whether the tween plays over a period of frames or seconds." version=""/>
               <string helpurl="fl.transitions:Tween:FPS:get" name="FPS" object="[fl.transitions.Tween]" playername="" text=".FPS" tiptext="The number of frames per second calculated into the tweened animation." version=""/>
               <string helpurl="fl.transitions:Tween:duration:get" name="duration" object="[fl.transitions.Tween]" playername="" text=".duration" tiptext="The duration of the tweened animation in frames or seconds." version=""/>
               <string helpurl="fl.transitions:Tween:finish:get" name="finish" object="[fl.transitions.Tween]" playername="" text=".finish" tiptext="A number indicating the ending value of the target object property that is to be tweened." version=""/>
               <string helpurl="fl.transitions:Tween:position:get" name="position" object="[fl.transitions.Tween]" playername="" text=".position" tiptext="The current value of the target object property being tweened." version=""/>
               <string helpurl="fl.transitions:Tween:time:get" name="time" object="[fl.transitions.Tween]" playername="" text=".time" tiptext="The current time within the duration of the animation." version=""/>
            </folder>
            <folder helpurl="fl.transitions:Tween" id="Events" name="Events" tiptext="Events for class Tween">
               <string helpurl="fl.transitions:Tween_fl.transitions.TweenEvent.MOTION_STOP_motionStop" name="motionStop" object="[fl.transitions.Tween]" playername="" text=".addEventListener(%type:String=TweenEvent.MOTION_STOP{TweenEvent.MOTION_STOP,TweenEvent.MOTION_START,TweenEvent.MOTION_RESUME,TweenEvent.MOTION_LOOP,TweenEvent.MOTION_FINISH,TweenEvent.MOTION_CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Indicates that the Tween has been stopped with an explicit call to Tween.stop()." version=""/>
               <string helpurl="fl.transitions:Tween_fl.transitions.TweenEvent.MOTION_START_motionStart" name="motionStart" object="[fl.transitions.Tween]" playername="" text=".addEventListener(%type:String=TweenEvent.MOTION_START{TweenEvent.MOTION_STOP,TweenEvent.MOTION_START,TweenEvent.MOTION_RESUME,TweenEvent.MOTION_LOOP,TweenEvent.MOTION_FINISH,TweenEvent.MOTION_CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Indicates that the motion has started playing." version=""/>
               <string helpurl="fl.transitions:Tween_fl.transitions.TweenEvent.MOTION_RESUME_motionResume" name="motionResume" object="[fl.transitions.Tween]" playername="" text=".addEventListener(%type:String=TweenEvent.MOTION_RESUME{TweenEvent.MOTION_STOP,TweenEvent.MOTION_START,TweenEvent.MOTION_RESUME,TweenEvent.MOTION_LOOP,TweenEvent.MOTION_FINISH,TweenEvent.MOTION_CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Indicates that the Tween has resumed playing after being paused." version=""/>
               <string helpurl="fl.transitions:Tween_fl.transitions.TweenEvent.MOTION_LOOP_motionLoop" name="motionLoop" object="[fl.transitions.Tween]" playername="" text=".addEventListener(%type:String=TweenEvent.MOTION_LOOP{TweenEvent.MOTION_STOP,TweenEvent.MOTION_START,TweenEvent.MOTION_RESUME,TweenEvent.MOTION_LOOP,TweenEvent.MOTION_FINISH,TweenEvent.MOTION_CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Indicates that the Tween has restarted playing from the beginning in looping mode." version=""/>
               <string helpurl="fl.transitions:Tween_fl.transitions.TweenEvent.MOTION_FINISH_motionFinish" name="motionFinish" object="[fl.transitions.Tween]" playername="" text=".addEventListener(%type:String=TweenEvent.MOTION_FINISH{TweenEvent.MOTION_STOP,TweenEvent.MOTION_START,TweenEvent.MOTION_RESUME,TweenEvent.MOTION_LOOP,TweenEvent.MOTION_FINISH,TweenEvent.MOTION_CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Indicates that the Tween has reached the end and finished." version=""/>
               <string helpurl="fl.transitions:Tween_fl.transitions.TweenEvent.MOTION_CHANGE_motionChange" name="motionChange" object="[fl.transitions.Tween]" playername="" text=".addEventListener(%type:String=TweenEvent.MOTION_CHANGE{TweenEvent.MOTION_STOP,TweenEvent.MOTION_START,TweenEvent.MOTION_RESUME,TweenEvent.MOTION_LOOP,TweenEvent.MOTION_FINISH,TweenEvent.MOTION_CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Indicates that the Tween has changed and the screen has been updated." version=""/>
            </folder>
         </folder>
         <folder asAncestors="flash.events:Event,Object" helpurl="fl.transitions:TweenEvent" id="[fl.transitions.TweenEvent]" index="true" name="TweenEvent" sort="true" tiptext="The TweenEvent class represents events that are broadcast by the fl.transitions.Tween class.">
            <folder helpurl="fl.transitions:TweenEvent" id="Methods" name="Methods" tiptext="Methods for class TweenEvent">
               <string constructor="true" helpurl="fl.transitions:TweenEvent:TweenEvent" name="TweenEvent" object="[fl.transitions.TweenEvent]" playername="" text="new TweenEvent(%type:String,time:Number,position:Number[,bubbles:Boolean=false,cancelable:Boolean=false]%)" tiptext="Constructor function for a TweenEvent object." version="1.0"/>
            </folder>
            <folder helpurl="fl.transitions:TweenEvent" id="Properties" name="Properties" tiptext="Properties for class TweenEvent">
               <string constant="true" helpurl="fl.transitions:TweenEvent:MOTION_CHANGE" name="MOTION_CHANGE" object="[fl.transitions.TweenEvent]" playername="" text="TweenEvent.MOTION_CHANGE" tiptext="Indicates that the Tween has changed and the screen has been updated." version=""/>
               <string constant="true" helpurl="fl.transitions:TweenEvent:MOTION_FINISH" name="MOTION_FINISH" object="[fl.transitions.TweenEvent]" playername="" text="TweenEvent.MOTION_FINISH" tiptext="Indicates that the Tween has reached the end and finished." version=""/>
               <string constant="true" helpurl="fl.transitions:TweenEvent:MOTION_LOOP" name="MOTION_LOOP" object="[fl.transitions.TweenEvent]" playername="" text="TweenEvent.MOTION_LOOP" tiptext="Indicates that the Tween has restarted playing from the beginning in looping mode." version=""/>
               <string constant="true" helpurl="fl.transitions:TweenEvent:MOTION_RESUME" name="MOTION_RESUME" object="[fl.transitions.TweenEvent]" playername="" text="TweenEvent.MOTION_RESUME" tiptext="Indicates that the Tween has resumed playing after being paused." version=""/>
               <string constant="true" helpurl="fl.transitions:TweenEvent:MOTION_START" name="MOTION_START" object="[fl.transitions.TweenEvent]" playername="" text="TweenEvent.MOTION_START" tiptext="Indicates that the motion has started playing." version=""/>
               <string constant="true" helpurl="fl.transitions:TweenEvent:MOTION_STOP" name="MOTION_STOP" object="[fl.transitions.TweenEvent]" playername="" text="TweenEvent.MOTION_STOP" tiptext="Indicates that the Tween has been stopped with an explicit call to Tween.stop()." version=""/>
               <string helpurl="fl.transitions:TweenEvent:position" name="position" object="[fl.transitions.TweenEvent]" playername="" text=".position" tiptext="The value of the property controlled by the Tween, when the event occurred." version=""/>
               <string helpurl="fl.transitions:TweenEvent:time" name="time" object="[fl.transitions.TweenEvent]" playername="" text=".time" tiptext="The time of the Tween when the event occurred." version=""/>
            </folder>
         </folder>
      </folder>
      <folder helpurl="fl.transitions.easing" id="fl.transitions.easing" name="fl.transitions.easing" sort="true" tiptext="Classes for package fl.transitions.easing">
         <folder asAncestors="Object" helpurl="fl.transitions.easing:Back" id="[fl.transitions.easing.Back]" index="true" name="Back" sort="true" tiptext="The Back class defines three easing functions to implement motion with ActionScript animations.">
            <folder helpurl="fl.transitions.easing:Back" id="Methods" name="Methods" tiptext="Methods for class Back">
               <string helpurl="fl.transitions.easing:Back:easeInOut" name="easeInOut" object="[fl.transitions.easing.Back]" playername="" static="true" text="Back.easeInOut(%t:Number,b:Number,c:Number,d:Number[,s:Number=0]%):Number" tiptext="The easeInOut() method combines the motion of the easeIn() and easeOut() methods to start the motion by backtracking, then reversing direction and moving toward the target, overshooting the target slightly, reversing direction again, and then moving back toward the target." version="1.0"/>
               <string helpurl="fl.transitions.easing:Back:easeIn" name="easeIn" object="[fl.transitions.easing.Back]" playername="" static="true" text="Back.easeIn(%t:Number,b:Number,c:Number,d:Number[,s:Number=0]%):Number" tiptext="The easeIn() method starts the motion by backtracking and then reversing direction and moving toward the target." version="1.0"/>
               <string helpurl="fl.transitions.easing:Back:easeOut" name="easeOut" object="[fl.transitions.easing.Back]" playername="" static="true" text="Back.easeOut(%t:Number,b:Number,c:Number,d:Number[,s:Number=0]%):Number" tiptext="The easeOut() method starts the motion by moving towards the target, overshooting it slightly, and then reversing direction back toward the target." version="1.0"/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="fl.transitions.easing:Bounce" id="[fl.transitions.easing.Bounce]" index="true" name="Bounce" sort="true" tiptext="The Bounce class defines three easing functions to implement bouncing motion with ActionScript animation, similar to a ball falling and bouncing on a floor with several decaying rebounds.">
            <folder helpurl="fl.transitions.easing:Bounce" id="Methods" name="Methods" tiptext="Methods for class Bounce">
               <string helpurl="fl.transitions.easing:Bounce:easeInOut" name="easeInOut" object="[fl.transitions.easing.Bounce]" playername="" static="true" text="Bounce.easeInOut(%t:Number,b:Number,c:Number,d:Number%):Number" tiptext="The easeInOut() method combines the motion of the easeIn() and easeOut() methods to start the bounce motion slowly, accelerate motion, then decelerate." version="1.0"/>
               <string helpurl="fl.transitions.easing:Bounce:easeIn" name="easeIn" object="[fl.transitions.easing.Bounce]" playername="" static="true" text="Bounce.easeIn(%t:Number,b:Number,c:Number,d:Number%):Number" tiptext="The easeIn() method starts the bounce motion slowly and then accelerates motion as it executes." version="1.0"/>
               <string helpurl="fl.transitions.easing:Bounce:easeOut" name="easeOut" object="[fl.transitions.easing.Bounce]" playername="" static="true" text="Bounce.easeOut(%t:Number,b:Number,c:Number,d:Number%):Number" tiptext="The easeOut() method starts the bounce motion fast and then decelerates motion as it executes." version="1.0"/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="fl.transitions.easing:Elastic" id="[fl.transitions.easing.Elastic]" index="true" name="Elastic" sort="true" tiptext="The Elastic class defines three easing functions to implement motion with ActionScript animation, where the motion is defined by an exponentially decaying sine wave.">
            <folder helpurl="fl.transitions.easing:Elastic" id="Methods" name="Methods" tiptext="Methods for class Elastic">
               <string helpurl="fl.transitions.easing:Elastic:easeInOut" name="easeInOut" object="[fl.transitions.easing.Elastic]" playername="" static="true" text="Elastic.easeInOut(%t:Number,b:Number,c:Number,d:Number[,a:Number=0,p:Number=0]%):Number" tiptext="The easeInOut() method combines the motion of the easeIn() and easeOut() methods to start the motion slowly, accelerate motion, then decelerate." version="1.0"/>
               <string helpurl="fl.transitions.easing:Elastic:easeIn" name="easeIn" object="[fl.transitions.easing.Elastic]" playername="" static="true" text="Elastic.easeIn(%t:Number,b:Number,c:Number,d:Number[,a:Number=0,p:Number=0]%):Number" tiptext="The easeIn() method starts motion slowly and then accelerates motion as it executes." version="1.0"/>
               <string helpurl="fl.transitions.easing:Elastic:easeOut" name="easeOut" object="[fl.transitions.easing.Elastic]" playername="" static="true" text="Elastic.easeOut(%t:Number,b:Number,c:Number,d:Number[,a:Number=0,p:Number=0]%):Number" tiptext="The easeOut() method starts motion fast and then decelerates motion as it executes." version="1.0"/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="fl.transitions.easing:None" id="[fl.transitions.easing.None]" index="true" name="None" sort="true" tiptext="The None class defines easing functions to implement nonaccelerated motion with ActionScript animations.">
            <folder helpurl="fl.transitions.easing:None" id="Methods" name="Methods" tiptext="Methods for class None">
               <string helpurl="fl.transitions.easing:None:easeInOut" name="easeInOut" object="[fl.transitions.easing.None]" playername="" static="true" text="None.easeInOut(%t:Number,b:Number,c:Number,d:Number%):Number" tiptext="The easeInOut() method defines a constant motion, with no acceleration." version="1.0"/>
               <string helpurl="fl.transitions.easing:None:easeIn" name="easeIn" object="[fl.transitions.easing.None]" playername="" static="true" text="None.easeIn(%t:Number,b:Number,c:Number,d:Number%):Number" tiptext="The easeIn() method defines a constant motion, with no acceleration." version="1.0"/>
               <string helpurl="fl.transitions.easing:None:easeNone" name="easeNone" object="[fl.transitions.easing.None]" playername="" static="true" text="None.easeNone(%t:Number,b:Number,c:Number,d:Number%):Number" tiptext="The easeNone() method defines a constant motion, with no acceleration." version="1.0"/>
               <string helpurl="fl.transitions.easing:None:easeOut" name="easeOut" object="[fl.transitions.easing.None]" playername="" static="true" text="None.easeOut(%t:Number,b:Number,c:Number,d:Number%):Number" tiptext="The easeOut() method defines a constant motion, with no acceleration." version="1.0"/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="fl.transitions.easing:Regular" id="[fl.transitions.easing.Regular]" index="true" name="Regular" sort="true" tiptext="The Regular class defines three easing functions to implement accelerated motion with ActionScript animations.">
            <folder helpurl="fl.transitions.easing:Regular" id="Methods" name="Methods" tiptext="Methods for class Regular">
               <string helpurl="fl.transitions.easing:Regular:easeInOut" name="easeInOut" object="[fl.transitions.easing.Regular]" playername="" static="true" text="Regular.easeInOut(%t:Number,b:Number,c:Number,d:Number%):Number" tiptext="The easeInOut() method combines the motion of the easeIn() and easeOut() methods to start the motion from a zero velocity, accelerate motion, then decelerate to a zero velocity." version="1.0"/>
               <string helpurl="fl.transitions.easing:Regular:easeIn" name="easeIn" object="[fl.transitions.easing.Regular]" playername="" static="true" text="Regular.easeIn(%t:Number,b:Number,c:Number,d:Number%):Number" tiptext="The easeIn() method starts motion from a zero velocity and then accelerates motion as it executes." version="1.0"/>
               <string helpurl="fl.transitions.easing:Regular:easeOut" name="easeOut" object="[fl.transitions.easing.Regular]" playername="" static="true" text="Regular.easeOut(%t:Number,b:Number,c:Number,d:Number%):Number" tiptext="The easeOut() method starts motion fast and then decelerates motion to a zero velocity as it executes." version="1.0"/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="fl.transitions.easing:Strong" id="[fl.transitions.easing.Strong]" index="true" name="Strong" sort="true" tiptext="The Strong class defines three easing functions to implement motion with ActionScript animation.">
            <folder helpurl="fl.transitions.easing:Strong" id="Methods" name="Methods" tiptext="Methods for class Strong">
               <string helpurl="fl.transitions.easing:Strong:easeInOut" name="easeInOut" object="[fl.transitions.easing.Strong]" playername="" static="true" text="Strong.easeInOut(%t:Number,b:Number,c:Number,d:Number%):Number" tiptext="The easeInOut() method combines the motion of the easeIn() and easeOut() methods to start the motion from a zero velocity, accelerate motion, then decelerate to a zero velocity." version="1.0"/>
               <string helpurl="fl.transitions.easing:Strong:easeIn" name="easeIn" object="[fl.transitions.easing.Strong]" playername="" static="true" text="Strong.easeIn(%t:Number,b:Number,c:Number,d:Number%):Number" tiptext="The easeIn() method starts motion from zero velocity and then accelerates motion as it executes." version="1.0"/>
               <string helpurl="fl.transitions.easing:Strong:easeOut" name="easeOut" object="[fl.transitions.easing.Strong]" playername="" static="true" text="Strong.easeOut(%t:Number,b:Number,c:Number,d:Number%):Number" tiptext="The easeOut() method starts motion fast and then decelerates motion to a zero velocity as it executes." version="1.0"/>
            </folder>
         </folder>
      </folder>
      <folder helpurl="fl.video" id="fl.video" name="fl.video" sort="true" tiptext="Classes for package fl.video">
         <folder asAncestors="fl.video:LayoutEvent,flash.events:Event,Object" helpurl="fl.video:AutoLayoutEvent" id="[fl.video.AutoLayoutEvent]" index="true" name="AutoLayoutEvent" sort="true" tiptext="Flash&amp;#xAE; Player dispatches an AutoLayoutEvent object when the video player is resized and laid out automatically.">
            <folder helpurl="fl.video:AutoLayoutEvent" id="Methods" name="Methods" tiptext="Methods for class AutoLayoutEvent">
               <string constructor="true" helpurl="fl.video:AutoLayoutEvent:AutoLayoutEvent" name="AutoLayoutEvent" object="[fl.video.AutoLayoutEvent]" playername="" text="new AutoLayoutEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,oldBounds:flash.geom:Rectangle=null,oldRegistrationBounds:flash.geom:Rectangle=null,vp:uint=0]%)" tiptext="Creates an Event object that contains information about autoLayout events." version="1.0"/>
            </folder>
            <folder helpurl="fl.video:AutoLayoutEvent" id="Properties" name="Properties" tiptext="Properties for class AutoLayoutEvent">
               <string constant="true" helpurl="fl.video:AutoLayoutEvent:AUTO_LAYOUT" name="AUTO_LAYOUT" object="[fl.video.AutoLayoutEvent]" playername="" text="AutoLayoutEvent.AUTO_LAYOUT" tiptext="Defines the value of the type property of an autoLayout event object." version=""/>
               <string helpurl="fl.video:AutoLayoutEvent:vp:get" name="vp" object="[fl.video.AutoLayoutEvent]" playername="" text=".vp" tiptext="The index of the VideoPlayer object involved in this event." version=""/>
            </folder>
         </folder>
         <folder asAncestors="flash.events:Event,Object" helpurl="fl.video:CaptionChangeEvent" id="[fl.video.CaptionChangeEvent]" index="true" name="CaptionChangeEvent" sort="true" tiptext="The CaptionChangeEvent is dispatched any time a caption is added or removed from the caption target text field.">
            <folder helpurl="fl.video:CaptionChangeEvent" id="Methods" name="Methods" tiptext="Methods for class CaptionChangeEvent">
               <string constructor="true" helpurl="fl.video:CaptionChangeEvent:CaptionChangeEvent" name="CaptionChangeEvent" object="[fl.video.CaptionChangeEvent]" playername="" text="new CaptionChangeEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,added:Boolean=true,captionCuePointObject:Object=null]%)" tiptext="Creates an Event object that contains information about captionChange events." version="9.0.28.0"/>
            </folder>
            <folder helpurl="fl.video:CaptionChangeEvent" id="Properties" name="Properties" tiptext="Properties for class CaptionChangeEvent">
               <string constant="true" helpurl="fl.video:CaptionChangeEvent:CAPTION_CHANGE" name="CAPTION_CHANGE" object="[fl.video.CaptionChangeEvent]" playername="" text="CaptionChangeEvent.CAPTION_CHANGE" tiptext="Defines the value of the type property of a captionChange event object." version=""/>
               <string helpurl="fl.video:CaptionChangeEvent:added:get" name="added" object="[fl.video.CaptionChangeEvent]" playername="" text=".added" tiptext="A Boolean value that determines whether the caption was added or removed." version=""/>
               <string helpurl="fl.video:CaptionChangeEvent:captionCuePointObject:get" name="captionCuePointObject" object="[fl.video.CaptionChangeEvent]" playername="" text=".captionCuePointObject" tiptext="The cue point object for the caption that was added or removed." version=""/>
            </folder>
         </folder>
         <folder asAncestors="flash.events:Event,Object" helpurl="fl.video:CaptionTargetEvent" id="[fl.video.CaptionTargetEvent]" index="true" name="CaptionTargetEvent" sort="true" tiptext="Type for the captionTargetCreated event, dispatched after the captionTargetCreated event is created automatically and before any captions have been added to it.">
            <folder helpurl="fl.video:CaptionTargetEvent" id="Methods" name="Methods" tiptext="Methods for class CaptionTargetEvent">
               <string constructor="true" helpurl="fl.video:CaptionTargetEvent:CaptionTargetEvent" name="CaptionTargetEvent" object="[fl.video.CaptionTargetEvent]" playername="" text="new CaptionTargetEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,captionTarget:flash.display:DisplayObject=null]%)" tiptext="Creates an Event object that contains information about caption target events." version="9.0.28.0"/>
            </folder>
            <folder helpurl="fl.video:CaptionTargetEvent" id="Properties" name="Properties" tiptext="Properties for class CaptionTargetEvent">
               <string constant="true" helpurl="fl.video:CaptionTargetEvent:CAPTION_TARGET_CREATED" name="CAPTION_TARGET_CREATED" object="[fl.video.CaptionTargetEvent]" playername="" text="CaptionTargetEvent.CAPTION_TARGET_CREATED" tiptext="The CaptionTargetEvent.CAPTION_TARGET_CREATED constant defines the value of the type property of a captionTargetCreated event object." version=""/>
               <string helpurl="fl.video:CaptionTargetEvent:captionTarget:get" name="captionTarget" object="[fl.video.CaptionTargetEvent]" playername="" text=".captionTarget" tiptext="The caption target from the FLVPlaybackCaptioning instance property of the same name." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="fl.video:CuePointType" id="[fl.video.CuePointType]" index="true" name="CuePointType" sort="true" tiptext="The CuePointType class provides constant values for the type property on the info object of a MetadataEvent instance of type CUE_POINT.">
            <folder helpurl="fl.video:CuePointType" id="Properties" name="Properties" tiptext="Properties for class CuePointType">
               <string constant="true" helpurl="fl.video:CuePointType:ACTIONSCRIPT" name="ACTIONSCRIPT" object="[fl.video.CuePointType]" playername="" text="CuePointType.ACTIONSCRIPT" tiptext="Defines the value of the type parameter of the findCuePoint() and findNearestCuePoint() methods." version=""/>
               <string constant="true" helpurl="fl.video:CuePointType:ALL" name="ALL" object="[fl.video.CuePointType]" playername="" text="CuePointType.ALL" tiptext="Defines the value of the type parameter of the findCuePoint() and findNearestCuePoint() methods." version=""/>
               <string constant="true" helpurl="fl.video:CuePointType:EVENT" name="EVENT" object="[fl.video.CuePointType]" playername="" text="CuePointType.EVENT" tiptext="Defines the value of the type parameter of the findCuePoint() and findNearestCuePoint() methods." version=""/>
               <string constant="true" helpurl="fl.video:CuePointType:FLV" name="FLV" object="[fl.video.CuePointType]" playername="" text="CuePointType.FLV" tiptext="Defines the value of the type parameter of the findCuePoint() and findNearestCuePoint() methods." version=""/>
               <string constant="true" helpurl="fl.video:CuePointType:NAVIGATION" name="NAVIGATION" object="[fl.video.CuePointType]" playername="" text="CuePointType.NAVIGATION" tiptext="Defines the value of the type parameter of the findCuePoint() and findNearestCuePoint() methods." version=""/>
            </folder>
         </folder>
         <folder asAncestors="flash.display:Sprite,flash.display:DisplayObjectContainer,flash.display:InteractiveObject,flash.display:DisplayObject,flash.events:EventDispatcher,Object" helpurl="fl.video:FLVPlayback" id="[fl.video.FLVPlayback]" index="true" name="FLVPlayback" sort="true" tiptext="FLVPlayback extends the Sprite class and wraps a VideoPlayer object.">
            <folder helpurl="fl.video:FLVPlayback" id="Methods" name="Methods" tiptext="Methods for class FLVPlayback">
               <string constructor="true" helpurl="fl.video:FLVPlayback:FLVPlayback" name="FLVPlayback" object="[fl.video.FLVPlayback]" playername="" text="new FLVPlayback(%%)" tiptext="FLVPlayback constructor" version="1.0"/>
               <string helpurl="fl.video:FLVPlayback:addASCuePoint" name="addASCuePoint" object="[fl.video.FLVPlayback]" playername="" text=".addASCuePoint(%timeOrCuePoint:*[,name:String=null,parameters:Object=null]%):Object" tiptext="Adds an ActionScript cue point and has the same effect as adding an ActionScript cue point using the Cue Points dialog box, except that it occurs when an application executes rather than during application development." version="1.0"/>
               <string helpurl="fl.video:FLVPlayback:assignTabIndexes" name="assignTabIndexes" object="[fl.video.FLVPlayback]" playername="" text=".assignTabIndexes(%startTabIndex:int%):int" tiptext="Assigns a tabIndex value to each of the FLVPlayback controls by sorting them by position horizontally left to right." version="1.0"/>
               <string helpurl="fl.video:FLVPlayback:bringVideoPlayerToFront" name="bringVideoPlayerToFront" object="[fl.video.FLVPlayback]" playername="" text=".bringVideoPlayerToFront(%index:uint%):void" tiptext="Brings a video player to the front of the stack of video players." version="1.0"/>
               <string helpurl="fl.video:FLVPlayback:closeVideoPlayer" name="closeVideoPlayer" object="[fl.video.FLVPlayback]" playername="" text=".closeVideoPlayer(%index:uint%):void" tiptext="Closes NetStream and deletes the video player specified by the index parameter." version="1.0"/>
               <string helpurl="fl.video:FLVPlayback:enterFullScreenDisplayState" name="enterFullScreenDisplayState" object="[fl.video.FLVPlayback]" playername="" text=".enterFullScreenDisplayState(%%):void" tiptext="Sets the FLVPlayback video player to full screen." version="9.0.115.0"/>
               <string helpurl="fl.video:FLVPlayback:findCuePoint" name="findCuePoint" object="[fl.video.FLVPlayback]" playername="" text=".findCuePoint(%timeNameOrCuePoint:*[,type:String=unknown]%):Object" tiptext="Finds the cue point of the type specified by the type parameter and having the time, name, or combination of time and name that you specify through the parameters." version="1.0"/>
               <string helpurl="fl.video:FLVPlayback:findNearestCuePoint" name="findNearestCuePoint" object="[fl.video.FLVPlayback]" playername="" text=".findNearestCuePoint(%timeNameOrCuePoint:*[,type:String=unknown]%):Object" tiptext="Finds a cue point of the specified type that matches or is earlier than the time that you specify." version="1.0"/>
               <string helpurl="fl.video:FLVPlayback:findNextCuePointWithName" name="findNextCuePointWithName" object="[fl.video.FLVPlayback]" playername="" text=".findNextCuePointWithName(%cuePoint:Object%):Object" tiptext="Finds the next cue point in my_cuePoint.array that has the same name as my_cuePoint.name." version="1.0"/>
               <string helpurl="fl.video:FLVPlayback:getVideoPlayer" name="getVideoPlayer" object="[fl.video.FLVPlayback]" playername="" text=".getVideoPlayer(%index:Number%):fl.video:VideoPlayer" tiptext="Gets the video player specified by the index parameter." version="1.0"/>
               <string helpurl="fl.video:FLVPlayback:isFLVCuePointEnabled" name="isFLVCuePointEnabled" object="[fl.video.FLVPlayback]" playername="" text=".isFLVCuePointEnabled(%timeNameOrCuePoint:*%):Boolean" tiptext="Returns false if the FLV file embedded cue point is disabled." version="1.0"/>
               <string helpurl="fl.video:FLVPlayback:load" name="load" object="[fl.video.FLVPlayback]" playername="" text=".load(%source:String[,totalTime:Number=unknown,isLive:Boolean=false]%):void" tiptext="load method" version="1.0"/>
               <string helpurl="fl.video:FLVPlayback:pause" name="pause" object="[fl.video.FLVPlayback]" playername="" text=".pause(%%):void" tiptext="pause method" version="1.0"/>
               <string helpurl="fl.video:FLVPlayback:playWhenEnoughDownloaded" name="playWhenEnoughDownloaded" object="[fl.video.FLVPlayback]" playername="" text=".playWhenEnoughDownloaded(%%):void" tiptext="playWhenEnoughDownloaded method" version="1.0"/>
               <string helpurl="fl.video:FLVPlayback:play" name="play" object="[fl.video.FLVPlayback]" playername="" text=".play(%[source:String=null,totalTime:Number=unknown,isLive:Boolean=false]%):void" tiptext="play method" version="1.0"/>
               <string helpurl="fl.video:FLVPlayback:removeASCuePoint" name="removeASCuePoint" object="[fl.video.FLVPlayback]" playername="" text=".removeASCuePoint(%timeNameOrCuePoint:*%):Object" tiptext="Removes an ActionScript cue point from the currently loaded FLV file." version="1.0"/>
               <string helpurl="fl.video:FLVPlayback:seekPercent" name="seekPercent" object="[fl.video.FLVPlayback]" playername="" text=".seekPercent(%percent:Number%):void" tiptext="seekPercent method" version="1.0"/>
               <string helpurl="fl.video:FLVPlayback:seekSeconds" name="seekSeconds" object="[fl.video.FLVPlayback]" playername="" text=".seekSeconds(%time:Number%):void" tiptext="seekSeconds method" version="1.0"/>
               <string helpurl="fl.video:FLVPlayback:seekToNavCuePoint" name="seekToNavCuePoint" object="[fl.video.FLVPlayback]" playername="" text=".seekToNavCuePoint(%timeNameOrCuePoint:*%):void" tiptext="Seeks to a navigation cue point that matches the specified time, name, or time and name." version="1.0"/>
               <string helpurl="fl.video:FLVPlayback:seekToNextNavCuePoint" name="seekToNextNavCuePoint" object="[fl.video.FLVPlayback]" playername="" text=".seekToNextNavCuePoint(%[time:Number=unknown]%):void" tiptext="Seeks to the next navigation cue point, based on the current value of the playheadTime property." version="1.0"/>
               <string helpurl="fl.video:FLVPlayback:seekToPrevNavCuePoint" name="seekToPrevNavCuePoint" object="[fl.video.FLVPlayback]" playername="" text=".seekToPrevNavCuePoint(%[time:Number=unknown]%):void" tiptext="Seeks to the previous navigation cue point, based on the current value of the playheadTime property." version="1.0"/>
               <string helpurl="fl.video:FLVPlayback:seek" name="seek" object="[fl.video.FLVPlayback]" playername="" text=".seek(%time:Number%):void" tiptext="seek method" version="1.0"/>
               <string helpurl="fl.video:FLVPlayback:setFLVCuePointEnabled" name="setFLVCuePointEnabled" object="[fl.video.FLVPlayback]" playername="" text=".setFLVCuePointEnabled(%enabled:Boolean,timeNameOrCuePoint:*%):Number" tiptext="Enables or disables one or more FLV file cue points." version="1.0"/>
               <string helpurl="fl.video:FLVPlayback:setScale" name="setScale" object="[fl.video.FLVPlayback]" playername="" text=".setScale(%scaleX:Number,scaleY:Number%):void" tiptext="setScale method" version="1.0"/>
               <string helpurl="fl.video:FLVPlayback:setSize" name="setSize" object="[fl.video.FLVPlayback]" playername="" text=".setSize(%width:Number,height:Number%):void" tiptext="setSize method" version="1.0"/>
               <string helpurl="fl.video:FLVPlayback:stop" name="stop" object="[fl.video.FLVPlayback]" playername="" text=".stop(%%):void" tiptext="stop method" version="1.0"/>
            </folder>
            <folder helpurl="fl.video:FLVPlayback" id="Properties" name="Properties" tiptext="Properties for class FLVPlayback">
               <string constant="true" helpurl="fl.video:FLVPlayback:SHORT_VERSION" name="SHORT_VERSION" object="[fl.video.FLVPlayback]" playername="" text="FLVPlayback.SHORT_VERSION" tiptext="State variable indicating the short version number of the component." version=""/>
               <string constant="true" helpurl="fl.video:FLVPlayback:VERSION" name="VERSION" object="[fl.video.FLVPlayback]" playername="" text="FLVPlayback.VERSION" tiptext="State variable indicating the long version number of the component." version=""/>
               <string helpurl="fl.video:FLVPlayback:activeVideoPlayerIndex:get" name="activeVideoPlayerIndex" object="[fl.video.FLVPlayback]" playername="" text=".activeVideoPlayerIndex" tiptext="A number that specifies which video player instance is affected by other application  programming interfaces (APIs)." version=""/>
               <string helpurl="fl.video:FLVPlayback:align:get" name="align" object="[fl.video.FLVPlayback]" playername="" text=".align" tiptext="Specifies the video layout when the scaleMode property is set to VideoScaleMode.MAINTAIN_ASPECT_RATIO or VideoScaleMode.NO_SCALE." version=""/>
               <string helpurl="fl.video:FLVPlayback:autoPlay:get" name="autoPlay" object="[fl.video.FLVPlayback]" playername="" text=".autoPlay" tiptext="A Boolean value that, if set to true, causes the FLV file to start playing automatically after the source property is set." version=""/>
               <string helpurl="fl.video:FLVPlayback:autoRewind:get" name="autoRewind" object="[fl.video.FLVPlayback]" playername="" text=".autoRewind" tiptext="A Boolean value that, if true, causes the FLV file to rewind to Frame 1 when play stops, either because the player reached the end of the stream or the stop() method was called." version=""/>
               <string helpurl="fl.video:FLVPlayback:backButton:get" name="backButton" object="[fl.video.FLVPlayback]" playername="" text=".backButton" tiptext="BackButton playback control." version=""/>
               <string helpurl="fl.video:FLVPlayback:bitrate:get" name="bitrate" object="[fl.video.FLVPlayback]" playername="" text=".bitrate" tiptext="A number that specifies the bits per second at which to transfer the FLV file." version=""/>
               <string helpurl="fl.video:FLVPlayback:bufferTime:get" name="bufferTime" object="[fl.video.FLVPlayback]" playername="" text=".bufferTime" tiptext="A number that specifies the number of seconds to buffer in memory before beginning to play a video stream." version=""/>
               <string helpurl="fl.video:FLVPlayback:bufferingBarHidesAndDisablesOthers:get" name="bufferingBarHidesAndDisablesOthers" object="[fl.video.FLVPlayback]" playername="" text=".bufferingBarHidesAndDisablesOthers" tiptext="If set to true, hides the SeekBar control and disables the Play, Pause, PlayPause, BackButton and ForwardButton controls while the FLV file is in the buffering state." version=""/>
               <string helpurl="fl.video:FLVPlayback:bufferingBar:get" name="bufferingBar" object="[fl.video.FLVPlayback]" playername="" text=".bufferingBar" tiptext="Buffering bar control." version=""/>
               <string helpurl="fl.video:FLVPlayback:buffering:get" name="buffering" object="[fl.video.FLVPlayback]" playername="" text=".buffering" tiptext="A Boolean value that is true if the video is in a buffering state." version=""/>
               <string helpurl="fl.video:FLVPlayback:bytesLoaded:get" name="bytesLoaded" object="[fl.video.FLVPlayback]" playername="" text=".bytesLoaded" tiptext="A number that indicates the extent of downloading, in number of bytes, for an HTTP download." version=""/>
               <string helpurl="fl.video:FLVPlayback:bytesTotal:get" name="bytesTotal" object="[fl.video.FLVPlayback]" playername="" text=".bytesTotal" tiptext="A number that specifies the total number of bytes downloaded for an HTTP download." version=""/>
               <string helpurl="fl.video:FLVPlayback:endTabIndex:get" name="endTabIndex" object="[fl.video.FLVPlayback]" playername="" text=".endTabIndex" tiptext="Returns the next available tabIndex value after the FLVPlayback controls." version=""/>
               <string helpurl="fl.video:FLVPlayback:forwardButton:get" name="forwardButton" object="[fl.video.FLVPlayback]" playername="" text=".forwardButton" tiptext="Forward button control." version=""/>
               <string helpurl="fl.video:FLVPlayback:fullScreenBackgroundColor:get" name="fullScreenBackgroundColor" object="[fl.video.FLVPlayback]" playername="" text=".fullScreenBackgroundColor" tiptext="Background color used when in full-screen takeover mode." version=""/>
               <string helpurl="fl.video:FLVPlayback:fullScreenButton:get" name="fullScreenButton" object="[fl.video.FLVPlayback]" playername="" text=".fullScreenButton" tiptext="FullScreen button control." version=""/>
               <string helpurl="fl.video:FLVPlayback:fullScreenSkinDelay:get" name="fullScreenSkinDelay" object="[fl.video.FLVPlayback]" playername="" text=".fullScreenSkinDelay" tiptext="Specifies the delay time in milliseconds to hide the skin." version=""/>
               <string helpurl="fl.video:FLVPlayback:fullScreenTakeOver:get" name="fullScreenTakeOver" object="[fl.video.FLVPlayback]" playername="" text=".fullScreenTakeOver" tiptext="When the stage enters full-screen mode, the FLVPlayback component is on top of all content and takes over the entire screen." version=""/>
               <string helpurl="fl.video:FLVPlayback:height:get" name="height" object="[fl.video.FLVPlayback]" playername="" text=".height" tiptext="A number that specifies the height of the FLVPlayback instance." version=""/>
               <string helpurl="fl.video:FLVPlayback:idleTimeout:get" name="idleTimeout" object="[fl.video.FLVPlayback]" playername="" text=".idleTimeout" tiptext="The amount of time, in milliseconds, before Flash terminates an idle connection to Flash Media Server (FMS) because playing paused or stopped." version=""/>
               <string helpurl="fl.video:FLVPlayback:isLive:get" name="isLive" object="[fl.video.FLVPlayback]" playername="" text=".isLive" tiptext="A Boolean value that is true if the video stream is live." version=""/>
               <string helpurl="fl.video:FLVPlayback:isRTMP:get" name="isRTMP" object="[fl.video.FLVPlayback]" playername="" text=".isRTMP" tiptext="A Boolean value that is true if the FLV file is streaming from Flash Media Server (FMS) using RTMP." version=""/>
               <string helpurl="fl.video:FLVPlayback:metadataLoaded:get" name="metadataLoaded" object="[fl.video.FLVPlayback]" playername="" text=".metadataLoaded" tiptext="A Boolean value that is true if a metadata packet has been encountered and processed or if the FLV file was encoded without the metadata packet." version=""/>
               <string helpurl="fl.video:FLVPlayback:metadata:get" name="metadata" object="[fl.video.FLVPlayback]" playername="" text=".metadata" tiptext="An object that is a metadata information packet that is received from a call to the NetSteam.onMetaData() callback method, if available." version=""/>
               <string helpurl="fl.video:FLVPlayback:muteButton:get" name="muteButton" object="[fl.video.FLVPlayback]" playername="" text=".muteButton" tiptext="Mute button control." version=""/>
               <string helpurl="fl.video:FLVPlayback:ncMgr:get" name="ncMgr" object="[fl.video.FLVPlayback]" playername="" text=".ncMgr" tiptext="An INCManager object that provides access to an instance of the class implementing INCManager, which is an interface to the NCManager class." version=""/>
               <string helpurl="fl.video:FLVPlayback:pauseButton:get" name="pauseButton" object="[fl.video.FLVPlayback]" playername="" text=".pauseButton" tiptext="Pause button control." version=""/>
               <string helpurl="fl.video:FLVPlayback:paused:get" name="paused" object="[fl.video.FLVPlayback]" playername="" text=".paused" tiptext="A Boolean value that is true if the FLV file is in a paused state." version=""/>
               <string helpurl="fl.video:FLVPlayback:playButton:get" name="playButton" object="[fl.video.FLVPlayback]" playername="" text=".playButton" tiptext="Play button control." version=""/>
               <string helpurl="fl.video:FLVPlayback:playPauseButton:get" name="playPauseButton" object="[fl.video.FLVPlayback]" playername="" text=".playPauseButton" tiptext="Play/pause button control." version=""/>
               <string helpurl="fl.video:FLVPlayback:playheadPercentage:get" name="playheadPercentage" object="[fl.video.FLVPlayback]" playername="" text=".playheadPercentage" tiptext="A number that specifies the current playheadTime as a percentage of the totalTime property." version=""/>
               <string helpurl="fl.video:FLVPlayback:playheadTime:get" name="playheadTime" object="[fl.video.FLVPlayback]" playername="" text=".playheadTime" tiptext="A number that is the current playhead time or position, measured in seconds, which can be a fractional value." version=""/>
               <string helpurl="fl.video:FLVPlayback:playheadUpdateInterval:get" name="playheadUpdateInterval" object="[fl.video.FLVPlayback]" playername="" text=".playheadUpdateInterval" tiptext="A number that is the amount of time, in milliseconds, between each playheadUpdate event." version=""/>
               <string helpurl="fl.video:FLVPlayback:playing:get" name="playing" object="[fl.video.FLVPlayback]" playername="" text=".playing" tiptext="A Boolean value that is true if the FLV file is in the playing state." version=""/>
               <string helpurl="fl.video:FLVPlayback:preferredHeight:get" name="preferredHeight" object="[fl.video.FLVPlayback]" playername="" text=".preferredHeight" tiptext="A number that specifies the height of the source FLV file." version=""/>
               <string helpurl="fl.video:FLVPlayback:preferredWidth:get" name="preferredWidth" object="[fl.video.FLVPlayback]" playername="" text=".preferredWidth" tiptext="Gives the width of the source FLV file." version=""/>
               <string helpurl="fl.video:FLVPlayback:progressInterval:get" name="progressInterval" object="[fl.video.FLVPlayback]" playername="" text=".progressInterval" tiptext="A number that is the amount of time, in milliseconds, between each progress event." version=""/>
               <string helpurl="fl.video:FLVPlayback:registrationHeight:get" name="registrationHeight" object="[fl.video.FLVPlayback]" playername="" text=".registrationHeight" tiptext="The height used to align the video content when autoresizing." version=""/>
               <string helpurl="fl.video:FLVPlayback:registrationWidth:get" name="registrationWidth" object="[fl.video.FLVPlayback]" playername="" text=".registrationWidth" tiptext="The width used to align the video content when autoresizing." version=""/>
               <string helpurl="fl.video:FLVPlayback:registrationX:get" name="registrationX" object="[fl.video.FLVPlayback]" playername="" text=".registrationX" tiptext="The x coordinate used to align the video content when autoresizing." version=""/>
               <string helpurl="fl.video:FLVPlayback:registrationY:get" name="registrationY" object="[fl.video.FLVPlayback]" playername="" text=".registrationY" tiptext="The y coordinate used to align the video content when autoresizing." version=""/>
               <string helpurl="fl.video:FLVPlayback:scaleMode:get" name="scaleMode" object="[fl.video.FLVPlayback]" playername="" text=".scaleMode" tiptext="Specifies how the video will resize after loading." version=""/>
               <string helpurl="fl.video:FLVPlayback:scaleX:get" name="scaleX" object="[fl.video.FLVPlayback]" playername="" text=".scaleX" tiptext="A number that is the horizontal scale." version=""/>
               <string helpurl="fl.video:FLVPlayback:scaleY:get" name="scaleY" object="[fl.video.FLVPlayback]" playername="" text=".scaleY" tiptext="A number that is the vertical scale." version=""/>
               <string helpurl="fl.video:FLVPlayback:scrubbing:get" name="scrubbing" object="[fl.video.FLVPlayback]" playername="" text=".scrubbing" tiptext="A Boolean value that is true if the user is scrubbing with the SeekBar and false otherwise." version=""/>
               <string helpurl="fl.video:FLVPlayback:seekBarInterval:get" name="seekBarInterval" object="[fl.video.FLVPlayback]" playername="" text=".seekBarInterval" tiptext="A number that specifies, in milliseconds, how often to check the SeekBar handle when scrubbing." version=""/>
               <string helpurl="fl.video:FLVPlayback:seekBarScrubTolerance:get" name="seekBarScrubTolerance" object="[fl.video.FLVPlayback]" playername="" text=".seekBarScrubTolerance" tiptext="A number that specifies how far a user can move the SeekBar handle before an update occurs." version=""/>
               <string helpurl="fl.video:FLVPlayback:seekBar:get" name="seekBar" object="[fl.video.FLVPlayback]" playername="" text=".seekBar" tiptext="The SeekBar control." version=""/>
               <string helpurl="fl.video:FLVPlayback:seekToPrevOffset:get" name="seekToPrevOffset" object="[fl.video.FLVPlayback]" playername="" text=".seekToPrevOffset" tiptext="The number of seconds that the seekToPrevNavCuePoint() method uses when it compares its time against the previous cue point." version=""/>
               <string helpurl="fl.video:FLVPlayback:skinAutoHide:get" name="skinAutoHide" object="[fl.video.FLVPlayback]" playername="" text=".skinAutoHide" tiptext="A Boolean value that, if true, hides the component skin when the mouse is not over the video." version=""/>
               <string helpurl="fl.video:FLVPlayback:skinBackgroundAlpha:get" name="skinBackgroundAlpha" object="[fl.video.FLVPlayback]" playername="" text=".skinBackgroundAlpha" tiptext="The alpha for the background of the skin." version=""/>
               <string helpurl="fl.video:FLVPlayback:skinBackgroundColor:get" name="skinBackgroundColor" object="[fl.video.FLVPlayback]" playername="" text=".skinBackgroundColor" tiptext="The color for the background of the skin (0xRRGGBB)." version=""/>
               <string helpurl="fl.video:FLVPlayback:skinFadeTime:get" name="skinFadeTime" object="[fl.video.FLVPlayback]" playername="" text=".skinFadeTime" tiptext="The amount of time in milliseconds that it takes for the skin to fade in or fade out when hiding or showing." version=""/>
               <string helpurl="fl.video:FLVPlayback:skinScaleMaximum:get" name="skinScaleMaximum" object="[fl.video.FLVPlayback]" playername="" text=".skinScaleMaximum" tiptext="This property specifies the largest multiple that FLVPlayback will use to scale upits skin when it enters full screen mode with a Flash Player that supportshardware acceleration." version=""/>
               <string helpurl="fl.video:FLVPlayback:skin:get" name="skin" object="[fl.video.FLVPlayback]" playername="" text=".skin" tiptext="A string that specifies the URL to a skin SWF file." version=""/>
               <string helpurl="fl.video:FLVPlayback:soundTransform:get" name="soundTransform" object="[fl.video.FLVPlayback]" playername="" text=".soundTransform" tiptext="Provides direct access to the VideoPlayer.soundTransform property to expose more sound control." version=""/>
               <string helpurl="fl.video:FLVPlayback:source:get" name="source" object="[fl.video.FLVPlayback]" playername="" text=".source" tiptext="A string that specifies the URL of the FLV file to stream and how to stream it." version=""/>
               <string helpurl="fl.video:FLVPlayback:startTabIndex:get" name="startTabIndex" object="[fl.video.FLVPlayback]" playername="" text=".startTabIndex" tiptext="Returns the first tabIndex value for the FLVPlayback controls." version=""/>
               <string helpurl="fl.video:FLVPlayback:stateResponsive:get" name="stateResponsive" object="[fl.video.FLVPlayback]" playername="" text=".stateResponsive" tiptext="A Boolean value that is true if the state is responsive." version=""/>
               <string helpurl="fl.video:FLVPlayback:state:get" name="state" object="[fl.video.FLVPlayback]" playername="" text=".state" tiptext="A string that specifies the state of the component." version=""/>
               <string helpurl="fl.video:FLVPlayback:stopButton:get" name="stopButton" object="[fl.video.FLVPlayback]" playername="" text=".stopButton" tiptext="The Stop button control." version=""/>
               <string helpurl="fl.video:FLVPlayback:stopped:get" name="stopped" object="[fl.video.FLVPlayback]" playername="" text=".stopped" tiptext="A Boolean value that is true if the state of the FLVPlayback instance is stopped." version=""/>
               <string helpurl="fl.video:FLVPlayback:totalTime:get" name="totalTime" object="[fl.video.FLVPlayback]" playername="" text=".totalTime" tiptext="A number that is the total playing time for the video in seconds." version=""/>
               <string helpurl="fl.video:FLVPlayback:visibleVideoPlayerIndex:get" name="visibleVideoPlayerIndex" object="[fl.video.FLVPlayback]" playername="" text=".visibleVideoPlayerIndex" tiptext="A number that you can use to manage multiple FLV file streams." version=""/>
               <string helpurl="fl.video:FLVPlayback:volumeBarInterval:get" name="volumeBarInterval" object="[fl.video.FLVPlayback]" playername="" text=".volumeBarInterval" tiptext="A number that specifies, in milliseconds, how often to check the volume bar handle location when scrubbing." version=""/>
               <string helpurl="fl.video:FLVPlayback:volumeBarScrubTolerance:get" name="volumeBarScrubTolerance" object="[fl.video.FLVPlayback]" playername="" text=".volumeBarScrubTolerance" tiptext="A number that specifies how far a user can move the volume bar handle before an update occurs." version=""/>
               <string helpurl="fl.video:FLVPlayback:volumeBar:get" name="volumeBar" object="[fl.video.FLVPlayback]" playername="" text=".volumeBar" tiptext="The volume bar control." version=""/>
               <string helpurl="fl.video:FLVPlayback:volume:get" name="volume" object="[fl.video.FLVPlayback]" playername="" text=".volume" tiptext="A number in the range of 0 to 1 that indicates the volume control setting." version=""/>
               <string helpurl="fl.video:FLVPlayback:width:get" name="width" object="[fl.video.FLVPlayback]" playername="" text=".width" tiptext="A number that specifies the width of the FLVPlayback instance on the Stage." version=""/>
               <string helpurl="fl.video:FLVPlayback:x:get" name="x" object="[fl.video.FLVPlayback]" playername="" text=".x" tiptext="A number that specifies the horizontal position (in pixels) of the video player." version=""/>
               <string helpurl="fl.video:FLVPlayback:y:get" name="y" object="[fl.video.FLVPlayback]" playername="" text=".y" tiptext="A number that specifies the vertical position (in pixels) of the video player." version=""/>
               <string helpurl="fl.video:FLVPlayback:cuePoints:set" name="cuePoints" object="[fl.video.FLVPlayback]" playername="" text=".cuePoints" tiptext="An array that describes ActionScript cue points and disabled embedded FLV file cue points." version=""/>
               <string helpurl="fl.video:FLVPlayback:preview:set" name="preview" object="[fl.video.FLVPlayback]" playername="" text=".preview" tiptext="Only for live preview." version=""/>
            </folder>
            <folder helpurl="fl.video:FLVPlayback" id="Events" name="Events" tiptext="Events for class FLVPlayback">
               <string helpurl="fl.video:FLVPlayback_fl.video.SoundEvent.SOUND_UPDATE_soundUpdate" name="soundUpdate" object="[fl.video.FLVPlayback]" playername="" text=".addEventListener(%type:String=SoundEvent.SOUND_UPDATE{SoundEvent.SOUND_UPDATE,VideoEvent.STOPPED_STATE_ENTERED,VideoEvent.STATE_CHANGE,VideoEvent.SKIN_LOADED,SkinErrorEvent.SKIN_ERROR,VideoEvent.SEEKED,VideoEvent.SCRUB_START,VideoEvent.SCRUB_FINISH,VideoEvent.REWIND,LayoutEvent.LAYOUT,VideoEvent.READY,VideoProgressEvent.PROGRESS,VideoEvent.PLAYHEAD_UPDATE,VideoEvent.PLAYING_STATE_ENTERED,VideoEvent.PAUSED_STATE_ENTERED,MetadataEvent.METADATA_RECEIVED,VideoEvent.FAST_FORWARD,MetadataEvent.CUE_POINT,VideoEvent.COMPLETE,VideoEvent.CLOSE,VideoEvent.BUFFERING_STATE_ENTERED,VideoEvent.AUTO_REWOUND,AutoLayoutEvent.AUTO_LAYOUT},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when sound changes by the user either moving the handle of the volumeBar control or setting the volume or soundTransform property." version=""/>
               <string helpurl="fl.video:FLVPlayback_fl.video.VideoEvent.STOPPED_STATE_ENTERED_stoppedStateEntered" name="stoppedStateEntered" object="[fl.video.FLVPlayback]" playername="" text=".addEventListener(%type:String=VideoEvent.STOPPED_STATE_ENTERED{SoundEvent.SOUND_UPDATE,VideoEvent.STOPPED_STATE_ENTERED,VideoEvent.STATE_CHANGE,VideoEvent.SKIN_LOADED,SkinErrorEvent.SKIN_ERROR,VideoEvent.SEEKED,VideoEvent.SCRUB_START,VideoEvent.SCRUB_FINISH,VideoEvent.REWIND,LayoutEvent.LAYOUT,VideoEvent.READY,VideoProgressEvent.PROGRESS,VideoEvent.PLAYHEAD_UPDATE,VideoEvent.PLAYING_STATE_ENTERED,VideoEvent.PAUSED_STATE_ENTERED,MetadataEvent.METADATA_RECEIVED,VideoEvent.FAST_FORWARD,MetadataEvent.CUE_POINT,VideoEvent.COMPLETE,VideoEvent.CLOSE,VideoEvent.BUFFERING_STATE_ENTERED,VideoEvent.AUTO_REWOUND,AutoLayoutEvent.AUTO_LAYOUT},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when entering the stopped state." version=""/>
               <string helpurl="fl.video:FLVPlayback_fl.video.VideoEvent.STATE_CHANGE_stateChange" name="stateChange" object="[fl.video.FLVPlayback]" playername="" text=".addEventListener(%type:String=VideoEvent.STATE_CHANGE{SoundEvent.SOUND_UPDATE,VideoEvent.STOPPED_STATE_ENTERED,VideoEvent.STATE_CHANGE,VideoEvent.SKIN_LOADED,SkinErrorEvent.SKIN_ERROR,VideoEvent.SEEKED,VideoEvent.SCRUB_START,VideoEvent.SCRUB_FINISH,VideoEvent.REWIND,LayoutEvent.LAYOUT,VideoEvent.READY,VideoProgressEvent.PROGRESS,VideoEvent.PLAYHEAD_UPDATE,VideoEvent.PLAYING_STATE_ENTERED,VideoEvent.PAUSED_STATE_ENTERED,MetadataEvent.METADATA_RECEIVED,VideoEvent.FAST_FORWARD,MetadataEvent.CUE_POINT,VideoEvent.COMPLETE,VideoEvent.CLOSE,VideoEvent.BUFFERING_STATE_ENTERED,VideoEvent.AUTO_REWOUND,AutoLayoutEvent.AUTO_LAYOUT},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the playback state changes." version=""/>
               <string helpurl="fl.video:FLVPlayback_fl.video.VideoEvent.SKIN_LOADED_skinLoaded" name="skinLoaded" object="[fl.video.FLVPlayback]" playername="" text=".addEventListener(%type:String=VideoEvent.SKIN_LOADED{SoundEvent.SOUND_UPDATE,VideoEvent.STOPPED_STATE_ENTERED,VideoEvent.STATE_CHANGE,VideoEvent.SKIN_LOADED,SkinErrorEvent.SKIN_ERROR,VideoEvent.SEEKED,VideoEvent.SCRUB_START,VideoEvent.SCRUB_FINISH,VideoEvent.REWIND,LayoutEvent.LAYOUT,VideoEvent.READY,VideoProgressEvent.PROGRESS,VideoEvent.PLAYHEAD_UPDATE,VideoEvent.PLAYING_STATE_ENTERED,VideoEvent.PAUSED_STATE_ENTERED,MetadataEvent.METADATA_RECEIVED,VideoEvent.FAST_FORWARD,MetadataEvent.CUE_POINT,VideoEvent.COMPLETE,VideoEvent.CLOSE,VideoEvent.BUFFERING_STATE_ENTERED,VideoEvent.AUTO_REWOUND,AutoLayoutEvent.AUTO_LAYOUT},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a skin SWF file is loaded." version=""/>
               <string helpurl="fl.video:FLVPlayback_fl.video.SkinErrorEvent.SKIN_ERROR_skinError" name="skinError" object="[fl.video.FLVPlayback]" playername="" text=".addEventListener(%type:String=SkinErrorEvent.SKIN_ERROR{SoundEvent.SOUND_UPDATE,VideoEvent.STOPPED_STATE_ENTERED,VideoEvent.STATE_CHANGE,VideoEvent.SKIN_LOADED,SkinErrorEvent.SKIN_ERROR,VideoEvent.SEEKED,VideoEvent.SCRUB_START,VideoEvent.SCRUB_FINISH,VideoEvent.REWIND,LayoutEvent.LAYOUT,VideoEvent.READY,VideoProgressEvent.PROGRESS,VideoEvent.PLAYHEAD_UPDATE,VideoEvent.PLAYING_STATE_ENTERED,VideoEvent.PAUSED_STATE_ENTERED,MetadataEvent.METADATA_RECEIVED,VideoEvent.FAST_FORWARD,MetadataEvent.CUE_POINT,VideoEvent.COMPLETE,VideoEvent.CLOSE,VideoEvent.BUFFERING_STATE_ENTERED,VideoEvent.AUTO_REWOUND,AutoLayoutEvent.AUTO_LAYOUT},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when an error occurs loading a skin SWF file." version=""/>
               <string helpurl="fl.video:FLVPlayback_fl.video.VideoEvent.SEEKED_seeked" name="seeked" object="[fl.video.FLVPlayback]" playername="" text=".addEventListener(%type:String=VideoEvent.SEEKED{SoundEvent.SOUND_UPDATE,VideoEvent.STOPPED_STATE_ENTERED,VideoEvent.STATE_CHANGE,VideoEvent.SKIN_LOADED,SkinErrorEvent.SKIN_ERROR,VideoEvent.SEEKED,VideoEvent.SCRUB_START,VideoEvent.SCRUB_FINISH,VideoEvent.REWIND,LayoutEvent.LAYOUT,VideoEvent.READY,VideoProgressEvent.PROGRESS,VideoEvent.PLAYHEAD_UPDATE,VideoEvent.PLAYING_STATE_ENTERED,VideoEvent.PAUSED_STATE_ENTERED,MetadataEvent.METADATA_RECEIVED,VideoEvent.FAST_FORWARD,MetadataEvent.CUE_POINT,VideoEvent.COMPLETE,VideoEvent.CLOSE,VideoEvent.BUFFERING_STATE_ENTERED,VideoEvent.AUTO_REWOUND,AutoLayoutEvent.AUTO_LAYOUT},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the location of the playhead is changed by a call to seek() or by setting the playheadTime property or by using the SeekBar control." version=""/>
               <string helpurl="fl.video:FLVPlayback_fl.video.VideoEvent.SCRUB_START_scrubStart" name="scrubStart" object="[fl.video.FLVPlayback]" playername="" text=".addEventListener(%type:String=VideoEvent.SCRUB_START{SoundEvent.SOUND_UPDATE,VideoEvent.STOPPED_STATE_ENTERED,VideoEvent.STATE_CHANGE,VideoEvent.SKIN_LOADED,SkinErrorEvent.SKIN_ERROR,VideoEvent.SEEKED,VideoEvent.SCRUB_START,VideoEvent.SCRUB_FINISH,VideoEvent.REWIND,LayoutEvent.LAYOUT,VideoEvent.READY,VideoProgressEvent.PROGRESS,VideoEvent.PLAYHEAD_UPDATE,VideoEvent.PLAYING_STATE_ENTERED,VideoEvent.PAUSED_STATE_ENTERED,MetadataEvent.METADATA_RECEIVED,VideoEvent.FAST_FORWARD,MetadataEvent.CUE_POINT,VideoEvent.COMPLETE,VideoEvent.CLOSE,VideoEvent.BUFFERING_STATE_ENTERED,VideoEvent.AUTO_REWOUND,AutoLayoutEvent.AUTO_LAYOUT},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user begins scrubbing the FLV file with the seek bar." version=""/>
               <string helpurl="fl.video:FLVPlayback_fl.video.VideoEvent.SCRUB_FINISH_scrubFinish" name="scrubFinish" object="[fl.video.FLVPlayback]" playername="" text=".addEventListener(%type:String=VideoEvent.SCRUB_FINISH{SoundEvent.SOUND_UPDATE,VideoEvent.STOPPED_STATE_ENTERED,VideoEvent.STATE_CHANGE,VideoEvent.SKIN_LOADED,SkinErrorEvent.SKIN_ERROR,VideoEvent.SEEKED,VideoEvent.SCRUB_START,VideoEvent.SCRUB_FINISH,VideoEvent.REWIND,LayoutEvent.LAYOUT,VideoEvent.READY,VideoProgressEvent.PROGRESS,VideoEvent.PLAYHEAD_UPDATE,VideoEvent.PLAYING_STATE_ENTERED,VideoEvent.PAUSED_STATE_ENTERED,MetadataEvent.METADATA_RECEIVED,VideoEvent.FAST_FORWARD,MetadataEvent.CUE_POINT,VideoEvent.COMPLETE,VideoEvent.CLOSE,VideoEvent.BUFFERING_STATE_ENTERED,VideoEvent.AUTO_REWOUND,AutoLayoutEvent.AUTO_LAYOUT},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user stops scrubbing the FLV file with the seek bar." version=""/>
               <string helpurl="fl.video:FLVPlayback_fl.video.VideoEvent.REWIND_rewind" name="rewind" object="[fl.video.FLVPlayback]" playername="" text=".addEventListener(%type:String=VideoEvent.REWIND{SoundEvent.SOUND_UPDATE,VideoEvent.STOPPED_STATE_ENTERED,VideoEvent.STATE_CHANGE,VideoEvent.SKIN_LOADED,SkinErrorEvent.SKIN_ERROR,VideoEvent.SEEKED,VideoEvent.SCRUB_START,VideoEvent.SCRUB_FINISH,VideoEvent.REWIND,LayoutEvent.LAYOUT,VideoEvent.READY,VideoProgressEvent.PROGRESS,VideoEvent.PLAYHEAD_UPDATE,VideoEvent.PLAYING_STATE_ENTERED,VideoEvent.PAUSED_STATE_ENTERED,MetadataEvent.METADATA_RECEIVED,VideoEvent.FAST_FORWARD,MetadataEvent.CUE_POINT,VideoEvent.COMPLETE,VideoEvent.CLOSE,VideoEvent.BUFFERING_STATE_ENTERED,VideoEvent.AUTO_REWOUND,AutoLayoutEvent.AUTO_LAYOUT},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the location of the playhead moves backward by a call to seek() or when an autoRewind call is completed." version=""/>
               <string helpurl="fl.video:FLVPlayback_fl.video.LayoutEvent.LAYOUT_layout" name="layout" object="[fl.video.FLVPlayback]" playername="" text=".addEventListener(%type:String=LayoutEvent.LAYOUT{SoundEvent.SOUND_UPDATE,VideoEvent.STOPPED_STATE_ENTERED,VideoEvent.STATE_CHANGE,VideoEvent.SKIN_LOADED,SkinErrorEvent.SKIN_ERROR,VideoEvent.SEEKED,VideoEvent.SCRUB_START,VideoEvent.SCRUB_FINISH,VideoEvent.REWIND,LayoutEvent.LAYOUT,VideoEvent.READY,VideoProgressEvent.PROGRESS,VideoEvent.PLAYHEAD_UPDATE,VideoEvent.PLAYING_STATE_ENTERED,VideoEvent.PAUSED_STATE_ENTERED,MetadataEvent.METADATA_RECEIVED,VideoEvent.FAST_FORWARD,MetadataEvent.CUE_POINT,VideoEvent.COMPLETE,VideoEvent.CLOSE,VideoEvent.BUFFERING_STATE_ENTERED,VideoEvent.AUTO_REWOUND,AutoLayoutEvent.AUTO_LAYOUT},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the video player is resized or laid out." version=""/>
               <string helpurl="fl.video:FLVPlayback_fl.video.VideoEvent.READY_ready" name="ready" object="[fl.video.FLVPlayback]" playername="" text=".addEventListener(%type:String=VideoEvent.READY{SoundEvent.SOUND_UPDATE,VideoEvent.STOPPED_STATE_ENTERED,VideoEvent.STATE_CHANGE,VideoEvent.SKIN_LOADED,SkinErrorEvent.SKIN_ERROR,VideoEvent.SEEKED,VideoEvent.SCRUB_START,VideoEvent.SCRUB_FINISH,VideoEvent.REWIND,LayoutEvent.LAYOUT,VideoEvent.READY,VideoProgressEvent.PROGRESS,VideoEvent.PLAYHEAD_UPDATE,VideoEvent.PLAYING_STATE_ENTERED,VideoEvent.PAUSED_STATE_ENTERED,MetadataEvent.METADATA_RECEIVED,VideoEvent.FAST_FORWARD,MetadataEvent.CUE_POINT,VideoEvent.COMPLETE,VideoEvent.CLOSE,VideoEvent.BUFFERING_STATE_ENTERED,VideoEvent.AUTO_REWOUND,AutoLayoutEvent.AUTO_LAYOUT},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when an FLV file is loaded and ready to display." version=""/>
               <string helpurl="fl.video:FLVPlayback_fl.video.VideoProgressEvent.PROGRESS_progress" name="progress" object="[fl.video.FLVPlayback]" playername="" text=".addEventListener(%type:String=VideoProgressEvent.PROGRESS{SoundEvent.SOUND_UPDATE,VideoEvent.STOPPED_STATE_ENTERED,VideoEvent.STATE_CHANGE,VideoEvent.SKIN_LOADED,SkinErrorEvent.SKIN_ERROR,VideoEvent.SEEKED,VideoEvent.SCRUB_START,VideoEvent.SCRUB_FINISH,VideoEvent.REWIND,LayoutEvent.LAYOUT,VideoEvent.READY,VideoProgressEvent.PROGRESS,VideoEvent.PLAYHEAD_UPDATE,VideoEvent.PLAYING_STATE_ENTERED,VideoEvent.PAUSED_STATE_ENTERED,MetadataEvent.METADATA_RECEIVED,VideoEvent.FAST_FORWARD,MetadataEvent.CUE_POINT,VideoEvent.COMPLETE,VideoEvent.CLOSE,VideoEvent.BUFFERING_STATE_ENTERED,VideoEvent.AUTO_REWOUND,AutoLayoutEvent.AUTO_LAYOUT},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Indicates progress made in number of bytes downloaded." version=""/>
               <string helpurl="fl.video:FLVPlayback_fl.video.VideoEvent.PLAYHEAD_UPDATE_playheadUpdate" name="playheadUpdate" object="[fl.video.FLVPlayback]" playername="" text=".addEventListener(%type:String=VideoEvent.PLAYHEAD_UPDATE{SoundEvent.SOUND_UPDATE,VideoEvent.STOPPED_STATE_ENTERED,VideoEvent.STATE_CHANGE,VideoEvent.SKIN_LOADED,SkinErrorEvent.SKIN_ERROR,VideoEvent.SEEKED,VideoEvent.SCRUB_START,VideoEvent.SCRUB_FINISH,VideoEvent.REWIND,LayoutEvent.LAYOUT,VideoEvent.READY,VideoProgressEvent.PROGRESS,VideoEvent.PLAYHEAD_UPDATE,VideoEvent.PLAYING_STATE_ENTERED,VideoEvent.PAUSED_STATE_ENTERED,MetadataEvent.METADATA_RECEIVED,VideoEvent.FAST_FORWARD,MetadataEvent.CUE_POINT,VideoEvent.COMPLETE,VideoEvent.CLOSE,VideoEvent.BUFFERING_STATE_ENTERED,VideoEvent.AUTO_REWOUND,AutoLayoutEvent.AUTO_LAYOUT},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched while the FLV file is playing at the frequency specified by the playheadUpdateInterval property or when rewinding starts." version=""/>
               <string helpurl="fl.video:FLVPlayback_fl.video.VideoEvent.PLAYING_STATE_ENTERED_playingStateEntered" name="playingStateEntered" object="[fl.video.FLVPlayback]" playername="" text=".addEventListener(%type:String=VideoEvent.PLAYING_STATE_ENTERED{SoundEvent.SOUND_UPDATE,VideoEvent.STOPPED_STATE_ENTERED,VideoEvent.STATE_CHANGE,VideoEvent.SKIN_LOADED,SkinErrorEvent.SKIN_ERROR,VideoEvent.SEEKED,VideoEvent.SCRUB_START,VideoEvent.SCRUB_FINISH,VideoEvent.REWIND,LayoutEvent.LAYOUT,VideoEvent.READY,VideoProgressEvent.PROGRESS,VideoEvent.PLAYHEAD_UPDATE,VideoEvent.PLAYING_STATE_ENTERED,VideoEvent.PAUSED_STATE_ENTERED,MetadataEvent.METADATA_RECEIVED,VideoEvent.FAST_FORWARD,MetadataEvent.CUE_POINT,VideoEvent.COMPLETE,VideoEvent.CLOSE,VideoEvent.BUFFERING_STATE_ENTERED,VideoEvent.AUTO_REWOUND,AutoLayoutEvent.AUTO_LAYOUT},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the playing state is entered." version=""/>
               <string helpurl="fl.video:FLVPlayback_fl.video.VideoEvent.PAUSED_STATE_ENTERED_pausedStateEntered" name="pausedStateEntered" object="[fl.video.FLVPlayback]" playername="" text=".addEventListener(%type:String=VideoEvent.PAUSED_STATE_ENTERED{SoundEvent.SOUND_UPDATE,VideoEvent.STOPPED_STATE_ENTERED,VideoEvent.STATE_CHANGE,VideoEvent.SKIN_LOADED,SkinErrorEvent.SKIN_ERROR,VideoEvent.SEEKED,VideoEvent.SCRUB_START,VideoEvent.SCRUB_FINISH,VideoEvent.REWIND,LayoutEvent.LAYOUT,VideoEvent.READY,VideoProgressEvent.PROGRESS,VideoEvent.PLAYHEAD_UPDATE,VideoEvent.PLAYING_STATE_ENTERED,VideoEvent.PAUSED_STATE_ENTERED,MetadataEvent.METADATA_RECEIVED,VideoEvent.FAST_FORWARD,MetadataEvent.CUE_POINT,VideoEvent.COMPLETE,VideoEvent.CLOSE,VideoEvent.BUFFERING_STATE_ENTERED,VideoEvent.AUTO_REWOUND,AutoLayoutEvent.AUTO_LAYOUT},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the player enters the paused state." version=""/>
               <string helpurl="fl.video:FLVPlayback_fl.video.MetadataEvent.METADATA_RECEIVED_metadataReceived" name="metadataReceived" object="[fl.video.FLVPlayback]" playername="" text=".addEventListener(%type:String=MetadataEvent.METADATA_RECEIVED{SoundEvent.SOUND_UPDATE,VideoEvent.STOPPED_STATE_ENTERED,VideoEvent.STATE_CHANGE,VideoEvent.SKIN_LOADED,SkinErrorEvent.SKIN_ERROR,VideoEvent.SEEKED,VideoEvent.SCRUB_START,VideoEvent.SCRUB_FINISH,VideoEvent.REWIND,LayoutEvent.LAYOUT,VideoEvent.READY,VideoProgressEvent.PROGRESS,VideoEvent.PLAYHEAD_UPDATE,VideoEvent.PLAYING_STATE_ENTERED,VideoEvent.PAUSED_STATE_ENTERED,MetadataEvent.METADATA_RECEIVED,VideoEvent.FAST_FORWARD,MetadataEvent.CUE_POINT,VideoEvent.COMPLETE,VideoEvent.CLOSE,VideoEvent.BUFFERING_STATE_ENTERED,VideoEvent.AUTO_REWOUND,AutoLayoutEvent.AUTO_LAYOUT},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched the first time the FLV file's metadata is reached." version=""/>
               <string helpurl="fl.video:FLVPlayback_fl.video.VideoEvent.FAST_FORWARD_fastForward" name="fastForward" object="[fl.video.FLVPlayback]" playername="" text=".addEventListener(%type:String=VideoEvent.FAST_FORWARD{SoundEvent.SOUND_UPDATE,VideoEvent.STOPPED_STATE_ENTERED,VideoEvent.STATE_CHANGE,VideoEvent.SKIN_LOADED,SkinErrorEvent.SKIN_ERROR,VideoEvent.SEEKED,VideoEvent.SCRUB_START,VideoEvent.SCRUB_FINISH,VideoEvent.REWIND,LayoutEvent.LAYOUT,VideoEvent.READY,VideoProgressEvent.PROGRESS,VideoEvent.PLAYHEAD_UPDATE,VideoEvent.PLAYING_STATE_ENTERED,VideoEvent.PAUSED_STATE_ENTERED,MetadataEvent.METADATA_RECEIVED,VideoEvent.FAST_FORWARD,MetadataEvent.CUE_POINT,VideoEvent.COMPLETE,VideoEvent.CLOSE,VideoEvent.BUFFERING_STATE_ENTERED,VideoEvent.AUTO_REWOUND,AutoLayoutEvent.AUTO_LAYOUT},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the location of the playhead moves forward by a call to the seek() method or by clicking the ForwardButton control." version=""/>
               <string helpurl="fl.video:FLVPlayback_fl.video.MetadataEvent.CUE_POINT_cuePoint" name="cuePoint" object="[fl.video.FLVPlayback]" playername="" text=".addEventListener(%type:String=MetadataEvent.CUE_POINT{SoundEvent.SOUND_UPDATE,VideoEvent.STOPPED_STATE_ENTERED,VideoEvent.STATE_CHANGE,VideoEvent.SKIN_LOADED,SkinErrorEvent.SKIN_ERROR,VideoEvent.SEEKED,VideoEvent.SCRUB_START,VideoEvent.SCRUB_FINISH,VideoEvent.REWIND,LayoutEvent.LAYOUT,VideoEvent.READY,VideoProgressEvent.PROGRESS,VideoEvent.PLAYHEAD_UPDATE,VideoEvent.PLAYING_STATE_ENTERED,VideoEvent.PAUSED_STATE_ENTERED,MetadataEvent.METADATA_RECEIVED,VideoEvent.FAST_FORWARD,MetadataEvent.CUE_POINT,VideoEvent.COMPLETE,VideoEvent.CLOSE,VideoEvent.BUFFERING_STATE_ENTERED,VideoEvent.AUTO_REWOUND,AutoLayoutEvent.AUTO_LAYOUT},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a cue point is reached." version=""/>
               <string helpurl="fl.video:FLVPlayback_fl.video.VideoEvent.COMPLETE_complete" name="complete" object="[fl.video.FLVPlayback]" playername="" text=".addEventListener(%type:String=VideoEvent.COMPLETE{SoundEvent.SOUND_UPDATE,VideoEvent.STOPPED_STATE_ENTERED,VideoEvent.STATE_CHANGE,VideoEvent.SKIN_LOADED,SkinErrorEvent.SKIN_ERROR,VideoEvent.SEEKED,VideoEvent.SCRUB_START,VideoEvent.SCRUB_FINISH,VideoEvent.REWIND,LayoutEvent.LAYOUT,VideoEvent.READY,VideoProgressEvent.PROGRESS,VideoEvent.PLAYHEAD_UPDATE,VideoEvent.PLAYING_STATE_ENTERED,VideoEvent.PAUSED_STATE_ENTERED,MetadataEvent.METADATA_RECEIVED,VideoEvent.FAST_FORWARD,MetadataEvent.CUE_POINT,VideoEvent.COMPLETE,VideoEvent.CLOSE,VideoEvent.BUFFERING_STATE_ENTERED,VideoEvent.AUTO_REWOUND,AutoLayoutEvent.AUTO_LAYOUT},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when playing completes because the player reached the end of the FLV file." version=""/>
               <string helpurl="fl.video:FLVPlayback_fl.video.VideoEvent.CLOSE_close" name="close" object="[fl.video.FLVPlayback]" playername="" text=".addEventListener(%type:String=VideoEvent.CLOSE{SoundEvent.SOUND_UPDATE,VideoEvent.STOPPED_STATE_ENTERED,VideoEvent.STATE_CHANGE,VideoEvent.SKIN_LOADED,SkinErrorEvent.SKIN_ERROR,VideoEvent.SEEKED,VideoEvent.SCRUB_START,VideoEvent.SCRUB_FINISH,VideoEvent.REWIND,LayoutEvent.LAYOUT,VideoEvent.READY,VideoProgressEvent.PROGRESS,VideoEvent.PLAYHEAD_UPDATE,VideoEvent.PLAYING_STATE_ENTERED,VideoEvent.PAUSED_STATE_ENTERED,MetadataEvent.METADATA_RECEIVED,VideoEvent.FAST_FORWARD,MetadataEvent.CUE_POINT,VideoEvent.COMPLETE,VideoEvent.CLOSE,VideoEvent.BUFFERING_STATE_ENTERED,VideoEvent.AUTO_REWOUND,AutoLayoutEvent.AUTO_LAYOUT},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the event object closes the NetConnection, by timing out or through a call to the closeVideoPlayer() method or when you call the load() or play() methods or set the source property and cause the RTMP connection to close as a result." version=""/>
               <string helpurl="fl.video:FLVPlayback_fl.video.VideoEvent.BUFFERING_STATE_ENTERED_bufferingStateEntered" name="bufferingStateEntered" object="[fl.video.FLVPlayback]" playername="" text=".addEventListener(%type:String=VideoEvent.BUFFERING_STATE_ENTERED{SoundEvent.SOUND_UPDATE,VideoEvent.STOPPED_STATE_ENTERED,VideoEvent.STATE_CHANGE,VideoEvent.SKIN_LOADED,SkinErrorEvent.SKIN_ERROR,VideoEvent.SEEKED,VideoEvent.SCRUB_START,VideoEvent.SCRUB_FINISH,VideoEvent.REWIND,LayoutEvent.LAYOUT,VideoEvent.READY,VideoProgressEvent.PROGRESS,VideoEvent.PLAYHEAD_UPDATE,VideoEvent.PLAYING_STATE_ENTERED,VideoEvent.PAUSED_STATE_ENTERED,MetadataEvent.METADATA_RECEIVED,VideoEvent.FAST_FORWARD,MetadataEvent.CUE_POINT,VideoEvent.COMPLETE,VideoEvent.CLOSE,VideoEvent.BUFFERING_STATE_ENTERED,VideoEvent.AUTO_REWOUND,AutoLayoutEvent.AUTO_LAYOUT},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the FLVPlayback instance enters the buffering state." version=""/>
               <string helpurl="fl.video:FLVPlayback_fl.video.VideoEvent.AUTO_REWOUND_autoRewound" name="autoRewound" object="[fl.video.FLVPlayback]" playername="" text=".addEventListener(%type:String=VideoEvent.AUTO_REWOUND{SoundEvent.SOUND_UPDATE,VideoEvent.STOPPED_STATE_ENTERED,VideoEvent.STATE_CHANGE,VideoEvent.SKIN_LOADED,SkinErrorEvent.SKIN_ERROR,VideoEvent.SEEKED,VideoEvent.SCRUB_START,VideoEvent.SCRUB_FINISH,VideoEvent.REWIND,LayoutEvent.LAYOUT,VideoEvent.READY,VideoProgressEvent.PROGRESS,VideoEvent.PLAYHEAD_UPDATE,VideoEvent.PLAYING_STATE_ENTERED,VideoEvent.PAUSED_STATE_ENTERED,MetadataEvent.METADATA_RECEIVED,VideoEvent.FAST_FORWARD,MetadataEvent.CUE_POINT,VideoEvent.COMPLETE,VideoEvent.CLOSE,VideoEvent.BUFFERING_STATE_ENTERED,VideoEvent.AUTO_REWOUND,AutoLayoutEvent.AUTO_LAYOUT},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the playhead is moved to the start of the video player because the autoRewind property is set to true." version=""/>
               <string helpurl="fl.video:FLVPlayback_fl.video.AutoLayoutEvent.AUTO_LAYOUT_autoLayout" name="autoLayout" object="[fl.video.FLVPlayback]" playername="" text=".addEventListener(%type:String=AutoLayoutEvent.AUTO_LAYOUT{SoundEvent.SOUND_UPDATE,VideoEvent.STOPPED_STATE_ENTERED,VideoEvent.STATE_CHANGE,VideoEvent.SKIN_LOADED,SkinErrorEvent.SKIN_ERROR,VideoEvent.SEEKED,VideoEvent.SCRUB_START,VideoEvent.SCRUB_FINISH,VideoEvent.REWIND,LayoutEvent.LAYOUT,VideoEvent.READY,VideoProgressEvent.PROGRESS,VideoEvent.PLAYHEAD_UPDATE,VideoEvent.PLAYING_STATE_ENTERED,VideoEvent.PAUSED_STATE_ENTERED,MetadataEvent.METADATA_RECEIVED,VideoEvent.FAST_FORWARD,MetadataEvent.CUE_POINT,VideoEvent.COMPLETE,VideoEvent.CLOSE,VideoEvent.BUFFERING_STATE_ENTERED,VideoEvent.AUTO_REWOUND,AutoLayoutEvent.AUTO_LAYOUT},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the video player is resized or laid out automatically." version=""/>
            </folder>
         </folder>
         <folder asAncestors="flash.display:Sprite,flash.display:DisplayObjectContainer,flash.display:InteractiveObject,flash.display:DisplayObject,flash.events:EventDispatcher,Object" helpurl="fl.video:FLVPlaybackCaptioning" id="[fl.video.FLVPlaybackCaptioning]" index="true" name="FLVPlaybackCaptioning" sort="true" tiptext="The FLVPlaybackCaptioning component enables captioning for the FLVPlayback component.">
            <folder helpurl="fl.video:FLVPlaybackCaptioning" id="Methods" name="Methods" tiptext="Methods for class FLVPlaybackCaptioning">
               <string constructor="true" helpurl="fl.video:FLVPlaybackCaptioning:FLVPlaybackCaptioning" name="FLVPlaybackCaptioning" object="[fl.video.FLVPlaybackCaptioning]" playername="" text="new FLVPlaybackCaptioning(%%)" tiptext="Creates a new FLVPlaybackCaptioning instance." version="9.0.28.0"/>
               <string helpurl="fl.video:FLVPlaybackCaptioning:findInCaptions" name="findInCaptions" object="[fl.video.FLVPlaybackCaptioning]" playername="" text=".findInCaptions(%searchString:String%):Array" tiptext="Returns an array of FLVPlayback component cuepoints whose caption text contains the search string." version="9.0.28.0"/>
               <string helpurl="fl.video:FLVPlaybackCaptioning:getCaptionsAsArray" name="getCaptionsAsArray" object="[fl.video.FLVPlaybackCaptioning]" playername="" text=".getCaptionsAsArray(%%):Array" tiptext="Returns an array of FLVPlayback component cuepoints that contain the captions." version="9.0.28.0"/>
               <string helpurl="fl.video:FLVPlaybackCaptioning:getCaptionsAsTranscript" name="getCaptionsAsTranscript" object="[fl.video.FLVPlaybackCaptioning]" playername="" text=".getCaptionsAsTranscript(%[preserveFormatting:Boolean=false]%):String" tiptext="Returns a string containing all captions as an HTML-formatted transcript." version="9.0.28.0"/>
               <string helpurl="fl.video:FLVPlaybackCaptioning:secondsToTime" name="secondsToTime" object="[fl.video.FLVPlaybackCaptioning]" playername="" text=".secondsToTime(%sec:Number%):String" tiptext="Returns a number of seconds as a timecode string." version="9.0.28.0"/>
            </folder>
            <folder helpurl="fl.video:FLVPlaybackCaptioning" id="Properties" name="Properties" tiptext="Properties for class FLVPlaybackCaptioning">
               <string constant="true" helpurl="fl.video:FLVPlaybackCaptioning:SHORT_VERSION" name="SHORT_VERSION" object="[fl.video.FLVPlaybackCaptioning]" playername="" text="FLVPlaybackCaptioning.SHORT_VERSION" tiptext="State variable indicating the short version number of the component." version=""/>
               <string constant="true" helpurl="fl.video:FLVPlaybackCaptioning:VERSION" name="VERSION" object="[fl.video.FLVPlaybackCaptioning]" playername="" text="FLVPlaybackCaptioning.VERSION" tiptext="State variable indicating the long version number of the component." version=""/>
               <string helpurl="fl.video:FLVPlaybackCaptioning:autoLayout:get" name="autoLayout" object="[fl.video.FLVPlaybackCaptioning]" playername="" text=".autoLayout" tiptext="Determines whether the FLVPlaybackCaptioning component automatically moves and resizes the TextField object for captioning." version=""/>
               <string helpurl="fl.video:FLVPlaybackCaptioning:captionButton:get" name="captionButton" object="[fl.video.FLVPlaybackCaptioning]" playername="" text=".captionButton" tiptext="Defines the captionButton FLVPlayback custom UI component instance which provides toggle capabilities to turn captioning on and off." version=""/>
               <string helpurl="fl.video:FLVPlaybackCaptioning:captionTargetName:get" name="captionTargetName" object="[fl.video.FLVPlaybackCaptioning]" playername="" text=".captionTargetName" tiptext="The instance name of the TextField object or MovieClip enclosing a Textfield object that contains the captions." version=""/>
               <string helpurl="fl.video:FLVPlaybackCaptioning:captionTarget:get" name="captionTarget" object="[fl.video.FLVPlaybackCaptioning]" playername="" text=".captionTarget" tiptext="Sets the DisplayObject instance in which to display captions." version=""/>
               <string helpurl="fl.video:FLVPlaybackCaptioning:flvPlaybackName:get" name="flvPlaybackName" object="[fl.video.FLVPlaybackCaptioning]" playername="" text=".flvPlaybackName" tiptext="Sets an FLVPlayback instance name for the FLVPlayback instance that you want to caption." version=""/>
               <string helpurl="fl.video:FLVPlaybackCaptioning:flvPlayback:get" name="flvPlayback" object="[fl.video.FLVPlaybackCaptioning]" playername="" text=".flvPlayback" tiptext="Sets the FLVPlayback instance to caption." version=""/>
               <string helpurl="fl.video:FLVPlaybackCaptioning:showCaptions:get" name="showCaptions" object="[fl.video.FLVPlaybackCaptioning]" playername="" text=".showCaptions" tiptext="Used to display captions; true = display captions, false = do not display captions." version=""/>
               <string helpurl="fl.video:FLVPlaybackCaptioning:simpleFormatting:get" name="simpleFormatting" object="[fl.video.FLVPlaybackCaptioning]" playername="" text=".simpleFormatting" tiptext="Limits formatting instructions from the Timed Text file when set to true." version=""/>
               <string helpurl="fl.video:FLVPlaybackCaptioning:source:get" name="source" object="[fl.video.FLVPlaybackCaptioning]" playername="" text=".source" tiptext="URL of the Timed Text XML file that contains caption information (required property)." version=""/>
               <string helpurl="fl.video:FLVPlaybackCaptioning:track:get" name="track" object="[fl.video.FLVPlaybackCaptioning]" playername="" text=".track" tiptext="Support for multiple language tracks." version=""/>
               <string helpurl="fl.video:FLVPlaybackCaptioning:videoPlayerIndex:get" name="videoPlayerIndex" object="[fl.video.FLVPlaybackCaptioning]" playername="" text=".videoPlayerIndex" tiptext="Connects the captioning to a specific VideoPlayer in the FLVPlayback component." version=""/>
            </folder>
            <folder helpurl="fl.video:FLVPlaybackCaptioning" id="Events" name="Events" tiptext="Events for class FLVPlaybackCaptioning">
               <string helpurl="fl.video:FLVPlaybackCaptioning_flash.events.SecurityErrorEvent.SECURITY_ERROR_securityError" name="securityError" object="[fl.video.FLVPlaybackCaptioning]" playername="" text=".addEventListener(%type:String=SecurityErrorEvent.SECURITY_ERROR{SecurityErrorEvent.SECURITY_ERROR,ProgressEvent.PROGRESS,Event.OPEN,IOErrorEvent.IO_ERROR,HTTPStatusEvent.HTTP_STATUS,Event.COMPLETE,CaptionTargetEvent.CAPTION_TARGET_CREATED,CaptionChangeEvent.CAPTION_CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched if a call to the URLLoader.load() event attempts to load a Timed Text XML file from a server outside the security sandbox." version=""/>
               <string helpurl="fl.video:FLVPlaybackCaptioning_flash.events.ProgressEvent.PROGRESS_progress" name="progress" object="[fl.video.FLVPlaybackCaptioning]" playername="" text=".addEventListener(%type:String=ProgressEvent.PROGRESS{SecurityErrorEvent.SECURITY_ERROR,ProgressEvent.PROGRESS,Event.OPEN,IOErrorEvent.IO_ERROR,HTTPStatusEvent.HTTP_STATUS,Event.COMPLETE,CaptionTargetEvent.CAPTION_TARGET_CREATED,CaptionChangeEvent.CAPTION_CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when data is received as the download of the Timed Text XML file progresses." version=""/>
               <string helpurl="fl.video:FLVPlaybackCaptioning_flash.events.Event.OPEN_open" name="open" object="[fl.video.FLVPlaybackCaptioning]" playername="" text=".addEventListener(%type:String=Event.OPEN{SecurityErrorEvent.SECURITY_ERROR,ProgressEvent.PROGRESS,Event.OPEN,IOErrorEvent.IO_ERROR,HTTPStatusEvent.HTTP_STATUS,Event.COMPLETE,CaptionTargetEvent.CAPTION_TARGET_CREATED,CaptionChangeEvent.CAPTION_CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the download operation to load the Timed Text XML file begins, following a call to the URLLoader.load() method." version=""/>
               <string helpurl="fl.video:FLVPlaybackCaptioning_flash.events.IOErrorEvent.IO_ERROR_ioError" name="ioError" object="[fl.video.FLVPlaybackCaptioning]" playername="" text=".addEventListener(%type:String=IOErrorEvent.IO_ERROR{SecurityErrorEvent.SECURITY_ERROR,ProgressEvent.PROGRESS,Event.OPEN,IOErrorEvent.IO_ERROR,HTTPStatusEvent.HTTP_STATUS,Event.COMPLETE,CaptionTargetEvent.CAPTION_TARGET_CREATED,CaptionChangeEvent.CAPTION_CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched if a call to the URLLoader.load() event results in a fatal error that terminates the download of the Timed Text XML file." version=""/>
               <string helpurl="fl.video:FLVPlaybackCaptioning_flash.events.HTTPStatusEvent.HTTP_STATUS_httpStatus" name="httpStatus" object="[fl.video.FLVPlaybackCaptioning]" playername="" text=".addEventListener(%type:String=HTTPStatusEvent.HTTP_STATUS{SecurityErrorEvent.SECURITY_ERROR,ProgressEvent.PROGRESS,Event.OPEN,IOErrorEvent.IO_ERROR,HTTPStatusEvent.HTTP_STATUS,Event.COMPLETE,CaptionTargetEvent.CAPTION_TARGET_CREATED,CaptionChangeEvent.CAPTION_CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched if a call to the URLLoader.load() event attempts to access a Timed Text XML file over HTTP and the current Flash Player environment is able to detect and return the status code for the request." version=""/>
               <string helpurl="fl.video:FLVPlaybackCaptioning_flash.events.Event.COMPLETE_complete" name="complete" object="[fl.video.FLVPlaybackCaptioning]" playername="" text=".addEventListener(%type:String=Event.COMPLETE{SecurityErrorEvent.SECURITY_ERROR,ProgressEvent.PROGRESS,Event.OPEN,IOErrorEvent.IO_ERROR,HTTPStatusEvent.HTTP_STATUS,Event.COMPLETE,CaptionTargetEvent.CAPTION_TARGET_CREATED,CaptionChangeEvent.CAPTION_CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched after all of the Timed Text XML data is loaded." version=""/>
               <string helpurl="fl.video:FLVPlaybackCaptioning_fl.video.CaptionTargetEvent.CAPTION_TARGET_CREATED_captionTargetCreated" name="captionTargetCreated" object="[fl.video.FLVPlaybackCaptioning]" playername="" text=".addEventListener(%type:String=CaptionTargetEvent.CAPTION_TARGET_CREATED{SecurityErrorEvent.SECURITY_ERROR,ProgressEvent.PROGRESS,Event.OPEN,IOErrorEvent.IO_ERROR,HTTPStatusEvent.HTTP_STATUS,Event.COMPLETE,CaptionTargetEvent.CAPTION_TARGET_CREATED,CaptionChangeEvent.CAPTION_CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched after the captionTarget property is created, but before any captions are added (the captionTarget property is empty)." version=""/>
               <string helpurl="fl.video:FLVPlaybackCaptioning_fl.video.CaptionChangeEvent.CAPTION_CHANGE_captionChange" name="captionChange" object="[fl.video.FLVPlaybackCaptioning]" playername="" text=".addEventListener(%type:String=CaptionChangeEvent.CAPTION_CHANGE{SecurityErrorEvent.SECURITY_ERROR,ProgressEvent.PROGRESS,Event.OPEN,IOErrorEvent.IO_ERROR,HTTPStatusEvent.HTTP_STATUS,Event.COMPLETE,CaptionTargetEvent.CAPTION_TARGET_CREATED,CaptionChangeEvent.CAPTION_CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a caption is added or removed from the caption target text field." version=""/>
            </folder>
         </folder>
         <folder helpurl="fl.video:INCManager" id="[fl.video.INCManager]" index="true" name="INCManager" sort="true" tiptext="The INCManager is the interface for classes that create the flash.net.NetConnection for the VideoPlayer class.">
            <folder helpurl="fl.video:INCManager" id="Methods" name="Methods" tiptext="Methods for class INCManager">
               <string helpurl="fl.video:INCManager:close" name="close" object="[fl.video.INCManager]" playername="" text=".close(%%):void" tiptext="Closes the NetConnection." version="1.0"/>
               <string helpurl="fl.video:INCManager:connectAgain" name="connectAgain" object="[fl.video.INCManager]" playername="" text=".connectAgain(%%):Boolean" tiptext="Called by the VideoPlayer object if the connection is successfully made but the stream is not found." version="1.0"/>
               <string helpurl="fl.video:INCManager:connectToURL" name="connectToURL" object="[fl.video.INCManager]" playername="" text=".connectToURL(%url:String%):Boolean" tiptext="Called by the VideoPlayer object to ask for a connection to the URL." version="1.0"/>
               <string helpurl="fl.video:INCManager:getProperty" name="getProperty" object="[fl.video.INCManager]" playername="" text=".getProperty(%propertyName:String%)" tiptext="Gets values of arbitrary properties supported by the class implementing INCManager." version="1.0"/>
               <string helpurl="fl.video:INCManager:helperDone" name="helperDone" object="[fl.video.INCManager]" playername="" text=".helperDone(%helper:Object,success:Boolean%):void" tiptext="Called by any helper object doing a task for the NCManager object to signal it has completed and whether it was successful." version="1.0"/>
               <string helpurl="fl.video:INCManager:reconnect" name="reconnect" object="[fl.video.INCManager]" playername="" text=".reconnect(%%):void" tiptext="Called by the VideoPlayer object to ask for reconnection after the connection is lost." version="1.0"/>
               <string helpurl="fl.video:INCManager:setProperty" name="setProperty" object="[fl.video.INCManager]" playername="" text=".setProperty(%propertyName:String,value:*%):void" tiptext="Sets values of arbitrary properties supported by the class implementing INCManager." version="1.0"/>
            </folder>
            <folder helpurl="fl.video:INCManager" id="Properties" name="Properties" tiptext="Properties for class INCManager">
               <string helpurl="fl.video:INCManager:bitrate:get" name="bitrate" object="[fl.video.INCManager]" playername="" text=".bitrate" tiptext="The bandwidth, in bits per second, used to switch between multiple streams." version=""/>
               <string helpurl="fl.video:INCManager:isRTMP:get" name="isRTMP" object="[fl.video.INCManager]" playername="" text=".isRTMP" tiptext="Whether the URL is for RTMP streaming from a Flash Media Server (FMS) or a progressive download." version=""/>
               <string helpurl="fl.video:INCManager:netConnection:get" name="netConnection" object="[fl.video.INCManager]" playername="" text=".netConnection" tiptext="Reference to the NetConnection object." version=""/>
               <string helpurl="fl.video:INCManager:streamHeight:get" name="streamHeight" object="[fl.video.INCManager]" playername="" text=".streamHeight" tiptext="Height of the stream, in pixels." version=""/>
               <string helpurl="fl.video:INCManager:streamLength:get" name="streamLength" object="[fl.video.INCManager]" playername="" text=".streamLength" tiptext="Length of the stream, in seconds." version=""/>
               <string helpurl="fl.video:INCManager:streamName:get" name="streamName" object="[fl.video.INCManager]" playername="" text=".streamName" tiptext="The stream name passed into the NetStream.play() method." version=""/>
               <string helpurl="fl.video:INCManager:streamWidth:get" name="streamWidth" object="[fl.video.INCManager]" playername="" text=".streamWidth" tiptext="Width of the stream, in pixels." version=""/>
               <string helpurl="fl.video:INCManager:timeout:get" name="timeout" object="[fl.video.INCManager]" playername="" text=".timeout" tiptext="The time in milliseconds after which attempts to make a connection stop." version=""/>
               <string helpurl="fl.video:INCManager:videoPlayer:get" name="videoPlayer" object="[fl.video.INCManager]" playername="" text=".videoPlayer" tiptext="The VideoPlayer object that owns this object." version=""/>
            </folder>
         </folder>
         <folder helpurl="fl.video:IVPEvent" id="[fl.video.IVPEvent]" index="true" name="IVPEvent" sort="true" tiptext="The IVPEvent interface is implemented by video events that apply to a specific VideoPlayer object within the FLVPlayback component.">
            <folder helpurl="fl.video:IVPEvent" id="Properties" name="Properties" tiptext="Properties for class IVPEvent">
               <string helpurl="fl.video:IVPEvent:type:get" name="type" object="[fl.video.IVPEvent]" playername="" text=".type" tiptext="The type of event." version=""/>
               <string helpurl="fl.video:IVPEvent:vp:get" name="vp" object="[fl.video.IVPEvent]" playername="" text=".vp" tiptext="The index of the VideoPlayer object involved in this event." version=""/>
            </folder>
         </folder>
         <folder asAncestors="flash.events:Event,Object" helpurl="fl.video:LayoutEvent" id="[fl.video.LayoutEvent]" index="true" name="LayoutEvent" sort="true" tiptext="Event dispatched when the video player is resized and/or laid out.">
            <folder helpurl="fl.video:LayoutEvent" id="Methods" name="Methods" tiptext="Methods for class LayoutEvent">
               <string constructor="true" helpurl="fl.video:LayoutEvent:LayoutEvent" name="LayoutEvent" object="[fl.video.LayoutEvent]" playername="" text="new LayoutEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,oldBounds:flash.geom:Rectangle=null,oldRegistrationBounds:flash.geom:Rectangle=null]%)" tiptext="Creates an Event object that contains information about layout events." version="1.0"/>
            </folder>
            <folder helpurl="fl.video:LayoutEvent" id="Properties" name="Properties" tiptext="Properties for class LayoutEvent">
               <string constant="true" helpurl="fl.video:LayoutEvent:LAYOUT" name="LAYOUT" object="[fl.video.LayoutEvent]" playername="" text="LayoutEvent.LAYOUT" tiptext="Defines the value of the type property of a layout event object." version=""/>
               <string helpurl="fl.video:LayoutEvent:oldBounds:get" name="oldBounds" object="[fl.video.LayoutEvent]" playername="" text=".oldBounds" tiptext="Indicates the values of the x, y, width, and height properties of the target before the event occurs." version=""/>
               <string helpurl="fl.video:LayoutEvent:oldRegistrationBounds:get" name="oldRegistrationBounds" object="[fl.video.LayoutEvent]" playername="" text=".oldRegistrationBounds" tiptext="Indicates the values of the registrationX, registrationY, registrationWidth, and registrationHeight properties of the target before the event occurs." version=""/>
            </folder>
         </folder>
         <folder asAncestors="flash.events:Event,Object" helpurl="fl.video:MetadataEvent" id="[fl.video.MetadataEvent]" index="true" name="MetadataEvent" sort="true" tiptext="Flash&amp;#xAE; Player dispatches a MetadataEvent object when the user requests the FLV file's metadata information packet (NetStream.onMetaData) and when cue points (NetStream.onCuePoint) are encountered in the FLV file.">
            <folder helpurl="fl.video:MetadataEvent" id="Methods" name="Methods" tiptext="Methods for class MetadataEvent">
               <string constructor="true" helpurl="fl.video:MetadataEvent:MetadataEvent" name="MetadataEvent" object="[fl.video.MetadataEvent]" playername="" text="new MetadataEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,info:Object=null,vp:uint=0]%)" tiptext="Creates an Event object that contains information about metadata events." version="1.0"/>
            </folder>
            <folder helpurl="fl.video:MetadataEvent" id="Properties" name="Properties" tiptext="Properties for class MetadataEvent">
               <string constant="true" helpurl="fl.video:MetadataEvent:CUE_POINT" name="CUE_POINT" object="[fl.video.MetadataEvent]" playername="" text="MetadataEvent.CUE_POINT" tiptext="Defines the value of the type property of a cuePoint event object." version=""/>
               <string constant="true" helpurl="fl.video:MetadataEvent:METADATA_RECEIVED" name="METADATA_RECEIVED" object="[fl.video.MetadataEvent]" playername="" text="MetadataEvent.METADATA_RECEIVED" tiptext="Defines the value of the type property of a metadataReceived event object." version=""/>
               <string helpurl="fl.video:MetadataEvent:info:get" name="info" object="[fl.video.MetadataEvent]" playername="" text=".info" tiptext="An object with dynamic properties added depending on the event type." version=""/>
               <string helpurl="fl.video:MetadataEvent:vp:get" name="vp" object="[fl.video.MetadataEvent]" playername="" text=".vp" tiptext="The index of the VideoPlayer object involved in this event." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="fl.video:NCManager" id="[fl.video.NCManager]" index="true" name="NCManager" sort="true" tiptext="Creates the NetConnection object for the VideoPlayer class, a helper class for that user facing class.">
            <folder helpurl="fl.video:NCManager" id="Methods" name="Methods" tiptext="Methods for class NCManager">
               <string constructor="true" helpurl="fl.video:NCManager:NCManager" name="NCManager" object="[fl.video.NCManager]" playername="" text="new NCManager(%%)" tiptext="Creates a new NCManager instance." version="1.0"/>
               <string helpurl="fl.video:NCManager:close" name="close" object="[fl.video.NCManager]" playername="" text=".close(%%):void" tiptext="Closes the NetConnection." version="1.0"/>
               <string helpurl="fl.video:NCManager:connectAgain" name="connectAgain" object="[fl.video.NCManager]" playername="" text=".connectAgain(%%):Boolean" tiptext="Called by the VideoPlayer object if the connection is successfully made but the stream is not found." version="1.0"/>
               <string helpurl="fl.video:NCManager:connectToURL" name="connectToURL" object="[fl.video.NCManager]" playername="" text=".connectToURL(%url:String%):Boolean" tiptext="Called by the VideoPlayer object to ask for a connection to the URL." version="1.0"/>
               <string helpurl="fl.video:NCManager:getProperty" name="getProperty" object="[fl.video.NCManager]" playername="" text=".getProperty(%propertyName:String%)" tiptext="Allows getting of the fallbackServerName, fpadZone, objectEncoding, and proxyType properties." version="1.0"/>
               <string helpurl="fl.video:NCManager:helperDone" name="helperDone" object="[fl.video.NCManager]" playername="" text=".helperDone(%helper:Object,success:Boolean%):void" tiptext="Called by any helper object doing a task for the NCManager object to signal it has completed and whether it was successful." version="1.0"/>
               <string helpurl="fl.video:NCManager:reconnect" name="reconnect" object="[fl.video.NCManager]" playername="" text=".reconnect(%%):void" tiptext="Called by the VideoPlayer object to ask for reconnection after the connection is lost." version="1.0"/>
               <string helpurl="fl.video:NCManager:setProperty" name="setProperty" object="[fl.video.NCManager]" playername="" text=".setProperty(%propertyName:String,value:*%):void" tiptext="Allows setting of the fallbackServerName, fpadZone, objectEncoding, and proxyType properties." version="1.0"/>
            </folder>
            <folder helpurl="fl.video:NCManager" id="Properties" name="Properties" tiptext="Properties for class NCManager">
               <string constant="true" helpurl="fl.video:NCManager:DEFAULT_TIMEOUT" name="DEFAULT_TIMEOUT" object="[fl.video.NCManager]" playername="" text="NCManager.DEFAULT_TIMEOUT" tiptext="The default timeout in milliseconds." version=""/>
               <string constant="true" helpurl="fl.video:NCManager:SHORT_VERSION" name="SHORT_VERSION" object="[fl.video.NCManager]" playername="" text="NCManager.SHORT_VERSION" tiptext="State variable indicating the short version number of the component." version=""/>
               <string constant="true" helpurl="fl.video:NCManager:VERSION" name="VERSION" object="[fl.video.NCManager]" playername="" text="NCManager.VERSION" tiptext="State variable indicating the long version number of the component." version=""/>
               <string helpurl="fl.video:NCManager:fallbackServerName" name="fallbackServerName" object="[fl.video.NCManager]" playername="" text=".fallbackServerName" tiptext="Exposes the fallbackServerName property indirectly or directly." version=""/>
               <string helpurl="fl.video:NCManager:bitrate:get" name="bitrate" object="[fl.video.NCManager]" playername="" text=".bitrate" tiptext="When streaming from Flash Media Server (FMS), the bitrate property returns the value calculated from autodetection, not the value set through the bitrate() property." version=""/>
               <string helpurl="fl.video:NCManager:isRTMP:get" name="isRTMP" object="[fl.video.NCManager]" playername="" text=".isRTMP" tiptext="Whether the URL is for RTMP streaming from a Flash Media Server (FMS) or a progressive download." version=""/>
               <string helpurl="fl.video:NCManager:netConnection:get" name="netConnection" object="[fl.video.NCManager]" playername="" text=".netConnection" tiptext="Reference to the NetConnection object." version=""/>
               <string helpurl="fl.video:NCManager:streamHeight:get" name="streamHeight" object="[fl.video.NCManager]" playername="" text=".streamHeight" tiptext="Height of the stream, in pixels." version=""/>
               <string helpurl="fl.video:NCManager:streamLength:get" name="streamLength" object="[fl.video.NCManager]" playername="" text=".streamLength" tiptext="Length of the stream, in seconds." version=""/>
               <string helpurl="fl.video:NCManager:streamName:get" name="streamName" object="[fl.video.NCManager]" playername="" text=".streamName" tiptext="The stream name passed into the NetStream.play() method." version=""/>
               <string helpurl="fl.video:NCManager:streamWidth:get" name="streamWidth" object="[fl.video.NCManager]" playername="" text=".streamWidth" tiptext="Width of the stream, in pixels." version=""/>
               <string helpurl="fl.video:NCManager:timeout:get" name="timeout" object="[fl.video.NCManager]" playername="" text=".timeout" tiptext="The time in milliseconds after which attempts to make a connection stop." version=""/>
               <string helpurl="fl.video:NCManager:videoPlayer:get" name="videoPlayer" object="[fl.video.NCManager]" playername="" text=".videoPlayer" tiptext="The VideoPlayer object that owns this object." version=""/>
            </folder>
         </folder>
         <folder asAncestors="fl.video:NCManager,Object" helpurl="fl.video:NCManagerNative" id="[fl.video.NCManagerNative]" index="true" name="NCManagerNative" sort="true" tiptext="The NCManagerNative class is a subclass of the NCManager class and supports native bandwidth detection, which some Flash Video Streaming Service providers may support.">
            <folder helpurl="fl.video:NCManagerNative" id="Methods" name="Methods" tiptext="Methods for class NCManagerNative">
               <string constructor="true" helpurl="fl.video:NCManagerNative:NCManagerNative" name="NCManagerNative" object="[fl.video.NCManagerNative]" playername="" text="new NCManagerNative(%%):void" tiptext="NCManagerNative constructor" version="1.0"/>
            </folder>
            <folder helpurl="fl.video:NCManagerNative" id="Properties" name="Properties" tiptext="Properties for class NCManagerNative">
               <string constant="true" helpurl="fl.video:NCManagerNative:SHORT_VERSION" name="SHORT_VERSION" object="[fl.video.NCManagerNative]" playername="" text="NCManagerNative.SHORT_VERSION" tiptext="State variable indicating the short version number of the component." version=""/>
               <string constant="true" helpurl="fl.video:NCManagerNative:VERSION" name="VERSION" object="[fl.video.NCManagerNative]" playername="" text="NCManagerNative.VERSION" tiptext="State variable indicating the long version number of the component." version=""/>
               <string helpurl="fl.video:NCManagerNative:streamLength:get" name="streamLength" object="[fl.video.NCManagerNative]" playername="" text=".streamLength" tiptext="Length of the stream, in milliseconds." version=""/>
            </folder>
         </folder>
         <folder asAncestors="flash.events:ErrorEvent,flash.events:TextEvent,flash.events:Event,Object" helpurl="fl.video:SkinErrorEvent" id="[fl.video.SkinErrorEvent]" index="true" name="SkinErrorEvent" sort="true" tiptext="Flash&amp;#xAE; Player dispatches a SkinErrorEvent object when there is an error loading a skin.">
            <folder helpurl="fl.video:SkinErrorEvent" id="Methods" name="Methods" tiptext="Methods for class SkinErrorEvent">
               <string constructor="true" helpurl="fl.video:SkinErrorEvent:SkinErrorEvent" name="SkinErrorEvent" object="[fl.video.SkinErrorEvent]" playername="" text="new SkinErrorEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,text:String]%)" tiptext="Creates an Event object that contains information about skinError events." version="1.0"/>
            </folder>
            <folder helpurl="fl.video:SkinErrorEvent" id="Properties" name="Properties" tiptext="Properties for class SkinErrorEvent">
               <string constant="true" helpurl="fl.video:SkinErrorEvent:SKIN_ERROR" name="SKIN_ERROR" object="[fl.video.SkinErrorEvent]" playername="" text="SkinErrorEvent.SKIN_ERROR" tiptext="Defines the value of the type property of a skinError event object." version=""/>
            </folder>
         </folder>
         <folder asAncestors="flash.events:Event,Object" helpurl="fl.video:SoundEvent" id="[fl.video.SoundEvent]" index="true" name="SoundEvent" sort="true" tiptext="Flash&amp;#xAE; Player dispatches a SoundEvent object when the user changes the sound by either moving the handle of the volumeBar control or setting the volume or soundTransform property.">
            <folder helpurl="fl.video:SoundEvent" id="Methods" name="Methods" tiptext="Methods for class SoundEvent">
               <string constructor="true" helpurl="fl.video:SoundEvent:SoundEvent" name="SoundEvent" object="[fl.video.SoundEvent]" playername="" text="new SoundEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,soundTransform:flash.media:SoundTransform=null]%)" tiptext="SoundEvent construtor" version="1.0"/>
            </folder>
            <folder helpurl="fl.video:SoundEvent" id="Properties" name="Properties" tiptext="Properties for class SoundEvent">
               <string constant="true" helpurl="fl.video:SoundEvent:SOUND_UPDATE" name="SOUND_UPDATE" object="[fl.video.SoundEvent]" playername="" text="SoundEvent.SOUND_UPDATE" tiptext="Defines the value of the type property of a soundUpdate event object." version=""/>
               <string helpurl="fl.video:SoundEvent:soundTransform:get" name="soundTransform" object="[fl.video.SoundEvent]" playername="" text=".soundTransform" tiptext="Indicates new values for volume and panning." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="fl.video:VideoAlign" id="[fl.video.VideoAlign]" index="true" name="VideoAlign" sort="true" tiptext="The VideoAlign class provides constant values to use for the FLVPlayback.align and VideoPlayer.align properties.">
            <folder helpurl="fl.video:VideoAlign" id="Properties" name="Properties" tiptext="Properties for class VideoAlign">
               <string constant="true" helpurl="fl.video:VideoAlign:BOTTOM_LEFT" name="BOTTOM_LEFT" object="[fl.video.VideoAlign]" playername="" text="VideoAlign.BOTTOM_LEFT" tiptext="Specifies that the video is aligned in the bottom-left corner." version=""/>
               <string constant="true" helpurl="fl.video:VideoAlign:BOTTOM_RIGHT" name="BOTTOM_RIGHT" object="[fl.video.VideoAlign]" playername="" text="VideoAlign.BOTTOM_RIGHT" tiptext="Specifies that the video is aligned in the bottom-right corner." version=""/>
               <string constant="true" helpurl="fl.video:VideoAlign:BOTTOM" name="BOTTOM" object="[fl.video.VideoAlign]" playername="" text="VideoAlign.BOTTOM" tiptext="Specifies that the video is aligned at the bottom." version=""/>
               <string constant="true" helpurl="fl.video:VideoAlign:CENTER" name="CENTER" object="[fl.video.VideoAlign]" playername="" text="VideoAlign.CENTER" tiptext="Specifies that the video is aligned in the center." version=""/>
               <string constant="true" helpurl="fl.video:VideoAlign:LEFT" name="LEFT" object="[fl.video.VideoAlign]" playername="" text="VideoAlign.LEFT" tiptext="Specifies that the video is aligned on the left." version=""/>
               <string constant="true" helpurl="fl.video:VideoAlign:RIGHT" name="RIGHT" object="[fl.video.VideoAlign]" playername="" text="VideoAlign.RIGHT" tiptext="Specifies that the video is aligned to the right." version=""/>
               <string constant="true" helpurl="fl.video:VideoAlign:TOP_LEFT" name="TOP_LEFT" object="[fl.video.VideoAlign]" playername="" text="VideoAlign.TOP_LEFT" tiptext="Specifies that the video is aligned in the top-left corner." version=""/>
               <string constant="true" helpurl="fl.video:VideoAlign:TOP_RIGHT" name="TOP_RIGHT" object="[fl.video.VideoAlign]" playername="" text="VideoAlign.TOP_RIGHT" tiptext="Specifies that the video is aligned in the top-right corner." version=""/>
               <string constant="true" helpurl="fl.video:VideoAlign:TOP" name="TOP" object="[fl.video.VideoAlign]" playername="" text="VideoAlign.TOP" tiptext="Specifies that the video is aligned at the top." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Error,Object" helpurl="fl.video:VideoError" id="[fl.video.VideoError]" index="true" name="VideoError" sort="true" tiptext="The VideoError exception is the primary mechanism for reporting runtime errors from the FLVPlayback and VideoPlayer classes.">
            <folder helpurl="fl.video:VideoError" id="Methods" name="Methods" tiptext="Methods for class VideoError">
               <string constructor="true" helpurl="fl.video:VideoError:VideoError" name="VideoError" object="[fl.video.VideoError]" playername="" text="new VideoError(%errCode:uint[,msg:String=null]%)" tiptext="Creates a new VideoError object." version="1.0"/>
            </folder>
            <folder helpurl="fl.video:VideoError" id="Properties" name="Properties" tiptext="Properties for class VideoError">
               <string constant="true" helpurl="fl.video:VideoError:DELETE_DEFAULT_PLAYER" name="DELETE_DEFAULT_PLAYER" object="[fl.video.VideoError]" playername="" text="VideoError.DELETE_DEFAULT_PLAYER" tiptext="State variable indicating that the user cannot delete the default VideoPlayer object." version=""/>
               <string constant="true" helpurl="fl.video:VideoError:ILLEGAL_CUE_POINT" name="ILLEGAL_CUE_POINT" object="[fl.video.VideoError]" playername="" text="VideoError.ILLEGAL_CUE_POINT" tiptext="State variable indicating the illegal cue point." version=""/>
               <string constant="true" helpurl="fl.video:VideoError:INCMANAGER_CLASS_UNSET" name="INCMANAGER_CLASS_UNSET" object="[fl.video.VideoError]" playername="" text="VideoError.INCMANAGER_CLASS_UNSET" tiptext="State variable indicating that the INCManager class is not set." version=""/>
               <string constant="true" helpurl="fl.video:VideoError:INVALID_SEEK" name="INVALID_SEEK" object="[fl.video.VideoError]" playername="" text="VideoError.INVALID_SEEK" tiptext="State variable indicating an invalid seek." version=""/>
               <string constant="true" helpurl="fl.video:VideoError:INVALID_SOURCE" name="INVALID_SOURCE" object="[fl.video.VideoError]" playername="" text="VideoError.INVALID_SOURCE" tiptext="State variable indicating an invalid source." version=""/>
               <string constant="true" helpurl="fl.video:VideoError:INVALID_XML" name="INVALID_XML" object="[fl.video.VideoError]" playername="" text="VideoError.INVALID_XML" tiptext="State variable indicating invalid XML." version=""/>
               <string constant="true" helpurl="fl.video:VideoError:MISSING_SKIN_STYLE" name="MISSING_SKIN_STYLE" object="[fl.video.VideoError]" playername="" text="VideoError.MISSING_SKIN_STYLE" tiptext="State variable indicating a missing skin style." version=""/>
               <string constant="true" helpurl="fl.video:VideoError:NETSTREAM_CLIENT_CLASS_UNSET" name="NETSTREAM_CLIENT_CLASS_UNSET" object="[fl.video.VideoError]" playername="" text="VideoError.NETSTREAM_CLIENT_CLASS_UNSET" tiptext="An error that occurs when the VideoPlayer.netStatusClientClassstatic property is set to an invalid value." version=""/>
               <string constant="true" helpurl="fl.video:VideoError:NO_BITRATE_MATCH" name="NO_BITRATE_MATCH" object="[fl.video.VideoError]" playername="" text="VideoError.NO_BITRATE_MATCH" tiptext="State variable indicating that there is no bitrate match." version=""/>
               <string constant="true" helpurl="fl.video:VideoError:NO_CONNECTION" name="NO_CONNECTION" object="[fl.video.VideoError]" playername="" text="VideoError.NO_CONNECTION" tiptext="State variable indicating that Flash Player is unable to make a connection to the server or to find the FLV file on the server." version=""/>
               <string constant="true" helpurl="fl.video:VideoError:NULL_URL_LOAD" name="NULL_URL_LOAD" object="[fl.video.VideoError]" playername="" text="VideoError.NULL_URL_LOAD" tiptext="State variable indicating that a null URL was sent to the load() method." version=""/>
               <string constant="true" helpurl="fl.video:VideoError:SHORT_VERSION" name="SHORT_VERSION" object="[fl.video.VideoError]" playername="" text="VideoError.SHORT_VERSION" tiptext="State variable indicating the short version number of the component." version=""/>
               <string constant="true" helpurl="fl.video:VideoError:UNSUPPORTED_PROPERTY" name="UNSUPPORTED_PROPERTY" object="[fl.video.VideoError]" playername="" text="VideoError.UNSUPPORTED_PROPERTY" tiptext="State variable indicating that an unsupported property was passed to the INCManager class, or the getProperty or setProperty methods." version=""/>
               <string constant="true" helpurl="fl.video:VideoError:VERSION" name="VERSION" object="[fl.video.VideoError]" playername="" text="VideoError.VERSION" tiptext="State variable indicating the long version number of the component." version=""/>
               <string helpurl="fl.video:VideoError:code:get" name="code" object="[fl.video.VideoError]" playername="" text=".code" tiptext="The code that corresponds to the error." version=""/>
            </folder>
         </folder>
         <folder asAncestors="flash.events:Event,Object" helpurl="fl.video:VideoEvent" id="[fl.video.VideoEvent]" index="true" name="VideoEvent" sort="true" tiptext="Flash&amp;#xAE; Player dispatches a VideoEvent object when the user plays a video.">
            <folder helpurl="fl.video:VideoEvent" id="Methods" name="Methods" tiptext="Methods for class VideoEvent">
               <string constructor="true" helpurl="fl.video:VideoEvent:VideoEvent" name="VideoEvent" object="[fl.video.VideoEvent]" playername="" text="new VideoEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,state:String=null,playheadTime:Number=unknown,vp:uint=0]%)" tiptext="Creates an Event object that contains information about video events." version="1.0"/>
            </folder>
            <folder helpurl="fl.video:VideoEvent" id="Properties" name="Properties" tiptext="Properties for class VideoEvent">
               <string constant="true" helpurl="fl.video:VideoEvent:AUTO_REWOUND" name="AUTO_REWOUND" object="[fl.video.VideoEvent]" playername="" text="VideoEvent.AUTO_REWOUND" tiptext="Defines the value of the type property of an autoRewound event object." version=""/>
               <string constant="true" helpurl="fl.video:VideoEvent:BUFFERING_STATE_ENTERED" name="BUFFERING_STATE_ENTERED" object="[fl.video.VideoEvent]" playername="" text="VideoEvent.BUFFERING_STATE_ENTERED" tiptext="Defines the value of the type property of a bufferingStateEntered event object." version=""/>
               <string constant="true" helpurl="fl.video:VideoEvent:CLOSE" name="CLOSE" object="[fl.video.VideoEvent]" playername="" text="VideoEvent.CLOSE" tiptext="Defines the value of the type property of a close event object." version=""/>
               <string constant="true" helpurl="fl.video:VideoEvent:COMPLETE" name="COMPLETE" object="[fl.video.VideoEvent]" playername="" text="VideoEvent.COMPLETE" tiptext="Defines the value of the type property of a complete event object." version=""/>
               <string constant="true" helpurl="fl.video:VideoEvent:FAST_FORWARD" name="FAST_FORWARD" object="[fl.video.VideoEvent]" playername="" text="VideoEvent.FAST_FORWARD" tiptext="Defines the value of the type property of a fastForward event object." version=""/>
               <string constant="true" helpurl="fl.video:VideoEvent:PAUSED_STATE_ENTERED" name="PAUSED_STATE_ENTERED" object="[fl.video.VideoEvent]" playername="" text="VideoEvent.PAUSED_STATE_ENTERED" tiptext="Defines the value of the type property of a pausedStateEntered event object." version=""/>
               <string constant="true" helpurl="fl.video:VideoEvent:PLAYHEAD_UPDATE" name="PLAYHEAD_UPDATE" object="[fl.video.VideoEvent]" playername="" text="VideoEvent.PLAYHEAD_UPDATE" tiptext="Defines the value of the type property of a playheadUpdate event object." version=""/>
               <string constant="true" helpurl="fl.video:VideoEvent:PLAYING_STATE_ENTERED" name="PLAYING_STATE_ENTERED" object="[fl.video.VideoEvent]" playername="" text="VideoEvent.PLAYING_STATE_ENTERED" tiptext="Defines the value of the type property of a playingStateEntered event object." version=""/>
               <string constant="true" helpurl="fl.video:VideoEvent:READY" name="READY" object="[fl.video.VideoEvent]" playername="" text="VideoEvent.READY" tiptext="Defines the value of the type property of a ready event object." version=""/>
               <string constant="true" helpurl="fl.video:VideoEvent:REWIND" name="REWIND" object="[fl.video.VideoEvent]" playername="" text="VideoEvent.REWIND" tiptext="Defines the value of the type property of a rewind event object." version=""/>
               <string constant="true" helpurl="fl.video:VideoEvent:SCRUB_FINISH" name="SCRUB_FINISH" object="[fl.video.VideoEvent]" playername="" text="VideoEvent.SCRUB_FINISH" tiptext="Defines the value of the type property of a scrubFinish event object." version=""/>
               <string constant="true" helpurl="fl.video:VideoEvent:SCRUB_START" name="SCRUB_START" object="[fl.video.VideoEvent]" playername="" text="VideoEvent.SCRUB_START" tiptext="Defines the value of the type property of a scrubStart event object." version=""/>
               <string constant="true" helpurl="fl.video:VideoEvent:SEEKED" name="SEEKED" object="[fl.video.VideoEvent]" playername="" text="VideoEvent.SEEKED" tiptext="Defines the value of the type property of a seeked event object." version=""/>
               <string constant="true" helpurl="fl.video:VideoEvent:SKIN_LOADED" name="SKIN_LOADED" object="[fl.video.VideoEvent]" playername="" text="VideoEvent.SKIN_LOADED" tiptext="Defines the value of the type property of a skinLoaded event object." version=""/>
               <string constant="true" helpurl="fl.video:VideoEvent:STATE_CHANGE" name="STATE_CHANGE" object="[fl.video.VideoEvent]" playername="" text="VideoEvent.STATE_CHANGE" tiptext="Defines the value of the type property of a stateChange event object." version=""/>
               <string constant="true" helpurl="fl.video:VideoEvent:STOPPED_STATE_ENTERED" name="STOPPED_STATE_ENTERED" object="[fl.video.VideoEvent]" playername="" text="VideoEvent.STOPPED_STATE_ENTERED" tiptext="Defines the value of the type property of a stoppedStateEntered event object." version=""/>
               <string helpurl="fl.video:VideoEvent:playheadTime:get" name="playheadTime" object="[fl.video.VideoEvent]" playername="" text=".playheadTime" tiptext="A number that is the current playhead time or position, measured in seconds, which can be a fractional value." version=""/>
               <string helpurl="fl.video:VideoEvent:state:get" name="state" object="[fl.video.VideoEvent]" playername="" text=".state" tiptext="A string identifying the constant from the VideoState class that describes the playback state of the component." version=""/>
               <string helpurl="fl.video:VideoEvent:vp:get" name="vp" object="[fl.video.VideoEvent]" playername="" text=".vp" tiptext="The index of the VideoPlayer object involved in this event." version=""/>
            </folder>
         </folder>
         <folder asAncestors="flash.media:Video,flash.display:DisplayObject,flash.events:EventDispatcher,Object" helpurl="fl.video:VideoPlayer" id="[fl.video.VideoPlayer]" index="true" name="VideoPlayer" sort="true" tiptext="The VideoPlayer class lets you create a video player with a slightly smaller SWF file than if you used the FLVPlayback component.">
            <folder helpurl="fl.video:VideoPlayer" id="Methods" name="Methods" tiptext="Methods for class VideoPlayer">
               <string constructor="true" helpurl="fl.video:VideoPlayer:VideoPlayer" name="VideoPlayer" object="[fl.video.VideoPlayer]" playername="" text="new VideoPlayer(%[width:int=320,height:int=240]%)" tiptext="Creates a VideoPlayer object with a specified width and height." version="1.0"/>
               <string helpurl="fl.video:VideoPlayer:close" name="close" object="[fl.video.VideoPlayer]" playername="" text=".close(%%):void" tiptext="Forces the video stream and Flash Media Server connection to close." version="1.0"/>
               <string helpurl="fl.video:VideoPlayer:load" name="load" object="[fl.video.VideoPlayer]" playername="" text=".load(%url:String[,totalTime:Number=unknown,isLive:Boolean=false,startTime:Number=unknown,duration:Number=unknown]%):void" tiptext="Similar to the play() method, but causes the FLV file to load without playing." version="1.0"/>
               <string helpurl="fl.video:VideoPlayer:ncConnected" name="ncConnected" object="[fl.video.VideoPlayer]" playername="" text=".ncConnected(%%):void" tiptext="Called by INCManager after the connection is complete or failed after a call to the INCManager.connectToURL() method." version="1.0"/>
               <string helpurl="fl.video:VideoPlayer:ncReconnected" name="ncReconnected" object="[fl.video.VideoPlayer]" playername="" text=".ncReconnected(%%):void" tiptext="Called by INCManager after the reconnection is complete or has failed after a call to the INCManager.reconnect() method." version="1.0"/>
               <string helpurl="fl.video:VideoPlayer:pause" name="pause" object="[fl.video.VideoPlayer]" playername="" text=".pause(%%):void" tiptext="Pauses video playback." version="1.0"/>
               <string helpurl="fl.video:VideoPlayer:playWhenEnoughDownloaded" name="playWhenEnoughDownloaded" object="[fl.video.VideoPlayer]" playername="" text=".playWhenEnoughDownloaded(%%):void" tiptext="playWhenEnoughDownloaded method" version="1.0"/>
               <string helpurl="fl.video:VideoPlayer:play" name="play" object="[fl.video.VideoPlayer]" playername="" text=".play(%[url:String=null,totalTime:Number=unknown,isLive:Boolean=false,startTime:Number=unknown,duration:Number=unknown]%):void" tiptext="play method" version="1.0"/>
               <string helpurl="fl.video:VideoPlayer:seek" name="seek" object="[fl.video.VideoPlayer]" playername="" text=".seek(%time:Number%):void" tiptext="Seeks to a given time in the file, specified in seconds, with a precision of three decimal places (milliseconds)." version="1.0"/>
               <string helpurl="fl.video:VideoPlayer:setScale" name="setScale" object="[fl.video.VideoPlayer]" playername="" text=".setScale(%scaleX:Number,scaleY:Number%):void" tiptext="Sets the scaleX and scaleY properties simultaneously." version="1.0"/>
               <string helpurl="fl.video:VideoPlayer:setSize" name="setSize" object="[fl.video.VideoPlayer]" playername="" text=".setSize(%width:Number,height:Number%):void" tiptext="Sets the width and height properties simultaneously." version="1.0"/>
               <string helpurl="fl.video:VideoPlayer:stop" name="stop" object="[fl.video.VideoPlayer]" playername="" text=".stop(%%):void" tiptext="Stops video playback." version="1.0"/>
            </folder>
            <folder helpurl="fl.video:VideoPlayer" id="Properties" name="Properties" tiptext="Properties for class VideoPlayer">
               <string constant="true" helpurl="fl.video:VideoPlayer:SHORT_VERSION" name="SHORT_VERSION" object="[fl.video.VideoPlayer]" playername="" text="VideoPlayer.SHORT_VERSION" tiptext="State variable indicating the short version number of the component." version=""/>
               <string constant="true" helpurl="fl.video:VideoPlayer:VERSION" name="VERSION" object="[fl.video.VideoPlayer]" playername="" text="VideoPlayer.VERSION" tiptext="State variable indicating the long version number of the component." version=""/>
               <string helpurl="fl.video:VideoPlayer:iNCManagerClass" name="iNCManagerClass" object="[fl.video.VideoPlayer]" playername="" text=".iNCManagerClass" tiptext="To make all VideoPlayer objects use your custom class as the default INCManager implementation, set the iNCManagerClass property to the class object or string name of your custom class." version=""/>
               <string helpurl="fl.video:VideoPlayer:netStreamClientClass" name="netStreamClientClass" object="[fl.video.VideoPlayer]" playername="" text=".netStreamClientClass" tiptext="Registers a custom class for the NetStream's client property." version=""/>
               <string helpurl="fl.video:VideoPlayer:align:get" name="align" object="[fl.video.VideoPlayer]" playername="" text=".align" tiptext="Specifies how the video is displayed relative to the registrationX, registrationY, registrationWidth and registrationHeight properties." version=""/>
               <string helpurl="fl.video:VideoPlayer:autoRewind:get" name="autoRewind" object="[fl.video.VideoPlayer]" playername="" text=".autoRewind" tiptext="A Boolean value that, if true, causes the FLV file to rewind to Frame 1 when play stops, either because the player reached the end of the stream or the stop() method was called." version=""/>
               <string helpurl="fl.video:VideoPlayer:bufferTime:get" name="bufferTime" object="[fl.video.VideoPlayer]" playername="" text=".bufferTime" tiptext="A number that specifies the number of seconds to buffer in memory before beginning to play a video stream." version=""/>
               <string helpurl="fl.video:VideoPlayer:bytesLoaded:get" name="bytesLoaded" object="[fl.video.VideoPlayer]" playername="" text=".bytesLoaded" tiptext="A number that indicates the extent of downloading, in number of bytes, for an HTTP download." version=""/>
               <string helpurl="fl.video:VideoPlayer:bytesTotal:get" name="bytesTotal" object="[fl.video.VideoPlayer]" playername="" text=".bytesTotal" tiptext="A number that specifies the total number of bytes downloaded for an HTTP download." version=""/>
               <string helpurl="fl.video:VideoPlayer:idleTimeout:get" name="idleTimeout" object="[fl.video.VideoPlayer]" playername="" text=".idleTimeout" tiptext="The amount of time, in milliseconds, before Flash terminates an idle connection to a video server, such as Flash Media Server, because playing paused or stopped." version=""/>
               <string helpurl="fl.video:VideoPlayer:isLive:get" name="isLive" object="[fl.video.VideoPlayer]" playername="" text=".isLive" tiptext="A Boolean value that is true if the video stream is live." version=""/>
               <string helpurl="fl.video:VideoPlayer:isRTMP:get" name="isRTMP" object="[fl.video.VideoPlayer]" playername="" text=".isRTMP" tiptext="A Boolean value that is true if the FLV file is streaming from Flash Media Server (FMS) using RTMP." version=""/>
               <string helpurl="fl.video:VideoPlayer:metadata:get" name="metadata" object="[fl.video.VideoPlayer]" playername="" text=".metadata" tiptext="An object that is a metadata information packet that is received from a call to the NetSteam.onMetaData() callback method, if available." version=""/>
               <string helpurl="fl.video:VideoPlayer:ncMgr:get" name="ncMgr" object="[fl.video.VideoPlayer]" playername="" text=".ncMgr" tiptext="An INCManager object that provides access to an instance of the class implementing INCManager, which is an interface to the NCManager class." version=""/>
               <string helpurl="fl.video:VideoPlayer:netConnection:get" name="netConnection" object="[fl.video.VideoPlayer]" playername="" text=".netConnection" tiptext="Allows direct access to the NetConnection instance created by the video player." version=""/>
               <string helpurl="fl.video:VideoPlayer:netStream:get" name="netStream" object="[fl.video.VideoPlayer]" playername="" text=".netStream" tiptext="Allows direct access to the NetStream instance created by the video player." version=""/>
               <string helpurl="fl.video:VideoPlayer:playheadTime:get" name="playheadTime" object="[fl.video.VideoPlayer]" playername="" text=".playheadTime" tiptext="A number that is the current playhead time or position, measured in seconds, which can be a fractional value." version=""/>
               <string helpurl="fl.video:VideoPlayer:playheadUpdateInterval:get" name="playheadUpdateInterval" object="[fl.video.VideoPlayer]" playername="" text=".playheadUpdateInterval" tiptext="A number that is the amount of time, in milliseconds, between each playheadUpdate event." version=""/>
               <string helpurl="fl.video:VideoPlayer:progressInterval:get" name="progressInterval" object="[fl.video.VideoPlayer]" playername="" text=".progressInterval" tiptext="A number that is the amount of time, in milliseconds, between each progress event." version=""/>
               <string helpurl="fl.video:VideoPlayer:registrationHeight:get" name="registrationHeight" object="[fl.video.VideoPlayer]" playername="" text=".registrationHeight" tiptext="The height used to align the video content when autoresizing." version=""/>
               <string helpurl="fl.video:VideoPlayer:registrationWidth:get" name="registrationWidth" object="[fl.video.VideoPlayer]" playername="" text=".registrationWidth" tiptext="The width used to align the video content when autoresizing." version=""/>
               <string helpurl="fl.video:VideoPlayer:registrationX:get" name="registrationX" object="[fl.video.VideoPlayer]" playername="" text=".registrationX" tiptext="The x coordinate used to align the video content when autoresizing." version=""/>
               <string helpurl="fl.video:VideoPlayer:registrationY:get" name="registrationY" object="[fl.video.VideoPlayer]" playername="" text=".registrationY" tiptext="The y coordinate used to align the video content when autoresizing." version=""/>
               <string helpurl="fl.video:VideoPlayer:scaleMode:get" name="scaleMode" object="[fl.video.VideoPlayer]" playername="" text=".scaleMode" tiptext="Specifies how the video resizes after loading." version=""/>
               <string helpurl="fl.video:VideoPlayer:soundTransform:get" name="soundTransform" object="[fl.video.VideoPlayer]" playername="" text=".soundTransform" tiptext="Provides direct access to the NetStream.soundTransform property to expose more sound control." version=""/>
               <string helpurl="fl.video:VideoPlayer:source:get" name="source" object="[fl.video.VideoPlayer]" playername="" text=".source" tiptext="A string that specifies the URL of the FLV file to stream and how to stream it." version=""/>
               <string helpurl="fl.video:VideoPlayer:stateResponsive:get" name="stateResponsive" object="[fl.video.VideoPlayer]" playername="" text=".stateResponsive" tiptext="A Boolean value that is true if the state is responsive." version=""/>
               <string helpurl="fl.video:VideoPlayer:state:get" name="state" object="[fl.video.VideoPlayer]" playername="" text=".state" tiptext="A string that specifies the state of the component." version=""/>
               <string helpurl="fl.video:VideoPlayer:totalTime:get" name="totalTime" object="[fl.video.VideoPlayer]" playername="" text=".totalTime" tiptext="A number that is the total playing time for the video in seconds." version=""/>
               <string helpurl="fl.video:VideoPlayer:videoHeight:get" name="videoHeight" object="[fl.video.VideoPlayer]" playername="" text=".videoHeight" tiptext="The source width of the loaded FLV file." version=""/>
               <string helpurl="fl.video:VideoPlayer:videoWidth:get" name="videoWidth" object="[fl.video.VideoPlayer]" playername="" text=".videoWidth" tiptext="The source width of the loaded FLV file." version=""/>
               <string helpurl="fl.video:VideoPlayer:visible:get" name="visible" object="[fl.video.VideoPlayer]" playername="" text=".visible" tiptext="A Boolean value that, if true, makes the VideoPlayer instance visible." version=""/>
               <string helpurl="fl.video:VideoPlayer:volume:get" name="volume" object="[fl.video.VideoPlayer]" playername="" text=".volume" tiptext="A number in the range of 0 to 1 that indicates the volume control setting." version=""/>
               <string helpurl="fl.video:VideoPlayer:height:set" name="height" object="[fl.video.VideoPlayer]" playername="" text=".height" tiptext="A number that specifies the height of the VideoPlayer instance (in pixels)." version=""/>
               <string helpurl="fl.video:VideoPlayer:scaleX:set" name="scaleX" object="[fl.video.VideoPlayer]" playername="" text=".scaleX" tiptext="A number that is the horizontal scale." version=""/>
               <string helpurl="fl.video:VideoPlayer:scaleY:set" name="scaleY" object="[fl.video.VideoPlayer]" playername="" text=".scaleY" tiptext="A number that is the vertical scale." version=""/>
               <string helpurl="fl.video:VideoPlayer:width:set" name="width" object="[fl.video.VideoPlayer]" playername="" text=".width" tiptext="A number that specifies the width of the VideoPlayer instance on the Stage." version=""/>
               <string helpurl="fl.video:VideoPlayer:x:set" name="x" object="[fl.video.VideoPlayer]" playername="" text=".x" tiptext="A number that specifies the horizontal position (in pixels) of the video player." version=""/>
               <string helpurl="fl.video:VideoPlayer:y:set" name="y" object="[fl.video.VideoPlayer]" playername="" text=".y" tiptext="A number that specifies the vertical position (in pixels) of the video player." version=""/>
            </folder>
            <folder helpurl="fl.video:VideoPlayer" id="Events" name="Events" tiptext="Events for class VideoPlayer">
               <string helpurl="fl.video:VideoPlayer__drmStatus" name="drmStatus" object="[fl.video.VideoPlayer]" playername="AIR" text=".addEventListener(%type:String=DRMStatusEvent.{DRMStatusEvent.,DRMErrorEvent.,DRMAuthenticateEvent.,VideoEvent.STATE_CHANGE,VideoEvent.AUTO_REWOUND,LayoutEvent.LAYOUT,VideoEvent.READY,VideoProgressEvent.PROGRESS,VideoEvent.PLAYHEAD_UPDATE,MetadataEvent.METADATA_RECEIVED,MetadataEvent.CUE_POINT,VideoEvent.COMPLETE,VideoEvent.CLOSE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="drmError event" version=""/>
               <string helpurl="fl.video:VideoPlayer__drmError" name="drmError" object="[fl.video.VideoPlayer]" playername="AIR" text=".addEventListener(%type:String=DRMErrorEvent.{DRMStatusEvent.,DRMErrorEvent.,DRMAuthenticateEvent.,VideoEvent.STATE_CHANGE,VideoEvent.AUTO_REWOUND,LayoutEvent.LAYOUT,VideoEvent.READY,VideoProgressEvent.PROGRESS,VideoEvent.PLAYHEAD_UPDATE,MetadataEvent.METADATA_RECEIVED,MetadataEvent.CUE_POINT,VideoEvent.COMPLETE,VideoEvent.CLOSE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="drmError event" version=""/>
               <string helpurl="fl.video:VideoPlayer__drmAuthenticate" name="drmAuthenticate" object="[fl.video.VideoPlayer]" playername="AIR" text=".addEventListener(%type:String=DRMAuthenticateEvent.{DRMStatusEvent.,DRMErrorEvent.,DRMAuthenticateEvent.,VideoEvent.STATE_CHANGE,VideoEvent.AUTO_REWOUND,LayoutEvent.LAYOUT,VideoEvent.READY,VideoProgressEvent.PROGRESS,VideoEvent.PLAYHEAD_UPDATE,MetadataEvent.METADATA_RECEIVED,MetadataEvent.CUE_POINT,VideoEvent.COMPLETE,VideoEvent.CLOSE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="drmAuthenticate event" version=""/>
               <string helpurl="fl.video:VideoPlayer_fl.video.VideoEvent.STATE_CHANGE_stateChange" name="stateChange" object="[fl.video.VideoPlayer]" playername="" text=".addEventListener(%type:String=VideoEvent.STATE_CHANGE{DRMStatusEvent.,DRMErrorEvent.,DRMAuthenticateEvent.,VideoEvent.STATE_CHANGE,VideoEvent.AUTO_REWOUND,LayoutEvent.LAYOUT,VideoEvent.READY,VideoProgressEvent.PROGRESS,VideoEvent.PLAYHEAD_UPDATE,MetadataEvent.METADATA_RECEIVED,MetadataEvent.CUE_POINT,VideoEvent.COMPLETE,VideoEvent.CLOSE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the playback state changes." version=""/>
               <string helpurl="fl.video:VideoPlayer_fl.video.VideoEvent.AUTO_REWOUND_autoRewound" name="autoRewound" object="[fl.video.VideoPlayer]" playername="" text=".addEventListener(%type:String=VideoEvent.AUTO_REWOUND{DRMStatusEvent.,DRMErrorEvent.,DRMAuthenticateEvent.,VideoEvent.STATE_CHANGE,VideoEvent.AUTO_REWOUND,LayoutEvent.LAYOUT,VideoEvent.READY,VideoProgressEvent.PROGRESS,VideoEvent.PLAYHEAD_UPDATE,MetadataEvent.METADATA_RECEIVED,MetadataEvent.CUE_POINT,VideoEvent.COMPLETE,VideoEvent.CLOSE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the playhead is moved to the start of the video player because the autoRewind property is set to true." version=""/>
               <string helpurl="fl.video:VideoPlayer_fl.video.LayoutEvent.LAYOUT_layout" name="layout" object="[fl.video.VideoPlayer]" playername="" text=".addEventListener(%type:String=LayoutEvent.LAYOUT{DRMStatusEvent.,DRMErrorEvent.,DRMAuthenticateEvent.,VideoEvent.STATE_CHANGE,VideoEvent.AUTO_REWOUND,LayoutEvent.LAYOUT,VideoEvent.READY,VideoProgressEvent.PROGRESS,VideoEvent.PLAYHEAD_UPDATE,MetadataEvent.METADATA_RECEIVED,MetadataEvent.CUE_POINT,VideoEvent.COMPLETE,VideoEvent.CLOSE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the video player is resized or laid out." version=""/>
               <string helpurl="fl.video:VideoPlayer_fl.video.VideoEvent.READY_ready" name="ready" object="[fl.video.VideoPlayer]" playername="" text=".addEventListener(%type:String=VideoEvent.READY{DRMStatusEvent.,DRMErrorEvent.,DRMAuthenticateEvent.,VideoEvent.STATE_CHANGE,VideoEvent.AUTO_REWOUND,LayoutEvent.LAYOUT,VideoEvent.READY,VideoProgressEvent.PROGRESS,VideoEvent.PLAYHEAD_UPDATE,MetadataEvent.METADATA_RECEIVED,MetadataEvent.CUE_POINT,VideoEvent.COMPLETE,VideoEvent.CLOSE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Event dispatched when an FLV file is loaded and ready to display." version=""/>
               <string helpurl="fl.video:VideoPlayer_fl.video.VideoProgressEvent.PROGRESS_progress" name="progress" object="[fl.video.VideoPlayer]" playername="" text=".addEventListener(%type:String=VideoProgressEvent.PROGRESS{DRMStatusEvent.,DRMErrorEvent.,DRMAuthenticateEvent.,VideoEvent.STATE_CHANGE,VideoEvent.AUTO_REWOUND,LayoutEvent.LAYOUT,VideoEvent.READY,VideoProgressEvent.PROGRESS,VideoEvent.PLAYHEAD_UPDATE,MetadataEvent.METADATA_RECEIVED,MetadataEvent.CUE_POINT,VideoEvent.COMPLETE,VideoEvent.CLOSE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Indicates progress made in number of bytes downloaded." version=""/>
               <string helpurl="fl.video:VideoPlayer_fl.video.VideoEvent.PLAYHEAD_UPDATE_playheadUpdate" name="playheadUpdate" object="[fl.video.VideoPlayer]" playername="" text=".addEventListener(%type:String=VideoEvent.PLAYHEAD_UPDATE{DRMStatusEvent.,DRMErrorEvent.,DRMAuthenticateEvent.,VideoEvent.STATE_CHANGE,VideoEvent.AUTO_REWOUND,LayoutEvent.LAYOUT,VideoEvent.READY,VideoProgressEvent.PROGRESS,VideoEvent.PLAYHEAD_UPDATE,MetadataEvent.METADATA_RECEIVED,MetadataEvent.CUE_POINT,VideoEvent.COMPLETE,VideoEvent.CLOSE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched while the FLV file is playing at the frequency specified by the playheadUpdateInterval property or when rewinding starts." version=""/>
               <string helpurl="fl.video:VideoPlayer_fl.video.MetadataEvent.METADATA_RECEIVED_metadataReceived" name="metadataReceived" object="[fl.video.VideoPlayer]" playername="" text=".addEventListener(%type:String=MetadataEvent.METADATA_RECEIVED{DRMStatusEvent.,DRMErrorEvent.,DRMAuthenticateEvent.,VideoEvent.STATE_CHANGE,VideoEvent.AUTO_REWOUND,LayoutEvent.LAYOUT,VideoEvent.READY,VideoProgressEvent.PROGRESS,VideoEvent.PLAYHEAD_UPDATE,MetadataEvent.METADATA_RECEIVED,MetadataEvent.CUE_POINT,VideoEvent.COMPLETE,VideoEvent.CLOSE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched the first time the FLV file's metadata is reached." version=""/>
               <string helpurl="fl.video:VideoPlayer_fl.video.MetadataEvent.CUE_POINT_cuePoint" name="cuePoint" object="[fl.video.VideoPlayer]" playername="" text=".addEventListener(%type:String=MetadataEvent.CUE_POINT{DRMStatusEvent.,DRMErrorEvent.,DRMAuthenticateEvent.,VideoEvent.STATE_CHANGE,VideoEvent.AUTO_REWOUND,LayoutEvent.LAYOUT,VideoEvent.READY,VideoProgressEvent.PROGRESS,VideoEvent.PLAYHEAD_UPDATE,MetadataEvent.METADATA_RECEIVED,MetadataEvent.CUE_POINT,VideoEvent.COMPLETE,VideoEvent.CLOSE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a cue point is reached." version=""/>
               <string helpurl="fl.video:VideoPlayer_fl.video.VideoEvent.COMPLETE_complete" name="complete" object="[fl.video.VideoPlayer]" playername="" text=".addEventListener(%type:String=VideoEvent.COMPLETE{DRMStatusEvent.,DRMErrorEvent.,DRMAuthenticateEvent.,VideoEvent.STATE_CHANGE,VideoEvent.AUTO_REWOUND,LayoutEvent.LAYOUT,VideoEvent.READY,VideoProgressEvent.PROGRESS,VideoEvent.PLAYHEAD_UPDATE,MetadataEvent.METADATA_RECEIVED,MetadataEvent.CUE_POINT,VideoEvent.COMPLETE,VideoEvent.CLOSE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when playing completes because the player reached the end of the FLV file." version=""/>
               <string helpurl="fl.video:VideoPlayer_fl.video.VideoEvent.CLOSE_close" name="close" object="[fl.video.VideoPlayer]" playername="" text=".addEventListener(%type:String=VideoEvent.CLOSE{DRMStatusEvent.,DRMErrorEvent.,DRMAuthenticateEvent.,VideoEvent.STATE_CHANGE,VideoEvent.AUTO_REWOUND,LayoutEvent.LAYOUT,VideoEvent.READY,VideoProgressEvent.PROGRESS,VideoEvent.PLAYHEAD_UPDATE,MetadataEvent.METADATA_RECEIVED,MetadataEvent.CUE_POINT,VideoEvent.COMPLETE,VideoEvent.CLOSE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched by the VideoPlayer instance when it closes the NetConnection by timing out or through a call to the close() method, or when you call the load() or play() methods or set the source property and cause the RTMP connection to close as a result." version=""/>
            </folder>
         </folder>
         <folder asAncestors="flash.events:ProgressEvent,flash.events:Event,Object" helpurl="fl.video:VideoProgressEvent" id="[fl.video.VideoProgressEvent]" index="true" name="VideoProgressEvent" sort="true" tiptext="Flash&amp;#xAE; Player dispatches a VideoProgressEvent object when the user makes a request for the number of bytes loaded during a progressive HTTP download of their video.">
            <folder helpurl="fl.video:VideoProgressEvent" id="Methods" name="Methods" tiptext="Methods for class VideoProgressEvent">
               <string constructor="true" helpurl="fl.video:VideoProgressEvent:VideoProgressEvent" name="VideoProgressEvent" object="[fl.video.VideoProgressEvent]" playername="" text="new VideoProgressEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,bytesLoaded:uint=0,bytesTotal:uint=0,vp:uint=0]%)" tiptext="Creates an Event object that contains information about progress events." version="1.0"/>
            </folder>
            <folder helpurl="fl.video:VideoProgressEvent" id="Properties" name="Properties" tiptext="Properties for class VideoProgressEvent">
               <string constant="true" helpurl="fl.video:VideoProgressEvent:PROGRESS" name="PROGRESS" object="[fl.video.VideoProgressEvent]" playername="" text="VideoProgressEvent.PROGRESS" tiptext="Defines the value of the type property of a progress event object." version=""/>
               <string helpurl="fl.video:VideoProgressEvent:vp:get" name="vp" object="[fl.video.VideoProgressEvent]" playername="" text=".vp" tiptext="The index of the VideoPlayer object involved in this event." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="fl.video:VideoScaleMode" id="[fl.video.VideoScaleMode]" index="true" name="VideoScaleMode" sort="true" tiptext="The VideoScaleMode class provides constant values to use for the FLVPlayback.scaleMode and VideoPlayer.scaleMode properties.">
            <folder helpurl="fl.video:VideoScaleMode" id="Properties" name="Properties" tiptext="Properties for class VideoScaleMode">
               <string constant="true" helpurl="fl.video:VideoScaleMode:EXACT_FIT" name="EXACT_FIT" object="[fl.video.VideoScaleMode]" playername="" text="VideoScaleMode.EXACT_FIT" tiptext="Specifies that the video be displayed at the height and width specified by the registrationHeight or height and registrationWidth or width properties." version=""/>
               <string constant="true" helpurl="fl.video:VideoScaleMode:MAINTAIN_ASPECT_RATIO" name="MAINTAIN_ASPECT_RATIO" object="[fl.video.VideoScaleMode]" playername="" text="VideoScaleMode.MAINTAIN_ASPECT_RATIO" tiptext="Specifies that the video be constrained within the rectangle determined by the registrationX, registrationY, registrationWidth, and registrationHeight properties but that its original aspect ratio be preserved." version=""/>
               <string constant="true" helpurl="fl.video:VideoScaleMode:NO_SCALE" name="NO_SCALE" object="[fl.video.VideoScaleMode]" playername="" text="VideoScaleMode.NO_SCALE" tiptext="Specifies that the video be displayed at exactly the height and width of the source video." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="fl.video:VideoState" id="[fl.video.VideoState]" index="true" name="VideoState" sort="true" tiptext="The VideoState class provides constant values for the read-only FLVPlayback.state and VideoPlayer.state properties.">
            <folder helpurl="fl.video:VideoState" id="Properties" name="Properties" tiptext="Properties for class VideoState">
               <string constant="true" helpurl="fl.video:VideoState:BUFFERING" name="BUFFERING" object="[fl.video.VideoState]" playername="" text="VideoState.BUFFERING" tiptext="The video player is in the buffering state." version=""/>
               <string constant="true" helpurl="fl.video:VideoState:CONNECTION_ERROR" name="CONNECTION_ERROR" object="[fl.video.VideoState]" playername="" text="VideoState.CONNECTION_ERROR" tiptext="The video player is in the connection error state." version=""/>
               <string constant="true" helpurl="fl.video:VideoState:DISCONNECTED" name="DISCONNECTED" object="[fl.video.VideoState]" playername="" text="VideoState.DISCONNECTED" tiptext="The video player is in the disconnected state." version=""/>
               <string constant="true" helpurl="fl.video:VideoState:LOADING" name="LOADING" object="[fl.video.VideoState]" playername="" text="VideoState.LOADING" tiptext="The video player is in the loading state." version=""/>
               <string constant="true" helpurl="fl.video:VideoState:PAUSED" name="PAUSED" object="[fl.video.VideoState]" playername="" text="VideoState.PAUSED" tiptext="The video player is in the paused state." version=""/>
               <string constant="true" helpurl="fl.video:VideoState:PLAYING" name="PLAYING" object="[fl.video.VideoState]" playername="" text="VideoState.PLAYING" tiptext="The video player is in the playing state." version=""/>
               <string constant="true" helpurl="fl.video:VideoState:RESIZING" name="RESIZING" object="[fl.video.VideoState]" playername="" text="VideoState.RESIZING" tiptext="The video player is in the resizing state." version=""/>
               <string constant="true" helpurl="fl.video:VideoState:REWINDING" name="REWINDING" object="[fl.video.VideoState]" playername="" text="VideoState.REWINDING" tiptext="The video player is in the rewinding state." version=""/>
               <string constant="true" helpurl="fl.video:VideoState:SEEKING" name="SEEKING" object="[fl.video.VideoState]" playername="" text="VideoState.SEEKING" tiptext="The video player is in the seeking state." version=""/>
               <string constant="true" helpurl="fl.video:VideoState:STOPPED" name="STOPPED" object="[fl.video.VideoState]" playername="" text="VideoState.STOPPED" tiptext="The video player is in the stopped state." version=""/>
            </folder>
         </folder>
      </folder>
      <folder helpurl="flash.display" id="flash.display" name="flash.display" sort="true" tiptext="Classes for package flash.display">
         <folder asAncestors="Object" helpurl="flash.display:ActionScriptVersion" id="[flash.display.ActionScriptVersion]" index="true" name="ActionScriptVersion" sort="true" tiptext="The ActionScriptVersion class is an enumeration of constant values thatindicate the language version of a loaded SWF file.">
            <folder helpurl="flash.display:ActionScriptVersion" id="Properties" name="Properties" tiptext="Properties for class ActionScriptVersion">
               <string constant="true" helpurl="flash.display:ActionScriptVersion:ACTIONSCRIPT2" name="ACTIONSCRIPT2" object="[flash.display.ActionScriptVersion]" playername="" text="ActionScriptVersion.ACTIONSCRIPT2" tiptext="ActionScript language version 2.0 and earlier." version=""/>
               <string constant="true" helpurl="flash.display:ActionScriptVersion:ACTIONSCRIPT3" name="ACTIONSCRIPT3" object="[flash.display.ActionScriptVersion]" playername="" text="ActionScriptVersion.ACTIONSCRIPT3" tiptext="ActionScript language version 3.0." version=""/>
            </folder>
         </folder>
         <folder asAncestors="flash.display:DisplayObject,flash.events:EventDispatcher,Object" helpurl="flash.display:Bitmap" id="[flash.display.Bitmap]" index="true" name="Bitmap" sort="true" tiptext="The Bitmap class represents display objects that represent bitmap images.">
            <folder helpurl="flash.display:Bitmap" id="Methods" name="Methods" tiptext="Methods for class Bitmap">
               <string constructor="true" helpurl="flash.display:Bitmap:Bitmap" name="Bitmap" object="[flash.display.Bitmap]" playername="" text="new Bitmap(%[bitmapData:flash.display:BitmapData=null,pixelSnapping:String=auto,smoothing:Boolean=false]%)" tiptext="Initializes a Bitmap object to refer to the specified BitmapData object." version="4"/>
            </folder>
            <folder helpurl="flash.display:Bitmap" id="Properties" name="Properties" tiptext="Properties for class Bitmap">
               <string helpurl="flash.display:Bitmap:bitmapData:get" name="bitmapData" object="[flash.display.Bitmap]" playername="" text=".bitmapData" tiptext="The BitmapData object being referenced." version=""/>
               <string helpurl="flash.display:Bitmap:pixelSnapping:get" name="pixelSnapping" object="[flash.display.Bitmap]" playername="" text=".pixelSnapping" tiptext="Controls whether or not the Bitmap object is snapped to the nearest pixel." version=""/>
               <string helpurl="flash.display:Bitmap:smoothing:get" name="smoothing" object="[flash.display.Bitmap]" playername="" text=".smoothing" tiptext="Controls whether or not the bitmap is smoothed when scaled." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="flash.display:BitmapData" id="[flash.display.BitmapData]" index="true" name="BitmapData" sort="true" tiptext="The BitmapData class lets you work with the data (pixels) of a Bitmap object bitmap image.">
            <folder helpurl="flash.display:BitmapData" id="Methods" name="Methods" tiptext="Methods for class BitmapData">
               <string constructor="true" helpurl="flash.display:BitmapData:BitmapData" name="BitmapData" object="[flash.display.BitmapData]" playername="" text="new BitmapData(%width:int,height:int[,transparent:Boolean=true,fillColor:uint=0xFFFFFFFF]%)" tiptext="Creates a BitmapData object with a specified width and height." version="4"/>
               <string helpurl="flash.display:BitmapData:clone" name="clone" object="[flash.display.BitmapData]" playername="" text=".clone(%%):flash.display:BitmapData" tiptext="Returns a new BitmapData object with an exact copy of the original bitmap." version="4"/>
               <string helpurl="flash.display:BitmapData:colorTransform" name="colorTransform" object="[flash.display.BitmapData]" playername="" text=".colorTransform(%rect:flash.geom:Rectangle,colorTransform:flash.geom:ColorTransform%):void" tiptext="Adjusts the color values in a specified area of a bitmap image by using a ColorTransform object." version="4"/>
               <string helpurl="flash.display:BitmapData:compare" name="compare" object="[flash.display.BitmapData]" playername="" text=".compare(%otherBitmapData:flash.display:BitmapData%):Object" tiptext="Compares two BitmapData objects." version="4"/>
               <string helpurl="flash.display:BitmapData:copyChannel" name="copyChannel" object="[flash.display.BitmapData]" playername="" text=".copyChannel(%sourceBitmapData:flash.display:BitmapData,sourceRect:flash.geom:Rectangle,destPoint:flash.geom:Point,sourceChannel:uint,destChannel:uint%):void" tiptext="Transfers data from one channel of another BitmapData object or the current BitmapData object into a channel of the current BitmapData object." version="4"/>
               <string helpurl="flash.display:BitmapData:copyPixels" name="copyPixels" object="[flash.display.BitmapData]" playername="" text=".copyPixels(%sourceBitmapData:flash.display:BitmapData,sourceRect:flash.geom:Rectangle,destPoint:flash.geom:Point[,alphaBitmapData:flash.display:BitmapData=null,alphaPoint:flash.geom:Point=null,mergeAlpha:Boolean=false]%):void" tiptext="Provides a fast routine to perform pixel manipulation between images with no stretching, rotation, or color effects." version="4"/>
               <string helpurl="flash.display:BitmapData:dispose" name="dispose" object="[flash.display.BitmapData]" playername="" text=".dispose(%%):void" tiptext="Frees memory that is used to store the BitmapData object." version="4"/>
               <string helpurl="flash.display:BitmapData:draw" name="draw" object="[flash.display.BitmapData]" playername="" text=".draw(%source:flash.display:IBitmapDrawable[,matrix:flash.geom:Matrix=null,colorTransform:flash.geom:ColorTransform=null,blendMode:String=null,clipRect:flash.geom:Rectangle=null,smoothing:Boolean=false]%):void" tiptext="Draws the source display object onto the bitmap image, using the Flash runtime vector renderer." version="4"/>
               <string helpurl="flash.display:BitmapData:fillRect" name="fillRect" object="[flash.display.BitmapData]" playername="" text=".fillRect(%rect:flash.geom:Rectangle,color:uint%):void" tiptext="Fills a rectangular area of pixels with a specified ARGB color." version="4"/>
               <string helpurl="flash.display:BitmapData:floodFill" name="floodFill" object="[flash.display.BitmapData]" playername="" text=".floodFill(%x:int,y:int,color:uint%):void" tiptext="Performs a flood fill operation on an image starting at a (x, y) coordinate." version="4"/>
               <string helpurl="flash.display:BitmapData:getColorBoundsRect" name="getColorBoundsRect" object="[flash.display.BitmapData]" playername="" text=".getColorBoundsRect(%mask:uint,color:uint[,findColor:Boolean=true]%):flash.geom:Rectangle" tiptext="Determines a rectangular region that either fully encloses all pixels of a specified color within the bitmap image (if the findColor parameter is set to true) or fully encloses all pixels that do not include the specified color (if the findColor parameter is set to false)." version="4"/>
               <string helpurl="flash.display:BitmapData:getPixel32" name="getPixel32" object="[flash.display.BitmapData]" playername="" text=".getPixel32(%x:int,y:int%):uint" tiptext="Returns an ARGB color value that contains alpha channel data and RGB data." version="4"/>
               <string helpurl="flash.display:BitmapData:getPixel" name="getPixel" object="[flash.display.BitmapData]" playername="" text=".getPixel(%x:int,y:int%):uint" tiptext="Returns an integer representing a RGB pixel value from a BitmapData object at a specific point." version="4"/>
               <string helpurl="flash.display:BitmapData:getPixels" name="getPixels" object="[flash.display.BitmapData]" playername="" text=".getPixels(%rect:flash.geom:Rectangle%):flash.utils:ByteArray" tiptext="Generates a byte array from a rectangular region of pixel data." version="4"/>
               <string helpurl="flash.display:BitmapData:getVector" name="getVector" object="[flash.display.BitmapData]" playername="" text=".getVector(%rect:flash.geom:Rectangle%):Vector$uint" tiptext="Generates a vector array from a rectangular region of pixel data." version="4"/>
               <string helpurl="flash.display:BitmapData:histogram" name="histogram" object="[flash.display.BitmapData]" playername="" text=".histogram(%[hRect:flash.geom:Rectangle=null]%):Vector$Vector$Number" tiptext="Computes a 256-value binary number histogram of a BitmapData object." version="4"/>
               <string helpurl="flash.display:BitmapData:hitTest" name="hitTest" object="[flash.display.BitmapData]" playername="" text=".hitTest(%firstPoint:flash.geom:Point,firstAlphaThreshold:uint,secondObject:Object[,secondBitmapDataPoint:flash.geom:Point=null,secondAlphaThreshold:uint=1]%):Boolean" tiptext="Performs pixel-level hit detection between one bitmap image and a point, rectangle, or other bitmap image." version="4"/>
               <string helpurl="flash.display:BitmapData:merge" name="merge" object="[flash.display.BitmapData]" playername="" text=".merge(%sourceBitmapData:flash.display:BitmapData,sourceRect:flash.geom:Rectangle,destPoint:flash.geom:Point,redMultiplier:uint,greenMultiplier:uint,blueMultiplier:uint,alphaMultiplier:uint%):void" tiptext="Performs per-channel blending from a source image to a destination image." version="4"/>
               <string helpurl="flash.display:BitmapData:paletteMap" name="paletteMap" object="[flash.display.BitmapData]" playername="" text=".paletteMap(%sourceBitmapData:flash.display:BitmapData,sourceRect:flash.geom:Rectangle,destPoint:flash.geom:Point[,redArray:Array=null,greenArray:Array=null,blueArray:Array=null,alphaArray:Array=null]%):void" tiptext="Remaps the color channel values in an image that has up to four arrays of color palette data, one for each channel." version="4"/>
               <string helpurl="flash.display:BitmapData:setPixel32" name="setPixel32" object="[flash.display.BitmapData]" playername="" text=".setPixel32(%x:int,y:int,color:uint%):void" tiptext="Sets the color and alpha transparency values of a single pixel of a BitmapData object." version="4"/>
               <string helpurl="flash.display:BitmapData:setPixel" name="setPixel" object="[flash.display.BitmapData]" playername="" text=".setPixel(%x:int,y:int,color:uint%):void" tiptext="Sets a single pixel of a BitmapData object." version="4"/>
               <string helpurl="flash.display:BitmapData:setPixels" name="setPixels" object="[flash.display.BitmapData]" playername="" text=".setPixels(%rect:flash.geom:Rectangle,inputByteArray:flash.utils:ByteArray%):void" tiptext="Converts a byte array into a rectangular region of pixel data." version="4"/>
               <string helpurl="flash.display:BitmapData:setVector" name="setVector" object="[flash.display.BitmapData]" playername="" text=".setVector(%rect:flash.geom:Rectangle,inputVector:Vector$uint%):void" tiptext="Converts a Vector into a rectangular region of pixel data." version="4"/>
            </folder>
            <folder helpurl="flash.display:BitmapData" id="Properties" name="Properties" tiptext="Properties for class BitmapData">
               <string helpurl="flash.display:BitmapData:height:get" name="height" object="[flash.display.BitmapData]" playername="" text=".height" tiptext="The height of the bitmap image in pixels." version=""/>
               <string helpurl="flash.display:BitmapData:rect:get" name="rect" object="[flash.display.BitmapData]" playername="" text=".rect" tiptext="The rectangle that defines the size and location of the bitmap image." version=""/>
               <string helpurl="flash.display:BitmapData:transparent:get" name="transparent" object="[flash.display.BitmapData]" playername="" text=".transparent" tiptext="Defines whether the bitmap image supports per-pixel transparency." version=""/>
               <string helpurl="flash.display:BitmapData:width:get" name="width" object="[flash.display.BitmapData]" playername="" text=".width" tiptext="The width of the bitmap image in pixels." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="flash.display:BitmapDataChannel" id="[flash.display.BitmapDataChannel]" index="true" name="BitmapDataChannel" sort="true" tiptext="The BitmapDataChannel class is an enumeration of constant values that indicate which channel to use: red, blue, green, or alpha transparency.">
            <folder helpurl="flash.display:BitmapDataChannel" id="Properties" name="Properties" tiptext="Properties for class BitmapDataChannel">
               <string constant="true" helpurl="flash.display:BitmapDataChannel:ALPHA" name="ALPHA" object="[flash.display.BitmapDataChannel]" playername="" text="BitmapDataChannel.ALPHA" tiptext="The alpha channel." version=""/>
               <string constant="true" helpurl="flash.display:BitmapDataChannel:BLUE" name="BLUE" object="[flash.display.BitmapDataChannel]" playername="" text="BitmapDataChannel.BLUE" tiptext="The blue channel." version=""/>
               <string constant="true" helpurl="flash.display:BitmapDataChannel:GREEN" name="GREEN" object="[flash.display.BitmapDataChannel]" playername="" text="BitmapDataChannel.GREEN" tiptext="The green channel." version=""/>
               <string constant="true" helpurl="flash.display:BitmapDataChannel:RED" name="RED" object="[flash.display.BitmapDataChannel]" playername="" text="BitmapDataChannel.RED" tiptext="The red channel." version=""/>
            </folder>
         </folder>
         <folder asAncestors="flash.events:EventDispatcher,Object" helpurl="flash.display:DisplayObject" id="[flash.display.DisplayObject]" index="true" name="DisplayObject" sort="true" tiptext="The DisplayObject class is the base class for all objects that can be placed on the display list.">
            <folder helpurl="flash.display:DisplayObject" id="Methods" name="Methods" tiptext="Methods for class DisplayObject">
               <string helpurl="flash.display:DisplayObject:getBounds" name="getBounds" object="[flash.display.DisplayObject]" playername="" text=".getBounds(%targetCoordinateSpace:flash.display:DisplayObject%):flash.geom:Rectangle" tiptext="Returns a rectangle that defines the area of the display object relative to the coordinate system of the targetCoordinateSpace object." version="4"/>
               <string helpurl="flash.display:DisplayObject:getRect" name="getRect" object="[flash.display.DisplayObject]" playername="" text=".getRect(%targetCoordinateSpace:flash.display:DisplayObject%):flash.geom:Rectangle" tiptext="Returns a rectangle that defines the boundary of the display object, based on the coordinate system defined by the targetCoordinateSpace parameter, excluding any strokes on shapes." version="4"/>
               <string helpurl="flash.display:DisplayObject:globalToLocal3D" name="globalToLocal3D" object="[flash.display.DisplayObject]" playername="" text=".globalToLocal3D(%point:flash.geom:Point%):flash.geom:Vector3D" tiptext="Converts a two-dimensional point from the Stage (global) coordinates to a three-dimensional display object's (local) coordinates." version="4"/>
               <string helpurl="flash.display:DisplayObject:globalToLocal" name="globalToLocal" object="[flash.display.DisplayObject]" playername="" text=".globalToLocal(%point:flash.geom:Point%):flash.geom:Point" tiptext="Converts the point object from Stage (global) coordinates to the display object's (local) coordinates." version="4"/>
               <string helpurl="flash.display:DisplayObject:hitTestObject" name="hitTestObject" object="[flash.display.DisplayObject]" playername="" text=".hitTestObject(%obj:flash.display:DisplayObject%):Boolean" tiptext="Evaluates the bounding box of the display object to see if it overlaps or intersects with the bounding box of the display object passed as a parameter." version="4"/>
               <string helpurl="flash.display:DisplayObject:hitTestPoint" name="hitTestPoint" object="[flash.display.DisplayObject]" playername="" text=".hitTestPoint(%x:Number,y:Number[,shapeFlag:Boolean=false]%):Boolean" tiptext="Evaluates the display object to see if it overlaps or intersects with a point specified by x and y." version="4"/>
               <string helpurl="flash.display:DisplayObject:local3DToGlobal" name="local3DToGlobal" object="[flash.display.DisplayObject]" playername="" text=".local3DToGlobal(%point3d:flash.geom:Vector3D%):flash.geom:Point" tiptext="Converts a three-dimensional point of the three-dimensional display object's (local) coordinates to a two-dimensional point in the Stage (global) coordinates." version="4"/>
               <string helpurl="flash.display:DisplayObject:localToGlobal" name="localToGlobal" object="[flash.display.DisplayObject]" playername="" text=".localToGlobal(%point:flash.geom:Point%):flash.geom:Point" tiptext="Converts the point object from the display object's (local) coordinates to the Stage (global) coordinates." version="4"/>
            </folder>
            <folder helpurl="flash.display:DisplayObject" id="Properties" name="Properties" tiptext="Properties for class DisplayObject">
               <string helpurl="flash.display:DisplayObject:alpha:get" name="alpha" object="[flash.display.DisplayObject]" playername="" text=".alpha" tiptext="Indicates the alpha transparency value of the object specified." version=""/>
               <string helpurl="flash.display:DisplayObject:cacheAsBitmap:get" name="cacheAsBitmap" object="[flash.display.DisplayObject]" playername="" text=".cacheAsBitmap" tiptext="If set to true, Flash runtimes cache an internal bitmap representation of the display object." version=""/>
               <string helpurl="flash.display:DisplayObject:height:get" name="height" object="[flash.display.DisplayObject]" playername="" text=".height" tiptext="Indicates the height of the display object, in pixels." version=""/>
               <string helpurl="flash.display:DisplayObject:loaderInfo:get" name="loaderInfo" object="[flash.display.DisplayObject]" playername="" text=".loaderInfo" tiptext="Returns a LoaderInfo object containing information about loading the file to which this display object belongs." version=""/>
               <string helpurl="flash.display:DisplayObject:mask:get" name="mask" object="[flash.display.DisplayObject]" playername="" text=".mask" tiptext="The calling display object is masked by the specified mask object." version=""/>
               <string helpurl="flash.display:DisplayObject:mouseX:get" name="mouseX" object="[flash.display.DisplayObject]" playername="" text=".mouseX" tiptext="Indicates the x coordinate of the mouse or user input device position, in pixels." version=""/>
               <string helpurl="flash.display:DisplayObject:mouseY:get" name="mouseY" object="[flash.display.DisplayObject]" playername="" text=".mouseY" tiptext="Indicates the y coordinate of the mouse or user input device position, in pixels." version=""/>
               <string helpurl="flash.display:DisplayObject:name:get" name="name" object="[flash.display.DisplayObject]" playername="" text=".name" tiptext="Indicates the instance name of the DisplayObject." version=""/>
               <string helpurl="flash.display:DisplayObject:opaqueBackground:get" name="opaqueBackground" object="[flash.display.DisplayObject]" playername="" text=".opaqueBackground" tiptext="Specifies whether the display object is opaque with a certain background color." version=""/>
               <string helpurl="flash.display:DisplayObject:parent:get" name="parent" object="[flash.display.DisplayObject]" playername="" text=".parent" tiptext="Indicates the DisplayObjectContainer object that contains this display object." version=""/>
               <string helpurl="flash.display:DisplayObject:root:get" name="root" object="[flash.display.DisplayObject]" playername="" text=".root" tiptext="For a display object in a loaded SWF file, the root property is the top-most display object in the portion of the display list's tree structure represented by that SWF file." version=""/>
               <string helpurl="flash.display:DisplayObject:rotationX:get" name="rotationX" object="[flash.display.DisplayObject]" playername="" text=".rotationX" tiptext="Indicates the x-axis rotation of the DisplayObject instance, in degrees, from its original orientation relative to the 3D parent container." version=""/>
               <string helpurl="flash.display:DisplayObject:rotationY:get" name="rotationY" object="[flash.display.DisplayObject]" playername="" text=".rotationY" tiptext="Indicates the y-axis rotation of the DisplayObject instance, in degrees, from its original orientation relative to the 3D parent container." version=""/>
               <string helpurl="flash.display:DisplayObject:rotationZ:get" name="rotationZ" object="[flash.display.DisplayObject]" playername="" text=".rotationZ" tiptext="Indicates the z-axis rotation of the DisplayObject instance, in degrees, from its original orientation relative to the 3D parent container." version=""/>
               <string helpurl="flash.display:DisplayObject:rotation:get" name="rotation" object="[flash.display.DisplayObject]" playername="" text=".rotation" tiptext="Indicates the rotation of the DisplayObject instance, in degrees, from its original orientation." version=""/>
               <string helpurl="flash.display:DisplayObject:scale9Grid:get" name="scale9Grid" object="[flash.display.DisplayObject]" playername="" text=".scale9Grid" tiptext="The current scaling grid that is in effect." version=""/>
               <string helpurl="flash.display:DisplayObject:scaleX:get" name="scaleX" object="[flash.display.DisplayObject]" playername="" text=".scaleX" tiptext="Indicates the horizontal scale (percentage) of the object as applied from the registration point." version=""/>
               <string helpurl="flash.display:DisplayObject:scaleY:get" name="scaleY" object="[flash.display.DisplayObject]" playername="" text=".scaleY" tiptext="Indicates the vertical scale (percentage) of an object as applied from the registration point of the object." version=""/>
               <string helpurl="flash.display:DisplayObject:stage:get" name="stage" object="[flash.display.DisplayObject]" playername="" text=".stage" tiptext="The Stage of the display object." version=""/>
               <string helpurl="flash.display:DisplayObject:transform:get" name="transform" object="[flash.display.DisplayObject]" playername="" text=".transform" tiptext="An object with properties pertaining to a display object's matrix, color transform, and pixel bounds." version=""/>
               <string helpurl="flash.display:DisplayObject:visible:get" name="visible" object="[flash.display.DisplayObject]" playername="" text=".visible" tiptext="Whether or not the display object is visible." version=""/>
               <string helpurl="flash.display:DisplayObject:width:get" name="width" object="[flash.display.DisplayObject]" playername="" text=".width" tiptext="Indicates the width of the display object, in pixels." version=""/>
               <string helpurl="flash.display:DisplayObject:x:get" name="x" object="[flash.display.DisplayObject]" playername="" text=".x" tiptext="Indicates the x coordinate of the DisplayObject instance relative to the local coordinates of the parent DisplayObjectContainer." version=""/>
               <string helpurl="flash.display:DisplayObject:y:get" name="y" object="[flash.display.DisplayObject]" playername="" text=".y" tiptext="Indicates the y coordinate of the DisplayObject instance relative to the local coordinates of the parent DisplayObjectContainer." version=""/>
            </folder>
            <folder helpurl="flash.display:DisplayObject" id="Events" name="Events" tiptext="Events for class DisplayObject">
               <string helpurl="flash.display:DisplayObject_flash.events.Event.RENDER_render" name="render" object="[flash.display.DisplayObject]" playername="" text=".addEventListener(%type:String=Event.RENDER{Event.RENDER,Event.REMOVED_FROM_STAGE,Event.REMOVED,Event.EXIT_FRAME,Event.FRAME_CONSTRUCTED,Event.ENTER_FRAME,Event.ADDED_TO_STAGE,Event.ADDED},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="[broadcast event] Dispatched when the display list is about to be updated and rendered." version=""/>
               <string helpurl="flash.display:DisplayObject_flash.events.Event.REMOVED_FROM_STAGE_removedFromStage" name="removedFromStage" object="[flash.display.DisplayObject]" playername="" text=".addEventListener(%type:String=Event.REMOVED_FROM_STAGE{Event.RENDER,Event.REMOVED_FROM_STAGE,Event.REMOVED,Event.EXIT_FRAME,Event.FRAME_CONSTRUCTED,Event.ENTER_FRAME,Event.ADDED_TO_STAGE,Event.ADDED},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a display object is about to be removed from the display list, either directly or through the removal of a sub tree in which the display object is contained." version=""/>
               <string helpurl="flash.display:DisplayObject_flash.events.Event.REMOVED_removed" name="removed" object="[flash.display.DisplayObject]" playername="" text=".addEventListener(%type:String=Event.REMOVED{Event.RENDER,Event.REMOVED_FROM_STAGE,Event.REMOVED,Event.EXIT_FRAME,Event.FRAME_CONSTRUCTED,Event.ENTER_FRAME,Event.ADDED_TO_STAGE,Event.ADDED},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a display object is about to be removed from the display list." version=""/>
               <string helpurl="flash.display:DisplayObject_flash.events.Event.EXIT_FRAME_exitFrame" name="exitFrame" object="[flash.display.DisplayObject]" playername="" text=".addEventListener(%type:String=Event.EXIT_FRAME{Event.RENDER,Event.REMOVED_FROM_STAGE,Event.REMOVED,Event.EXIT_FRAME,Event.FRAME_CONSTRUCTED,Event.ENTER_FRAME,Event.ADDED_TO_STAGE,Event.ADDED},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="[broadcast event] Dispatched when the playhead is exiting the current frame." version=""/>
               <string helpurl="flash.display:DisplayObject_flash.events.Event.FRAME_CONSTRUCTED_frameConstructed" name="frameConstructed" object="[flash.display.DisplayObject]" playername="" text=".addEventListener(%type:String=Event.FRAME_CONSTRUCTED{Event.RENDER,Event.REMOVED_FROM_STAGE,Event.REMOVED,Event.EXIT_FRAME,Event.FRAME_CONSTRUCTED,Event.ENTER_FRAME,Event.ADDED_TO_STAGE,Event.ADDED},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="[broadcast event] Dispatched after the constructors of frame display objects have run but before frame scripts have run." version=""/>
               <string helpurl="flash.display:DisplayObject_flash.events.Event.ENTER_FRAME_enterFrame" name="enterFrame" object="[flash.display.DisplayObject]" playername="" text=".addEventListener(%type:String=Event.ENTER_FRAME{Event.RENDER,Event.REMOVED_FROM_STAGE,Event.REMOVED,Event.EXIT_FRAME,Event.FRAME_CONSTRUCTED,Event.ENTER_FRAME,Event.ADDED_TO_STAGE,Event.ADDED},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="[broadcast event] Dispatched when the playhead is entering a new frame." version=""/>
               <string helpurl="flash.display:DisplayObject_flash.events.Event.ADDED_TO_STAGE_addedToStage" name="addedToStage" object="[flash.display.DisplayObject]" playername="" text=".addEventListener(%type:String=Event.ADDED_TO_STAGE{Event.RENDER,Event.REMOVED_FROM_STAGE,Event.REMOVED,Event.EXIT_FRAME,Event.FRAME_CONSTRUCTED,Event.ENTER_FRAME,Event.ADDED_TO_STAGE,Event.ADDED},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a display object is added to the on stage display list, either directly or through the addition of a sub tree in which the display object is contained." version=""/>
               <string helpurl="flash.display:DisplayObject_flash.events.Event.ADDED_added" name="added" object="[flash.display.DisplayObject]" playername="" text=".addEventListener(%type:String=Event.ADDED{Event.RENDER,Event.REMOVED_FROM_STAGE,Event.REMOVED,Event.EXIT_FRAME,Event.FRAME_CONSTRUCTED,Event.ENTER_FRAME,Event.ADDED_TO_STAGE,Event.ADDED},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a display object is added to the display list." version=""/>
            </folder>
         </folder>
         <folder asAncestors="flash.display:InteractiveObject,flash.display:DisplayObject,flash.events:EventDispatcher,Object" helpurl="flash.display:DisplayObjectContainer" id="[flash.display.DisplayObjectContainer]" index="true" name="DisplayObjectContainer" sort="true" tiptext="The DisplayObjectContainer class is the base class for all objects that can serve as display object containers on the display list.">
            <folder helpurl="flash.display:DisplayObjectContainer" id="Methods" name="Methods" tiptext="Methods for class DisplayObjectContainer">
               <string constructor="true" helpurl="flash.display:DisplayObjectContainer:DisplayObjectContainer" name="DisplayObjectContainer" object="[flash.display.DisplayObjectContainer]" playername="" text="new DisplayObjectContainer(%%)" tiptext="Calling the new DisplayObjectContainer() constructor throws an ArgumentError exception." version="4"/>
               <string helpurl="flash.display:DisplayObjectContainer:addChildAt" name="addChildAt" object="[flash.display.DisplayObjectContainer]" playername="" text=".addChildAt(%child:flash.display:DisplayObject,index:int%):flash.display:DisplayObject" tiptext="Adds a child object to this DisplayObjectContainer instance." version="4"/>
               <string helpurl="flash.display:DisplayObjectContainer:addChild" name="addChild" object="[flash.display.DisplayObjectContainer]" playername="" text=".addChild(%child:flash.display:DisplayObject%):flash.display:DisplayObject" tiptext="Adds a child object to this DisplayObjectContainer instance." version="4"/>
               <string helpurl="flash.display:DisplayObjectContainer:areInaccessibleObjectsUnderPoint" name="areInaccessibleObjectsUnderPoint" object="[flash.display.DisplayObjectContainer]" playername="" text=".areInaccessibleObjectsUnderPoint(%point:flash.geom:Point%):Boolean" tiptext="Indicates whether the security restrictions would cause any display objects to be omitted from the list returned by calling the DisplayObjectContainer.getObjectsUnderPoint() method with the specified point point." version="4"/>
               <string helpurl="flash.display:DisplayObjectContainer:contains" name="contains" object="[flash.display.DisplayObjectContainer]" playername="" text=".contains(%child:flash.display:DisplayObject%):Boolean" tiptext="Determines whether the specified display object is a child of the DisplayObjectContainer instance or the instance itself." version="4"/>
               <string helpurl="flash.display:DisplayObjectContainer:getChildAt" name="getChildAt" object="[flash.display.DisplayObjectContainer]" playername="" text=".getChildAt(%index:int%):flash.display:DisplayObject" tiptext="Returns the child display object instance that exists at the specified index." version="4"/>
               <string helpurl="flash.display:DisplayObjectContainer:getChildByName" name="getChildByName" object="[flash.display.DisplayObjectContainer]" playername="" text=".getChildByName(%name:String%):flash.display:DisplayObject" tiptext="Returns the child display object that exists with the specified name." version="4"/>
               <string helpurl="flash.display:DisplayObjectContainer:getChildIndex" name="getChildIndex" object="[flash.display.DisplayObjectContainer]" playername="" text=".getChildIndex(%child:flash.display:DisplayObject%):int" tiptext="Returns the index number of a child DisplayObject instance." version="4"/>
               <string helpurl="flash.display:DisplayObjectContainer:getObjectsUnderPoint" name="getObjectsUnderPoint" object="[flash.display.DisplayObjectContainer]" playername="" text=".getObjectsUnderPoint(%point:flash.geom:Point%):Array" tiptext="Returns an array of objects that lie under the specified point and are children (or grandchildren, and so on) of this DisplayObjectContainer instance." version="4"/>
               <string helpurl="flash.display:DisplayObjectContainer:removeChildAt" name="removeChildAt" object="[flash.display.DisplayObjectContainer]" playername="" text=".removeChildAt(%index:int%):flash.display:DisplayObject" tiptext="Removes a child display object, at the specified index position, from the DisplayObjectContainer instance." version="4"/>
               <string helpurl="flash.display:DisplayObjectContainer:removeChild" name="removeChild" object="[flash.display.DisplayObjectContainer]" playername="" text=".removeChild(%child:flash.display:DisplayObject%):flash.display:DisplayObject" tiptext="Removes a child display object from the DisplayObjectContainer instance." version="4"/>
               <string helpurl="flash.display:DisplayObjectContainer:setChildIndex" name="setChildIndex" object="[flash.display.DisplayObjectContainer]" playername="" text=".setChildIndex(%child:flash.display:DisplayObject,index:int%):void" tiptext="Changes the index number of an existing child." version="4"/>
               <string helpurl="flash.display:DisplayObjectContainer:swapChildrenAt" name="swapChildrenAt" object="[flash.display.DisplayObjectContainer]" playername="" text=".swapChildrenAt(%index1:int,index2:int%):void" tiptext="Swaps the z-order (front-to-back order) of the child objects at the two specified index positions in the child list." version="4"/>
               <string helpurl="flash.display:DisplayObjectContainer:swapChildren" name="swapChildren" object="[flash.display.DisplayObjectContainer]" playername="" text=".swapChildren(%child1:flash.display:DisplayObject,child2:flash.display:DisplayObject%):void" tiptext="Swaps the z-order (front-to-back order) of the two specified child objects." version="4"/>
            </folder>
            <folder helpurl="flash.display:DisplayObjectContainer" id="Properties" name="Properties" tiptext="Properties for class DisplayObjectContainer">
               <string helpurl="flash.display:DisplayObjectContainer:mouseChildren:get" name="mouseChildren" object="[flash.display.DisplayObjectContainer]" playername="" text=".mouseChildren" tiptext="Determines whether or not the children of the object are mouse, or user input device, enabled." version=""/>
               <string helpurl="flash.display:DisplayObjectContainer:numChildren:get" name="numChildren" object="[flash.display.DisplayObjectContainer]" playername="" text=".numChildren" tiptext="Returns the number of children of this object." version=""/>
               <string helpurl="flash.display:DisplayObjectContainer:tabChildren:get" name="tabChildren" object="[flash.display.DisplayObjectContainer]" playername="" text=".tabChildren" tiptext="Determines whether the children of the object are tab enabled." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="flash.display:FrameLabel" id="[flash.display.FrameLabel]" index="true" name="FrameLabel" sort="true" tiptext="The FrameLabel object contains properties that specify a frame number and the corresponding label name.">
            <folder helpurl="flash.display:FrameLabel" id="Properties" name="Properties" tiptext="Properties for class FrameLabel">
               <string helpurl="flash.display:FrameLabel:frame:get" name="frame" object="[flash.display.FrameLabel]" playername="" text=".frame" tiptext="The frame number containing the label." version=""/>
               <string helpurl="flash.display:FrameLabel:name:get" name="name" object="[flash.display.FrameLabel]" playername="" text=".name" tiptext="The name of the label." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="flash.display:GradientType" id="[flash.display.GradientType]" index="true" name="GradientType" sort="true" tiptext="The GradientType class provides values for the type parameter in the beginGradientFill() and lineGradientStyle() methods of the flash.display.Graphics class.">
            <folder helpurl="flash.display:GradientType" id="Properties" name="Properties" tiptext="Properties for class GradientType">
               <string constant="true" helpurl="flash.display:GradientType:LINEAR" name="LINEAR" object="[flash.display.GradientType]" playername="" text="GradientType.LINEAR" tiptext="Value used to specify a linear gradient fill." version=""/>
               <string constant="true" helpurl="flash.display:GradientType:RADIAL" name="RADIAL" object="[flash.display.GradientType]" playername="" text="GradientType.RADIAL" tiptext="Value used to specify a radial gradient fill." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="flash.display:Graphics" id="[flash.display.Graphics]" index="true" name="Graphics" sort="true" tiptext="The Graphics class contains a set of methods that you can use to create a vector shape.">
            <folder helpurl="flash.display:Graphics" id="Methods" name="Methods" tiptext="Methods for class Graphics">
               <string helpurl="flash.display:Graphics:beginFill" name="beginFill" object="[flash.display.Graphics]" playername="" text=".beginFill(%color:uint[,alpha:Number=1.0]%):void" tiptext="Specifies a single-color fill." version="4"/>
               <string helpurl="flash.display:Graphics:beginGradientFill" name="beginGradientFill" object="[flash.display.Graphics]" playername="" text=".beginGradientFill(%type:String,colors:Array,alphas:Array,ratios:Array[,matrix:flash.geom:Matrix=null,spreadMethod:String=pad,interpolationMethod:String=rgb,focalPointRatio:Number=0]%):void" tiptext="Specifies a gradient fill." version="4"/>
               <string helpurl="flash.display:Graphics:clear" name="clear" object="[flash.display.Graphics]" playername="" text=".clear(%%):void" tiptext="Clears the graphics that were drawn to this Graphics object, and resets fill and line style settings." version="4"/>
               <string helpurl="flash.display:Graphics:copyFrom" name="copyFrom" object="[flash.display.Graphics]" playername="" text=".copyFrom(%sourceGraphics:flash.display:Graphics%):void" tiptext="Copies all of drawing commands from the source Graphics object into the calling Graphics object." version="4"/>
               <string helpurl="flash.display:Graphics:curveTo" name="curveTo" object="[flash.display.Graphics]" playername="" text=".curveTo(%controlX:Number,controlY:Number,anchorX:Number,anchorY:Number%):void" tiptext="Draws a curve from the current drawing position to (anchorX, anchorY) using the control point specified by (controlX, controlY)." version="4"/>
               <string helpurl="flash.display:Graphics:drawCircle" name="drawCircle" object="[flash.display.Graphics]" playername="" text=".drawCircle(%x:Number,y:Number,radius:Number%):void" tiptext="Draws a circle." version="4"/>
               <string helpurl="flash.display:Graphics:drawEllipse" name="drawEllipse" object="[flash.display.Graphics]" playername="" text=".drawEllipse(%x:Number,y:Number,width:Number,height:Number%):void" tiptext="Draws an ellipse." version="4"/>
               <string helpurl="flash.display:Graphics:drawRect" name="drawRect" object="[flash.display.Graphics]" playername="" text=".drawRect(%x:Number,y:Number,width:Number,height:Number%):void" tiptext="Draws a round rectangle." version="4"/>
               <string helpurl="flash.display:Graphics:drawRoundRect" name="drawRoundRect" object="[flash.display.Graphics]" playername="" text=".drawRoundRect(%x:Number,y:Number,width:Number,height:Number,ellipseWidth:Number[,ellipseHeight:Number=unknown]%):void" tiptext="Draws a round rectangle." version="4"/>
               <string helpurl="flash.display:Graphics:endFill" name="endFill" object="[flash.display.Graphics]" playername="" text=".endFill(%%):void" tiptext="Applies a fill to the lines and curves." version="4"/>
               <string helpurl="flash.display:Graphics:lineStyle" name="lineStyle" object="[flash.display.Graphics]" playername="" text=".lineStyle(%[thickness:Number=unknown,color:uint=0,alpha:Number=1.0,pixelHinting:Boolean=false,scaleMode:String=normal,caps:String=null,joints:String=null,miterLimit:Number=3]%):void" tiptext="Specifies a line style that Flash uses for drawing lines." version="4"/>
               <string helpurl="flash.display:Graphics:lineTo" name="lineTo" object="[flash.display.Graphics]" playername="" text=".lineTo(%x:Number,y:Number%):void" tiptext="Draws a line from the current drawing position to (x, y)." version="4"/>
               <string helpurl="flash.display:Graphics:moveTo" name="moveTo" object="[flash.display.Graphics]" playername="" text=".moveTo(%x:Number,y:Number%):void" tiptext="Moves the current drawing position to (x, y)." version="4"/>
            </folder>
         </folder>
         <folder asAncestors="flash.display:DisplayObject,flash.events:EventDispatcher,Object" helpurl="flash.display:InteractiveObject" id="[flash.display.InteractiveObject]" index="true" name="InteractiveObject" sort="true" tiptext="The InteractiveObject class is the abstract base class for all display objects with which the user can interact, using the mouse, keyboard, or other user input device.">
            <folder helpurl="flash.display:InteractiveObject" id="Methods" name="Methods" tiptext="Methods for class InteractiveObject">
               <string constructor="true" helpurl="flash.display:InteractiveObject:InteractiveObject" name="InteractiveObject" object="[flash.display.InteractiveObject]" playername="" text="new InteractiveObject(%%)" tiptext="Calling the new InteractiveObject() constructor throws an ArgumentError exception." version="4"/>
            </folder>
            <folder helpurl="flash.display:InteractiveObject" id="Properties" name="Properties" tiptext="Properties for class InteractiveObject">
               <string helpurl="flash.display:InteractiveObject:accessibilityImplementation:get" name="accessibilityImplementation" object="[flash.display.InteractiveObject]" playername="" text=".accessibilityImplementation" tiptext="The current accessibility implementation (AccessibilityImplementation) for this InteractiveObject instance." version=""/>
               <string helpurl="flash.display:InteractiveObject:focusRect:get" name="focusRect" object="[flash.display.InteractiveObject]" playername="" text=".focusRect" tiptext="Specifies whether this object displays a focus rectangle." version=""/>
               <string helpurl="flash.display:InteractiveObject:mouseEnabled:get" name="mouseEnabled" object="[flash.display.InteractiveObject]" playername="" text=".mouseEnabled" tiptext="Specifies whether this object receives mouse, or other user input, messages." version=""/>
            </folder>
            <folder helpurl="flash.display:InteractiveObject" id="Events" name="Events" tiptext="Events for class InteractiveObject">
               <string helpurl="flash.display:InteractiveObject_flash.events.TextEvent.TEXT_INPUT_textInput" name="textInput" object="[flash.display.InteractiveObject]" playername="" text=".addEventListener(%type:String=TextEvent.TEXT_INPUT{TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a user enters one or more characters of text." version=""/>
               <string helpurl="flash.display:InteractiveObject__imeStartComposition" name="imeStartComposition" object="[flash.display.InteractiveObject]" playername="" text=".addEventListener(%type:String=IMEEvent.{TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="This event is dispatched to any client app that supports inline input with an IME" version=""/>
               <string helpurl="flash.display:InteractiveObject_flash.events.NativeDragEvent.NATIVE_DRAG_COMPLETE_nativeDragComplete" name="nativeDragComplete" object="[flash.display.InteractiveObject]" playername="" text=".addEventListener(%type:String=NativeDragEvent.NATIVE_DRAG_COMPLETE{TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched by the drag initiator InteractiveObject when the user releases the drag gesture." version=""/>
               <string helpurl="flash.display:InteractiveObject_flash.events.NativeDragEvent.NATIVE_DRAG_UPDATE_nativeDragUpdate" name="nativeDragUpdate" object="[flash.display.InteractiveObject]" playername="" text=".addEventListener(%type:String=NativeDragEvent.NATIVE_DRAG_UPDATE{TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched during a drag operation by the InteractiveObject that is specified as the drag initiator in the DragManager.doDrag() call." version=""/>
               <string helpurl="flash.display:InteractiveObject_flash.events.NativeDragEvent.NATIVE_DRAG_START_nativeDragStart" name="nativeDragStart" object="[flash.display.InteractiveObject]" playername="" text=".addEventListener(%type:String=NativeDragEvent.NATIVE_DRAG_START{TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched at the beginning of a drag operation by the InteractiveObject that is specified as the drag initiator in the DragManager.doDrag() call." version=""/>
               <string helpurl="flash.display:InteractiveObject_flash.events.NativeDragEvent.NATIVE_DRAG_EXIT_nativeDragExit" name="nativeDragExit" object="[flash.display.InteractiveObject]" playername="" text=".addEventListener(%type:String=NativeDragEvent.NATIVE_DRAG_EXIT{TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched by an InteractiveObject when a drag gesture leaves its boundary." version=""/>
               <string helpurl="flash.display:InteractiveObject_flash.events.NativeDragEvent.NATIVE_DRAG_DROP_nativeDragDrop" name="nativeDragDrop" object="[flash.display.InteractiveObject]" playername="" text=".addEventListener(%type:String=NativeDragEvent.NATIVE_DRAG_DROP{TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched by the target InteractiveObject when a dragged object is dropped on it and the drop has been accepted with a call to DragManager.acceptDragDrop()." version=""/>
               <string helpurl="flash.display:InteractiveObject_flash.events.NativeDragEvent.NATIVE_DRAG_OVER_nativeDragOver" name="nativeDragOver" object="[flash.display.InteractiveObject]" playername="" text=".addEventListener(%type:String=NativeDragEvent.NATIVE_DRAG_OVER{TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched by an InteractiveObject continually while a drag gesture remains within its boundary." version=""/>
               <string helpurl="flash.display:InteractiveObject_flash.events.NativeDragEvent.NATIVE_DRAG_ENTER_nativeDragEnter" name="nativeDragEnter" object="[flash.display.InteractiveObject]" playername="" text=".addEventListener(%type:String=NativeDragEvent.NATIVE_DRAG_ENTER{TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched by an InteractiveObject when a drag gesture enters its boundary." version=""/>
               <string helpurl="flash.display:InteractiveObject_flash.events.KeyboardEvent.KEY_UP_keyUp" name="keyUp" object="[flash.display.InteractiveObject]" playername="" text=".addEventListener(%type:String=KeyboardEvent.KEY_UP{TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user releases a key." version=""/>
               <string helpurl="flash.display:InteractiveObject_flash.events.KeyboardEvent.KEY_DOWN_keyDown" name="keyDown" object="[flash.display.InteractiveObject]" playername="" text=".addEventListener(%type:String=KeyboardEvent.KEY_DOWN{TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user presses a key." version=""/>
               <string helpurl="flash.display:InteractiveObject_flash.events.MouseEvent.RIGHT_MOUSE_UP_rightMouseUp" name="rightMouseUp" object="[flash.display.InteractiveObject]" playername="" text=".addEventListener(%type:String=MouseEvent.RIGHT_MOUSE_UP{TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a user releases the pointing device button over an InteractiveObject instance." version=""/>
               <string helpurl="flash.display:InteractiveObject_flash.events.MouseEvent.RIGHT_MOUSE_DOWN_rightMouseDown" name="rightMouseDown" object="[flash.display.InteractiveObject]" playername="" text=".addEventListener(%type:String=MouseEvent.RIGHT_MOUSE_DOWN{TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a user presses the pointing device button over an InteractiveObject instance." version=""/>
               <string helpurl="flash.display:InteractiveObject_flash.events.MouseEvent.RIGHT_CLICK_rightClick" name="rightClick" object="[flash.display.InteractiveObject]" playername="" text=".addEventListener(%type:String=MouseEvent.RIGHT_CLICK{TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a user presses and releases the right button of the user's pointing device over the same InteractiveObject." version=""/>
               <string helpurl="flash.display:InteractiveObject_flash.events.MouseEvent.MIDDLE_MOUSE_UP_middleMouseUp" name="middleMouseUp" object="[flash.display.InteractiveObject]" playername="" text=".addEventListener(%type:String=MouseEvent.MIDDLE_MOUSE_UP{TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a user releases the pointing device button over an InteractiveObject instance." version=""/>
               <string helpurl="flash.display:InteractiveObject_flash.events.MouseEvent.MIDDLE_MOUSE_DOWN_middleMouseDown" name="middleMouseDown" object="[flash.display.InteractiveObject]" playername="" text=".addEventListener(%type:String=MouseEvent.MIDDLE_MOUSE_DOWN{TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a user presses the middle pointing device button over an InteractiveObject instance." version=""/>
               <string helpurl="flash.display:InteractiveObject_flash.events.MouseEvent.MIDDLE_CLICK_middleClick" name="middleClick" object="[flash.display.InteractiveObject]" playername="" text=".addEventListener(%type:String=MouseEvent.MIDDLE_CLICK{TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a user presses and releases the middle button of the user's pointing device over the same InteractiveObject." version=""/>
               <string helpurl="flash.display:InteractiveObject_flash.events.TransformGestureEvent.GESTURE_SWIPE_gestureSwipe" name="gestureSwipe" object="[flash.display.InteractiveObject]" playername="" text=".addEventListener(%type:String=TransformGestureEvent.GESTURE_SWIPE{TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user performs a swipe gesture at a point of contact with an InteractiveObject instance (such as touching three fingers to a screen and then moving them in parallel over a display object on a mobile phone or tablet with a touch screen)." version=""/>
               <string helpurl="flash.display:InteractiveObject_flash.events.TransformGestureEvent.GESTURE_ZOOM_gestureZoom" name="gestureZoom" object="[flash.display.InteractiveObject]" playername="" text=".addEventListener(%type:String=TransformGestureEvent.GESTURE_ZOOM{TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user performs a zoom gesture at a point of contact with an InteractiveObject instance (such as touching two fingers to a screen and then quickly spreading the fingers apart over a display object on a mobile phone or tablet with a touch screen)." version=""/>
               <string helpurl="flash.display:InteractiveObject_flash.events.TransformGestureEvent.GESTURE_ROTATE_gestureRotate" name="gestureRotate" object="[flash.display.InteractiveObject]" playername="" text=".addEventListener(%type:String=TransformGestureEvent.GESTURE_ROTATE{TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user performs a rotation gesture at a point of contact with an InteractiveObject instance (such as touching two fingers and rotating them over a display object on a mobile phone or tablet with a touch screen)." version=""/>
               <string helpurl="flash.display:InteractiveObject_flash.events.PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP_gesturePressAndTap" name="gesturePressAndTap" object="[flash.display.InteractiveObject]" playername="" text=".addEventListener(%type:String=PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP{TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user creates a point of contact with an InteractiveObject instance, then taps on a touch-enabled device (such as placing several fingers over a display object to open a menu and then taps one finger to select a menu item on a mobile phone or tablet with a touch screen)." version=""/>
               <string helpurl="flash.display:InteractiveObject_flash.events.TransformGestureEvent.GESTURE_PAN_gesturePan" name="gesturePan" object="[flash.display.InteractiveObject]" playername="" text=".addEventListener(%type:String=TransformGestureEvent.GESTURE_PAN{TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user moves a point of contact over the InteractiveObject instance on a touch-enabled device (such as moving a fingers from left to right over a display object on a mobile phone or tablet with a touch screen)." version=""/>
               <string helpurl="flash.display:InteractiveObject_flash.events.GestureEvent.GESTURE_TWO_FINGER_TAP_gestureTwoFingerTap" name="gestureTwoFingerTap" object="[flash.display.InteractiveObject]" playername="" text=".addEventListener(%type:String=GestureEvent.GESTURE_TWO_FINGER_TAP{TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user presses two points of contact over the same InteractiveObject instance on a touch-enabled device (such as presses and releases two fingers over a display object on a mobile phone or tablet with a touch screen)." version=""/>
               <string helpurl="flash.display:InteractiveObject_flash.events.TouchEvent.TOUCH_TAP_touchTap" name="touchTap" object="[flash.display.InteractiveObject]" playername="" text=".addEventListener(%type:String=TouchEvent.TOUCH_TAP{TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user lifts the point of contact over the same InteractiveObject instance on which the contact was initiated on a touch-enabled device (such as presses and releases a finger from a single point over a display object on a mobile phone or tablet with a touch screen)." version=""/>
               <string helpurl="flash.display:InteractiveObject_flash.events.TouchEvent.TOUCH_ROLL_OVER_touchRollOver" name="touchRollOver" object="[flash.display.InteractiveObject]" playername="" text=".addEventListener(%type:String=TouchEvent.TOUCH_ROLL_OVER{TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user moves the point of contact over an InteractiveObject instance on a touch-enabled device (such as drags a finger from a point outside a display object to a point over a display object on a mobile phone or tablet with a touch screen)." version=""/>
               <string helpurl="flash.display:InteractiveObject_flash.events.TouchEvent.TOUCH_ROLL_OUT_touchRollOut" name="touchRollOut" object="[flash.display.InteractiveObject]" playername="" text=".addEventListener(%type:String=TouchEvent.TOUCH_ROLL_OUT{TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user moves the point of contact away from an InteractiveObject instance on a touch-enabled device (such as drags a finger from over a display object to a point outisde the display object on a mobile phone or tablet with a touch screen)." version=""/>
               <string helpurl="flash.display:InteractiveObject_flash.events.TouchEvent.TOUCH_OVER_touchOver" name="touchOver" object="[flash.display.InteractiveObject]" playername="" text=".addEventListener(%type:String=TouchEvent.TOUCH_OVER{TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user moves the point of contact over an InteractiveObject instance on a touch-enabled device (such as drags a finger from a point outside a display object to a point over a display object on a mobile phone or tablet with a touch screen)." version=""/>
               <string helpurl="flash.display:InteractiveObject_flash.events.TouchEvent.TOUCH_OUT_touchOut" name="touchOut" object="[flash.display.InteractiveObject]" playername="" text=".addEventListener(%type:String=TouchEvent.TOUCH_OUT{TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user moves the point of contact away from InteractiveObject instance on a touch-enabled device (such as drags a finger from one display object to another on a mobile phone or tablet with a touch screen)." version=""/>
               <string helpurl="flash.display:InteractiveObject_flash.events.TouchEvent.TOUCH_MOVE_touchMove" name="touchMove" object="[flash.display.InteractiveObject]" playername="" text=".addEventListener(%type:String=TouchEvent.TOUCH_MOVE{TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user moves the point of contact with a touch-enabled device (such as drags a finger across a mobile phone or tablet with a touch screen)." version=""/>
               <string helpurl="flash.display:InteractiveObject_flash.events.TouchEvent.TOUCH_END_touchEnd" name="touchEnd" object="[flash.display.InteractiveObject]" playername="" text=".addEventListener(%type:String=TouchEvent.TOUCH_END{TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user removes contact with a touch-enabled device (such as lifts a finger off a mobile phone or tablet with a touch screen)." version=""/>
               <string helpurl="flash.display:InteractiveObject_flash.events.TouchEvent.TOUCH_BEGIN_touchBegin" name="touchBegin" object="[flash.display.InteractiveObject]" playername="" text=".addEventListener(%type:String=TouchEvent.TOUCH_BEGIN{TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user first contacts a touch-enabled device (such as touches a finger to a mobile phone or tablet with a touch screen)." version=""/>
               <string helpurl="flash.display:InteractiveObject_flash.events.MouseEvent.ROLL_OVER_rollOver" name="rollOver" object="[flash.display.InteractiveObject]" playername="" text=".addEventListener(%type:String=MouseEvent.ROLL_OVER{TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user moves a pointing device over an InteractiveObject instance." version=""/>
               <string helpurl="flash.display:InteractiveObject_flash.events.MouseEvent.ROLL_OUT_rollOut" name="rollOut" object="[flash.display.InteractiveObject]" playername="" text=".addEventListener(%type:String=MouseEvent.ROLL_OUT{TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user moves a pointing device away from an InteractiveObject instance." version=""/>
               <string helpurl="flash.display:InteractiveObject_flash.events.MouseEvent.MOUSE_UP_mouseUp" name="mouseUp" object="[flash.display.InteractiveObject]" playername="" text=".addEventListener(%type:String=MouseEvent.MOUSE_UP{TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a user releases the pointing device button over an InteractiveObject instance." version=""/>
               <string helpurl="flash.display:InteractiveObject_flash.events.MouseEvent.MOUSE_OVER_mouseOver" name="mouseOver" object="[flash.display.InteractiveObject]" playername="" text=".addEventListener(%type:String=MouseEvent.MOUSE_OVER{TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user moves a pointing device over an InteractiveObject instance." version=""/>
               <string helpurl="flash.display:InteractiveObject_flash.events.MouseEvent.MOUSE_OUT_mouseOut" name="mouseOut" object="[flash.display.InteractiveObject]" playername="" text=".addEventListener(%type:String=MouseEvent.MOUSE_OUT{TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user moves a pointing device away from an InteractiveObject instance." version=""/>
               <string helpurl="flash.display:InteractiveObject_flash.events.MouseEvent.MOUSE_MOVE_mouseMove" name="mouseMove" object="[flash.display.InteractiveObject]" playername="" text=".addEventListener(%type:String=MouseEvent.MOUSE_MOVE{TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a user moves the pointing device while it is over an InteractiveObject." version=""/>
               <string helpurl="flash.display:InteractiveObject_flash.events.MouseEvent.MOUSE_DOWN_mouseDown" name="mouseDown" object="[flash.display.InteractiveObject]" playername="" text=".addEventListener(%type:String=MouseEvent.MOUSE_DOWN{TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a user presses the pointing device button over an InteractiveObject instance." version=""/>
               <string helpurl="flash.display:InteractiveObject_flash.events.MouseEvent.CLICK_click" name="click" object="[flash.display.InteractiveObject]" playername="" text=".addEventListener(%type:String=MouseEvent.CLICK{TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a user presses and releases the main button of the user's pointing device over the same InteractiveObject." version=""/>
               <string helpurl="flash.display:InteractiveObject_flash.events.FocusEvent.MOUSE_FOCUS_CHANGE_mouseFocusChange" name="mouseFocusChange" object="[flash.display.InteractiveObject]" playername="" text=".addEventListener(%type:String=FocusEvent.MOUSE_FOCUS_CHANGE{TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user attempts to change focus by using a pointer device." version=""/>
               <string helpurl="flash.display:InteractiveObject_flash.events.FocusEvent.KEY_FOCUS_CHANGE_keyFocusChange" name="keyFocusChange" object="[flash.display.InteractiveObject]" playername="" text=".addEventListener(%type:String=FocusEvent.KEY_FOCUS_CHANGE{TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user attempts to change focus by using keyboard navigation." version=""/>
               <string helpurl="flash.display:InteractiveObject_flash.events.FocusEvent.FOCUS_OUT_focusOut" name="focusOut" object="[flash.display.InteractiveObject]" playername="" text=".addEventListener(%type:String=FocusEvent.FOCUS_OUT{TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched after a display object loses focus." version=""/>
               <string helpurl="flash.display:InteractiveObject_flash.events.FocusEvent.FOCUS_IN_focusIn" name="focusIn" object="[flash.display.InteractiveObject]" playername="" text=".addEventListener(%type:String=FocusEvent.FOCUS_IN{TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched after a display object gains focus." version=""/>
               <string helpurl="flash.display:InteractiveObject_flash.events.Event.CLEAR_clear" name="clear" object="[flash.display.InteractiveObject]" playername="" text=".addEventListener(%type:String=Event.CLEAR{TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user selects 'Clear' (or 'Delete') from the text context menu." version=""/>
            </folder>
         </folder>
         <folder asAncestors="flash.display:DisplayObjectContainer,flash.display:InteractiveObject,flash.display:DisplayObject,flash.events:EventDispatcher,Object" helpurl="flash.display:Loader" id="[flash.display.Loader]" index="true" name="Loader" sort="true" tiptext="The Loader class is used to load SWF files or image (JPG, PNG, or GIF) files.">
            <folder helpurl="flash.display:Loader" id="Methods" name="Methods" tiptext="Methods for class Loader">
               <string constructor="true" helpurl="flash.display:Loader:Loader" name="Loader" object="[flash.display.Loader]" playername="" text="new Loader(%%)" tiptext="Creates a Loader object that you can use to load files, such as SWF, JPEG, GIF, or PNG files." version="4"/>
               <string helpurl="flash.display:Loader:close" name="close" object="[flash.display.Loader]" playername="" text=".close(%%):void" tiptext="Cancels a load() method operation that is currently in progress for the Loader instance." version="4"/>
               <string helpurl="flash.display:Loader:loadBytes" name="loadBytes" object="[flash.display.Loader]" playername="" text=".loadBytes(%bytes:flash.utils:ByteArray[,context:flash.system:LoaderContext=null]%):void" tiptext="Loads from binary data stored in a ByteArray object." version="4"/>
               <string helpurl="flash.display:Loader:load" name="load" object="[flash.display.Loader]" playername="" text=".load(%request:flash.net:URLRequest[,context:flash.system:LoaderContext=null]%):void" tiptext="Loads a SWF file or image file into a DisplayObject that is a child of this Loader instance." version="4"/>
               <string helpurl="flash.display:Loader:unloadAndStop" name="unloadAndStop" object="[flash.display.Loader]" playername="" text=".unloadAndStop(%[gc:Boolean=true]%):void" tiptext="Attempts to unload child SWF file contents and stops the execution of commands from loaded SWF files." version="4"/>
               <string helpurl="flash.display:Loader:unload" name="unload" object="[flash.display.Loader]" playername="" text=".unload(%%):void" tiptext="Removes a child of this Loader object that was loaded by using the load() method." version="4"/>
            </folder>
            <folder helpurl="flash.display:Loader" id="Properties" name="Properties" tiptext="Properties for class Loader">
               <string helpurl="flash.display:Loader:contentLoaderInfo:get" name="contentLoaderInfo" object="[flash.display.Loader]" playername="" text=".contentLoaderInfo" tiptext="Returns a LoaderInfo object corresponding to the object being loaded." version=""/>
               <string helpurl="flash.display:Loader:content:get" name="content" object="[flash.display.Loader]" playername="" text=".content" tiptext="Contains the root display object of the SWF file or image (JPG, PNG, or GIF) file that was loaded by using the load() or loadBytes() methods." version=""/>
            </folder>
         </folder>
         <folder asAncestors="flash.events:EventDispatcher,Object" helpurl="flash.display:LoaderInfo" id="[flash.display.LoaderInfo]" index="true" name="LoaderInfo" sort="true" tiptext="The LoaderInfo class provides information about a loaded SWF file or a loaded image file (JPEG, GIF, or PNG).">
            <folder helpurl="flash.display:LoaderInfo" id="Methods" name="Methods" tiptext="Methods for class LoaderInfo">
               <string helpurl="flash.display:LoaderInfo:getLoaderInfoByDefinition" name="getLoaderInfoByDefinition" object="[flash.display.LoaderInfo]" playername="" static="true" text="LoaderInfo.getLoaderInfoByDefinition(%object:Object%):flash.display:LoaderInfo" tiptext="Returns the LoaderInfo object associated with a SWF file defined as an object." version="4"/>
            </folder>
            <folder helpurl="flash.display:LoaderInfo" id="Properties" name="Properties" tiptext="Properties for class LoaderInfo">
               <string helpurl="flash.display:LoaderInfo:actionScriptVersion:get" name="actionScriptVersion" object="[flash.display.LoaderInfo]" playername="" text=".actionScriptVersion" tiptext="The ActionScript version of the loaded SWF file." version=""/>
               <string helpurl="flash.display:LoaderInfo:applicationDomain:get" name="applicationDomain" object="[flash.display.LoaderInfo]" playername="" text=".applicationDomain" tiptext="When an external SWF file is loaded, all ActionScript 3.0 definitions contained in the loaded class are stored in the applicationDomain property." version=""/>
               <string helpurl="flash.display:LoaderInfo:bytesLoaded:get" name="bytesLoaded" object="[flash.display.LoaderInfo]" playername="" text=".bytesLoaded" tiptext="The number of bytes that are loaded for the media." version=""/>
               <string helpurl="flash.display:LoaderInfo:bytesTotal:get" name="bytesTotal" object="[flash.display.LoaderInfo]" playername="" text=".bytesTotal" tiptext="The number of compressed bytes in the entire media file." version=""/>
               <string helpurl="flash.display:LoaderInfo:bytes:get" name="bytes" object="[flash.display.LoaderInfo]" playername="" text=".bytes" tiptext="The bytes associated with a LoaderInfo object." version=""/>
               <string helpurl="flash.display:LoaderInfo:childAllowsParent:get" name="childAllowsParent" object="[flash.display.LoaderInfo]" playername="" text=".childAllowsParent" tiptext="Expresses the trust relationship from content (child) to the Loader (parent)." version=""/>
               <string helpurl="flash.display:LoaderInfo:childSandboxBridge:get" name="childSandboxBridge" object="[flash.display.LoaderInfo]" playername="" text=".childSandboxBridge" tiptext="A object that can be set by the loaded content's code to expose properties and methods that can be accessed by code in the Loader object's sandbox." version=""/>
               <string helpurl="flash.display:LoaderInfo:contentType:get" name="contentType" object="[flash.display.LoaderInfo]" playername="" text=".contentType" tiptext="The MIME type of the loaded file." version=""/>
               <string helpurl="flash.display:LoaderInfo:content:get" name="content" object="[flash.display.LoaderInfo]" playername="" text=".content" tiptext="The loaded object associated with this LoaderInfo object." version=""/>
               <string helpurl="flash.display:LoaderInfo:frameRate:get" name="frameRate" object="[flash.display.LoaderInfo]" playername="" text=".frameRate" tiptext="The nominal frame rate, in frames per second, of the loaded SWF file." version=""/>
               <string helpurl="flash.display:LoaderInfo:height:get" name="height" object="[flash.display.LoaderInfo]" playername="" text=".height" tiptext="The nominal height of the loaded file." version=""/>
               <string helpurl="flash.display:LoaderInfo:loaderURL:get" name="loaderURL" object="[flash.display.LoaderInfo]" playername="" text=".loaderURL" tiptext="The URL of the SWF file that initiated the loading of the media described by this LoaderInfo object." version=""/>
               <string helpurl="flash.display:LoaderInfo:loader:get" name="loader" object="[flash.display.LoaderInfo]" playername="" text=".loader" tiptext="The Loader object associated with this LoaderInfo object." version=""/>
               <string helpurl="flash.display:LoaderInfo:parameters:get" name="parameters" object="[flash.display.LoaderInfo]" playername="" text=".parameters" tiptext="An object that contains name-value pairs that represent the parameters provided to the loaded SWF file." version=""/>
               <string helpurl="flash.display:LoaderInfo:parentAllowsChild:get" name="parentAllowsChild" object="[flash.display.LoaderInfo]" playername="" text=".parentAllowsChild" tiptext="Expresses the trust relationship from Loader (parent) to the content (child)." version=""/>
               <string helpurl="flash.display:LoaderInfo:parentSandboxBridge:get" name="parentSandboxBridge" object="[flash.display.LoaderInfo]" playername="" text=".parentSandboxBridge" tiptext="A object that can be set by code in the Loader object's sandbox to expose properties and methods that can be accessed by the loaded content's code." version=""/>
               <string helpurl="flash.display:LoaderInfo:sameDomain:get" name="sameDomain" object="[flash.display.LoaderInfo]" playername="" text=".sameDomain" tiptext="Expresses the domain relationship between the loader and the content: true if they have the same origin domain; false otherwise." version=""/>
               <string helpurl="flash.display:LoaderInfo:sharedEvents:get" name="sharedEvents" object="[flash.display.LoaderInfo]" playername="" text=".sharedEvents" tiptext="An EventDispatcher instance that can be used to exchange events across security boundaries." version=""/>
               <string helpurl="flash.display:LoaderInfo:swfVersion:get" name="swfVersion" object="[flash.display.LoaderInfo]" playername="" text=".swfVersion" tiptext="The file format version of the loaded SWF file." version=""/>
               <string helpurl="flash.display:LoaderInfo:url:get" name="url" object="[flash.display.LoaderInfo]" playername="" text=".url" tiptext="The URL of the media being loaded." version=""/>
               <string helpurl="flash.display:LoaderInfo:width:get" name="width" object="[flash.display.LoaderInfo]" playername="" text=".width" tiptext="The nominal width of the loaded content." version=""/>
            </folder>
            <folder helpurl="flash.display:LoaderInfo" id="Events" name="Events" tiptext="Events for class LoaderInfo">
               <string helpurl="flash.display:LoaderInfo_flash.events.HTTPStatusEvent.HTTP_STATUS_httpStatus" name="httpStatus" object="[flash.display.LoaderInfo]" playername="" text=".addEventListener(%type:String=HTTPStatusEvent.HTTP_STATUS{HTTPStatusEvent.HTTP_STATUS,Event.UNLOAD,ProgressEvent.PROGRESS,Event.OPEN,IOErrorEvent.IO_ERROR,Event.INIT,Event.COMPLETE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a network request is made over HTTP and an HTTP status code can be detected." version=""/>
               <string helpurl="flash.display:LoaderInfo_flash.events.Event.UNLOAD_unload" name="unload" object="[flash.display.LoaderInfo]" playername="" text=".addEventListener(%type:String=Event.UNLOAD{HTTPStatusEvent.HTTP_STATUS,Event.UNLOAD,ProgressEvent.PROGRESS,Event.OPEN,IOErrorEvent.IO_ERROR,Event.INIT,Event.COMPLETE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched by a LoaderInfo object whenever a loaded object is removed by using the unload() method of the Loader object, or when a second load is performed by the same Loader object and the original content is removed prior to the load beginning." version=""/>
               <string helpurl="flash.display:LoaderInfo_flash.events.ProgressEvent.PROGRESS_progress" name="progress" object="[flash.display.LoaderInfo]" playername="" text=".addEventListener(%type:String=ProgressEvent.PROGRESS{HTTPStatusEvent.HTTP_STATUS,Event.UNLOAD,ProgressEvent.PROGRESS,Event.OPEN,IOErrorEvent.IO_ERROR,Event.INIT,Event.COMPLETE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when data is received as the download operation progresses." version=""/>
               <string helpurl="flash.display:LoaderInfo_flash.events.Event.OPEN_open" name="open" object="[flash.display.LoaderInfo]" playername="" text=".addEventListener(%type:String=Event.OPEN{HTTPStatusEvent.HTTP_STATUS,Event.UNLOAD,ProgressEvent.PROGRESS,Event.OPEN,IOErrorEvent.IO_ERROR,Event.INIT,Event.COMPLETE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a load operation starts." version=""/>
               <string helpurl="flash.display:LoaderInfo_flash.events.IOErrorEvent.IO_ERROR_ioError" name="ioError" object="[flash.display.LoaderInfo]" playername="" text=".addEventListener(%type:String=IOErrorEvent.IO_ERROR{HTTPStatusEvent.HTTP_STATUS,Event.UNLOAD,ProgressEvent.PROGRESS,Event.OPEN,IOErrorEvent.IO_ERROR,Event.INIT,Event.COMPLETE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when an input or output error occurs that causes a load operation to fail." version=""/>
               <string helpurl="flash.display:LoaderInfo_flash.events.Event.INIT_init" name="init" object="[flash.display.LoaderInfo]" playername="" text=".addEventListener(%type:String=Event.INIT{HTTPStatusEvent.HTTP_STATUS,Event.UNLOAD,ProgressEvent.PROGRESS,Event.OPEN,IOErrorEvent.IO_ERROR,Event.INIT,Event.COMPLETE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the properties and methods of a loaded SWF file are accessible and ready for use." version=""/>
               <string helpurl="flash.display:LoaderInfo_flash.events.Event.COMPLETE_complete" name="complete" object="[flash.display.LoaderInfo]" playername="" text=".addEventListener(%type:String=Event.COMPLETE{HTTPStatusEvent.HTTP_STATUS,Event.UNLOAD,ProgressEvent.PROGRESS,Event.OPEN,IOErrorEvent.IO_ERROR,Event.INIT,Event.COMPLETE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when data has loaded successfully." version=""/>
            </folder>
         </folder>
         <folder asAncestors="flash.display:Sprite,flash.display:DisplayObjectContainer,flash.display:InteractiveObject,flash.display:DisplayObject,flash.events:EventDispatcher,Object" helpurl="flash.display:MovieClip" id="[flash.display.MovieClip]" index="true" name="MovieClip" sort="true" tiptext="The MovieClip class inherits from the following classes: Sprite, DisplayObjectContainer, InteractiveObject, DisplayObject, and EventDispatcher.">
            <folder helpurl="flash.display:MovieClip" id="Methods" name="Methods" tiptext="Methods for class MovieClip">
               <string constructor="true" helpurl="flash.display:MovieClip:MovieClip" name="MovieClip" object="[flash.display.MovieClip]" playername="" text="new MovieClip(%%)" tiptext="Creates a new MovieClip instance." version="4"/>
               <string helpurl="flash.display:MovieClip:gotoAndPlay" name="gotoAndPlay" object="[flash.display.MovieClip]" playername="" text=".gotoAndPlay(%frame:Object[,scene:String=null]%):void" tiptext="Starts playing the SWF file at the specified frame." version="4"/>
               <string helpurl="flash.display:MovieClip:gotoAndStop" name="gotoAndStop" object="[flash.display.MovieClip]" playername="" text=".gotoAndStop(%frame:Object[,scene:String=null]%):void" tiptext="Brings the playhead to the specified frame of the movie clip and stops it there." version="4"/>
               <string helpurl="flash.display:MovieClip:nextFrame" name="nextFrame" object="[flash.display.MovieClip]" playername="" text=".nextFrame(%%):void" tiptext="Sends the playhead to the next frame and stops it." version="4"/>
               <string helpurl="flash.display:MovieClip:nextScene" name="nextScene" object="[flash.display.MovieClip]" playername="" text=".nextScene(%%):void" tiptext="Moves the playhead to the next scene of the MovieClip instance." version="4"/>
               <string helpurl="flash.display:MovieClip:play" name="play" object="[flash.display.MovieClip]" playername="" text=".play(%%):void" tiptext="Moves the playhead in the timeline of the movie clip." version="4"/>
               <string helpurl="flash.display:MovieClip:prevFrame" name="prevFrame" object="[flash.display.MovieClip]" playername="" text=".prevFrame(%%):void" tiptext="Sends the playhead to the previous frame and stops it." version="4"/>
               <string helpurl="flash.display:MovieClip:prevScene" name="prevScene" object="[flash.display.MovieClip]" playername="" text=".prevScene(%%):void" tiptext="Moves the playhead to the previous scene of the MovieClip instance." version="4"/>
               <string helpurl="flash.display:MovieClip:stop" name="stop" object="[flash.display.MovieClip]" playername="" text=".stop(%%):void" tiptext="Stops the playhead in the movie clip." version="4"/>
            </folder>
            <folder helpurl="flash.display:MovieClip" id="Properties" name="Properties" tiptext="Properties for class MovieClip">
               <string helpurl="flash.display:MovieClip:currentFrameLabel:get" name="currentFrameLabel" object="[flash.display.MovieClip]" playername="" text=".currentFrameLabel" tiptext="The label at the current frame in the timeline of the MovieClip instance." version=""/>
               <string helpurl="flash.display:MovieClip:currentFrame:get" name="currentFrame" object="[flash.display.MovieClip]" playername="" text=".currentFrame" tiptext="Specifies the number of the frame in which the playhead is located in the timeline of the MovieClip instance." version=""/>
               <string helpurl="flash.display:MovieClip:currentLabel:get" name="currentLabel" object="[flash.display.MovieClip]" playername="" text=".currentLabel" tiptext="The current label in which the playhead is located in the timeline of the MovieClip instance." version=""/>
               <string helpurl="flash.display:MovieClip:currentLabels:get" name="currentLabels" object="[flash.display.MovieClip]" playername="" text=".currentLabels" tiptext="Returns an array of FrameLabel objects from the current scene." version=""/>
               <string helpurl="flash.display:MovieClip:currentScene:get" name="currentScene" object="[flash.display.MovieClip]" playername="" text=".currentScene" tiptext="The current scene in which the playhead is located in the timeline of the MovieClip instance." version=""/>
               <string helpurl="flash.display:MovieClip:enabled:get" name="enabled" object="[flash.display.MovieClip]" playername="" text=".enabled" tiptext="A Boolean value that indicates whether a movie clip is enabled." version=""/>
               <string helpurl="flash.display:MovieClip:framesLoaded:get" name="framesLoaded" object="[flash.display.MovieClip]" playername="" text=".framesLoaded" tiptext="The number of frames that are loaded from a streaming SWF file." version=""/>
               <string helpurl="flash.display:MovieClip:scenes:get" name="scenes" object="[flash.display.MovieClip]" playername="" text=".scenes" tiptext="An array of Scene objects, each listing the name, the number of frames, and the frame labels for a scene in the MovieClip instance." version=""/>
               <string helpurl="flash.display:MovieClip:totalFrames:get" name="totalFrames" object="[flash.display.MovieClip]" playername="" text=".totalFrames" tiptext="The total number of frames in the MovieClip instance." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="flash.display:PixelSnapping" id="[flash.display.PixelSnapping]" index="true" name="PixelSnapping" sort="true" tiptext="The PixelSnapping class is an enumeration of constant values for setting the pixel snapping options by using the pixelSnapping property of a Bitmap object.">
            <folder helpurl="flash.display:PixelSnapping" id="Properties" name="Properties" tiptext="Properties for class PixelSnapping">
               <string constant="true" helpurl="flash.display:PixelSnapping:ALWAYS" name="ALWAYS" object="[flash.display.PixelSnapping]" playername="" text="PixelSnapping.ALWAYS" tiptext="A constant value used in the pixelSnapping property of a Bitmap object to specify that the bitmap image is always snapped to the nearest pixel, independent of any transformation." version=""/>
               <string constant="true" helpurl="flash.display:PixelSnapping:AUTO" name="AUTO" object="[flash.display.PixelSnapping]" playername="" text="PixelSnapping.AUTO" tiptext="A constant value used in the pixelSnapping property of a Bitmap object to specify that the bitmap image is snapped to the nearest pixel if it is drawn with no rotationor skew and it is drawn at a scale factor of 99.9% to 100.1%." version=""/>
               <string constant="true" helpurl="flash.display:PixelSnapping:NEVER" name="NEVER" object="[flash.display.PixelSnapping]" playername="" text="PixelSnapping.NEVER" tiptext="A constant value used in the pixelSnapping property of a Bitmap object to specify that no pixel snapping occurs." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="flash.display:Scene" id="[flash.display.Scene]" index="true" name="Scene" sort="true" tiptext="The Scene class includes properties for identifying the name, labels, and number of frames in a scene.">
            <folder helpurl="flash.display:Scene" id="Properties" name="Properties" tiptext="Properties for class Scene">
               <string helpurl="flash.display:Scene:labels:get" name="labels" object="[flash.display.Scene]" playername="" text=".labels" tiptext="An array of FrameLabel objects for the scene." version=""/>
               <string helpurl="flash.display:Scene:name:get" name="name" object="[flash.display.Scene]" playername="" text=".name" tiptext="The name of the scene." version=""/>
               <string helpurl="flash.display:Scene:numFrames:get" name="numFrames" object="[flash.display.Scene]" playername="" text=".numFrames" tiptext="The number of frames in the scene." version=""/>
            </folder>
         </folder>
         <folder asAncestors="flash.display:DisplayObject,flash.events:EventDispatcher,Object" helpurl="flash.display:Shape" id="[flash.display.Shape]" index="true" name="Shape" sort="true" tiptext="This class is used to create lightweight shapes using the ActionScript drawing application program interface (API).">
            <folder helpurl="flash.display:Shape" id="Methods" name="Methods" tiptext="Methods for class Shape">
               <string constructor="true" helpurl="flash.display:Shape:Shape" name="Shape" object="[flash.display.Shape]" playername="" text="new Shape(%%)" tiptext="Creates a new Shape object." version="4"/>
            </folder>
            <folder helpurl="flash.display:Shape" id="Properties" name="Properties" tiptext="Properties for class Shape">
               <string helpurl="flash.display:Shape:graphics:get" name="graphics" object="[flash.display.Shape]" playername="" text=".graphics" tiptext="Specifies the Graphics object belonging to this Shape object, where vector drawing commands can occur." version=""/>
            </folder>
         </folder>
         <folder asAncestors="flash.display:InteractiveObject,flash.display:DisplayObject,flash.events:EventDispatcher,Object" helpurl="flash.display:SimpleButton" id="[flash.display.SimpleButton]" index="true" name="SimpleButton" sort="true" tiptext="The SimpleButton class lets you control all instances of button symbols in a SWF file.">
            <folder helpurl="flash.display:SimpleButton" id="Methods" name="Methods" tiptext="Methods for class SimpleButton">
               <string constructor="true" helpurl="flash.display:SimpleButton:SimpleButton" name="SimpleButton" object="[flash.display.SimpleButton]" playername="" text="new SimpleButton(%[upState:flash.display:DisplayObject=null,overState:flash.display:DisplayObject=null,downState:flash.display:DisplayObject=null,hitTestState:flash.display:DisplayObject=null]%)" tiptext="Creates a new SimpleButton instance." version="4"/>
            </folder>
            <folder helpurl="flash.display:SimpleButton" id="Properties" name="Properties" tiptext="Properties for class SimpleButton">
               <string helpurl="flash.display:SimpleButton:downState:get" name="downState" object="[flash.display.SimpleButton]" playername="" text=".downState" tiptext="Specifies a display object that is used as the visual object for the button &quot;Down&quot; state &amp;#8212;the state that the button is in when the user selects the hitTestState object." version=""/>
               <string helpurl="flash.display:SimpleButton:enabled:get" name="enabled" object="[flash.display.SimpleButton]" playername="" text=".enabled" tiptext="A Boolean value that specifies whether a button is enabled." version=""/>
               <string helpurl="flash.display:SimpleButton:hitTestState:get" name="hitTestState" object="[flash.display.SimpleButton]" playername="" text=".hitTestState" tiptext="Specifies a display object that is used as the hit testing object for the button." version=""/>
               <string helpurl="flash.display:SimpleButton:overState:get" name="overState" object="[flash.display.SimpleButton]" playername="" text=".overState" tiptext="Specifies a display object that is used as the visual object for the button over state &amp;#8212; the state that the button is in when the pointer is positioned over the button." version=""/>
               <string helpurl="flash.display:SimpleButton:upState:get" name="upState" object="[flash.display.SimpleButton]" playername="" text=".upState" tiptext="Specifies a display object that is used as the visual object for the button up state &amp;#8212; the state that the button is in when the pointer is not positioned over the button." version=""/>
            </folder>
         </folder>
         <folder asAncestors="flash.display:DisplayObjectContainer,flash.display:InteractiveObject,flash.display:DisplayObject,flash.events:EventDispatcher,Object" helpurl="flash.display:Sprite" id="[flash.display.Sprite]" index="true" name="Sprite" sort="true" tiptext="The Sprite class is a basic display list building block: a display list node that can display graphics and can also contain children.">
            <folder helpurl="flash.display:Sprite" id="Methods" name="Methods" tiptext="Methods for class Sprite">
               <string constructor="true" helpurl="flash.display:Sprite:Sprite" name="Sprite" object="[flash.display.Sprite]" playername="" text="new Sprite(%%)" tiptext="Creates a new Sprite instance." version="4"/>
               <string helpurl="flash.display:Sprite:startDrag" name="startDrag" object="[flash.display.Sprite]" playername="" text=".startDrag(%[lockCenter:Boolean=false,bounds:flash.geom:Rectangle=null]%):void" tiptext="Lets the user drag the specified sprite." version="4"/>
               <string helpurl="flash.display:Sprite:startTouchDrag" name="startTouchDrag" object="[flash.display.Sprite]" playername="" text=".startTouchDrag(%touchPointID:int[,lockCenter:Boolean=false,bounds:flash.geom:Rectangle=null]%):void" tiptext="Lets the user drag the specified sprite on a touch-enabled device." version="4"/>
               <string helpurl="flash.display:Sprite:stopDrag" name="stopDrag" object="[flash.display.Sprite]" playername="" text=".stopDrag(%%):void" tiptext="Ends the startDrag() method." version="4"/>
               <string helpurl="flash.display:Sprite:stopTouchDrag" name="stopTouchDrag" object="[flash.display.Sprite]" playername="" text=".stopTouchDrag(%touchPointID:int%):void" tiptext="Ends the startTouchDrag() method, for use with touch-enabled devices." version="4"/>
            </folder>
            <folder helpurl="flash.display:Sprite" id="Properties" name="Properties" tiptext="Properties for class Sprite">
               <string helpurl="flash.display:Sprite:buttonMode:get" name="buttonMode" object="[flash.display.Sprite]" playername="" text=".buttonMode" tiptext="Specifies the button mode of this sprite." version=""/>
               <string helpurl="flash.display:Sprite:dropTarget:get" name="dropTarget" object="[flash.display.Sprite]" playername="" text=".dropTarget" tiptext="Specifies the display object over which the sprite is being dragged, or on which the sprite was dropped." version=""/>
               <string helpurl="flash.display:Sprite:graphics:get" name="graphics" object="[flash.display.Sprite]" playername="" text=".graphics" tiptext="Specifies the Graphics object that belongs to this sprite where vector drawing commands can occur." version=""/>
               <string helpurl="flash.display:Sprite:hitArea:get" name="hitArea" object="[flash.display.Sprite]" playername="" text=".hitArea" tiptext="Designates another sprite to serve as the hit area for a sprite." version=""/>
               <string helpurl="flash.display:Sprite:soundTransform:get" name="soundTransform" object="[flash.display.Sprite]" playername="" text=".soundTransform" tiptext="Controls sound within this sprite." version=""/>
            </folder>
         </folder>
         <folder asAncestors="flash.display:DisplayObjectContainer,flash.display:InteractiveObject,flash.display:DisplayObject,flash.events:EventDispatcher,Object" helpurl="flash.display:Stage" id="[flash.display.Stage]" index="true" name="Stage" sort="true" tiptext="The Stage class represents the main drawing area.">
            <folder helpurl="flash.display:Stage" id="Methods" name="Methods" tiptext="Methods for class Stage">
               <string helpurl="flash.display:Stage:addChildAt" name="addChildAt" object="[flash.display.Stage]" playername="" text=".addChildAt(%child:flash.display:DisplayObject,index:int%):flash.display:DisplayObject" tiptext="Adds a child DisplayObject instance to this DisplayObjectContainer instance." version="4"/>
               <string helpurl="flash.display:Stage:addChild" name="addChild" object="[flash.display.Stage]" playername="" text=".addChild(%child:flash.display:DisplayObject%):flash.display:DisplayObject" tiptext="Adds a child DisplayObject instance to this DisplayObjectContainer instance." version="4"/>
               <string helpurl="flash.display:Stage:addEventListener" name="addEventListener" object="[flash.display.Stage]" playername="" text=".addEventListener(%type:String,listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Registers an event listener object with an EventDispatcher object so that the listener receives notification of an event." version="4"/>
               <string helpurl="flash.display:Stage:dispatchEvent" name="dispatchEvent" object="[flash.display.Stage]" playername="" text=".dispatchEvent(%event:flash.events:Event%):Boolean" tiptext="Dispatches an event into the event flow." version="4"/>
               <string helpurl="flash.display:Stage:hasEventListener" name="hasEventListener" object="[flash.display.Stage]" playername="" text=".hasEventListener(%type:String%):Boolean" tiptext="Checks whether the EventDispatcher object has any listeners registered for a specific type of event." version="4"/>
               <string helpurl="flash.display:Stage:invalidate" name="invalidate" object="[flash.display.Stage]" playername="" text=".invalidate(%%):void" tiptext="Signals Flash runtimes to update properties of display objects on the next opportunity it has to refresh the Stage." version="4"/>
               <string helpurl="flash.display:Stage:isFocusInaccessible" name="isFocusInaccessible" object="[flash.display.Stage]" playername="" text=".isFocusInaccessible(%%):Boolean" tiptext="Determines whether the Stage.focus property would return null for security reasons." version="4"/>
               <string helpurl="flash.display:Stage:removeChildAt" name="removeChildAt" object="[flash.display.Stage]" playername="" text=".removeChildAt(%index:int%):flash.display:DisplayObject" tiptext="Removes a child DisplayObject from the specified index position in the child list of the DisplayObjectContainer." version="4"/>
               <string helpurl="flash.display:Stage:setChildIndex" name="setChildIndex" object="[flash.display.Stage]" playername="" text=".setChildIndex(%child:flash.display:DisplayObject,index:int%):void" tiptext="Changes the position of an existing child in the display object container." version="4"/>
               <string helpurl="flash.display:Stage:swapChildrenAt" name="swapChildrenAt" object="[flash.display.Stage]" playername="" text=".swapChildrenAt(%index1:int,index2:int%):void" tiptext="Swaps the z-order (front-to-back order) of the child objects at the two specified index positions in the child list." version="4"/>
            </folder>
            <folder helpurl="flash.display:Stage" id="Properties" name="Properties" tiptext="Properties for class Stage">
               <string helpurl="flash.display:Stage:align:get" name="align" object="[flash.display.Stage]" playername="" text=".align" tiptext="A value from the StageAlign class that specifies the alignment of the stage in Flash Player or the browser." version=""/>
               <string helpurl="flash.display:Stage:displayState:get" name="displayState" object="[flash.display.Stage]" playername="" text=".displayState" tiptext="A value from the StageDisplayState class that specifies which display state to use." version=""/>
               <string helpurl="flash.display:Stage:focus:get" name="focus" object="[flash.display.Stage]" playername="" text=".focus" tiptext="The interactive object with keyboard focus; or null if focus is not set or if the focused object belongs to a security sandbox to which the calling object does not have access." version=""/>
               <string helpurl="flash.display:Stage:frameRate:get" name="frameRate" object="[flash.display.Stage]" playername="" text=".frameRate" tiptext="Gets and sets the frame rate of the stage." version=""/>
               <string helpurl="flash.display:Stage:fullScreenHeight:get" name="fullScreenHeight" object="[flash.display.Stage]" playername="" text=".fullScreenHeight" tiptext="Returns the height of the monitor that will be used when going to full screen size, if that state is entered immediately." version=""/>
               <string helpurl="flash.display:Stage:fullScreenSourceRect:get" name="fullScreenSourceRect" object="[flash.display.Stage]" playername="" text=".fullScreenSourceRect" tiptext="Sets the Flash runtime to scale a specific region of the stage to full-screen mode." version=""/>
               <string helpurl="flash.display:Stage:fullScreenWidth:get" name="fullScreenWidth" object="[flash.display.Stage]" playername="" text=".fullScreenWidth" tiptext="Returns the width of the monitor that will be used when going to full screen size, if that state is entered immediately." version=""/>
               <string helpurl="flash.display:Stage:height:get" name="height" object="[flash.display.Stage]" playername="" text=".height" tiptext="Indicates the height of the display object, in pixels." version=""/>
               <string helpurl="flash.display:Stage:mouseChildren:get" name="mouseChildren" object="[flash.display.Stage]" playername="" text=".mouseChildren" tiptext="Determines whether or not the children of the object are mouse, or user input device, enabled." version=""/>
               <string helpurl="flash.display:Stage:nativeWindow:get" name="nativeWindow" object="[flash.display.Stage]" playername="" text=".nativeWindow" tiptext="A reference to the NativeWindow object containing this Stage." version=""/>
               <string helpurl="flash.display:Stage:numChildren:get" name="numChildren" object="[flash.display.Stage]" playername="" text=".numChildren" tiptext="Returns the number of children of this object." version=""/>
               <string helpurl="flash.display:Stage:quality:get" name="quality" object="[flash.display.Stage]" playername="" text=".quality" tiptext="A value from the StageQuality class that specifies which rendering quality is used." version=""/>
               <string helpurl="flash.display:Stage:scaleMode:get" name="scaleMode" object="[flash.display.Stage]" playername="" text=".scaleMode" tiptext="A value from the StageScaleMode class that specifies which scale mode to use." version=""/>
               <string helpurl="flash.display:Stage:stageFocusRect:get" name="stageFocusRect" object="[flash.display.Stage]" playername="" text=".stageFocusRect" tiptext="Specifies whether or not objects display a glowing border when they have focus." version=""/>
               <string helpurl="flash.display:Stage:stageHeight:get" name="stageHeight" object="[flash.display.Stage]" playername="" text=".stageHeight" tiptext="The current height, in pixels, of the Stage." version=""/>
               <string helpurl="flash.display:Stage:stageWidth:get" name="stageWidth" object="[flash.display.Stage]" playername="" text=".stageWidth" tiptext="Specifies the current width, in pixels, of the Stage." version=""/>
               <string helpurl="flash.display:Stage:width:get" name="width" object="[flash.display.Stage]" playername="" text=".width" tiptext="Indicates the width of the display object, in pixels." version=""/>
               <string helpurl="flash.display:Stage:wmodeGPU:get" name="wmodeGPU" object="[flash.display.Stage]" playername="" text=".wmodeGPU" tiptext="Indicates whether GPU compositing is available and in use." version=""/>
            </folder>
            <folder helpurl="flash.display:Stage" id="Events" name="Events" tiptext="Events for class Stage">
               <string helpurl="flash.display:Stage_flash.events.FullScreenEvent.FULL_SCREEN_fullScreen" name="fullScreen" object="[flash.display.Stage]" playername="" text=".addEventListener(%type:String=FullScreenEvent.FULL_SCREEN{FullScreenEvent.FULL_SCREEN,Event.RESIZE,Event.MOUSE_LEAVE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the Stage object enters, or leaves, full-screen mode." version=""/>
               <string helpurl="flash.display:Stage_flash.events.Event.RESIZE_resize" name="resize" object="[flash.display.Stage]" playername="" text=".addEventListener(%type:String=Event.RESIZE{FullScreenEvent.FULL_SCREEN,Event.RESIZE,Event.MOUSE_LEAVE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the scaleMode property of the Stage object is set to StageScaleMode.NO_SCALE and the SWF file is resized." version=""/>
               <string helpurl="flash.display:Stage_flash.events.Event.MOUSE_LEAVE_mouseLeave" name="mouseLeave" object="[flash.display.Stage]" playername="" text=".addEventListener(%type:String=Event.MOUSE_LEAVE{FullScreenEvent.FULL_SCREEN,Event.RESIZE,Event.MOUSE_LEAVE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched by the Stage object when the pointer moves out of the stage area." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="flash.display:StageAlign" id="[flash.display.StageAlign]" index="true" name="StageAlign" sort="true" tiptext="The StageAlign class provides constant values to use for the Stage.align property.">
            <folder helpurl="flash.display:StageAlign" id="Properties" name="Properties" tiptext="Properties for class StageAlign">
               <string constant="true" helpurl="flash.display:StageAlign:BOTTOM_LEFT" name="BOTTOM_LEFT" object="[flash.display.StageAlign]" playername="" text="StageAlign.BOTTOM_LEFT" tiptext="Specifies that the Stage is aligned in the bottom-left corner." version=""/>
               <string constant="true" helpurl="flash.display:StageAlign:BOTTOM_RIGHT" name="BOTTOM_RIGHT" object="[flash.display.StageAlign]" playername="" text="StageAlign.BOTTOM_RIGHT" tiptext="Specifies that the Stage is aligned in the bottom-right corner." version=""/>
               <string constant="true" helpurl="flash.display:StageAlign:BOTTOM" name="BOTTOM" object="[flash.display.StageAlign]" playername="" text="StageAlign.BOTTOM" tiptext="Specifies that the Stage is aligned at the bottom." version=""/>
               <string constant="true" helpurl="flash.display:StageAlign:LEFT" name="LEFT" object="[flash.display.StageAlign]" playername="" text="StageAlign.LEFT" tiptext="Specifies that the Stage is aligned on the left." version=""/>
               <string constant="true" helpurl="flash.display:StageAlign:RIGHT" name="RIGHT" object="[flash.display.StageAlign]" playername="" text="StageAlign.RIGHT" tiptext="Specifies that the Stage is aligned to the right." version=""/>
               <string constant="true" helpurl="flash.display:StageAlign:TOP_LEFT" name="TOP_LEFT" object="[flash.display.StageAlign]" playername="" text="StageAlign.TOP_LEFT" tiptext="Specifies that the Stage is aligned in the top-left corner." version=""/>
               <string constant="true" helpurl="flash.display:StageAlign:TOP_RIGHT" name="TOP_RIGHT" object="[flash.display.StageAlign]" playername="" text="StageAlign.TOP_RIGHT" tiptext="Specifies that the Stage is aligned in the top-right corner." version=""/>
               <string constant="true" helpurl="flash.display:StageAlign:TOP" name="TOP" object="[flash.display.StageAlign]" playername="" text="StageAlign.TOP" tiptext="Specifies that the Stage is aligned at the top." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="flash.display:StageDisplayState" id="[flash.display.StageDisplayState]" index="true" name="StageDisplayState" sort="true" tiptext="The StageDisplayState class provides values for the Stage.displayState property.">
            <folder helpurl="flash.display:StageDisplayState" id="Properties" name="Properties" tiptext="Properties for class StageDisplayState">
               <string constant="true" helpurl="flash.display:StageDisplayState:FULL_SCREEN_INTERACTIVE" name="FULL_SCREEN_INTERACTIVE" object="[flash.display.StageDisplayState]" playername="" text="StageDisplayState.FULL_SCREEN_INTERACTIVE" tiptext="Specifies that the Stage is in full-screen mode with keyboard interactivity enabled." version=""/>
               <string constant="true" helpurl="flash.display:StageDisplayState:FULL_SCREEN" name="FULL_SCREEN" object="[flash.display.StageDisplayState]" playername="" text="StageDisplayState.FULL_SCREEN" tiptext="Specifies that the Stage is in full-screen mode." version=""/>
               <string constant="true" helpurl="flash.display:StageDisplayState:NORMAL" name="NORMAL" object="[flash.display.StageDisplayState]" playername="" text="StageDisplayState.NORMAL" tiptext="Specifies that the Stage is in normal mode." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="flash.display:StageQuality" id="[flash.display.StageQuality]" index="true" name="StageQuality" sort="true" tiptext="The StageQuality class provides values for the Stage.quality property.">
            <folder helpurl="flash.display:StageQuality" id="Properties" name="Properties" tiptext="Properties for class StageQuality">
               <string constant="true" helpurl="flash.display:StageQuality:BEST" name="BEST" object="[flash.display.StageQuality]" playername="" text="StageQuality.BEST" tiptext="Specifies very high rendering quality: graphics are anti-aliased using a 4 x 4 pixel grid and bitmaps are always smoothed." version=""/>
               <string constant="true" helpurl="flash.display:StageQuality:HIGH" name="HIGH" object="[flash.display.StageQuality]" playername="" text="StageQuality.HIGH" tiptext="Specifies high rendering quality: graphics are anti-aliased using a 4 x 4 pixel grid, and bitmaps are smoothed if the movie is static." version=""/>
               <string constant="true" helpurl="flash.display:StageQuality:LOW" name="LOW" object="[flash.display.StageQuality]" playername="" text="StageQuality.LOW" tiptext="Specifies low rendering quality: graphics are not anti-aliased, and bitmaps are not smoothed." version=""/>
               <string constant="true" helpurl="flash.display:StageQuality:MEDIUM" name="MEDIUM" object="[flash.display.StageQuality]" playername="" text="StageQuality.MEDIUM" tiptext="Specifies medium rendering quality: graphics are anti-aliased using a 2 x 2 pixel grid, but bitmaps are not smoothed." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="flash.display:StageScaleMode" id="[flash.display.StageScaleMode]" index="true" name="StageScaleMode" sort="true" tiptext="The StageScaleMode class provides values for the Stage.scaleMode property.">
            <folder helpurl="flash.display:StageScaleMode" id="Properties" name="Properties" tiptext="Properties for class StageScaleMode">
               <string constant="true" helpurl="flash.display:StageScaleMode:EXACT_FIT" name="EXACT_FIT" object="[flash.display.StageScaleMode]" playername="" text="StageScaleMode.EXACT_FIT" tiptext="Specifies that the entire application be visible in the specified area without trying to preserve the original aspect ratio." version=""/>
               <string constant="true" helpurl="flash.display:StageScaleMode:NO_BORDER" name="NO_BORDER" object="[flash.display.StageScaleMode]" playername="" text="StageScaleMode.NO_BORDER" tiptext="Specifies that the entire application fill the specified area, without distortion but possibly with some cropping, while maintaining the original aspect ratio of the application." version=""/>
               <string constant="true" helpurl="flash.display:StageScaleMode:NO_SCALE" name="NO_SCALE" object="[flash.display.StageScaleMode]" playername="" text="StageScaleMode.NO_SCALE" tiptext="Specifies that the size of the application be fixed, so that it remains unchanged even as the size of the player window changes." version=""/>
               <string constant="true" helpurl="flash.display:StageScaleMode:SHOW_ALL" name="SHOW_ALL" object="[flash.display.StageScaleMode]" playername="" text="StageScaleMode.SHOW_ALL" tiptext="Specifies that the entire application be visible in the specified area without distortion while maintaining the original aspect ratio of the application." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="flash.display:SWFVersion" id="[flash.display.SWFVersion]" index="true" name="SWFVersion" sort="true" tiptext="The SWFVersion class is an enumeration of constant values that indicate the file format version of a loaded SWF file.">
            <folder helpurl="flash.display:SWFVersion" id="Properties" name="Properties" tiptext="Properties for class SWFVersion">
               <string constant="true" helpurl="flash.display:SWFVersion:FLASH10" name="FLASH10" object="[flash.display.SWFVersion]" playername="" text="SWFVersion.FLASH10" tiptext="SWF file format version 10.0." version=""/>
               <string constant="true" helpurl="flash.display:SWFVersion:FLASH1" name="FLASH1" object="[flash.display.SWFVersion]" playername="" text="SWFVersion.FLASH1" tiptext="SWF file format version 1.0." version=""/>
               <string constant="true" helpurl="flash.display:SWFVersion:FLASH2" name="FLASH2" object="[flash.display.SWFVersion]" playername="" text="SWFVersion.FLASH2" tiptext="SWF file format version 2.0." version=""/>
               <string constant="true" helpurl="flash.display:SWFVersion:FLASH3" name="FLASH3" object="[flash.display.SWFVersion]" playername="" text="SWFVersion.FLASH3" tiptext="SWF file format version 3.0." version=""/>
               <string constant="true" helpurl="flash.display:SWFVersion:FLASH4" name="FLASH4" object="[flash.display.SWFVersion]" playername="" text="SWFVersion.FLASH4" tiptext="SWF file format version 4.0." version=""/>
               <string constant="true" helpurl="flash.display:SWFVersion:FLASH5" name="FLASH5" object="[flash.display.SWFVersion]" playername="" text="SWFVersion.FLASH5" tiptext="SWF file format version 5.0." version=""/>
               <string constant="true" helpurl="flash.display:SWFVersion:FLASH6" name="FLASH6" object="[flash.display.SWFVersion]" playername="" text="SWFVersion.FLASH6" tiptext="SWF file format version 6.0." version=""/>
               <string constant="true" helpurl="flash.display:SWFVersion:FLASH7" name="FLASH7" object="[flash.display.SWFVersion]" playername="" text="SWFVersion.FLASH7" tiptext="SWF file format version 7.0." version=""/>
               <string constant="true" helpurl="flash.display:SWFVersion:FLASH8" name="FLASH8" object="[flash.display.SWFVersion]" playername="" text="SWFVersion.FLASH8" tiptext="SWF file format version 8.0." version=""/>
               <string constant="true" helpurl="flash.display:SWFVersion:FLASH9" name="FLASH9" object="[flash.display.SWFVersion]" playername="" text="SWFVersion.FLASH9" tiptext="SWF file format version 9.0." version=""/>
            </folder>
         </folder>
      </folder>
      <folder helpurl="flash.errors" id="flash.errors" name="flash.errors" sort="true" tiptext="Classes for package flash.errors">
         <folder asAncestors="flash.errors:IOError,Error,Object" helpurl="flash.errors:EOFError" id="[flash.errors.EOFError]" index="true" name="EOFError" sort="true" tiptext="An EOFError exception is thrown when you attempt to read past the end of the available data.">
            <folder helpurl="flash.errors:EOFError" id="Methods" name="Methods" tiptext="Methods for class EOFError">
               <string constructor="true" helpurl="flash.errors:EOFError:EOFError" name="EOFError" object="[flash.errors.EOFError]" playername="" text="new EOFError(%message:String%)" tiptext="Creates a new EOFError object." version="9"/>
            </folder>
         </folder>
         <folder asAncestors="Error,Object" helpurl="flash.errors:IllegalOperationError" id="[flash.errors.IllegalOperationError]" index="true" name="IllegalOperationError" sort="true" tiptext="The IllegalOperationError exception is thrown when a method is not implemented or the implementation doesn't cover the current usage.">
            <folder helpurl="flash.errors:IllegalOperationError" id="Methods" name="Methods" tiptext="Methods for class IllegalOperationError">
               <string constructor="true" helpurl="flash.errors:IllegalOperationError:IllegalOperationError" name="IllegalOperationError" object="[flash.errors.IllegalOperationError]" playername="" text="new IllegalOperationError(%message:String%)" tiptext="Creates a new IllegalOperationError object." version="9"/>
            </folder>
         </folder>
         <folder asAncestors="Error,Object" helpurl="flash.errors:InvalidSWFError" id="[flash.errors.InvalidSWFError]" index="true" name="InvalidSWFError" sort="true" tiptext="The Flash runtimes throw this exception when they encounter a corrupted SWF file.">
            <folder helpurl="flash.errors:InvalidSWFError" id="Methods" name="Methods" tiptext="Methods for class InvalidSWFError">
               <string constructor="true" helpurl="flash.errors:InvalidSWFError:InvalidSWFError" name="InvalidSWFError" object="[flash.errors.InvalidSWFError]" playername="" text="new InvalidSWFError(%message:String[,id:int=0]%)" tiptext="Creates a new InvalidSWFError object." version="4"/>
            </folder>
         </folder>
         <folder asAncestors="Error,Object" helpurl="flash.errors:IOError" id="[flash.errors.IOError]" index="true" name="IOError" sort="true" tiptext="The IOError exception is thrown when some type of input or output failure occurs.">
            <folder helpurl="flash.errors:IOError" id="Methods" name="Methods" tiptext="Methods for class IOError">
               <string constructor="true" helpurl="flash.errors:IOError:IOError" name="IOError" object="[flash.errors.IOError]" playername="" text="new IOError(%message:String%)" tiptext="Creates a new IOError object." version="9"/>
            </folder>
         </folder>
         <folder asAncestors="Error,Object" helpurl="flash.errors:MemoryError" id="[flash.errors.MemoryError]" index="true" name="MemoryError" sort="true" tiptext="The MemoryError exception is thrown when a memory allocation request fails.">
            <folder helpurl="flash.errors:MemoryError" id="Methods" name="Methods" tiptext="Methods for class MemoryError">
               <string constructor="true" helpurl="flash.errors:MemoryError:MemoryError" name="MemoryError" object="[flash.errors.MemoryError]" playername="" text="new MemoryError(%message:String%)" tiptext="Creates a new MemoryError object." version="9"/>
            </folder>
         </folder>
         <folder asAncestors="Error,Object" helpurl="flash.errors:ScriptTimeoutError" id="[flash.errors.ScriptTimeoutError]" index="true" name="ScriptTimeoutError" sort="true" tiptext="The ScriptTimeoutError exception is thrown when the script timeout interval is reached.">
            <folder helpurl="flash.errors:ScriptTimeoutError" id="Methods" name="Methods" tiptext="Methods for class ScriptTimeoutError">
               <string constructor="true" helpurl="flash.errors:ScriptTimeoutError:ScriptTimeoutError" name="ScriptTimeoutError" object="[flash.errors.ScriptTimeoutError]" playername="" text="new ScriptTimeoutError(%message:String%)" tiptext="Creates a new ScriptTimeoutError object." version="9"/>
            </folder>
         </folder>
         <folder asAncestors="Error,Object" helpurl="flash.errors:StackOverflowError" id="[flash.errors.StackOverflowError]" index="true" name="StackOverflowError" sort="true" tiptext="ActionScript throws a StackOverflowError exception when the stack available to the script is exhausted.">
            <folder helpurl="flash.errors:StackOverflowError" id="Methods" name="Methods" tiptext="Methods for class StackOverflowError">
               <string constructor="true" helpurl="flash.errors:StackOverflowError:StackOverflowError" name="StackOverflowError" object="[flash.errors.StackOverflowError]" playername="" text="new StackOverflowError(%message:String%)" tiptext="Creates a new StackOverflowError object." version="9"/>
            </folder>
         </folder>
      </folder>
      <folder helpurl="flash.events" id="flash.events" name="flash.events" sort="true" tiptext="Classes for package flash.events">
         <folder asAncestors="flash.events:Event,Object" helpurl="flash.events:AccelerometerEvent" id="[flash.events.AccelerometerEvent]" index="true" name="AccelerometerEvent" sort="true" tiptext="The Accelerometer class dispatches AccelerometerEvent objects when acceleration updates are obtained from the Accelerometer sensor installed on the device.">
            <folder helpurl="flash.events:AccelerometerEvent" id="Methods" name="Methods" tiptext="Methods for class AccelerometerEvent">
               <string constructor="true" helpurl="flash.events:AccelerometerEvent:AccelerometerEvent" name="AccelerometerEvent" object="[flash.events.AccelerometerEvent]" playername="" text="new AccelerometerEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,timestamp:Number=0,accelerationX:Number=0,accelerationY:Number=0,accelerationZ:Number=0]%)" tiptext="Constructor for AccelerometerEvent objects." version="4"/>
            </folder>
            <folder helpurl="flash.events:AccelerometerEvent" id="Properties" name="Properties" tiptext="Properties for class AccelerometerEvent">
               <string constant="true" helpurl="flash.events:AccelerometerEvent:UPDATE" name="UPDATE" object="[flash.events.AccelerometerEvent]" playername="" text="AccelerometerEvent.UPDATE" tiptext="Defines the value of the type property of a AccelerometerEvent event object." version=""/>
               <string helpurl="flash.events:AccelerometerEvent:accelerationX" name="accelerationX" object="[flash.events.AccelerometerEvent]" playername="" text=".accelerationX" tiptext="Acceleration along the x-axis, measured in Gs." version=""/>
               <string helpurl="flash.events:AccelerometerEvent:accelerationY" name="accelerationY" object="[flash.events.AccelerometerEvent]" playername="" text=".accelerationY" tiptext="Acceleration along the y-axis, measured in Gs." version=""/>
               <string helpurl="flash.events:AccelerometerEvent:accelerationZ" name="accelerationZ" object="[flash.events.AccelerometerEvent]" playername="" text=".accelerationZ" tiptext="Acceleration along the z-axis, measured in Gs." version=""/>
               <string helpurl="flash.events:AccelerometerEvent:timestamp" name="timestamp" object="[flash.events.AccelerometerEvent]" playername="" text=".timestamp" tiptext="The number of milliseconds at the time of the event since the runtime was initialized." version=""/>
            </folder>
         </folder>
         <folder asAncestors="flash.events:ErrorEvent,flash.events:TextEvent,flash.events:Event,Object" helpurl="flash.events:AsyncErrorEvent" id="[flash.events.AsyncErrorEvent]" index="true" name="AsyncErrorEvent" sort="true" tiptext="An object dispatches an AsyncErrorEvent when an exception is thrown from nativeasynchronous code, which could be from, for example, LocalConnection, NetConnection,SharedObject, or NetStream.">
            <folder helpurl="flash.events:AsyncErrorEvent" id="Methods" name="Methods" tiptext="Methods for class AsyncErrorEvent">
               <string constructor="true" helpurl="flash.events:AsyncErrorEvent:AsyncErrorEvent" name="AsyncErrorEvent" object="[flash.events.AsyncErrorEvent]" playername="" text="new AsyncErrorEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,text:String,error:Error=null]%)" tiptext="Constructor for AsyncErrorEvent objects." version="4"/>
               <string helpurl="flash.events:AsyncErrorEvent:clone" name="clone" object="[flash.events.AsyncErrorEvent]" playername="" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of the AsyncErrorEvent object and sets the value of each property to matchthat of the original." version="4"/>
               <string helpurl="flash.events:AsyncErrorEvent:toString" name="toString" object="[flash.events.AsyncErrorEvent]" playername="" text=".toString(%%):String" tiptext="Returns a string that contains all the properties of the AsyncErrorEvent object." version="4"/>
            </folder>
            <folder helpurl="flash.events:AsyncErrorEvent" id="Properties" name="Properties" tiptext="Properties for class AsyncErrorEvent">
               <string constant="true" helpurl="flash.events:AsyncErrorEvent:ASYNC_ERROR" name="ASYNC_ERROR" object="[flash.events.AsyncErrorEvent]" playername="" text="AsyncErrorEvent.ASYNC_ERROR" tiptext="The AsyncErrorEvent.ASYNC_ERROR constant defines the value of the type property of an asyncError event object." version=""/>
               <string helpurl="flash.events:AsyncErrorEvent:error" name="error" object="[flash.events.AsyncErrorEvent]" playername="" text=".error" tiptext="The exception that was thrown." version=""/>
            </folder>
         </folder>
         <folder asAncestors="flash.events:TextEvent,flash.events:Event,Object" helpurl="flash.events:DataEvent" id="[flash.events.DataEvent]" index="true" name="DataEvent" sort="true" tiptext="An object dispatches a DataEvent object when raw data has completed loading.">
            <folder helpurl="flash.events:DataEvent" id="Methods" name="Methods" tiptext="Methods for class DataEvent">
               <string constructor="true" helpurl="flash.events:DataEvent:DataEvent" name="DataEvent" object="[flash.events.DataEvent]" playername="" text="new DataEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,data:String]%)" tiptext="Constructor for DataEvent objects." version="4"/>
               <string helpurl="flash.events:DataEvent:clone" name="clone" object="[flash.events.DataEvent]" playername="" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of the DataEvent object and sets the value of each property to match that of theoriginal." version="4"/>
               <string helpurl="flash.events:DataEvent:toString" name="toString" object="[flash.events.DataEvent]" playername="" text=".toString(%%):String" tiptext="Returns a string that contains all the properties of the DataEvent object." version="4"/>
            </folder>
            <folder helpurl="flash.events:DataEvent" id="Properties" name="Properties" tiptext="Properties for class DataEvent">
               <string constant="true" helpurl="flash.events:DataEvent:DATA" name="DATA" object="[flash.events.DataEvent]" playername="" text="DataEvent.DATA" tiptext="Defines the value of the type property of a data event object." version=""/>
               <string constant="true" helpurl="flash.events:DataEvent:UPLOAD_COMPLETE_DATA" name="UPLOAD_COMPLETE_DATA" object="[flash.events.DataEvent]" playername="" text="DataEvent.UPLOAD_COMPLETE_DATA" tiptext="Defines the value of the type property of an uploadCompleteData event object." version=""/>
               <string helpurl="flash.events:DataEvent:data:get" name="data" object="[flash.events.DataEvent]" playername="" text=".data" tiptext="The raw data loaded into Flash Player or Adobe AIR." version=""/>
            </folder>
         </folder>
         <folder asAncestors="flash.events:TextEvent,flash.events:Event,Object" helpurl="flash.events:ErrorEvent" id="[flash.events.ErrorEvent]" index="true" name="ErrorEvent" sort="true" tiptext="An object dispatches an ErrorEvent object when an error causes an asynchronous operation to fail.">
            <folder helpurl="flash.events:ErrorEvent" id="Methods" name="Methods" tiptext="Methods for class ErrorEvent">
               <string constructor="true" helpurl="flash.events:ErrorEvent:ErrorEvent" name="ErrorEvent" object="[flash.events.ErrorEvent]" playername="" text="new ErrorEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,text:String,id:int=0]%)" tiptext="Constructor for ErrorEvent objects." version="4"/>
               <string helpurl="flash.events:ErrorEvent:clone" name="clone" object="[flash.events.ErrorEvent]" playername="" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of the ErrorEvent object and sets the value of each property to match that of the original." version="4"/>
               <string helpurl="flash.events:ErrorEvent:toString" name="toString" object="[flash.events.ErrorEvent]" playername="" text=".toString(%%):String" tiptext="Returns a string that contains all the properties of the ErrorEvent object." version="4"/>
            </folder>
            <folder helpurl="flash.events:ErrorEvent" id="Properties" name="Properties" tiptext="Properties for class ErrorEvent">
               <string constant="true" helpurl="flash.events:ErrorEvent:ERROR" name="ERROR" object="[flash.events.ErrorEvent]" playername="" text="ErrorEvent.ERROR" tiptext="Defines the value of the type property of an error event object." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="flash.events:Event" id="[flash.events.Event]" index="true" name="Event" sort="true" tiptext="The Event class is used as the base class for the creation of Event objects, which are passed as parameters to event listeners when an event occurs.">
            <folder helpurl="flash.events:Event" id="Methods" name="Methods" tiptext="Methods for class Event">
               <string constructor="true" helpurl="flash.events:Event:Event" name="Event" object="[flash.events.Event]" playername="" text="new Event(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false]%)" tiptext="Used to create new Event object." version="4"/>
               <string helpurl="flash.events:Event:clone" name="clone" object="[flash.events.Event]" playername="" text=".clone(%%):flash.events:Event" tiptext="Duplicates an instance of an Event subclass." version="4"/>
               <string helpurl="flash.events:Event:formatToString" name="formatToString" object="[flash.events.Event]" playername="" text=".formatToString(%className:String,arguments:restParam%):String" tiptext="A utility function for implementing the toString() method in custom ActionScript 3.0 Event classes." version="4"/>
               <string helpurl="flash.events:Event:isDefaultPrevented" name="isDefaultPrevented" object="[flash.events.Event]" playername="" text=".isDefaultPrevented(%%):Boolean" tiptext="Checks whether the preventDefault() method has been called on the event." version="4"/>
               <string helpurl="flash.events:Event:preventDefault" name="preventDefault" object="[flash.events.Event]" playername="" text=".preventDefault(%%):void" tiptext="Cancels an event's default behavior if that behavior can be canceled." version="4"/>
               <string helpurl="flash.events:Event:stopImmediatePropagation" name="stopImmediatePropagation" object="[flash.events.Event]" playername="" text=".stopImmediatePropagation(%%):void" tiptext="Prevents processing of any event listeners in the current node and any subsequent nodes in the event flow." version="4"/>
               <string helpurl="flash.events:Event:stopPropagation" name="stopPropagation" object="[flash.events.Event]" playername="" text=".stopPropagation(%%):void" tiptext="Prevents processing of any event listeners in nodes subsequent to the current node in the event flow." version="4"/>
               <string helpurl="flash.events:Event:toString" name="toString" object="[flash.events.Event]" playername="" text=".toString(%%):String" tiptext="Returns a string containing all the properties of the Event object." version="4"/>
            </folder>
            <folder helpurl="flash.events:Event" id="Properties" name="Properties" tiptext="Properties for class Event">
               <string constant="true" helpurl="flash.events:Event:ACTIVATE" name="ACTIVATE" object="[flash.events.Event]" playername="" text="Event.ACTIVATE" tiptext="The ACTIVATE constant defines the value of the type property of an activate event object." version=""/>
               <string constant="true" helpurl="flash.events:Event:ADDED_TO_STAGE" name="ADDED_TO_STAGE" object="[flash.events.Event]" playername="" text="Event.ADDED_TO_STAGE" tiptext="The Event.ADDED_TO_STAGE constant defines the value of the type property of an addedToStage event object." version=""/>
               <string constant="true" helpurl="flash.events:Event:ADDED" name="ADDED" object="[flash.events.Event]" playername="" text="Event.ADDED" tiptext="The Event.ADDED constant defines the value of the type property of an added event object." version=""/>
               <string constant="true" helpurl="flash.events:Event:CANCEL" name="CANCEL" object="[flash.events.Event]" playername="" text="Event.CANCEL" tiptext="The Event.CANCEL constant defines the value of the type property of a cancel event object." version=""/>
               <string constant="true" helpurl="flash.events:Event:CHANGE" name="CHANGE" object="[flash.events.Event]" playername="" text="Event.CHANGE" tiptext="The Event.CHANGE constant defines the value of the type property of a change event object." version=""/>
               <string constant="true" helpurl="flash.events:Event:CLEAR" name="CLEAR" object="[flash.events.Event]" playername="" text="Event.CLEAR" tiptext="The Event.CLEAR constant efines the value of the type property of a clear event object." version=""/>
               <string constant="true" helpurl="flash.events:Event:CLOSE" name="CLOSE" object="[flash.events.Event]" playername="" text="Event.CLOSE" tiptext="The Event.CLOSE constant defines the value of the type property of a close event object." version=""/>
               <string constant="true" helpurl="flash.events:Event:CLOSING" name="CLOSING" object="[flash.events.Event]" playername="" text="Event.CLOSING" tiptext="The Event.CLOSING constant defines the value of the type property of a closing event object." version=""/>
               <string constant="true" helpurl="flash.events:Event:COMPLETE" name="COMPLETE" object="[flash.events.Event]" playername="" text="Event.COMPLETE" tiptext="The Event.COMPLETE constant defines the value of the type property of a complete event object." version=""/>
               <string constant="true" helpurl="flash.events:Event:CONNECT" name="CONNECT" object="[flash.events.Event]" playername="" text="Event.CONNECT" tiptext="The Event.CONNECT constant defines the value of the type property of a connect event object." version=""/>
               <string constant="true" helpurl="flash.events:Event:COPY" name="COPY" object="[flash.events.Event]" playername="" text="Event.COPY" tiptext="Defines the value of the type property of a copy event object." version=""/>
               <string constant="true" helpurl="flash.events:Event:CUT" name="CUT" object="[flash.events.Event]" playername="" text="Event.CUT" tiptext="Defines the value of the type property of a cut event object." version=""/>
               <string constant="true" helpurl="flash.events:Event:DEACTIVATE" name="DEACTIVATE" object="[flash.events.Event]" playername="" text="Event.DEACTIVATE" tiptext="The Event.DEACTIVATE constant defines the value of the type property of a deactivate event object." version=""/>
               <string constant="true" helpurl="flash.events:Event:DISPLAYING" name="DISPLAYING" object="[flash.events.Event]" playername="" text="Event.DISPLAYING" tiptext="The Event.DISPLAYING constant defines the value of the type property of a displaying event object." version=""/>
               <string constant="true" helpurl="flash.events:Event:ENTER_FRAME" name="ENTER_FRAME" object="[flash.events.Event]" playername="" text="Event.ENTER_FRAME" tiptext="The Event.ENTER_FRAME constant defines the value of the type property of an enterFrame event object." version=""/>
               <string constant="true" helpurl="flash.events:Event:EXITING" name="EXITING" object="[flash.events.Event]" playername="" text="Event.EXITING" tiptext="The Event.EXITING constant defines the value of the type property of an exiting event object." version=""/>
               <string constant="true" helpurl="flash.events:Event:EXIT_FRAME" name="EXIT_FRAME" object="[flash.events.Event]" playername="" text="Event.EXIT_FRAME" tiptext="The Event.EXIT_FRAME constant defines the value of the type property of an exitFrame event object." version=""/>
               <string constant="true" helpurl="flash.events:Event:FRAME_CONSTRUCTED" name="FRAME_CONSTRUCTED" object="[flash.events.Event]" playername="" text="Event.FRAME_CONSTRUCTED" tiptext="The Event.FRAME_CONSTRUCTED constant defines the value of the type property of an frameConstructed event object." version=""/>
               <string constant="true" helpurl="flash.events:Event:FULLSCREEN" name="FULLSCREEN" object="[flash.events.Event]" playername="" text="Event.FULLSCREEN" tiptext="The Event.FULL_SCREEN constant defines the value of the type property of a fullScreen event object." version=""/>
               <string constant="true" helpurl="flash.events:Event:HTML_BOUNDS_CHANGE" name="HTML_BOUNDS_CHANGE" object="[flash.events.Event]" playername="" text="Event.HTML_BOUNDS_CHANGE" tiptext="The Event.HTML_BOUNDS_CHANGE constant defines the value of the type property of an htmlBoundsChange event object." version=""/>
               <string constant="true" helpurl="flash.events:Event:HTML_DOM_INITIALIZE" name="HTML_DOM_INITIALIZE" object="[flash.events.Event]" playername="" text="Event.HTML_DOM_INITIALIZE" tiptext="The Event.HTML_DOM_INITIALIZE constant defines the value of the type property of an htmlDOMInitialize event object." version=""/>
               <string constant="true" helpurl="flash.events:Event:HTML_RENDER" name="HTML_RENDER" object="[flash.events.Event]" playername="" text="Event.HTML_RENDER" tiptext="The Event.HTML_RENDER constant defines the value of the type property of an htmlRender event object." version=""/>
               <string constant="true" helpurl="flash.events:Event:ID3" name="ID3" object="[flash.events.Event]" playername="" text="Event.ID3" tiptext="The Event.ID3 constant defines the value of the type property of an id3 event object." version=""/>
               <string constant="true" helpurl="flash.events:Event:INIT" name="INIT" object="[flash.events.Event]" playername="" text="Event.INIT" tiptext="The Event.INIT constant defines the value of the type property of an init event object." version=""/>
               <string constant="true" helpurl="flash.events:Event:LOCATION_CHANGE" name="LOCATION_CHANGE" object="[flash.events.Event]" playername="" text="Event.LOCATION_CHANGE" tiptext="The Event.LOCATION_CHANGE constant defines the value of the type property of a locationChange event object." version=""/>
               <string constant="true" helpurl="flash.events:Event:MOUSE_LEAVE" name="MOUSE_LEAVE" object="[flash.events.Event]" playername="" text="Event.MOUSE_LEAVE" tiptext="The Event.MOUSE_LEAVE constant defines the value of the type property of a mouseLeave event object." version=""/>
               <string constant="true" helpurl="flash.events:Event:NETWORK_CHANGE" name="NETWORK_CHANGE" object="[flash.events.Event]" playername="" text="Event.NETWORK_CHANGE" tiptext="The Event.NETWORK_CHANGE constant defines the value of the type property of a networkChange event object." version=""/>
               <string constant="true" helpurl="flash.events:Event:OPEN" name="OPEN" object="[flash.events.Event]" playername="" text="Event.OPEN" tiptext="The Event.OPEN constant defines the value of the type property of an open event object." version=""/>
               <string constant="true" helpurl="flash.events:Event:PASTE" name="PASTE" object="[flash.events.Event]" playername="" text="Event.PASTE" tiptext="The Event.PASTE constant defines the value of the type property of a paste event object." version=""/>
               <string constant="true" helpurl="flash.events:Event:REMOVED_FROM_STAGE" name="REMOVED_FROM_STAGE" object="[flash.events.Event]" playername="" text="Event.REMOVED_FROM_STAGE" tiptext="The Event.REMOVED_FROM_STAGE constant defines the value of the type property of a removedFromStage event object." version=""/>
               <string constant="true" helpurl="flash.events:Event:REMOVED" name="REMOVED" object="[flash.events.Event]" playername="" text="Event.REMOVED" tiptext="The Event.REMOVED constant defines the value of the type property ofa removed event object." version=""/>
               <string constant="true" helpurl="flash.events:Event:RENDER" name="RENDER" object="[flash.events.Event]" playername="" text="Event.RENDER" tiptext="The Event.RENDER constant defines the value of the type property of a render event object." version=""/>
               <string constant="true" helpurl="flash.events:Event:RESIZE" name="RESIZE" object="[flash.events.Event]" playername="" text="Event.RESIZE" tiptext="The Event.RESIZE constant defines the value of the type property of a resize event object." version=""/>
               <string constant="true" helpurl="flash.events:Event:SCROLL" name="SCROLL" object="[flash.events.Event]" playername="" text="Event.SCROLL" tiptext="The Event.SCROLL constant defines the value of the type property of a scroll event object." version=""/>
               <string constant="true" helpurl="flash.events:Event:SELECT_ALL" name="SELECT_ALL" object="[flash.events.Event]" playername="" text="Event.SELECT_ALL" tiptext="The Event.SELECT_ALL constant defines the value of the type property of a selectAll event object." version=""/>
               <string constant="true" helpurl="flash.events:Event:SELECT" name="SELECT" object="[flash.events.Event]" playername="" text="Event.SELECT" tiptext="The Event.SELECT constant defines the value of the type property of a select event object." version=""/>
               <string constant="true" helpurl="flash.events:Event:SOUND_COMPLETE" name="SOUND_COMPLETE" object="[flash.events.Event]" playername="" text="Event.SOUND_COMPLETE" tiptext="The Event.SOUND_COMPLETE constant defines the value of the type property of a soundComplete event object." version=""/>
               <string constant="true" helpurl="flash.events:Event:STANDARD_ERROR_CLOSE" name="STANDARD_ERROR_CLOSE" object="[flash.events.Event]" playername="" text="Event.STANDARD_ERROR_CLOSE" tiptext="The Event.STANDARD_ERROR_CLOSE constant defines the value of the type property of a standardErrorClose event object." version=""/>
               <string constant="true" helpurl="flash.events:Event:STANDARD_INPUT_CLOSE" name="STANDARD_INPUT_CLOSE" object="[flash.events.Event]" playername="" text="Event.STANDARD_INPUT_CLOSE" tiptext="The Event.STANDARD_INPUT_CLOSE constant defines the value of the type property of a standardInputClose event object." version=""/>
               <string constant="true" helpurl="flash.events:Event:STANDARD_OUTPUT_CLOSE" name="STANDARD_OUTPUT_CLOSE" object="[flash.events.Event]" playername="" text="Event.STANDARD_OUTPUT_CLOSE" tiptext="The Event.STANDARD_OUTPUT_CLOSE constant defines the value of the type property of a standardOutputClose event object." version=""/>
               <string constant="true" helpurl="flash.events:Event:TAB_CHILDREN_CHANGE" name="TAB_CHILDREN_CHANGE" object="[flash.events.Event]" playername="" text="Event.TAB_CHILDREN_CHANGE" tiptext="The Event.TAB_CHILDREN_CHANGE constant defines the value of the type property of a tabChildrenChange event object." version=""/>
               <string constant="true" helpurl="flash.events:Event:TAB_ENABLED_CHANGE" name="TAB_ENABLED_CHANGE" object="[flash.events.Event]" playername="" text="Event.TAB_ENABLED_CHANGE" tiptext="The Event.TAB_ENABLED_CHANGE constant defines the value of the type property of a tabEnabledChange event object." version=""/>
               <string constant="true" helpurl="flash.events:Event:TAB_INDEX_CHANGE" name="TAB_INDEX_CHANGE" object="[flash.events.Event]" playername="" text="Event.TAB_INDEX_CHANGE" tiptext="The Event.TAB_INDEX_CHANGE constant defines the value of the type property of a tabIndexChange event object." version=""/>
               <string constant="true" helpurl="flash.events:Event:UNLOAD" name="UNLOAD" object="[flash.events.Event]" playername="" text="Event.UNLOAD" tiptext="The Event.UNLOAD constant defines the value of the type property of an unload event object." version=""/>
               <string constant="true" helpurl="flash.events:Event:USER_IDLE" name="USER_IDLE" object="[flash.events.Event]" playername="" text="Event.USER_IDLE" tiptext="The Event.USER_IDLE constant defines the value of the type property of a userIdle event object." version=""/>
               <string constant="true" helpurl="flash.events:Event:USER_PRESENT" name="USER_PRESENT" object="[flash.events.Event]" playername="" text="Event.USER_PRESENT" tiptext="The Event.USER_PRESENT constant defines the value of the type property of a userPresent event object." version=""/>
               <string helpurl="flash.events:Event:bubbles:get" name="bubbles" object="[flash.events.Event]" playername="" text=".bubbles" tiptext="Indicates whether an event is a bubbling event." version=""/>
               <string helpurl="flash.events:Event:cancelable:get" name="cancelable" object="[flash.events.Event]" playername="" text=".cancelable" tiptext="Indicates whether the behavior associated with the event can be prevented." version=""/>
               <string helpurl="flash.events:Event:currentTarget:get" name="currentTarget" object="[flash.events.Event]" playername="" text=".currentTarget" tiptext="The object that is actively processing the Event object with an event listener." version=""/>
               <string helpurl="flash.events:Event:eventPhase:get" name="eventPhase" object="[flash.events.Event]" playername="" text=".eventPhase" tiptext="The current phase in the event flow." version=""/>
               <string helpurl="flash.events:Event:target:get" name="target" object="[flash.events.Event]" playername="" text=".target" tiptext="The event target." version=""/>
               <string helpurl="flash.events:Event:type:get" name="type" object="[flash.events.Event]" playername="" text=".type" tiptext="The type of event." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="flash.events:EventDispatcher" id="[flash.events.EventDispatcher]" index="true" name="EventDispatcher" sort="true" tiptext="The EventDispatcher class is the base class for all runtime classes that dispatch events.">
            <folder helpurl="flash.events:EventDispatcher" id="Methods" name="Methods" tiptext="Methods for class EventDispatcher">
               <string constructor="true" helpurl="flash.events:EventDispatcher:EventDispatcher" name="EventDispatcher" object="[flash.events.EventDispatcher]" playername="" text="new EventDispatcher(%[target:flash.events:IEventDispatcher=null]%)" tiptext="Aggregates an instance of the EventDispatcher class." version="4"/>
               <string helpurl="flash.events:EventDispatcher:addEventListener" name="addEventListener" object="[flash.events.EventDispatcher]" playername="" text=".addEventListener(%type:String,listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Registers an event listener object with an EventDispatcher object so that the listener receives notification of an event." version="4"/>
               <string helpurl="flash.events:EventDispatcher:dispatchEvent" name="dispatchEvent" object="[flash.events.EventDispatcher]" playername="" text=".dispatchEvent(%event:flash.events:Event%):Boolean" tiptext="Dispatches an event into the event flow." version="4"/>
               <string helpurl="flash.events:EventDispatcher:hasEventListener" name="hasEventListener" object="[flash.events.EventDispatcher]" playername="" text=".hasEventListener(%type:String%):Boolean" tiptext="Checks whether the EventDispatcher object has any listeners registered for a specific type of event." version="4"/>
               <string helpurl="flash.events:EventDispatcher:removeEventListener" name="removeEventListener" object="[flash.events.EventDispatcher]" playername="" text=".removeEventListener(%type:String,listener:Function[,useCapture:Boolean=false]%):void" tiptext="Removes a listener from the EventDispatcher object." version="4"/>
               <string helpurl="flash.events:EventDispatcher:willTrigger" name="willTrigger" object="[flash.events.EventDispatcher]" playername="" text=".willTrigger(%type:String%):Boolean" tiptext="Checks whether an event listener is registered with this EventDispatcher object or any of its ancestors for the specified event type." version="4"/>
            </folder>
            <folder helpurl="flash.events:EventDispatcher" id="Events" name="Events" tiptext="Events for class EventDispatcher">
               <string helpurl="flash.events:EventDispatcher_flash.events.Event.DEACTIVATE_deactivate" name="deactivate" object="[flash.events.EventDispatcher]" playername="" text=".addEventListener(%type:String=Event.DEACTIVATE{Event.DEACTIVATE,Event.ACTIVATE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="[broadcast event] Dispatched when the Flash Player or AIR application operating loses system focus and is becoming inactive." version=""/>
               <string helpurl="flash.events:EventDispatcher_flash.events.Event.ACTIVATE_activate" name="activate" object="[flash.events.EventDispatcher]" playername="" text=".addEventListener(%type:String=Event.ACTIVATE{Event.DEACTIVATE,Event.ACTIVATE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="[broadcast event] Dispatched when the Flash Player or AIR application gains operating system focus and becomes active." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="flash.events:EventPhase" id="[flash.events.EventPhase]" index="true" name="EventPhase" sort="true" tiptext="The EventPhase class provides values for the eventPhase property of the Event class.">
            <folder helpurl="flash.events:EventPhase" id="Properties" name="Properties" tiptext="Properties for class EventPhase">
               <string constant="true" helpurl="flash.events:EventPhase:AT_TARGET" name="AT_TARGET" object="[flash.events.EventPhase]" playername="" text="EventPhase.AT_TARGET" tiptext="The target phase, which is the second phase of the event flow." version=""/>
               <string constant="true" helpurl="flash.events:EventPhase:BUBBLING_PHASE" name="BUBBLING_PHASE" object="[flash.events.EventPhase]" playername="" text="EventPhase.BUBBLING_PHASE" tiptext="The bubbling phase, which is the third phase of the event flow." version=""/>
               <string constant="true" helpurl="flash.events:EventPhase:CAPTURING_PHASE" name="CAPTURING_PHASE" object="[flash.events.EventPhase]" playername="" text="EventPhase.CAPTURING_PHASE" tiptext="The capturing phase, which is the first phase of the event flow." version=""/>
            </folder>
         </folder>
         <folder asAncestors="flash.events:Event,Object" helpurl="flash.events:FocusEvent" id="[flash.events.FocusEvent]" index="true" name="FocusEvent" sort="true" tiptext="An object dispatches a FocusEvent object when the user changes the focus from one object in the display list to another.">
            <folder helpurl="flash.events:FocusEvent" id="Methods" name="Methods" tiptext="Methods for class FocusEvent">
               <string constructor="true" helpurl="flash.events:FocusEvent:FocusEvent" name="FocusEvent" object="[flash.events.FocusEvent]" playername="" text="new FocusEvent(%type:String[,bubbles:Boolean=true,cancelable:Boolean=false,relatedObject:flash.display:InteractiveObject=null,shiftKey:Boolean=false,keyCode:uint=0,direction:String=none]%)" tiptext="Constructor for FocusEvent objects." version="4"/>
               <string helpurl="flash.events:FocusEvent:clone" name="clone" object="[flash.events.FocusEvent]" playername="" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of the FocusEvent object and sets the value of each property to match that of the original." version="4"/>
               <string helpurl="flash.events:FocusEvent:toString" name="toString" object="[flash.events.FocusEvent]" playername="" text=".toString(%%):String" tiptext="Returns a string that contains all the properties of the FocusEvent object." version="4"/>
            </folder>
            <folder helpurl="flash.events:FocusEvent" id="Properties" name="Properties" tiptext="Properties for class FocusEvent">
               <string constant="true" helpurl="flash.events:FocusEvent:FOCUS_IN" name="FOCUS_IN" object="[flash.events.FocusEvent]" playername="" text="FocusEvent.FOCUS_IN" tiptext="Defines the value of the type property of a focusIn event object." version=""/>
               <string constant="true" helpurl="flash.events:FocusEvent:FOCUS_OUT" name="FOCUS_OUT" object="[flash.events.FocusEvent]" playername="" text="FocusEvent.FOCUS_OUT" tiptext="Defines the value of the type property of a focusOut event object." version=""/>
               <string constant="true" helpurl="flash.events:FocusEvent:KEY_FOCUS_CHANGE" name="KEY_FOCUS_CHANGE" object="[flash.events.FocusEvent]" playername="" text="FocusEvent.KEY_FOCUS_CHANGE" tiptext="Defines the value of the type property of a keyFocusChange event object." version=""/>
               <string constant="true" helpurl="flash.events:FocusEvent:MOUSE_FOCUS_CHANGE" name="MOUSE_FOCUS_CHANGE" object="[flash.events.FocusEvent]" playername="" text="FocusEvent.MOUSE_FOCUS_CHANGE" tiptext="Defines the value of the type property of a mouseFocusChange event object." version=""/>
               <string helpurl="flash.events:FocusEvent:direction:get" name="direction" object="[flash.events.FocusEvent]" playername="" text=".direction" tiptext="Specifies direction of focus for a focusIn event." version=""/>
               <string helpurl="flash.events:FocusEvent:isRelatedObjectInaccessible:get" name="isRelatedObjectInaccessible" object="[flash.events.FocusEvent]" playername="" text=".isRelatedObjectInaccessible" tiptext="If true, the relatedObject property is set to null for reasons related to security sandboxes." version=""/>
               <string helpurl="flash.events:FocusEvent:keyCode:get" name="keyCode" object="[flash.events.FocusEvent]" playername="" text=".keyCode" tiptext="The key code value of the key pressed to trigger a keyFocusChange event." version=""/>
               <string helpurl="flash.events:FocusEvent:relatedObject:get" name="relatedObject" object="[flash.events.FocusEvent]" playername="" text=".relatedObject" tiptext="A reference to the complementary InteractiveObject instance that is affected by thechange in focus." version=""/>
               <string helpurl="flash.events:FocusEvent:shiftKey:get" name="shiftKey" object="[flash.events.FocusEvent]" playername="" text=".shiftKey" tiptext="Indicates whether the Shift key modifier is activated, in which case the value is true." version=""/>
            </folder>
         </folder>
         <folder asAncestors="flash.events:ActivityEvent,flash.events:Event,Object" helpurl="flash.events:FullScreenEvent" id="[flash.events.FullScreenEvent]" index="true" name="FullScreenEvent" sort="true" tiptext="The Stage object dispatches a FullScreenEvent object whenever the Stage enters or leaves full-screen display mode.">
            <folder helpurl="flash.events:FullScreenEvent" id="Methods" name="Methods" tiptext="Methods for class FullScreenEvent">
               <string constructor="true" helpurl="flash.events:FullScreenEvent:FullScreenEvent" name="FullScreenEvent" object="[flash.events.FullScreenEvent]" playername="" text="new FullScreenEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,fullScreen:Boolean=false]%)" tiptext="Constructor for FullScreenEvent objects." version="4"/>
               <string helpurl="flash.events:FullScreenEvent:clone" name="clone" object="[flash.events.FullScreenEvent]" playername="" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of a FullScreenEvent object and sets the value of each property to match that of the original." version="4"/>
               <string helpurl="flash.events:FullScreenEvent:toString" name="toString" object="[flash.events.FullScreenEvent]" playername="" text=".toString(%%):String" tiptext="Returns a string that contains all the properties of the FullScreenEvent object." version="4"/>
            </folder>
            <folder helpurl="flash.events:FullScreenEvent" id="Properties" name="Properties" tiptext="Properties for class FullScreenEvent">
               <string constant="true" helpurl="flash.events:FullScreenEvent:FULL_SCREEN" name="FULL_SCREEN" object="[flash.events.FullScreenEvent]" playername="" text="FullScreenEvent.FULL_SCREEN" tiptext="The FullScreenEvent.FULL_SCREEN constant defines the value of the type property of a fullScreen event object." version=""/>
               <string helpurl="flash.events:FullScreenEvent:fullScreen:get" name="fullScreen" object="[flash.events.FullScreenEvent]" playername="" text=".fullScreen" tiptext="Indicates whether the Stage object is in full-screen mode (true) or not (false)." version=""/>
            </folder>
         </folder>
         <folder asAncestors="flash.events:Event,Object" helpurl="flash.events:GeolocationEvent" id="[flash.events.GeolocationEvent]" index="true" name="GeolocationEvent" sort="true" tiptext="A Geolocation object dispatches GeolocationEvent objects when it receives updates from the location sensor installed on the device.">
            <folder helpurl="flash.events:GeolocationEvent" id="Methods" name="Methods" tiptext="Methods for class GeolocationEvent">
               <string constructor="true" helpurl="flash.events:GeolocationEvent:GeolocationEvent" name="GeolocationEvent" object="[flash.events.GeolocationEvent]" playername="" text="new GeolocationEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,latitude:Number=0,longitude:Number=0,altitude:Number=0,hAccuracy:Number=0,vAccuracy:Number=0,speed:Number=0,heading:Number=0,timestamp:Number=0]%)" tiptext="Constructor for GeolocationEvent objects." version="4"/>
               <string helpurl="flash.events:GeolocationEvent:clone" name="clone" object="[flash.events.GeolocationEvent]" playername="" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of the GeolocationEvent object and sets the value of each property to match that of the original." version="4"/>
               <string helpurl="flash.events:GeolocationEvent:toString" name="toString" object="[flash.events.GeolocationEvent]" playername="" text=".toString(%%):String" tiptext="Returns a string that contains all the properties of the GeolocationEvent object." version="4"/>
            </folder>
            <folder helpurl="flash.events:GeolocationEvent" id="Properties" name="Properties" tiptext="Properties for class GeolocationEvent">
               <string constant="true" helpurl="flash.events:GeolocationEvent:UPDATE" name="UPDATE" object="[flash.events.GeolocationEvent]" playername="" text="GeolocationEvent.UPDATE" tiptext="Defines the value of the type property of a GeolocationEvent event object." version=""/>
               <string helpurl="flash.events:GeolocationEvent:altitude" name="altitude" object="[flash.events.GeolocationEvent]" playername="" text=".altitude" tiptext="The altitude in meters." version=""/>
               <string helpurl="flash.events:GeolocationEvent:heading" name="heading" object="[flash.events.GeolocationEvent]" playername="" text=".heading" tiptext="The direction of movement (with respect to true north) in integer degrees." version=""/>
               <string helpurl="flash.events:GeolocationEvent:horizontalAccuracy" name="horizontalAccuracy" object="[flash.events.GeolocationEvent]" playername="" text=".horizontalAccuracy" tiptext="The horizontal accuracy in meters." version=""/>
               <string helpurl="flash.events:GeolocationEvent:latitude" name="latitude" object="[flash.events.GeolocationEvent]" playername="" text=".latitude" tiptext="The latitude in degrees." version=""/>
               <string helpurl="flash.events:GeolocationEvent:longitude" name="longitude" object="[flash.events.GeolocationEvent]" playername="" text=".longitude" tiptext="The longitude in degrees." version=""/>
               <string helpurl="flash.events:GeolocationEvent:speed" name="speed" object="[flash.events.GeolocationEvent]" playername="" text=".speed" tiptext="The speed in meters/second." version=""/>
               <string helpurl="flash.events:GeolocationEvent:timestamp" name="timestamp" object="[flash.events.GeolocationEvent]" playername="" text=".timestamp" tiptext="The number of milliseconds at the time of the event since the runtime was initialized." version=""/>
               <string helpurl="flash.events:GeolocationEvent:verticalAccuracy" name="verticalAccuracy" object="[flash.events.GeolocationEvent]" playername="" text=".verticalAccuracy" tiptext="The vertical accuracy in meters." version=""/>
            </folder>
         </folder>
         <folder asAncestors="flash.events:Event,Object" helpurl="flash.events:GestureEvent" id="[flash.events.GestureEvent]" index="true" name="GestureEvent" sort="true" tiptext="The GestureEvent class lets you handle multi-touch events on devices that detect complex user contact with the device (such as pressing two fingers on a touch screen at the same time).">
            <folder helpurl="flash.events:GestureEvent" id="Methods" name="Methods" tiptext="Methods for class GestureEvent">
               <string constructor="true" helpurl="flash.events:GestureEvent:GestureEvent" name="GestureEvent" object="[flash.events.GestureEvent]" playername="" text="new GestureEvent(%type:String[,bubbles:Boolean=true,cancelable:Boolean=false,phase:String=null,localX:Number=0,localY:Number=0,ctrlKey:Boolean=false,altKey:Boolean=false,shiftKey:Boolean=false,commandKey:Boolean=false,controlKey:Boolean=false]%)" tiptext="Constructor for GestureEvent objects." version="4"/>
               <string helpurl="flash.events:GestureEvent:clone" name="clone" object="[flash.events.GestureEvent]" playername="" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of the GestureEvent object and sets the value of each property to match that of the original." version="4"/>
               <string helpurl="flash.events:GestureEvent:toString" name="toString" object="[flash.events.GestureEvent]" playername="" text=".toString(%%):String" tiptext="Returns a string that contains all the properties of the GestureEvent object." version="4"/>
               <string helpurl="flash.events:GestureEvent:updateAfterEvent" name="updateAfterEvent" object="[flash.events.GestureEvent]" playername="" text=".updateAfterEvent(%%):void" tiptext="Refreshes the Flash runtime display after processing the gesture event, in case the display list has been modified by the event handler." version="4"/>
            </folder>
            <folder helpurl="flash.events:GestureEvent" id="Properties" name="Properties" tiptext="Properties for class GestureEvent">
               <string constant="true" helpurl="flash.events:GestureEvent:GESTURE_TWO_FINGER_TAP" name="GESTURE_TWO_FINGER_TAP" object="[flash.events.GestureEvent]" playername="" text="GestureEvent.GESTURE_TWO_FINGER_TAP" tiptext="Defines the value of the type property of a GESTURE_TWO_FINGER_TAP gesture event object." version=""/>
               <string helpurl="flash.events:GestureEvent:localX:get" name="localX" object="[flash.events.GestureEvent]" playername="" text=".localX" tiptext="The horizontal coordinate at which the event occurred relative to the containing sprite." version=""/>
               <string helpurl="flash.events:GestureEvent:localY:get" name="localY" object="[flash.events.GestureEvent]" playername="" text=".localY" tiptext="The vertical coordinate at which the event occurred relative to the containing sprite." version=""/>
               <string helpurl="flash.events:GestureEvent:phase:get" name="phase" object="[flash.events.GestureEvent]" playername="" text=".phase" tiptext="A value from the GesturePhase class indicating the progress of the touch gesture (begin, update, or end)." version=""/>
               <string helpurl="flash.events:GestureEvent:stageX:get" name="stageX" object="[flash.events.GestureEvent]" playername="" text=".stageX" tiptext="The horizontal coordinate at which the event occurred in global Stage coordinates." version=""/>
               <string helpurl="flash.events:GestureEvent:stageY:get" name="stageY" object="[flash.events.GestureEvent]" playername="" text=".stageY" tiptext="The vertical coordinate at which the event occurred in global Stage coordinates." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="flash.events:GesturePhase" id="[flash.events.GesturePhase]" index="true" name="GesturePhase" sort="true" tiptext="The GesturePhase class is an enumeration class of constant values for use with the GestureEvent, PressAndTapGestureEvent, and TransformGestureEvent classes.">
            <folder helpurl="flash.events:GesturePhase" id="Properties" name="Properties" tiptext="Properties for class GesturePhase">
               <string constant="true" helpurl="flash.events:GesturePhase:BEGIN" name="BEGIN" object="[flash.events.GesturePhase]" playername="" text="GesturePhase.BEGIN" tiptext="The beginning of a new gesture (such as touching a finger to a touch enabled screen)." version=""/>
               <string constant="true" helpurl="flash.events:GesturePhase:END" name="END" object="[flash.events.GesturePhase]" playername="" text="GesturePhase.END" tiptext="The completion of a gesture (such as lifting a finger off a touch enabled screen)." version=""/>
               <string constant="true" helpurl="flash.events:GesturePhase:UPDATE" name="UPDATE" object="[flash.events.GesturePhase]" playername="" text="GesturePhase.UPDATE" tiptext="The progress of a gesture (such as moving a finger across a touch enabled screen)." version=""/>
            </folder>
         </folder>
         <folder asAncestors="flash.events:Event,Object" helpurl="flash.events:HTTPStatusEvent" id="[flash.events.HTTPStatusEvent]" index="true" name="HTTPStatusEvent" sort="true" tiptext="The application dispatches HTTPStatusEvent objects when a network request returns an HTTPstatus code.">
            <folder helpurl="flash.events:HTTPStatusEvent" id="Methods" name="Methods" tiptext="Methods for class HTTPStatusEvent">
               <string constructor="true" helpurl="flash.events:HTTPStatusEvent:HTTPStatusEvent" name="HTTPStatusEvent" object="[flash.events.HTTPStatusEvent]" playername="" text="new HTTPStatusEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,status:int=0]%)" tiptext="Constructor for HTTPStatusEvent objects." version="4"/>
               <string helpurl="flash.events:HTTPStatusEvent:clone" name="clone" object="[flash.events.HTTPStatusEvent]" playername="" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of the HTTPStatusEvent object and sets the value of each property to match that of the original." version="4"/>
               <string helpurl="flash.events:HTTPStatusEvent:toString" name="toString" object="[flash.events.HTTPStatusEvent]" playername="" text=".toString(%%):String" tiptext="Returns a string that contains all the properties of the HTTPStatusEvent object." version="4"/>
            </folder>
            <folder helpurl="flash.events:HTTPStatusEvent" id="Properties" name="Properties" tiptext="Properties for class HTTPStatusEvent">
               <string constant="true" helpurl="flash.events:HTTPStatusEvent:HTTP_RESPONSE_STATUS" name="HTTP_RESPONSE_STATUS" object="[flash.events.HTTPStatusEvent]" playername="" text="HTTPStatusEvent.HTTP_RESPONSE_STATUS" tiptext="Unlike the httpStatus event, the httpResponseStatus event is delivered before any response data." version=""/>
               <string constant="true" helpurl="flash.events:HTTPStatusEvent:HTTP_STATUS" name="HTTP_STATUS" object="[flash.events.HTTPStatusEvent]" playername="" text="HTTPStatusEvent.HTTP_STATUS" tiptext="The HTTPStatusEvent.HTTP_STATUS constant defines the value of the type property of a httpStatus event object." version=""/>
               <string helpurl="flash.events:HTTPStatusEvent:responseHeaders:get" name="responseHeaders" object="[flash.events.HTTPStatusEvent]" playername="" text=".responseHeaders" tiptext="The response headers that the response returned, as an array of URLRequestHeader objects." version=""/>
               <string helpurl="flash.events:HTTPStatusEvent:responseURL:get" name="responseURL" object="[flash.events.HTTPStatusEvent]" playername="" text=".responseURL" tiptext="The URL that the response was returned from." version=""/>
               <string helpurl="flash.events:HTTPStatusEvent:status:get" name="status" object="[flash.events.HTTPStatusEvent]" playername="" text=".status" tiptext="The HTTP status code returned by the server." version=""/>
            </folder>
         </folder>
         <folder helpurl="flash.events:IEventDispatcher" id="[flash.events.IEventDispatcher]" index="true" name="IEventDispatcher" sort="true" tiptext="The IEventDispatcher interface defines methods for adding or removing event listeners, checks whether specific types of event listeners are registered, and dispatches events.">
            <folder helpurl="flash.events:IEventDispatcher" id="Methods" name="Methods" tiptext="Methods for class IEventDispatcher">
               <string helpurl="flash.events:IEventDispatcher:addEventListener" name="addEventListener" object="[flash.events.IEventDispatcher]" playername="" text=".addEventListener(%type:String,listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Registers an event listener object with an EventDispatcher object so that the listenerreceives notification of an event." version="4"/>
               <string helpurl="flash.events:IEventDispatcher:dispatchEvent" name="dispatchEvent" object="[flash.events.IEventDispatcher]" playername="" text=".dispatchEvent(%event:flash.events:Event%):Boolean" tiptext="Dispatches an event into the event flow." version="4"/>
               <string helpurl="flash.events:IEventDispatcher:hasEventListener" name="hasEventListener" object="[flash.events.IEventDispatcher]" playername="" text=".hasEventListener(%type:String%):Boolean" tiptext="Checks whether the EventDispatcher object has any listeners registered for a specific type of event." version="4"/>
               <string helpurl="flash.events:IEventDispatcher:removeEventListener" name="removeEventListener" object="[flash.events.IEventDispatcher]" playername="" text=".removeEventListener(%type:String,listener:Function[,useCapture:Boolean=false]%):void" tiptext="Removes a listener from the EventDispatcher object." version="4"/>
               <string helpurl="flash.events:IEventDispatcher:willTrigger" name="willTrigger" object="[flash.events.IEventDispatcher]" playername="" text=".willTrigger(%type:String%):Boolean" tiptext="Checks whether an event listener is registered with this EventDispatcher object or any of its ancestors for the specified event type." version="4"/>
            </folder>
         </folder>
         <folder asAncestors="flash.events:TextEvent,flash.events:Event,Object" helpurl="flash.events:IMEEvent" id="[flash.events.IMEEvent]" index="true" name="IMEEvent" sort="true" tiptext="An IMEEvent object is dispatched when the user enters text using an input method editor (IME).">
            <folder helpurl="flash.events:IMEEvent" id="Methods" name="Methods" tiptext="Methods for class IMEEvent">
               <string constructor="true" helpurl="flash.events:IMEEvent:IMEEvent" name="IMEEvent" object="[flash.events.IMEEvent]" playername="" text="new IMEEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,text:String,imeClient:flash.text.ime:IIMEClient=null]%)" tiptext="Constructor for IMEEvent objects." version="4"/>
               <string helpurl="flash.events:IMEEvent:clone" name="clone" object="[flash.events.IMEEvent]" playername="" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of the IMEEvent object and sets the value of each property to match that of the original." version="4"/>
               <string helpurl="flash.events:IMEEvent:toString" name="toString" object="[flash.events.IMEEvent]" playername="" text=".toString(%%):String" tiptext="Returns a string that contains all the properties of the IMEEvent object." version="4"/>
            </folder>
            <folder helpurl="flash.events:IMEEvent" id="Properties" name="Properties" tiptext="Properties for class IMEEvent">
               <string constant="true" helpurl="flash.events:IMEEvent:IME_COMPOSITION" name="IME_COMPOSITION" object="[flash.events.IMEEvent]" playername="" text="IMEEvent.IME_COMPOSITION" tiptext="Defines the value of the type property of an imeComposition event object." version=""/>
            </folder>
         </folder>
         <folder asAncestors="flash.events:ErrorEvent,flash.events:TextEvent,flash.events:Event,Object" helpurl="flash.events:IOErrorEvent" id="[flash.events.IOErrorEvent]" index="true" name="IOErrorEvent" sort="true" tiptext="An IOErrorEvent object is dispatched when an error causes input or output operations to fail.">
            <folder helpurl="flash.events:IOErrorEvent" id="Methods" name="Methods" tiptext="Methods for class IOErrorEvent">
               <string constructor="true" helpurl="flash.events:IOErrorEvent:IOErrorEvent" name="IOErrorEvent" object="[flash.events.IOErrorEvent]" playername="" text="new IOErrorEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,text:String,id:int=0]%)" tiptext="Constructor for IOErrorEvent objects." version="4"/>
               <string helpurl="flash.events:IOErrorEvent:clone" name="clone" object="[flash.events.IOErrorEvent]" playername="" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of the IOErrorEvent object and sets the value of each property to match that of the original." version="4"/>
               <string helpurl="flash.events:IOErrorEvent:toString" name="toString" object="[flash.events.IOErrorEvent]" playername="" text=".toString(%%):String" tiptext="Returns a string that contains all the properties of the IOErrorEvent object." version="4"/>
            </folder>
            <folder helpurl="flash.events:IOErrorEvent" id="Properties" name="Properties" tiptext="Properties for class IOErrorEvent">
               <string constant="true" helpurl="flash.events:IOErrorEvent:IO_ERROR" name="IO_ERROR" object="[flash.events.IOErrorEvent]" playername="" text="IOErrorEvent.IO_ERROR" tiptext="Defines the value of the type property of an ioError event object." version=""/>
               <string constant="true" helpurl="flash.events:IOErrorEvent:STANDARD_ERROR_IO_ERROR" name="STANDARD_ERROR_IO_ERROR" object="[flash.events.IOErrorEvent]" playername="" text="IOErrorEvent.STANDARD_ERROR_IO_ERROR" tiptext="The standardErrorIoError event is dispatched when an error occurs while reading data from the standardError stream of a NativeProcess object." version=""/>
               <string constant="true" helpurl="flash.events:IOErrorEvent:STANDARD_INPUT_IO_ERROR" name="STANDARD_INPUT_IO_ERROR" object="[flash.events.IOErrorEvent]" playername="" text="IOErrorEvent.STANDARD_INPUT_IO_ERROR" tiptext="The standardInputIoError event is dispatched when an error occurs while writing data to the standardInput of a NativeProcess object." version=""/>
               <string constant="true" helpurl="flash.events:IOErrorEvent:STANDARD_OUTPUT_IO_ERROR" name="STANDARD_OUTPUT_IO_ERROR" object="[flash.events.IOErrorEvent]" playername="" text="IOErrorEvent.STANDARD_OUTPUT_IO_ERROR" tiptext="The standardOutputIoError event is dispatched when an error occurs while reading data from the standardOutput stream of a NativeProcess object." version=""/>
            </folder>
         </folder>
         <folder asAncestors="flash.events:Event,Object" helpurl="flash.events:KeyboardEvent" id="[flash.events.KeyboardEvent]" index="true" name="KeyboardEvent" sort="true" tiptext="A KeyboardEvent object id dispatched in response to user input through a keyboard.">
            <folder helpurl="flash.events:KeyboardEvent" id="Methods" name="Methods" tiptext="Methods for class KeyboardEvent">
               <string constructor="true" helpurl="flash.events:KeyboardEvent:KeyboardEvent" name="KeyboardEvent" object="[flash.events.KeyboardEvent]" playername="" text="new KeyboardEvent(%type:String[,bubbles:Boolean=true,cancelable:Boolean=false,charCodeValue:uint=0,keyCodeValue:uint=0,keyLocationValue:uint=0,ctrlKeyValue:Boolean=false,altKeyValue:Boolean=false,shiftKeyValue:Boolean=false,controlKeyValue:Boolean=false,commandKeyValue:Boolean=false]%)" tiptext="Constructor for KeyboardEvent objects." version="4"/>
               <string helpurl="flash.events:KeyboardEvent:clone" name="clone" object="[flash.events.KeyboardEvent]" playername="" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of the KeyboardEvent object and sets the value of each property to match that of the original." version="4"/>
               <string helpurl="flash.events:KeyboardEvent:toString" name="toString" object="[flash.events.KeyboardEvent]" playername="" text=".toString(%%):String" tiptext="Returns a string that contains all the properties of the KeyboardEvent object." version="4"/>
            </folder>
            <folder helpurl="flash.events:KeyboardEvent" id="Properties" name="Properties" tiptext="Properties for class KeyboardEvent">
               <string constant="true" helpurl="flash.events:KeyboardEvent:KEY_DOWN" name="KEY_DOWN" object="[flash.events.KeyboardEvent]" playername="" text="KeyboardEvent.KEY_DOWN" tiptext="The KeyboardEvent.KEY_DOWN constant defines the value of the type property of a keyDown event object." version=""/>
               <string constant="true" helpurl="flash.events:KeyboardEvent:KEY_UP" name="KEY_UP" object="[flash.events.KeyboardEvent]" playername="" text="KeyboardEvent.KEY_UP" tiptext="The KeyboardEvent.KEY_UP constant defines the value of the type property of a keyUp event object." version=""/>
               <string helpurl="flash.events:KeyboardEvent:charCode:get" name="charCode" object="[flash.events.KeyboardEvent]" playername="" text=".charCode" tiptext="Contains the character code value of the key pressed or released." version=""/>
               <string helpurl="flash.events:KeyboardEvent:commandKey:get" name="commandKey" object="[flash.events.KeyboardEvent]" playername="" text=".commandKey" tiptext="Indicates whether the Command key is active (true) or inactive (false)." version=""/>
               <string helpurl="flash.events:KeyboardEvent:controlKey:get" name="controlKey" object="[flash.events.KeyboardEvent]" playername="" text=".controlKey" tiptext="Indicates whether the Control key is active (true) or inactive (false)." version=""/>
               <string helpurl="flash.events:KeyboardEvent:keyCode:get" name="keyCode" object="[flash.events.KeyboardEvent]" playername="" text=".keyCode" tiptext="The key code value of the key pressed or released." version=""/>
               <string helpurl="flash.events:KeyboardEvent:keyLocation:get" name="keyLocation" object="[flash.events.KeyboardEvent]" playername="" text=".keyLocation" tiptext="Indicates the location of the key on the keyboard." version=""/>
            </folder>
         </folder>
         <folder asAncestors="flash.events:Event,Object" helpurl="flash.events:MouseEvent" id="[flash.events.MouseEvent]" index="true" name="MouseEvent" sort="true" tiptext="A MouseEvent object is dispatched into the event flow whenever mouse events occur.">
            <folder helpurl="flash.events:MouseEvent" id="Methods" name="Methods" tiptext="Methods for class MouseEvent">
               <string constructor="true" helpurl="flash.events:MouseEvent:MouseEvent" name="MouseEvent" object="[flash.events.MouseEvent]" playername="" text="new MouseEvent(%type:String[,bubbles:Boolean=true,cancelable:Boolean=false,localX:Number=unknown,localY:Number=unknown,relatedObject:flash.display:InteractiveObject=null,ctrlKey:Boolean=false,altKey:Boolean=false,shiftKey:Boolean=false,buttonDown:Boolean=false,delta:int=0,commandKey:Boolean=false,controlKey:Boolean=false,clickCount:int=0]%)" tiptext="Constructor for MouseEvent objects." version="4"/>
               <string helpurl="flash.events:MouseEvent:clone" name="clone" object="[flash.events.MouseEvent]" playername="" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of the MouseEvent object and sets the value of each property to match that of the original." version="4"/>
               <string helpurl="flash.events:MouseEvent:toString" name="toString" object="[flash.events.MouseEvent]" playername="" text=".toString(%%):String" tiptext="Returns a string that contains all the properties of the MouseEvent object." version="4"/>
            </folder>
            <folder helpurl="flash.events:MouseEvent" id="Properties" name="Properties" tiptext="Properties for class MouseEvent">
               <string constant="true" helpurl="flash.events:MouseEvent:CLICK" name="CLICK" object="[flash.events.MouseEvent]" playername="" text="MouseEvent.CLICK" tiptext="Defines the value of the type property of a click event object." version=""/>
               <string constant="true" helpurl="flash.events:MouseEvent:CONTEXT_MENU" name="CONTEXT_MENU" object="[flash.events.MouseEvent]" playername="" text="MouseEvent.CONTEXT_MENU" tiptext="The MouseEvent.CONTEXT_MENU constant defines the value of the type property of a contextMenu event object." version=""/>
               <string constant="true" helpurl="flash.events:MouseEvent:DOUBLE_CLICK" name="DOUBLE_CLICK" object="[flash.events.MouseEvent]" playername="" text="MouseEvent.DOUBLE_CLICK" tiptext="Defines the value of the type property of a doubleClick event object." version=""/>
               <string constant="true" helpurl="flash.events:MouseEvent:MIDDLE_CLICK" name="MIDDLE_CLICK" object="[flash.events.MouseEvent]" playername="" text="MouseEvent.MIDDLE_CLICK" tiptext="Defines the value of the type property of a middleClick event object." version=""/>
               <string constant="true" helpurl="flash.events:MouseEvent:MIDDLE_MOUSE_DOWN" name="MIDDLE_MOUSE_DOWN" object="[flash.events.MouseEvent]" playername="" text="MouseEvent.MIDDLE_MOUSE_DOWN" tiptext="Defines the value of the type property of a middleMouseDown event object." version=""/>
               <string constant="true" helpurl="flash.events:MouseEvent:MIDDLE_MOUSE_UP" name="MIDDLE_MOUSE_UP" object="[flash.events.MouseEvent]" playername="" text="MouseEvent.MIDDLE_MOUSE_UP" tiptext="Defines the value of the type property of a middleMouseUp event object." version=""/>
               <string constant="true" helpurl="flash.events:MouseEvent:MOUSE_DOWN" name="MOUSE_DOWN" object="[flash.events.MouseEvent]" playername="" text="MouseEvent.MOUSE_DOWN" tiptext="Defines the value of the type property of a mouseDown event object." version=""/>
               <string constant="true" helpurl="flash.events:MouseEvent:MOUSE_MOVE" name="MOUSE_MOVE" object="[flash.events.MouseEvent]" playername="" text="MouseEvent.MOUSE_MOVE" tiptext="Defines the value of the type property of a mouseMove event object." version=""/>
               <string constant="true" helpurl="flash.events:MouseEvent:MOUSE_OUT" name="MOUSE_OUT" object="[flash.events.MouseEvent]" playername="" text="MouseEvent.MOUSE_OUT" tiptext="Defines the value of the type property of a mouseOut event object." version=""/>
               <string constant="true" helpurl="flash.events:MouseEvent:MOUSE_OVER" name="MOUSE_OVER" object="[flash.events.MouseEvent]" playername="" text="MouseEvent.MOUSE_OVER" tiptext="Defines the value of the type property of a mouseOver event object." version=""/>
               <string constant="true" helpurl="flash.events:MouseEvent:MOUSE_UP" name="MOUSE_UP" object="[flash.events.MouseEvent]" playername="" text="MouseEvent.MOUSE_UP" tiptext="Defines the value of the type property of a mouseUp event object." version=""/>
               <string constant="true" helpurl="flash.events:MouseEvent:RIGHT_CLICK" name="RIGHT_CLICK" object="[flash.events.MouseEvent]" playername="" text="MouseEvent.RIGHT_CLICK" tiptext="Defines the value of the type property of a rightClick event object." version=""/>
               <string constant="true" helpurl="flash.events:MouseEvent:RIGHT_MOUSE_DOWN" name="RIGHT_MOUSE_DOWN" object="[flash.events.MouseEvent]" playername="" text="MouseEvent.RIGHT_MOUSE_DOWN" tiptext="Defines the value of the type property of a rightMouseDown event object." version=""/>
               <string constant="true" helpurl="flash.events:MouseEvent:RIGHT_MOUSE_UP" name="RIGHT_MOUSE_UP" object="[flash.events.MouseEvent]" playername="" text="MouseEvent.RIGHT_MOUSE_UP" tiptext="Defines the value of the type property of a rightMouseUp event object." version=""/>
               <string constant="true" helpurl="flash.events:MouseEvent:ROLL_OUT" name="ROLL_OUT" object="[flash.events.MouseEvent]" playername="" text="MouseEvent.ROLL_OUT" tiptext="Defines the value of the type property of a rollOut event object." version=""/>
               <string constant="true" helpurl="flash.events:MouseEvent:ROLL_OVER" name="ROLL_OVER" object="[flash.events.MouseEvent]" playername="" text="MouseEvent.ROLL_OVER" tiptext="Defines the value of the type property of a rollOver event object." version=""/>
               <string helpurl="flash.events:MouseEvent:altKey:get" name="altKey" object="[flash.events.MouseEvent]" playername="" text=".altKey" tiptext="Indicates whether the Alt key is active (true) or inactive (false)." version=""/>
               <string helpurl="flash.events:MouseEvent:buttonDown:get" name="buttonDown" object="[flash.events.MouseEvent]" playername="" text=".buttonDown" tiptext="Indicates whether the primary mouse button is pressed (true) or not (false)." version=""/>
               <string helpurl="flash.events:MouseEvent:clickCount:get" name="clickCount" object="[flash.events.MouseEvent]" playername="" text=".clickCount" tiptext="Indicates whether or not the mouse down event is part of a multi-click sequence." version=""/>
               <string helpurl="flash.events:MouseEvent:commandKey:get" name="commandKey" object="[flash.events.MouseEvent]" playername="" text=".commandKey" tiptext="Indicates whether the command key is activated (Mac only.) The value of property commandKeywill have the same value as property ctrlKey on the Mac." version=""/>
               <string helpurl="flash.events:MouseEvent:controlKey:get" name="controlKey" object="[flash.events.MouseEvent]" playername="" text=".controlKey" tiptext="Indicates whether the Control key is activated on Mac and whether the Ctrl key is activated on Windows or Linux." version=""/>
               <string helpurl="flash.events:MouseEvent:ctrlKey:get" name="ctrlKey" object="[flash.events.MouseEvent]" playername="" text=".ctrlKey" tiptext="On Windows or Linux, indicates whether the Ctrl key is active (true) or inactive (false)." version=""/>
               <string helpurl="flash.events:MouseEvent:delta:get" name="delta" object="[flash.events.MouseEvent]" playername="" text=".delta" tiptext="Indicates how many lines should be scrolled for each unit the user rotates the mouse wheel." version=""/>
               <string helpurl="flash.events:MouseEvent:isRelatedObjectInaccessible:get" name="isRelatedObjectInaccessible" object="[flash.events.MouseEvent]" playername="" text=".isRelatedObjectInaccessible" tiptext="If true, the relatedObject property is set to null for reasons related to security sandboxes." version=""/>
               <string helpurl="flash.events:MouseEvent:localX:get" name="localX" object="[flash.events.MouseEvent]" playername="" text=".localX" tiptext="The horizontal coordinate at which the event occurred relative to the containing sprite." version=""/>
               <string helpurl="flash.events:MouseEvent:localY:get" name="localY" object="[flash.events.MouseEvent]" playername="" text=".localY" tiptext="The vertical coordinate at which the event occurred relative to the containing sprite." version=""/>
               <string helpurl="flash.events:MouseEvent:relatedObject:get" name="relatedObject" object="[flash.events.MouseEvent]" playername="" text=".relatedObject" tiptext="A reference to a display list object that is related to the event." version=""/>
               <string helpurl="flash.events:MouseEvent:shiftKey:get" name="shiftKey" object="[flash.events.MouseEvent]" playername="" text=".shiftKey" tiptext="Indicates whether the Shift key is active (true) or inactive (false)." version=""/>
               <string helpurl="flash.events:MouseEvent:stageX:get" name="stageX" object="[flash.events.MouseEvent]" playername="" text=".stageX" tiptext="The horizontal coordinate at which the event occurred in global Stage coordinates." version=""/>
               <string helpurl="flash.events:MouseEvent:stageY:get" name="stageY" object="[flash.events.MouseEvent]" playername="" text=".stageY" tiptext="The vertical coordinate at which the event occurred in global Stage coordinates." version=""/>
            </folder>
         </folder>
         <folder asAncestors="flash.events:Event,Object" helpurl="flash.events:NetStatusEvent" id="[flash.events.NetStatusEvent]" index="true" name="NetStatusEvent" sort="true" tiptext="A NetConnection, NetStream, or SharedObject object dispatches NetStatusEvent objects when a it reports its status.">
            <folder helpurl="flash.events:NetStatusEvent" id="Methods" name="Methods" tiptext="Methods for class NetStatusEvent">
               <string constructor="true" helpurl="flash.events:NetStatusEvent:NetStatusEvent" name="NetStatusEvent" object="[flash.events.NetStatusEvent]" playername="" text="new NetStatusEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,info:Object=null]%)" tiptext="Constructor for NetStatusEvent objects." version="4"/>
               <string helpurl="flash.events:NetStatusEvent:clone" name="clone" object="[flash.events.NetStatusEvent]" playername="" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of the NetStatusEvent object and sets the value of each property to match that of the original." version="4"/>
               <string helpurl="flash.events:NetStatusEvent:toString" name="toString" object="[flash.events.NetStatusEvent]" playername="" text=".toString(%%):String" tiptext="Returns a string that contains all the properties of the NetStatusEvent object." version="4"/>
            </folder>
            <folder helpurl="flash.events:NetStatusEvent" id="Properties" name="Properties" tiptext="Properties for class NetStatusEvent">
               <string constant="true" helpurl="flash.events:NetStatusEvent:NET_STATUS" name="NET_STATUS" object="[flash.events.NetStatusEvent]" playername="" text="NetStatusEvent.NET_STATUS" tiptext="Defines the value of the type property of a netStatus event object." version=""/>
               <string helpurl="flash.events:NetStatusEvent:info:get" name="info" object="[flash.events.NetStatusEvent]" playername="" text=".info" tiptext="An object with properties that describe the object's status or error condition." version=""/>
            </folder>
         </folder>
         <folder asAncestors="flash.events:GestureEvent,flash.events:Event,Object" helpurl="flash.events:PressAndTapGestureEvent" id="[flash.events.PressAndTapGestureEvent]" index="true" name="PressAndTapGestureEvent" sort="true" tiptext="The PressAndTapGestureEvent class lets you handle press-and-tap gesture on touch-enabled devices.">
            <folder helpurl="flash.events:PressAndTapGestureEvent" id="Methods" name="Methods" tiptext="Methods for class PressAndTapGestureEvent">
               <string constructor="true" helpurl="flash.events:PressAndTapGestureEvent:PressAndTapGestureEvent" name="PressAndTapGestureEvent" object="[flash.events.PressAndTapGestureEvent]" playername="" text="new PressAndTapGestureEvent(%type:String[,bubbles:Boolean=true,cancelable:Boolean=false,phase:String=null,localX:Number=0,localY:Number=0,tapLocalX:Number=0,tapLocalY:Number=0,ctrlKey:Boolean=false,altKey:Boolean=false,shiftKey:Boolean=false,commandKey:Boolean=false,controlKey:Boolean=false]%)" tiptext="Constructor for PressAndTapGestureEvent objects." version="4"/>
               <string helpurl="flash.events:PressAndTapGestureEvent:clone" name="clone" object="[flash.events.PressAndTapGestureEvent]" playername="" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of the PressAndTapGestureEvent object and sets the value of each property to match that of the original." version="4"/>
               <string helpurl="flash.events:PressAndTapGestureEvent:toString" name="toString" object="[flash.events.PressAndTapGestureEvent]" playername="" text=".toString(%%):String" tiptext="Returns a string that contains all the properties of the PressAndTapGestureEvent object." version="4"/>
            </folder>
            <folder helpurl="flash.events:PressAndTapGestureEvent" id="Properties" name="Properties" tiptext="Properties for class PressAndTapGestureEvent">
               <string constant="true" helpurl="flash.events:PressAndTapGestureEvent:GESTURE_PRESS_AND_TAP" name="GESTURE_PRESS_AND_TAP" object="[flash.events.PressAndTapGestureEvent]" playername="" text="PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP" tiptext="Defines the value of the type property of a GESTURE_PRESS_AND_TAP touch event object." version=""/>
               <string helpurl="flash.events:PressAndTapGestureEvent:tapLocalX:get" name="tapLocalX" object="[flash.events.PressAndTapGestureEvent]" playername="" text=".tapLocalX" tiptext="The horizontal coordinate at which the event occurred relative to the containing interactive object." version=""/>
               <string helpurl="flash.events:PressAndTapGestureEvent:tapLocalY:get" name="tapLocalY" object="[flash.events.PressAndTapGestureEvent]" playername="" text=".tapLocalY" tiptext="The vertical coordinate at which the event occurred relative to the containing interactive object." version=""/>
               <string helpurl="flash.events:PressAndTapGestureEvent:tapStageX:get" name="tapStageX" object="[flash.events.PressAndTapGestureEvent]" playername="" text=".tapStageX" tiptext="The horizontal coordinate at which the tap touch occurred in global Stage coordinates." version=""/>
               <string helpurl="flash.events:PressAndTapGestureEvent:tapStageY:get" name="tapStageY" object="[flash.events.PressAndTapGestureEvent]" playername="" text=".tapStageY" tiptext="The vertical coordinate at which the tap touch occurred in global Stage coordinates." version=""/>
            </folder>
         </folder>
         <folder asAncestors="flash.events:Event,Object" helpurl="flash.events:ProgressEvent" id="[flash.events.ProgressEvent]" index="true" name="ProgressEvent" sort="true" tiptext="A ProgressEvent object is dispatched when a load operation has begun or a socket has received data.">
            <folder helpurl="flash.events:ProgressEvent" id="Methods" name="Methods" tiptext="Methods for class ProgressEvent">
               <string constructor="true" helpurl="flash.events:ProgressEvent:ProgressEvent" name="ProgressEvent" object="[flash.events.ProgressEvent]" playername="" text="new ProgressEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,bytesLoaded:Number=0,bytesTotal:Number=0]%)" tiptext="Constructor for ProgressEvent objects." version="4"/>
               <string helpurl="flash.events:ProgressEvent:clone" name="clone" object="[flash.events.ProgressEvent]" playername="" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of the ProgressEvent object and sets each property's value to match that of the original." version="4"/>
               <string helpurl="flash.events:ProgressEvent:toString" name="toString" object="[flash.events.ProgressEvent]" playername="" text=".toString(%%):String" tiptext="Returns a string that contains all the properties of the ProgressEvent object." version="4"/>
            </folder>
            <folder helpurl="flash.events:ProgressEvent" id="Properties" name="Properties" tiptext="Properties for class ProgressEvent">
               <string constant="true" helpurl="flash.events:ProgressEvent:PROGRESS" name="PROGRESS" object="[flash.events.ProgressEvent]" playername="" text="ProgressEvent.PROGRESS" tiptext="Defines the value of the type property of a progress event object." version=""/>
               <string constant="true" helpurl="flash.events:ProgressEvent:SOCKET_DATA" name="SOCKET_DATA" object="[flash.events.ProgressEvent]" playername="" text="ProgressEvent.SOCKET_DATA" tiptext="Defines the value of the type property of a socketData event object." version=""/>
               <string constant="true" helpurl="flash.events:ProgressEvent:STANDARD_ERROR_DATA" name="STANDARD_ERROR_DATA" object="[flash.events.ProgressEvent]" playername="" text="ProgressEvent.STANDARD_ERROR_DATA" tiptext="Defines the value of the type property of a standardErrorData event object." version=""/>
               <string constant="true" helpurl="flash.events:ProgressEvent:STANDARD_INPUT_PROGRESS" name="STANDARD_INPUT_PROGRESS" object="[flash.events.ProgressEvent]" playername="" text="ProgressEvent.STANDARD_INPUT_PROGRESS" tiptext="Defines the value of the type property of a standardInputProgress event object." version=""/>
               <string constant="true" helpurl="flash.events:ProgressEvent:STANDARD_OUTPUT_DATA" name="STANDARD_OUTPUT_DATA" object="[flash.events.ProgressEvent]" playername="" text="ProgressEvent.STANDARD_OUTPUT_DATA" tiptext="Defines the value of the type property of a standardOutputData event object." version=""/>
               <string helpurl="flash.events:ProgressEvent:bytesLoaded:get" name="bytesLoaded" object="[flash.events.ProgressEvent]" playername="" text=".bytesLoaded" tiptext="The number of items or bytes loaded when the listener processes the event." version=""/>
               <string helpurl="flash.events:ProgressEvent:bytesTotal:get" name="bytesTotal" object="[flash.events.ProgressEvent]" playername="" text=".bytesTotal" tiptext="The total number of items or bytes that will be loaded if the loading process succeeds." version=""/>
            </folder>
         </folder>
         <folder asAncestors="flash.events:ErrorEvent,flash.events:TextEvent,flash.events:Event,Object" helpurl="flash.events:SecurityErrorEvent" id="[flash.events.SecurityErrorEvent]" index="true" name="SecurityErrorEvent" sort="true" tiptext="An object dispatches a SecurityErrorEvent object to report the occurrence of a security error.">
            <folder helpurl="flash.events:SecurityErrorEvent" id="Methods" name="Methods" tiptext="Methods for class SecurityErrorEvent">
               <string constructor="true" helpurl="flash.events:SecurityErrorEvent:SecurityErrorEvent" name="SecurityErrorEvent" object="[flash.events.SecurityErrorEvent]" playername="" text="new SecurityErrorEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,text:String,id:int=0]%)" tiptext="Constructor for SecurityErrorEvent objects." version="4"/>
               <string helpurl="flash.events:SecurityErrorEvent:clone" name="clone" object="[flash.events.SecurityErrorEvent]" playername="" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of the SecurityErrorEvent object and sets the value of each property to match that of the original." version="4"/>
               <string helpurl="flash.events:SecurityErrorEvent:toString" name="toString" object="[flash.events.SecurityErrorEvent]" playername="" text=".toString(%%):String" tiptext="Returns a string that contains all the properties of the SecurityErrorEvent object." version="4"/>
            </folder>
            <folder helpurl="flash.events:SecurityErrorEvent" id="Properties" name="Properties" tiptext="Properties for class SecurityErrorEvent">
               <string constant="true" helpurl="flash.events:SecurityErrorEvent:SECURITY_ERROR" name="SECURITY_ERROR" object="[flash.events.SecurityErrorEvent]" playername="" text="SecurityErrorEvent.SECURITY_ERROR" tiptext="The SecurityErrorEvent.SECURITY_ERROR constant defines the value of the type property of a securityError event object." version=""/>
            </folder>
         </folder>
         <folder asAncestors="flash.events:Event,Object" helpurl="flash.events:StatusEvent" id="[flash.events.StatusEvent]" index="true" name="StatusEvent" sort="true" tiptext="An object dispatches a StatusEvent object when a device, such as a camera or microphone, or an object such as a LocalConnection object reports its status.">
            <folder helpurl="flash.events:StatusEvent" id="Methods" name="Methods" tiptext="Methods for class StatusEvent">
               <string constructor="true" helpurl="flash.events:StatusEvent:StatusEvent" name="StatusEvent" object="[flash.events.StatusEvent]" playername="" text="new StatusEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,code:String,level:String]%)" tiptext="Constructor for StatusEvent objects." version="4"/>
               <string helpurl="flash.events:StatusEvent:clone" name="clone" object="[flash.events.StatusEvent]" playername="" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of the StatusEvent object and sets the value of each property to match that of the original." version="4"/>
               <string helpurl="flash.events:StatusEvent:toString" name="toString" object="[flash.events.StatusEvent]" playername="" text=".toString(%%):String" tiptext="Returns a string that contains all the properties of the StatusEvent object." version="4"/>
            </folder>
            <folder helpurl="flash.events:StatusEvent" id="Properties" name="Properties" tiptext="Properties for class StatusEvent">
               <string constant="true" helpurl="flash.events:StatusEvent:STATUS" name="STATUS" object="[flash.events.StatusEvent]" playername="" text="StatusEvent.STATUS" tiptext="Defines the value of the type property of a status event object." version=""/>
               <string helpurl="flash.events:StatusEvent:code:get" name="code" object="[flash.events.StatusEvent]" playername="" text=".code" tiptext="A description of the object's status." version=""/>
               <string helpurl="flash.events:StatusEvent:level:get" name="level" object="[flash.events.StatusEvent]" playername="" text=".level" tiptext="The category of the message, such as &quot;status&quot;, &quot;warning&quot; or &quot;error&quot;." version=""/>
            </folder>
         </folder>
         <folder asAncestors="flash.events:Event,Object" helpurl="flash.events:SyncEvent" id="[flash.events.SyncEvent]" index="true" name="SyncEvent" sort="true" tiptext="An SharedObject object representing a remote shared object dispatches a SyncEvent object when the remote shared object has been updated by the server.">
            <folder helpurl="flash.events:SyncEvent" id="Methods" name="Methods" tiptext="Methods for class SyncEvent">
               <string constructor="true" helpurl="flash.events:SyncEvent:SyncEvent" name="SyncEvent" object="[flash.events.SyncEvent]" playername="" text="new SyncEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,changeList:Array=null]%)" tiptext="Constructor for SyncEvent objects." version="4"/>
               <string helpurl="flash.events:SyncEvent:clone" name="clone" object="[flash.events.SyncEvent]" playername="" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of the SyncEvent object and sets the value of each property to match that of the original." version="4"/>
               <string helpurl="flash.events:SyncEvent:toString" name="toString" object="[flash.events.SyncEvent]" playername="" text=".toString(%%):String" tiptext="Returns a string that contains all the properties of the SyncEvent object." version="4"/>
            </folder>
            <folder helpurl="flash.events:SyncEvent" id="Properties" name="Properties" tiptext="Properties for class SyncEvent">
               <string constant="true" helpurl="flash.events:SyncEvent:SYNC" name="SYNC" object="[flash.events.SyncEvent]" playername="" text="SyncEvent.SYNC" tiptext="Defines the value of the type property of a sync event object." version=""/>
               <string helpurl="flash.events:SyncEvent:changeList:get" name="changeList" object="[flash.events.SyncEvent]" playername="" text=".changeList" tiptext="An array of objects; each object contains properties that describe the changed members of a remote shared object." version=""/>
            </folder>
         </folder>
         <folder asAncestors="flash.events:Event,Object" helpurl="flash.events:TextEvent" id="[flash.events.TextEvent]" index="true" name="TextEvent" sort="true" tiptext="An object dispatches a TextEvent object when a user enters text in a text field or clicks a hyperlink in an HTML-enabled text field.">
            <folder helpurl="flash.events:TextEvent" id="Methods" name="Methods" tiptext="Methods for class TextEvent">
               <string constructor="true" helpurl="flash.events:TextEvent:TextEvent" name="TextEvent" object="[flash.events.TextEvent]" playername="" text="new TextEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,text:String]%)" tiptext="Constructor for TextEvent objects." version="4"/>
               <string helpurl="flash.events:TextEvent:clone" name="clone" object="[flash.events.TextEvent]" playername="" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of the TextEvent object and sets the value of each property to match that of the original." version="4"/>
               <string helpurl="flash.events:TextEvent:toString" name="toString" object="[flash.events.TextEvent]" playername="" text=".toString(%%):String" tiptext="Returns a string that contains all the properties of the TextEvent object." version="4"/>
            </folder>
            <folder helpurl="flash.events:TextEvent" id="Properties" name="Properties" tiptext="Properties for class TextEvent">
               <string constant="true" helpurl="flash.events:TextEvent:LINK" name="LINK" object="[flash.events.TextEvent]" playername="" text="TextEvent.LINK" tiptext="Defines the value of the type property of a link event object." version=""/>
               <string constant="true" helpurl="flash.events:TextEvent:TEXT_INPUT" name="TEXT_INPUT" object="[flash.events.TextEvent]" playername="" text="TextEvent.TEXT_INPUT" tiptext="Defines the value of the type property of a textInput event object." version=""/>
               <string helpurl="flash.events:TextEvent:text:get" name="text" object="[flash.events.TextEvent]" playername="" text=".text" tiptext="For a textInput event, the character or sequence of characters entered by the user." version=""/>
            </folder>
         </folder>
         <folder asAncestors="flash.events:Event,Object" helpurl="flash.events:TimerEvent" id="[flash.events.TimerEvent]" index="true" name="TimerEvent" sort="true" tiptext="A Timer object dispatches a TimerEvent objects whenever the Timer object reaches the interval specified by the Timer.delay property.">
            <folder helpurl="flash.events:TimerEvent" id="Methods" name="Methods" tiptext="Methods for class TimerEvent">
               <string constructor="true" helpurl="flash.events:TimerEvent:TimerEvent" name="TimerEvent" object="[flash.events.TimerEvent]" playername="" text="new TimerEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false]%)" tiptext="Constructor for TimerEvent objects." version="4"/>
               <string helpurl="flash.events:TimerEvent:clone" name="clone" object="[flash.events.TimerEvent]" playername="" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of the TimerEvent object and sets each property's value to match that of the original." version="4"/>
               <string helpurl="flash.events:TimerEvent:toString" name="toString" object="[flash.events.TimerEvent]" playername="" text=".toString(%%):String" tiptext="Returns a string that contains all the properties of the TimerEvent object." version="4"/>
               <string helpurl="flash.events:TimerEvent:updateAfterEvent" name="updateAfterEvent" object="[flash.events.TimerEvent]" playername="" text=".updateAfterEvent(%%):void" tiptext="Instructs Flash Player or the AIR runtime to render after processing of this event completes, if the display list has been modified." version="4"/>
            </folder>
            <folder helpurl="flash.events:TimerEvent" id="Properties" name="Properties" tiptext="Properties for class TimerEvent">
               <string constant="true" helpurl="flash.events:TimerEvent:TIMER_COMPLETE" name="TIMER_COMPLETE" object="[flash.events.TimerEvent]" playername="" text="TimerEvent.TIMER_COMPLETE" tiptext="Defines the value of the type property of a timerComplete event object." version=""/>
               <string constant="true" helpurl="flash.events:TimerEvent:TIMER" name="TIMER" object="[flash.events.TimerEvent]" playername="" text="TimerEvent.TIMER" tiptext="Defines the value of the type property of a timer event object." version=""/>
            </folder>
         </folder>
         <folder asAncestors="flash.events:Event,Object" helpurl="flash.events:TouchEvent" id="[flash.events.TouchEvent]" index="true" name="TouchEvent" sort="true" tiptext="The TouchEvent class lets you handle events on devices that detect user contact with the device (such as a finger on a touch screen).">
            <folder helpurl="flash.events:TouchEvent" id="Methods" name="Methods" tiptext="Methods for class TouchEvent">
               <string constructor="true" helpurl="flash.events:TouchEvent:TouchEvent" name="TouchEvent" object="[flash.events.TouchEvent]" playername="" text="new TouchEvent(%type:String[,bubbles:Boolean=true,cancelable:Boolean=false,touchPointID:int=0,isPrimaryTouchPoint:Boolean=false,localX:Number=unknown,localY:Number=unknown,sizeX:Number=unknown,sizeY:Number=unknown,pressure:Number=unknown,relatedObject:flash.display:InteractiveObject=null,ctrlKey:Boolean=false,altKey:Boolean=false,shiftKey:Boolean=false,commandKey:Boolean=false,controlKey:Boolean=false]%)" tiptext="Constructor for TouchEvent objects." version="4"/>
               <string helpurl="flash.events:TouchEvent:clone" name="clone" object="[flash.events.TouchEvent]" playername="" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of the TouchEvent object and sets the value of each property to match that of the original." version="4"/>
               <string helpurl="flash.events:TouchEvent:toString" name="toString" object="[flash.events.TouchEvent]" playername="" text=".toString(%%):String" tiptext="Returns a string that contains all the properties of the TouchEvent object." version="4"/>
               <string helpurl="flash.events:TouchEvent:updateAfterEvent" name="updateAfterEvent" object="[flash.events.TouchEvent]" playername="" text=".updateAfterEvent(%%):void" tiptext="Instructs Flash Player or Adobe AIR to render after processing of this event completes, if the display list has been modified." version="4"/>
            </folder>
            <folder helpurl="flash.events:TouchEvent" id="Properties" name="Properties" tiptext="Properties for class TouchEvent">
               <string constant="true" helpurl="flash.events:TouchEvent:TOUCH_BEGIN" name="TOUCH_BEGIN" object="[flash.events.TouchEvent]" playername="" text="TouchEvent.TOUCH_BEGIN" tiptext="Defines the value of the type property of a TOUCH_BEGIN touch event object." version=""/>
               <string constant="true" helpurl="flash.events:TouchEvent:TOUCH_END" name="TOUCH_END" object="[flash.events.TouchEvent]" playername="" text="TouchEvent.TOUCH_END" tiptext="Defines the value of the type property of a TOUCH_END touch event object." version=""/>
               <string constant="true" helpurl="flash.events:TouchEvent:TOUCH_MOVE" name="TOUCH_MOVE" object="[flash.events.TouchEvent]" playername="" text="TouchEvent.TOUCH_MOVE" tiptext="Defines the value of the type property of a TOUCH_MOVE touch event object." version=""/>
               <string constant="true" helpurl="flash.events:TouchEvent:TOUCH_OUT" name="TOUCH_OUT" object="[flash.events.TouchEvent]" playername="" text="TouchEvent.TOUCH_OUT" tiptext="Defines the value of the type property of a TOUCH_OUT touch event object." version=""/>
               <string constant="true" helpurl="flash.events:TouchEvent:TOUCH_OVER" name="TOUCH_OVER" object="[flash.events.TouchEvent]" playername="" text="TouchEvent.TOUCH_OVER" tiptext="Defines the value of the type property of a TOUCH_OVER touch event object." version=""/>
               <string constant="true" helpurl="flash.events:TouchEvent:TOUCH_ROLL_OUT" name="TOUCH_ROLL_OUT" object="[flash.events.TouchEvent]" playername="" text="TouchEvent.TOUCH_ROLL_OUT" tiptext="Defines the value of the type property of a TOUCH_ROLL_OUT touch event object." version=""/>
               <string constant="true" helpurl="flash.events:TouchEvent:TOUCH_ROLL_OVER" name="TOUCH_ROLL_OVER" object="[flash.events.TouchEvent]" playername="" text="TouchEvent.TOUCH_ROLL_OVER" tiptext="Defines the value of the type property of a TOUCH_ROLL_OVER touch event object." version=""/>
               <string constant="true" helpurl="flash.events:TouchEvent:TOUCH_TAP" name="TOUCH_TAP" object="[flash.events.TouchEvent]" playername="" text="TouchEvent.TOUCH_TAP" tiptext="Defines the value of the type property of a TOUCH_TAP touch event object." version=""/>
               <string helpurl="flash.events:TouchEvent:altKey:get" name="altKey" object="[flash.events.TouchEvent]" playername="" text=".altKey" tiptext="Indicates whether the Alt key is active (true) or inactive (false)." version=""/>
               <string helpurl="flash.events:TouchEvent:commandKey:get" name="commandKey" object="[flash.events.TouchEvent]" playername="" text=".commandKey" tiptext="Indicates whether the command key is activated (Mac only)." version=""/>
               <string helpurl="flash.events:TouchEvent:controlKey:get" name="controlKey" object="[flash.events.TouchEvent]" playername="" text=".controlKey" tiptext="Indicates whether the Control key is activated on Mac and whether the Ctrl key is activated on Windows or Linux." version=""/>
               <string helpurl="flash.events:TouchEvent:ctrlKey:get" name="ctrlKey" object="[flash.events.TouchEvent]" playername="" text=".ctrlKey" tiptext="On Windows or Linux, indicates whether the Ctrl key is active (true) or inactive (false)." version=""/>
               <string helpurl="flash.events:TouchEvent:isPrimaryTouchPoint:get" name="isPrimaryTouchPoint" object="[flash.events.TouchEvent]" playername="" text=".isPrimaryTouchPoint" tiptext="Indicates whether the first point of contact is mapped to mouse events." version=""/>
               <string helpurl="flash.events:TouchEvent:isRelatedObjectInaccessible:get" name="isRelatedObjectInaccessible" object="[flash.events.TouchEvent]" playername="" text=".isRelatedObjectInaccessible" tiptext="If true, the relatedObject property is set to null for reasons related to security sandboxes." version=""/>
               <string helpurl="flash.events:TouchEvent:localX:get" name="localX" object="[flash.events.TouchEvent]" playername="" text=".localX" tiptext="The horizontal coordinate at which the event occurred relative to the containing sprite." version=""/>
               <string helpurl="flash.events:TouchEvent:localY:get" name="localY" object="[flash.events.TouchEvent]" playername="" text=".localY" tiptext="The vertical coordinate at which the event occurred relative to the containing sprite." version=""/>
               <string helpurl="flash.events:TouchEvent:pressure:get" name="pressure" object="[flash.events.TouchEvent]" playername="" text=".pressure" tiptext="A value between 0.0 and 1.0 indicating force of the contact with the device." version=""/>
               <string helpurl="flash.events:TouchEvent:relatedObject:get" name="relatedObject" object="[flash.events.TouchEvent]" playername="" text=".relatedObject" tiptext="A reference to a display list object that is related to the event." version=""/>
               <string helpurl="flash.events:TouchEvent:shiftKey:get" name="shiftKey" object="[flash.events.TouchEvent]" playername="" text=".shiftKey" tiptext="Indicates whether the Shift key is active (true) or inactive (false)." version=""/>
               <string helpurl="flash.events:TouchEvent:sizeX:get" name="sizeX" object="[flash.events.TouchEvent]" playername="" text=".sizeX" tiptext="Width of the contact area." version=""/>
               <string helpurl="flash.events:TouchEvent:sizeY:get" name="sizeY" object="[flash.events.TouchEvent]" playername="" text=".sizeY" tiptext="Height of the contact area." version=""/>
               <string helpurl="flash.events:TouchEvent:stageX:get" name="stageX" object="[flash.events.TouchEvent]" playername="" text=".stageX" tiptext="The horizontal coordinate at which the event occurred in global Stage coordinates." version=""/>
               <string helpurl="flash.events:TouchEvent:stageY:get" name="stageY" object="[flash.events.TouchEvent]" playername="" text=".stageY" tiptext="The vertical coordinate at which the event occurred in global Stage coordinates." version=""/>
               <string helpurl="flash.events:TouchEvent:touchPointID:get" name="touchPointID" object="[flash.events.TouchEvent]" playername="" text=".touchPointID" tiptext="A unique identification number (as an int) assigned to the touch point." version=""/>
            </folder>
         </folder>
         <folder asAncestors="flash.events:GestureEvent,flash.events:Event,Object" helpurl="flash.events:TransformGestureEvent" id="[flash.events.TransformGestureEvent]" index="true" name="TransformGestureEvent" sort="true" tiptext="The TransformGestureEvent class lets you handle multi-touch movement events on devices that detect complex user contact with the device (such as moving fingers across a touch screen).">
            <folder helpurl="flash.events:TransformGestureEvent" id="Methods" name="Methods" tiptext="Methods for class TransformGestureEvent">
               <string constructor="true" helpurl="flash.events:TransformGestureEvent:TransformGestureEvent" name="TransformGestureEvent" object="[flash.events.TransformGestureEvent]" playername="" text="new TransformGestureEvent(%type:String[,bubbles:Boolean=true,cancelable:Boolean=false,phase:String=null,localX:Number=0,localY:Number=0,scaleX:Number=1.0,scaleY:Number=1.0,rotation:Number=0,offsetX:Number=0,offsetY:Number=0,ctrlKey:Boolean=false,altKey:Boolean=false,shiftKey:Boolean=false,commandKey:Boolean=false,controlKey:Boolean=false]%)" tiptext="Constructor for TransformGestureEvent objects." version="4"/>
               <string helpurl="flash.events:TransformGestureEvent:clone" name="clone" object="[flash.events.TransformGestureEvent]" playername="" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of the TransformGestureEvent object and sets the value of each property to match that of the original." version="4"/>
               <string helpurl="flash.events:TransformGestureEvent:toString" name="toString" object="[flash.events.TransformGestureEvent]" playername="" text=".toString(%%):String" tiptext="Returns a string that contains all the properties of the TransformGestureEvent object." version="4"/>
            </folder>
            <folder helpurl="flash.events:TransformGestureEvent" id="Properties" name="Properties" tiptext="Properties for class TransformGestureEvent">
               <string constant="true" helpurl="flash.events:TransformGestureEvent:GESTURE_PAN" name="GESTURE_PAN" object="[flash.events.TransformGestureEvent]" playername="" text="TransformGestureEvent.GESTURE_PAN" tiptext="Defines the value of the type property of a GESTURE_PAN touch event object." version=""/>
               <string constant="true" helpurl="flash.events:TransformGestureEvent:GESTURE_ROTATE" name="GESTURE_ROTATE" object="[flash.events.TransformGestureEvent]" playername="" text="TransformGestureEvent.GESTURE_ROTATE" tiptext="Defines the value of the type property of a GESTURE_ROTATE touch event object." version=""/>
               <string constant="true" helpurl="flash.events:TransformGestureEvent:GESTURE_SWIPE" name="GESTURE_SWIPE" object="[flash.events.TransformGestureEvent]" playername="" text="TransformGestureEvent.GESTURE_SWIPE" tiptext="Defines the value of the type property of a GESTURE_SWIPE touch event object." version=""/>
               <string constant="true" helpurl="flash.events:TransformGestureEvent:GESTURE_ZOOM" name="GESTURE_ZOOM" object="[flash.events.TransformGestureEvent]" playername="" text="TransformGestureEvent.GESTURE_ZOOM" tiptext="Defines the value of the type property of a GESTURE_ZOOM touch event object." version=""/>
               <string helpurl="flash.events:TransformGestureEvent:offsetX:get" name="offsetX" object="[flash.events.TransformGestureEvent]" playername="" text=".offsetX" tiptext="The horizontal translation of the display object, since the previous gesture event." version=""/>
               <string helpurl="flash.events:TransformGestureEvent:offsetY:get" name="offsetY" object="[flash.events.TransformGestureEvent]" playername="" text=".offsetY" tiptext="The vertical translation of the display object, since the previous gesture event." version=""/>
               <string helpurl="flash.events:TransformGestureEvent:rotation:get" name="rotation" object="[flash.events.TransformGestureEvent]" playername="" text=".rotation" tiptext="The current rotation angle, in degrees, of the display object along the z-axis, since the previous gesture event." version=""/>
               <string helpurl="flash.events:TransformGestureEvent:scaleX:get" name="scaleX" object="[flash.events.TransformGestureEvent]" playername="" text=".scaleX" tiptext="The horizontal scale of the display object, since the previous gesture event." version=""/>
               <string helpurl="flash.events:TransformGestureEvent:scaleY:get" name="scaleY" object="[flash.events.TransformGestureEvent]" playername="" text=".scaleY" tiptext="The vertical scale of the display object, since the previous gesture event." version=""/>
            </folder>
         </folder>
      </folder>
      <folder helpurl="flash.external" id="flash.external" name="flash.external" sort="true" tiptext="Classes for package flash.external">
         <folder asAncestors="Object" helpurl="flash.external:ExternalInterface" id="[flash.external.ExternalInterface]" index="true" name="ExternalInterface" sort="true" tiptext="The ExternalInterface class is an application programming interface that enables straightforward communication between ActionScript and the SWF container&amp;#8211; for example, an HTML page with JavaScript or a desktop application that uses Flash Player to display a SWF file.">
            <folder helpurl="flash.external:ExternalInterface" id="Methods" name="Methods" tiptext="Methods for class ExternalInterface">
               <string helpurl="flash.external:ExternalInterface:addCallback" name="addCallback" object="[flash.external.ExternalInterface]" playername="" static="true" text="ExternalInterface.addCallback(%functionName:String,closure:Function%):void" tiptext="Registers an ActionScript method as callable from the container." version="4"/>
               <string helpurl="flash.external:ExternalInterface:call" name="call" object="[flash.external.ExternalInterface]" playername="" static="true" text="ExternalInterface.call(%functionName:String,arguments:restParam%)" tiptext="Calls a function in the container." version="4"/>
            </folder>
            <folder helpurl="flash.external:ExternalInterface" id="Properties" name="Properties" tiptext="Properties for class ExternalInterface">
               <string helpurl="flash.external:ExternalInterface:marshallExceptions" name="marshallExceptions" object="[flash.external.ExternalInterface]" playername="" text=".marshallExceptions" tiptext="Indicates whether the external interface should attempt to pass ActionScript exceptions to the current browser and JavaScript exceptions to the player." version=""/>
               <string helpurl="flash.external:ExternalInterface:available:get" name="available" object="[flash.external.ExternalInterface]" playername="" text=".available" tiptext="Indicates whether this player is in a container that offers an external interface." version=""/>
               <string helpurl="flash.external:ExternalInterface:objectID:get" name="objectID" object="[flash.external.ExternalInterface]" playername="" text=".objectID" tiptext="Returns the id attribute of the object tag in Internet Explorer, or the name attribute of the embed tag in Netscape." version=""/>
            </folder>
         </folder>
      </folder>
      <folder helpurl="flash.geom" id="flash.geom" name="flash.geom" sort="true" tiptext="Classes for package flash.geom">
         <folder asAncestors="Object" helpurl="flash.geom:ColorTransform" id="[flash.geom.ColorTransform]" index="true" name="ColorTransform" sort="true" tiptext="The ColorTransform class lets you adjust the color values in a display object.">
            <folder helpurl="flash.geom:ColorTransform" id="Methods" name="Methods" tiptext="Methods for class ColorTransform">
               <string constructor="true" helpurl="flash.geom:ColorTransform:ColorTransform" name="ColorTransform" object="[flash.geom.ColorTransform]" playername="" text="new ColorTransform(%[redMultiplier:Number=1.0,greenMultiplier:Number=1.0,blueMultiplier:Number=1.0,alphaMultiplier:Number=1.0,redOffset:Number=0,greenOffset:Number=0,blueOffset:Number=0,alphaOffset:Number=0]%)" tiptext="Creates a ColorTransform object for a display object." version="4"/>
               <string helpurl="flash.geom:ColorTransform:concat" name="concat" object="[flash.geom.ColorTransform]" playername="" text=".concat(%second:flash.geom:ColorTransform%):void" tiptext="Concatenates the ColorTranform object specified by the second parameter with the current ColorTransform object and sets the current object as the result, which is an additive combination of the two color transformations." version="4"/>
               <string helpurl="flash.geom:ColorTransform:toString" name="toString" object="[flash.geom.ColorTransform]" playername="" text=".toString(%%):String" tiptext="Formats and returns a string that describes all of the properties of the ColorTransform object." version="4"/>
            </folder>
            <folder helpurl="flash.geom:ColorTransform" id="Properties" name="Properties" tiptext="Properties for class ColorTransform">
               <string helpurl="flash.geom:ColorTransform:alphaMultiplier" name="alphaMultiplier" object="[flash.geom.ColorTransform]" playername="" text=".alphaMultiplier" tiptext="A decimal value that is multiplied with the alpha transparency channel value." version=""/>
               <string helpurl="flash.geom:ColorTransform:alphaOffset" name="alphaOffset" object="[flash.geom.ColorTransform]" playername="" text=".alphaOffset" tiptext="A number from -255 to 255 that is added to the alpha transparency channel value after it has been multiplied by the alphaMultiplier value." version=""/>
               <string helpurl="flash.geom:ColorTransform:blueMultiplier" name="blueMultiplier" object="[flash.geom.ColorTransform]" playername="" text=".blueMultiplier" tiptext="A decimal value that is multiplied with the blue channel value." version=""/>
               <string helpurl="flash.geom:ColorTransform:blueOffset" name="blueOffset" object="[flash.geom.ColorTransform]" playername="" text=".blueOffset" tiptext="A number from -255 to 255 that is added to the blue channel value after it has been multiplied by the blueMultiplier value." version=""/>
               <string helpurl="flash.geom:ColorTransform:greenMultiplier" name="greenMultiplier" object="[flash.geom.ColorTransform]" playername="" text=".greenMultiplier" tiptext="A decimal value that is multiplied with the green channel value." version=""/>
               <string helpurl="flash.geom:ColorTransform:greenOffset" name="greenOffset" object="[flash.geom.ColorTransform]" playername="" text=".greenOffset" tiptext="A number from -255 to 255 that is added to the green channel value after it has been multiplied by the greenMultiplier value." version=""/>
               <string helpurl="flash.geom:ColorTransform:redMultiplier" name="redMultiplier" object="[flash.geom.ColorTransform]" playername="" text=".redMultiplier" tiptext="A decimal value that is multiplied with the red channel value." version=""/>
               <string helpurl="flash.geom:ColorTransform:redOffset" name="redOffset" object="[flash.geom.ColorTransform]" playername="" text=".redOffset" tiptext="A number from -255 to 255 that is added to the red channel value after it has been multiplied by the redMultiplier value." version=""/>
               <string helpurl="flash.geom:ColorTransform:color:get" name="color" object="[flash.geom.ColorTransform]" playername="" text=".color" tiptext="The RGB color value for a ColorTransform object." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="flash.geom:Matrix" id="[flash.geom.Matrix]" index="true" name="Matrix" sort="true" tiptext="The Matrix class represents a transformation matrix that determines how to map points from one coordinate space to another.">
            <folder helpurl="flash.geom:Matrix" id="Methods" name="Methods" tiptext="Methods for class Matrix">
               <string constructor="true" helpurl="flash.geom:Matrix:Matrix" name="Matrix" object="[flash.geom.Matrix]" playername="" text="new Matrix(%[a:Number=1,b:Number=0,c:Number=0,d:Number=1,tx:Number=0,ty:Number=0]%)" tiptext="Creates a new two-dimensional Matrix object." version="4"/>
               <string helpurl="flash.geom:Matrix:clone" name="clone" object="[flash.geom.Matrix]" playername="" text=".clone(%%):flash.geom:Matrix" tiptext="Returns a new Matrix object that is a copy of the current matrix." version="4"/>
               <string helpurl="flash.geom:Matrix:concat" name="concat" object="[flash.geom.Matrix]" playername="" text=".concat(%m:flash.geom:Matrix%):void" tiptext="Concatenates a matrix with the current matrix, effectively combining the geometric effects of the two." version="4"/>
               <string helpurl="flash.geom:Matrix:createBox" name="createBox" object="[flash.geom.Matrix]" playername="" text=".createBox(%scaleX:Number,scaleY:Number[,rotation:Number=0,tx:Number=0,ty:Number=0]%):void" tiptext="Creates a Matrix with scaling, rotation, and translation values." version="4"/>
               <string helpurl="flash.geom:Matrix:createGradientBox" name="createGradientBox" object="[flash.geom.Matrix]" playername="" text=".createGradientBox(%width:Number,height:Number[,rotation:Number=0,tx:Number=0,ty:Number=0]%):void" tiptext="Creates the specific style of matrix expected by the beginGradientFill() method of the Graphics class." version="4"/>
               <string helpurl="flash.geom:Matrix:deltaTransformPoint" name="deltaTransformPoint" object="[flash.geom.Matrix]" playername="" text=".deltaTransformPoint(%point:flash.geom:Point%):flash.geom:Point" tiptext="Given a point in the pretransform coordinate space, returns the coordinates of that point after the transformation occurs." version="4"/>
               <string helpurl="flash.geom:Matrix:identity" name="identity" object="[flash.geom.Matrix]" playername="" text=".identity(%%):void" tiptext="Sets each matrix property to a value that causes a null transformation." version="4"/>
               <string helpurl="flash.geom:Matrix:invert" name="invert" object="[flash.geom.Matrix]" playername="" text=".invert(%%):void" tiptext="Performs the opposite transformation of the original matrix." version="4"/>
               <string helpurl="flash.geom:Matrix:rotate" name="rotate" object="[flash.geom.Matrix]" playername="" text=".rotate(%angle:Number%):void" tiptext="Applies a rotation transformation to the Matrix object." version="4"/>
               <string helpurl="flash.geom:Matrix:scale" name="scale" object="[flash.geom.Matrix]" playername="" text=".scale(%sx:Number,sy:Number%):void" tiptext="Applies a scaling transformation to the matrix." version="4"/>
               <string helpurl="flash.geom:Matrix:toString" name="toString" object="[flash.geom.Matrix]" playername="" text=".toString(%%):String" tiptext="Returns a text value listing the properties of this Matrix object." version="4"/>
               <string helpurl="flash.geom:Matrix:transformPoint" name="transformPoint" object="[flash.geom.Matrix]" playername="" text=".transformPoint(%point:flash.geom:Point%):flash.geom:Point" tiptext="Returns the result of a geometric transformation to a Point object." version="4"/>
               <string helpurl="flash.geom:Matrix:translate" name="translate" object="[flash.geom.Matrix]" playername="" text=".translate(%dx:Number,dy:Number%):void" tiptext="Translates the matrix along the x and y axes." version="4"/>
            </folder>
            <folder helpurl="flash.geom:Matrix" id="Properties" name="Properties" tiptext="Properties for class Matrix">
               <string helpurl="flash.geom:Matrix:a" name="a" object="[flash.geom.Matrix]" playername="" text=".a" tiptext="The value that affects the positioning of pixels along the x axis when scaling or rotating an image." version=""/>
               <string helpurl="flash.geom:Matrix:b" name="b" object="[flash.geom.Matrix]" playername="" text=".b" tiptext="The value that affects the positioning of pixels along the y axis when rotating or skewing an image." version=""/>
               <string helpurl="flash.geom:Matrix:c" name="c" object="[flash.geom.Matrix]" playername="" text=".c" tiptext="The value that affects the positioning of pixels along the x axis when rotating or skewing an image." version=""/>
               <string helpurl="flash.geom:Matrix:d" name="d" object="[flash.geom.Matrix]" playername="" text=".d" tiptext="The value that affects the positioning of pixels along the y axis when scaling or rotating an image." version=""/>
               <string helpurl="flash.geom:Matrix:tx" name="tx" object="[flash.geom.Matrix]" playername="" text=".tx" tiptext="The distance by which to translate each point along the x axis." version=""/>
               <string helpurl="flash.geom:Matrix:ty" name="ty" object="[flash.geom.Matrix]" playername="" text=".ty" tiptext="The distance by which to translate each point along the y axis." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="flash.geom:Point" id="[flash.geom.Point]" index="true" name="Point" sort="true" tiptext="The Point object represents a location in a two-dimensional coordinate system, where x represents the horizontal axis and y represents the vertical axis.">
            <folder helpurl="flash.geom:Point" id="Methods" name="Methods" tiptext="Methods for class Point">
               <string constructor="true" helpurl="flash.geom:Point:Point" name="Point" object="[flash.geom.Point]" playername="" text="new Point(%[x:Number=0,y:Number=0]%)" tiptext="Creates a new point." version="4"/>
               <string helpurl="flash.geom:Point:add" name="add" object="[flash.geom.Point]" playername="" text=".add(%v:flash.geom:Point%):flash.geom:Point" tiptext="Adds the coordinates of another point to the coordinates of this point to create a new point." version="4"/>
               <string helpurl="flash.geom:Point:clone" name="clone" object="[flash.geom.Point]" playername="" text=".clone(%%):flash.geom:Point" tiptext="Creates a copy of the Point object." version="4"/>
               <string helpurl="flash.geom:Point:distance" name="distance" object="[flash.geom.Point]" playername="" static="true" text="Point.distance(%pt1:flash.geom:Point,pt2:flash.geom:Point%):Number" tiptext="Returns the distance between pt1 and pt2." version="4"/>
               <string helpurl="flash.geom:Point:equals" name="equals" object="[flash.geom.Point]" playername="" text=".equals(%toCompare:flash.geom:Point%):Boolean" tiptext="Determines whether two points are equal." version="4"/>
               <string helpurl="flash.geom:Point:interpolate" name="interpolate" object="[flash.geom.Point]" playername="" static="true" text="Point.interpolate(%pt1:flash.geom:Point,pt2:flash.geom:Point,f:Number%):flash.geom:Point" tiptext="Determines a point between two specified points." version="4"/>
               <string helpurl="flash.geom:Point:normalize" name="normalize" object="[flash.geom.Point]" playername="" text=".normalize(%thickness:Number%):void" tiptext="Scales the line segment between (0,0) and the current point to a set length." version="4"/>
               <string helpurl="flash.geom:Point:offset" name="offset" object="[flash.geom.Point]" playername="" text=".offset(%dx:Number,dy:Number%):void" tiptext="Offsets the Point object by the specified amount." version="4"/>
               <string helpurl="flash.geom:Point:polar" name="polar" object="[flash.geom.Point]" playername="" static="true" text="Point.polar(%len:Number,angle:Number%):flash.geom:Point" tiptext="Converts a pair of polar coordinates to a Cartesian point coordinate." version="4"/>
               <string helpurl="flash.geom:Point:subtract" name="subtract" object="[flash.geom.Point]" playername="" text=".subtract(%v:flash.geom:Point%):flash.geom:Point" tiptext="Subtracts the coordinates of another point from the coordinates of this point to create a new point." version="4"/>
               <string helpurl="flash.geom:Point:toString" name="toString" object="[flash.geom.Point]" playername="" text=".toString(%%):String" tiptext="Returns a string that contains the values of the x and y coordinates." version="4"/>
            </folder>
            <folder helpurl="flash.geom:Point" id="Properties" name="Properties" tiptext="Properties for class Point">
               <string helpurl="flash.geom:Point:x" name="x" object="[flash.geom.Point]" playername="" text=".x" tiptext="The horizontal coordinate of the point." version=""/>
               <string helpurl="flash.geom:Point:y" name="y" object="[flash.geom.Point]" playername="" text=".y" tiptext="The vertical coordinate of the point." version=""/>
               <string helpurl="flash.geom:Point:length:get" name="length" object="[flash.geom.Point]" playername="" text=".length" tiptext="The length of the line segment from (0,0) to this point." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="flash.geom:Rectangle" id="[flash.geom.Rectangle]" index="true" name="Rectangle" sort="true" tiptext="A Rectangle object is an area defined by its position, as indicated by its top-left corner point (x, y) and by its width and its height.">
            <folder helpurl="flash.geom:Rectangle" id="Methods" name="Methods" tiptext="Methods for class Rectangle">
               <string constructor="true" helpurl="flash.geom:Rectangle:Rectangle" name="Rectangle" object="[flash.geom.Rectangle]" playername="" text="new Rectangle(%[x:Number=0,y:Number=0,width:Number=0,height:Number=0]%)" tiptext="Creates a new Rectangle object with the top-left corner specified by the x and y parameters and with the specified width and height." version="4"/>
               <string helpurl="flash.geom:Rectangle:clone" name="clone" object="[flash.geom.Rectangle]" playername="" text=".clone(%%):flash.geom:Rectangle" tiptext="Returns a copy of this Rectangle object." version="4"/>
               <string helpurl="flash.geom:Rectangle:containsPoint" name="containsPoint" object="[flash.geom.Rectangle]" playername="" text=".containsPoint(%point:flash.geom:Point%):Boolean" tiptext="Determines if the specified point is contained within the rectangular region defined by this Rectangle object using a Point object as a parameter." version="4"/>
               <string helpurl="flash.geom:Rectangle:containsRect" name="containsRect" object="[flash.geom.Rectangle]" playername="" text=".containsRect(%rect:flash.geom:Rectangle%):Boolean" tiptext="Determines if the Rectangle object specified by the rect parameter is containedwithin this Rectangle object." version="4"/>
               <string helpurl="flash.geom:Rectangle:contains" name="contains" object="[flash.geom.Rectangle]" playername="" text=".contains(%x:Number,y:Number%):Boolean" tiptext="Determines if the specified point is contained within the rectangular region." version="4"/>
               <string helpurl="flash.geom:Rectangle:equals" name="equals" object="[flash.geom.Rectangle]" playername="" text=".equals(%toCompare:flash.geom:Rectangle%):Boolean" tiptext="Determines if the object specified in the toCompare parameter is equal to this Rectangle object." version="4"/>
               <string helpurl="flash.geom:Rectangle:inflatePoint" name="inflatePoint" object="[flash.geom.Rectangle]" playername="" text=".inflatePoint(%point:flash.geom:Point%):void" tiptext="Increases the size of the Rectangle object using a Point object as a parameter." version="4"/>
               <string helpurl="flash.geom:Rectangle:inflate" name="inflate" object="[flash.geom.Rectangle]" playername="" text=".inflate(%dx:Number,dy:Number%):void" tiptext="Increases the size of the Rectangle object by the specified amounts, in pixels." version="4"/>
               <string helpurl="flash.geom:Rectangle:intersection" name="intersection" object="[flash.geom.Rectangle]" playername="" text=".intersection(%toIntersect:flash.geom:Rectangle%):flash.geom:Rectangle" tiptext="Returns the area of intersection." version="4"/>
               <string helpurl="flash.geom:Rectangle:intersects" name="intersects" object="[flash.geom.Rectangle]" playername="" text=".intersects(%toIntersect:flash.geom:Rectangle%):Boolean" tiptext="Determines if the object specified in the toIntersect parameter intersectswith this Rectangle object." version="4"/>
               <string helpurl="flash.geom:Rectangle:isEmpty" name="isEmpty" object="[flash.geom.Rectangle]" playername="" text=".isEmpty(%%):Boolean" tiptext="Determines whether or not this Rectangle object is empty." version="4"/>
               <string helpurl="flash.geom:Rectangle:offsetPoint" name="offsetPoint" object="[flash.geom.Rectangle]" playername="" text=".offsetPoint(%point:flash.geom:Point%):void" tiptext="Adjusts the location of the Rectangle object using a Point object as a parameter." version="4"/>
               <string helpurl="flash.geom:Rectangle:offset" name="offset" object="[flash.geom.Rectangle]" playername="" text=".offset(%dx:Number,dy:Number%):void" tiptext="Adjusts the location of the Rectangle object." version="4"/>
               <string helpurl="flash.geom:Rectangle:setEmpty" name="setEmpty" object="[flash.geom.Rectangle]" playername="" text=".setEmpty(%%):void" tiptext="Sets all properties to 0." version="4"/>
               <string helpurl="flash.geom:Rectangle:toString" name="toString" object="[flash.geom.Rectangle]" playername="" text=".toString(%%):String" tiptext="Builds and returns a string that lists the horizontal and vertical positionsand the width and height of the Rectangle object." version="4"/>
               <string helpurl="flash.geom:Rectangle:union" name="union" object="[flash.geom.Rectangle]" playername="" text=".union(%toUnion:flash.geom:Rectangle%):flash.geom:Rectangle" tiptext="Adds two rectangles together to create a new Rectangle object." version="4"/>
            </folder>
            <folder helpurl="flash.geom:Rectangle" id="Properties" name="Properties" tiptext="Properties for class Rectangle">
               <string helpurl="flash.geom:Rectangle:height" name="height" object="[flash.geom.Rectangle]" playername="" text=".height" tiptext="The height of the rectangle, in pixels." version=""/>
               <string helpurl="flash.geom:Rectangle:width" name="width" object="[flash.geom.Rectangle]" playername="" text=".width" tiptext="The width of the rectangle, in pixels." version=""/>
               <string helpurl="flash.geom:Rectangle:x" name="x" object="[flash.geom.Rectangle]" playername="" text=".x" tiptext="The x coordinate of the top-left corner of the rectangle." version=""/>
               <string helpurl="flash.geom:Rectangle:y" name="y" object="[flash.geom.Rectangle]" playername="" text=".y" tiptext="The y coordinate of the top-left corner of the rectangle." version=""/>
               <string helpurl="flash.geom:Rectangle:bottomRight:get" name="bottomRight" object="[flash.geom.Rectangle]" playername="" text=".bottomRight" tiptext="The location of the Rectangle object's bottom-right corner, determined by the values of the right and bottom properties." version=""/>
               <string helpurl="flash.geom:Rectangle:bottom:get" name="bottom" object="[flash.geom.Rectangle]" playername="" text=".bottom" tiptext="The sum of the y and height properties." version=""/>
               <string helpurl="flash.geom:Rectangle:left:get" name="left" object="[flash.geom.Rectangle]" playername="" text=".left" tiptext="The x coordinate of the top-left corner of the rectangle." version=""/>
               <string helpurl="flash.geom:Rectangle:right:get" name="right" object="[flash.geom.Rectangle]" playername="" text=".right" tiptext="The sum of the x and width properties." version=""/>
               <string helpurl="flash.geom:Rectangle:size:get" name="size" object="[flash.geom.Rectangle]" playername="" text=".size" tiptext="The size of the Rectangle object, expressed as a Point object with the values of the width and height properties." version=""/>
               <string helpurl="flash.geom:Rectangle:topLeft:get" name="topLeft" object="[flash.geom.Rectangle]" playername="" text=".topLeft" tiptext="The location of the Rectangle object's top-left corner, determined by the x and y coordinates of the point." version=""/>
               <string helpurl="flash.geom:Rectangle:top:get" name="top" object="[flash.geom.Rectangle]" playername="" text=".top" tiptext="The y coordinate of the top-left corner of the rectangle." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="flash.geom:Transform" id="[flash.geom.Transform]" index="true" name="Transform" sort="true" tiptext="The Transform class provides access to color adjustment properties and two- or three-dimensional transformation objects that can be applied to a display object.">
            <folder helpurl="flash.geom:Transform" id="Properties" name="Properties" tiptext="Properties for class Transform">
               <string helpurl="flash.geom:Transform:colorTransform:get" name="colorTransform" object="[flash.geom.Transform]" playername="" text=".colorTransform" tiptext="A ColorTransform object containing values that universally adjust the colors in the display object." version=""/>
               <string helpurl="flash.geom:Transform:concatenatedColorTransform:get" name="concatenatedColorTransform" object="[flash.geom.Transform]" playername="" text=".concatenatedColorTransform" tiptext="A ColorTransform object representing the combined color transformations applied to the display object and all of its parent objects, back to the root level." version=""/>
               <string helpurl="flash.geom:Transform:concatenatedMatrix:get" name="concatenatedMatrix" object="[flash.geom.Transform]" playername="" text=".concatenatedMatrix" tiptext="A Matrix object representing the combined transformation matrixes of the display object and all of its parent objects, back to the root level." version=""/>
               <string helpurl="flash.geom:Transform:matrix:get" name="matrix" object="[flash.geom.Transform]" playername="" text=".matrix" tiptext="A Matrix object containing values that alter the scaling, rotation, and translation of the display object." version=""/>
               <string helpurl="flash.geom:Transform:pixelBounds:get" name="pixelBounds" object="[flash.geom.Transform]" playername="" text=".pixelBounds" tiptext="A Rectangle object that defines the bounding rectangle of the display object on the stage." version=""/>
            </folder>
         </folder>
      </folder>
      <folder helpurl="flash.media" id="flash.media" name="flash.media" sort="true" tiptext="Classes for package flash.media">
         <folder asAncestors="Object" helpurl="flash.media:ID3Info" id="[flash.media.ID3Info]" index="true" name="ID3Info" sort="true" tiptext="The ID3Info class contains properties that reflect ID3 metadata.">
            <folder helpurl="flash.media:ID3Info" id="Properties" name="Properties" tiptext="Properties for class ID3Info">
               <string helpurl="flash.media:ID3Info:album" name="album" object="[flash.media.ID3Info]" playername="" text=".album" tiptext="The name of the album; corresponds to the ID3 2.0 tag TALB." version=""/>
               <string helpurl="flash.media:ID3Info:artist" name="artist" object="[flash.media.ID3Info]" playername="" text=".artist" tiptext="The name of the artist; corresponds to the ID3 2.0 tag TPE1." version=""/>
               <string helpurl="flash.media:ID3Info:comment" name="comment" object="[flash.media.ID3Info]" playername="" text=".comment" tiptext="A comment about the recording; corresponds to the ID3 2.0 tag COMM." version=""/>
               <string helpurl="flash.media:ID3Info:genre" name="genre" object="[flash.media.ID3Info]" playername="" text=".genre" tiptext="The genre of the song; corresponds to the ID3 2.0 tag TCON." version=""/>
               <string helpurl="flash.media:ID3Info:songName" name="songName" object="[flash.media.ID3Info]" playername="" text=".songName" tiptext="The name of the song; corresponds to the ID3 2.0 tag TIT2." version=""/>
               <string helpurl="flash.media:ID3Info:track" name="track" object="[flash.media.ID3Info]" playername="" text=".track" tiptext="The track number; corresponds to the ID3 2.0 tag TRCK." version=""/>
               <string helpurl="flash.media:ID3Info:year" name="year" object="[flash.media.ID3Info]" playername="" text=".year" tiptext="The year of the recording; corresponds to the ID3 2.0 tag TYER." version=""/>
            </folder>
         </folder>
         <folder helpurl="flash.media" id="Methods" name="Methods" tiptext="Methods for package flash.media">
            <string helpurl="flash.media:scanHardware" name="scanHardware" playername="" text="scanHardware(%%):void" tiptext="Forces a rescan of the microphones and cameras on the system." version="9"/>
         </folder>
         <folder asAncestors="flash.events:EventDispatcher,Object" helpurl="flash.media:Sound" id="[flash.media.Sound]" index="true" name="Sound" sort="true" tiptext="The Sound class lets you work with sound in an application.">
            <folder helpurl="flash.media:Sound" id="Methods" name="Methods" tiptext="Methods for class Sound">
               <string constructor="true" helpurl="flash.media:Sound:Sound" name="Sound" object="[flash.media.Sound]" playername="" text="new Sound(%[stream:flash.net:URLRequest=null,context:flash.media:SoundLoaderContext=null]%)" tiptext="Creates a new Sound object." version="4"/>
               <string helpurl="flash.media:Sound:close" name="close" object="[flash.media.Sound]" playername="" text=".close(%%):void" tiptext="Closes the stream, causing any download of data to cease." version="4"/>
               <string helpurl="flash.media:Sound:load" name="load" object="[flash.media.Sound]" playername="" text=".load(%stream:flash.net:URLRequest[,context:flash.media:SoundLoaderContext=null]%):void" tiptext="Initiates loading of an external MP3 file from the specified URL." version="4"/>
               <string helpurl="flash.media:Sound:play" name="play" object="[flash.media.Sound]" playername="" text=".play(%[startTime:Number=0,loops:int=0,sndTransform:flash.media:SoundTransform=null]%):flash.media:SoundChannel" tiptext="Generates a new SoundChannel object to play back the sound." version="4"/>
            </folder>
            <folder helpurl="flash.media:Sound" id="Properties" name="Properties" tiptext="Properties for class Sound">
               <string helpurl="flash.media:Sound:bytesLoaded:get" name="bytesLoaded" object="[flash.media.Sound]" playername="" text=".bytesLoaded" tiptext="Returns the currently available number of bytes in this sound object." version=""/>
               <string helpurl="flash.media:Sound:bytesTotal:get" name="bytesTotal" object="[flash.media.Sound]" playername="" text=".bytesTotal" tiptext="Returns the total number of bytes in this sound object." version=""/>
               <string helpurl="flash.media:Sound:id3:get" name="id3" object="[flash.media.Sound]" playername="" text=".id3" tiptext="Provides access to the metadata that is part of an MP3 file." version=""/>
               <string helpurl="flash.media:Sound:isBuffering:get" name="isBuffering" object="[flash.media.Sound]" playername="" text=".isBuffering" tiptext="Returns the buffering state of external MP3 files." version=""/>
               <string helpurl="flash.media:Sound:length:get" name="length" object="[flash.media.Sound]" playername="" text=".length" tiptext="The length of the current sound in milliseconds." version=""/>
               <string helpurl="flash.media:Sound:url:get" name="url" object="[flash.media.Sound]" playername="" text=".url" tiptext="The URL from which this sound was loaded." version=""/>
            </folder>
            <folder helpurl="flash.media:Sound" id="Events" name="Events" tiptext="Events for class Sound">
               <string helpurl="flash.media:Sound_flash.events.ProgressEvent.PROGRESS_progress" name="progress" object="[flash.media.Sound]" playername="" text=".addEventListener(%type:String=ProgressEvent.PROGRESS{ProgressEvent.PROGRESS,Event.OPEN,IOErrorEvent.IO_ERROR,Event.ID3,Event.COMPLETE,SampleDataEvent.SAMPLE_DATA},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when data is received as a load operation progresses." version=""/>
               <string helpurl="flash.media:Sound_flash.events.Event.OPEN_open" name="open" object="[flash.media.Sound]" playername="" text=".addEventListener(%type:String=Event.OPEN{ProgressEvent.PROGRESS,Event.OPEN,IOErrorEvent.IO_ERROR,Event.ID3,Event.COMPLETE,SampleDataEvent.SAMPLE_DATA},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a load operation starts." version=""/>
               <string helpurl="flash.media:Sound_flash.events.IOErrorEvent.IO_ERROR_ioError" name="ioError" object="[flash.media.Sound]" playername="" text=".addEventListener(%type:String=IOErrorEvent.IO_ERROR{ProgressEvent.PROGRESS,Event.OPEN,IOErrorEvent.IO_ERROR,Event.ID3,Event.COMPLETE,SampleDataEvent.SAMPLE_DATA},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when an input/output error occurs that causes a load operation to fail." version=""/>
               <string helpurl="flash.media:Sound_flash.events.Event.ID3_id3" name="id3" object="[flash.media.Sound]" playername="" text=".addEventListener(%type:String=Event.ID3{ProgressEvent.PROGRESS,Event.OPEN,IOErrorEvent.IO_ERROR,Event.ID3,Event.COMPLETE,SampleDataEvent.SAMPLE_DATA},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched by a Sound object when ID3 data is available for an MP3 sound." version=""/>
               <string helpurl="flash.media:Sound_flash.events.Event.COMPLETE_complete" name="complete" object="[flash.media.Sound]" playername="" text=".addEventListener(%type:String=Event.COMPLETE{ProgressEvent.PROGRESS,Event.OPEN,IOErrorEvent.IO_ERROR,Event.ID3,Event.COMPLETE,SampleDataEvent.SAMPLE_DATA},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when data has loaded successfully." version=""/>
            </folder>
         </folder>
         <folder asAncestors="flash.events:EventDispatcher,Object" helpurl="flash.media:SoundChannel" id="[flash.media.SoundChannel]" index="true" name="SoundChannel" sort="true" tiptext="The SoundChannel class controls a sound in an application.">
            <folder helpurl="flash.media:SoundChannel" id="Methods" name="Methods" tiptext="Methods for class SoundChannel">
               <string helpurl="flash.media:SoundChannel:stop" name="stop" object="[flash.media.SoundChannel]" playername="" text=".stop(%%):void" tiptext="Stops the sound playing in the channel." version="4"/>
            </folder>
            <folder helpurl="flash.media:SoundChannel" id="Properties" name="Properties" tiptext="Properties for class SoundChannel">
               <string helpurl="flash.media:SoundChannel:leftPeak:get" name="leftPeak" object="[flash.media.SoundChannel]" playername="" text=".leftPeak" tiptext="The current amplitude (volume) of the left channel, from 0 (silent) to 1 (full amplitude)." version=""/>
               <string helpurl="flash.media:SoundChannel:position:get" name="position" object="[flash.media.SoundChannel]" playername="" text=".position" tiptext="When the sound is playing, the position property indicates in milliseconds the current point that is being played in the sound file." version=""/>
               <string helpurl="flash.media:SoundChannel:rightPeak:get" name="rightPeak" object="[flash.media.SoundChannel]" playername="" text=".rightPeak" tiptext="The current amplitude (volume) of the right channel, from 0 (silent) to 1 (full amplitude)." version=""/>
               <string helpurl="flash.media:SoundChannel:soundTransform:get" name="soundTransform" object="[flash.media.SoundChannel]" playername="" text=".soundTransform" tiptext="The SoundTransform object assigned to the sound channel." version=""/>
            </folder>
            <folder helpurl="flash.media:SoundChannel" id="Events" name="Events" tiptext="Events for class SoundChannel">
               <string helpurl="flash.media:SoundChannel_flash.events.Event.SOUND_COMPLETE_soundComplete" name="soundComplete" object="[flash.media.SoundChannel]" playername="" text=".addEventListener(%type:String=Event.SOUND_COMPLETE{Event.SOUND_COMPLETE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a sound has finished playing." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="flash.media:SoundLoaderContext" id="[flash.media.SoundLoaderContext]" index="true" name="SoundLoaderContext" sort="true" tiptext="The SoundLoaderContext class provides security checks for files that load sound.">
            <folder helpurl="flash.media:SoundLoaderContext" id="Methods" name="Methods" tiptext="Methods for class SoundLoaderContext">
               <string constructor="true" helpurl="flash.media:SoundLoaderContext:SoundLoaderContext" name="SoundLoaderContext" object="[flash.media.SoundLoaderContext]" playername="" text="new SoundLoaderContext(%[bufferTime:Number=1000,checkPolicyFile:Boolean=false]%)" tiptext="Creates a new sound loader context object." version="4"/>
            </folder>
            <folder helpurl="flash.media:SoundLoaderContext" id="Properties" name="Properties" tiptext="Properties for class SoundLoaderContext">
               <string helpurl="flash.media:SoundLoaderContext:bufferTime" name="bufferTime" object="[flash.media.SoundLoaderContext]" playername="" text=".bufferTime" tiptext="The number of milliseconds to preload a streaming sound into a buffer before the sound starts to stream." version=""/>
               <string helpurl="flash.media:SoundLoaderContext:checkPolicyFile" name="checkPolicyFile" object="[flash.media.SoundLoaderContext]" playername="" text=".checkPolicyFile" tiptext="Specifies whether the application should try to download a URL policy file from the loaded sound's server before beginning to load the sound." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="flash.media:SoundMixer" id="[flash.media.SoundMixer]" index="true" name="SoundMixer" sort="true" tiptext="The SoundMixer class contains static properties and methods for global sound controlin the application.">
            <folder helpurl="flash.media:SoundMixer" id="Methods" name="Methods" tiptext="Methods for class SoundMixer">
               <string helpurl="flash.media:SoundMixer:stopAll" name="stopAll" object="[flash.media.SoundMixer]" playername="" static="true" text="SoundMixer.stopAll(%%):void" tiptext="Stops all sounds currently playing." version="4"/>
            </folder>
            <folder helpurl="flash.media:SoundMixer" id="Properties" name="Properties" tiptext="Properties for class SoundMixer">
               <string helpurl="flash.media:SoundMixer:bufferTime:get" name="bufferTime" object="[flash.media.SoundMixer]" playername="" text=".bufferTime" tiptext="The number of seconds to preload an embedded streaming sound into a buffer before it starts to stream." version=""/>
               <string helpurl="flash.media:SoundMixer:soundTransform:get" name="soundTransform" object="[flash.media.SoundMixer]" playername="" text=".soundTransform" tiptext="The SoundTransform object that controls global sound properties." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="flash.media:SoundTransform" id="[flash.media.SoundTransform]" index="true" name="SoundTransform" sort="true" tiptext="The SoundTransform class contains properties for volume and panning.">
            <folder helpurl="flash.media:SoundTransform" id="Methods" name="Methods" tiptext="Methods for class SoundTransform">
               <string constructor="true" helpurl="flash.media:SoundTransform:SoundTransform" name="SoundTransform" object="[flash.media.SoundTransform]" playername="" text="new SoundTransform(%[vol:Number=1,panning:Number=0]%)" tiptext="Creates a SoundTransform object." version="4"/>
            </folder>
            <folder helpurl="flash.media:SoundTransform" id="Properties" name="Properties" tiptext="Properties for class SoundTransform">
               <string helpurl="flash.media:SoundTransform:leftToLeft:get" name="leftToLeft" object="[flash.media.SoundTransform]" playername="" text=".leftToLeft" tiptext="A value, from 0 (none) to 1 (all), specifying how much of the left input is played in the left speaker." version=""/>
               <string helpurl="flash.media:SoundTransform:leftToRight:get" name="leftToRight" object="[flash.media.SoundTransform]" playername="" text=".leftToRight" tiptext="A value, from 0 (none) to 1 (all), specifying how much of the left input is played in the right speaker." version=""/>
               <string helpurl="flash.media:SoundTransform:pan:get" name="pan" object="[flash.media.SoundTransform]" playername="" text=".pan" tiptext="The left-to-right panning of the sound, ranging from -1 (full pan left) to 1 (full pan right)." version=""/>
               <string helpurl="flash.media:SoundTransform:rightToLeft:get" name="rightToLeft" object="[flash.media.SoundTransform]" playername="" text=".rightToLeft" tiptext="A value, from 0 (none) to 1 (all), specifying how much of the right input is played in the left speaker." version=""/>
               <string helpurl="flash.media:SoundTransform:rightToRight:get" name="rightToRight" object="[flash.media.SoundTransform]" playername="" text=".rightToRight" tiptext="A value, from 0 (none) to 1 (all), specifying how much of the right input is played in the right speaker." version=""/>
               <string helpurl="flash.media:SoundTransform:volume:get" name="volume" object="[flash.media.SoundTransform]" playername="" text=".volume" tiptext="The volume, ranging from 0 (silent) to 1 (full volume)." version=""/>
            </folder>
         </folder>
         <folder asAncestors="flash.display:DisplayObject,flash.events:EventDispatcher,Object" helpurl="flash.media:Video" id="[flash.media.Video]" index="true" name="Video" sort="true" tiptext="The Video class displays live or recorded video in an application without embedding the video in your SWF file.">
            <folder helpurl="flash.media:Video" id="Methods" name="Methods" tiptext="Methods for class Video">
               <string constructor="true" helpurl="flash.media:Video:Video" name="Video" object="[flash.media.Video]" playername="" text="new Video(%[width:int=320,height:int=240]%)" tiptext="Creates a new Video instance." version="9"/>
               <string helpurl="flash.media:Video:attachNetStream" name="attachNetStream" object="[flash.media.Video]" playername="" text=".attachNetStream(%netStream:flash.net:NetStream%):void" tiptext="Specifies a video stream to be displayed within the boundaries of the Video object in the application." version="4"/>
               <string helpurl="flash.media:Video:clear" name="clear" object="[flash.media.Video]" playername="" text=".clear(%%):void" tiptext="Clears the image currently displayed in the Video object (not the video stream)." version="4"/>
            </folder>
            <folder helpurl="flash.media:Video" id="Properties" name="Properties" tiptext="Properties for class Video">
               <string helpurl="flash.media:Video:deblocking:get" name="deblocking" object="[flash.media.Video]" playername="" text=".deblocking" tiptext="Indicates the type of filter applied to decoded video as part of post-processing." version=""/>
               <string helpurl="flash.media:Video:smoothing:get" name="smoothing" object="[flash.media.Video]" playername="" text=".smoothing" tiptext="Specifies whether the video should be smoothed (interpolated) when it is scaled." version=""/>
               <string helpurl="flash.media:Video:videoHeight:get" name="videoHeight" object="[flash.media.Video]" playername="" text=".videoHeight" tiptext="An integer specifying the height of the video stream, in pixels." version=""/>
               <string helpurl="flash.media:Video:videoWidth:get" name="videoWidth" object="[flash.media.Video]" playername="" text=".videoWidth" tiptext="An integer specifying the width of the video stream, in pixels." version=""/>
            </folder>
         </folder>
      </folder>
      <folder helpurl="flash.net" id="flash.net" name="flash.net" sort="true" tiptext="Classes for package flash.net">
         <folder helpurl="flash.net:IDynamicPropertyOutput" id="[flash.net.IDynamicPropertyOutput]" index="true" name="IDynamicPropertyOutput" sort="true" tiptext="This interface controls the serialization of dynamic properties of dynamic objects.">
            <folder helpurl="flash.net:IDynamicPropertyOutput" id="Methods" name="Methods" tiptext="Methods for class IDynamicPropertyOutput">
               <string helpurl="flash.net:IDynamicPropertyOutput:writeDynamicProperty" name="writeDynamicProperty" object="[flash.net.IDynamicPropertyOutput]" playername="" text=".writeDynamicProperty(%name:String,value:*%):void" tiptext="Adds a dynamic property to the binary output of a serialized object." version="4"/>
            </folder>
         </folder>
         <folder helpurl="flash.net:IDynamicPropertyWriter" id="[flash.net.IDynamicPropertyWriter]" index="true" name="IDynamicPropertyWriter" sort="true" tiptext="This interface is used with the IDynamicPropertyOutput interface to control the serialization of dynamic properties of dynamic objects.">
            <folder helpurl="flash.net:IDynamicPropertyWriter" id="Methods" name="Methods" tiptext="Methods for class IDynamicPropertyWriter">
               <string helpurl="flash.net:IDynamicPropertyWriter:writeDynamicProperties" name="writeDynamicProperties" object="[flash.net.IDynamicPropertyWriter]" playername="" text=".writeDynamicProperties(%obj:Object,output:flash.net:IDynamicPropertyOutput%):void" tiptext="Writes the name and value of an IDynamicPropertyOutput object to an object with dynamic properties." version="4"/>
            </folder>
         </folder>
         <folder asAncestors="flash.events:EventDispatcher,Object" helpurl="flash.net:LocalConnection" id="[flash.net.LocalConnection]" index="true" name="LocalConnection" sort="true" tiptext="The LocalConnection class lets you create a LocalConnection object that can invoke a method in another LocalConnection object.">
            <folder helpurl="flash.net:LocalConnection" id="Methods" name="Methods" tiptext="Methods for class LocalConnection">
               <string constructor="true" helpurl="flash.net:LocalConnection:LocalConnection" name="LocalConnection" object="[flash.net.LocalConnection]" playername="" text="new LocalConnection(%%)" tiptext="Creates a LocalConnection object." version="4"/>
               <string helpurl="flash.net:LocalConnection:allowDomain" name="allowDomain" object="[flash.net.LocalConnection]" playername="" text=".allowDomain(%domains:restParam%):void" tiptext="Specifies one or more domains that can send LocalConnection calls to this LocalConnection instance." version="4"/>
               <string helpurl="flash.net:LocalConnection:allowInsecureDomain" name="allowInsecureDomain" object="[flash.net.LocalConnection]" playername="" text=".allowInsecureDomain(%domains:restParam%):void" tiptext="Specifies one or more domains that can send LocalConnection calls to this LocalConnection object." version="4"/>
               <string helpurl="flash.net:LocalConnection:close" name="close" object="[flash.net.LocalConnection]" playername="" text=".close(%%):void" tiptext="Closes (disconnects) a LocalConnection object." version="4"/>
               <string helpurl="flash.net:LocalConnection:connect" name="connect" object="[flash.net.LocalConnection]" playername="" text=".connect(%connectionName:String%):void" tiptext="Prepares a LocalConnection object to receive commands that are sent from a send() command (from the sending LocalConnection object)." version="4"/>
               <string helpurl="flash.net:LocalConnection:send" name="send" object="[flash.net.LocalConnection]" playername="" text=".send(%connectionName:String,methodName:String,arguments:restParam%):void" tiptext="Invokes the method named methodName on a connection that was opened with the connect(connectionName) method (in the receiving LocalConnection object)." version="4"/>
            </folder>
            <folder helpurl="flash.net:LocalConnection" id="Properties" name="Properties" tiptext="Properties for class LocalConnection">
               <string helpurl="flash.net:LocalConnection:client:get" name="client" object="[flash.net.LocalConnection]" playername="" text=".client" tiptext="Indicates the object on which callback methods are invoked." version=""/>
               <string helpurl="flash.net:LocalConnection:domain:get" name="domain" object="[flash.net.LocalConnection]" playername="" text=".domain" tiptext="A string representing the domain of the location of the current file." version=""/>
            </folder>
            <folder helpurl="flash.net:LocalConnection" id="Events" name="Events" tiptext="Events for class LocalConnection">
               <string helpurl="flash.net:LocalConnection_flash.events.StatusEvent.STATUS_status" name="status" object="[flash.net.LocalConnection]" playername="" text=".addEventListener(%type:String=StatusEvent.STATUS{StatusEvent.STATUS,SecurityErrorEvent.SECURITY_ERROR,AsyncErrorEvent.ASYNC_ERROR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a LocalConnection object reports its status." version=""/>
               <string helpurl="flash.net:LocalConnection_flash.events.SecurityErrorEvent.SECURITY_ERROR_securityError" name="securityError" object="[flash.net.LocalConnection]" playername="" text=".addEventListener(%type:String=SecurityErrorEvent.SECURITY_ERROR{StatusEvent.STATUS,SecurityErrorEvent.SECURITY_ERROR,AsyncErrorEvent.ASYNC_ERROR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched if a call to LocalConnection.send() attempts to send data to a different security sandbox." version=""/>
               <string helpurl="flash.net:LocalConnection_flash.events.AsyncErrorEvent.ASYNC_ERROR_asyncError" name="asyncError" object="[flash.net.LocalConnection]" playername="" text=".addEventListener(%type:String=AsyncErrorEvent.ASYNC_ERROR{StatusEvent.STATUS,SecurityErrorEvent.SECURITY_ERROR,AsyncErrorEvent.ASYNC_ERROR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when an exception is thrown asynchronously -- that is, from native asynchronous code." version=""/>
            </folder>
         </folder>
         <folder asAncestors="flash.events:EventDispatcher,Object" helpurl="flash.net:NetConnection" id="[flash.net.NetConnection]" index="true" name="NetConnection" sort="true" tiptext="The NetConnection class creates a bidirectional connection between a Flash Player or AIR an AIR application and a Flash Media Server application or between a Flash Player or AIR an AIR application and an application server running Flash Remoting.">
            <folder helpurl="flash.net:NetConnection" id="Methods" name="Methods" tiptext="Methods for class NetConnection">
               <string constructor="true" helpurl="flash.net:NetConnection:NetConnection" name="NetConnection" object="[flash.net.NetConnection]" playername="" text="new NetConnection(%%)" tiptext="Creates a NetConnection object." version="4"/>
               <string helpurl="flash.net:NetConnection:addHeader" name="addHeader" object="[flash.net.NetConnection]" playername="" text=".addHeader(%operation:String[,mustUnderstand:Boolean=false,param:Object=null]%):void" tiptext="Adds a context header to the Action Message Format (AMF) packet structure." version="4"/>
               <string helpurl="flash.net:NetConnection:call" name="call" object="[flash.net.NetConnection]" playername="" text=".call(%command:String,responder:flash.net:Responder,arguments:restParam%):void" tiptext="Invokes a command or method on Flash Media Server or on an application server running Flash Remoting." version="4"/>
               <string helpurl="flash.net:NetConnection:close" name="close" object="[flash.net.NetConnection]" playername="" text=".close(%%):void" tiptext="Closes the connection that was opened locally or to the server and dispatches a netStatus event with a code property of NetConnection.Connect.Closed." version="4"/>
               <string helpurl="flash.net:NetConnection:connect" name="connect" object="[flash.net.NetConnection]" playername="" text=".connect(%command:String,arguments:restParam%):void" tiptext="Creates a bidirectional connection between applications, plays video or MP3 files, or creates a bidirectional network endpoint suitable for RTMFP peer-to-peer group communication." version="4"/>
            </folder>
            <folder helpurl="flash.net:NetConnection" id="Properties" name="Properties" tiptext="Properties for class NetConnection">
               <string helpurl="flash.net:NetConnection:client:get" name="client" object="[flash.net.NetConnection]" playername="" text=".client" tiptext="Indicates the object on which callback methods should be invoked." version=""/>
               <string helpurl="flash.net:NetConnection:connectedProxyType:get" name="connectedProxyType" object="[flash.net.NetConnection]" playername="" text=".connectedProxyType" tiptext="The proxy type used to make a successful connection to Flash Media Server." version=""/>
               <string helpurl="flash.net:NetConnection:connected:get" name="connected" object="[flash.net.NetConnection]" playername="" text=".connected" tiptext="Indicates whether the application is connected to a server through a persistent RTMP connection (true) or not (false)." version=""/>
               <string helpurl="flash.net:NetConnection:defaultObjectEncoding:get" name="defaultObjectEncoding" object="[flash.net.NetConnection]" playername="" text=".defaultObjectEncoding" tiptext="The default object encoding for NetConnection objects." version=""/>
               <string helpurl="flash.net:NetConnection:objectEncoding:get" name="objectEncoding" object="[flash.net.NetConnection]" playername="" text=".objectEncoding" tiptext="The object encoding for this NetConnection instance." version=""/>
               <string helpurl="flash.net:NetConnection:proxyType:get" name="proxyType" object="[flash.net.NetConnection]" playername="" text=".proxyType" tiptext="Determines which fallback methods are tried if an initial connection attempt to Flash Media Server fails." version=""/>
               <string helpurl="flash.net:NetConnection:uri:get" name="uri" object="[flash.net.NetConnection]" playername="" text=".uri" tiptext="The URI passed to the NetConnection.connect() method." version=""/>
               <string helpurl="flash.net:NetConnection:usingTLS:get" name="usingTLS" object="[flash.net.NetConnection]" playername="" text=".usingTLS" tiptext="Indicates whether a secure connection was made using native Transport Layer Security (TLS) rather than HTTPS." version=""/>
            </folder>
            <folder helpurl="flash.net:NetConnection" id="Events" name="Events" tiptext="Events for class NetConnection">
               <string helpurl="flash.net:NetConnection_flash.events.NetStatusEvent.NET_STATUS_netStatus" name="netStatus" object="[flash.net.NetConnection]" playername="" text=".addEventListener(%type:String=NetStatusEvent.NET_STATUS{NetStatusEvent.NET_STATUS,SecurityErrorEvent.SECURITY_ERROR,IOErrorEvent.IO_ERROR,AsyncErrorEvent.ASYNC_ERROR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a NetConnection object is reporting its status or error condition." version=""/>
               <string helpurl="flash.net:NetConnection_flash.events.SecurityErrorEvent.SECURITY_ERROR_securityError" name="securityError" object="[flash.net.NetConnection]" playername="" text=".addEventListener(%type:String=SecurityErrorEvent.SECURITY_ERROR{NetStatusEvent.NET_STATUS,SecurityErrorEvent.SECURITY_ERROR,IOErrorEvent.IO_ERROR,AsyncErrorEvent.ASYNC_ERROR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched if a call to NetConnection.call() attempts to connect to a server outside the caller's security sandbox." version=""/>
               <string helpurl="flash.net:NetConnection_flash.events.IOErrorEvent.IO_ERROR_ioError" name="ioError" object="[flash.net.NetConnection]" playername="" text=".addEventListener(%type:String=IOErrorEvent.IO_ERROR{NetStatusEvent.NET_STATUS,SecurityErrorEvent.SECURITY_ERROR,IOErrorEvent.IO_ERROR,AsyncErrorEvent.ASYNC_ERROR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when an input or output error occurs that causes a network operation to fail." version=""/>
               <string helpurl="flash.net:NetConnection_flash.events.AsyncErrorEvent.ASYNC_ERROR_asyncError" name="asyncError" object="[flash.net.NetConnection]" playername="" text=".addEventListener(%type:String=AsyncErrorEvent.ASYNC_ERROR{NetStatusEvent.NET_STATUS,SecurityErrorEvent.SECURITY_ERROR,IOErrorEvent.IO_ERROR,AsyncErrorEvent.ASYNC_ERROR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when an exception is thrown asynchronously -- that is, from native asynchronous code." version=""/>
            </folder>
         </folder>
         <folder asAncestors="flash.events:EventDispatcher,Object" helpurl="flash.net:NetStream" id="[flash.net.NetStream]" index="true" name="NetStream" sort="true" tiptext="The NetStream class opens a one-way streaming connection between an AIR or Flash Player application and Flash Media Server, or between an AIR or Flash Player application and the local file system.">
            <folder helpurl="flash.net:NetStream" id="Methods" name="Methods" tiptext="Methods for class NetStream">
               <string constructor="true" helpurl="flash.net:NetStream:NetStream" name="NetStream" object="[flash.net.NetStream]" playername="" text="new NetStream(%connection:flash.net:NetConnection[,peerID:String=connectToFMS]%)" tiptext="Creates a stream that can be used for playing video files through the specified NetConnection object." version="4"/>
               <string helpurl="flash.net:NetStream:close" name="close" object="[flash.net.NetStream]" playername="" text=".close(%%):void" tiptext="Stops playing all data on the stream, sets the time property to 0, and makes the stream available for another use." version="4"/>
               <string helpurl="flash.net:NetStream:onPeerConnect" name="onPeerConnect" object="[flash.net.NetStream]" playername="" text=".onPeerConnect(%subscriber:flash.net:NetStream%):Boolean" tiptext="Invoked when a peer-publishing stream matches a peer-subscribing stream." version="4"/>
               <string helpurl="flash.net:NetStream:pause" name="pause" object="[flash.net.NetStream]" playername="" text=".pause(%%):void" tiptext="Pauses playback of a video stream." version="4"/>
               <string helpurl="flash.net:NetStream:play2" name="play2" object="[flash.net.NetStream]" playername="" text=".play2(%param:flash.net:NetStreamPlayOptions%):void" tiptext="Switches seamlessly between files with multiple bit rates and allows a NetStream to resume when a connection is dropped and reconnected." version="4"/>
               <string helpurl="flash.net:NetStream:play" name="play" object="[flash.net.NetStream]" playername="" text=".play(%arguments:restParam%):void" tiptext="Plays a media file from a local directory or from Flash Media Server." version="4"/>
               <string helpurl="flash.net:NetStream:preloadEmbeddedData" name="preloadEmbeddedData" object="[flash.net.NetStream]" playername="" text=".preloadEmbeddedData(%param:flash.net:NetStreamPlayOptions%):void" tiptext="Extracts any DRM metadata from a locally stored media file." version="4"/>
               <string helpurl="flash.net:NetStream:receiveAudio" name="receiveAudio" object="[flash.net.NetStream]" playername="" text=".receiveAudio(%flag:Boolean%):void" tiptext="Specifies whether incoming audio plays on the stream." version="4"/>
               <string helpurl="flash.net:NetStream:receiveVideoFPS" name="receiveVideoFPS" object="[flash.net.NetStream]" playername="" text=".receiveVideoFPS(%FPS:Number%):void" tiptext="Specifies the frame rate for incoming video." version="4"/>
               <string helpurl="flash.net:NetStream:receiveVideo" name="receiveVideo" object="[flash.net.NetStream]" playername="" text=".receiveVideo(%flag:Boolean%):void" tiptext="Specifies whether incoming video will play on the stream." version="4"/>
               <string helpurl="flash.net:NetStream:resume" name="resume" object="[flash.net.NetStream]" playername="" text=".resume(%%):void" tiptext="Resumes playback of a video stream that is paused." version="4"/>
               <string helpurl="flash.net:NetStream:seek" name="seek" object="[flash.net.NetStream]" playername="" text=".seek(%offset:Number%):void" tiptext="Seeks the keyframe (also called an I-frame in the video industry) closest to the specified location." version="4"/>
               <string helpurl="flash.net:NetStream:togglePause" name="togglePause" object="[flash.net.NetStream]" playername="" text=".togglePause(%%):void" tiptext="Pauses or resumes playback of a stream." version="4"/>
            </folder>
            <folder helpurl="flash.net:NetStream" id="Properties" name="Properties" tiptext="Properties for class NetStream">
               <string constant="true" helpurl="flash.net:NetStream:CONNECT_TO_FMS" name="CONNECT_TO_FMS" object="[flash.net.NetStream]" playername="" text="NetStream.CONNECT_TO_FMS" tiptext="A static object used as a parameter to the constructor for a NetStream instance." version=""/>
               <string constant="true" helpurl="flash.net:NetStream:DIRECT_CONNECTIONS" name="DIRECT_CONNECTIONS" object="[flash.net.NetStream]" playername="" text="NetStream.DIRECT_CONNECTIONS" tiptext="Creates a peer-to-peer publisher connection." version=""/>
               <string helpurl="flash.net:NetStream:bufferLength:get" name="bufferLength" object="[flash.net.NetStream]" playername="" text=".bufferLength" tiptext="The number of seconds of data currently in the buffer." version=""/>
               <string helpurl="flash.net:NetStream:bufferTime:get" name="bufferTime" object="[flash.net.NetStream]" playername="" text=".bufferTime" tiptext="Specifies how long to buffer messages before starting to display the stream." version=""/>
               <string helpurl="flash.net:NetStream:bytesLoaded:get" name="bytesLoaded" object="[flash.net.NetStream]" playername="" text=".bytesLoaded" tiptext="The number of bytes of data that have been loaded into the application." version=""/>
               <string helpurl="flash.net:NetStream:bytesTotal:get" name="bytesTotal" object="[flash.net.NetStream]" playername="" text=".bytesTotal" tiptext="The total size in bytes of the file being loaded into the application." version=""/>
               <string helpurl="flash.net:NetStream:client:get" name="client" object="[flash.net.NetStream]" playername="" text=".client" tiptext="Specifies the object on which callback methods are invoked to handle streaming or F4V/FLV file data." version=""/>
               <string helpurl="flash.net:NetStream:currentFPS:get" name="currentFPS" object="[flash.net.NetStream]" playername="" text=".currentFPS" tiptext="The number of frames per second being displayed." version=""/>
               <string helpurl="flash.net:NetStream:info:get" name="info" object="[flash.net.NetStream]" playername="" text=".info" tiptext="Returns a NetStreamInfo object whose properties contain statistics about the quality of service." version=""/>
               <string helpurl="flash.net:NetStream:liveDelay:get" name="liveDelay" object="[flash.net.NetStream]" playername="" text=".liveDelay" tiptext="The number of seconds of data in the subscribing stream's buffer in live (unbuffered) mode." version=""/>
               <string helpurl="flash.net:NetStream:maxPauseBufferTime:get" name="maxPauseBufferTime" object="[flash.net.NetStream]" playername="" text=".maxPauseBufferTime" tiptext="Specifies how long to buffer messages during pause mode, in seconds." version=""/>
               <string helpurl="flash.net:NetStream:nearNonce:get" name="nearNonce" object="[flash.net.NetStream]" playername="" text=".nearNonce" tiptext="For RTMFP and RTMPE connections, a value chosen substantially by this end of the stream, unique to this connection." version=""/>
               <string helpurl="flash.net:NetStream:objectEncoding:get" name="objectEncoding" object="[flash.net.NetStream]" playername="" text=".objectEncoding" tiptext="The object encoding (AMF version) for this NetStream object." version=""/>
               <string helpurl="flash.net:NetStream:time:get" name="time" object="[flash.net.NetStream]" playername="" text=".time" tiptext="The position of the playhead, in seconds." version=""/>
            </folder>
            <folder helpurl="flash.net:NetStream" id="Events" name="Events" tiptext="Events for class NetStream">
               <string helpurl="flash.net:NetStream_flash.events.DRMStatusEvent.DRM_STATUS_drmStatus" name="drmStatus" object="[flash.net.NetStream]" playername="" text=".addEventListener(%type:String=DRMStatusEvent.DRM_STATUS{DRMStatusEvent.DRM_STATUS,DRMErrorEvent.DRM_ERROR,DRMAuthenticateEvent.DRM_AUTHENTICATE,,,,,,,,NetStatusEvent.NET_STATUS,IOErrorEvent.IO_ERROR,AsyncErrorEvent.ASYNC_ERROR,StatusEvent.STATUS},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the digital rights management (DRM) encrypted content begins playing (when the user is authenticated and authorized to play the content)." version=""/>
               <string helpurl="flash.net:NetStream_flash.events.DRMErrorEvent.DRM_ERROR_drmError" name="drmError" object="[flash.net.NetStream]" playername="" text=".addEventListener(%type:String=DRMErrorEvent.DRM_ERROR{DRMStatusEvent.DRM_STATUS,DRMErrorEvent.DRM_ERROR,DRMAuthenticateEvent.DRM_AUTHENTICATE,,,,,,,,NetStatusEvent.NET_STATUS,IOErrorEvent.IO_ERROR,AsyncErrorEvent.ASYNC_ERROR,StatusEvent.STATUS},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a NetStream object, trying to play a digital rights management (DRM) encrypted file, encounters a DRM-related error." version=""/>
               <string helpurl="flash.net:NetStream_flash.events.DRMAuthenticateEvent.DRM_AUTHENTICATE_drmAuthenticate" name="drmAuthenticate" object="[flash.net.NetStream]" playername="" text=".addEventListener(%type:String=DRMAuthenticateEvent.DRM_AUTHENTICATE{DRMStatusEvent.DRM_STATUS,DRMErrorEvent.DRM_ERROR,DRMAuthenticateEvent.DRM_AUTHENTICATE,,,,,,,,NetStatusEvent.NET_STATUS,IOErrorEvent.IO_ERROR,AsyncErrorEvent.ASYNC_ERROR,StatusEvent.STATUS},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a NetStream object tries to play a digital rights management (DRM) encrypted content that requires a user credential for authentication before playing." version=""/>
               <string helpurl="flash.net:NetStream__onDRMContentData" name="onDRMContentData" object="[flash.net.NetStream]" playername="" text=".addEventListener(%type:String={DRMStatusEvent.DRM_STATUS,DRMErrorEvent.DRM_ERROR,DRMAuthenticateEvent.DRM_AUTHENTICATE,,,,,,,,NetStatusEvent.NET_STATUS,IOErrorEvent.IO_ERROR,AsyncErrorEvent.ASYNC_ERROR,StatusEvent.STATUS},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Establishes a listener to respond when AIR extracts DRM content metadata embedded in a media file." version=""/>
               <string helpurl="flash.net:NetStream__onPlayStatus" name="onPlayStatus" object="[flash.net.NetStream]" playername="" text=".addEventListener(%type:String={DRMStatusEvent.DRM_STATUS,DRMErrorEvent.DRM_ERROR,DRMAuthenticateEvent.DRM_AUTHENTICATE,,,,,,,,NetStatusEvent.NET_STATUS,IOErrorEvent.IO_ERROR,AsyncErrorEvent.ASYNC_ERROR,StatusEvent.STATUS},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Establishes a listener to respond when a NetStream object has completely played a stream." version=""/>
               <string helpurl="flash.net:NetStream__onCuePoint" name="onCuePoint" object="[flash.net.NetStream]" playername="" text=".addEventListener(%type:String={DRMStatusEvent.DRM_STATUS,DRMErrorEvent.DRM_ERROR,DRMAuthenticateEvent.DRM_AUTHENTICATE,,,,,,,,NetStatusEvent.NET_STATUS,IOErrorEvent.IO_ERROR,AsyncErrorEvent.ASYNC_ERROR,StatusEvent.STATUS},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Establishes a listener to respond when an embedded cue point is reached while playing a video file." version=""/>
               <string helpurl="flash.net:NetStream__onTextData" name="onTextData" object="[flash.net.NetStream]" playername="" text=".addEventListener(%type:String={DRMStatusEvent.DRM_STATUS,DRMErrorEvent.DRM_ERROR,DRMAuthenticateEvent.DRM_AUTHENTICATE,,,,,,,,NetStatusEvent.NET_STATUS,IOErrorEvent.IO_ERROR,AsyncErrorEvent.ASYNC_ERROR,StatusEvent.STATUS},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Establishes a listener to respond when Flash Player receives text data embedded in a media file that is playing." version=""/>
               <string helpurl="flash.net:NetStream__onImageData" name="onImageData" object="[flash.net.NetStream]" playername="" text=".addEventListener(%type:String={DRMStatusEvent.DRM_STATUS,DRMErrorEvent.DRM_ERROR,DRMAuthenticateEvent.DRM_AUTHENTICATE,,,,,,,,NetStatusEvent.NET_STATUS,IOErrorEvent.IO_ERROR,AsyncErrorEvent.ASYNC_ERROR,StatusEvent.STATUS},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Establishes a listener to respond when Flash Player receives image data as a byte array embedded in a media file that is playing." version=""/>
               <string helpurl="flash.net:NetStream__onMetaData" name="onMetaData" object="[flash.net.NetStream]" playername="" text=".addEventListener(%type:String={DRMStatusEvent.DRM_STATUS,DRMErrorEvent.DRM_ERROR,DRMAuthenticateEvent.DRM_AUTHENTICATE,,,,,,,,NetStatusEvent.NET_STATUS,IOErrorEvent.IO_ERROR,AsyncErrorEvent.ASYNC_ERROR,StatusEvent.STATUS},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Establishes a listener to respond when Flash Player receives descriptive information embedded in the video being played." version=""/>
               <string helpurl="flash.net:NetStream__onXMPData" name="onXMPData" object="[flash.net.NetStream]" playername="" text=".addEventListener(%type:String={DRMStatusEvent.DRM_STATUS,DRMErrorEvent.DRM_ERROR,DRMAuthenticateEvent.DRM_AUTHENTICATE,,,,,,,,NetStatusEvent.NET_STATUS,IOErrorEvent.IO_ERROR,AsyncErrorEvent.ASYNC_ERROR,StatusEvent.STATUS},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Establishes a listener to respond when Flash Player receives information specific to Adobe Extensible Metadata Platform (XMP) embedded in the video being played." version=""/>
               <string helpurl="flash.net:NetStream_flash.events.NetStatusEvent.NET_STATUS_netStatus" name="netStatus" object="[flash.net.NetStream]" playername="" text=".addEventListener(%type:String=NetStatusEvent.NET_STATUS{DRMStatusEvent.DRM_STATUS,DRMErrorEvent.DRM_ERROR,DRMAuthenticateEvent.DRM_AUTHENTICATE,,,,,,,,NetStatusEvent.NET_STATUS,IOErrorEvent.IO_ERROR,AsyncErrorEvent.ASYNC_ERROR,StatusEvent.STATUS},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a NetStream object is reporting its status or error condition." version=""/>
               <string helpurl="flash.net:NetStream_flash.events.IOErrorEvent.IO_ERROR_ioError" name="ioError" object="[flash.net.NetStream]" playername="" text=".addEventListener(%type:String=IOErrorEvent.IO_ERROR{DRMStatusEvent.DRM_STATUS,DRMErrorEvent.DRM_ERROR,DRMAuthenticateEvent.DRM_AUTHENTICATE,,,,,,,,NetStatusEvent.NET_STATUS,IOErrorEvent.IO_ERROR,AsyncErrorEvent.ASYNC_ERROR,StatusEvent.STATUS},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when an input or output error occurs that causes a network operation to fail." version=""/>
               <string helpurl="flash.net:NetStream_flash.events.AsyncErrorEvent.ASYNC_ERROR_asyncError" name="asyncError" object="[flash.net.NetStream]" playername="" text=".addEventListener(%type:String=AsyncErrorEvent.ASYNC_ERROR{DRMStatusEvent.DRM_STATUS,DRMErrorEvent.DRM_ERROR,DRMAuthenticateEvent.DRM_AUTHENTICATE,,,,,,,,NetStatusEvent.NET_STATUS,IOErrorEvent.IO_ERROR,AsyncErrorEvent.ASYNC_ERROR,StatusEvent.STATUS},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when an exception is thrown asynchronously -- that is, from native asynchronous code." version=""/>
               <string helpurl="flash.net:NetStream_flash.events.StatusEvent.STATUS_status" name="status" object="[flash.net.NetStream]" playername="" text=".addEventListener(%type:String=StatusEvent.STATUS{DRMStatusEvent.DRM_STATUS,DRMErrorEvent.DRM_ERROR,DRMAuthenticateEvent.DRM_AUTHENTICATE,,,,,,,,NetStatusEvent.NET_STATUS,IOErrorEvent.IO_ERROR,AsyncErrorEvent.ASYNC_ERROR,StatusEvent.STATUS},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the application attempts to play content encrypted with digital rights management (DRM), by invoking the NetStream.play() method." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="flash.net:NetStreamInfo" id="[flash.net.NetStreamInfo]" index="true" name="NetStreamInfo" sort="true" tiptext="The NetStreamInfo class specifies the various Quality of Service (QOS) statistics related to a NetStream object and the underlying streaming buffer for audio, video, and data.">
            <folder helpurl="flash.net:NetStreamInfo" id="Methods" name="Methods" tiptext="Methods for class NetStreamInfo">
               <string helpurl="flash.net:NetStreamInfo:toString" name="toString" object="[flash.net.NetStreamInfo]" playername="" text=".toString(%%):String" tiptext="Returns a text value listing the properties of this NetStreamInfo object." version="4"/>
            </folder>
            <folder helpurl="flash.net:NetStreamInfo" id="Properties" name="Properties" tiptext="Properties for class NetStreamInfo">
               <string helpurl="flash.net:NetStreamInfo:SRTT:get" name="SRTT" object="[flash.net.NetStreamInfo]" playername="" text=".SRTT" tiptext="Specifies the Smooth Round Trip Time for the NetStream session." version=""/>
               <string helpurl="flash.net:NetStreamInfo:audioBufferByteLength:get" name="audioBufferByteLength" object="[flash.net.NetStreamInfo]" playername="" text=".audioBufferByteLength" tiptext="Provides the NetStream audio buffer size in bytes." version=""/>
               <string helpurl="flash.net:NetStreamInfo:audioBufferLength:get" name="audioBufferLength" object="[flash.net.NetStreamInfo]" playername="" text=".audioBufferLength" tiptext="Provides NetStream audio buffer size in seconds." version=""/>
               <string helpurl="flash.net:NetStreamInfo:audioByteCount:get" name="audioByteCount" object="[flash.net.NetStreamInfo]" playername="" text=".audioByteCount" tiptext="Specifies the total number of audio bytes that have arrived in the queue, regardless of how many have been played or flushed." version=""/>
               <string helpurl="flash.net:NetStreamInfo:audioBytesPerSecond:get" name="audioBytesPerSecond" object="[flash.net.NetStreamInfo]" playername="" text=".audioBytesPerSecond" tiptext="Specifies the rate at which the NetStream audio buffer is filled in bytes per second." version=""/>
               <string helpurl="flash.net:NetStreamInfo:audioLossRate:get" name="audioLossRate" object="[flash.net.NetStreamInfo]" playername="" text=".audioLossRate" tiptext="Specifies the audio loss for the NetStream session." version=""/>
               <string helpurl="flash.net:NetStreamInfo:byteCount:get" name="byteCount" object="[flash.net.NetStreamInfo]" playername="" text=".byteCount" tiptext="Specifies the total number of bytes that have arrived into the queue, regardless of how many have been played or flushed." version=""/>
               <string helpurl="flash.net:NetStreamInfo:currentBytesPerSecond:get" name="currentBytesPerSecond" object="[flash.net.NetStreamInfo]" playername="" text=".currentBytesPerSecond" tiptext="Specifies the rate at which the NetStream buffer is filled in bytes per second." version=""/>
               <string helpurl="flash.net:NetStreamInfo:dataBufferByteLength:get" name="dataBufferByteLength" object="[flash.net.NetStreamInfo]" playername="" text=".dataBufferByteLength" tiptext="Provides the NetStream data buffer size in bytes." version=""/>
               <string helpurl="flash.net:NetStreamInfo:dataBufferLength:get" name="dataBufferLength" object="[flash.net.NetStreamInfo]" playername="" text=".dataBufferLength" tiptext="Provides NetStream data buffer size in seconds." version=""/>
               <string helpurl="flash.net:NetStreamInfo:dataByteCount:get" name="dataByteCount" object="[flash.net.NetStreamInfo]" playername="" text=".dataByteCount" tiptext="Specifies the total number of bytes of data messages that have arrived in the queue, regardless of how many have been played or flushed." version=""/>
               <string helpurl="flash.net:NetStreamInfo:dataBytesPerSecond:get" name="dataBytesPerSecond" object="[flash.net.NetStreamInfo]" playername="" text=".dataBytesPerSecond" tiptext="Specifies the rate at which the NetStream data buffer is filled in bytes per second." version=""/>
               <string helpurl="flash.net:NetStreamInfo:droppedFrames:get" name="droppedFrames" object="[flash.net.NetStreamInfo]" playername="" text=".droppedFrames" tiptext="Returns the number of video frames dropped in the current NetStream playback session." version=""/>
               <string helpurl="flash.net:NetStreamInfo:maxBytesPerSecond:get" name="maxBytesPerSecond" object="[flash.net.NetStreamInfo]" playername="" text=".maxBytesPerSecond" tiptext="Specifies the maximum rate at which the NetStream buffer is filled in bytes per second." version=""/>
               <string helpurl="flash.net:NetStreamInfo:playbackBytesPerSecond:get" name="playbackBytesPerSecond" object="[flash.net.NetStreamInfo]" playername="" text=".playbackBytesPerSecond" tiptext="Returns the stream playback rate in bytes per second." version=""/>
               <string helpurl="flash.net:NetStreamInfo:videoBufferByteLength:get" name="videoBufferByteLength" object="[flash.net.NetStreamInfo]" playername="" text=".videoBufferByteLength" tiptext="Provides the NetStream video buffer size in bytes." version=""/>
               <string helpurl="flash.net:NetStreamInfo:videoBufferLength:get" name="videoBufferLength" object="[flash.net.NetStreamInfo]" playername="" text=".videoBufferLength" tiptext="Provides NetStream video buffer size in seconds." version=""/>
               <string helpurl="flash.net:NetStreamInfo:videoByteCount:get" name="videoByteCount" object="[flash.net.NetStreamInfo]" playername="" text=".videoByteCount" tiptext="Specifies the total number of video bytes that have arrived in the queue, regardless of how many have been played or flushed." version=""/>
               <string helpurl="flash.net:NetStreamInfo:videoBytesPerSecond:get" name="videoBytesPerSecond" object="[flash.net.NetStreamInfo]" playername="" text=".videoBytesPerSecond" tiptext="Specifies the rate at which the NetStream video buffer is filled in bytes per second." version=""/>
            </folder>
         </folder>
         <folder asAncestors="flash.events:EventDispatcher,Object" helpurl="flash.net:NetStreamPlayOptions" id="[flash.net.NetStreamPlayOptions]" index="true" name="NetStreamPlayOptions" sort="true" tiptext="The NetStreamPlayOptions class specifies the various options that can be passed to the NetStream.play2() method.">
            <folder helpurl="flash.net:NetStreamPlayOptions" id="Methods" name="Methods" tiptext="Methods for class NetStreamPlayOptions">
               <string constructor="true" helpurl="flash.net:NetStreamPlayOptions:NetStreamPlayOptions" name="NetStreamPlayOptions" object="[flash.net.NetStreamPlayOptions]" playername="" text="new NetStreamPlayOptions(%%)" tiptext="Creates a NetStreamPlayOptions object to specify the options that are passed to the NetStream.play2() method." version="4"/>
            </folder>
            <folder helpurl="flash.net:NetStreamPlayOptions" id="Properties" name="Properties" tiptext="Properties for class NetStreamPlayOptions">
               <string helpurl="flash.net:NetStreamPlayOptions:len" name="len" object="[flash.net.NetStreamPlayOptions]" playername="" text=".len" tiptext="The duration of playback, in seconds, for the stream specified in streamName." version=""/>
               <string helpurl="flash.net:NetStreamPlayOptions:offset" name="offset" object="[flash.net.NetStreamPlayOptions]" playername="" text=".offset" tiptext="The time in seconds in the stream playback at which the switch to a new stream should be made." version=""/>
               <string helpurl="flash.net:NetStreamPlayOptions:oldStreamName" name="oldStreamName" object="[flash.net.NetStreamPlayOptions]" playername="" text=".oldStreamName" tiptext="The name of the old stream or the stream to transition from." version=""/>
               <string helpurl="flash.net:NetStreamPlayOptions:start" name="start" object="[flash.net.NetStreamPlayOptions]" playername="" text=".start" tiptext="The start time, in seconds, for streamName." version=""/>
               <string helpurl="flash.net:NetStreamPlayOptions:streamName" name="streamName" object="[flash.net.NetStreamPlayOptions]" playername="" text=".streamName" tiptext="The name of the new stream to transition to or to play." version=""/>
               <string helpurl="flash.net:NetStreamPlayOptions:transition" name="transition" object="[flash.net.NetStreamPlayOptions]" playername="" text=".transition" tiptext="The mode in which streamName is played or transitioned to." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="flash.net:NetStreamPlayTransitions" id="[flash.net.NetStreamPlayTransitions]" index="true" name="NetStreamPlayTransitions" sort="true" tiptext="The NetStreamPlayTransitions class specifies the valid strings that you can use with the NetStreamPlayOptions.transition property.">
            <folder helpurl="flash.net:NetStreamPlayTransitions" id="Properties" name="Properties" tiptext="Properties for class NetStreamPlayTransitions">
               <string constant="true" helpurl="flash.net:NetStreamPlayTransitions:APPEND_AND_WAIT" name="APPEND_AND_WAIT" object="[flash.net.NetStreamPlayTransitions]" playername="" text="NetStreamPlayTransitions.APPEND_AND_WAIT" tiptext="Builds a playlist without starting to play it from the first stream." version=""/>
               <string constant="true" helpurl="flash.net:NetStreamPlayTransitions:APPEND" name="APPEND" object="[flash.net.NetStreamPlayTransitions]" playername="" text="NetStreamPlayTransitions.APPEND" tiptext="Adds the stream to a playlist and begins playback with the first stream." version=""/>
               <string constant="true" helpurl="flash.net:NetStreamPlayTransitions:RESET" name="RESET" object="[flash.net.NetStreamPlayTransitions]" playername="" text="NetStreamPlayTransitions.RESET" tiptext="Clears any previous play calls and plays the specified stream immediately." version=""/>
               <string constant="true" helpurl="flash.net:NetStreamPlayTransitions:RESUME" name="RESUME" object="[flash.net.NetStreamPlayTransitions]" playername="" text="NetStreamPlayTransitions.RESUME" tiptext="Requests data from the new connection starting from the point at which the previous connection ended." version=""/>
               <string constant="true" helpurl="flash.net:NetStreamPlayTransitions:STOP" name="STOP" object="[flash.net.NetStreamPlayTransitions]" playername="" text="NetStreamPlayTransitions.STOP" tiptext="Stops playing the streams in a playlist." version=""/>
               <string constant="true" helpurl="flash.net:NetStreamPlayTransitions:SWAP" name="SWAP" object="[flash.net.NetStreamPlayTransitions]" playername="" text="NetStreamPlayTransitions.SWAP" tiptext="Replaces a content stream with a different content stream and maintains the rest of the playlist." version=""/>
               <string constant="true" helpurl="flash.net:NetStreamPlayTransitions:SWITCH" name="SWITCH" object="[flash.net.NetStreamPlayTransitions]" playername="" text="NetStreamPlayTransitions.SWITCH" tiptext="Switches from playing one stream to another stream, typically with streams of the same content." version=""/>
            </folder>
         </folder>
         <folder helpurl="flash.net" id="Methods" name="Methods" tiptext="Methods for package flash.net">
            <string helpurl="flash.net:getClassByAlias" name="getClassByAlias" playername="" text="getClassByAlias(%aliasName:String%):Class" tiptext="Looks up a class that previously had an alias registered through a call to the registerClassAlias() method." version="4"/>
            <string helpurl="flash.net:navigateToURL" name="navigateToURL" playername="" text="navigateToURL(%request:flash.net:URLRequest[,window:String=null]%):void" tiptext="Opens or replaces a window in the application that contains the Flash Player container (usually a browser)." version="4"/>
            <string helpurl="flash.net:registerClassAlias" name="registerClassAlias" playername="" text="registerClassAlias(%aliasName:String,classObject:Class%):void" tiptext="Preserves the class (type) of an object when the object is encoded in Action Message Format (AMF)." version="4"/>
            <string helpurl="flash.net:sendToURL" name="sendToURL" playername="" text="sendToURL(%request:flash.net:URLRequest%):void" tiptext="Sends a URL request to a server, but ignores any response." version="4"/>
         </folder>
         <folder asAncestors="Object" helpurl="flash.net:ObjectEncoding" id="[flash.net.ObjectEncoding]" index="true" name="ObjectEncoding" sort="true" tiptext="The ObjectEncoding class is used in defining serialization settings in classes that serialize objects (such as FileStream, NetStream, NetConnection, SharedObject, and ByteArray) to work with prior versions of ActionScript.">
            <folder helpurl="flash.net:ObjectEncoding" id="Properties" name="Properties" tiptext="Properties for class ObjectEncoding">
               <string constant="true" helpurl="flash.net:ObjectEncoding:AMF0" name="AMF0" object="[flash.net.ObjectEncoding]" playername="" text="ObjectEncoding.AMF0" tiptext="Specifies that objects are serialized using the Action Message Format for ActionScript 1.0 and 2.0." version=""/>
               <string constant="true" helpurl="flash.net:ObjectEncoding:AMF3" name="AMF3" object="[flash.net.ObjectEncoding]" playername="" text="ObjectEncoding.AMF3" tiptext="Specifies that objects are serialized using the Action Message Format for ActionScript 3.0." version=""/>
               <string constant="true" helpurl="flash.net:ObjectEncoding:DEFAULT" name="DEFAULT" object="[flash.net.ObjectEncoding]" playername="" text="ObjectEncoding.DEFAULT" tiptext="Specifies the default (latest) format for the current runtime (either Flash Player or AIR)." version=""/>
               <string helpurl="flash.net:ObjectEncoding:dynamicPropertyWriter:get" name="dynamicPropertyWriter" object="[flash.net.ObjectEncoding]" playername="" text=".dynamicPropertyWriter" tiptext="Allows greater control over the serialization of dynamic properties of dynamic objects." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="flash.net:Responder" id="[flash.net.Responder]" index="true" name="Responder" sort="true" tiptext="The Responder class provides an object that is used in NetConnection.call() to handle return values from the server related to the success or failure of specific operations.">
            <folder helpurl="flash.net:Responder" id="Methods" name="Methods" tiptext="Methods for class Responder">
               <string constructor="true" helpurl="flash.net:Responder:Responder" name="Responder" object="[flash.net.Responder]" playername="" text="new Responder(%result:Function[,status:Function=null]%)" tiptext="Creates a new Responder object." version="4"/>
            </folder>
         </folder>
         <folder asAncestors="flash.events:EventDispatcher,Object" helpurl="flash.net:SharedObject" id="[flash.net.SharedObject]" index="true" name="SharedObject" sort="true" tiptext="The SharedObject class is used to read and store limited amounts of data on a user's computer or on a server.">
            <folder helpurl="flash.net:SharedObject" id="Methods" name="Methods" tiptext="Methods for class SharedObject">
               <string helpurl="flash.net:SharedObject:clear" name="clear" object="[flash.net.SharedObject]" playername="" text=".clear(%%):void" tiptext="For local shared objects, purges all of the data and deletes the shared object from the disk." version="4"/>
               <string helpurl="flash.net:SharedObject:close" name="close" object="[flash.net.SharedObject]" playername="" text=".close(%%):void" tiptext="Closes the connection between a remote shared object and the server." version="4"/>
               <string helpurl="flash.net:SharedObject:connect" name="connect" object="[flash.net.SharedObject]" playername="" text=".connect(%myConnection:flash.net:NetConnection[,params:String=null]%):void" tiptext="Connects to a remote shared object on a server through a specified NetConnection object." version="4"/>
               <string helpurl="flash.net:SharedObject:flush" name="flush" object="[flash.net.SharedObject]" playername="" text=".flush(%[minDiskSpace:int=0]%):String" tiptext="Immediately writes a locally persistent shared object to a local file." version="4"/>
               <string helpurl="flash.net:SharedObject:getLocal" name="getLocal" object="[flash.net.SharedObject]" playername="" static="true" text="SharedObject.getLocal(%name:String[,localPath:String=null,secure:Boolean=false]%):flash.net:SharedObject" tiptext="Returns a reference to a locally persistent shared object that is only available to the current client." version="4"/>
               <string helpurl="flash.net:SharedObject:getRemote" name="getRemote" object="[flash.net.SharedObject]" playername="" static="true" text="SharedObject.getRemote(%name:String[,remotePath:String=null,persistence:Object=false,secure:Boolean=false]%):flash.net:SharedObject" tiptext="Returns a reference to a shared object on Flash Media Server that multiple clients can access." version="4"/>
               <string helpurl="flash.net:SharedObject:send" name="send" object="[flash.net.SharedObject]" playername="" text=".send(%arguments:restParam%):void" tiptext="Broadcasts a message to all clients connected to a remote shared object, including the client that sent the message." version="4"/>
               <string helpurl="flash.net:SharedObject:setDirty" name="setDirty" object="[flash.net.SharedObject]" playername="" text=".setDirty(%propertyName:String%):void" tiptext="Indicates to the server that the value of a property in the shared object has changed." version="4"/>
               <string helpurl="flash.net:SharedObject:setProperty" name="setProperty" object="[flash.net.SharedObject]" playername="" text=".setProperty(%propertyName:String[,value:Object=null]%):void" tiptext="Updates the value of a property in a shared object and indicates to the server that the value of the property has changed." version="4"/>
            </folder>
            <folder helpurl="flash.net:SharedObject" id="Properties" name="Properties" tiptext="Properties for class SharedObject">
               <string helpurl="flash.net:SharedObject:client:get" name="client" object="[flash.net.SharedObject]" playername="" text=".client" tiptext="Indicates the object on which callback methods are invoked." version=""/>
               <string helpurl="flash.net:SharedObject:data:get" name="data" object="[flash.net.SharedObject]" playername="" text=".data" tiptext="The collection of attributes assigned to the data property of the object; these attributes can be shared and stored." version=""/>
               <string helpurl="flash.net:SharedObject:defaultObjectEncoding:get" name="defaultObjectEncoding" object="[flash.net.SharedObject]" playername="" text=".defaultObjectEncoding" tiptext="The default object encoding (AMF version) for all local shared objects created in the SWF file." version=""/>
               <string helpurl="flash.net:SharedObject:objectEncoding:get" name="objectEncoding" object="[flash.net.SharedObject]" playername="" text=".objectEncoding" tiptext="The object encoding (AMF version) for this shared object." version=""/>
               <string helpurl="flash.net:SharedObject:size:get" name="size" object="[flash.net.SharedObject]" playername="" text=".size" tiptext="The current size of the shared object, in bytes." version=""/>
               <string helpurl="flash.net:SharedObject:fps:set" name="fps" object="[flash.net.SharedObject]" playername="" text=".fps" tiptext="Specifies the number of times per second that a client's changes to a shared object are sent to the server." version=""/>
            </folder>
            <folder helpurl="flash.net:SharedObject" id="Events" name="Events" tiptext="Events for class SharedObject">
               <string helpurl="flash.net:SharedObject_flash.events.SyncEvent.SYNC_sync" name="sync" object="[flash.net.SharedObject]" playername="" text=".addEventListener(%type:String=SyncEvent.SYNC{SyncEvent.SYNC,NetStatusEvent.NET_STATUS,AsyncErrorEvent.ASYNC_ERROR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a remote shared object has been updated by the server." version=""/>
               <string helpurl="flash.net:SharedObject_flash.events.NetStatusEvent.NET_STATUS_netStatus" name="netStatus" object="[flash.net.SharedObject]" playername="" text=".addEventListener(%type:String=NetStatusEvent.NET_STATUS{SyncEvent.SYNC,NetStatusEvent.NET_STATUS,AsyncErrorEvent.ASYNC_ERROR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a SharedObject instance is reporting its status or error condition." version=""/>
               <string helpurl="flash.net:SharedObject_flash.events.AsyncErrorEvent.ASYNC_ERROR_asyncError" name="asyncError" object="[flash.net.SharedObject]" playername="" text=".addEventListener(%type:String=AsyncErrorEvent.ASYNC_ERROR{SyncEvent.SYNC,NetStatusEvent.NET_STATUS,AsyncErrorEvent.ASYNC_ERROR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when an exception is thrown asynchronously -- that is, from native asynchronous code." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="flash.net:SharedObjectFlushStatus" id="[flash.net.SharedObjectFlushStatus]" index="true" name="SharedObjectFlushStatus" sort="true" tiptext="The SharedObjectFlushStatus class provides values for the code returned from a call to the SharedObject.flush() method.">
            <folder helpurl="flash.net:SharedObjectFlushStatus" id="Properties" name="Properties" tiptext="Properties for class SharedObjectFlushStatus">
               <string constant="true" helpurl="flash.net:SharedObjectFlushStatus:FLUSHED" name="FLUSHED" object="[flash.net.SharedObjectFlushStatus]" playername="" text="SharedObjectFlushStatus.FLUSHED" tiptext="Indicates that the flush completed successfully." version=""/>
               <string constant="true" helpurl="flash.net:SharedObjectFlushStatus:PENDING" name="PENDING" object="[flash.net.SharedObjectFlushStatus]" playername="" text="SharedObjectFlushStatus.PENDING" tiptext="Indicates that the user is being prompted to increase disk space for the shared object before the flush can occur." version=""/>
            </folder>
         </folder>
         <folder asAncestors="flash.events:EventDispatcher,Object" helpurl="flash.net:Socket" id="[flash.net.Socket]" index="true" name="Socket" sort="true" tiptext="The Socket class enables code to establish Transport Control Protocol (TCP) socket connections for sending and receiving binary data.">
            <folder helpurl="flash.net:Socket" id="Methods" name="Methods" tiptext="Methods for class Socket">
               <string constructor="true" helpurl="flash.net:Socket:Socket" name="Socket" object="[flash.net.Socket]" playername="" text="new Socket(%[host:String=null,port:int=0]%)" tiptext="Creates a new Socket object." version="4"/>
               <string helpurl="flash.net:Socket:close" name="close" object="[flash.net.Socket]" playername="" text=".close(%%):void" tiptext="Closes the socket." version="4"/>
               <string helpurl="flash.net:Socket:connect" name="connect" object="[flash.net.Socket]" playername="" text=".connect(%host:String,port:int%):void" tiptext="Connects the socket to the specified host and port." version="4"/>
               <string helpurl="flash.net:Socket:flush" name="flush" object="[flash.net.Socket]" playername="" text=".flush(%%):void" tiptext="Flushes any accumulated data in the socket's output buffer." version="4"/>
               <string helpurl="flash.net:Socket:readBoolean" name="readBoolean" object="[flash.net.Socket]" playername="" text=".readBoolean(%%):Boolean" tiptext="Reads a Boolean value from the socket." version="4"/>
               <string helpurl="flash.net:Socket:readByte" name="readByte" object="[flash.net.Socket]" playername="" text=".readByte(%%):int" tiptext="Reads a signed byte from the socket." version="4"/>
               <string helpurl="flash.net:Socket:readBytes" name="readBytes" object="[flash.net.Socket]" playername="" text=".readBytes(%bytes:flash.utils:ByteArray[,offset:uint=0,length:uint=0]%):void" tiptext="Reads the number of data bytes specified by the length parameter from the socket." version="4"/>
               <string helpurl="flash.net:Socket:readDouble" name="readDouble" object="[flash.net.Socket]" playername="" text=".readDouble(%%):Number" tiptext="Reads an IEEE 754 double-precision floating-point number from the socket." version="4"/>
               <string helpurl="flash.net:Socket:readFloat" name="readFloat" object="[flash.net.Socket]" playername="" text=".readFloat(%%):Number" tiptext="Reads an IEEE 754 single-precision floating-point number from the socket." version="4"/>
               <string helpurl="flash.net:Socket:readInt" name="readInt" object="[flash.net.Socket]" playername="" text=".readInt(%%):int" tiptext="Reads a signed 32-bit integer from the socket." version="4"/>
               <string helpurl="flash.net:Socket:readMultiByte" name="readMultiByte" object="[flash.net.Socket]" playername="" text=".readMultiByte(%length:uint,charSet:String%):String" tiptext="Reads a multibyte string from the byte stream, using the specified character set." version="4"/>
               <string helpurl="flash.net:Socket:readObject" name="readObject" object="[flash.net.Socket]" playername="" text=".readObject(%%)" tiptext="Reads an object from the socket, encoded in AMF serialized format." version="4"/>
               <string helpurl="flash.net:Socket:readShort" name="readShort" object="[flash.net.Socket]" playername="" text=".readShort(%%):int" tiptext="Reads a signed 16-bit integer from the socket." version="4"/>
               <string helpurl="flash.net:Socket:readUTFBytes" name="readUTFBytes" object="[flash.net.Socket]" playername="" text=".readUTFBytes(%length:uint%):String" tiptext="Reads the number of UTF-8 data bytes specified by the length parameter from the socket, and returns a string." version="4"/>
               <string helpurl="flash.net:Socket:readUTF" name="readUTF" object="[flash.net.Socket]" playername="" text=".readUTF(%%):String" tiptext="Reads a UTF-8 string from the socket." version="4"/>
               <string helpurl="flash.net:Socket:readUnsignedByte" name="readUnsignedByte" object="[flash.net.Socket]" playername="" text=".readUnsignedByte(%%):uint" tiptext="Reads an unsigned byte from the socket." version="4"/>
               <string helpurl="flash.net:Socket:readUnsignedInt" name="readUnsignedInt" object="[flash.net.Socket]" playername="" text=".readUnsignedInt(%%):uint" tiptext="Reads an unsigned 32-bit integer from the socket." version="4"/>
               <string helpurl="flash.net:Socket:readUnsignedShort" name="readUnsignedShort" object="[flash.net.Socket]" playername="" text=".readUnsignedShort(%%):uint" tiptext="Reads an unsigned 16-bit integer from the socket." version="4"/>
               <string helpurl="flash.net:Socket:writeBoolean" name="writeBoolean" object="[flash.net.Socket]" playername="" text=".writeBoolean(%value:Boolean%):void" tiptext="Writes a Boolean value to the socket." version="4"/>
               <string helpurl="flash.net:Socket:writeByte" name="writeByte" object="[flash.net.Socket]" playername="" text=".writeByte(%value:int%):void" tiptext="Writes a byte to the socket." version="4"/>
               <string helpurl="flash.net:Socket:writeBytes" name="writeBytes" object="[flash.net.Socket]" playername="" text=".writeBytes(%bytes:flash.utils:ByteArray[,offset:uint=0,length:uint=0]%):void" tiptext="Writes a sequence of bytes from the specified byte array." version="4"/>
               <string helpurl="flash.net:Socket:writeDouble" name="writeDouble" object="[flash.net.Socket]" playername="" text=".writeDouble(%value:Number%):void" tiptext="Writes an IEEE 754 double-precision floating-point number to the socket." version="4"/>
               <string helpurl="flash.net:Socket:writeFloat" name="writeFloat" object="[flash.net.Socket]" playername="" text=".writeFloat(%value:Number%):void" tiptext="Writes an IEEE 754 single-precision floating-point number to the socket." version="4"/>
               <string helpurl="flash.net:Socket:writeInt" name="writeInt" object="[flash.net.Socket]" playername="" text=".writeInt(%value:int%):void" tiptext="Writes a 32-bit signed integer to the socket." version="4"/>
               <string helpurl="flash.net:Socket:writeMultiByte" name="writeMultiByte" object="[flash.net.Socket]" playername="" text=".writeMultiByte(%value:String,charSet:String%):void" tiptext="Writes a multibyte string from the byte stream, using the specified character set." version="4"/>
               <string helpurl="flash.net:Socket:writeObject" name="writeObject" object="[flash.net.Socket]" playername="" text=".writeObject(%object:*%):void" tiptext="Write an object to the socket in AMF serialized format." version="4"/>
               <string helpurl="flash.net:Socket:writeShort" name="writeShort" object="[flash.net.Socket]" playername="" text=".writeShort(%value:int%):void" tiptext="Writes a 16-bit integer to the socket." version="4"/>
               <string helpurl="flash.net:Socket:writeUTFBytes" name="writeUTFBytes" object="[flash.net.Socket]" playername="" text=".writeUTFBytes(%value:String%):void" tiptext="Writes a UTF-8 string to the socket." version="4"/>
               <string helpurl="flash.net:Socket:writeUTF" name="writeUTF" object="[flash.net.Socket]" playername="" text=".writeUTF(%value:String%):void" tiptext="Writes the following data to the socket: a 16-bit unsigned integer, which indicates the length of the specified UTF-8 string in bytes, followed by the string itself." version="4"/>
               <string helpurl="flash.net:Socket:writeUnsignedInt" name="writeUnsignedInt" object="[flash.net.Socket]" playername="" text=".writeUnsignedInt(%value:uint%):void" tiptext="Writes a 32-bit unsigned integer to the socket." version="4"/>
            </folder>
            <folder helpurl="flash.net:Socket" id="Properties" name="Properties" tiptext="Properties for class Socket">
               <string helpurl="flash.net:Socket:bytesAvailable:get" name="bytesAvailable" object="[flash.net.Socket]" playername="" text=".bytesAvailable" tiptext="The number of bytes of data available for reading in the input buffer." version=""/>
               <string helpurl="flash.net:Socket:connected:get" name="connected" object="[flash.net.Socket]" playername="" text=".connected" tiptext="Indicates whether this Socket object is currently connected." version=""/>
               <string helpurl="flash.net:Socket:endian:get" name="endian" object="[flash.net.Socket]" playername="" text=".endian" tiptext="Indicates the byte order for the data." version=""/>
               <string helpurl="flash.net:Socket:objectEncoding:get" name="objectEncoding" object="[flash.net.Socket]" playername="" text=".objectEncoding" tiptext="Controls the version of AMF used when writing or reading an object." version=""/>
               <string helpurl="flash.net:Socket:timeout:get" name="timeout" object="[flash.net.Socket]" playername="" text=".timeout" tiptext="Indicates the number of milliseconds to wait for a connection." version=""/>
            </folder>
            <folder helpurl="flash.net:Socket" id="Events" name="Events" tiptext="Events for class Socket">
               <string helpurl="flash.net:Socket_flash.events.SecurityErrorEvent.SECURITY_ERROR_securityError" name="securityError" object="[flash.net.Socket]" playername="" text=".addEventListener(%type:String=SecurityErrorEvent.SECURITY_ERROR{SecurityErrorEvent.SECURITY_ERROR,ProgressEvent.SOCKET_DATA,IOErrorEvent.IO_ERROR,Event.CONNECT,Event.CLOSE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched if a call to Socket.connect() attempts to connect to a server prohibited by the caller's security sandbox or to a port lower than 1024 and no socket policy file exists to permit such a connection." version=""/>
               <string helpurl="flash.net:Socket_flash.events.ProgressEvent.SOCKET_DATA_socketData" name="socketData" object="[flash.net.Socket]" playername="" text=".addEventListener(%type:String=ProgressEvent.SOCKET_DATA{SecurityErrorEvent.SECURITY_ERROR,ProgressEvent.SOCKET_DATA,IOErrorEvent.IO_ERROR,Event.CONNECT,Event.CLOSE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a socket has received data." version=""/>
               <string helpurl="flash.net:Socket_flash.events.IOErrorEvent.IO_ERROR_ioError" name="ioError" object="[flash.net.Socket]" playername="" text=".addEventListener(%type:String=IOErrorEvent.IO_ERROR{SecurityErrorEvent.SECURITY_ERROR,ProgressEvent.SOCKET_DATA,IOErrorEvent.IO_ERROR,Event.CONNECT,Event.CLOSE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when an input/output error occurs that causes a send or load operation to fail." version=""/>
               <string helpurl="flash.net:Socket_flash.events.Event.CONNECT_connect" name="connect" object="[flash.net.Socket]" playername="" text=".addEventListener(%type:String=Event.CONNECT{SecurityErrorEvent.SECURITY_ERROR,ProgressEvent.SOCKET_DATA,IOErrorEvent.IO_ERROR,Event.CONNECT,Event.CLOSE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a network connection has been established." version=""/>
               <string helpurl="flash.net:Socket_flash.events.Event.CLOSE_close" name="close" object="[flash.net.Socket]" playername="" text=".addEventListener(%type:String=Event.CLOSE{SecurityErrorEvent.SECURITY_ERROR,ProgressEvent.SOCKET_DATA,IOErrorEvent.IO_ERROR,Event.CONNECT,Event.CLOSE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the server closes the socket connection." version=""/>
            </folder>
         </folder>
         <folder asAncestors="flash.events:EventDispatcher,Object" helpurl="flash.net:URLLoader" id="[flash.net.URLLoader]" index="true" name="URLLoader" sort="true" tiptext="The URLLoader class downloads data from a URL as text, binary data, or URL-encoded variables.">
            <folder helpurl="flash.net:URLLoader" id="Methods" name="Methods" tiptext="Methods for class URLLoader">
               <string constructor="true" helpurl="flash.net:URLLoader:URLLoader" name="URLLoader" object="[flash.net.URLLoader]" playername="" text="new URLLoader(%[request:flash.net:URLRequest=null]%)" tiptext="Creates a URLLoader object." version="4"/>
               <string helpurl="flash.net:URLLoader:addEventListener" name="addEventListener" object="[flash.net.URLLoader]" playername="" text=".addEventListener(%type:String,listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Registers an event listener object with an EventDispatcher object so that the listener receives notification of an event." version="4"/>
               <string helpurl="flash.net:URLLoader:close" name="close" object="[flash.net.URLLoader]" playername="" text=".close(%%):void" tiptext="Closes the load operation in progress." version="4"/>
               <string helpurl="flash.net:URLLoader:load" name="load" object="[flash.net.URLLoader]" playername="" text=".load(%request:flash.net:URLRequest%):void" tiptext="Sends and loads data from the specified URL." version="4"/>
            </folder>
            <folder helpurl="flash.net:URLLoader" id="Properties" name="Properties" tiptext="Properties for class URLLoader">
               <string helpurl="flash.net:URLLoader:bytesLoaded" name="bytesLoaded" object="[flash.net.URLLoader]" playername="" text=".bytesLoaded" tiptext="Indicates the number of bytes that have been loaded thus far during the load operation." version=""/>
               <string helpurl="flash.net:URLLoader:bytesTotal" name="bytesTotal" object="[flash.net.URLLoader]" playername="" text=".bytesTotal" tiptext="Indicates the total number of bytes in the downloaded data." version=""/>
               <string helpurl="flash.net:URLLoader:dataFormat" name="dataFormat" object="[flash.net.URLLoader]" playername="" text=".dataFormat" tiptext="Controls whether the downloaded data is received as text (URLLoaderDataFormat.TEXT), raw binary data (URLLoaderDataFormat.BINARY), or URL-encoded variables (URLLoaderDataFormat.VARIABLES)." version=""/>
               <string helpurl="flash.net:URLLoader:data" name="data" object="[flash.net.URLLoader]" playername="" text=".data" tiptext="The data received from the load operation." version=""/>
            </folder>
            <folder helpurl="flash.net:URLLoader" id="Events" name="Events" tiptext="Events for class URLLoader">
               <string helpurl="flash.net:URLLoader_flash.events.HTTPStatusEvent.HTTP_RESPONSE_STATUS_httpResponseStatus" name="httpResponseStatus" object="[flash.net.URLLoader]" playername="" text=".addEventListener(%type:String=HTTPStatusEvent.HTTP_RESPONSE_STATUS{HTTPStatusEvent.HTTP_RESPONSE_STATUS,HTTPStatusEvent.HTTP_STATUS,SecurityErrorEvent.SECURITY_ERROR,IOErrorEvent.IO_ERROR,ProgressEvent.PROGRESS,Event.COMPLETE,Event.OPEN},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched if a call to the load() method attempts to access data over HTTP, and Adobe AIR is able to detect and return the status code for the request." version=""/>
               <string helpurl="flash.net:URLLoader_flash.events.HTTPStatusEvent.HTTP_STATUS_httpStatus" name="httpStatus" object="[flash.net.URLLoader]" playername="" text=".addEventListener(%type:String=HTTPStatusEvent.HTTP_STATUS{HTTPStatusEvent.HTTP_RESPONSE_STATUS,HTTPStatusEvent.HTTP_STATUS,SecurityErrorEvent.SECURITY_ERROR,IOErrorEvent.IO_ERROR,ProgressEvent.PROGRESS,Event.COMPLETE,Event.OPEN},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched if a call to URLLoader.load() attempts to access data over HTTP." version=""/>
               <string helpurl="flash.net:URLLoader_flash.events.SecurityErrorEvent.SECURITY_ERROR_securityError" name="securityError" object="[flash.net.URLLoader]" playername="" text=".addEventListener(%type:String=SecurityErrorEvent.SECURITY_ERROR{HTTPStatusEvent.HTTP_RESPONSE_STATUS,HTTPStatusEvent.HTTP_STATUS,SecurityErrorEvent.SECURITY_ERROR,IOErrorEvent.IO_ERROR,ProgressEvent.PROGRESS,Event.COMPLETE,Event.OPEN},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched if a call to URLLoader.load() attempts to load data from a server outside the security sandbox." version=""/>
               <string helpurl="flash.net:URLLoader_flash.events.IOErrorEvent.IO_ERROR_ioError" name="ioError" object="[flash.net.URLLoader]" playername="" text=".addEventListener(%type:String=IOErrorEvent.IO_ERROR{HTTPStatusEvent.HTTP_RESPONSE_STATUS,HTTPStatusEvent.HTTP_STATUS,SecurityErrorEvent.SECURITY_ERROR,IOErrorEvent.IO_ERROR,ProgressEvent.PROGRESS,Event.COMPLETE,Event.OPEN},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched if a call to URLLoader.load() results in a fatal error that terminates the download." version=""/>
               <string helpurl="flash.net:URLLoader_flash.events.ProgressEvent.PROGRESS_progress" name="progress" object="[flash.net.URLLoader]" playername="" text=".addEventListener(%type:String=ProgressEvent.PROGRESS{HTTPStatusEvent.HTTP_RESPONSE_STATUS,HTTPStatusEvent.HTTP_STATUS,SecurityErrorEvent.SECURITY_ERROR,IOErrorEvent.IO_ERROR,ProgressEvent.PROGRESS,Event.COMPLETE,Event.OPEN},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when data is received as the download operation progresses." version=""/>
               <string helpurl="flash.net:URLLoader_flash.events.Event.COMPLETE_complete" name="complete" object="[flash.net.URLLoader]" playername="" text=".addEventListener(%type:String=Event.COMPLETE{HTTPStatusEvent.HTTP_RESPONSE_STATUS,HTTPStatusEvent.HTTP_STATUS,SecurityErrorEvent.SECURITY_ERROR,IOErrorEvent.IO_ERROR,ProgressEvent.PROGRESS,Event.COMPLETE,Event.OPEN},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched after all the received data is decoded and placed in the data property of the URLLoader object." version=""/>
               <string helpurl="flash.net:URLLoader_flash.events.Event.OPEN_open" name="open" object="[flash.net.URLLoader]" playername="" text=".addEventListener(%type:String=Event.OPEN{HTTPStatusEvent.HTTP_RESPONSE_STATUS,HTTPStatusEvent.HTTP_STATUS,SecurityErrorEvent.SECURITY_ERROR,IOErrorEvent.IO_ERROR,ProgressEvent.PROGRESS,Event.COMPLETE,Event.OPEN},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the download operation commences following a call to the URLLoader.load() method." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="flash.net:URLLoaderDataFormat" id="[flash.net.URLLoaderDataFormat]" index="true" name="URLLoaderDataFormat" sort="true" tiptext="The URLLoaderDataFormat class provides values that specify how downloaded data is received.">
            <folder helpurl="flash.net:URLLoaderDataFormat" id="Properties" name="Properties" tiptext="Properties for class URLLoaderDataFormat">
               <string constant="true" helpurl="flash.net:URLLoaderDataFormat:BINARY" name="BINARY" object="[flash.net.URLLoaderDataFormat]" playername="" text="URLLoaderDataFormat.BINARY" tiptext="Specifies that downloaded data is received as raw binary data." version=""/>
               <string constant="true" helpurl="flash.net:URLLoaderDataFormat:TEXT" name="TEXT" object="[flash.net.URLLoaderDataFormat]" playername="" text="URLLoaderDataFormat.TEXT" tiptext="Specifies that downloaded data is received as text." version=""/>
               <string constant="true" helpurl="flash.net:URLLoaderDataFormat:VARIABLES" name="VARIABLES" object="[flash.net.URLLoaderDataFormat]" playername="" text="URLLoaderDataFormat.VARIABLES" tiptext="Specifies that downloaded data is received as URL-encoded variables." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="flash.net:URLRequest" id="[flash.net.URLRequest]" index="true" name="URLRequest" sort="true" tiptext="The URLRequest class captures all of the information in a single HTTP request.">
            <folder helpurl="flash.net:URLRequest" id="Methods" name="Methods" tiptext="Methods for class URLRequest">
               <string constructor="true" helpurl="flash.net:URLRequest:URLRequest" name="URLRequest" object="[flash.net.URLRequest]" playername="" text="new URLRequest(%[url:String=null]%)" tiptext="Creates a URLRequest object." version="4"/>
            </folder>
            <folder helpurl="flash.net:URLRequest" id="Properties" name="Properties" tiptext="Properties for class URLRequest">
               <string helpurl="flash.net:URLRequest:contentType:get" name="contentType" object="[flash.net.URLRequest]" playername="" text=".contentType" tiptext="The MIME content type of the content in the the data property." version=""/>
               <string helpurl="flash.net:URLRequest:data:get" name="data" object="[flash.net.URLRequest]" playername="" text=".data" tiptext="An object containing data to be transmitted with the URL request." version=""/>
               <string helpurl="flash.net:URLRequest:digest:get" name="digest" object="[flash.net.URLRequest]" playername="" text=".digest" tiptext="A string that uniquely identifies the signed Adobe platform component to be stored to (or retrieved from) the Flash Player cache." version=""/>
               <string helpurl="flash.net:URLRequest:followRedirects:get" name="followRedirects" object="[flash.net.URLRequest]" playername="" text=".followRedirects" tiptext="Specifies whether redirects are to be followed (true) or not (false)." version=""/>
               <string helpurl="flash.net:URLRequest:method:get" name="method" object="[flash.net.URLRequest]" playername="" text=".method" tiptext="Controls the HTTP form submission method." version=""/>
               <string helpurl="flash.net:URLRequest:requestHeaders:get" name="requestHeaders" object="[flash.net.URLRequest]" playername="" text=".requestHeaders" tiptext="The array of HTTP request headers to be appended to the HTTP request." version=""/>
               <string helpurl="flash.net:URLRequest:url:get" name="url" object="[flash.net.URLRequest]" playername="" text=".url" tiptext="The URL to be requested." version=""/>
               <string helpurl="flash.net:URLRequest:userAgent:get" name="userAgent" object="[flash.net.URLRequest]" playername="" text=".userAgent" tiptext="Specifies the user-agent string to be used in the HTTP request." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="flash.net:URLRequestDefaults" id="[flash.net.URLRequestDefaults]" index="true" name="URLRequestDefaults" sort="true" tiptext="The URLRequestDefaults class includes static properties that you can set to define default values for the properties of the URLRequest class.">
            <folder helpurl="flash.net:URLRequestDefaults" id="Methods" name="Methods" tiptext="Methods for class URLRequestDefaults">
               <string helpurl="flash.net:URLRequestDefaults:setLoginCredentialsForHost" name="setLoginCredentialsForHost" object="[flash.net.URLRequestDefaults]" playername="" static="true" text="URLRequestDefaults.setLoginCredentialsForHost(%hostname:String,user:String,password:String%)" tiptext="Sets default user and password credentials for a selected host." version="4"/>
            </folder>
            <folder helpurl="flash.net:URLRequestDefaults" id="Properties" name="Properties" tiptext="Properties for class URLRequestDefaults">
               <string helpurl="flash.net:URLRequestDefaults:authenticate:get" name="authenticate" object="[flash.net.URLRequestDefaults]" playername="" text=".authenticate" tiptext="The default setting for the authenticate property of URLRequest objects." version=""/>
               <string helpurl="flash.net:URLRequestDefaults:cacheResponse:get" name="cacheResponse" object="[flash.net.URLRequestDefaults]" playername="" text=".cacheResponse" tiptext="The default setting for the cacheResponse property of URLRequest objects." version=""/>
               <string helpurl="flash.net:URLRequestDefaults:followRedirects:get" name="followRedirects" object="[flash.net.URLRequestDefaults]" playername="" text=".followRedirects" tiptext="The default setting for the followRedirects property of URLRequest objects." version=""/>
               <string helpurl="flash.net:URLRequestDefaults:manageCookies:get" name="manageCookies" object="[flash.net.URLRequestDefaults]" playername="" text=".manageCookies" tiptext="The default setting for the manageCookies property of URLRequest objects." version=""/>
               <string helpurl="flash.net:URLRequestDefaults:useCache:get" name="useCache" object="[flash.net.URLRequestDefaults]" playername="" text=".useCache" tiptext="The default setting for the useCache property of URLRequest objects." version=""/>
               <string helpurl="flash.net:URLRequestDefaults:userAgent:get" name="userAgent" object="[flash.net.URLRequestDefaults]" playername="" text=".userAgent" tiptext="The default setting for the userAgent property of URLRequest objects." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="flash.net:URLRequestHeader" id="[flash.net.URLRequestHeader]" index="true" name="URLRequestHeader" sort="true" tiptext="A URLRequestHeader object encapsulates a single HTTP request header and consists of a name/value pair.">
            <folder helpurl="flash.net:URLRequestHeader" id="Methods" name="Methods" tiptext="Methods for class URLRequestHeader">
               <string constructor="true" helpurl="flash.net:URLRequestHeader:URLRequestHeader" name="URLRequestHeader" object="[flash.net.URLRequestHeader]" playername="" text="new URLRequestHeader(%name:String,value:String%)" tiptext="Creates a new URLRequestHeader object that encapsulates a single HTTP request header." version="4"/>
            </folder>
            <folder helpurl="flash.net:URLRequestHeader" id="Properties" name="Properties" tiptext="Properties for class URLRequestHeader">
               <string helpurl="flash.net:URLRequestHeader:name" name="name" object="[flash.net.URLRequestHeader]" playername="" text=".name" tiptext="An HTTP request header name (such as Content-Type or SOAPAction)." version=""/>
               <string helpurl="flash.net:URLRequestHeader:value" name="value" object="[flash.net.URLRequestHeader]" playername="" text=".value" tiptext="The value associated with the name property (such as text/plain)." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="flash.net:URLRequestMethod" id="[flash.net.URLRequestMethod]" index="true" name="URLRequestMethod" sort="true" tiptext="The URLRequestMethod class provides values that specify whether the URLRequest object should use the POST method or the GET method when sending data to a server.">
            <folder helpurl="flash.net:URLRequestMethod" id="Properties" name="Properties" tiptext="Properties for class URLRequestMethod">
               <string constant="true" helpurl="flash.net:URLRequestMethod:GET" name="GET" object="[flash.net.URLRequestMethod]" playername="" text="URLRequestMethod.GET" tiptext="Specifies that the URLRequest object is a GET." version=""/>
               <string constant="true" helpurl="flash.net:URLRequestMethod:POST" name="POST" object="[flash.net.URLRequestMethod]" playername="" text="URLRequestMethod.POST" tiptext="Specifies that the URLRequest object is a POST." version=""/>
            </folder>
         </folder>
         <folder asAncestors="flash.events:EventDispatcher,Object" helpurl="flash.net:URLStream" id="[flash.net.URLStream]" index="true" name="URLStream" sort="true" tiptext="The URLStream class provides low-level access to downloading URLs.">
            <folder helpurl="flash.net:URLStream" id="Methods" name="Methods" tiptext="Methods for class URLStream">
               <string helpurl="flash.net:URLStream:close" name="close" object="[flash.net.URLStream]" playername="" text=".close(%%):void" tiptext="Immediately closes the stream and cancels the download operation." version="4"/>
               <string helpurl="flash.net:URLStream:load" name="load" object="[flash.net.URLStream]" playername="" text=".load(%request:flash.net:URLRequest%):void" tiptext="Begins downloading the URL specified in the request parameter." version="4"/>
               <string helpurl="flash.net:URLStream:readBoolean" name="readBoolean" object="[flash.net.URLStream]" playername="" text=".readBoolean(%%):Boolean" tiptext="Reads a Boolean value from the stream." version="4"/>
               <string helpurl="flash.net:URLStream:readByte" name="readByte" object="[flash.net.URLStream]" playername="" text=".readByte(%%):int" tiptext="Reads a signed byte from the stream." version="4"/>
               <string helpurl="flash.net:URLStream:readBytes" name="readBytes" object="[flash.net.URLStream]" playername="" text=".readBytes(%bytes:flash.utils:ByteArray[,offset:uint=0,length:uint=0]%):void" tiptext="Reads length bytes of data from the stream." version="4"/>
               <string helpurl="flash.net:URLStream:readDouble" name="readDouble" object="[flash.net.URLStream]" playername="" text=".readDouble(%%):Number" tiptext="Reads an IEEE 754 double-precision floating-point number from the stream." version="4"/>
               <string helpurl="flash.net:URLStream:readFloat" name="readFloat" object="[flash.net.URLStream]" playername="" text=".readFloat(%%):Number" tiptext="Reads an IEEE 754 single-precision floating-point number from the stream." version="4"/>
               <string helpurl="flash.net:URLStream:readInt" name="readInt" object="[flash.net.URLStream]" playername="" text=".readInt(%%):int" tiptext="Reads a signed 32-bit integer from the stream." version="4"/>
               <string helpurl="flash.net:URLStream:readMultiByte" name="readMultiByte" object="[flash.net.URLStream]" playername="" text=".readMultiByte(%length:uint,charSet:String%):String" tiptext="Reads a multibyte string of specified length from the byte stream using the specified character set." version="4"/>
               <string helpurl="flash.net:URLStream:readObject" name="readObject" object="[flash.net.URLStream]" playername="" text=".readObject(%%)" tiptext="Reads an object from the socket, encoded in Action Message Format (AMF)." version="4"/>
               <string helpurl="flash.net:URLStream:readShort" name="readShort" object="[flash.net.URLStream]" playername="" text=".readShort(%%):int" tiptext="Reads a signed 16-bit integer from the stream." version="4"/>
               <string helpurl="flash.net:URLStream:readUTFBytes" name="readUTFBytes" object="[flash.net.URLStream]" playername="" text=".readUTFBytes(%length:uint%):String" tiptext="Reads a sequence of length UTF-8 bytes from the stream, and returns a string." version="4"/>
               <string helpurl="flash.net:URLStream:readUTF" name="readUTF" object="[flash.net.URLStream]" playername="" text=".readUTF(%%):String" tiptext="Reads a UTF-8 string from the stream." version="4"/>
               <string helpurl="flash.net:URLStream:readUnsignedByte" name="readUnsignedByte" object="[flash.net.URLStream]" playername="" text=".readUnsignedByte(%%):uint" tiptext="Reads an unsigned byte from the stream." version="4"/>
               <string helpurl="flash.net:URLStream:readUnsignedInt" name="readUnsignedInt" object="[flash.net.URLStream]" playername="" text=".readUnsignedInt(%%):uint" tiptext="Reads an unsigned 32-bit integer from the stream." version="4"/>
               <string helpurl="flash.net:URLStream:readUnsignedShort" name="readUnsignedShort" object="[flash.net.URLStream]" playername="" text=".readUnsignedShort(%%):uint" tiptext="Reads an unsigned 16-bit integer from the stream." version="4"/>
            </folder>
            <folder helpurl="flash.net:URLStream" id="Properties" name="Properties" tiptext="Properties for class URLStream">
               <string helpurl="flash.net:URLStream:bytesAvailable:get" name="bytesAvailable" object="[flash.net.URLStream]" playername="" text=".bytesAvailable" tiptext="Returns the number of bytes of data available for reading in the input buffer." version=""/>
               <string helpurl="flash.net:URLStream:connected:get" name="connected" object="[flash.net.URLStream]" playername="" text=".connected" tiptext="Indicates whether this URLStream object is currently connected." version=""/>
               <string helpurl="flash.net:URLStream:endian:get" name="endian" object="[flash.net.URLStream]" playername="" text=".endian" tiptext="Indicates the byte order for the data." version=""/>
               <string helpurl="flash.net:URLStream:objectEncoding:get" name="objectEncoding" object="[flash.net.URLStream]" playername="" text=".objectEncoding" tiptext="Controls the version of Action Message Format (AMF) used when writing or reading an object." version=""/>
            </folder>
            <folder helpurl="flash.net:URLStream" id="Events" name="Events" tiptext="Events for class URLStream">
               <string helpurl="flash.net:URLStream_flash.events.ProgressEvent.PROGRESS_progress" name="progress" object="[flash.net.URLStream]" playername="" text=".addEventListener(%type:String=ProgressEvent.PROGRESS{ProgressEvent.PROGRESS,Event.OPEN,IOErrorEvent.IO_ERROR,HTTPStatusEvent.HTTP_RESPONSE_STATUS,HTTPStatusEvent.HTTP_STATUS,SecurityErrorEvent.SECURITY_ERROR,Event.COMPLETE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when data is received as the download operation progresses." version=""/>
               <string helpurl="flash.net:URLStream_flash.events.Event.OPEN_open" name="open" object="[flash.net.URLStream]" playername="" text=".addEventListener(%type:String=Event.OPEN{ProgressEvent.PROGRESS,Event.OPEN,IOErrorEvent.IO_ERROR,HTTPStatusEvent.HTTP_RESPONSE_STATUS,HTTPStatusEvent.HTTP_STATUS,SecurityErrorEvent.SECURITY_ERROR,Event.COMPLETE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a load operation starts." version=""/>
               <string helpurl="flash.net:URLStream_flash.events.IOErrorEvent.IO_ERROR_ioError" name="ioError" object="[flash.net.URLStream]" playername="" text=".addEventListener(%type:String=IOErrorEvent.IO_ERROR{ProgressEvent.PROGRESS,Event.OPEN,IOErrorEvent.IO_ERROR,HTTPStatusEvent.HTTP_RESPONSE_STATUS,HTTPStatusEvent.HTTP_STATUS,SecurityErrorEvent.SECURITY_ERROR,Event.COMPLETE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when an input/output error occurs that causes a load operation to fail." version=""/>
               <string helpurl="flash.net:URLStream_flash.events.HTTPStatusEvent.HTTP_RESPONSE_STATUS_httpResponseStatus" name="httpResponseStatus" object="[flash.net.URLStream]" playername="" text=".addEventListener(%type:String=HTTPStatusEvent.HTTP_RESPONSE_STATUS{ProgressEvent.PROGRESS,Event.OPEN,IOErrorEvent.IO_ERROR,HTTPStatusEvent.HTTP_RESPONSE_STATUS,HTTPStatusEvent.HTTP_STATUS,SecurityErrorEvent.SECURITY_ERROR,Event.COMPLETE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched if a call to the URLStream.load() method attempts to access data over HTTP and Adobe AIR is able to detect and return the status code for the request." version=""/>
               <string helpurl="flash.net:URLStream_flash.events.HTTPStatusEvent.HTTP_STATUS_httpStatus" name="httpStatus" object="[flash.net.URLStream]" playername="" text=".addEventListener(%type:String=HTTPStatusEvent.HTTP_STATUS{ProgressEvent.PROGRESS,Event.OPEN,IOErrorEvent.IO_ERROR,HTTPStatusEvent.HTTP_RESPONSE_STATUS,HTTPStatusEvent.HTTP_STATUS,SecurityErrorEvent.SECURITY_ERROR,Event.COMPLETE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched if a call to URLStream.load() attempts to access data over HTTP, and Flash Player or  Adobe AIR is able to detect and return the status code for the request." version=""/>
               <string helpurl="flash.net:URLStream_flash.events.SecurityErrorEvent.SECURITY_ERROR_securityError" name="securityError" object="[flash.net.URLStream]" playername="" text=".addEventListener(%type:String=SecurityErrorEvent.SECURITY_ERROR{ProgressEvent.PROGRESS,Event.OPEN,IOErrorEvent.IO_ERROR,HTTPStatusEvent.HTTP_RESPONSE_STATUS,HTTPStatusEvent.HTTP_STATUS,SecurityErrorEvent.SECURITY_ERROR,Event.COMPLETE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched if a call to URLStream.load() attempts to load data from a server outside the security sandbox." version=""/>
               <string helpurl="flash.net:URLStream_flash.events.Event.COMPLETE_complete" name="complete" object="[flash.net.URLStream]" playername="" text=".addEventListener(%type:String=Event.COMPLETE{ProgressEvent.PROGRESS,Event.OPEN,IOErrorEvent.IO_ERROR,HTTPStatusEvent.HTTP_RESPONSE_STATUS,HTTPStatusEvent.HTTP_STATUS,SecurityErrorEvent.SECURITY_ERROR,Event.COMPLETE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when data has loaded successfully." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="flash.net:URLVariables" id="[flash.net.URLVariables]" index="true" name="URLVariables" sort="true" tiptext="The URLVariables class allows you to transfer variables between an application and a server.">
            <folder helpurl="flash.net:URLVariables" id="Methods" name="Methods" tiptext="Methods for class URLVariables">
               <string constructor="true" helpurl="flash.net:URLVariables:URLVariables" name="URLVariables" object="[flash.net.URLVariables]" playername="" text="new URLVariables(%[source:String=null]%)" tiptext="Creates a new URLVariables object." version="4"/>
               <string helpurl="flash.net:URLVariables:decode" name="decode" object="[flash.net.URLVariables]" playername="" text=".decode(%source:String%):void" tiptext="Converts the variable string to properties of the specified URLVariables object." version="4"/>
               <string helpurl="flash.net:URLVariables:toString" name="toString" object="[flash.net.URLVariables]" playername="" text=".toString(%%):String" tiptext="Returns a string containing all enumerable variables, in the MIME content encoding application/x-www-form-urlencoded." version="4"/>
            </folder>
         </folder>
         <folder asAncestors="flash.events:EventDispatcher,Object" helpurl="flash.net:XMLSocket" id="[flash.net.XMLSocket]" index="true" name="XMLSocket" sort="true" tiptext="The XMLSocket class implements client sockets that let the Flash Player or AIR application communicate with a server computer identified by an IP address or domain name.">
            <folder helpurl="flash.net:XMLSocket" id="Methods" name="Methods" tiptext="Methods for class XMLSocket">
               <string constructor="true" helpurl="flash.net:XMLSocket:XMLSocket" name="XMLSocket" object="[flash.net.XMLSocket]" playername="" text="new XMLSocket(%[host:String=null,port:int=0]%):void" tiptext="Creates a new XMLSocket object." version="4"/>
               <string helpurl="flash.net:XMLSocket:close" name="close" object="[flash.net.XMLSocket]" playername="" text=".close(%%):void" tiptext="Closes the connection specified by the XMLSocket object." version="4"/>
               <string helpurl="flash.net:XMLSocket:connect" name="connect" object="[flash.net.XMLSocket]" playername="" text=".connect(%host:String,port:int%):void" tiptext="Establishes a connection to the specified Internet host using the specified TCP port." version="4"/>
               <string helpurl="flash.net:XMLSocket:send" name="send" object="[flash.net.XMLSocket]" playername="" text=".send(%object:*%):void" tiptext="Converts the XML object or data specified in the object parameter to a string and transmits it to the server, followed by a zero (0) byte." version="4"/>
            </folder>
            <folder helpurl="flash.net:XMLSocket" id="Properties" name="Properties" tiptext="Properties for class XMLSocket">
               <string helpurl="flash.net:XMLSocket:connected:get" name="connected" object="[flash.net.XMLSocket]" playername="" text=".connected" tiptext="Indicates whether this XMLSocket object is currently connected." version=""/>
               <string helpurl="flash.net:XMLSocket:timeout:get" name="timeout" object="[flash.net.XMLSocket]" playername="" text=".timeout" tiptext="Indicates the number of milliseconds to wait for a connection." version=""/>
            </folder>
            <folder helpurl="flash.net:XMLSocket" id="Events" name="Events" tiptext="Events for class XMLSocket">
               <string helpurl="flash.net:XMLSocket_flash.events.SecurityErrorEvent.SECURITY_ERROR_securityError" name="securityError" object="[flash.net.XMLSocket]" playername="" text=".addEventListener(%type:String=SecurityErrorEvent.SECURITY_ERROR{SecurityErrorEvent.SECURITY_ERROR,IOErrorEvent.IO_ERROR,DataEvent.DATA,Event.CONNECT,Event.CLOSE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched if a call to the XMLSocket.connect() method attempts to connect either to a server outside the caller's security sandbox or to a port lower than 1024." version=""/>
               <string helpurl="flash.net:XMLSocket_flash.events.IOErrorEvent.IO_ERROR_ioError" name="ioError" object="[flash.net.XMLSocket]" playername="" text=".addEventListener(%type:String=IOErrorEvent.IO_ERROR{SecurityErrorEvent.SECURITY_ERROR,IOErrorEvent.IO_ERROR,DataEvent.DATA,Event.CONNECT,Event.CLOSE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when an input/output error occurs that causes a send or receive operation to fail." version=""/>
               <string helpurl="flash.net:XMLSocket_flash.events.DataEvent.DATA_data" name="data" object="[flash.net.XMLSocket]" playername="" text=".addEventListener(%type:String=DataEvent.DATA{SecurityErrorEvent.SECURITY_ERROR,IOErrorEvent.IO_ERROR,DataEvent.DATA,Event.CONNECT,Event.CLOSE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched after raw data is sent or received." version=""/>
               <string helpurl="flash.net:XMLSocket_flash.events.Event.CONNECT_connect" name="connect" object="[flash.net.XMLSocket]" playername="" text=".addEventListener(%type:String=Event.CONNECT{SecurityErrorEvent.SECURITY_ERROR,IOErrorEvent.IO_ERROR,DataEvent.DATA,Event.CONNECT,Event.CLOSE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched after a successful call to the XMLSocket.connect() method." version=""/>
               <string helpurl="flash.net:XMLSocket_flash.events.Event.CLOSE_close" name="close" object="[flash.net.XMLSocket]" playername="" text=".addEventListener(%type:String=Event.CLOSE{SecurityErrorEvent.SECURITY_ERROR,IOErrorEvent.IO_ERROR,DataEvent.DATA,Event.CONNECT,Event.CLOSE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the server closes the socket connection." version=""/>
            </folder>
         </folder>
      </folder>
      <folder helpurl="flash.sensors" id="flash.sensors" name="flash.sensors" sort="true" tiptext="Classes for package flash.sensors">
         <folder asAncestors="flash.events:EventDispatcher,Object" helpurl="flash.sensors:Accelerometer" id="[flash.sensors.Accelerometer]" index="true" name="Accelerometer" sort="true" tiptext="The Accelerometer class dispatches events based on activity detected by the device's motion sensor.">
            <folder helpurl="flash.sensors:Accelerometer" id="Methods" name="Methods" tiptext="Methods for class Accelerometer">
               <string constructor="true" helpurl="flash.sensors:Accelerometer:Accelerometer" name="Accelerometer" object="[flash.sensors.Accelerometer]" playername="" text="new Accelerometer(%%)" tiptext="Creates a new Accelerometer instance." version="4"/>
               <string helpurl="flash.sensors:Accelerometer:setRequestedUpdateInterval" name="setRequestedUpdateInterval" object="[flash.sensors.Accelerometer]" playername="" text=".setRequestedUpdateInterval(%interval:Number%):void" tiptext="The setRequestedUpdateInterval method is used to set the desired time interval for updates." version="4"/>
            </folder>
            <folder helpurl="flash.sensors:Accelerometer" id="Properties" name="Properties" tiptext="Properties for class Accelerometer">
               <string helpurl="flash.sensors:Accelerometer:isSupported:get" name="isSupported" object="[flash.sensors.Accelerometer]" playername="" text=".isSupported" tiptext="The isSupported property is set to true if the accelerometer sensor is available on the device, otherwise it is set to false." version=""/>
            </folder>
            <folder helpurl="flash.sensors:Accelerometer" id="Events" name="Events" tiptext="Events for class Accelerometer">
               <string helpurl="flash.sensors:Accelerometer_flash.events.AccelerometerEvent.UPDATE_update" name="update" object="[flash.sensors.Accelerometer]" playername="" text=".addEventListener(%type:String=AccelerometerEvent.UPDATE{AccelerometerEvent.UPDATE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="The update event is dispatched in response to updates from the accelerometer sensor." version=""/>
            </folder>
         </folder>
         <folder asAncestors="flash.events:EventDispatcher,Object" helpurl="flash.sensors:Geolocation" id="[flash.sensors.Geolocation]" index="true" name="Geolocation" sort="true" tiptext="The Geolocation class dispatches events in response to the device's location sensor.">
            <folder helpurl="flash.sensors:Geolocation" id="Methods" name="Methods" tiptext="Methods for class Geolocation">
               <string constructor="true" helpurl="flash.sensors:Geolocation:Geolocation" name="Geolocation" object="[flash.sensors.Geolocation]" playername="" text="new Geolocation(%%)" tiptext="Creates a new Geolocation instance." version="4"/>
               <string helpurl="flash.sensors:Geolocation:setRequestedUpdateInterval" name="setRequestedUpdateInterval" object="[flash.sensors.Geolocation]" playername="" text=".setRequestedUpdateInterval(%interval:Number%):void" tiptext="Used to set the time interval for updates, in milliseconds." version="4"/>
            </folder>
            <folder helpurl="flash.sensors:Geolocation" id="Properties" name="Properties" tiptext="Properties for class Geolocation">
               <string helpurl="flash.sensors:Geolocation:isSupported:get" name="isSupported" object="[flash.sensors.Geolocation]" playername="" text=".isSupported" tiptext="Whether a location sensor is available on the device (true); otherwise false." version=""/>
            </folder>
            <folder helpurl="flash.sensors:Geolocation" id="Events" name="Events" tiptext="Events for class Geolocation">
               <string helpurl="flash.sensors:Geolocation__status" name="status" object="[flash.sensors.Geolocation]" playername="" text=".addEventListener(%type:String=StatusEvent.StatusEvent{StatusEvent.StatusEvent,GeolocationEvent.GeolocationEvent},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="The Geolocation object dispatches status events when the user changes access to the location sensor." version=""/>
               <string helpurl="flash.sensors:Geolocation__update" name="update" object="[flash.sensors.Geolocation]" playername="" text=".addEventListener(%type:String=GeolocationEvent.GeolocationEvent{StatusEvent.StatusEvent,GeolocationEvent.GeolocationEvent},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="The update event is dispatched in response to updates from the location sensor." version=""/>
            </folder>
         </folder>
      </folder>
      <folder helpurl="flash.system" id="flash.system" name="flash.system" sort="true" tiptext="Classes for package flash.system">
         <folder asAncestors="Object" helpurl="flash.system:ApplicationDomain" id="[flash.system.ApplicationDomain]" index="true" name="ApplicationDomain" sort="true" tiptext="The ApplicationDomain class is a container for discrete groups of class definitions.">
            <folder helpurl="flash.system:ApplicationDomain" id="Methods" name="Methods" tiptext="Methods for class ApplicationDomain">
               <string constructor="true" helpurl="flash.system:ApplicationDomain:ApplicationDomain" name="ApplicationDomain" object="[flash.system.ApplicationDomain]" playername="" text="new ApplicationDomain(%[parentDomain:flash.system:ApplicationDomain=null]%)" tiptext="Creates a new application domain." version="4"/>
               <string helpurl="flash.system:ApplicationDomain:getDefinition" name="getDefinition" object="[flash.system.ApplicationDomain]" playername="" text=".getDefinition(%name:String%):Object" tiptext="Gets a public definition from the specified application domain." version="4"/>
               <string helpurl="flash.system:ApplicationDomain:hasDefinition" name="hasDefinition" object="[flash.system.ApplicationDomain]" playername="" text=".hasDefinition(%name:String%):Boolean" tiptext="Checks to see if a public definition exists within the specified application domain." version="4"/>
            </folder>
            <folder helpurl="flash.system:ApplicationDomain" id="Properties" name="Properties" tiptext="Properties for class ApplicationDomain">
               <string helpurl="flash.system:ApplicationDomain:MIN_DOMAIN_MEMORY_LENGTH:get" name="MIN_DOMAIN_MEMORY_LENGTH" object="[flash.system.ApplicationDomain]" playername="" text=".MIN_DOMAIN_MEMORY_LENGTH" tiptext="Gets the minimum memory object length required to be used as ApplicationDomain.domainMemory." version=""/>
               <string helpurl="flash.system:ApplicationDomain:currentDomain:get" name="currentDomain" object="[flash.system.ApplicationDomain]" playername="" text=".currentDomain" tiptext="Gets the current application domain in which your code is executing." version=""/>
               <string helpurl="flash.system:ApplicationDomain:domainMemory:get" name="domainMemory" object="[flash.system.ApplicationDomain]" playername="" text=".domainMemory" tiptext="Gets and sets the object on which domain-global memory operations will operate within this ApplicationDomain." version=""/>
               <string helpurl="flash.system:ApplicationDomain:parentDomain:get" name="parentDomain" object="[flash.system.ApplicationDomain]" playername="" text=".parentDomain" tiptext="Gets the parent domain of this application domain." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="flash.system:Capabilities" id="[flash.system.Capabilities]" index="true" name="Capabilities" sort="true" tiptext="The Capabilities class provides properties that describe the system and runtime that are hosting the application.">
            <folder helpurl="flash.system:Capabilities" id="Properties" name="Properties" tiptext="Properties for class Capabilities">
               <string helpurl="flash.system:Capabilities:avHardwareDisable:get" name="avHardwareDisable" object="[flash.system.Capabilities]" playername="" text=".avHardwareDisable" tiptext="Specifies whether access to the user's camera and microphone has been administratively prohibited (true) or allowed (false)." version=""/>
               <string helpurl="flash.system:Capabilities:hasAccessibility:get" name="hasAccessibility" object="[flash.system.Capabilities]" playername="" text=".hasAccessibility" tiptext="Specifies whether the system supports (true) or does not support (false) communication with accessibility aids." version=""/>
               <string helpurl="flash.system:Capabilities:hasAudioEncoder:get" name="hasAudioEncoder" object="[flash.system.Capabilities]" playername="" text=".hasAudioEncoder" tiptext="Specifies whether the system can (true) or cannot (false) encode an audio stream, such as that coming from a microphone." version=""/>
               <string helpurl="flash.system:Capabilities:hasAudio:get" name="hasAudio" object="[flash.system.Capabilities]" playername="" text=".hasAudio" tiptext="Specifies whether the system has audio capabilities." version=""/>
               <string helpurl="flash.system:Capabilities:hasEmbeddedVideo:get" name="hasEmbeddedVideo" object="[flash.system.Capabilities]" playername="" text=".hasEmbeddedVideo" tiptext="Specifies whether the system supports (true) or does not support (false) embedded video." version=""/>
               <string helpurl="flash.system:Capabilities:hasIME:get" name="hasIME" object="[flash.system.Capabilities]" playername="" text=".hasIME" tiptext="Specifies whether the system does (true) or does not (false) have an input method editor (IME) installed." version=""/>
               <string helpurl="flash.system:Capabilities:hasMP3:get" name="hasMP3" object="[flash.system.Capabilities]" playername="" text=".hasMP3" tiptext="Specifies whether the system does (true) or does not (false) have an MP3 decoder." version=""/>
               <string helpurl="flash.system:Capabilities:hasPrinting:get" name="hasPrinting" object="[flash.system.Capabilities]" playername="" text=".hasPrinting" tiptext="Specifies whether the system does (true) or does not (false) support printing." version=""/>
               <string helpurl="flash.system:Capabilities:hasScreenBroadcast:get" name="hasScreenBroadcast" object="[flash.system.Capabilities]" playername="" text=".hasScreenBroadcast" tiptext="Specifies whether the system does (true) or does not (false) support the development of screen broadcast applications to be run through Flash Media Server." version=""/>
               <string helpurl="flash.system:Capabilities:hasScreenPlayback:get" name="hasScreenPlayback" object="[flash.system.Capabilities]" playername="" text=".hasScreenPlayback" tiptext="Specifies whether the system does (true) or does not (false) support the playback of screen broadcast applications that are being run through Flash Media Server." version=""/>
               <string helpurl="flash.system:Capabilities:hasStreamingAudio:get" name="hasStreamingAudio" object="[flash.system.Capabilities]" playername="" text=".hasStreamingAudio" tiptext="Specifies whether the system can (true) or cannot (false) play streaming audio." version=""/>
               <string helpurl="flash.system:Capabilities:hasStreamingVideo:get" name="hasStreamingVideo" object="[flash.system.Capabilities]" playername="" text=".hasStreamingVideo" tiptext="Specifies whether the system can (true) or cannot (false) play streaming video." version=""/>
               <string helpurl="flash.system:Capabilities:hasTLS:get" name="hasTLS" object="[flash.system.Capabilities]" playername="" text=".hasTLS" tiptext="Specifies whether the system supports native SSL sockets through NetConnection (true) or does not (false)." version=""/>
               <string helpurl="flash.system:Capabilities:hasVideoEncoder:get" name="hasVideoEncoder" object="[flash.system.Capabilities]" playername="" text=".hasVideoEncoder" tiptext="Specifies whether the system can (true) or cannot (false) encode a video stream, such as that coming from a web camera." version=""/>
               <string helpurl="flash.system:Capabilities:isDebugger:get" name="isDebugger" object="[flash.system.Capabilities]" playername="" text=".isDebugger" tiptext="Specifies whether the system is a special debugging version (true) or an officially released version (false)." version=""/>
               <string helpurl="flash.system:Capabilities:isEmbeddedInAcrobat:get" name="isEmbeddedInAcrobat" object="[flash.system.Capabilities]" playername="" text=".isEmbeddedInAcrobat" tiptext="Specifies whether the Flash runtime is embedded in a PDF file that is open in Acrobat 9.0 or higher (true) or not (false)." version=""/>
               <string helpurl="flash.system:Capabilities:language:get" name="language" object="[flash.system.Capabilities]" playername="" text=".language" tiptext="Specifies the language code of the system on which the content is running." version=""/>
               <string helpurl="flash.system:Capabilities:localFileReadDisable:get" name="localFileReadDisable" object="[flash.system.Capabilities]" playername="" text=".localFileReadDisable" tiptext="Specifies whether read access to the user's hard disk has been administratively prohibited (true) or allowed (false)." version=""/>
               <string helpurl="flash.system:Capabilities:manufacturer:get" name="manufacturer" object="[flash.system.Capabilities]" playername="" text=".manufacturer" tiptext="Specifies the manufacturer of the running version of Flash Player or  the AIR runtime, in the format &quot;Adobe &lt;em&gt;OSName&quot;." version=""/>
               <string helpurl="flash.system:Capabilities:maxLevelIDC:get" name="maxLevelIDC" object="[flash.system.Capabilities]" playername="" text=".maxLevelIDC" tiptext="Retrieves the highest H.264 Level IDC that the client hardware supports." version=""/>
               <string helpurl="flash.system:Capabilities:os:get" name="os" object="[flash.system.Capabilities]" playername="" text=".os" tiptext="Specifies the current operating system." version=""/>
               <string helpurl="flash.system:Capabilities:pixelAspectRatio:get" name="pixelAspectRatio" object="[flash.system.Capabilities]" playername="" text=".pixelAspectRatio" tiptext="Specifies the pixel aspect ratio of the screen." version=""/>
               <string helpurl="flash.system:Capabilities:playerType:get" name="playerType" object="[flash.system.Capabilities]" playername="" text=".playerType" tiptext="Specifies the type of runtime environment." version=""/>
               <string helpurl="flash.system:Capabilities:screenColor:get" name="screenColor" object="[flash.system.Capabilities]" playername="" text=".screenColor" tiptext="Specifies the screen color." version=""/>
               <string helpurl="flash.system:Capabilities:screenDPI:get" name="screenDPI" object="[flash.system.Capabilities]" playername="" text=".screenDPI" tiptext="Specifies the dots-per-inch (dpi) resolution of the screen, in pixels." version=""/>
               <string helpurl="flash.system:Capabilities:screenResolutionX:get" name="screenResolutionX" object="[flash.system.Capabilities]" playername="" text=".screenResolutionX" tiptext="Specifies the maximum horizontal resolution of the screen." version=""/>
               <string helpurl="flash.system:Capabilities:screenResolutionY:get" name="screenResolutionY" object="[flash.system.Capabilities]" playername="" text=".screenResolutionY" tiptext="Specifies the maximum vertical resolution of the screen." version=""/>
               <string helpurl="flash.system:Capabilities:serverString:get" name="serverString" object="[flash.system.Capabilities]" playername="" text=".serverString" tiptext="A URL-encoded string that specifies values for each Capabilities property." version=""/>
               <string helpurl="flash.system:Capabilities:touchscreenType:get" name="touchscreenType" object="[flash.system.Capabilities]" playername="" text=".touchscreenType" tiptext="Specifies the type of touchscreen supported, if any." version=""/>
               <string helpurl="flash.system:Capabilities:version:get" name="version" object="[flash.system.Capabilities]" playername="" text=".version" tiptext="Specifies the Flash Player or Adobe&amp;#xAE; AIR&amp;#xAE; platform and version information." version=""/>
            </folder>
         </folder>
         <folder asAncestors="flash.system:LoaderContext,Object" helpurl="flash.system:JPEGLoaderContext" id="[flash.system.JPEGLoaderContext]" index="true" name="JPEGLoaderContext" sort="true" tiptext="The JPEGLoaderContext class includes a property for enabling a deblocking filter when loading a JPEG image.">
            <folder helpurl="flash.system:JPEGLoaderContext" id="Methods" name="Methods" tiptext="Methods for class JPEGLoaderContext">
               <string constructor="true" helpurl="flash.system:JPEGLoaderContext:JPEGLoaderContext" name="JPEGLoaderContext" object="[flash.system.JPEGLoaderContext]" playername="" text="new JPEGLoaderContext(%[deblockingFilter:Number=0.0,checkPolicyFile:Boolean=false,applicationDomain:flash.system:ApplicationDomain=null,securityDomain:flash.system:SecurityDomain=null]%)" tiptext="Creates a new JPEGLoaderContext object with the specified settings." version="4"/>
            </folder>
            <folder helpurl="flash.system:JPEGLoaderContext" id="Properties" name="Properties" tiptext="Properties for class JPEGLoaderContext">
               <string helpurl="flash.system:JPEGLoaderContext:deblockingFilter" name="deblockingFilter" object="[flash.system.JPEGLoaderContext]" playername="" text=".deblockingFilter" tiptext="Specifies the strength of the deblocking filter." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="flash.system:LoaderContext" id="[flash.system.LoaderContext]" index="true" name="LoaderContext" sort="true" tiptext="The LoaderContext class provides options for loading SWF files and other media by using the Loader class.">
            <folder helpurl="flash.system:LoaderContext" id="Methods" name="Methods" tiptext="Methods for class LoaderContext">
               <string constructor="true" helpurl="flash.system:LoaderContext:LoaderContext" name="LoaderContext" object="[flash.system.LoaderContext]" playername="" text="new LoaderContext(%[checkPolicyFile:Boolean=false,applicationDomain:flash.system:ApplicationDomain=null,securityDomain:flash.system:SecurityDomain=null]%)" tiptext="Creates a new LoaderContext object, with the specified settings." version="4"/>
            </folder>
            <folder helpurl="flash.system:LoaderContext" id="Properties" name="Properties" tiptext="Properties for class LoaderContext">
               <string helpurl="flash.system:LoaderContext:allowLoadBytesCodeExecution" name="allowLoadBytesCodeExecution" object="[flash.system.LoaderContext]" playername="" text=".allowLoadBytesCodeExecution" tiptext="Specifies whether you can use the loadBytes() method of a Loader object to load content with executable code, such as a SWF file." version=""/>
               <string helpurl="flash.system:LoaderContext:applicationDomain" name="applicationDomain" object="[flash.system.LoaderContext]" playername="" text=".applicationDomain" tiptext="Specifies the application domain to use for the Loader.load() or Loader.loadBytes() method." version=""/>
               <string helpurl="flash.system:LoaderContext:checkPolicyFile" name="checkPolicyFile" object="[flash.system.LoaderContext]" playername="" text=".checkPolicyFile" tiptext="Specifies whether the application should attempt to download a URL policy file from the loaded object's server before beginning to load the object itself." version=""/>
               <string helpurl="flash.system:LoaderContext:securityDomain" name="securityDomain" object="[flash.system.LoaderContext]" playername="" text=".securityDomain" tiptext="Specifies the security domain to use for a Loader.load() operation." version=""/>
            </folder>
         </folder>
         <folder helpurl="flash.system" id="Methods" name="Methods" tiptext="Methods for package flash.system">
            <string helpurl="flash.system:fscommand" name="fscommand" playername="" text="fscommand(%command:String,args:String%):void" tiptext="Lets the SWF file communicate with either Flash Player or the program hosting Flash Player, such as a web browser." version="9"/>
         </folder>
         <folder asAncestors="Object" helpurl="flash.system:Security" id="[flash.system.Security]" index="true" name="Security" sort="true" tiptext="The Security class lets you specify how content in different domains can communicate with each other.">
            <folder helpurl="flash.system:Security" id="Methods" name="Methods" tiptext="Methods for class Security">
               <string helpurl="flash.system:Security:allowDomain" name="allowDomain" object="[flash.system.Security]" playername="" static="true" text="Security.allowDomain(%domains:restParam%):void" tiptext="Lets SWF files and HTML files access objects and variables in the calling SWF file." version="4"/>
               <string helpurl="flash.system:Security:allowInsecureDomain" name="allowInsecureDomain" object="[flash.system.Security]" playername="" static="true" text="Security.allowInsecureDomain(%domains:restParam%):void" tiptext="Lets SWF and HTML files hosted using the HTTPS protocol, access objects and variables in the calling SWF file." version="4"/>
               <string helpurl="flash.system:Security:loadPolicyFile" name="loadPolicyFile" object="[flash.system.Security]" playername="" static="true" text="Security.loadPolicyFile(%url:String%):void" tiptext="Looks for a policy file at the location specified by the url parameter." version="4"/>
               <string helpurl="flash.system:Security:showSettings" name="showSettings" object="[flash.system.Security]" playername="" static="true" text="Security.showSettings(%[panel:String=default]%):void" tiptext="Displays the Security Settings panel in Flash Player." version="4"/>
            </folder>
            <folder helpurl="flash.system:Security" id="Properties" name="Properties" tiptext="Properties for class Security">
               <string constant="true" helpurl="flash.system:Security:APPLICATION" name="APPLICATION" object="[flash.system.Security]" playername="" text="Security.APPLICATION" tiptext="The file is running in an AIR application, and it was installed with the package (the AIR file) for that application." version=""/>
               <string constant="true" helpurl="flash.system:Security:LOCAL_TRUSTED" name="LOCAL_TRUSTED" object="[flash.system.Security]" playername="" text="Security.LOCAL_TRUSTED" tiptext="The file is a local file and has been trusted by the user, using either the Flash Player Settings Manager or a FlashPlayerTrust configuration file." version=""/>
               <string constant="true" helpurl="flash.system:Security:LOCAL_WITH_FILE" name="LOCAL_WITH_FILE" object="[flash.system.Security]" playername="" text="Security.LOCAL_WITH_FILE" tiptext="The file is a local file, has not been trusted by the user, and it is not a SWF file that was published with a networking designation." version=""/>
               <string constant="true" helpurl="flash.system:Security:LOCAL_WITH_NETWORK" name="LOCAL_WITH_NETWORK" object="[flash.system.Security]" playername="" text="Security.LOCAL_WITH_NETWORK" tiptext="The file is a local file, has not been trusted by the user, and it is a SWF file that was published with a networking designation." version=""/>
               <string constant="true" helpurl="flash.system:Security:REMOTE" name="REMOTE" object="[flash.system.Security]" playername="" text="Security.REMOTE" tiptext="The file is from an Internet URL and operates under domain-based sandbox rules." version=""/>
               <string helpurl="flash.system:Security:exactSettings:get" name="exactSettings" object="[flash.system.Security]" playername="" text=".exactSettings" tiptext="Determines how Flash Player or AIR chooses the domain to use for certain content settings, including settings for camera and microphone permissions, storage quotas, and storage of persistent shared objects." version=""/>
               <string helpurl="flash.system:Security:sandboxType:get" name="sandboxType" object="[flash.system.Security]" playername="" text=".sandboxType" tiptext="Indicates the type of security sandbox in which the calling file is operating." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="flash.system:SecurityDomain" id="[flash.system.SecurityDomain]" index="true" name="SecurityDomain" sort="true" tiptext="The SecurityDomain class represents the current security &quot;sandbox,&quot; also known as a security domain.">
            <folder helpurl="flash.system:SecurityDomain" id="Properties" name="Properties" tiptext="Properties for class SecurityDomain">
               <string helpurl="flash.system:SecurityDomain:currentDomain:get" name="currentDomain" object="[flash.system.SecurityDomain]" playername="" text=".currentDomain" tiptext="Gets the current security domain." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="flash.system:SecurityPanel" id="[flash.system.SecurityPanel]" index="true" name="SecurityPanel" sort="true" tiptext="The SecurityPanel class provides values for specifying which Security Settings panel you want to display.">
            <folder helpurl="flash.system:SecurityPanel" id="Properties" name="Properties" tiptext="Properties for class SecurityPanel">
               <string constant="true" helpurl="flash.system:SecurityPanel:CAMERA" name="CAMERA" object="[flash.system.SecurityPanel]" playername="" text="SecurityPanel.CAMERA" tiptext="When passed to Security.showSettings(), displays the Camera panel in Flash Player Settings." version=""/>
               <string constant="true" helpurl="flash.system:SecurityPanel:DEFAULT" name="DEFAULT" object="[flash.system.SecurityPanel]" playername="" text="SecurityPanel.DEFAULT" tiptext="When passed to Security.showSettings(), displays the panel that was open the last time the user closed the Flash Player Settings." version=""/>
               <string constant="true" helpurl="flash.system:SecurityPanel:DISPLAY" name="DISPLAY" object="[flash.system.SecurityPanel]" playername="" text="SecurityPanel.DISPLAY" tiptext="When passed to Security.showSettings(), displays the Display panel in Flash Player Settings." version=""/>
               <string constant="true" helpurl="flash.system:SecurityPanel:LOCAL_STORAGE" name="LOCAL_STORAGE" object="[flash.system.SecurityPanel]" playername="" text="SecurityPanel.LOCAL_STORAGE" tiptext="When passed to Security.showSettings(), displays the Local Storage Settings panel in Flash Player Settings." version=""/>
               <string constant="true" helpurl="flash.system:SecurityPanel:MICROPHONE" name="MICROPHONE" object="[flash.system.SecurityPanel]" playername="" text="SecurityPanel.MICROPHONE" tiptext="When passed to Security.showSettings(), displays the Microphone panel in Flash Player Settings." version=""/>
               <string constant="true" helpurl="flash.system:SecurityPanel:PRIVACY" name="PRIVACY" object="[flash.system.SecurityPanel]" playername="" text="SecurityPanel.PRIVACY" tiptext="When passed to Security.showSettings(), displays the Privacy Settings panel in Flash Player Settings." version=""/>
               <string constant="true" helpurl="flash.system:SecurityPanel:SETTINGS_MANAGER" name="SETTINGS_MANAGER" object="[flash.system.SecurityPanel]" playername="" text="SecurityPanel.SETTINGS_MANAGER" tiptext="When passed to Security.showSettings(), displays the Settings Manager (in a separate browser window)." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="flash.system:System" id="[flash.system.System]" index="true" name="System" sort="true" tiptext="The System class contains properties related to local settings and operations.">
            <folder helpurl="flash.system:System" id="Methods" name="Methods" tiptext="Methods for class System">
               <string helpurl="flash.system:System:gc" name="gc" object="[flash.system.System]" playername="" static="true" text="System.gc(%%):void" tiptext="Forces the garbage collection process." version="4"/>
               <string helpurl="flash.system:System:pause" name="pause" object="[flash.system.System]" playername="" static="true" text="System.pause(%%):void" tiptext="Pauses Flash Player or the AIR Debug Launcher (ADL)." version="4"/>
               <string helpurl="flash.system:System:resume" name="resume" object="[flash.system.System]" playername="" static="true" text="System.resume(%%):void" tiptext="Resumes the application after calling System.pause()." version="4"/>
            </folder>
            <folder helpurl="flash.system:System" id="Properties" name="Properties" tiptext="Properties for class System">
               <string helpurl="flash.system:System:ime:get" name="ime" object="[flash.system.System]" playername="" text=".ime" tiptext="The currently installed system IME." version=""/>
               <string helpurl="flash.system:System:totalMemory:get" name="totalMemory" object="[flash.system.System]" playername="" text=".totalMemory" tiptext="The amount of memory (in bytes) currently in use that has been directly allocated by Flash Player or AIR." version=""/>
               <string helpurl="flash.system:System:useCodePage:get" name="useCodePage" object="[flash.system.System]" playername="" text=".useCodePage" tiptext="A Boolean value that determines which code page to use to interpret external text files." version=""/>
            </folder>
         </folder>
      </folder>
      <folder helpurl="flash.text" id="flash.text" name="flash.text" sort="true" tiptext="Classes for package flash.text">
         <folder asAncestors="Object" helpurl="flash.text:Font" id="[flash.text.Font]" index="true" name="Font" sort="true" tiptext="The Font class is used to manage embedded fonts in SWF files.">
            <folder helpurl="flash.text:Font" id="Methods" name="Methods" tiptext="Methods for class Font">
               <string helpurl="flash.text:Font:enumerateFonts" name="enumerateFonts" object="[flash.text.Font]" playername="" static="true" text="Font.enumerateFonts(%[enumerateDeviceFonts:Boolean=false]%):Array" tiptext="Specifies whether to provide a list of the currently available embedded fonts." version="4"/>
               <string helpurl="flash.text:Font:hasGlyphs" name="hasGlyphs" object="[flash.text.Font]" playername="" text=".hasGlyphs(%str:String%):Boolean" tiptext="Specifies whether a provided string can be displayed using the currently assigned font." version="4"/>
               <string helpurl="flash.text:Font:registerFont" name="registerFont" object="[flash.text.Font]" playername="" static="true" text="Font.registerFont(%font:Class%):void" tiptext="Registers a font class in the global font list." version="4"/>
            </folder>
            <folder helpurl="flash.text:Font" id="Properties" name="Properties" tiptext="Properties for class Font">
               <string helpurl="flash.text:Font:fontName:get" name="fontName" object="[flash.text.Font]" playername="" text=".fontName" tiptext="The name of an embedded font." version=""/>
               <string helpurl="flash.text:Font:fontStyle:get" name="fontStyle" object="[flash.text.Font]" playername="" text=".fontStyle" tiptext="The style of the font." version=""/>
               <string helpurl="flash.text:Font:fontType:get" name="fontType" object="[flash.text.Font]" playername="" text=".fontType" tiptext="The type of the font." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="flash.text:FontType" id="[flash.text.FontType]" index="true" name="FontType" sort="true" tiptext="The FontType class contains the enumerated constants &quot;embedded&quot; and &quot;device&quot; for the fontType property of the Font class.">
            <folder helpurl="flash.text:FontType" id="Properties" name="Properties" tiptext="Properties for class FontType">
               <string constant="true" helpurl="flash.text:FontType:DEVICE" name="DEVICE" object="[flash.text.FontType]" playername="" text="FontType.DEVICE" tiptext="Indicates that this is a device font." version=""/>
               <string constant="true" helpurl="flash.text:FontType:EMBEDDED_CFF" name="EMBEDDED_CFF" object="[flash.text.FontType]" playername="" text="FontType.EMBEDDED_CFF" tiptext="Indicates that this is an embedded CFF font." version=""/>
               <string constant="true" helpurl="flash.text:FontType:EMBEDDED" name="EMBEDDED" object="[flash.text.FontType]" playername="" text="FontType.EMBEDDED" tiptext="Indicates that this is an embedded font." version=""/>
            </folder>
         </folder>
         <folder asAncestors="flash.display:DisplayObject,flash.events:EventDispatcher,Object" helpurl="flash.text:StaticText" id="[flash.text.StaticText]" index="true" name="StaticText" sort="true" tiptext="This class represents StaticText objects on the display list.">
            <folder helpurl="flash.text:StaticText" id="Properties" name="Properties" tiptext="Properties for class StaticText">
               <string helpurl="flash.text:StaticText:text:get" name="text" object="[flash.text.StaticText]" playername="" text=".text" tiptext="Returns the current text of the static text field." version=""/>
            </folder>
         </folder>
         <folder asAncestors="flash.events:EventDispatcher,Object" helpurl="flash.text:StyleSheet" id="[flash.text.StyleSheet]" index="true" name="StyleSheet" sort="true" tiptext="The StyleSheet class lets you create a StyleSheet object that contains text formatting rules for font size, color, and other styles.">
            <folder helpurl="flash.text:StyleSheet" id="Methods" name="Methods" tiptext="Methods for class StyleSheet">
               <string constructor="true" helpurl="flash.text:StyleSheet:StyleSheet" name="StyleSheet" object="[flash.text.StyleSheet]" playername="" text="new StyleSheet(%%)" tiptext="Creates a new StyleSheet object." version="4"/>
               <string helpurl="flash.text:StyleSheet:clear" name="clear" object="[flash.text.StyleSheet]" playername="" text=".clear(%%):void" tiptext="Removes all styles from the style sheet object." version="4"/>
               <string helpurl="flash.text:StyleSheet:getStyle" name="getStyle" object="[flash.text.StyleSheet]" playername="" text=".getStyle(%styleName:String%):Object" tiptext="Returns a copy of the style object associated with the style named styleName." version="4"/>
               <string helpurl="flash.text:StyleSheet:parseCSS" name="parseCSS" object="[flash.text.StyleSheet]" playername="" text=".parseCSS(%CSSText:String%):void" tiptext="Parses the CSS in cssText and loads the StyleSheet with it." version="4"/>
               <string helpurl="flash.text:StyleSheet:setStyle" name="setStyle" object="[flash.text.StyleSheet]" playername="" text=".setStyle(%styleName:String,styleObject:Object%):void" tiptext="Adds a new style with the specified name to the style sheet object." version="4"/>
               <string helpurl="flash.text:StyleSheet:transform" name="transform" object="[flash.text.StyleSheet]" playername="" text=".transform(%formatObject:Object%):flash.text:TextFormat" tiptext="Extends the CSS parsing capability." version="4"/>
            </folder>
            <folder helpurl="flash.text:StyleSheet" id="Properties" name="Properties" tiptext="Properties for class StyleSheet">
               <string helpurl="flash.text:StyleSheet:styleNames:get" name="styleNames" object="[flash.text.StyleSheet]" playername="" text=".styleNames" tiptext="An array that contains the names (as strings) of all of the styles registered in this style sheet." version=""/>
            </folder>
         </folder>
         <folder asAncestors="flash.display:InteractiveObject,flash.display:DisplayObject,flash.events:EventDispatcher,Object" helpurl="flash.text:TextField" id="[flash.text.TextField]" index="true" name="TextField" sort="true" tiptext="The TextField class is used to create display objects for text display and input.">
            <folder helpurl="flash.text:TextField" id="Methods" name="Methods" tiptext="Methods for class TextField">
               <string constructor="true" helpurl="flash.text:TextField:TextField" name="TextField" object="[flash.text.TextField]" playername="" text="new TextField(%%)" tiptext="Creates a new TextField instance." version="4"/>
               <string helpurl="flash.text:TextField:appendText" name="appendText" object="[flash.text.TextField]" playername="" text=".appendText(%newText:String%):void" tiptext="Appends text to the end of the existing text of the TextField." version="4"/>
               <string helpurl="flash.text:TextField:getCharBoundaries" name="getCharBoundaries" object="[flash.text.TextField]" playername="" text=".getCharBoundaries(%charIndex:int%):flash.geom:Rectangle" tiptext="Returns a rectangle that is the bounding box of the character." version="4"/>
               <string helpurl="flash.text:TextField:getCharIndexAtPoint" name="getCharIndexAtPoint" object="[flash.text.TextField]" playername="" text=".getCharIndexAtPoint(%x:Number,y:Number%):int" tiptext="Returns the zero-based index value of the character." version="4"/>
               <string helpurl="flash.text:TextField:getFirstCharInParagraph" name="getFirstCharInParagraph" object="[flash.text.TextField]" playername="" text=".getFirstCharInParagraph(%charIndex:int%):int" tiptext="The zero-based index value of the character." version="4"/>
               <string helpurl="flash.text:TextField:getImageReference" name="getImageReference" object="[flash.text.TextField]" playername="" text=".getImageReference(%id:String%):flash.display:DisplayObject" tiptext="Returns a DisplayObject reference for the given id, for an image or SWF file that has been added to an HTML-formatted text field by using an &amp;lt;img&amp;gt; tag." version="4"/>
               <string helpurl="flash.text:TextField:getLineIndexAtPoint" name="getLineIndexAtPoint" object="[flash.text.TextField]" playername="" text=".getLineIndexAtPoint(%x:Number,y:Number%):int" tiptext="The zero-based index value of the line at a specified point." version="4"/>
               <string helpurl="flash.text:TextField:getLineIndexOfChar" name="getLineIndexOfChar" object="[flash.text.TextField]" playername="" text=".getLineIndexOfChar(%charIndex:int%):int" tiptext="The zero-based index value of the line containing the character that the the charIndex parameter specifies." version="4"/>
               <string helpurl="flash.text:TextField:getLineLength" name="getLineLength" object="[flash.text.TextField]" playername="" text=".getLineLength(%lineIndex:int%):int" tiptext="Returns the number of characters in a specific text line." version="4"/>
               <string helpurl="flash.text:TextField:getLineMetrics" name="getLineMetrics" object="[flash.text.TextField]" playername="" text=".getLineMetrics(%lineIndex:int%):flash.text:TextLineMetrics" tiptext="Returns metrics information about a given text line." version="4"/>
               <string helpurl="flash.text:TextField:getLineOffset" name="getLineOffset" object="[flash.text.TextField]" playername="" text=".getLineOffset(%lineIndex:int%):int" tiptext="The zero-based index value of the first character in the line." version="4"/>
               <string helpurl="flash.text:TextField:getLineText" name="getLineText" object="[flash.text.TextField]" playername="" text=".getLineText(%lineIndex:int%):String" tiptext="The text string contained in the specified line." version="4"/>
               <string helpurl="flash.text:TextField:getParagraphLength" name="getParagraphLength" object="[flash.text.TextField]" playername="" text=".getParagraphLength(%charIndex:int%):int" tiptext="The zero-based index value of the character." version="4"/>
               <string helpurl="flash.text:TextField:getTextFormat" name="getTextFormat" object="[flash.text.TextField]" playername="" text=".getTextFormat(%[beginIndex:int=-1,endIndex:int=-1]%):flash.text:TextFormat" tiptext="Returns a TextFormat object." version="4"/>
               <string helpurl="flash.text:TextField:isFontCompatible" name="isFontCompatible" object="[flash.text.TextField]" playername="" static="true" text="TextField.isFontCompatible(%fontName:String,fontStyle:String%):Boolean" tiptext="Returns true if an embedded font is available with the specified fontName and fontStyle where Font.fontType is flash.text.FontType.EMBEDDED." version="4"/>
               <string helpurl="flash.text:TextField:replaceSelectedText" name="replaceSelectedText" object="[flash.text.TextField]" playername="" text=".replaceSelectedText(%value:String%):void" tiptext="Replaces the current selection with the contents of the value parameter." version="4"/>
               <string helpurl="flash.text:TextField:replaceText" name="replaceText" object="[flash.text.TextField]" playername="" text=".replaceText(%beginIndex:int,endIndex:int,newText:String%):void" tiptext="Replaces a range of characters." version="4"/>
               <string helpurl="flash.text:TextField:setSelection" name="setSelection" object="[flash.text.TextField]" playername="" text=".setSelection(%beginIndex:int,endIndex:int%):void" tiptext="Sets a new text selection." version="4"/>
               <string helpurl="flash.text:TextField:setTextFormat" name="setTextFormat" object="[flash.text.TextField]" playername="" text=".setTextFormat(%format:flash.text:TextFormat[,beginIndex:int=-1,endIndex:int=-1]%):void" tiptext="Applies text formatting." version="4"/>
            </folder>
            <folder helpurl="flash.text:TextField" id="Properties" name="Properties" tiptext="Properties for class TextField">
               <string helpurl="flash.text:TextField:alwaysShowSelection:get" name="alwaysShowSelection" object="[flash.text.TextField]" playername="" text=".alwaysShowSelection" tiptext="When set to true and the text field is not in focus, Flash Player highlights the selection in the text field in gray." version=""/>
               <string helpurl="flash.text:TextField:autoSize:get" name="autoSize" object="[flash.text.TextField]" playername="" text=".autoSize" tiptext="Controls automatic sizing and alignment of text fields." version=""/>
               <string helpurl="flash.text:TextField:backgroundColor:get" name="backgroundColor" object="[flash.text.TextField]" playername="" text=".backgroundColor" tiptext="The color of the text field background." version=""/>
               <string helpurl="flash.text:TextField:background:get" name="background" object="[flash.text.TextField]" playername="" text=".background" tiptext="Specifies whether the text field has a background fill." version=""/>
               <string helpurl="flash.text:TextField:borderColor:get" name="borderColor" object="[flash.text.TextField]" playername="" text=".borderColor" tiptext="The color of the text field border." version=""/>
               <string helpurl="flash.text:TextField:border:get" name="border" object="[flash.text.TextField]" playername="" text=".border" tiptext="Specifies whether the text field has a border." version=""/>
               <string helpurl="flash.text:TextField:bottomScrollV:get" name="bottomScrollV" object="[flash.text.TextField]" playername="" text=".bottomScrollV" tiptext="An integer (1-based index) that indicates the bottommost line that is currently visible in the specified text field." version=""/>
               <string helpurl="flash.text:TextField:caretIndex:get" name="caretIndex" object="[flash.text.TextField]" playername="" text=".caretIndex" tiptext="The index of the insertion point (caret) position." version=""/>
               <string helpurl="flash.text:TextField:condenseWhite:get" name="condenseWhite" object="[flash.text.TextField]" playername="" text=".condenseWhite" tiptext="A Boolean value that specifies whether extra white space (spaces, line breaks, and so on) in a text field with HTML text is removed." version=""/>
               <string helpurl="flash.text:TextField:defaultTextFormat:get" name="defaultTextFormat" object="[flash.text.TextField]" playername="" text=".defaultTextFormat" tiptext="Specifies the format applied to newly inserted text, such as text entered by a user or text inserted with the replaceSelectedText() method." version=""/>
               <string helpurl="flash.text:TextField:displayAsPassword:get" name="displayAsPassword" object="[flash.text.TextField]" playername="" text=".displayAsPassword" tiptext="Specifies whether the text field is a password text field." version=""/>
               <string helpurl="flash.text:TextField:embedFonts:get" name="embedFonts" object="[flash.text.TextField]" playername="" text=".embedFonts" tiptext="Specifies whether to render by using embedded font outlines." version=""/>
               <string helpurl="flash.text:TextField:htmlText:get" name="htmlText" object="[flash.text.TextField]" playername="" text=".htmlText" tiptext="Contains the HTML representation of the text field contents." version=""/>
               <string helpurl="flash.text:TextField:length:get" name="length" object="[flash.text.TextField]" playername="" text=".length" tiptext="The number of characters in a text field." version=""/>
               <string helpurl="flash.text:TextField:maxChars:get" name="maxChars" object="[flash.text.TextField]" playername="" text=".maxChars" tiptext="The maximum number of characters that the text field can contain, as entered by a user." version=""/>
               <string helpurl="flash.text:TextField:maxScrollH:get" name="maxScrollH" object="[flash.text.TextField]" playername="" text=".maxScrollH" tiptext="The maximum value of scrollH." version=""/>
               <string helpurl="flash.text:TextField:maxScrollV:get" name="maxScrollV" object="[flash.text.TextField]" playername="" text=".maxScrollV" tiptext="The maximum value of scrollV." version=""/>
               <string helpurl="flash.text:TextField:multiline:get" name="multiline" object="[flash.text.TextField]" playername="" text=".multiline" tiptext="Indicates whether field is a multiline text field." version=""/>
               <string helpurl="flash.text:TextField:numLines:get" name="numLines" object="[flash.text.TextField]" playername="" text=".numLines" tiptext="Defines the number of text lines in a multiline text field." version=""/>
               <string helpurl="flash.text:TextField:restrict:get" name="restrict" object="[flash.text.TextField]" playername="" text=".restrict" tiptext="Indicates the set of characters that a user can enter into the text field." version=""/>
               <string helpurl="flash.text:TextField:scrollH:get" name="scrollH" object="[flash.text.TextField]" playername="" text=".scrollH" tiptext="The current horizontal scrolling position." version=""/>
               <string helpurl="flash.text:TextField:scrollV:get" name="scrollV" object="[flash.text.TextField]" playername="" text=".scrollV" tiptext="The vertical position of text in a text field." version=""/>
               <string helpurl="flash.text:TextField:selectable:get" name="selectable" object="[flash.text.TextField]" playername="" text=".selectable" tiptext="A Boolean value that indicates whether the text field is selectable." version=""/>
               <string helpurl="flash.text:TextField:selectionBeginIndex:get" name="selectionBeginIndex" object="[flash.text.TextField]" playername="" text=".selectionBeginIndex" tiptext="The zero-based character index value of the first character in the current selection." version=""/>
               <string helpurl="flash.text:TextField:selectionEndIndex:get" name="selectionEndIndex" object="[flash.text.TextField]" playername="" text=".selectionEndIndex" tiptext="The zero-based character index value of the last character in the current selection." version=""/>
               <string helpurl="flash.text:TextField:styleSheet:get" name="styleSheet" object="[flash.text.TextField]" playername="" text=".styleSheet" tiptext="Attaches a style sheet to the text field." version=""/>
               <string helpurl="flash.text:TextField:textColor:get" name="textColor" object="[flash.text.TextField]" playername="" text=".textColor" tiptext="The color of the text in a text field, in hexadecimal format." version=""/>
               <string helpurl="flash.text:TextField:textHeight:get" name="textHeight" object="[flash.text.TextField]" playername="" text=".textHeight" tiptext="The height of the text in pixels." version=""/>
               <string helpurl="flash.text:TextField:textWidth:get" name="textWidth" object="[flash.text.TextField]" playername="" text=".textWidth" tiptext="The width of the text in pixels." version=""/>
               <string helpurl="flash.text:TextField:text:get" name="text" object="[flash.text.TextField]" playername="" text=".text" tiptext="A string that is the current text in the text field." version=""/>
               <string helpurl="flash.text:TextField:type:get" name="type" object="[flash.text.TextField]" playername="" text=".type" tiptext="The type of the text field." version=""/>
               <string helpurl="flash.text:TextField:wordWrap:get" name="wordWrap" object="[flash.text.TextField]" playername="" text=".wordWrap" tiptext="A Boolean value that indicates whether the text field has word wrap." version=""/>
            </folder>
            <folder helpurl="flash.text:TextField" id="Events" name="Events" tiptext="Events for class TextField">
               <string helpurl="flash.text:TextField_flash.events.TextEvent.TEXT_INPUT_textInput" name="textInput" object="[flash.text.TextField]" playername="" text=".addEventListener(%type:String=TextEvent.TEXT_INPUT{TextEvent.TEXT_INPUT,Event.SCROLL,TextEvent.LINK,Event.CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Flash Player dispatches the textInput event when a user enters one or more characters of text." version=""/>
               <string helpurl="flash.text:TextField_flash.events.Event.SCROLL_scroll" name="scroll" object="[flash.text.TextField]" playername="" text=".addEventListener(%type:String=Event.SCROLL{TextEvent.TEXT_INPUT,Event.SCROLL,TextEvent.LINK,Event.CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched by a TextField object after the user scrolls." version=""/>
               <string helpurl="flash.text:TextField_flash.events.TextEvent.LINK_link" name="link" object="[flash.text.TextField]" playername="" text=".addEventListener(%type:String=TextEvent.LINK{TextEvent.TEXT_INPUT,Event.SCROLL,TextEvent.LINK,Event.CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a user clicks a hyperlink in an HTML-enabled text field, where the URL begins with &quot;event:&quot;." version=""/>
               <string helpurl="flash.text:TextField_flash.events.Event.CHANGE_change" name="change" object="[flash.text.TextField]" playername="" text=".addEventListener(%type:String=Event.CHANGE{TextEvent.TEXT_INPUT,Event.SCROLL,TextEvent.LINK,Event.CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched after a control value is modified, unlike the textInput event, which is dispatched before the value is modified." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="flash.text:TextFieldAutoSize" id="[flash.text.TextFieldAutoSize]" index="true" name="TextFieldAutoSize" sort="true" tiptext="The TextFieldAutoSize class is an enumeration of constant values used in setting the autoSize property of the TextField class.">
            <folder helpurl="flash.text:TextFieldAutoSize" id="Properties" name="Properties" tiptext="Properties for class TextFieldAutoSize">
               <string constant="true" helpurl="flash.text:TextFieldAutoSize:CENTER" name="CENTER" object="[flash.text.TextFieldAutoSize]" playername="" text="TextFieldAutoSize.CENTER" tiptext="Specifies that the text is to be treated as center-justified text." version=""/>
               <string constant="true" helpurl="flash.text:TextFieldAutoSize:LEFT" name="LEFT" object="[flash.text.TextFieldAutoSize]" playername="" text="TextFieldAutoSize.LEFT" tiptext="Specifies that the text is to be treated as left-justified text, meaning that the left side of the text field remains fixed and any resizing of a single line is on the right side." version=""/>
               <string constant="true" helpurl="flash.text:TextFieldAutoSize:NONE" name="NONE" object="[flash.text.TextFieldAutoSize]" playername="" text="TextFieldAutoSize.NONE" tiptext="Specifies that no resizing is to occur." version=""/>
               <string constant="true" helpurl="flash.text:TextFieldAutoSize:RIGHT" name="RIGHT" object="[flash.text.TextFieldAutoSize]" playername="" text="TextFieldAutoSize.RIGHT" tiptext="Specifies that the text is to be treated as right-justified text, meaning that the right side of the text field remains fixed and any resizing of a single line is on the left side." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="flash.text:TextFieldType" id="[flash.text.TextFieldType]" index="true" name="TextFieldType" sort="true" tiptext="The TextFieldType class is an enumeration of constant values used in setting the type property of the TextField class.">
            <folder helpurl="flash.text:TextFieldType" id="Properties" name="Properties" tiptext="Properties for class TextFieldType">
               <string constant="true" helpurl="flash.text:TextFieldType:DYNAMIC" name="DYNAMIC" object="[flash.text.TextFieldType]" playername="" text="TextFieldType.DYNAMIC" tiptext="Used to specify a dynamic TextField." version=""/>
               <string constant="true" helpurl="flash.text:TextFieldType:INPUT" name="INPUT" object="[flash.text.TextFieldType]" playername="" text="TextFieldType.INPUT" tiptext="Used to specify an input TextField." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="flash.text:TextFormat" id="[flash.text.TextFormat]" index="true" name="TextFormat" sort="true" tiptext="The TextFormat class represents character formatting information.">
            <folder helpurl="flash.text:TextFormat" id="Methods" name="Methods" tiptext="Methods for class TextFormat">
               <string constructor="true" helpurl="flash.text:TextFormat:TextFormat" name="TextFormat" object="[flash.text.TextFormat]" playername="" text="new TextFormat(%[font:String=null,size:Object=null,color:Object=null,bold:Object=null,italic:Object=null,underline:Object=null,url:String=null,target:String=null,align:String=null,leftMargin:Object=null,rightMargin:Object=null,indent:Object=null,leading:Object=null]%)" tiptext="Creates a TextFormat object with the specified properties." version="4"/>
            </folder>
            <folder helpurl="flash.text:TextFormat" id="Properties" name="Properties" tiptext="Properties for class TextFormat">
               <string helpurl="flash.text:TextFormat:align:get" name="align" object="[flash.text.TextFormat]" playername="" text=".align" tiptext="Indicates the alignment of the paragraph." version=""/>
               <string helpurl="flash.text:TextFormat:blockIndent:get" name="blockIndent" object="[flash.text.TextFormat]" playername="" text=".blockIndent" tiptext="Indicates the block indentation in pixels." version=""/>
               <string helpurl="flash.text:TextFormat:bold:get" name="bold" object="[flash.text.TextFormat]" playername="" text=".bold" tiptext="Specifies whether the text is boldface." version=""/>
               <string helpurl="flash.text:TextFormat:bullet:get" name="bullet" object="[flash.text.TextFormat]" playername="" text=".bullet" tiptext="Indicates that the text is part of a bulleted list." version=""/>
               <string helpurl="flash.text:TextFormat:color:get" name="color" object="[flash.text.TextFormat]" playername="" text=".color" tiptext="Indicates the color of the text." version=""/>
               <string helpurl="flash.text:TextFormat:font:get" name="font" object="[flash.text.TextFormat]" playername="" text=".font" tiptext="The name of the font for text in this text format, as a string." version=""/>
               <string helpurl="flash.text:TextFormat:indent:get" name="indent" object="[flash.text.TextFormat]" playername="" text=".indent" tiptext="Indicates the indentation from the left margin to the first character in the paragraph." version=""/>
               <string helpurl="flash.text:TextFormat:italic:get" name="italic" object="[flash.text.TextFormat]" playername="" text=".italic" tiptext="Indicates whether text in this text format is italicized." version=""/>
               <string helpurl="flash.text:TextFormat:leading:get" name="leading" object="[flash.text.TextFormat]" playername="" text=".leading" tiptext="An integer representing the amount of vertical space (called leading) between lines." version=""/>
               <string helpurl="flash.text:TextFormat:leftMargin:get" name="leftMargin" object="[flash.text.TextFormat]" playername="" text=".leftMargin" tiptext="The left margin of the paragraph, in pixels." version=""/>
               <string helpurl="flash.text:TextFormat:rightMargin:get" name="rightMargin" object="[flash.text.TextFormat]" playername="" text=".rightMargin" tiptext="The right margin of the paragraph, in pixels." version=""/>
               <string helpurl="flash.text:TextFormat:size:get" name="size" object="[flash.text.TextFormat]" playername="" text=".size" tiptext="The size in pixels of text in this text format." version=""/>
               <string helpurl="flash.text:TextFormat:tabStops:get" name="tabStops" object="[flash.text.TextFormat]" playername="" text=".tabStops" tiptext="Specifies custom tab stops as an array of non-negative integers." version=""/>
               <string helpurl="flash.text:TextFormat:target:get" name="target" object="[flash.text.TextFormat]" playername="" text=".target" tiptext="Indicates the target window where the hyperlink is displayed." version=""/>
               <string helpurl="flash.text:TextFormat:underline:get" name="underline" object="[flash.text.TextFormat]" playername="" text=".underline" tiptext="Indicates whether the text that uses this text format is underlined (true) or not (false)." version=""/>
               <string helpurl="flash.text:TextFormat:url:get" name="url" object="[flash.text.TextFormat]" playername="" text=".url" tiptext="Indicates the target URL for the text in this text format." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="flash.text:TextFormatAlign" id="[flash.text.TextFormatAlign]" index="true" name="TextFormatAlign" sort="true" tiptext="The TextFormatAlign class provides values for text alignment in the TextFormat class.">
            <folder helpurl="flash.text:TextFormatAlign" id="Properties" name="Properties" tiptext="Properties for class TextFormatAlign">
               <string constant="true" helpurl="flash.text:TextFormatAlign:CENTER" name="CENTER" object="[flash.text.TextFormatAlign]" playername="" text="TextFormatAlign.CENTER" tiptext="Constant; centers the text in the text field." version=""/>
               <string constant="true" helpurl="flash.text:TextFormatAlign:JUSTIFY" name="JUSTIFY" object="[flash.text.TextFormatAlign]" playername="" text="TextFormatAlign.JUSTIFY" tiptext="Constant; justifies text within the text field." version=""/>
               <string constant="true" helpurl="flash.text:TextFormatAlign:LEFT" name="LEFT" object="[flash.text.TextFormatAlign]" playername="" text="TextFormatAlign.LEFT" tiptext="Constant; aligns text to the left within the text field." version=""/>
               <string constant="true" helpurl="flash.text:TextFormatAlign:RIGHT" name="RIGHT" object="[flash.text.TextFormatAlign]" playername="" text="TextFormatAlign.RIGHT" tiptext="Constant; aligns text to the right within the text field." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="flash.text:TextLineMetrics" id="[flash.text.TextLineMetrics]" index="true" name="TextLineMetrics" sort="true" tiptext="The TextLineMetrics class contains information about the text position and measurements of a line of text within a text field.">
            <folder helpurl="flash.text:TextLineMetrics" id="Methods" name="Methods" tiptext="Methods for class TextLineMetrics">
               <string constructor="true" helpurl="flash.text:TextLineMetrics:TextLineMetrics" name="TextLineMetrics" object="[flash.text.TextLineMetrics]" playername="" text="new TextLineMetrics(%x:Number,width:Number,height:Number,ascent:Number,descent:Number,leading:Number%)" tiptext="Contains information about the text position and measurements of a line of text in a text field." version="4"/>
            </folder>
            <folder helpurl="flash.text:TextLineMetrics" id="Properties" name="Properties" tiptext="Properties for class TextLineMetrics">
               <string helpurl="flash.text:TextLineMetrics:ascent" name="ascent" object="[flash.text.TextLineMetrics]" playername="" text=".ascent" tiptext="The ascent value of the text is the length from the baseline to the top of the line height in pixels." version=""/>
               <string helpurl="flash.text:TextLineMetrics:descent" name="descent" object="[flash.text.TextLineMetrics]" playername="" text=".descent" tiptext="The descent value of the text is the length from the baseline to the bottom depth of the line in pixels." version=""/>
               <string helpurl="flash.text:TextLineMetrics:height" name="height" object="[flash.text.TextLineMetrics]" playername="" text=".height" tiptext="The height value of the text of the selected lines (not necessarily the complete text) in pixels." version=""/>
               <string helpurl="flash.text:TextLineMetrics:leading" name="leading" object="[flash.text.TextLineMetrics]" playername="" text=".leading" tiptext="The leading value is the measurement of the vertical distance between the lines of text." version=""/>
               <string helpurl="flash.text:TextLineMetrics:width" name="width" object="[flash.text.TextLineMetrics]" playername="" text=".width" tiptext="The width value is the width of the text of the selected lines (not necessarily the complete text) in pixels." version=""/>
               <string helpurl="flash.text:TextLineMetrics:x" name="x" object="[flash.text.TextLineMetrics]" playername="" text=".x" tiptext="The x value is the left position of the first character in pixels." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="flash.text:TextSnapshot" id="[flash.text.TextSnapshot]" index="true" name="TextSnapshot" sort="true" tiptext="TextSnapshot objects let you work with static text in a movie clip.">
            <folder helpurl="flash.text:TextSnapshot" id="Methods" name="Methods" tiptext="Methods for class TextSnapshot">
               <string helpurl="flash.text:TextSnapshot:findText" name="findText" object="[flash.text.TextSnapshot]" playername="" text=".findText(%beginIndex:int,textToFind:String,caseSensitive:Boolean%):int" tiptext="Searches the specified TextSnapshot object and returns the position of the first occurrence of textToFind found at or after beginIndex." version="4"/>
               <string helpurl="flash.text:TextSnapshot:getSelectedText" name="getSelectedText" object="[flash.text.TextSnapshot]" playername="" text=".getSelectedText(%[includeLineEndings:Boolean=false]%):String" tiptext="Returns a string that contains all the characters specified by the corresponding setSelected() method." version="4"/>
               <string helpurl="flash.text:TextSnapshot:getSelected" name="getSelected" object="[flash.text.TextSnapshot]" playername="" text=".getSelected(%beginIndex:int,endIndex:int%):Boolean" tiptext="Returns a Boolean value that specifies whether a TextSnapshot object contains selected text in the specified range." version="4"/>
               <string helpurl="flash.text:TextSnapshot:getTextRunInfo" name="getTextRunInfo" object="[flash.text.TextSnapshot]" playername="" text=".getTextRunInfo(%beginIndex:int,endIndex:int%):Array" tiptext="Returns an array of objects that contains information about a run of text." version="4"/>
               <string helpurl="flash.text:TextSnapshot:getText" name="getText" object="[flash.text.TextSnapshot]" playername="" text=".getText(%beginIndex:int,endIndex:int[,includeLineEndings:Boolean=false]%):String" tiptext="Returns a string that contains all the characters specified by the beginIndex and endIndex parameters." version="4"/>
               <string helpurl="flash.text:TextSnapshot:hitTestTextNearPos" name="hitTestTextNearPos" object="[flash.text.TextSnapshot]" playername="" text=".hitTestTextNearPos(%x:Number,y:Number[,maxDistance:Number=0]%):Number" tiptext="Lets you determine which character within a TextSnapshot object is on or near the specified x, y coordinates of the movie clip containing the text in the TextSnapshot object." version="4"/>
               <string helpurl="flash.text:TextSnapshot:setSelectColor" name="setSelectColor" object="[flash.text.TextSnapshot]" playername="" text=".setSelectColor(%[hexColor:uint=0xFFFF00]%):void" tiptext="Specifies the color to use when highlighting characters that have been selected with the  setSelected() method." version="4"/>
               <string helpurl="flash.text:TextSnapshot:setSelected" name="setSelected" object="[flash.text.TextSnapshot]" playername="" text=".setSelected(%beginIndex:int,endIndex:int,select:Boolean%):void" tiptext="Specifies a range of characters in a TextSnapshot object to be selected or deselected." version="4"/>
            </folder>
            <folder helpurl="flash.text:TextSnapshot" id="Properties" name="Properties" tiptext="Properties for class TextSnapshot">
               <string helpurl="flash.text:TextSnapshot:charCount:get" name="charCount" object="[flash.text.TextSnapshot]" playername="" text=".charCount" tiptext="The number of characters in a TextSnapshot object." version=""/>
            </folder>
         </folder>
      </folder>
      <folder helpurl="flash.text.engine" id="flash.text.engine" name="flash.text.engine" sort="true" tiptext="Classes for package flash.text.engine">
         <folder asAncestors="Object" helpurl="flash.text.engine:BreakOpportunity" id="[flash.text.engine.BreakOpportunity]" index="true" name="BreakOpportunity" sort="true" tiptext="The BreakOpportunity class is an enumeration of constant values that you can use to set the breakOpportunity property of the ElementFormat class.">
            <folder helpurl="flash.text.engine:BreakOpportunity" id="Properties" name="Properties" tiptext="Properties for class BreakOpportunity">
               <string constant="true" helpurl="flash.text.engine:BreakOpportunity:ALL" name="ALL" object="[flash.text.engine.BreakOpportunity]" playername="" text="BreakOpportunity.ALL" tiptext="Treats all characters in the ContentElement object as line break opportunities, meaning that a line break will occurafer each character." version=""/>
               <string constant="true" helpurl="flash.text.engine:BreakOpportunity:ANY" name="ANY" object="[flash.text.engine.BreakOpportunity]" playername="" text="BreakOpportunity.ANY" tiptext="Treats any character in the ContentElement object as a line break opportunity." version=""/>
               <string constant="true" helpurl="flash.text.engine:BreakOpportunity:AUTO" name="AUTO" object="[flash.text.engine.BreakOpportunity]" playername="" text="BreakOpportunity.AUTO" tiptext="Bases line break opportunities on Unicode character properties." version=""/>
               <string constant="true" helpurl="flash.text.engine:BreakOpportunity:NONE" name="NONE" object="[flash.text.engine.BreakOpportunity]" playername="" text="BreakOpportunity.NONE" tiptext="Treats no characters in the ContentElement object as line break opportunities." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="flash.text.engine:CFFHinting" id="[flash.text.engine.CFFHinting]" index="true" name="CFFHinting" sort="true" tiptext="The CFFHinting class defines values for cff hinting in the FontDescription class.">
            <folder helpurl="flash.text.engine:CFFHinting" id="Properties" name="Properties" tiptext="Properties for class CFFHinting">
               <string constant="true" helpurl="flash.text.engine:CFFHinting:HORIZONTAL_STEM" name="HORIZONTAL_STEM" object="[flash.text.engine.CFFHinting]" playername="" text="CFFHinting.HORIZONTAL_STEM" tiptext="Fits strong horizontal stems to the pixel grid for improved readability." version=""/>
               <string constant="true" helpurl="flash.text.engine:CFFHinting:NONE" name="NONE" object="[flash.text.engine.CFFHinting]" playername="" text="CFFHinting.NONE" tiptext="No hinting is applied." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="flash.text.engine:ContentElement" id="[flash.text.engine.ContentElement]" index="true" name="ContentElement" sort="true" tiptext="The ContentElement class serves as a base class for the element types that can appear in a GroupElement, namely a GraphicElement, another GroupElement, or a TextElement.">
            <folder helpurl="flash.text.engine:ContentElement" id="Methods" name="Methods" tiptext="Methods for class ContentElement">
               <string constructor="true" helpurl="flash.text.engine:ContentElement:ContentElement" name="ContentElement" object="[flash.text.engine.ContentElement]" playername="" text="new ContentElement(%[elementFormat:flash.text.engine:ElementFormat=null,eventMirror:flash.events:EventDispatcher=null,textRotation:String=rotate0]%)" tiptext="Calling the new ContentElement() constructor throws an ArgumentError exception." version="4"/>
            </folder>
            <folder helpurl="flash.text.engine:ContentElement" id="Properties" name="Properties" tiptext="Properties for class ContentElement">
               <string constant="true" helpurl="flash.text.engine:ContentElement:GRAPHIC_ELEMENT" name="GRAPHIC_ELEMENT" object="[flash.text.engine.ContentElement]" playername="" text="ContentElement.GRAPHIC_ELEMENT" tiptext="Indicates the presence of a graphic element in the text." version=""/>
               <string helpurl="flash.text.engine:ContentElement:userData" name="userData" object="[flash.text.engine.ContentElement]" playername="" text=".userData" tiptext="Provides a way for an application to associate arbitrary data with the element." version=""/>
               <string helpurl="flash.text.engine:ContentElement:elementFormat:get" name="elementFormat" object="[flash.text.engine.ContentElement]" playername="" text=".elementFormat" tiptext="The ElementFormat object used for the element." version=""/>
               <string helpurl="flash.text.engine:ContentElement:eventMirror:get" name="eventMirror" object="[flash.text.engine.ContentElement]" playername="" text=".eventMirror" tiptext="The EventDispatcher object that receives copies of every event dispatched to valid text lines based on this content element." version=""/>
               <string helpurl="flash.text.engine:ContentElement:groupElement:get" name="groupElement" object="[flash.text.engine.ContentElement]" playername="" text=".groupElement" tiptext="The GroupElement object that contains this element, or null if it is not in a group." version=""/>
               <string helpurl="flash.text.engine:ContentElement:rawText:get" name="rawText" object="[flash.text.engine.ContentElement]" playername="" text=".rawText" tiptext="A copy of the text in the element, including any U+FDEF characters." version=""/>
               <string helpurl="flash.text.engine:ContentElement:textBlockBeginIndex:get" name="textBlockBeginIndex" object="[flash.text.engine.ContentElement]" playername="" text=".textBlockBeginIndex" tiptext="The index in the text block of the first character of this element." version=""/>
               <string helpurl="flash.text.engine:ContentElement:textBlock:get" name="textBlock" object="[flash.text.engine.ContentElement]" playername="" text=".textBlock" tiptext="The TextBlock to which this element belongs." version=""/>
               <string helpurl="flash.text.engine:ContentElement:textRotation:get" name="textRotation" object="[flash.text.engine.ContentElement]" playername="" text=".textRotation" tiptext="The rotation to apply to the element as a unit." version=""/>
               <string helpurl="flash.text.engine:ContentElement:text:get" name="text" object="[flash.text.engine.ContentElement]" playername="" text=".text" tiptext="A copy of the text in the element, not including any U+FDEF characters, which represent graphic elements in the String." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="flash.text.engine:DigitCase" id="[flash.text.engine.DigitCase]" index="true" name="DigitCase" sort="true" tiptext="The DigitCase class is an enumeration of constant values used in setting the digitCase property of the ElementFormat class.">
            <folder helpurl="flash.text.engine:DigitCase" id="Properties" name="Properties" tiptext="Properties for class DigitCase">
               <string constant="true" helpurl="flash.text.engine:DigitCase:DEFAULT" name="DEFAULT" object="[flash.text.engine.DigitCase]" playername="" text="DigitCase.DEFAULT" tiptext="Used to specify default digit case." version=""/>
               <string constant="true" helpurl="flash.text.engine:DigitCase:LINING" name="LINING" object="[flash.text.engine.DigitCase]" playername="" text="DigitCase.LINING" tiptext="Used to specify lining digit case." version=""/>
               <string constant="true" helpurl="flash.text.engine:DigitCase:OLD_STYLE" name="OLD_STYLE" object="[flash.text.engine.DigitCase]" playername="" text="DigitCase.OLD_STYLE" tiptext="Used to specify old style digit case." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="flash.text.engine:DigitWidth" id="[flash.text.engine.DigitWidth]" index="true" name="DigitWidth" sort="true" tiptext="The DigitWidth class is an enumeration of constant values used in setting the digitWidth property of the ElementFormat class.">
            <folder helpurl="flash.text.engine:DigitWidth" id="Properties" name="Properties" tiptext="Properties for class DigitWidth">
               <string constant="true" helpurl="flash.text.engine:DigitWidth:DEFAULT" name="DEFAULT" object="[flash.text.engine.DigitWidth]" playername="" text="DigitWidth.DEFAULT" tiptext="Used to specify default digit width." version=""/>
               <string constant="true" helpurl="flash.text.engine:DigitWidth:PROPORTIONAL" name="PROPORTIONAL" object="[flash.text.engine.DigitWidth]" playername="" text="DigitWidth.PROPORTIONAL" tiptext="Used to specify proportional digit width." version=""/>
               <string constant="true" helpurl="flash.text.engine:DigitWidth:TABULAR" name="TABULAR" object="[flash.text.engine.DigitWidth]" playername="" text="DigitWidth.TABULAR" tiptext="Used to specify tabular digit width." version=""/>
            </folder>
         </folder>
         <folder asAncestors="flash.text.engine:TextJustifier,Object" helpurl="flash.text.engine:EastAsianJustifier" id="[flash.text.engine.EastAsianJustifier]" index="true" name="EastAsianJustifier" sort="true" tiptext="The EastAsianJustifier class has properties to control the justification options for text lines whose content is primarily East Asian text.">
            <folder helpurl="flash.text.engine:EastAsianJustifier" id="Methods" name="Methods" tiptext="Methods for class EastAsianJustifier">
               <string constructor="true" helpurl="flash.text.engine:EastAsianJustifier:EastAsianJustifier" name="EastAsianJustifier" object="[flash.text.engine.EastAsianJustifier]" playername="" text="new EastAsianJustifier(%[locale:String=ja,lineJustification:String=allButLast,justificationStyle:String=pushInKinsoku]%)" tiptext="Creates an EastAsianJustifier object." version="4"/>
               <string helpurl="flash.text.engine:EastAsianJustifier:clone" name="clone" object="[flash.text.engine.EastAsianJustifier]" playername="" text=".clone(%%):flash.text.engine:TextJustifier" tiptext="Constructs a cloned copy of the EastAsianJustifier." version="4"/>
            </folder>
            <folder helpurl="flash.text.engine:EastAsianJustifier" id="Properties" name="Properties" tiptext="Properties for class EastAsianJustifier">
               <string helpurl="flash.text.engine:EastAsianJustifier:justificationStyle:get" name="justificationStyle" object="[flash.text.engine.EastAsianJustifier]" playername="" text=".justificationStyle" tiptext="Specifies the justification style for the text in a text block." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="flash.text.engine:ElementFormat" id="[flash.text.engine.ElementFormat]" index="true" name="ElementFormat" sort="true" tiptext="The ElementFormat class represents formatting information which can be applied to a ContentElement.">
            <folder helpurl="flash.text.engine:ElementFormat" id="Methods" name="Methods" tiptext="Methods for class ElementFormat">
               <string constructor="true" helpurl="flash.text.engine:ElementFormat:ElementFormat" name="ElementFormat" object="[flash.text.engine.ElementFormat]" playername="" text="new ElementFormat(%[fontDescription:flash.text.engine:FontDescription=null,fontSize:Number=12.0,color:uint=0x000000,alpha:Number=1.0,textRotation:String=auto,dominantBaseline:String=roman,alignmentBaseline:String=useDominantBaseline,baselineShift:Number=0.0,kerning:String=on,trackingRight:Number=0.0,trackingLeft:Number=0.0,locale:String=en,breakOpportunity:String=auto,digitCase:String=default,digitWidth:String=default,ligatureLevel:String=common,typographicCase:String=default]%)" tiptext="Creates an ElementFormat object." version="4"/>
               <string helpurl="flash.text.engine:ElementFormat:clone" name="clone" object="[flash.text.engine.ElementFormat]" playername="" text=".clone(%%):flash.text.engine:ElementFormat" tiptext="Constructs an unlocked, cloned copy of the ElementFormat." version="4"/>
               <string helpurl="flash.text.engine:ElementFormat:getFontMetrics" name="getFontMetrics" object="[flash.text.engine.ElementFormat]" playername="" text=".getFontMetrics(%%):flash.text.engine:FontMetrics" tiptext="Returns a FontMetrics object with properties which describe the emBox, strikethrough position, strikethrough thickness, underline position, and underline thickness for the font specified by fontDescription and fontSize." version="4"/>
            </folder>
            <folder helpurl="flash.text.engine:ElementFormat" id="Properties" name="Properties" tiptext="Properties for class ElementFormat">
               <string helpurl="flash.text.engine:ElementFormat:alignmentBaseline:get" name="alignmentBaseline" object="[flash.text.engine.ElementFormat]" playername="" text=".alignmentBaseline" tiptext="Specifies the type of baseline in the containing element to which to align the dominant baselines of elements having this format." version=""/>
               <string helpurl="flash.text.engine:ElementFormat:alpha:get" name="alpha" object="[flash.text.engine.ElementFormat]" playername="" text=".alpha" tiptext="Specifies the transparency of the line elements affected by this obect." version=""/>
               <string helpurl="flash.text.engine:ElementFormat:baselineShift:get" name="baselineShift" object="[flash.text.engine.ElementFormat]" playername="" text=".baselineShift" tiptext="Indicates the baseline shift for the element in pixels." version=""/>
               <string helpurl="flash.text.engine:ElementFormat:breakOpportunity:get" name="breakOpportunity" object="[flash.text.engine.ElementFormat]" playername="" text=".breakOpportunity" tiptext="The line break opportunity applied to this text." version=""/>
               <string helpurl="flash.text.engine:ElementFormat:color:get" name="color" object="[flash.text.engine.ElementFormat]" playername="" text=".color" tiptext="Indicates the color of the text." version=""/>
               <string helpurl="flash.text.engine:ElementFormat:digitCase:get" name="digitCase" object="[flash.text.engine.ElementFormat]" playername="" text=".digitCase" tiptext="The digit case used for this text." version=""/>
               <string helpurl="flash.text.engine:ElementFormat:digitWidth:get" name="digitWidth" object="[flash.text.engine.ElementFormat]" playername="" text=".digitWidth" tiptext="The digit width used for this text." version=""/>
               <string helpurl="flash.text.engine:ElementFormat:dominantBaseline:get" name="dominantBaseline" object="[flash.text.engine.ElementFormat]" playername="" text=".dominantBaseline" tiptext="Specifies the type of baseline to use as the dominant baseline." version=""/>
               <string helpurl="flash.text.engine:ElementFormat:fontDescription:get" name="fontDescription" object="[flash.text.engine.ElementFormat]" playername="" text=".fontDescription" tiptext="An object whose properties describe a font." version=""/>
               <string helpurl="flash.text.engine:ElementFormat:fontSize:get" name="fontSize" object="[flash.text.engine.ElementFormat]" playername="" text=".fontSize" tiptext="The size of text in pixels." version=""/>
               <string helpurl="flash.text.engine:ElementFormat:kerning:get" name="kerning" object="[flash.text.engine.ElementFormat]" playername="" text=".kerning" tiptext="Kerning adjusts the pixels between certain character pairs to improve readability." version=""/>
               <string helpurl="flash.text.engine:ElementFormat:ligatureLevel:get" name="ligatureLevel" object="[flash.text.engine.ElementFormat]" playername="" text=".ligatureLevel" tiptext="The ligature level used for this text." version=""/>
               <string helpurl="flash.text.engine:ElementFormat:locale:get" name="locale" object="[flash.text.engine.ElementFormat]" playername="" text=".locale" tiptext="The locale of the text." version=""/>
               <string helpurl="flash.text.engine:ElementFormat:locked:get" name="locked" object="[flash.text.engine.ElementFormat]" playername="" text=".locked" tiptext="Indicates whether the ElementFormat is locked." version=""/>
               <string helpurl="flash.text.engine:ElementFormat:textRotation:get" name="textRotation" object="[flash.text.engine.ElementFormat]" playername="" text=".textRotation" tiptext="Sets the rotation applied to individual glyphs." version=""/>
               <string helpurl="flash.text.engine:ElementFormat:trackingLeft:get" name="trackingLeft" object="[flash.text.engine.ElementFormat]" playername="" text=".trackingLeft" tiptext="The tracking or manual kerning applied to the left of each glyph in pixels." version=""/>
               <string helpurl="flash.text.engine:ElementFormat:trackingRight:get" name="trackingRight" object="[flash.text.engine.ElementFormat]" playername="" text=".trackingRight" tiptext="The tracking or manual kerning applied to the right of each glyph in pixels." version=""/>
               <string helpurl="flash.text.engine:ElementFormat:typographicCase:get" name="typographicCase" object="[flash.text.engine.ElementFormat]" playername="" text=".typographicCase" tiptext="The typographic case used for this text." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="flash.text.engine:FontDescription" id="[flash.text.engine.FontDescription]" index="true" name="FontDescription" sort="true" tiptext="The FontDescription class represents the information necessary to describe a font.">
            <folder helpurl="flash.text.engine:FontDescription" id="Methods" name="Methods" tiptext="Methods for class FontDescription">
               <string constructor="true" helpurl="flash.text.engine:FontDescription:FontDescription" name="FontDescription" object="[flash.text.engine.FontDescription]" playername="" text="new FontDescription(%[fontName:String=_serif,fontWeight:String=normal,fontPosture:String=normal,fontLookup:String=device,renderingMode:String=cff,cffHinting:String=horizontalStem]%)" tiptext="Creates a FontDescription object." version="4"/>
               <string helpurl="flash.text.engine:FontDescription:clone" name="clone" object="[flash.text.engine.FontDescription]" playername="" text=".clone(%%):flash.text.engine:FontDescription" tiptext="Constructs an unlocked, cloned copy of the FontDescription." version="4"/>
               <string helpurl="flash.text.engine:FontDescription:isFontCompatible" name="isFontCompatible" object="[flash.text.engine.FontDescription]" playername="" static="true" text="FontDescription.isFontCompatible(%fontName:String,fontWeight:String,fontPosture:String%):Boolean" tiptext="Returns true if an embedded font is available with the specified fontName, fontWeight, and fontPosture where Font.fontType is flash.text.FontType.EMBEDDED_CFF." version="4"/>
            </folder>
            <folder helpurl="flash.text.engine:FontDescription" id="Properties" name="Properties" tiptext="Properties for class FontDescription">
               <string helpurl="flash.text.engine:FontDescription:cffHinting:get" name="cffHinting" object="[flash.text.engine.FontDescription]" playername="" text=".cffHinting" tiptext="The type of CFF hinting used for this text." version=""/>
               <string helpurl="flash.text.engine:FontDescription:fontLookup:get" name="fontLookup" object="[flash.text.engine.FontDescription]" playername="" text=".fontLookup" tiptext="Specifies how the font should be looked up." version=""/>
               <string helpurl="flash.text.engine:FontDescription:fontName:get" name="fontName" object="[flash.text.engine.FontDescription]" playername="" text=".fontName" tiptext="The name of the font to use, or a comma-separated list of font names." version=""/>
               <string helpurl="flash.text.engine:FontDescription:fontPosture:get" name="fontPosture" object="[flash.text.engine.FontDescription]" playername="" text=".fontPosture" tiptext="Specifies the font posture." version=""/>
               <string helpurl="flash.text.engine:FontDescription:fontWeight:get" name="fontWeight" object="[flash.text.engine.FontDescription]" playername="" text=".fontWeight" tiptext="Specifies the font weight." version=""/>
               <string helpurl="flash.text.engine:FontDescription:locked:get" name="locked" object="[flash.text.engine.FontDescription]" playername="" text=".locked" tiptext="Indicates whether or not the FontDescription is locked." version=""/>
               <string helpurl="flash.text.engine:FontDescription:renderingMode:get" name="renderingMode" object="[flash.text.engine.FontDescription]" playername="" text=".renderingMode" tiptext="The rendering mode used for this text." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="flash.text.engine:FontLookup" id="[flash.text.engine.FontLookup]" index="true" name="FontLookup" sort="true" tiptext="The FontLookup class is an enumeration of constant values used with FontDescription.fontLookup.">
            <folder helpurl="flash.text.engine:FontLookup" id="Properties" name="Properties" tiptext="Properties for class FontLookup">
               <string constant="true" helpurl="flash.text.engine:FontLookup:DEVICE" name="DEVICE" object="[flash.text.engine.FontLookup]" playername="" text="FontLookup.DEVICE" tiptext="Used to indicate device font lookup." version=""/>
               <string constant="true" helpurl="flash.text.engine:FontLookup:EMBEDDED_CFF" name="EMBEDDED_CFF" object="[flash.text.engine.FontLookup]" playername="" text="FontLookup.EMBEDDED_CFF" tiptext="Used to indicate embedded CFF (Compact Font Format) font lookup." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="flash.text.engine:FontMetrics" id="[flash.text.engine.FontMetrics]" index="true" name="FontMetrics" sort="true" tiptext="The FontMetrics class contains measurement and offset information about a font.">
            <folder helpurl="flash.text.engine:FontMetrics" id="Methods" name="Methods" tiptext="Methods for class FontMetrics">
               <string constructor="true" helpurl="flash.text.engine:FontMetrics:FontMetrics" name="FontMetrics" object="[flash.text.engine.FontMetrics]" playername="" text="new FontMetrics(%emBox:flash.geom:Rectangle,strikethroughOffset:Number,strikethroughThickness:Number,underlineOffset:Number,underlineThickness:Number,subscriptOffset:Number,subscriptScale:Number,superscriptOffset:Number,superscriptScale:Number%)" tiptext="Creates a FontMetrics object." version="4"/>
            </folder>
            <folder helpurl="flash.text.engine:FontMetrics" id="Properties" name="Properties" tiptext="Properties for class FontMetrics">
               <string helpurl="flash.text.engine:FontMetrics:emBox" name="emBox" object="[flash.text.engine.FontMetrics]" playername="" text=".emBox" tiptext="The emBox value represents the design space of the font and is used to place Chinese, Korean, or Japanese glyphs relative to the Roman baseline." version=""/>
               <string helpurl="flash.text.engine:FontMetrics:strikethroughOffset" name="strikethroughOffset" object="[flash.text.engine.FontMetrics]" playername="" text=".strikethroughOffset" tiptext="The strikethroughOffset value is the suggested vertical offset from the Roman baseline for a strikethrough." version=""/>
               <string helpurl="flash.text.engine:FontMetrics:strikethroughThickness" name="strikethroughThickness" object="[flash.text.engine.FontMetrics]" playername="" text=".strikethroughThickness" tiptext="The strikethroughThickness value is the suggested thickness for a strikethrough." version=""/>
               <string helpurl="flash.text.engine:FontMetrics:subscriptOffset" name="subscriptOffset" object="[flash.text.engine.FontMetrics]" playername="" text=".subscriptOffset" tiptext="The subscriptOffset value is the suggested vertical offset from the Roman baseline for a subscript." version=""/>
               <string helpurl="flash.text.engine:FontMetrics:subscriptScale" name="subscriptScale" object="[flash.text.engine.FontMetrics]" playername="" text=".subscriptScale" tiptext="The subscriptScale value is the suggested scale factor to apply to the point size for a subscript." version=""/>
               <string helpurl="flash.text.engine:FontMetrics:superscriptOffset" name="superscriptOffset" object="[flash.text.engine.FontMetrics]" playername="" text=".superscriptOffset" tiptext="The superscriptOffset value is the suggested vertical offset from the Roman baseline for a superscript." version=""/>
               <string helpurl="flash.text.engine:FontMetrics:superscriptScale" name="superscriptScale" object="[flash.text.engine.FontMetrics]" playername="" text=".superscriptScale" tiptext="The superscriptScale value is the suggested scale factor to apply to the point size for a superscript." version=""/>
               <string helpurl="flash.text.engine:FontMetrics:underlineOffset" name="underlineOffset" object="[flash.text.engine.FontMetrics]" playername="" text=".underlineOffset" tiptext="The underlineOffset value is the suggested vertical offset from the Roman baseline for an underline." version=""/>
               <string helpurl="flash.text.engine:FontMetrics:underlineThickness" name="underlineThickness" object="[flash.text.engine.FontMetrics]" playername="" text=".underlineThickness" tiptext="The underlineThickness value is the suggested thickness for an underline." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="flash.text.engine:FontPosture" id="[flash.text.engine.FontPosture]" index="true" name="FontPosture" sort="true" tiptext="The FontPosture class is an enumeration of constant values used with FontDescription.fontPosture toset text to italic or normal.">
            <folder helpurl="flash.text.engine:FontPosture" id="Properties" name="Properties" tiptext="Properties for class FontPosture">
               <string constant="true" helpurl="flash.text.engine:FontPosture:ITALIC" name="ITALIC" object="[flash.text.engine.FontPosture]" playername="" text="FontPosture.ITALIC" tiptext="Used to indicate italic font posture." version=""/>
               <string constant="true" helpurl="flash.text.engine:FontPosture:NORMAL" name="NORMAL" object="[flash.text.engine.FontPosture]" playername="" text="FontPosture.NORMAL" tiptext="Used to indicate normal font posture." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="flash.text.engine:FontWeight" id="[flash.text.engine.FontWeight]" index="true" name="FontWeight" sort="true" tiptext="The FontWeight class is an enumeration of constant values used with FontDescription.fontWeight.">
            <folder helpurl="flash.text.engine:FontWeight" id="Properties" name="Properties" tiptext="Properties for class FontWeight">
               <string constant="true" helpurl="flash.text.engine:FontWeight:BOLD" name="BOLD" object="[flash.text.engine.FontWeight]" playername="" text="FontWeight.BOLD" tiptext="Used to indicate bold font weight." version=""/>
               <string constant="true" helpurl="flash.text.engine:FontWeight:NORMAL" name="NORMAL" object="[flash.text.engine.FontWeight]" playername="" text="FontWeight.NORMAL" tiptext="Used to indicate normal font weight." version=""/>
            </folder>
         </folder>
         <folder asAncestors="flash.text.engine:ContentElement,Object" helpurl="flash.text.engine:GraphicElement" id="[flash.text.engine.GraphicElement]" index="true" name="GraphicElement" sort="true" tiptext="The GraphicElement class represents a graphic element in a TextBlock or GroupElement object.">
            <folder helpurl="flash.text.engine:GraphicElement" id="Methods" name="Methods" tiptext="Methods for class GraphicElement">
               <string constructor="true" helpurl="flash.text.engine:GraphicElement:GraphicElement" name="GraphicElement" object="[flash.text.engine.GraphicElement]" playername="" text="new GraphicElement(%[graphic:flash.display:DisplayObject=null,elementWidth:Number=15.0,elementHeight:Number=15.0,elementFormat:flash.text.engine:ElementFormat=null,eventMirror:flash.events:EventDispatcher=null,textRotation:String=rotate0]%)" tiptext="Creates a new GraphicElement instance." version="4"/>
            </folder>
            <folder helpurl="flash.text.engine:GraphicElement" id="Properties" name="Properties" tiptext="Properties for class GraphicElement">
               <string helpurl="flash.text.engine:GraphicElement:elementHeight:get" name="elementHeight" object="[flash.text.engine.GraphicElement]" playername="" text=".elementHeight" tiptext="The height in pixels to reserve for the graphic in the line." version=""/>
               <string helpurl="flash.text.engine:GraphicElement:elementWidth:get" name="elementWidth" object="[flash.text.engine.GraphicElement]" playername="" text=".elementWidth" tiptext="The width in pixels to reserve for the graphic in the line." version=""/>
               <string helpurl="flash.text.engine:GraphicElement:graphic:get" name="graphic" object="[flash.text.engine.GraphicElement]" playername="" text=".graphic" tiptext="The DisplayObject to be used as a graphic for the GraphicElement." version=""/>
            </folder>
         </folder>
         <folder asAncestors="flash.text.engine:ContentElement,Object" helpurl="flash.text.engine:GroupElement" id="[flash.text.engine.GroupElement]" index="true" name="GroupElement" sort="true" tiptext="A GroupElement object groups a collection of TextElement, GraphicElement, or other GroupElement objects that you can assign as a unit to the content property of a TextBlock object.">
            <folder helpurl="flash.text.engine:GroupElement" id="Methods" name="Methods" tiptext="Methods for class GroupElement">
               <string constructor="true" helpurl="flash.text.engine:GroupElement:GroupElement" name="GroupElement" object="[flash.text.engine.GroupElement]" playername="" text="new GroupElement(%[elements:Vector$flash.text.engine:ContentElement=null,elementFormat:flash.text.engine:ElementFormat=null,eventMirror:flash.events:EventDispatcher=null,textRotation:String=rotate0]%)" tiptext="Creates a new GroupElement instance." version="4"/>
               <string helpurl="flash.text.engine:GroupElement:getElementAtCharIndex" name="getElementAtCharIndex" object="[flash.text.engine.GroupElement]" playername="" text=".getElementAtCharIndex(%charIndex:int%):flash.text.engine:ContentElement" tiptext="Returns the element containing the character specified by the charIndex parameter." version="4"/>
               <string helpurl="flash.text.engine:GroupElement:getElementAt" name="getElementAt" object="[flash.text.engine.GroupElement]" playername="" text=".getElementAt(%index:int%):flash.text.engine:ContentElement" tiptext="Retrieves an element from within the group." version="4"/>
               <string helpurl="flash.text.engine:GroupElement:getElementIndex" name="getElementIndex" object="[flash.text.engine.GroupElement]" playername="" text=".getElementIndex(%element:flash.text.engine:ContentElement%):int" tiptext="Returns the index of the element specified by the element parameter." version="4"/>
               <string helpurl="flash.text.engine:GroupElement:groupElements" name="groupElements" object="[flash.text.engine.GroupElement]" playername="" text=".groupElements(%beginIndex:int,endIndex:int%):flash.text.engine:GroupElement" tiptext="Replaces the range of elements that the beginIndex and endIndex parameters specify with a new GroupElement containing those elements." version="4"/>
               <string helpurl="flash.text.engine:GroupElement:mergeTextElements" name="mergeTextElements" object="[flash.text.engine.GroupElement]" playername="" text=".mergeTextElements(%beginIndex:int,endIndex:int%):flash.text.engine:TextElement" tiptext="Merges the text from the range of elements that the beginIndex and endIndex parameters specify into the element specified by beginIndex without affecting the format of that element." version="4"/>
               <string helpurl="flash.text.engine:GroupElement:replaceElements" name="replaceElements" object="[flash.text.engine.GroupElement]" playername="" text=".replaceElements(%beginIndex:int,endIndex:int,newElements:Vector$flash.text.engine:ContentElement%):Vector$flash.text.engine:ContentElement" tiptext="Replaces the range of elements that the beginIndex and endIndex parameters specify with the contents of the newElements parameter." version="4"/>
               <string helpurl="flash.text.engine:GroupElement:setElements" name="setElements" object="[flash.text.engine.GroupElement]" playername="" text=".setElements(%value:Vector$flash.text.engine:ContentElement%):void" tiptext="Sets the elements in the group to the contents of the Vector." version="4"/>
               <string helpurl="flash.text.engine:GroupElement:splitTextElement" name="splitTextElement" object="[flash.text.engine.GroupElement]" playername="" text=".splitTextElement(%elementIndex:int,splitIndex:int%):flash.text.engine:TextElement" tiptext="Splits a TextElement into two, creating a new TextElement at the specified position." version="4"/>
               <string helpurl="flash.text.engine:GroupElement:ungroupElements" name="ungroupElements" object="[flash.text.engine.GroupElement]" playername="" text=".ungroupElements(%groupIndex:int%):void" tiptext="Ungroups the elements in a nested GroupElement that groupIndex specifies within an outer GroupElement object." version="4"/>
            </folder>
            <folder helpurl="flash.text.engine:GroupElement" id="Properties" name="Properties" tiptext="Properties for class GroupElement">
               <string helpurl="flash.text.engine:GroupElement:elementCount:get" name="elementCount" object="[flash.text.engine.GroupElement]" playername="" text=".elementCount" tiptext="The number of elements in the group." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="flash.text.engine:JustificationStyle" id="[flash.text.engine.JustificationStyle]" index="true" name="JustificationStyle" sort="true" tiptext="The JustificationStyle class is an enumeration of constant values for setting the justificationStyle property of the EastAsianJustifier class.">
            <folder helpurl="flash.text.engine:JustificationStyle" id="Properties" name="Properties" tiptext="Properties for class JustificationStyle">
               <string constant="true" helpurl="flash.text.engine:JustificationStyle:PRIORITIZE_LEAST_ADJUSTMENT" name="PRIORITIZE_LEAST_ADJUSTMENT" object="[flash.text.engine.JustificationStyle]" playername="" text="JustificationStyle.PRIORITIZE_LEAST_ADJUSTMENT" tiptext="Bases justification on either expanding or compressingthe line, whichever gives a result closest to the desired width." version=""/>
               <string constant="true" helpurl="flash.text.engine:JustificationStyle:PUSH_IN_KINSOKU" name="PUSH_IN_KINSOKU" object="[flash.text.engine.JustificationStyle]" playername="" text="JustificationStyle.PUSH_IN_KINSOKU" tiptext="Bases justification on compressing kinsoku at the end of the line, or expanding it if no kinsoku occurs or if that space is insufficient." version=""/>
               <string constant="true" helpurl="flash.text.engine:JustificationStyle:PUSH_OUT_ONLY" name="PUSH_OUT_ONLY" object="[flash.text.engine.JustificationStyle]" playername="" text="JustificationStyle.PUSH_OUT_ONLY" tiptext="Bases justification on expanding the line." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="flash.text.engine:Kerning" id="[flash.text.engine.Kerning]" index="true" name="Kerning" sort="true" tiptext="The Kerning class is an enumeration of constant values used with ElementFormat.kerning.">
            <folder helpurl="flash.text.engine:Kerning" id="Properties" name="Properties" tiptext="Properties for class Kerning">
               <string constant="true" helpurl="flash.text.engine:Kerning:AUTO" name="AUTO" object="[flash.text.engine.Kerning]" playername="" text="Kerning.AUTO" tiptext="Used to indicate that kerning is enabled except where inappropriate in Asian typography." version=""/>
               <string constant="true" helpurl="flash.text.engine:Kerning:OFF" name="OFF" object="[flash.text.engine.Kerning]" playername="" text="Kerning.OFF" tiptext="Used to indicate kerning is disabled." version=""/>
               <string constant="true" helpurl="flash.text.engine:Kerning:ON" name="ON" object="[flash.text.engine.Kerning]" playername="" text="Kerning.ON" tiptext="Used to indicate kerning is enabled." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="flash.text.engine:LigatureLevel" id="[flash.text.engine.LigatureLevel]" index="true" name="LigatureLevel" sort="true" tiptext="The LigatureLevel class is an enumeration of constant values used in setting the ligatureLevel property of the ElementFormat class.">
            <folder helpurl="flash.text.engine:LigatureLevel" id="Properties" name="Properties" tiptext="Properties for class LigatureLevel">
               <string constant="true" helpurl="flash.text.engine:LigatureLevel:COMMON" name="COMMON" object="[flash.text.engine.LigatureLevel]" playername="" text="LigatureLevel.COMMON" tiptext="Used to specify common ligatures." version=""/>
               <string constant="true" helpurl="flash.text.engine:LigatureLevel:EXOTIC" name="EXOTIC" object="[flash.text.engine.LigatureLevel]" playername="" text="LigatureLevel.EXOTIC" tiptext="Used to specify exotic ligatures." version=""/>
               <string constant="true" helpurl="flash.text.engine:LigatureLevel:MINIMUM" name="MINIMUM" object="[flash.text.engine.LigatureLevel]" playername="" text="LigatureLevel.MINIMUM" tiptext="Used to specify minimum ligatures." version=""/>
               <string constant="true" helpurl="flash.text.engine:LigatureLevel:NONE" name="NONE" object="[flash.text.engine.LigatureLevel]" playername="" text="LigatureLevel.NONE" tiptext="Used to specify no ligatures." version=""/>
               <string constant="true" helpurl="flash.text.engine:LigatureLevel:UNCOMMON" name="UNCOMMON" object="[flash.text.engine.LigatureLevel]" playername="" text="LigatureLevel.UNCOMMON" tiptext="Used to specify uncommon ligatures." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="flash.text.engine:LineJustification" id="[flash.text.engine.LineJustification]" index="true" name="LineJustification" sort="true" tiptext="The LineJustification class is an enumeration of constant values used in setting the lineJustfication property of the TextJustifier subclasses.">
            <folder helpurl="flash.text.engine:LineJustification" id="Properties" name="Properties" tiptext="Properties for class LineJustification">
               <string constant="true" helpurl="flash.text.engine:LineJustification:ALL_BUT_LAST" name="ALL_BUT_LAST" object="[flash.text.engine.LineJustification]" playername="" text="LineJustification.ALL_BUT_LAST" tiptext="Justify all but the last line." version=""/>
               <string constant="true" helpurl="flash.text.engine:LineJustification:ALL_INCLUDING_LAST" name="ALL_INCLUDING_LAST" object="[flash.text.engine.LineJustification]" playername="" text="LineJustification.ALL_INCLUDING_LAST" tiptext="Justify all lines." version=""/>
               <string constant="true" helpurl="flash.text.engine:LineJustification:UNJUSTIFIED" name="UNJUSTIFIED" object="[flash.text.engine.LineJustification]" playername="" text="LineJustification.UNJUSTIFIED" tiptext="Do not justify lines." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="flash.text.engine:RenderingMode" id="[flash.text.engine.RenderingMode]" index="true" name="RenderingMode" sort="true" tiptext="The RenderingMode class provides values for rendering mode in the FontDescription class.">
            <folder helpurl="flash.text.engine:RenderingMode" id="Properties" name="Properties" tiptext="Properties for class RenderingMode">
               <string constant="true" helpurl="flash.text.engine:RenderingMode:CFF" name="CFF" object="[flash.text.engine.RenderingMode]" playername="" text="RenderingMode.CFF" tiptext="Sets rendering mode to CFF (Compact Font Format)." version=""/>
               <string constant="true" helpurl="flash.text.engine:RenderingMode:NORMAL" name="NORMAL" object="[flash.text.engine.RenderingMode]" playername="" text="RenderingMode.NORMAL" tiptext="Sets rendering mode to the rendering mode that is used in Flash Player 7 and earlier." version=""/>
            </folder>
         </folder>
         <folder asAncestors="flash.text.engine:TextJustifier,Object" helpurl="flash.text.engine:SpaceJustifier" id="[flash.text.engine.SpaceJustifier]" index="true" name="SpaceJustifier" sort="true" tiptext="The SpaceJustifier class represents properties that control the justification options for text lines in a text block.">
            <folder helpurl="flash.text.engine:SpaceJustifier" id="Methods" name="Methods" tiptext="Methods for class SpaceJustifier">
               <string constructor="true" helpurl="flash.text.engine:SpaceJustifier:SpaceJustifier" name="SpaceJustifier" object="[flash.text.engine.SpaceJustifier]" playername="" text="new SpaceJustifier(%[locale:String=en,lineJustification:String=unjustified,letterSpacing:Boolean=false]%)" tiptext="Creates a SpaceJustifier object." version="4"/>
               <string helpurl="flash.text.engine:SpaceJustifier:clone" name="clone" object="[flash.text.engine.SpaceJustifier]" playername="" text=".clone(%%):flash.text.engine:TextJustifier" tiptext="Constructs a cloned copy of the SpaceJustifier." version="4"/>
            </folder>
            <folder helpurl="flash.text.engine:SpaceJustifier" id="Properties" name="Properties" tiptext="Properties for class SpaceJustifier">
               <string helpurl="flash.text.engine:SpaceJustifier:letterSpacing:get" name="letterSpacing" object="[flash.text.engine.SpaceJustifier]" playername="" text=".letterSpacing" tiptext="Specifies whether to use letter spacing during justification." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="flash.text.engine:TabAlignment" id="[flash.text.engine.TabAlignment]" index="true" name="TabAlignment" sort="true" tiptext="The TabAlignment class is an enumeration of constant values that you can use to set the tabAlignment property of the TabStop class.">
            <folder helpurl="flash.text.engine:TabAlignment" id="Properties" name="Properties" tiptext="Properties for class TabAlignment">
               <string constant="true" helpurl="flash.text.engine:TabAlignment:CENTER" name="CENTER" object="[flash.text.engine.TabAlignment]" playername="" text="TabAlignment.CENTER" tiptext="Positions the center of the tabbed text at the tab stop." version=""/>
               <string constant="true" helpurl="flash.text.engine:TabAlignment:DECIMAL" name="DECIMAL" object="[flash.text.engine.TabAlignment]" playername="" text="TabAlignment.DECIMAL" tiptext="Positions the alignment token of the tabbed text at the tab stop." version=""/>
               <string constant="true" helpurl="flash.text.engine:TabAlignment:END" name="END" object="[flash.text.engine.TabAlignment]" playername="" text="TabAlignment.END" tiptext="Positions the end of the tabbed text at the tab stop." version=""/>
               <string constant="true" helpurl="flash.text.engine:TabAlignment:START" name="START" object="[flash.text.engine.TabAlignment]" playername="" text="TabAlignment.START" tiptext="Positions the start of the tabbed text at the tab stop." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="flash.text.engine:TabStop" id="[flash.text.engine.TabStop]" index="true" name="TabStop" sort="true" tiptext="The TabStop class represents the properties of a tab stop in a text block.">
            <folder helpurl="flash.text.engine:TabStop" id="Methods" name="Methods" tiptext="Methods for class TabStop">
               <string constructor="true" helpurl="flash.text.engine:TabStop:TabStop" name="TabStop" object="[flash.text.engine.TabStop]" playername="" text="new TabStop(%[alignment:String=start,position:Number=0.0,decimalAlignmentToken:String]%)" tiptext="Creates a new TabStop." version="4"/>
            </folder>
            <folder helpurl="flash.text.engine:TabStop" id="Properties" name="Properties" tiptext="Properties for class TabStop">
               <string helpurl="flash.text.engine:TabStop:alignment:get" name="alignment" object="[flash.text.engine.TabStop]" playername="" text=".alignment" tiptext="Specifies the tab alignment for this tab stop." version=""/>
               <string helpurl="flash.text.engine:TabStop:decimalAlignmentToken:get" name="decimalAlignmentToken" object="[flash.text.engine.TabStop]" playername="" text=".decimalAlignmentToken" tiptext="Specifies the alignment token to use when you set the alignment property to TabAlignment.DECIMAL." version=""/>
               <string helpurl="flash.text.engine:TabStop:position:get" name="position" object="[flash.text.engine.TabStop]" playername="" text=".position" tiptext="The position of the tab stop, in pixels, relative to the start of the text line." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="flash.text.engine:TextBaseline" id="[flash.text.engine.TextBaseline]" index="true" name="TextBaseline" sort="true" tiptext="The TextBaseline class is an enumeration of constant values to use in setting the dominantBaseline andalignmentBaseline properties of the ElementFormat class.">
            <folder helpurl="flash.text.engine:TextBaseline" id="Properties" name="Properties" tiptext="Properties for class TextBaseline">
               <string constant="true" helpurl="flash.text.engine:TextBaseline:ASCENT" name="ASCENT" object="[flash.text.engine.TextBaseline]" playername="" text="TextBaseline.ASCENT" tiptext="Specifies an ascent baseline." version=""/>
               <string constant="true" helpurl="flash.text.engine:TextBaseline:DESCENT" name="DESCENT" object="[flash.text.engine.TextBaseline]" playername="" text="TextBaseline.DESCENT" tiptext="Specifies a descent baseline." version=""/>
               <string constant="true" helpurl="flash.text.engine:TextBaseline:IDEOGRAPHIC_BOTTOM" name="IDEOGRAPHIC_BOTTOM" object="[flash.text.engine.TextBaseline]" playername="" text="TextBaseline.IDEOGRAPHIC_BOTTOM" tiptext="Specifies an ideographic bottom baseline." version=""/>
               <string constant="true" helpurl="flash.text.engine:TextBaseline:IDEOGRAPHIC_CENTER" name="IDEOGRAPHIC_CENTER" object="[flash.text.engine.TextBaseline]" playername="" text="TextBaseline.IDEOGRAPHIC_CENTER" tiptext="Specifies an ideographic center baseline." version=""/>
               <string constant="true" helpurl="flash.text.engine:TextBaseline:IDEOGRAPHIC_TOP" name="IDEOGRAPHIC_TOP" object="[flash.text.engine.TextBaseline]" playername="" text="TextBaseline.IDEOGRAPHIC_TOP" tiptext="Specifies an ideographic top baseline." version=""/>
               <string constant="true" helpurl="flash.text.engine:TextBaseline:ROMAN" name="ROMAN" object="[flash.text.engine.TextBaseline]" playername="" text="TextBaseline.ROMAN" tiptext="Specifies a roman baseline." version=""/>
               <string constant="true" helpurl="flash.text.engine:TextBaseline:USE_DOMINANT_BASELINE" name="USE_DOMINANT_BASELINE" object="[flash.text.engine.TextBaseline]" playername="" text="TextBaseline.USE_DOMINANT_BASELINE" tiptext="Specifies that the alignmentBaseline is the same as the dominantBaseline." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="flash.text.engine:TextBlock" id="[flash.text.engine.TextBlock]" index="true" name="TextBlock" sort="true" tiptext="The TextBlock class is a factory for the creation of TextLine objects, which you can render by placing them on the display list.">
            <folder helpurl="flash.text.engine:TextBlock" id="Methods" name="Methods" tiptext="Methods for class TextBlock">
               <string constructor="true" helpurl="flash.text.engine:TextBlock:TextBlock" name="TextBlock" object="[flash.text.engine.TextBlock]" playername="" text="new TextBlock(%[content:flash.text.engine:ContentElement=null,tabStops:Vector$flash.text.engine:TabStop=null,textJustifier:flash.text.engine:TextJustifier=null,lineRotation:String=rotate0,baselineZero:String=roman,bidiLevel:int=0,applyNonLinearFontScaling:Boolean=true,baselineFontDescription:flash.text.engine:FontDescription=null,baselineFontSize:Number=12.0]%)" tiptext="Creates a TextBlock object" version="4"/>
               <string helpurl="flash.text.engine:TextBlock:createTextLine" name="createTextLine" object="[flash.text.engine.TextBlock]" playername="" text=".createTextLine(%[previousLine:flash.text.engine:TextLine=null,width:Number=1000000,lineOffset:Number=0.0,fitSomething:Boolean=false]%):flash.text.engine:TextLine" tiptext="Instructs the text block to create a line of text from its content, beginning at the point specified by the previousLine parameter and breaking at the point specified by the width parameter." version="4"/>
               <string helpurl="flash.text.engine:TextBlock:findNextAtomBoundary" name="findNextAtomBoundary" object="[flash.text.engine.TextBlock]" playername="" text=".findNextAtomBoundary(%afterCharIndex:int%):int" tiptext="Finds the index of the next atom boundary from the specified character index, not including the character at the specified index." version="4"/>
               <string helpurl="flash.text.engine:TextBlock:findNextWordBoundary" name="findNextWordBoundary" object="[flash.text.engine.TextBlock]" playername="" text=".findNextWordBoundary(%afterCharIndex:int%):int" tiptext="Finds the index of the next word boundary from the specified character index, not including the character at the specified index." version="4"/>
               <string helpurl="flash.text.engine:TextBlock:findPreviousAtomBoundary" name="findPreviousAtomBoundary" object="[flash.text.engine.TextBlock]" playername="" text=".findPreviousAtomBoundary(%beforeCharIndex:int%):int" tiptext="Finds the index of the previous atom boundary to the specified character index, not including the character at the specified index." version="4"/>
               <string helpurl="flash.text.engine:TextBlock:findPreviousWordBoundary" name="findPreviousWordBoundary" object="[flash.text.engine.TextBlock]" playername="" text=".findPreviousWordBoundary(%beforeCharIndex:int%):int" tiptext="Finds the index of the previous word boundary to the specified character index, not including the character at the specified index." version="4"/>
               <string helpurl="flash.text.engine:TextBlock:getTextLineAtCharIndex" name="getTextLineAtCharIndex" object="[flash.text.engine.TextBlock]" playername="" text=".getTextLineAtCharIndex(%charIndex:int%):flash.text.engine:TextLine" tiptext="Returns the TextLine containing the character specified by the charIndex parameter." version="4"/>
               <string helpurl="flash.text.engine:TextBlock:recreateTextLine" name="recreateTextLine" object="[flash.text.engine.TextBlock]" playername="" text=".recreateTextLine(%textLine:flash.text.engine:TextLine[,previousLine:flash.text.engine:TextLine=null,width:Number=1000000,lineOffset:Number=0.0,fitSomething:Boolean=false]%):flash.text.engine:TextLine" tiptext="Instructs the text block to re use an existing text line to create a line of text from its content, beginning at the point specified by the previousLine parameter and breaking at the point specified by the width parameter." version="4"/>
               <string helpurl="flash.text.engine:TextBlock:releaseLineCreationData" name="releaseLineCreationData" object="[flash.text.engine.TextBlock]" playername="" text=".releaseLineCreationData(%%):void" tiptext="Instructs the text block to release all the temporary data associated with the creation of text lines." version="4"/>
               <string helpurl="flash.text.engine:TextBlock:releaseLines" name="releaseLines" object="[flash.text.engine.TextBlock]" playername="" text=".releaseLines(%firstLine:flash.text.engine:TextLine,lastLine:flash.text.engine:TextLine%):void" tiptext="Removes a range of text lines from the list of lines maintained by the TextBlock." version="4"/>
            </folder>
            <folder helpurl="flash.text.engine:TextBlock" id="Properties" name="Properties" tiptext="Properties for class TextBlock">
               <string helpurl="flash.text.engine:TextBlock:userData" name="userData" object="[flash.text.engine.TextBlock]" playername="" text=".userData" tiptext="Provides a way for the application to associate arbitrary data with the text block." version=""/>
               <string helpurl="flash.text.engine:TextBlock:applyNonLinearFontScaling:get" name="applyNonLinearFontScaling" object="[flash.text.engine.TextBlock]" playername="" text=".applyNonLinearFontScaling" tiptext="Specifies that you want to enhance screen appearance at the expense of what-you-see-is-what-you-get (WYSIWYG) print fidelity." version=""/>
               <string helpurl="flash.text.engine:TextBlock:baselineFontDescription:get" name="baselineFontDescription" object="[flash.text.engine.TextBlock]" playername="" text=".baselineFontDescription" tiptext="The font used to determine the baselines for all the lines created from the block, independent of their content." version=""/>
               <string helpurl="flash.text.engine:TextBlock:baselineFontSize:get" name="baselineFontSize" object="[flash.text.engine.TextBlock]" playername="" text=".baselineFontSize" tiptext="The font size used to calculate the baselines for the lines created from the block." version=""/>
               <string helpurl="flash.text.engine:TextBlock:baselineZero:get" name="baselineZero" object="[flash.text.engine.TextBlock]" playername="" text=".baselineZero" tiptext="Specifies which baseline is at y=0 for lines created from this block." version=""/>
               <string helpurl="flash.text.engine:TextBlock:bidiLevel:get" name="bidiLevel" object="[flash.text.engine.TextBlock]" playername="" text=".bidiLevel" tiptext="Specifies the default bidirectional embedding level of the text in the text block." version=""/>
               <string helpurl="flash.text.engine:TextBlock:content:get" name="content" object="[flash.text.engine.TextBlock]" playername="" text=".content" tiptext="Holds the contents of the text block." version=""/>
               <string helpurl="flash.text.engine:TextBlock:firstInvalidLine:get" name="firstInvalidLine" object="[flash.text.engine.TextBlock]" playername="" text=".firstInvalidLine" tiptext="Identifies the first line in the text block in which TextLine.validity is not equal to TextLineValidity.VALID." version=""/>
               <string helpurl="flash.text.engine:TextBlock:firstLine:get" name="firstLine" object="[flash.text.engine.TextBlock]" playername="" text=".firstLine" tiptext="The first TextLine in the TextBlock, if any." version=""/>
               <string helpurl="flash.text.engine:TextBlock:lastLine:get" name="lastLine" object="[flash.text.engine.TextBlock]" playername="" text=".lastLine" tiptext="The last TextLine in the TextBlock, if any." version=""/>
               <string helpurl="flash.text.engine:TextBlock:lineRotation:get" name="lineRotation" object="[flash.text.engine.TextBlock]" playername="" text=".lineRotation" tiptext="Rotates the text lines in the text block as a unit." version=""/>
               <string helpurl="flash.text.engine:TextBlock:tabStops:get" name="tabStops" object="[flash.text.engine.TextBlock]" playername="" text=".tabStops" tiptext="Specifies the tab stops for the text in the text block, in the form of a Vector of TabStop objects." version=""/>
               <string helpurl="flash.text.engine:TextBlock:textJustifier:get" name="textJustifier" object="[flash.text.engine.TextBlock]" playername="" text=".textJustifier" tiptext="Specifies the TextJustifier to use during line creation." version=""/>
               <string helpurl="flash.text.engine:TextBlock:textLineCreationResult:get" name="textLineCreationResult" object="[flash.text.engine.TextBlock]" playername="" text=".textLineCreationResult" tiptext="Indicates the result of a createTextLine() operation." version=""/>
            </folder>
         </folder>
         <folder asAncestors="flash.text.engine:ContentElement,Object" helpurl="flash.text.engine:TextElement" id="[flash.text.engine.TextElement]" index="true" name="TextElement" sort="true" tiptext="The TextElement class represents a string of formatted text.">
            <folder helpurl="flash.text.engine:TextElement" id="Methods" name="Methods" tiptext="Methods for class TextElement">
               <string constructor="true" helpurl="flash.text.engine:TextElement:TextElement" name="TextElement" object="[flash.text.engine.TextElement]" playername="" text="new TextElement(%[text:String=null,elementFormat:flash.text.engine:ElementFormat=null,eventMirror:flash.events:EventDispatcher=null,textRotation:String=rotate0]%)" tiptext="Creates a new TextElement instance." version="4"/>
               <string helpurl="flash.text.engine:TextElement:replaceText" name="replaceText" object="[flash.text.engine.TextElement]" playername="" text=".replaceText(%beginIndex:int,endIndex:int,newText:String%):void" tiptext="Replaces the range of characters that the beginIndex and endIndex parameters specify with the contents of the newText parameter." version="4"/>
            </folder>
            <folder helpurl="flash.text.engine:TextElement" id="Properties" name="Properties" tiptext="Properties for class TextElement">
               <string helpurl="flash.text.engine:TextElement:text:set" name="text" object="[flash.text.engine.TextElement]" playername="" text=".text" tiptext="Receives the text that is the content of the element." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="flash.text.engine:TextJustifier" id="[flash.text.engine.TextJustifier]" index="true" name="TextJustifier" sort="true" tiptext="The TextJustifier class is an abstract base class for the justifier types that you can apply to a TextBlock, specifically the EastAsianJustifier and SpaceJustifier classes.">
            <folder helpurl="flash.text.engine:TextJustifier" id="Methods" name="Methods" tiptext="Methods for class TextJustifier">
               <string constructor="true" helpurl="flash.text.engine:TextJustifier:TextJustifier" name="TextJustifier" object="[flash.text.engine.TextJustifier]" playername="" text="new TextJustifier(%locale:String,lineJustification:String%)" tiptext="Calling the new TextJustifier() constructor throws an ArgumentError exception." version="4"/>
               <string helpurl="flash.text.engine:TextJustifier:clone" name="clone" object="[flash.text.engine.TextJustifier]" playername="" text=".clone(%%):flash.text.engine:TextJustifier" tiptext="Constructs a cloned copy of the TextJustifier." version="4"/>
               <string helpurl="flash.text.engine:TextJustifier:getJustifierForLocale" name="getJustifierForLocale" object="[flash.text.engine.TextJustifier]" playername="" static="true" text="TextJustifier.getJustifierForLocale(%locale:String%):flash.text.engine:TextJustifier" tiptext="Constructs a default TextJustifier subclass appropriate to the specified locale." version="4"/>
            </folder>
            <folder helpurl="flash.text.engine:TextJustifier" id="Properties" name="Properties" tiptext="Properties for class TextJustifier">
               <string helpurl="flash.text.engine:TextJustifier:lineJustification:get" name="lineJustification" object="[flash.text.engine.TextJustifier]" playername="" text=".lineJustification" tiptext="Specifies the line justification for the text in a text block." version=""/>
               <string helpurl="flash.text.engine:TextJustifier:locale:get" name="locale" object="[flash.text.engine.TextJustifier]" playername="" text=".locale" tiptext="Specifies the locale to determine the justification rules for the text in a text block." version=""/>
            </folder>
         </folder>
         <folder asAncestors="flash.display:DisplayObjectContainer,flash.display:InteractiveObject,flash.display:DisplayObject,flash.events:EventDispatcher,Object" helpurl="flash.text.engine:TextLine" id="[flash.text.engine.TextLine]" index="true" name="TextLine" sort="true" tiptext="The TextLine class is used to display text on the display list.">
            <folder helpurl="flash.text.engine:TextLine" id="Methods" name="Methods" tiptext="Methods for class TextLine">
               <string helpurl="flash.text.engine:TextLine:getAtomBidiLevel" name="getAtomBidiLevel" object="[flash.text.engine.TextLine]" playername="" text=".getAtomBidiLevel(%atomIndex:int%):int" tiptext="Gets the bidirectional level of the atom at the specified index." version="4"/>
               <string helpurl="flash.text.engine:TextLine:getAtomBounds" name="getAtomBounds" object="[flash.text.engine.TextLine]" playername="" text=".getAtomBounds(%atomIndex:int%):flash.geom:Rectangle" tiptext="Gets the bounds of the atom at the specified index relative to the text line." version="4"/>
               <string helpurl="flash.text.engine:TextLine:getAtomCenter" name="getAtomCenter" object="[flash.text.engine.TextLine]" playername="" text=".getAtomCenter(%atomIndex:int%):Number" tiptext="Gets the center of the atom as measured along the baseline at the specified index." version="4"/>
               <string helpurl="flash.text.engine:TextLine:getAtomGraphic" name="getAtomGraphic" object="[flash.text.engine.TextLine]" playername="" text=".getAtomGraphic(%atomIndex:int%):flash.display:DisplayObject" tiptext="Gets the graphic of the atom at the specified index, or null if the atom is a character." version="4"/>
               <string helpurl="flash.text.engine:TextLine:getAtomIndexAtCharIndex" name="getAtomIndexAtCharIndex" object="[flash.text.engine.TextLine]" playername="" text=".getAtomIndexAtCharIndex(%charIndex:int%):int" tiptext="Returns the index of the atom containing the character specified by the charIndex parameter, or -1 if the character does not contribute to any atom in the line." version="4"/>
               <string helpurl="flash.text.engine:TextLine:getAtomIndexAtPoint" name="getAtomIndexAtPoint" object="[flash.text.engine.TextLine]" playername="" text=".getAtomIndexAtPoint(%stageX:Number,stageY:Number%):int" tiptext="Returns the index of the atom at the point specified by the x and y parameters, or -1 if no atom exists at that point." version="4"/>
               <string helpurl="flash.text.engine:TextLine:getAtomTextBlockBeginIndex" name="getAtomTextBlockBeginIndex" object="[flash.text.engine.TextLine]" playername="" text=".getAtomTextBlockBeginIndex(%atomIndex:int%):int" tiptext="Gets the text block begin index of the atom at the specified index." version="4"/>
               <string helpurl="flash.text.engine:TextLine:getAtomTextBlockEndIndex" name="getAtomTextBlockEndIndex" object="[flash.text.engine.TextLine]" playername="" text=".getAtomTextBlockEndIndex(%atomIndex:int%):int" tiptext="Gets the text block end index of the atom at the specified index." version="4"/>
               <string helpurl="flash.text.engine:TextLine:getAtomTextRotation" name="getAtomTextRotation" object="[flash.text.engine.TextLine]" playername="" text=".getAtomTextRotation(%atomIndex:int%):String" tiptext="Gets the rotation of the atom at the specified index." version="4"/>
               <string helpurl="flash.text.engine:TextLine:getAtomWordBoundaryOnLeft" name="getAtomWordBoundaryOnLeft" object="[flash.text.engine.TextLine]" playername="" text=".getAtomWordBoundaryOnLeft(%atomIndex:int%):Boolean" tiptext="Indicates whether a word boundary occurs to the left of the atom at the specified index." version="4"/>
               <string helpurl="flash.text.engine:TextLine:getBaselinePosition" name="getBaselinePosition" object="[flash.text.engine.TextLine]" playername="" text=".getBaselinePosition(%baseline:String%):Number" tiptext="Gets the position of the specified baseline, relative to TextBlock.baselineZero." version="4"/>
               <string helpurl="flash.text.engine:TextLine:getMirrorRegion" name="getMirrorRegion" object="[flash.text.engine.TextLine]" playername="" text=".getMirrorRegion(%mirror:flash.events:EventDispatcher%):flash.text.engine:TextLineMirrorRegion" tiptext="Returns the first TextLineMirrorRegion on the line whose mirror property matches that specified by the mirror parameter, or null if no match exists." version="4"/>
            </folder>
            <folder helpurl="flash.text.engine:TextLine" id="Properties" name="Properties" tiptext="Properties for class TextLine">
               <string constant="true" helpurl="flash.text.engine:TextLine:MAX_LINE_WIDTH" name="MAX_LINE_WIDTH" object="[flash.text.engine.TextLine]" playername="" text="TextLine.MAX_LINE_WIDTH" tiptext="The maximum requested width of a text line, in pixels." version=""/>
               <string helpurl="flash.text.engine:TextLine:userData" name="userData" object="[flash.text.engine.TextLine]" playername="" text=".userData" tiptext="Provides a way for the application to associate arbitrary data with the text line." version=""/>
               <string helpurl="flash.text.engine:TextLine:ascent:get" name="ascent" object="[flash.text.engine.TextLine]" playername="" text=".ascent" tiptext="Specifies the number of pixels from the baseline to the top of the tallest characters in the line." version=""/>
               <string helpurl="flash.text.engine:TextLine:atomCount:get" name="atomCount" object="[flash.text.engine.TextLine]" playername="" text=".atomCount" tiptext="The number of atoms in the line, which is the number of indivisible elements, including spaces and graphic elements." version=""/>
               <string helpurl="flash.text.engine:TextLine:descent:get" name="descent" object="[flash.text.engine.TextLine]" playername="" text=".descent" tiptext="Specifies the number of pixels from the baseline to the bottom of the lowest-descending characters in the line." version=""/>
               <string helpurl="flash.text.engine:TextLine:hasGraphicElement:get" name="hasGraphicElement" object="[flash.text.engine.TextLine]" playername="" text=".hasGraphicElement" tiptext="Indicates whether the text line contains any graphic elements." version=""/>
               <string helpurl="flash.text.engine:TextLine:mirrorRegions:get" name="mirrorRegions" object="[flash.text.engine.TextLine]" playername="" text=".mirrorRegions" tiptext="A Vector containing the TextLineMirrorRegion objects associated with the line, or null if none exist." version=""/>
               <string helpurl="flash.text.engine:TextLine:nextLine:get" name="nextLine" object="[flash.text.engine.TextLine]" playername="" text=".nextLine" tiptext="The next TextLine in the TextBlock, or null if the current line is the last line in the block or the validity of the line is TextLineValidity.STATIC." version=""/>
               <string helpurl="flash.text.engine:TextLine:previousLine:get" name="previousLine" object="[flash.text.engine.TextLine]" playername="" text=".previousLine" tiptext="The previous TextLine in the TextBlock, or null if the line is the first line in the block or the validity of the line is TextLineValidity.STATIC." version=""/>
               <string helpurl="flash.text.engine:TextLine:rawTextLength:get" name="rawTextLength" object="[flash.text.engine.TextLine]" playername="" text=".rawTextLength" tiptext="The length of the raw text in the text block that became the line, including the U+FDEF characters representing graphic elements and any trailing spaces, which are part of the line but not are displayed." version=""/>
               <string helpurl="flash.text.engine:TextLine:specifiedWidth:get" name="specifiedWidth" object="[flash.text.engine.TextLine]" playername="" text=".specifiedWidth" tiptext="The width that was specified to the TextBlock.createTextLine() method when it created the line." version=""/>
               <string helpurl="flash.text.engine:TextLine:textBlockBeginIndex:get" name="textBlockBeginIndex" object="[flash.text.engine.TextLine]" playername="" text=".textBlockBeginIndex" tiptext="The index of the first character of the line in the raw text of the text block." version=""/>
               <string helpurl="flash.text.engine:TextLine:textBlock:get" name="textBlock" object="[flash.text.engine.TextLine]" playername="" text=".textBlock" tiptext="The TextBlock containing this text line, or null if the validity of the line is TextLineValidity.STATIC, meaning that the connection between the line and the TextBlock has been severed." version=""/>
               <string helpurl="flash.text.engine:TextLine:textHeight:get" name="textHeight" object="[flash.text.engine.TextLine]" playername="" text=".textHeight" tiptext="The logical height of the text line, which is equal to ascent + descent." version=""/>
               <string helpurl="flash.text.engine:TextLine:textWidth:get" name="textWidth" object="[flash.text.engine.TextLine]" playername="" text=".textWidth" tiptext="The logical width of the text line, which is the width that the text engine uses to lay out the line." version=""/>
               <string helpurl="flash.text.engine:TextLine:unjustifiedTextWidth:get" name="unjustifiedTextWidth" object="[flash.text.engine.TextLine]" playername="" text=".unjustifiedTextWidth" tiptext="The width of the line if it was not justified." version=""/>
               <string helpurl="flash.text.engine:TextLine:validity:get" name="validity" object="[flash.text.engine.TextLine]" playername="" text=".validity" tiptext="Specifies the current validity of the text line." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="flash.text.engine:TextLineCreationResult" id="[flash.text.engine.TextLineCreationResult]" index="true" name="TextLineCreationResult" sort="true" tiptext="The TextLineCreationResult class is an enumeration of constant values used with TextBlock.textLineCreationResult.">
            <folder helpurl="flash.text.engine:TextLineCreationResult" id="Properties" name="Properties" tiptext="Properties for class TextLineCreationResult">
               <string constant="true" helpurl="flash.text.engine:TextLineCreationResult:COMPLETE" name="COMPLETE" object="[flash.text.engine.TextLineCreationResult]" playername="" text="TextLineCreationResult.COMPLETE" tiptext="Indicates no line was created because all text in the block had already been broken." version=""/>
               <string constant="true" helpurl="flash.text.engine:TextLineCreationResult:EMERGENCY" name="EMERGENCY" object="[flash.text.engine.TextLineCreationResult]" playername="" text="TextLineCreationResult.EMERGENCY" tiptext="Indicates the line was created with an emergency break because no break opportunitywas available in the specified width." version=""/>
               <string constant="true" helpurl="flash.text.engine:TextLineCreationResult:INSUFFICIENT_WIDTH" name="INSUFFICIENT_WIDTH" object="[flash.text.engine.TextLineCreationResult]" playername="" text="TextLineCreationResult.INSUFFICIENT_WIDTH" tiptext="Indicates no line was created because no text could fit in the specified widthand fitSomething was not specified in the call to createTextLine()." version=""/>
               <string constant="true" helpurl="flash.text.engine:TextLineCreationResult:SUCCESS" name="SUCCESS" object="[flash.text.engine.TextLineCreationResult]" playername="" text="TextLineCreationResult.SUCCESS" tiptext="Indicates the line was successfully broken." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="flash.text.engine:TextLineMirrorRegion" id="[flash.text.engine.TextLineMirrorRegion]" index="true" name="TextLineMirrorRegion" sort="true" tiptext="The TextLineMirrorRegion class represents a portion of a text line wherein events are mirrored to another event dispatcher.">
            <folder helpurl="flash.text.engine:TextLineMirrorRegion" id="Properties" name="Properties" tiptext="Properties for class TextLineMirrorRegion">
               <string helpurl="flash.text.engine:TextLineMirrorRegion:bounds:get" name="bounds" object="[flash.text.engine.TextLineMirrorRegion]" playername="" text=".bounds" tiptext="The bounds of the mirror region, relative to the text line." version=""/>
               <string helpurl="flash.text.engine:TextLineMirrorRegion:element:get" name="element" object="[flash.text.engine.TextLineMirrorRegion]" playername="" text=".element" tiptext="The ContentElement object from which the mirror region was derived." version=""/>
               <string helpurl="flash.text.engine:TextLineMirrorRegion:mirror:get" name="mirror" object="[flash.text.engine.TextLineMirrorRegion]" playername="" text=".mirror" tiptext="The EventDispatcher object to which events affecting the mirror region are mirrored." version=""/>
               <string helpurl="flash.text.engine:TextLineMirrorRegion:nextRegion:get" name="nextRegion" object="[flash.text.engine.TextLineMirrorRegion]" playername="" text=".nextRegion" tiptext="The next TextLineMirrorRegion in the set derived from the text element, or null if the current region is the last mirror region in the set." version=""/>
               <string helpurl="flash.text.engine:TextLineMirrorRegion:previousRegion:get" name="previousRegion" object="[flash.text.engine.TextLineMirrorRegion]" playername="" text=".previousRegion" tiptext="The previous TextLineMirrorRegion in the set derived from the text element, or null if the current region is the first mirror region in the set." version=""/>
               <string helpurl="flash.text.engine:TextLineMirrorRegion:textLine:get" name="textLine" object="[flash.text.engine.TextLineMirrorRegion]" playername="" text=".textLine" tiptext="The TextLine containing this mirror region." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="flash.text.engine:TextLineValidity" id="[flash.text.engine.TextLineValidity]" index="true" name="TextLineValidity" sort="true" tiptext="The TextLineValidity class is an enumeration of constant values for setting the validity property of the TextLine class.">
            <folder helpurl="flash.text.engine:TextLineValidity" id="Properties" name="Properties" tiptext="Properties for class TextLineValidity">
               <string constant="true" helpurl="flash.text.engine:TextLineValidity:INVALID" name="INVALID" object="[flash.text.engine.TextLineValidity]" playername="" text="TextLineValidity.INVALID" tiptext="Specifies that the line is invalid." version=""/>
               <string constant="true" helpurl="flash.text.engine:TextLineValidity:POSSIBLY_INVALID" name="POSSIBLY_INVALID" object="[flash.text.engine.TextLineValidity]" playername="" text="TextLineValidity.POSSIBLY_INVALID" tiptext="Specifies that the text line is possibly invalid." version=""/>
               <string constant="true" helpurl="flash.text.engine:TextLineValidity:STATIC" name="STATIC" object="[flash.text.engine.TextLineValidity]" playername="" text="TextLineValidity.STATIC" tiptext="Specifies that the line is static, and that the connection between the line and the text block has been severed." version=""/>
               <string constant="true" helpurl="flash.text.engine:TextLineValidity:VALID" name="VALID" object="[flash.text.engine.TextLineValidity]" playername="" text="TextLineValidity.VALID" tiptext="Specifies that the text line is valid." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="flash.text.engine:TextRotation" id="[flash.text.engine.TextRotation]" index="true" name="TextRotation" sort="true" tiptext="The TextRotation class is an enumeration of constant values used with the following properties:ElementFormat.textRotation, ContentElement.textRotation,TextBlock.lineRotation, and TextLine.getAtomTextRotation().">
            <folder helpurl="flash.text.engine:TextRotation" id="Properties" name="Properties" tiptext="Properties for class TextRotation">
               <string constant="true" helpurl="flash.text.engine:TextRotation:AUTO" name="AUTO" object="[flash.text.engine.TextRotation]" playername="" text="TextRotation.AUTO" tiptext="Specifies a 90 degree counter clockwise rotation for full width and wide glyphs only,as determined by the Unicode properties of the glyph." version=""/>
               <string constant="true" helpurl="flash.text.engine:TextRotation:ROTATE_0" name="ROTATE_0" object="[flash.text.engine.TextRotation]" playername="" text="TextRotation.ROTATE_0" tiptext="Specifies no rotation." version=""/>
               <string constant="true" helpurl="flash.text.engine:TextRotation:ROTATE_180" name="ROTATE_180" object="[flash.text.engine.TextRotation]" playername="" text="TextRotation.ROTATE_180" tiptext="Specifies a 180 degree rotation." version=""/>
               <string constant="true" helpurl="flash.text.engine:TextRotation:ROTATE_270" name="ROTATE_270" object="[flash.text.engine.TextRotation]" playername="" text="TextRotation.ROTATE_270" tiptext="Specifies a 270 degree clockwise rotation." version=""/>
               <string constant="true" helpurl="flash.text.engine:TextRotation:ROTATE_90" name="ROTATE_90" object="[flash.text.engine.TextRotation]" playername="" text="TextRotation.ROTATE_90" tiptext="Specifies a 90 degree clockwise rotation." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="flash.text.engine:TypographicCase" id="[flash.text.engine.TypographicCase]" index="true" name="TypographicCase" sort="true" tiptext="The TypographicCase class is an enumeration of constant values for setting the typographicCase property of the ElementFormat class.">
            <folder helpurl="flash.text.engine:TypographicCase" id="Properties" name="Properties" tiptext="Properties for class TypographicCase">
               <string constant="true" helpurl="flash.text.engine:TypographicCase:CAPS_AND_SMALL_CAPS" name="CAPS_AND_SMALL_CAPS" object="[flash.text.engine.TypographicCase]" playername="" text="TypographicCase.CAPS_AND_SMALL_CAPS" tiptext="Specifies that all lowercase characters use small-caps glyphs on output." version=""/>
               <string constant="true" helpurl="flash.text.engine:TypographicCase:CAPS" name="CAPS" object="[flash.text.engine.TypographicCase]" playername="" text="TypographicCase.CAPS" tiptext="Specifies that spacing is adjusted for uppercase characters on output." version=""/>
               <string constant="true" helpurl="flash.text.engine:TypographicCase:DEFAULT" name="DEFAULT" object="[flash.text.engine.TypographicCase]" playername="" text="TypographicCase.DEFAULT" tiptext="Specifies default typographic case." version=""/>
               <string constant="true" helpurl="flash.text.engine:TypographicCase:LOWERCASE" name="LOWERCASE" object="[flash.text.engine.TypographicCase]" playername="" text="TypographicCase.LOWERCASE" tiptext="Specifies that all characters use lowercase glyphs on output." version=""/>
               <string constant="true" helpurl="flash.text.engine:TypographicCase:SMALL_CAPS" name="SMALL_CAPS" object="[flash.text.engine.TypographicCase]" playername="" text="TypographicCase.SMALL_CAPS" tiptext="Specifies that uppercase characters use small-caps glyphs on output." version=""/>
               <string constant="true" helpurl="flash.text.engine:TypographicCase:TITLE" name="TITLE" object="[flash.text.engine.TypographicCase]" playername="" text="TypographicCase.TITLE" tiptext="Specifies that uppercase characters use title glyphs on output." version=""/>
               <string constant="true" helpurl="flash.text.engine:TypographicCase:UPPERCASE" name="UPPERCASE" object="[flash.text.engine.TypographicCase]" playername="" text="TypographicCase.UPPERCASE" tiptext="Specifies that all characters use uppercase glyphs on output." version=""/>
            </folder>
         </folder>
      </folder>
      <folder helpurl="flash.ui" id="flash.ui" name="flash.ui" sort="true" tiptext="Classes for package flash.ui">
         <folder asAncestors="Object" helpurl="flash.ui:Keyboard" id="[flash.ui.Keyboard]" index="true" name="Keyboard" sort="true" tiptext="The Keyboard class is used to build an interface that can be controlled by a user with a standard keyboard.">
            <folder helpurl="flash.ui:Keyboard" id="Properties" name="Properties" tiptext="Properties for class Keyboard">
               <string constant="true" helpurl="flash.ui:Keyboard:ALTERNATE" name="ALTERNATE" object="[flash.ui.Keyboard]" playername="" text="Keyboard.ALTERNATE" tiptext="Constant associated with the key code value for the Alternate (Option) key (18)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:A" name="A" object="[flash.ui.Keyboard]" playername="" text="Keyboard.A" tiptext="Constant associated with the key code value for the A key (65)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:BACKQUOTE" name="BACKQUOTE" object="[flash.ui.Keyboard]" playername="" text="Keyboard.BACKQUOTE" tiptext="Constant associated with the key code value for the ` key (192)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:BACKSLASH" name="BACKSLASH" object="[flash.ui.Keyboard]" playername="" text="Keyboard.BACKSLASH" tiptext="Constant associated with the key code value for the \ key (220)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:BACKSPACE" name="BACKSPACE" object="[flash.ui.Keyboard]" playername="" text="Keyboard.BACKSPACE" tiptext="Constant associated with the key code value for the Backspace key (8)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:B" name="B" object="[flash.ui.Keyboard]" playername="" text="Keyboard.B" tiptext="Constant associated with the key code value for the B key (66)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:CAPS_LOCK" name="CAPS_LOCK" object="[flash.ui.Keyboard]" playername="" text="Keyboard.CAPS_LOCK" tiptext="Constant associated with the key code value for the Caps Lock key (20)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:COMMAND" name="COMMAND" object="[flash.ui.Keyboard]" playername="" text="Keyboard.COMMAND" tiptext="Constant associated with the Mac command key (15)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:COMMA" name="COMMA" object="[flash.ui.Keyboard]" playername="" text="Keyboard.COMMA" tiptext="Constant associated with the key code value for the , key (188)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:CONTROL" name="CONTROL" object="[flash.ui.Keyboard]" playername="" text="Keyboard.CONTROL" tiptext="Constant associated with the key code value for the Control key (17)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:CharCodeStrings" name="CharCodeStrings" object="[flash.ui.Keyboard]" playername="" text="Keyboard.CharCodeStrings" tiptext="An array containing all the defined key name constants." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:C" name="C" object="[flash.ui.Keyboard]" playername="" text="Keyboard.C" tiptext="Constant associated with the key code value for the C key (67)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:DELETE" name="DELETE" object="[flash.ui.Keyboard]" playername="" text="Keyboard.DELETE" tiptext="Constant associated with the key code value for the Delete key (46)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:DOWN" name="DOWN" object="[flash.ui.Keyboard]" playername="" text="Keyboard.DOWN" tiptext="Constant associated with the key code value for the Down Arrow key (40)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:D" name="D" object="[flash.ui.Keyboard]" playername="" text="Keyboard.D" tiptext="Constant associated with the key code value for the D key (68)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:END" name="END" object="[flash.ui.Keyboard]" playername="" text="Keyboard.END" tiptext="Constant associated with the key code value for the End key (35)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:ENTER" name="ENTER" object="[flash.ui.Keyboard]" playername="" text="Keyboard.ENTER" tiptext="Constant associated with the key code value for the Enter key (13)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:EQUAL" name="EQUAL" object="[flash.ui.Keyboard]" playername="" text="Keyboard.EQUAL" tiptext="Constant associated with the key code value for the = key (187)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:ESCAPE" name="ESCAPE" object="[flash.ui.Keyboard]" playername="" text="Keyboard.ESCAPE" tiptext="Constant associated with the key code value for the Escape key (27)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:E" name="E" object="[flash.ui.Keyboard]" playername="" text="Keyboard.E" tiptext="Constant associated with the key code value for the E key (69)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:F10" name="F10" object="[flash.ui.Keyboard]" playername="" text="Keyboard.F10" tiptext="Constant associated with the key code value for the F10 key (121)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:F11" name="F11" object="[flash.ui.Keyboard]" playername="" text="Keyboard.F11" tiptext="Constant associated with the key code value for the F11 key (122)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:F12" name="F12" object="[flash.ui.Keyboard]" playername="" text="Keyboard.F12" tiptext="Constant associated with the key code value for the F12 key (123)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:F13" name="F13" object="[flash.ui.Keyboard]" playername="" text="Keyboard.F13" tiptext="Constant associated with the key code value for the F13 key (124)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:F14" name="F14" object="[flash.ui.Keyboard]" playername="" text="Keyboard.F14" tiptext="Constant associated with the key code value for the F14 key (125)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:F15" name="F15" object="[flash.ui.Keyboard]" playername="" text="Keyboard.F15" tiptext="Constant associated with the key code value for the F15 key (126)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:F1" name="F1" object="[flash.ui.Keyboard]" playername="" text="Keyboard.F1" tiptext="Constant associated with the key code value for the F1 key (112)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:F2" name="F2" object="[flash.ui.Keyboard]" playername="" text="Keyboard.F2" tiptext="Constant associated with the key code value for the F2 key (113)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:F3" name="F3" object="[flash.ui.Keyboard]" playername="" text="Keyboard.F3" tiptext="Constant associated with the key code value for the F3 key (114)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:F4" name="F4" object="[flash.ui.Keyboard]" playername="" text="Keyboard.F4" tiptext="Constant associated with the key code value for the F4 key (115)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:F5" name="F5" object="[flash.ui.Keyboard]" playername="" text="Keyboard.F5" tiptext="Constant associated with the key code value for the F5 key (116)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:F6" name="F6" object="[flash.ui.Keyboard]" playername="" text="Keyboard.F6" tiptext="Constant associated with the key code value for the F6 key (117)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:F7" name="F7" object="[flash.ui.Keyboard]" playername="" text="Keyboard.F7" tiptext="Constant associated with the key code value for the F7 key (118)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:F8" name="F8" object="[flash.ui.Keyboard]" playername="" text="Keyboard.F8" tiptext="Constant associated with the key code value for the F8 key (119)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:F9" name="F9" object="[flash.ui.Keyboard]" playername="" text="Keyboard.F9" tiptext="Constant associated with the key code value for the F9 key (120)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:F" name="F" object="[flash.ui.Keyboard]" playername="" text="Keyboard.F" tiptext="Constant associated with the key code value for the F key (70)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:G" name="G" object="[flash.ui.Keyboard]" playername="" text="Keyboard.G" tiptext="Constant associated with the key code value for the G key (71)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:HOME" name="HOME" object="[flash.ui.Keyboard]" playername="" text="Keyboard.HOME" tiptext="Constant associated with the key code value for the Home key (36)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:H" name="H" object="[flash.ui.Keyboard]" playername="" text="Keyboard.H" tiptext="Constant associated with the key code value for the H key (72)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:INSERT" name="INSERT" object="[flash.ui.Keyboard]" playername="" text="Keyboard.INSERT" tiptext="Constant associated with the key code value for the Insert key (45)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:I" name="I" object="[flash.ui.Keyboard]" playername="" text="Keyboard.I" tiptext="Constant associated with the key code value for the I key (73)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:J" name="J" object="[flash.ui.Keyboard]" playername="" text="Keyboard.J" tiptext="Constant associated with the key code value for the J key (74)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:KEYNAME_BEGIN" name="KEYNAME_BEGIN" object="[flash.ui.Keyboard]" playername="" text="Keyboard.KEYNAME_BEGIN" tiptext="The Begin key" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:KEYNAME_BREAK" name="KEYNAME_BREAK" object="[flash.ui.Keyboard]" playername="" text="Keyboard.KEYNAME_BREAK" tiptext="The Break key" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:KEYNAME_CLEARDISPLAY" name="KEYNAME_CLEARDISPLAY" object="[flash.ui.Keyboard]" playername="" text="Keyboard.KEYNAME_CLEARDISPLAY" tiptext="The Clear Display key" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:KEYNAME_CLEARLINE" name="KEYNAME_CLEARLINE" object="[flash.ui.Keyboard]" playername="" text="Keyboard.KEYNAME_CLEARLINE" tiptext="The Clear Line key" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:KEYNAME_DELETECHAR" name="KEYNAME_DELETECHAR" object="[flash.ui.Keyboard]" playername="" text="Keyboard.KEYNAME_DELETECHAR" tiptext="The Delete Character key" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:KEYNAME_DELETELINE" name="KEYNAME_DELETELINE" object="[flash.ui.Keyboard]" playername="" text="Keyboard.KEYNAME_DELETELINE" tiptext="The Delete Line key" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:KEYNAME_DELETE" name="KEYNAME_DELETE" object="[flash.ui.Keyboard]" playername="" text="Keyboard.KEYNAME_DELETE" tiptext="The Delete key" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:KEYNAME_DOWNARROW" name="KEYNAME_DOWNARROW" object="[flash.ui.Keyboard]" playername="" text="Keyboard.KEYNAME_DOWNARROW" tiptext="The down arrow" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:KEYNAME_END" name="KEYNAME_END" object="[flash.ui.Keyboard]" playername="" text="Keyboard.KEYNAME_END" tiptext="The End key" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:KEYNAME_EXECUTE" name="KEYNAME_EXECUTE" object="[flash.ui.Keyboard]" playername="" text="Keyboard.KEYNAME_EXECUTE" tiptext="The Execute key" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:KEYNAME_F10" name="KEYNAME_F10" object="[flash.ui.Keyboard]" playername="" text="Keyboard.KEYNAME_F10" tiptext="The F10 key" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:KEYNAME_F11" name="KEYNAME_F11" object="[flash.ui.Keyboard]" playername="" text="Keyboard.KEYNAME_F11" tiptext="The F11 key" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:KEYNAME_F12" name="KEYNAME_F12" object="[flash.ui.Keyboard]" playername="" text="Keyboard.KEYNAME_F12" tiptext="The F12 key" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:KEYNAME_F13" name="KEYNAME_F13" object="[flash.ui.Keyboard]" playername="" text="Keyboard.KEYNAME_F13" tiptext="The F13 key" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:KEYNAME_F14" name="KEYNAME_F14" object="[flash.ui.Keyboard]" playername="" text="Keyboard.KEYNAME_F14" tiptext="The F14 key" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:KEYNAME_F15" name="KEYNAME_F15" object="[flash.ui.Keyboard]" playername="" text="Keyboard.KEYNAME_F15" tiptext="The F15 key" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:KEYNAME_F16" name="KEYNAME_F16" object="[flash.ui.Keyboard]" playername="" text="Keyboard.KEYNAME_F16" tiptext="The F16 key" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:KEYNAME_F17" name="KEYNAME_F17" object="[flash.ui.Keyboard]" playername="" text="Keyboard.KEYNAME_F17" tiptext="The F17 key" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:KEYNAME_F18" name="KEYNAME_F18" object="[flash.ui.Keyboard]" playername="" text="Keyboard.KEYNAME_F18" tiptext="The F18 key" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:KEYNAME_F19" name="KEYNAME_F19" object="[flash.ui.Keyboard]" playername="" text="Keyboard.KEYNAME_F19" tiptext="The F19 key" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:KEYNAME_F1" name="KEYNAME_F1" object="[flash.ui.Keyboard]" playername="" text="Keyboard.KEYNAME_F1" tiptext="The F1 key" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:KEYNAME_F20" name="KEYNAME_F20" object="[flash.ui.Keyboard]" playername="" text="Keyboard.KEYNAME_F20" tiptext="The F20 key" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:KEYNAME_F21" name="KEYNAME_F21" object="[flash.ui.Keyboard]" playername="" text="Keyboard.KEYNAME_F21" tiptext="The F21 key" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:KEYNAME_F22" name="KEYNAME_F22" object="[flash.ui.Keyboard]" playername="" text="Keyboard.KEYNAME_F22" tiptext="The F22 key" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:KEYNAME_F23" name="KEYNAME_F23" object="[flash.ui.Keyboard]" playername="" text="Keyboard.KEYNAME_F23" tiptext="The F23 key" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:KEYNAME_F24" name="KEYNAME_F24" object="[flash.ui.Keyboard]" playername="" text="Keyboard.KEYNAME_F24" tiptext="The F24 key" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:KEYNAME_F25" name="KEYNAME_F25" object="[flash.ui.Keyboard]" playername="" text="Keyboard.KEYNAME_F25" tiptext="The F25 key" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:KEYNAME_F26" name="KEYNAME_F26" object="[flash.ui.Keyboard]" playername="" text="Keyboard.KEYNAME_F26" tiptext="The F26 key" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:KEYNAME_F27" name="KEYNAME_F27" object="[flash.ui.Keyboard]" playername="" text="Keyboard.KEYNAME_F27" tiptext="The F27 key" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:KEYNAME_F28" name="KEYNAME_F28" object="[flash.ui.Keyboard]" playername="" text="Keyboard.KEYNAME_F28" tiptext="The F28 key" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:KEYNAME_F29" name="KEYNAME_F29" object="[flash.ui.Keyboard]" playername="" text="Keyboard.KEYNAME_F29" tiptext="The F29 key" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:KEYNAME_F2" name="KEYNAME_F2" object="[flash.ui.Keyboard]" playername="" text="Keyboard.KEYNAME_F2" tiptext="The F2 key" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:KEYNAME_F30" name="KEYNAME_F30" object="[flash.ui.Keyboard]" playername="" text="Keyboard.KEYNAME_F30" tiptext="" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:KEYNAME_F31" name="KEYNAME_F31" object="[flash.ui.Keyboard]" playername="" text="Keyboard.KEYNAME_F31" tiptext="The F31 key" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:KEYNAME_F32" name="KEYNAME_F32" object="[flash.ui.Keyboard]" playername="" text="Keyboard.KEYNAME_F32" tiptext="The F32 key" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:KEYNAME_F33" name="KEYNAME_F33" object="[flash.ui.Keyboard]" playername="" text="Keyboard.KEYNAME_F33" tiptext="The F33 key" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:KEYNAME_F34" name="KEYNAME_F34" object="[flash.ui.Keyboard]" playername="" text="Keyboard.KEYNAME_F34" tiptext="The F34 key" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:KEYNAME_F35" name="KEYNAME_F35" object="[flash.ui.Keyboard]" playername="" text="Keyboard.KEYNAME_F35" tiptext="The F35 key" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:KEYNAME_F3" name="KEYNAME_F3" object="[flash.ui.Keyboard]" playername="" text="Keyboard.KEYNAME_F3" tiptext="The F3 key" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:KEYNAME_F4" name="KEYNAME_F4" object="[flash.ui.Keyboard]" playername="" text="Keyboard.KEYNAME_F4" tiptext="The F4 key" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:KEYNAME_F5" name="KEYNAME_F5" object="[flash.ui.Keyboard]" playername="" text="Keyboard.KEYNAME_F5" tiptext="The F5 key" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:KEYNAME_F6" name="KEYNAME_F6" object="[flash.ui.Keyboard]" playername="" text="Keyboard.KEYNAME_F6" tiptext="The F6 key" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:KEYNAME_F7" name="KEYNAME_F7" object="[flash.ui.Keyboard]" playername="" text="Keyboard.KEYNAME_F7" tiptext="The F7 key" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:KEYNAME_F8" name="KEYNAME_F8" object="[flash.ui.Keyboard]" playername="" text="Keyboard.KEYNAME_F8" tiptext="The F8 key" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:KEYNAME_F9" name="KEYNAME_F9" object="[flash.ui.Keyboard]" playername="" text="Keyboard.KEYNAME_F9" tiptext="The F9 key" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:KEYNAME_FIND" name="KEYNAME_FIND" object="[flash.ui.Keyboard]" playername="" text="Keyboard.KEYNAME_FIND" tiptext="The Find key" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:KEYNAME_HELP" name="KEYNAME_HELP" object="[flash.ui.Keyboard]" playername="" text="Keyboard.KEYNAME_HELP" tiptext="The Help key" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:KEYNAME_HOME" name="KEYNAME_HOME" object="[flash.ui.Keyboard]" playername="" text="Keyboard.KEYNAME_HOME" tiptext="The Home key" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:KEYNAME_INSERTCHAR" name="KEYNAME_INSERTCHAR" object="[flash.ui.Keyboard]" playername="" text="Keyboard.KEYNAME_INSERTCHAR" tiptext="The Insert Character key" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:KEYNAME_INSERTLINE" name="KEYNAME_INSERTLINE" object="[flash.ui.Keyboard]" playername="" text="Keyboard.KEYNAME_INSERTLINE" tiptext="The Insert Line key" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:KEYNAME_INSERT" name="KEYNAME_INSERT" object="[flash.ui.Keyboard]" playername="" text="Keyboard.KEYNAME_INSERT" tiptext="The Insert key" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:KEYNAME_LEFTARROW" name="KEYNAME_LEFTARROW" object="[flash.ui.Keyboard]" playername="" text="Keyboard.KEYNAME_LEFTARROW" tiptext="The left arrow" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:KEYNAME_MENU" name="KEYNAME_MENU" object="[flash.ui.Keyboard]" playername="" text="Keyboard.KEYNAME_MENU" tiptext="The Menu key" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:KEYNAME_MODESWITCH" name="KEYNAME_MODESWITCH" object="[flash.ui.Keyboard]" playername="" text="Keyboard.KEYNAME_MODESWITCH" tiptext="The Mode Switch key" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:KEYNAME_NEXT" name="KEYNAME_NEXT" object="[flash.ui.Keyboard]" playername="" text="Keyboard.KEYNAME_NEXT" tiptext="The Next key" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:KEYNAME_PAGEDOWN" name="KEYNAME_PAGEDOWN" object="[flash.ui.Keyboard]" playername="" text="Keyboard.KEYNAME_PAGEDOWN" tiptext="The Page Down key" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:KEYNAME_PAGEUP" name="KEYNAME_PAGEUP" object="[flash.ui.Keyboard]" playername="" text="Keyboard.KEYNAME_PAGEUP" tiptext="The Page Up key" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:KEYNAME_PAUSE" name="KEYNAME_PAUSE" object="[flash.ui.Keyboard]" playername="" text="Keyboard.KEYNAME_PAUSE" tiptext="The Pause key" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:KEYNAME_PREV" name="KEYNAME_PREV" object="[flash.ui.Keyboard]" playername="" text="Keyboard.KEYNAME_PREV" tiptext="The Previous key" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:KEYNAME_PRINTSCREEN" name="KEYNAME_PRINTSCREEN" object="[flash.ui.Keyboard]" playername="" text="Keyboard.KEYNAME_PRINTSCREEN" tiptext="The Print Screen" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:KEYNAME_PRINT" name="KEYNAME_PRINT" object="[flash.ui.Keyboard]" playername="" text="Keyboard.KEYNAME_PRINT" tiptext="The Print key" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:KEYNAME_REDO" name="KEYNAME_REDO" object="[flash.ui.Keyboard]" playername="" text="Keyboard.KEYNAME_REDO" tiptext="The Redo key" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:KEYNAME_RESET" name="KEYNAME_RESET" object="[flash.ui.Keyboard]" playername="" text="Keyboard.KEYNAME_RESET" tiptext="The Reset key" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:KEYNAME_RIGHTARROW" name="KEYNAME_RIGHTARROW" object="[flash.ui.Keyboard]" playername="" text="Keyboard.KEYNAME_RIGHTARROW" tiptext="The right arrow" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:KEYNAME_SCROLLLOCK" name="KEYNAME_SCROLLLOCK" object="[flash.ui.Keyboard]" playername="" text="Keyboard.KEYNAME_SCROLLLOCK" tiptext="The Scroll Lock key" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:KEYNAME_SELECT" name="KEYNAME_SELECT" object="[flash.ui.Keyboard]" playername="" text="Keyboard.KEYNAME_SELECT" tiptext="The Select key" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:KEYNAME_STOP" name="KEYNAME_STOP" object="[flash.ui.Keyboard]" playername="" text="Keyboard.KEYNAME_STOP" tiptext="The Stop key" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:KEYNAME_SYSREQ" name="KEYNAME_SYSREQ" object="[flash.ui.Keyboard]" playername="" text="Keyboard.KEYNAME_SYSREQ" tiptext="The System Request key" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:KEYNAME_SYSTEM" name="KEYNAME_SYSTEM" object="[flash.ui.Keyboard]" playername="" text="Keyboard.KEYNAME_SYSTEM" tiptext="The System key" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:KEYNAME_UNDO" name="KEYNAME_UNDO" object="[flash.ui.Keyboard]" playername="" text="Keyboard.KEYNAME_UNDO" tiptext="The Undo key" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:KEYNAME_UPARROW" name="KEYNAME_UPARROW" object="[flash.ui.Keyboard]" playername="" text="Keyboard.KEYNAME_UPARROW" tiptext="The up arrow" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:KEYNAME_USER" name="KEYNAME_USER" object="[flash.ui.Keyboard]" playername="" text="Keyboard.KEYNAME_USER" tiptext="The User key" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:K" name="K" object="[flash.ui.Keyboard]" playername="" text="Keyboard.K" tiptext="Constant associated with the key code value for the K key (75)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:LEFTBRACKET" name="LEFTBRACKET" object="[flash.ui.Keyboard]" playername="" text="Keyboard.LEFTBRACKET" tiptext="Constant associated with the key code value for the [ key (219)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:LEFT" name="LEFT" object="[flash.ui.Keyboard]" playername="" text="Keyboard.LEFT" tiptext="Constant associated with the key code value for the Left Arrow key (37)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:L" name="L" object="[flash.ui.Keyboard]" playername="" text="Keyboard.L" tiptext="Constant associated with the key code value for the L key (76)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:MINUS" name="MINUS" object="[flash.ui.Keyboard]" playername="" text="Keyboard.MINUS" tiptext="Constant associated with the key code value for the - key (189)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:M" name="M" object="[flash.ui.Keyboard]" playername="" text="Keyboard.M" tiptext="Constant associated with the key code value for the M key (77)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:NUMBER_0" name="NUMBER_0" object="[flash.ui.Keyboard]" playername="" text="Keyboard.NUMBER_0" tiptext="Constant associated with the key code value for the 0 key (48)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:NUMBER_1" name="NUMBER_1" object="[flash.ui.Keyboard]" playername="" text="Keyboard.NUMBER_1" tiptext="Constant associated with the key code value for the 1 key (49)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:NUMBER_2" name="NUMBER_2" object="[flash.ui.Keyboard]" playername="" text="Keyboard.NUMBER_2" tiptext="Constant associated with the key code value for the 2 key (50)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:NUMBER_3" name="NUMBER_3" object="[flash.ui.Keyboard]" playername="" text="Keyboard.NUMBER_3" tiptext="Constant associated with the key code value for the 3 key (51)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:NUMBER_4" name="NUMBER_4" object="[flash.ui.Keyboard]" playername="" text="Keyboard.NUMBER_4" tiptext="Constant associated with the key code value for the 4 key (52)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:NUMBER_5" name="NUMBER_5" object="[flash.ui.Keyboard]" playername="" text="Keyboard.NUMBER_5" tiptext="Constant associated with the key code value for the 5 key (53)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:NUMBER_6" name="NUMBER_6" object="[flash.ui.Keyboard]" playername="" text="Keyboard.NUMBER_6" tiptext="Constant associated with the key code value for the 6 key (54)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:NUMBER_7" name="NUMBER_7" object="[flash.ui.Keyboard]" playername="" text="Keyboard.NUMBER_7" tiptext="Constant associated with the key code value for the 7 key (55)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:NUMBER_8" name="NUMBER_8" object="[flash.ui.Keyboard]" playername="" text="Keyboard.NUMBER_8" tiptext="Constant associated with the key code value for the 8 key (56)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:NUMBER_9" name="NUMBER_9" object="[flash.ui.Keyboard]" playername="" text="Keyboard.NUMBER_9" tiptext="Constant associated with the key code value for the 9 key (57)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:NUMPAD_0" name="NUMPAD_0" object="[flash.ui.Keyboard]" playername="" text="Keyboard.NUMPAD_0" tiptext="Constant associated with the key code value for the number 0 key on the number pad (96)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:NUMPAD_1" name="NUMPAD_1" object="[flash.ui.Keyboard]" playername="" text="Keyboard.NUMPAD_1" tiptext="Constant associated with the key code value for the number 1 key on the number pad (97)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:NUMPAD_2" name="NUMPAD_2" object="[flash.ui.Keyboard]" playername="" text="Keyboard.NUMPAD_2" tiptext="Constant associated with the key code value for the number 2 key on the number pad (98)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:NUMPAD_3" name="NUMPAD_3" object="[flash.ui.Keyboard]" playername="" text="Keyboard.NUMPAD_3" tiptext="Constant associated with the key code value for the number 3 key on the number pad (99)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:NUMPAD_4" name="NUMPAD_4" object="[flash.ui.Keyboard]" playername="" text="Keyboard.NUMPAD_4" tiptext="Constant associated with the key code value for the number 4 key on the number pad (100)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:NUMPAD_5" name="NUMPAD_5" object="[flash.ui.Keyboard]" playername="" text="Keyboard.NUMPAD_5" tiptext="Constant associated with the key code value for the number 5 key on the number pad (101)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:NUMPAD_6" name="NUMPAD_6" object="[flash.ui.Keyboard]" playername="" text="Keyboard.NUMPAD_6" tiptext="Constant associated with the key code value for the number 6 key on the number pad (102)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:NUMPAD_7" name="NUMPAD_7" object="[flash.ui.Keyboard]" playername="" text="Keyboard.NUMPAD_7" tiptext="Constant associated with the key code value for the number 7 key on the number pad (103)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:NUMPAD_8" name="NUMPAD_8" object="[flash.ui.Keyboard]" playername="" text="Keyboard.NUMPAD_8" tiptext="Constant associated with the key code value for the number 8 key on the number pad (104)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:NUMPAD_9" name="NUMPAD_9" object="[flash.ui.Keyboard]" playername="" text="Keyboard.NUMPAD_9" tiptext="Constant associated with the key code value for the number 9 key on the number pad (105)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:NUMPAD_ADD" name="NUMPAD_ADD" object="[flash.ui.Keyboard]" playername="" text="Keyboard.NUMPAD_ADD" tiptext="Constant associated with the key code value for the addition key on the number pad (107)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:NUMPAD_DECIMAL" name="NUMPAD_DECIMAL" object="[flash.ui.Keyboard]" playername="" text="Keyboard.NUMPAD_DECIMAL" tiptext="Constant associated with the key code value for the decimal key on the number pad (110)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:NUMPAD_DIVIDE" name="NUMPAD_DIVIDE" object="[flash.ui.Keyboard]" playername="" text="Keyboard.NUMPAD_DIVIDE" tiptext="Constant associated with the key code value for the division key on the number pad (111)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:NUMPAD_ENTER" name="NUMPAD_ENTER" object="[flash.ui.Keyboard]" playername="" text="Keyboard.NUMPAD_ENTER" tiptext="Constant associated with the key code value for the Enter key on the number pad (108)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:NUMPAD_MULTIPLY" name="NUMPAD_MULTIPLY" object="[flash.ui.Keyboard]" playername="" text="Keyboard.NUMPAD_MULTIPLY" tiptext="Constant associated with the key code value for the multiplication key on the number pad (106)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:NUMPAD_SUBTRACT" name="NUMPAD_SUBTRACT" object="[flash.ui.Keyboard]" playername="" text="Keyboard.NUMPAD_SUBTRACT" tiptext="Constant associated with the key code value for the subtraction key on the number pad (109)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:NUMPAD" name="NUMPAD" object="[flash.ui.Keyboard]" playername="" text="Keyboard.NUMPAD" tiptext="Constant associated with the pseudo-key code for the the number pad (21)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:N" name="N" object="[flash.ui.Keyboard]" playername="" text="Keyboard.N" tiptext="Constant associated with the key code value for the N key (78)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:O" name="O" object="[flash.ui.Keyboard]" playername="" text="Keyboard.O" tiptext="Constant associated with the key code value for the O key (79)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:PAGE_DOWN" name="PAGE_DOWN" object="[flash.ui.Keyboard]" playername="" text="Keyboard.PAGE_DOWN" tiptext="Constant associated with the key code value for the Page Down key (34)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:PAGE_UP" name="PAGE_UP" object="[flash.ui.Keyboard]" playername="" text="Keyboard.PAGE_UP" tiptext="Constant associated with the key code value for the Page Up key (33)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:PERIOD" name="PERIOD" object="[flash.ui.Keyboard]" playername="" text="Keyboard.PERIOD" tiptext="Constant associated with the key code value for the ." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:P" name="P" object="[flash.ui.Keyboard]" playername="" text="Keyboard.P" tiptext="Constant associated with the key code value for the P key (80)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:QUOTE" name="QUOTE" object="[flash.ui.Keyboard]" playername="" text="Keyboard.QUOTE" tiptext="Constant associated with the key code value for the ' key (222)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:Q" name="Q" object="[flash.ui.Keyboard]" playername="" text="Keyboard.Q" tiptext="Constant associated with the key code value for the Q key (81)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:RIGHTBRACKET" name="RIGHTBRACKET" object="[flash.ui.Keyboard]" playername="" text="Keyboard.RIGHTBRACKET" tiptext="Constant associated with the key code value for the ] key (221)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:RIGHT" name="RIGHT" object="[flash.ui.Keyboard]" playername="" text="Keyboard.RIGHT" tiptext="Constant associated with the key code value for the Right Arrow key (39)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:R" name="R" object="[flash.ui.Keyboard]" playername="" text="Keyboard.R" tiptext="Constant associated with the key code value for the R key (82)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:SEMICOLON" name="SEMICOLON" object="[flash.ui.Keyboard]" playername="" text="Keyboard.SEMICOLON" tiptext="Constant associated with the key code value for the ; key (186)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:SHIFT" name="SHIFT" object="[flash.ui.Keyboard]" playername="" text="Keyboard.SHIFT" tiptext="Constant associated with the key code value for the Shift key (16)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:SLASH" name="SLASH" object="[flash.ui.Keyboard]" playername="" text="Keyboard.SLASH" tiptext="Constant associated with the key code value for the / key (191)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:SPACE" name="SPACE" object="[flash.ui.Keyboard]" playername="" text="Keyboard.SPACE" tiptext="Constant associated with the key code value for the Spacebar (32)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:STRING_BEGIN" name="STRING_BEGIN" object="[flash.ui.Keyboard]" playername="" text="Keyboard.STRING_BEGIN" tiptext="The OS X Unicode Begin constant" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:STRING_BREAK" name="STRING_BREAK" object="[flash.ui.Keyboard]" playername="" text="Keyboard.STRING_BREAK" tiptext="The OS X Unicode Break constant" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:STRING_CLEARDISPLAY" name="STRING_CLEARDISPLAY" object="[flash.ui.Keyboard]" playername="" text="Keyboard.STRING_CLEARDISPLAY" tiptext="The OS X Unicode Clear Display constant" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:STRING_CLEARLINE" name="STRING_CLEARLINE" object="[flash.ui.Keyboard]" playername="" text="Keyboard.STRING_CLEARLINE" tiptext="The OS X Unicode Clear Line constant" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:STRING_DELETECHAR" name="STRING_DELETECHAR" object="[flash.ui.Keyboard]" playername="" text="Keyboard.STRING_DELETECHAR" tiptext="The OS X Unicode Delete Character constant" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:STRING_DELETELINE" name="STRING_DELETELINE" object="[flash.ui.Keyboard]" playername="" text="Keyboard.STRING_DELETELINE" tiptext="The OS X Unicode Delete Line constant" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:STRING_DELETE" name="STRING_DELETE" object="[flash.ui.Keyboard]" playername="" text="Keyboard.STRING_DELETE" tiptext="The OS X Unicode Delete constant" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:STRING_DOWNARROW" name="STRING_DOWNARROW" object="[flash.ui.Keyboard]" playername="" text="Keyboard.STRING_DOWNARROW" tiptext="The OS X Unicode down arrow constant" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:STRING_END" name="STRING_END" object="[flash.ui.Keyboard]" playername="" text="Keyboard.STRING_END" tiptext="The OS X Unicode End constant" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:STRING_EXECUTE" name="STRING_EXECUTE" object="[flash.ui.Keyboard]" playername="" text="Keyboard.STRING_EXECUTE" tiptext="The OS X Unicode Execute constant" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:STRING_F10" name="STRING_F10" object="[flash.ui.Keyboard]" playername="" text="Keyboard.STRING_F10" tiptext="The OS X Unicode F10 constant" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:STRING_F11" name="STRING_F11" object="[flash.ui.Keyboard]" playername="" text="Keyboard.STRING_F11" tiptext="The OS X Unicode F11 constant" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:STRING_F12" name="STRING_F12" object="[flash.ui.Keyboard]" playername="" text="Keyboard.STRING_F12" tiptext="The OS X Unicode F12 constant" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:STRING_F13" name="STRING_F13" object="[flash.ui.Keyboard]" playername="" text="Keyboard.STRING_F13" tiptext="The OS X Unicode F13 constant" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:STRING_F14" name="STRING_F14" object="[flash.ui.Keyboard]" playername="" text="Keyboard.STRING_F14" tiptext="The OS X Unicode F14 constant" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:STRING_F15" name="STRING_F15" object="[flash.ui.Keyboard]" playername="" text="Keyboard.STRING_F15" tiptext="The OS X Unicode F15 constant" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:STRING_F16" name="STRING_F16" object="[flash.ui.Keyboard]" playername="" text="Keyboard.STRING_F16" tiptext="The OS X Unicode F16 constant" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:STRING_F17" name="STRING_F17" object="[flash.ui.Keyboard]" playername="" text="Keyboard.STRING_F17" tiptext="The OS X Unicode F17 constant" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:STRING_F18" name="STRING_F18" object="[flash.ui.Keyboard]" playername="" text="Keyboard.STRING_F18" tiptext="The OS X Unicode F18 constant" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:STRING_F19" name="STRING_F19" object="[flash.ui.Keyboard]" playername="" text="Keyboard.STRING_F19" tiptext="The OS X Unicode F19 constant" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:STRING_F1" name="STRING_F1" object="[flash.ui.Keyboard]" playername="" text="Keyboard.STRING_F1" tiptext="The OS X Unicode F1 constant" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:STRING_F20" name="STRING_F20" object="[flash.ui.Keyboard]" playername="" text="Keyboard.STRING_F20" tiptext="The OS X Unicode F20 constant" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:STRING_F21" name="STRING_F21" object="[flash.ui.Keyboard]" playername="" text="Keyboard.STRING_F21" tiptext="The OS X Unicode F21 constant" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:STRING_F22" name="STRING_F22" object="[flash.ui.Keyboard]" playername="" text="Keyboard.STRING_F22" tiptext="The OS X Unicode F22 constant" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:STRING_F23" name="STRING_F23" object="[flash.ui.Keyboard]" playername="" text="Keyboard.STRING_F23" tiptext="The OS X Unicode F23 constant" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:STRING_F24" name="STRING_F24" object="[flash.ui.Keyboard]" playername="" text="Keyboard.STRING_F24" tiptext="The OS X Unicode F24 constant" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:STRING_F25" name="STRING_F25" object="[flash.ui.Keyboard]" playername="" text="Keyboard.STRING_F25" tiptext="The OS X Unicode F25 constant" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:STRING_F26" name="STRING_F26" object="[flash.ui.Keyboard]" playername="" text="Keyboard.STRING_F26" tiptext="The OS X Unicode F26 constant" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:STRING_F27" name="STRING_F27" object="[flash.ui.Keyboard]" playername="" text="Keyboard.STRING_F27" tiptext="The OS X Unicode F27 constant" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:STRING_F28" name="STRING_F28" object="[flash.ui.Keyboard]" playername="" text="Keyboard.STRING_F28" tiptext="The OS X Unicode F28 constant" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:STRING_F29" name="STRING_F29" object="[flash.ui.Keyboard]" playername="" text="Keyboard.STRING_F29" tiptext="The OS X Unicode F29 constant" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:STRING_F2" name="STRING_F2" object="[flash.ui.Keyboard]" playername="" text="Keyboard.STRING_F2" tiptext="The OS X Unicode F2 constant" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:STRING_F30" name="STRING_F30" object="[flash.ui.Keyboard]" playername="" text="Keyboard.STRING_F30" tiptext="The OS X Unicode F30 constant" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:STRING_F31" name="STRING_F31" object="[flash.ui.Keyboard]" playername="" text="Keyboard.STRING_F31" tiptext="The OS X Unicode F31 constant" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:STRING_F32" name="STRING_F32" object="[flash.ui.Keyboard]" playername="" text="Keyboard.STRING_F32" tiptext="The OS X Unicode F32 constant" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:STRING_F33" name="STRING_F33" object="[flash.ui.Keyboard]" playername="" text="Keyboard.STRING_F33" tiptext="The OS X Unicode F33 constant" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:STRING_F34" name="STRING_F34" object="[flash.ui.Keyboard]" playername="" text="Keyboard.STRING_F34" tiptext="The OS X Unicode F34 constant" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:STRING_F35" name="STRING_F35" object="[flash.ui.Keyboard]" playername="" text="Keyboard.STRING_F35" tiptext="The OS X Unicode F35 constant" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:STRING_F3" name="STRING_F3" object="[flash.ui.Keyboard]" playername="" text="Keyboard.STRING_F3" tiptext="The OS X Unicode F3 constant" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:STRING_F4" name="STRING_F4" object="[flash.ui.Keyboard]" playername="" text="Keyboard.STRING_F4" tiptext="The OS X Unicode F4 constant" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:STRING_F5" name="STRING_F5" object="[flash.ui.Keyboard]" playername="" text="Keyboard.STRING_F5" tiptext="The OS X Unicode F5 constant" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:STRING_F6" name="STRING_F6" object="[flash.ui.Keyboard]" playername="" text="Keyboard.STRING_F6" tiptext="The OS X Unicode F6 constant" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:STRING_F7" name="STRING_F7" object="[flash.ui.Keyboard]" playername="" text="Keyboard.STRING_F7" tiptext="The OS X Unicode F7 constant" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:STRING_F8" name="STRING_F8" object="[flash.ui.Keyboard]" playername="" text="Keyboard.STRING_F8" tiptext="The OS X Unicode F8 constant" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:STRING_F9" name="STRING_F9" object="[flash.ui.Keyboard]" playername="" text="Keyboard.STRING_F9" tiptext="The OS X Unicode F9 constant" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:STRING_FIND" name="STRING_FIND" object="[flash.ui.Keyboard]" playername="" text="Keyboard.STRING_FIND" tiptext="The OS X Unicode Find constant" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:STRING_HELP" name="STRING_HELP" object="[flash.ui.Keyboard]" playername="" text="Keyboard.STRING_HELP" tiptext="The OS X Unicode Help constant" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:STRING_HOME" name="STRING_HOME" object="[flash.ui.Keyboard]" playername="" text="Keyboard.STRING_HOME" tiptext="The OS X Unicode Home constant" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:STRING_INSERTCHAR" name="STRING_INSERTCHAR" object="[flash.ui.Keyboard]" playername="" text="Keyboard.STRING_INSERTCHAR" tiptext="The OS X Unicode Insert Character constant" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:STRING_INSERTLINE" name="STRING_INSERTLINE" object="[flash.ui.Keyboard]" playername="" text="Keyboard.STRING_INSERTLINE" tiptext="The OS X Unicode Insert Line constant" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:STRING_INSERT" name="STRING_INSERT" object="[flash.ui.Keyboard]" playername="" text="Keyboard.STRING_INSERT" tiptext="The OS X Unicode Insert constant" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:STRING_LEFTARROW" name="STRING_LEFTARROW" object="[flash.ui.Keyboard]" playername="" text="Keyboard.STRING_LEFTARROW" tiptext="The OS X Unicode left arrow constant" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:STRING_MENU" name="STRING_MENU" object="[flash.ui.Keyboard]" playername="" text="Keyboard.STRING_MENU" tiptext="The OS X Unicode Menu constant" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:STRING_MODESWITCH" name="STRING_MODESWITCH" object="[flash.ui.Keyboard]" playername="" text="Keyboard.STRING_MODESWITCH" tiptext="The OS X Unicode Mode Switch constant" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:STRING_NEXT" name="STRING_NEXT" object="[flash.ui.Keyboard]" playername="" text="Keyboard.STRING_NEXT" tiptext="The OS X Unicode Next constant" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:STRING_PAGEDOWN" name="STRING_PAGEDOWN" object="[flash.ui.Keyboard]" playername="" text="Keyboard.STRING_PAGEDOWN" tiptext="The OS X Unicode Page Down constant" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:STRING_PAGEUP" name="STRING_PAGEUP" object="[flash.ui.Keyboard]" playername="" text="Keyboard.STRING_PAGEUP" tiptext="The OS X Unicode Page Up constant" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:STRING_PAUSE" name="STRING_PAUSE" object="[flash.ui.Keyboard]" playername="" text="Keyboard.STRING_PAUSE" tiptext="The OS X Unicode Pause constant" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:STRING_PREV" name="STRING_PREV" object="[flash.ui.Keyboard]" playername="" text="Keyboard.STRING_PREV" tiptext="The OS X Unicode Previous constant" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:STRING_PRINTSCREEN" name="STRING_PRINTSCREEN" object="[flash.ui.Keyboard]" playername="" text="Keyboard.STRING_PRINTSCREEN" tiptext="The OS X Unicode Print Screen constant" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:STRING_PRINT" name="STRING_PRINT" object="[flash.ui.Keyboard]" playername="" text="Keyboard.STRING_PRINT" tiptext="The OS X Unicode Print constant" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:STRING_REDO" name="STRING_REDO" object="[flash.ui.Keyboard]" playername="" text="Keyboard.STRING_REDO" tiptext="The OS X Unicode Redo constant" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:STRING_RESET" name="STRING_RESET" object="[flash.ui.Keyboard]" playername="" text="Keyboard.STRING_RESET" tiptext="The OS X Unicode Reset constant" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:STRING_RIGHTARROW" name="STRING_RIGHTARROW" object="[flash.ui.Keyboard]" playername="" text="Keyboard.STRING_RIGHTARROW" tiptext="The OS X Unicode right arrow constant" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:STRING_SCROLLLOCK" name="STRING_SCROLLLOCK" object="[flash.ui.Keyboard]" playername="" text="Keyboard.STRING_SCROLLLOCK" tiptext="The OS X Unicode Scroll Lock constant" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:STRING_SELECT" name="STRING_SELECT" object="[flash.ui.Keyboard]" playername="" text="Keyboard.STRING_SELECT" tiptext="The OS X Unicode Select constant" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:STRING_STOP" name="STRING_STOP" object="[flash.ui.Keyboard]" playername="" text="Keyboard.STRING_STOP" tiptext="The OS X Unicode Stop constant" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:STRING_SYSREQ" name="STRING_SYSREQ" object="[flash.ui.Keyboard]" playername="" text="Keyboard.STRING_SYSREQ" tiptext="The OS X Unicode System Request constant" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:STRING_SYSTEM" name="STRING_SYSTEM" object="[flash.ui.Keyboard]" playername="" text="Keyboard.STRING_SYSTEM" tiptext="The OS X Unicode System constant" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:STRING_UNDO" name="STRING_UNDO" object="[flash.ui.Keyboard]" playername="" text="Keyboard.STRING_UNDO" tiptext="The OS X Unicode Undo constant" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:STRING_UPARROW" name="STRING_UPARROW" object="[flash.ui.Keyboard]" playername="" text="Keyboard.STRING_UPARROW" tiptext="The OS X Unicode up arrow constant" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:STRING_USER" name="STRING_USER" object="[flash.ui.Keyboard]" playername="" text="Keyboard.STRING_USER" tiptext="The OS X Unicode User constant" version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:S" name="S" object="[flash.ui.Keyboard]" playername="" text="Keyboard.S" tiptext="Constant associated with the key code value for the S key (83)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:TAB" name="TAB" object="[flash.ui.Keyboard]" playername="" text="Keyboard.TAB" tiptext="Constant associated with the key code value for the Tab key (9)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:T" name="T" object="[flash.ui.Keyboard]" playername="" text="Keyboard.T" tiptext="Constant associated with the key code value for the T key (84)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:UP" name="UP" object="[flash.ui.Keyboard]" playername="" text="Keyboard.UP" tiptext="Constant associated with the key code value for the Up Arrow key (38)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:U" name="U" object="[flash.ui.Keyboard]" playername="" text="Keyboard.U" tiptext="Constant associated with the key code value for the U key (85)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:V" name="V" object="[flash.ui.Keyboard]" playername="" text="Keyboard.V" tiptext="Constant associated with the key code value for the V key (86)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:W" name="W" object="[flash.ui.Keyboard]" playername="" text="Keyboard.W" tiptext="Constant associated with the key code value for the W key (87)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:X" name="X" object="[flash.ui.Keyboard]" playername="" text="Keyboard.X" tiptext="Constant associated with the key code value for the X key (88)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:Y" name="Y" object="[flash.ui.Keyboard]" playername="" text="Keyboard.Y" tiptext="Constant associated with the key code value for the Y key (89)." version=""/>
               <string constant="true" helpurl="flash.ui:Keyboard:Z" name="Z" object="[flash.ui.Keyboard]" playername="" text="Keyboard.Z" tiptext="Constant associated with the key code value for the Z key (90)." version=""/>
               <string helpurl="flash.ui:Keyboard:capsLock:get" name="capsLock" object="[flash.ui.Keyboard]" playername="" text=".capsLock" tiptext="Specifies whether the Caps Lock key is activated (true) or not (false)." version=""/>
               <string helpurl="flash.ui:Keyboard:numLock:get" name="numLock" object="[flash.ui.Keyboard]" playername="" text=".numLock" tiptext="Specifies whether the Num Lock key is activated (true) or not (false)." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="flash.ui:Multitouch" id="[flash.ui.Multitouch]" index="true" name="Multitouch" sort="true" tiptext="The Multitouch class manages and provides information about the current environment's support for handling contact from user input devices, including those that have two or more touch points (such as a user's fingers on a touch screen).">
            <folder helpurl="flash.ui:Multitouch" id="Properties" name="Properties" tiptext="Properties for class Multitouch">
               <string helpurl="flash.ui:Multitouch:inputMode:get" name="inputMode" object="[flash.ui.Multitouch]" playername="" text=".inputMode" tiptext="Identifies the multi-touch mode for touch and gesture event handling." version=""/>
               <string helpurl="flash.ui:Multitouch:maxTouchPoints:get" name="maxTouchPoints" object="[flash.ui.Multitouch]" playername="" text=".maxTouchPoints" tiptext="The maximum number of concurrent touch points supported by the current environment." version=""/>
               <string helpurl="flash.ui:Multitouch:supportedGestures:get" name="supportedGestures" object="[flash.ui.Multitouch]" playername="" text=".supportedGestures" tiptext="A Vector array (a typed array of string values) of multi-touch contact types supported in the current environment." version=""/>
               <string helpurl="flash.ui:Multitouch:supportsGestureEvents:get" name="supportsGestureEvents" object="[flash.ui.Multitouch]" playername="" text=".supportsGestureEvents" tiptext="Indicates whether or not the current environment supports gesture input, such as rotating two fingers around a touch screen." version=""/>
               <string helpurl="flash.ui:Multitouch:supportsTouchEvents:get" name="supportsTouchEvents" object="[flash.ui.Multitouch]" playername="" text=".supportsTouchEvents" tiptext="Indicates whether or not the current environment supports basic touch input, such as a single finger tap." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="flash.ui:MultitouchInputMode" id="[flash.ui.MultitouchInputMode]" index="true" name="MultitouchInputMode" sort="true" tiptext="The MultitouchInputMode class provides values for the inputMode property in the flash.ui.Multitouch class.">
            <folder helpurl="flash.ui:MultitouchInputMode" id="Properties" name="Properties" tiptext="Properties for class MultitouchInputMode">
               <string constant="true" helpurl="flash.ui:MultitouchInputMode:GESTURE" name="GESTURE" object="[flash.ui.MultitouchInputMode]" playername="" text="MultitouchInputMode.GESTURE" tiptext="Specifies that TransformGestureEvent, PressAndTapGestureEvent, and GestureEvent events are dispatched for the related user interaction supported by the current environment, and other touch events (such as a simple tap) are interpreted as mouse events." version=""/>
               <string constant="true" helpurl="flash.ui:MultitouchInputMode:NONE" name="NONE" object="[flash.ui.MultitouchInputMode]" playername="" text="MultitouchInputMode.NONE" tiptext="Specifies that all user contact with a touch-enabled device is interpreted as a type of mouse event." version=""/>
               <string constant="true" helpurl="flash.ui:MultitouchInputMode:TOUCH_POINT" name="TOUCH_POINT" object="[flash.ui.MultitouchInputMode]" playername="" text="MultitouchInputMode.TOUCH_POINT" tiptext="Specifies that events are dispatched only for basic touch events, such as a single finger tap." version=""/>
            </folder>
         </folder>
      </folder>
      <folder helpurl="flash.utils" id="flash.utils" name="flash.utils" sort="true" tiptext="Classes for package flash.utils">
         <folder asAncestors="Object" helpurl="flash.utils:ByteArray" id="[flash.utils.ByteArray]" index="true" name="ByteArray" sort="true" tiptext="The ByteArray class provides methods and properties to optimize reading, writing, and working with binary data.">
            <folder helpurl="flash.utils:ByteArray" id="Methods" name="Methods" tiptext="Methods for class ByteArray">
               <string constructor="true" helpurl="flash.utils:ByteArray:ByteArray" name="ByteArray" object="[flash.utils.ByteArray]" playername="" text="new ByteArray(%%)" tiptext="Creates a ByteArray instance representing a packed array of bytes, so that you can use the methods and properties in this class to optimize your data storage and stream." version="4"/>
               <string helpurl="flash.utils:ByteArray:clear" name="clear" object="[flash.utils.ByteArray]" playername="" text=".clear(%%):void" tiptext="Clears the contents of the byte array and resets the length and position properties to 0." version="4"/>
               <string helpurl="flash.utils:ByteArray:deflate" name="deflate" object="[flash.utils.ByteArray]" playername="" text=".deflate(%%):void" tiptext="Compresses the byte array using the deflate compression algorithm." version="4"/>
               <string helpurl="flash.utils:ByteArray:readBoolean" name="readBoolean" object="[flash.utils.ByteArray]" playername="" text=".readBoolean(%%):Boolean" tiptext="Reads a Boolean value from the byte stream." version="4"/>
               <string helpurl="flash.utils:ByteArray:readByte" name="readByte" object="[flash.utils.ByteArray]" playername="" text=".readByte(%%):int" tiptext="Reads a signed byte from the byte stream." version="4"/>
               <string helpurl="flash.utils:ByteArray:readBytes" name="readBytes" object="[flash.utils.ByteArray]" playername="" text=".readBytes(%bytes:flash.utils:ByteArray[,offset:uint=0,length:uint=0]%):void" tiptext="Reads the number of data bytes, specified by the length parameter, from the byte stream." version="4"/>
               <string helpurl="flash.utils:ByteArray:readDouble" name="readDouble" object="[flash.utils.ByteArray]" playername="" text=".readDouble(%%):Number" tiptext="Reads an IEEE 754 double-precision (64-bit) floating-point number from the byte stream." version="4"/>
               <string helpurl="flash.utils:ByteArray:readFloat" name="readFloat" object="[flash.utils.ByteArray]" playername="" text=".readFloat(%%):Number" tiptext="Reads an IEEE 754 single-precision (32-bit) floating-point number from the byte stream." version="4"/>
               <string helpurl="flash.utils:ByteArray:readInt" name="readInt" object="[flash.utils.ByteArray]" playername="" text=".readInt(%%):int" tiptext="Reads a signed 32-bit integer from the byte stream." version="4"/>
               <string helpurl="flash.utils:ByteArray:readMultiByte" name="readMultiByte" object="[flash.utils.ByteArray]" playername="" text=".readMultiByte(%length:uint,charSet:String%):String" tiptext="Reads a multibyte string of specified length from the byte stream using the specified character set." version="4"/>
               <string helpurl="flash.utils:ByteArray:readObject" name="readObject" object="[flash.utils.ByteArray]" playername="" text=".readObject(%%)" tiptext="Reads an object from the byte array, encoded in AMF serialized format." version="4"/>
               <string helpurl="flash.utils:ByteArray:readShort" name="readShort" object="[flash.utils.ByteArray]" playername="" text=".readShort(%%):int" tiptext="Reads a signed 16-bit integer from the byte stream." version="4"/>
               <string helpurl="flash.utils:ByteArray:readUTFBytes" name="readUTFBytes" object="[flash.utils.ByteArray]" playername="" text=".readUTFBytes(%length:uint%):String" tiptext="Reads a sequence of UTF-8 bytes specified by the length parameter from the byte stream and returns a string." version="4"/>
               <string helpurl="flash.utils:ByteArray:readUTF" name="readUTF" object="[flash.utils.ByteArray]" playername="" text=".readUTF(%%):String" tiptext="Reads a UTF-8 string from the byte stream." version="4"/>
               <string helpurl="flash.utils:ByteArray:readUnsignedByte" name="readUnsignedByte" object="[flash.utils.ByteArray]" playername="" text=".readUnsignedByte(%%):uint" tiptext="Reads an unsigned byte from the byte stream." version="4"/>
               <string helpurl="flash.utils:ByteArray:readUnsignedInt" name="readUnsignedInt" object="[flash.utils.ByteArray]" playername="" text=".readUnsignedInt(%%):uint" tiptext="Reads an unsigned 32-bit integer from the byte stream." version="4"/>
               <string helpurl="flash.utils:ByteArray:readUnsignedShort" name="readUnsignedShort" object="[flash.utils.ByteArray]" playername="" text=".readUnsignedShort(%%):uint" tiptext="Reads an unsigned 16-bit integer from the byte stream." version="4"/>
               <string helpurl="flash.utils:ByteArray:toString" name="toString" object="[flash.utils.ByteArray]" playername="" text=".toString(%%):String" tiptext="Converts the byte array to a string." version="4"/>
               <string helpurl="flash.utils:ByteArray:uncompress" name="uncompress" object="[flash.utils.ByteArray]" playername="" text=".uncompress(%[algorithm:String=unknown]%):void" tiptext="Decompresses the byte array." version="4"/>
               <string helpurl="flash.utils:ByteArray:writeBoolean" name="writeBoolean" object="[flash.utils.ByteArray]" playername="" text=".writeBoolean(%value:Boolean%):void" tiptext="Writes a Boolean value." version="4"/>
               <string helpurl="flash.utils:ByteArray:writeByte" name="writeByte" object="[flash.utils.ByteArray]" playername="" text=".writeByte(%value:int%):void" tiptext="Writes a byte to the byte stream." version="4"/>
               <string helpurl="flash.utils:ByteArray:writeBytes" name="writeBytes" object="[flash.utils.ByteArray]" playername="" text=".writeBytes(%bytes:flash.utils:ByteArray[,offset:uint=0,length:uint=0]%):void" tiptext="Writes a sequence of length bytes from the specified byte array, bytes, starting offset (zero-based index) bytes into the byte stream." version="4"/>
               <string helpurl="flash.utils:ByteArray:writeDouble" name="writeDouble" object="[flash.utils.ByteArray]" playername="" text=".writeDouble(%value:Number%):void" tiptext="Writes an IEEE 754 double-precision (64-bit) floating-point number to the byte stream." version="4"/>
               <string helpurl="flash.utils:ByteArray:writeFloat" name="writeFloat" object="[flash.utils.ByteArray]" playername="" text=".writeFloat(%value:Number%):void" tiptext="Writes an IEEE 754 single-precision (32-bit) floating-point number to the byte stream." version="4"/>
               <string helpurl="flash.utils:ByteArray:writeInt" name="writeInt" object="[flash.utils.ByteArray]" playername="" text=".writeInt(%value:int%):void" tiptext="Writes a 32-bit signed integer to the byte stream." version="4"/>
               <string helpurl="flash.utils:ByteArray:writeMultiByte" name="writeMultiByte" object="[flash.utils.ByteArray]" playername="" text=".writeMultiByte(%value:String,charSet:String%):void" tiptext="Writes a multibyte string to the byte stream using the specified character set." version="4"/>
               <string helpurl="flash.utils:ByteArray:writeObject" name="writeObject" object="[flash.utils.ByteArray]" playername="" text=".writeObject(%object:*%):void" tiptext="Writes an object into the byte array in AMF serialized format." version="4"/>
               <string helpurl="flash.utils:ByteArray:writeShort" name="writeShort" object="[flash.utils.ByteArray]" playername="" text=".writeShort(%value:int%):void" tiptext="Writes a 16-bit integer to the byte stream." version="4"/>
               <string helpurl="flash.utils:ByteArray:writeUTFBytes" name="writeUTFBytes" object="[flash.utils.ByteArray]" playername="" text=".writeUTFBytes(%value:String%):void" tiptext="Writes a UTF-8 string to the byte stream." version="4"/>
               <string helpurl="flash.utils:ByteArray:writeUTF" name="writeUTF" object="[flash.utils.ByteArray]" playername="" text=".writeUTF(%value:String%):void" tiptext="Writes a UTF-8 string to the byte stream." version="4"/>
               <string helpurl="flash.utils:ByteArray:writeUnsignedInt" name="writeUnsignedInt" object="[flash.utils.ByteArray]" playername="" text=".writeUnsignedInt(%value:uint%):void" tiptext="Writes a 32-bit unsigned integer to the byte stream." version="4"/>
            </folder>
            <folder helpurl="flash.utils:ByteArray" id="Properties" name="Properties" tiptext="Properties for class ByteArray">
               <string helpurl="flash.utils:ByteArray:bytesAvailable:get" name="bytesAvailable" object="[flash.utils.ByteArray]" playername="" text=".bytesAvailable" tiptext="The number of bytes of data available for reading from the current position in the byte array to the end of the array." version=""/>
               <string helpurl="flash.utils:ByteArray:defaultObjectEncoding:get" name="defaultObjectEncoding" object="[flash.utils.ByteArray]" playername="" text=".defaultObjectEncoding" tiptext="Denotes the default object encoding for the ByteArray class to use for a new ByteArray instance." version=""/>
               <string helpurl="flash.utils:ByteArray:endian:get" name="endian" object="[flash.utils.ByteArray]" playername="" text=".endian" tiptext="Changes or reads the byte order for the data; either Endian.BIG_ENDIAN or Endian.LITTLE_ENDIAN." version=""/>
               <string helpurl="flash.utils:ByteArray:length:get" name="length" object="[flash.utils.ByteArray]" playername="" text=".length" tiptext="The length of the ByteArray object, in bytes." version=""/>
               <string helpurl="flash.utils:ByteArray:objectEncoding:get" name="objectEncoding" object="[flash.utils.ByteArray]" playername="" text=".objectEncoding" tiptext="Used to determine whether the ActionScript 3.0, ActionScript 2.0, or ActionScript 1.0 format should be used when writing to, or reading from, a ByteArray instance." version=""/>
               <string helpurl="flash.utils:ByteArray:position:get" name="position" object="[flash.utils.ByteArray]" playername="" text=".position" tiptext="Moves, or returns the current position, in bytes, of the file pointer into the ByteArray object." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="flash.utils:Dictionary" id="[flash.utils.Dictionary]" index="true" name="Dictionary" sort="true" tiptext="The Dictionary class lets you create a dynamic collection of properties, which uses strict equality (===) for key comparison.">
            <folder helpurl="flash.utils:Dictionary" id="Methods" name="Methods" tiptext="Methods for class Dictionary">
               <string constructor="true" helpurl="flash.utils:Dictionary:Dictionary" name="Dictionary" object="[flash.utils.Dictionary]" playername="" text="new Dictionary(%[weakKeys:Boolean=false]%)" tiptext="Creates a new Dictionary object." version="4"/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="flash.utils:Endian" id="[flash.utils.Endian]" index="true" name="Endian" sort="true" tiptext="The Endian class contains values that denote the byte order used to represent multibyte numbers.">
            <folder helpurl="flash.utils:Endian" id="Properties" name="Properties" tiptext="Properties for class Endian">
               <string constant="true" helpurl="flash.utils:Endian:BIG_ENDIAN" name="BIG_ENDIAN" object="[flash.utils.Endian]" playername="" text="Endian.BIG_ENDIAN" tiptext="Indicates the most significant byte of the multibyte number appears first in the sequence of bytes." version=""/>
               <string constant="true" helpurl="flash.utils:Endian:LITTLE_ENDIAN" name="LITTLE_ENDIAN" object="[flash.utils.Endian]" playername="" text="Endian.LITTLE_ENDIAN" tiptext="Indicates the least significant byte of the multibyte number appears first in the sequence of bytes." version=""/>
            </folder>
         </folder>
         <folder helpurl="flash.utils:IDataInput" id="[flash.utils.IDataInput]" index="true" name="IDataInput" sort="true" tiptext="The IDataInput interface provides a set of methods for reading binary data.">
            <folder helpurl="flash.utils:IDataInput" id="Methods" name="Methods" tiptext="Methods for class IDataInput">
               <string helpurl="flash.utils:IDataInput:readBoolean" name="readBoolean" object="[flash.utils.IDataInput]" playername="" text=".readBoolean(%%):Boolean" tiptext="Reads a Boolean value from the file stream, byte stream, or byte array." version="4"/>
               <string helpurl="flash.utils:IDataInput:readByte" name="readByte" object="[flash.utils.IDataInput]" playername="" text=".readByte(%%):int" tiptext="Reads a signed byte from the file stream, byte stream, or byte array." version="4"/>
               <string helpurl="flash.utils:IDataInput:readBytes" name="readBytes" object="[flash.utils.IDataInput]" playername="" text=".readBytes(%bytes:flash.utils:ByteArray[,offset:uint=0,length:uint=0]%):void" tiptext="Reads the number of data bytes, specified by the length parameter, from the file stream, byte stream, or byte array." version="4"/>
               <string helpurl="flash.utils:IDataInput:readDouble" name="readDouble" object="[flash.utils.IDataInput]" playername="" text=".readDouble(%%):Number" tiptext="Reads an IEEE 754 double-precision floating point number from the file stream, byte stream, or byte array." version="4"/>
               <string helpurl="flash.utils:IDataInput:readFloat" name="readFloat" object="[flash.utils.IDataInput]" playername="" text=".readFloat(%%):Number" tiptext="Reads an IEEE 754 single-precision floating point number from the file stream, byte stream, or byte array." version="4"/>
               <string helpurl="flash.utils:IDataInput:readInt" name="readInt" object="[flash.utils.IDataInput]" playername="" text=".readInt(%%):int" tiptext="Reads a signed 32-bit integer from the file stream, byte stream, or byte array." version="4"/>
               <string helpurl="flash.utils:IDataInput:readMultiByte" name="readMultiByte" object="[flash.utils.IDataInput]" playername="" text=".readMultiByte(%length:uint,charSet:String%):String" tiptext="Reads a multibyte string of specified length from the file stream, byte stream, or byte array using the specified character set." version="4"/>
               <string helpurl="flash.utils:IDataInput:readObject" name="readObject" object="[flash.utils.IDataInput]" playername="" text=".readObject(%%)" tiptext="Reads an object from the file stream, byte stream, or byte array, encoded in AMF serialized format." version="4"/>
               <string helpurl="flash.utils:IDataInput:readShort" name="readShort" object="[flash.utils.IDataInput]" playername="" text=".readShort(%%):int" tiptext="Reads a signed 16-bit integer from the file stream, byte stream, or byte array." version="4"/>
               <string helpurl="flash.utils:IDataInput:readUTFBytes" name="readUTFBytes" object="[flash.utils.IDataInput]" playername="" text=".readUTFBytes(%length:uint%):String" tiptext="Reads a sequence of UTF-8 bytes from the byte stream or byte array and returns a string." version="4"/>
               <string helpurl="flash.utils:IDataInput:readUTF" name="readUTF" object="[flash.utils.IDataInput]" playername="" text=".readUTF(%%):String" tiptext="Reads a UTF-8 string from the file stream, byte stream, or byte array." version="4"/>
               <string helpurl="flash.utils:IDataInput:readUnsignedByte" name="readUnsignedByte" object="[flash.utils.IDataInput]" playername="" text=".readUnsignedByte(%%):uint" tiptext="Reads an unsigned byte from the file stream, byte stream, or byte array." version="4"/>
               <string helpurl="flash.utils:IDataInput:readUnsignedInt" name="readUnsignedInt" object="[flash.utils.IDataInput]" playername="" text=".readUnsignedInt(%%):uint" tiptext="Reads an unsigned 32-bit integer from the file stream, byte stream, or byte array." version="4"/>
               <string helpurl="flash.utils:IDataInput:readUnsignedShort" name="readUnsignedShort" object="[flash.utils.IDataInput]" playername="" text=".readUnsignedShort(%%):uint" tiptext="Reads an unsigned 16-bit integer from the file stream, byte stream, or byte array." version="4"/>
            </folder>
            <folder helpurl="flash.utils:IDataInput" id="Properties" name="Properties" tiptext="Properties for class IDataInput">
               <string helpurl="flash.utils:IDataInput:bytesAvailable:get" name="bytesAvailable" object="[flash.utils.IDataInput]" playername="" text=".bytesAvailable" tiptext="Returns the number of bytes of data available for reading in the input buffer." version=""/>
               <string helpurl="flash.utils:IDataInput:endian:get" name="endian" object="[flash.utils.IDataInput]" playername="" text=".endian" tiptext="The byte order for the data, either the BIG_ENDIAN or LITTLE_ENDIAN constant from the Endian class." version=""/>
               <string helpurl="flash.utils:IDataInput:objectEncoding:get" name="objectEncoding" object="[flash.utils.IDataInput]" playername="" text=".objectEncoding" tiptext="Used to determine whether the AMF3 or AMF0 format is used when writing or reading binary data using the readObject() method." version=""/>
            </folder>
         </folder>
         <folder helpurl="flash.utils:IDataOutput" id="[flash.utils.IDataOutput]" index="true" name="IDataOutput" sort="true" tiptext="The IDataOutput interface provides a set of methods for writing binary data.">
            <folder helpurl="flash.utils:IDataOutput" id="Methods" name="Methods" tiptext="Methods for class IDataOutput">
               <string helpurl="flash.utils:IDataOutput:writeBoolean" name="writeBoolean" object="[flash.utils.IDataOutput]" playername="" text=".writeBoolean(%value:Boolean%):void" tiptext="Writes a Boolean value." version="4"/>
               <string helpurl="flash.utils:IDataOutput:writeByte" name="writeByte" object="[flash.utils.IDataOutput]" playername="" text=".writeByte(%value:int%):void" tiptext="Writes a byte." version="4"/>
               <string helpurl="flash.utils:IDataOutput:writeBytes" name="writeBytes" object="[flash.utils.IDataOutput]" playername="" text=".writeBytes(%bytes:flash.utils:ByteArray[,offset:uint=0,length:uint=0]%):void" tiptext="Writes a sequence of bytes from the specified byte array, bytes, starting at the byte specified by offset (using a zero-based index) with a length specified by length, into the file stream, byte stream, or byte array." version="4"/>
               <string helpurl="flash.utils:IDataOutput:writeDouble" name="writeDouble" object="[flash.utils.IDataOutput]" playername="" text=".writeDouble(%value:Number%):void" tiptext="Writes an IEEE 754 double-precision (64-bit) floating point number." version="4"/>
               <string helpurl="flash.utils:IDataOutput:writeFloat" name="writeFloat" object="[flash.utils.IDataOutput]" playername="" text=".writeFloat(%value:Number%):void" tiptext="Writes an IEEE 754 single-precision (32-bit) floating point number." version="4"/>
               <string helpurl="flash.utils:IDataOutput:writeInt" name="writeInt" object="[flash.utils.IDataOutput]" playername="" text=".writeInt(%value:int%):void" tiptext="Writes a 32-bit signed integer." version="4"/>
               <string helpurl="flash.utils:IDataOutput:writeMultiByte" name="writeMultiByte" object="[flash.utils.IDataOutput]" playername="" text=".writeMultiByte(%value:String,charSet:String%):void" tiptext="Writes a multibyte string to the file stream, byte stream, or byte array, using the specified character set." version="4"/>
               <string helpurl="flash.utils:IDataOutput:writeObject" name="writeObject" object="[flash.utils.IDataOutput]" playername="" text=".writeObject(%object:*%):void" tiptext="Writes an object to the file stream, byte stream, or byte array, in AMF serialized format." version="4"/>
               <string helpurl="flash.utils:IDataOutput:writeShort" name="writeShort" object="[flash.utils.IDataOutput]" playername="" text=".writeShort(%value:int%):void" tiptext="Writes a 16-bit integer." version="4"/>
               <string helpurl="flash.utils:IDataOutput:writeUTFBytes" name="writeUTFBytes" object="[flash.utils.IDataOutput]" playername="" text=".writeUTFBytes(%value:String%):void" tiptext="Writes a UTF-8 string." version="4"/>
               <string helpurl="flash.utils:IDataOutput:writeUTF" name="writeUTF" object="[flash.utils.IDataOutput]" playername="" text=".writeUTF(%value:String%):void" tiptext="Writes a UTF-8 string to the file stream, byte stream, or byte array." version="4"/>
               <string helpurl="flash.utils:IDataOutput:writeUnsignedInt" name="writeUnsignedInt" object="[flash.utils.IDataOutput]" playername="" text=".writeUnsignedInt(%value:uint%):void" tiptext="Writes a 32-bit unsigned integer." version="4"/>
            </folder>
            <folder helpurl="flash.utils:IDataOutput" id="Properties" name="Properties" tiptext="Properties for class IDataOutput">
               <string helpurl="flash.utils:IDataOutput:endian:get" name="endian" object="[flash.utils.IDataOutput]" playername="" text=".endian" tiptext="The byte order for the data, either the BIG_ENDIAN or LITTLE_ENDIAN constant from the Endian class." version=""/>
               <string helpurl="flash.utils:IDataOutput:objectEncoding:get" name="objectEncoding" object="[flash.utils.IDataOutput]" playername="" text=".objectEncoding" tiptext="Used to determine whether the AMF3 or AMF0 format is used when writing or reading binary data using the writeObject() method." version=""/>
            </folder>
         </folder>
         <folder helpurl="flash.utils:IExternalizable" id="[flash.utils.IExternalizable]" index="true" name="IExternalizable" sort="true" tiptext="The IExternalizable interface provides control over serialization of a class as it is encoded into a data stream.">
            <folder helpurl="flash.utils:IExternalizable" id="Methods" name="Methods" tiptext="Methods for class IExternalizable">
               <string helpurl="flash.utils:IExternalizable:readExternal" name="readExternal" object="[flash.utils.IExternalizable]" playername="" text=".readExternal(%input:flash.utils:IDataInput%):void" tiptext="A class implements this method to decode itself from a data stream by calling the methods of the IDataInput interface." version="4"/>
               <string helpurl="flash.utils:IExternalizable:writeExternal" name="writeExternal" object="[flash.utils.IExternalizable]" playername="" text=".writeExternal(%output:flash.utils:IDataOutput%):void" tiptext="A class implements this method to encode itself for a data stream by calling the methods of the IDataOutput interface." version="4"/>
            </folder>
         </folder>
         <folder helpurl="flash.utils" id="Methods" name="Methods" tiptext="Methods for package flash.utils">
            <string helpurl="flash.utils:describeType" name="describeType" playername="" text="describeType(%value:*%):XML" tiptext="Produces an XML object that describes the ActionScript object named as the parameter of the method." version="4"/>
            <string helpurl="flash.utils:escapeMultiByte" name="escapeMultiByte" playername="" text="escapeMultiByte(%value:String%):String" tiptext="Returns an escaped copy of the input string encoded as either UTF-8 or system code page, depending on the value of System.useCodePage." version="4"/>
            <string helpurl="flash.utils:getAliasName" name="getAliasName" playername="" text="getAliasName(%value:*%):String" tiptext="" version=""/>
            <string helpurl="flash.utils:getDefinitionByName" name="getDefinitionByName" playername="" text="getDefinitionByName(%name:String%):Object" tiptext="Returns a reference to the class object of the class specified by the name parameter." version="4"/>
            <string helpurl="flash.utils:getQualifiedClassName" name="getQualifiedClassName" playername="" text="getQualifiedClassName(%value:*%):String" tiptext="Returns the fully qualified class name of an object." version="4"/>
            <string helpurl="flash.utils:getQualifiedSuperclassName" name="getQualifiedSuperclassName" playername="" text="getQualifiedSuperclassName(%value:*%):String" tiptext="Returns the fully qualified class name of the base class of the object specified by the value parameter." version="4"/>
            <string helpurl="flash.utils:getTimer" name="getTimer" playername="" text="getTimer(%%):int" tiptext="Used to compute relative time." version="4"/>
            <string helpurl="flash.utils:unescapeMultiByte" name="unescapeMultiByte" playername="" text="unescapeMultiByte(%value:String%):String" tiptext="Returns an unescaped copy of the input string, which is decoded from either system code page page or UTF-8 depending on the value of System.useCodePage." version="4"/>
            <string helpurl="flash.utils:clearInterval" name="clearInterval" playername="" text="clearInterval(%id:uint%):void" tiptext="Cancels a specified setInterval() call." version="9"/>
            <string helpurl="flash.utils:clearTimeout" name="clearTimeout" playername="" text="clearTimeout(%id:uint%):void" tiptext="Cancels a specified setTimeout() call." version="9"/>
            <string helpurl="flash.utils:setInterval" name="setInterval" playername="" text="setInterval(%closure:Function,delay:Number,arguments:restParam%):uint" tiptext="Runs a function at a specified interval (in milliseconds)." version="9"/>
            <string helpurl="flash.utils:setTimeout" name="setTimeout" playername="" text="setTimeout(%closure:Function,delay:Number,arguments:restParam%):uint" tiptext="Runs a specified function after a specified delay (in milliseconds)." version="9"/>
         </folder>
         <folder asAncestors="Object" helpurl="flash.utils:Proxy" id="[flash.utils.Proxy]" index="true" name="Proxy" sort="true" tiptext="The Proxy class lets you override the default behavior of ActionScript operations (such as retrieving and modifying properties) on an object.">
            <folder helpurl="flash.utils:Proxy" id="Methods" name="Methods" tiptext="Methods for class Proxy">
               <string helpurl="flash.utils:Proxy:callProperty" name="callProperty" object="[flash.utils.Proxy]" playername="" text=".callProperty(%name:*,rest:restParam%)" tiptext="Overrides the behavior of an object property that can be called as a function." version="4"/>
               <string helpurl="flash.utils:Proxy:deleteProperty" name="deleteProperty" object="[flash.utils.Proxy]" playername="" text=".deleteProperty(%name:*%):Boolean" tiptext="Overrides the request to delete a property." version="4"/>
               <string helpurl="flash.utils:Proxy:getDescendants" name="getDescendants" object="[flash.utils.Proxy]" playername="" text=".getDescendants(%name:*%)" tiptext="Overrides the use of the descendant operator." version="4"/>
               <string helpurl="flash.utils:Proxy:getProperty" name="getProperty" object="[flash.utils.Proxy]" playername="" text=".getProperty(%name:*%)" tiptext="Overrides any request for a property's value." version="4"/>
               <string helpurl="flash.utils:Proxy:hasProperty" name="hasProperty" object="[flash.utils.Proxy]" playername="" text=".hasProperty(%name:*%):Boolean" tiptext="Overrides a request to check whether an object has a particular property by name." version="4"/>
               <string helpurl="flash.utils:Proxy:isAttribute" name="isAttribute" object="[flash.utils.Proxy]" playername="" text=".isAttribute(%name:*%):Boolean" tiptext="Checks whether a supplied QName is also marked as an attribute." version="4"/>
               <string helpurl="flash.utils:Proxy:nextNameIndex" name="nextNameIndex" object="[flash.utils.Proxy]" playername="" text=".nextNameIndex(%index:int%):int" tiptext="Allows enumeration of the proxied object's properties by index number." version="4"/>
               <string helpurl="flash.utils:Proxy:nextName" name="nextName" object="[flash.utils.Proxy]" playername="" text=".nextName(%index:int%):String" tiptext="Allows enumeration of the proxied object's properties by index number to retrieve property names." version="4"/>
               <string helpurl="flash.utils:Proxy:nextValue" name="nextValue" object="[flash.utils.Proxy]" playername="" text=".nextValue(%index:int%)" tiptext="Allows enumeration of the proxied object's properties by index number to retrieve property values." version="4"/>
               <string helpurl="flash.utils:Proxy:setProperty" name="setProperty" object="[flash.utils.Proxy]" playername="" text=".setProperty(%name:*,value:*%):void" tiptext="Overrides a call to change a property's value." version="4"/>
            </folder>
         </folder>
         <folder asAncestors="flash.events:EventDispatcher,Object" helpurl="flash.utils:Timer" id="[flash.utils.Timer]" index="true" name="Timer" sort="true" tiptext="The Timer class is the interface to timers, which let you run code on a specified time sequence.">
            <folder helpurl="flash.utils:Timer" id="Methods" name="Methods" tiptext="Methods for class Timer">
               <string constructor="true" helpurl="flash.utils:Timer:Timer" name="Timer" object="[flash.utils.Timer]" playername="" text="new Timer(%delay:Number[,repeatCount:int=0]%)" tiptext="Constructs a new Timer object with the specified delay and repeatCount states." version="4"/>
               <string helpurl="flash.utils:Timer:reset" name="reset" object="[flash.utils.Timer]" playername="" text=".reset(%%):void" tiptext="Stops the timer, if it is running, and sets the currentCount property back to 0, like the reset button of a stopwatch." version="4"/>
               <string helpurl="flash.utils:Timer:start" name="start" object="[flash.utils.Timer]" playername="" text=".start(%%):void" tiptext="Starts the timer, if it is not already running." version="4"/>
               <string helpurl="flash.utils:Timer:stop" name="stop" object="[flash.utils.Timer]" playername="" text=".stop(%%):void" tiptext="Stops the timer." version="4"/>
            </folder>
            <folder helpurl="flash.utils:Timer" id="Properties" name="Properties" tiptext="Properties for class Timer">
               <string helpurl="flash.utils:Timer:currentCount:get" name="currentCount" object="[flash.utils.Timer]" playername="" text=".currentCount" tiptext="The total number of times the timer has fired since it started at zero." version=""/>
               <string helpurl="flash.utils:Timer:delay:get" name="delay" object="[flash.utils.Timer]" playername="" text=".delay" tiptext="The delay, in milliseconds, between timer events." version=""/>
               <string helpurl="flash.utils:Timer:repeatCount:get" name="repeatCount" object="[flash.utils.Timer]" playername="" text=".repeatCount" tiptext="The total number of times the timer is set to run." version=""/>
               <string helpurl="flash.utils:Timer:running:get" name="running" object="[flash.utils.Timer]" playername="" text=".running" tiptext="The timer's current state; true if the timer is running, otherwise false." version=""/>
            </folder>
            <folder helpurl="flash.utils:Timer" id="Events" name="Events" tiptext="Events for class Timer">
               <string helpurl="flash.utils:Timer_flash.events.TimerEvent.TIMER_COMPLETE_timerComplete" name="timerComplete" object="[flash.utils.Timer]" playername="" text=".addEventListener(%type:String=TimerEvent.TIMER_COMPLETE{TimerEvent.TIMER_COMPLETE,TimerEvent.TIMER},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched whenever it has completed the number of requests set by Timer.repeatCount." version=""/>
               <string helpurl="flash.utils:Timer_flash.events.TimerEvent.TIMER_timer" name="timer" object="[flash.utils.Timer]" playername="" text=".addEventListener(%type:String=TimerEvent.TIMER{TimerEvent.TIMER_COMPLETE,TimerEvent.TIMER},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched whenever a Timer object reaches an interval specified according to the Timer.delay property." version=""/>
            </folder>
         </folder>
      </folder>
      <folder helpurl="flash.xml" id="flash.xml" name="flash.xml" sort="true" tiptext="Classes for package flash.xml">
         <folder asAncestors="flash.xml:XMLNode,Object" helpurl="flash.xml:XMLDocument" id="[flash.xml.XMLDocument]" index="true" name="XMLDocument" sort="true" tiptext="The XMLDocument class represents the legacy XML object that was present in ActionScript 2.0.">
            <folder helpurl="flash.xml:XMLDocument" id="Methods" name="Methods" tiptext="Methods for class XMLDocument">
               <string constructor="true" helpurl="flash.xml:XMLDocument:XMLDocument" name="XMLDocument" object="[flash.xml.XMLDocument]" playername="" text="new XMLDocument(%[source:String=null]%)" tiptext="Creates a new XMLDocument object." version="4"/>
               <string helpurl="flash.xml:XMLDocument:createElement" name="createElement" object="[flash.xml.XMLDocument]" playername="" text=".createElement(%name:String%):flash.xml:XMLNode" tiptext="Creates a new XMLNode object with the name specified in the parameter." version="4"/>
               <string helpurl="flash.xml:XMLDocument:createTextNode" name="createTextNode" object="[flash.xml.XMLDocument]" playername="" text=".createTextNode(%text:String%):flash.xml:XMLNode" tiptext="Creates a new XML text node with the specified text." version="4"/>
               <string helpurl="flash.xml:XMLDocument:parseXML" name="parseXML" object="[flash.xml.XMLDocument]" playername="" text=".parseXML(%source:String%):void" tiptext="Parses the XML text specified in the value parameter and populates the specified XMLDocument object with the resulting XML tree." version="4"/>
               <string helpurl="flash.xml:XMLDocument:toString" name="toString" object="[flash.xml.XMLDocument]" playername="" text=".toString(%%):String" tiptext="Returns a string representation of the XML object." version="4"/>
            </folder>
            <folder helpurl="flash.xml:XMLDocument" id="Properties" name="Properties" tiptext="Properties for class XMLDocument">
               <string helpurl="flash.xml:XMLDocument:docTypeDecl" name="docTypeDecl" object="[flash.xml.XMLDocument]" playername="" text=".docTypeDecl" tiptext="Specifies information about the XML document's DOCTYPE declaration." version=""/>
               <string helpurl="flash.xml:XMLDocument:idMap" name="idMap" object="[flash.xml.XMLDocument]" playername="" text=".idMap" tiptext="An Object containing the nodes of the XML that have an id attribute assigned." version=""/>
               <string helpurl="flash.xml:XMLDocument:ignoreWhite" name="ignoreWhite" object="[flash.xml.XMLDocument]" playername="" text=".ignoreWhite" tiptext="When set to true, text nodes that contain only white space are discarded during the parsing process." version=""/>
               <string helpurl="flash.xml:XMLDocument:xmlDecl" name="xmlDecl" object="[flash.xml.XMLDocument]" playername="" text=".xmlDecl" tiptext="A string that specifies information about a document's XML declaration." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="flash.xml:XMLNode" id="[flash.xml.XMLNode]" index="true" name="XMLNode" sort="true" tiptext="The XMLNode class represents the legacy XML object that was present in ActionScript 2.0 and that was renamed in ActionScript 3.0.">
            <folder helpurl="flash.xml:XMLNode" id="Methods" name="Methods" tiptext="Methods for class XMLNode">
               <string constructor="true" helpurl="flash.xml:XMLNode:XMLNode" name="XMLNode" object="[flash.xml.XMLNode]" playername="" text="new XMLNode(%type:uint,value:String%)" tiptext="Creates a new XMLNode object." version="4"/>
               <string helpurl="flash.xml:XMLNode:appendChild" name="appendChild" object="[flash.xml.XMLNode]" playername="" text=".appendChild(%node:flash.xml:XMLNode%):void" tiptext="Appends the specified node to the XML object's child list." version="4"/>
               <string helpurl="flash.xml:XMLNode:cloneNode" name="cloneNode" object="[flash.xml.XMLNode]" playername="" text=".cloneNode(%deep:Boolean%):flash.xml:XMLNode" tiptext="Constructs and returns a new XML node of the same type, name, value, and attributes as the specified XML object." version="4"/>
               <string helpurl="flash.xml:XMLNode:getNamespaceForPrefix" name="getNamespaceForPrefix" object="[flash.xml.XMLNode]" playername="" text=".getNamespaceForPrefix(%prefix:String%):String" tiptext="Returns the namespace URI that is associated with the specified prefix for the node." version="4"/>
               <string helpurl="flash.xml:XMLNode:getPrefixForNamespace" name="getPrefixForNamespace" object="[flash.xml.XMLNode]" playername="" text=".getPrefixForNamespace(%ns:String%):String" tiptext="Returns the prefix that is associated with the specified namespace URI for the node." version="4"/>
               <string helpurl="flash.xml:XMLNode:hasChildNodes" name="hasChildNodes" object="[flash.xml.XMLNode]" playername="" text=".hasChildNodes(%%):Boolean" tiptext="Indicates whether the specified XMLNode object has child nodes." version="4"/>
               <string helpurl="flash.xml:XMLNode:insertBefore" name="insertBefore" object="[flash.xml.XMLNode]" playername="" text=".insertBefore(%node:flash.xml:XMLNode,before:flash.xml:XMLNode%):void" tiptext="Inserts a new child node into the XML object's child list, before the beforeNode node." version="4"/>
               <string helpurl="flash.xml:XMLNode:removeNode" name="removeNode" object="[flash.xml.XMLNode]" playername="" text=".removeNode(%%):void" tiptext="Removes the specified XML object from its parent." version="4"/>
               <string helpurl="flash.xml:XMLNode:toString" name="toString" object="[flash.xml.XMLNode]" playername="" text=".toString(%%):String" tiptext="Evaluates the specified XMLNode object, constructs a textual representation of the XML structure, including the node, children, and attributes, and returns the result as a string." version="4"/>
            </folder>
            <folder helpurl="flash.xml:XMLNode" id="Properties" name="Properties" tiptext="Properties for class XMLNode">
               <string helpurl="flash.xml:XMLNode:firstChild" name="firstChild" object="[flash.xml.XMLNode]" playername="" text=".firstChild" tiptext="Evaluates the specified XMLDocument object and references the first child in the parent node's child list." version=""/>
               <string helpurl="flash.xml:XMLNode:lastChild" name="lastChild" object="[flash.xml.XMLNode]" playername="" text=".lastChild" tiptext="An XMLNode value that references the last child in the node's child list." version=""/>
               <string helpurl="flash.xml:XMLNode:nextSibling" name="nextSibling" object="[flash.xml.XMLNode]" playername="" text=".nextSibling" tiptext="An XMLNode value that references the next sibling in the parent node's child list." version=""/>
               <string helpurl="flash.xml:XMLNode:nodeName" name="nodeName" object="[flash.xml.XMLNode]" playername="" text=".nodeName" tiptext="A string representing the node name of the XMLNode object." version=""/>
               <string helpurl="flash.xml:XMLNode:nodeType" name="nodeType" object="[flash.xml.XMLNode]" playername="" text=".nodeType" tiptext="A nodeType constant value, either XMLNodeType.ELEMENT_NODE for an XML element or XMLNodeType.TEXT_NODE for a text node." version=""/>
               <string helpurl="flash.xml:XMLNode:nodeValue" name="nodeValue" object="[flash.xml.XMLNode]" playername="" text=".nodeValue" tiptext="The node value of the XMLDocument object." version=""/>
               <string helpurl="flash.xml:XMLNode:parentNode" name="parentNode" object="[flash.xml.XMLNode]" playername="" text=".parentNode" tiptext="An XMLNode value that references the parent node of the specified XML object, or returns null if the node has no parent." version=""/>
               <string helpurl="flash.xml:XMLNode:previousSibling" name="previousSibling" object="[flash.xml.XMLNode]" playername="" text=".previousSibling" tiptext="An XMLNode value that references the previous sibling in the parent node's child list." version=""/>
               <string helpurl="flash.xml:XMLNode:attributes:get" name="attributes" object="[flash.xml.XMLNode]" playername="" text=".attributes" tiptext="An object containing all of the attributes of the specified XMLNode instance." version=""/>
               <string helpurl="flash.xml:XMLNode:childNodes:get" name="childNodes" object="[flash.xml.XMLNode]" playername="" text=".childNodes" tiptext="An array of the specified XMLNode object's children." version=""/>
               <string helpurl="flash.xml:XMLNode:localName:get" name="localName" object="[flash.xml.XMLNode]" playername="" text=".localName" tiptext="The local name portion of the XML node's name." version=""/>
               <string helpurl="flash.xml:XMLNode:namespaceURI:get" name="namespaceURI" object="[flash.xml.XMLNode]" playername="" text=".namespaceURI" tiptext="If the XML node has a prefix, namespaceURI is the value of the xmlns declaration for that prefix (the URI), which is typically called the namespace URI." version=""/>
               <string helpurl="flash.xml:XMLNode:prefix:get" name="prefix" object="[flash.xml.XMLNode]" playername="" text=".prefix" tiptext="The prefix portion of the XML node name." version=""/>
            </folder>
         </folder>
         <folder asAncestors="Object" helpurl="flash.xml:XMLNodeType" id="[flash.xml.XMLNodeType]" index="true" name="XMLNodeType" sort="true" tiptext="The XMLNodeType class contains constants used with XMLNode.nodeType.">
            <folder helpurl="flash.xml:XMLNodeType" id="Properties" name="Properties" tiptext="Properties for class XMLNodeType">
               <string constant="true" helpurl="flash.xml:XMLNodeType:ELEMENT_NODE" name="ELEMENT_NODE" object="[flash.xml.XMLNodeType]" playername="" text="XMLNodeType.ELEMENT_NODE" tiptext="Specifies that the node is an element." version=""/>
               <string constant="true" helpurl="flash.xml:XMLNodeType:TEXT_NODE" name="TEXT_NODE" object="[flash.xml.XMLNodeType]" playername="" text="XMLNodeType.TEXT_NODE" tiptext="Specifies that the node is a text node." version=""/>
            </folder>
         </folder>
      </folder>
      <folder id="Language Elements" name="Language Elements" sort="true" tiptext="Language elements that perform or specify an action at runtime">
         <folder helpurl="statements:" id="Statements, Keywords &amp; Directives" name="Statements, Keywords &amp; Directives" sort="true" tiptext="Statements to be used in expressions">
            <folder id="statement" name="statement" sort="true" tiptext="Language elements that perform or specify an action at runtime.">
               <action helpurl="statements:break" id="break" name="break" quickey="br" text="break;\n" tiptext="Appears within a loop (for , for..in, for each..in, do..while or while) or within a block of statements associated with a particular case within a switch statement." version="9"/>
               <action helpurl="statements:case" id="case" name="case" quickey="ce" text="case condition :\n" tiptext="Defines a condition for the switch statement." version="9"/>
               <action helpurl="statements:continue" id="continue" name="continue" quickey="co" text="continue;\n" tiptext="Jumps past all remaining statements in the innermost loop and starts the next iteration of the loop as if control had passed through to the end of the loop normally." version="9"/>
               <action helpurl="statements:default" id="default" name="default" quickey="dt" text="default :\n" tiptext="Defines the default case for a switch statement." version="9"/>
               <action helpurl="statements:do..while" id="do while" name="do..while" quickey="do" text="do {\n} while (% condition %);\n" tiptext="Similar to a while loop, except that the statements are executed once before the initial evaluation of the condition." version="9"/>
               <action helpurl="statements:else" id="else" name="else" quickey="el" text="} else {\n" tiptext="Specifies the statements to run if the condition in the if statement returns false." version="9"/>
               <action helpurl="statements:for" id="for" name="for" quickey="fr" text="for (% init; condition; next %) {\n}\n" tiptext="Evaluates the init (initialize) expression once and then starts a looping sequence." version="9"/>
               <action helpurl="statements:for..in" id="for in" name="for..in" quickey="fi" text="for (% $iterator$ in $object$ %) {\n}\n" tiptext="Iterates over the properties of an object or elements in an array and executes the statement for each property or element." version="9"/>
               <action helpurl="statements:for each..in" id="for each in" name="for each..in" text="for each (% $iterator$ in $object$ %) {\n}\n" tiptext="Iterates over the items in a collection." version="9"/>
               <action helpurl="statements:if" id="if" name="if" quickey="if" text="if (% condition %) {\n}\n" tiptext="Evaluates a condition to determine the next action in a SWF file." version="9"/>
               <action helpurl="statements:label" id="label" name="label" text="" tiptext="Associates a statement with an identifier that can be referenced by break or continue." version="9"/>
               <action helpurl="statements:return" id="return" name="return" quickey="rt" text="return (%%);\n" tiptext="Returns from a function, optionally specifying a return value." version="9"/>
               <string helpurl="statements:super" name="super" text="super" tiptext="Invokes the superclass version of a method or constructor." version="9"/>
               <action helpurl="statements:switch" id="switch" name="switch" quickey="sw" text="switch (% condition %) {\n}\n" tiptext="Causes control to transfer to one of several statements, depending on the value of an expression." version="9"/>
               <action helpurl="statements:throw" id="throw" name="throw" quickey="th" text="throw %expression%;\n" tiptext="Generates, or throws , an error that can be handled, or caught , by a catch{} code block." version="9"/>
               <ifmode mode="SCRIPT_ASSIST_ON">
                  <action helpurl="statements:try" id="try" name="try" quickey="ty" text="try {\n}\n" tiptext="Try a block of code with exception handling" version="7.0"/>
               </ifmode>
               <ifmode mode="SCRIPT_ASSIST_ON">
                  <action helpurl="statements:catch" id="catch" name="catch" quickey="ch" text="catch (% variable %) {\n}\n" tiptext="Catches an exception" version="7.0"/>
               </ifmode>
               <ifmode mode="SCRIPT_ASSIST_ON">
                  <action helpurl="statements:finally" id="finally" name="finally" quickey="fy" text="finally {\n}\n" tiptext="Executes code after exception handling" version="7.0"/>
               </ifmode>
               <ifmode mode="SCRIPT_ASSIST_OFF">
                  <string helpurl="statements:try..catch..finally" name="try..catch..finally" text="try {\n}\ncatch (% variable %) {\n}\nfinally {\n}\n" tiptext="Enclose a block of code in which an error can occur, and then respond to the error." version="9"/>
               </ifmode>
               <ifmode mode="SCRIPT_ASSIST_ON">
                  <action helpurl="statements:evaluate" id="evaluate" name="evaluate" quickey="ev" text="" tiptext="Evaluates an arbitrary expression" version="7.0"/>
               </ifmode>
               <action helpurl="statements:while" id="while" name="while" quickey="wh" text="while (% condition %) {\n}\n" tiptext="Evaluates a condition and if the condition evaluates to true , executes a statement or series of statements before looping back to evaluate the condition again." version="9"/>
               <action helpurl="statements:with" id="with" name="with" quickey="wt" text="with (% object %) {\n}\n" tiptext="Establishes a default object to be used for the execution of a statement or statements." version="9"/>
            </folder>
            <folder id="definition keyword" name="definition keyword" sort="true" tiptext="Used to define entities such as variables, functions, classes, and interfaces.">
               <action helpurl="statements:class" id="class" name="class" quickey="cl" text="class %name% {\n}\n" tiptext="Defines a class, which lets you instantiate objects that share methods and properties that you define." version="9"/>
               <string helpurl="statements:extends" name="extends" text="extends" tiptext="Defines a class that is a subclass of another class." version="9"/>
               <action helpurl="statements:function" id="function" name="function" quickey="fn" text="function %name% () {\n}\n" tiptext="Comprises a set of statements that you define to perform a certain task." version="9"/>
               <string helpurl="statements:get" name="get" text="get" tiptext="Defines a read accessor, a method which can be read like a property." version="9"/>
               <string helpurl="statements:implements" name="implements" text="implements" tiptext="Specifies that a class must define all the methods declared in the interface (or interfaces) being implemented." version="9"/>
               <action helpurl="statements:interface" id="interface" name="interface" text="interface" tiptext="Defines an interface." version="9"/>
               <string helpurl="statements:package" name="package" text="package" tiptext="Allows you to organize your code into discrete groups that can be imported by other scripts." version="9"/>
               <string helpurl="statements:namespace" name="namespace" text="namespace" tiptext="Allows you to control the visibility of definitions." version="9"/>
               <string helpurl="statements:... (rest) parameter" name="... (rest) parameter" text="..." tiptext="Specifies that a function will accept any number of comma-delimited arguments." version="9"/>
               <string helpurl="statements:set" name="set" text="set" tiptext="Defines a setter, which is a method that appears in the public interface as a property." version="9"/>
               <string helpurl="statements:const" name="const" text="const" tiptext="Specifies a constant, which is a variable that can only be assigned a value once." version="9"/>
               <action helpurl="statements:var" id="var" name="var" quickey="vr" text="var %%;\n" tiptext="Specifies a variable." version="9"/>
            </folder>
            <folder id="directive" name="directive" sort="true" tiptext="Statements and definitions that can have an effect at compile time or runtime.">
               <string helpurl="statements:default xml namespace" name="default xml namespace" text="default xml namespace" tiptext="The default xml namespace statement sets the default namespace to use for XML objects." version="9"/>
               <action helpurl="statements:import" id="import" name="import" text="import" tiptext="Makes classes and packages available to your code." version="9"/>
               <action helpurl="statements:include" id="include" name="include" text="include" tiptext="Includes the contents of the specified file, as if the commands in the file are part of the calling script." version=""/>
               <string helpurl="statements:use namespace" name="use namespace" text="use namespace" tiptext="Causes the specified namespaces to be added to the set of open namespaces." version="9"/>
            </folder>
            <folder id="attribute keyword" name="attribute keyword" sort="true" tiptext="Used to alter the meaning of definitions, and can be applied to class, variable, function, and namespace definitions.">
               <string helpurl="statements:dynamic" name="dynamic" text="dynamic" tiptext="Specifies that instances of a class may possess dynamic properties added at runtime." version="9"/>
               <string helpurl="statements:private" name="private" text="private" tiptext="Specifies that a variable, constant, method or namespace is available only to the class that declares or defines it." version="9"/>
               <string helpurl="statements:protected" name="protected" text="protected" tiptext="Specifies that a variable, constant or method is available only to the class that declares or defines it or to subclasses of that class." version="9"/>
               <string helpurl="statements:native" name="native" text="native" tiptext="Specifies that a function or method is implemented by Flash Player in native code." version="9"/>
               <string helpurl="statements:internal" name="internal" text="internal" tiptext="Specifies that a class, variable, constant or function is available to any caller within the same package." version="9"/>
               <string helpurl="statements:override" name="override" text="override" tiptext="Specifies that a method replaces (shadows) an inherited method." version="9"/>
               <string helpurl="statements:final" name="final" text="final" tiptext="Specifies that a method cannot be overridden." version="9"/>
               <string helpurl="statements:public" name="public" text="public" tiptext="Specifies that a class, variable, constant or method is available to any caller." version="9"/>
               <string helpurl="statements:static" name="static" text="static" tiptext="Specifies that a variable, constant or method belongs to the class, as opposed to instances of the class." version="9"/>
            </folder>
            <folder id="primary expression keyword" name="primary expression keyword" sort="true" tiptext="Used to represent literal values.">
               <string helpurl="statements:this" name="this" text="this" tiptext="A reference to a method's containing object." version="9"/>
               <string helpurl="statements:false" name="false" text="false" tiptext="A Boolean value representing false." version="9"/>
               <string helpurl="statements:null" name="null" text="null" tiptext="A special value that can be assigned to variables or returned by a function if no data was provided." version="9"/>
               <string helpurl="statements:true" name="true" text="true" tiptext="A Boolean value representing true." version="9"/>
            </folder>
            <folder id="namespace" name="namespace" sort="true" tiptext="A context for identifiers.">
               <string helpurl="statements:AS3" name="AS3" text="" tiptext="Defines methods and properties of the core ActionScript classes that are fixed properties instead of prototype properties." version=""/>
               <string helpurl="statements:flash_proxy" name="flash_proxy" text="" tiptext="Defines methods of the Proxy class." version=""/>
               <string helpurl="statements:object_proxy" name="object_proxy" text="" tiptext="Defines methods of the ObjectProxy class." version=""/>
            </folder>
         </folder>
         <folder helpurl="operators:" name="Operators" sort="true" tiptext="Symbolic operators used to combine, compare, or midify values">
            <folder name="other" sort="false" tiptext="Miscellaneous operators">
               <string helpurl="operators:array access" name="[] (array access)" text="[]" tiptext="Initializes a new array or multidimensional array with the specified elements (a0, and so on), or accesses elements in an array." version="9"/>
               <string helpurl="operators:as" name="as" text="as" tiptext="Checks whether expression is compatible with data type datatype." version="9"/>
               <string helpurl="operators:comma" name=", (comma)" text="," tiptext="Evaluates expression1, then expression2, and so on." version="9"/>
               <string helpurl="operators:conditional" name="?: (conditional)" text="?:" tiptext="Instructs Flash to evaluate expression1, and if the value of  expression1 is true, it returns the value of expression2 ; otherwise it returns the value of expression3." version="9"/>
               <string helpurl="operators:delete" name="delete" text="delete" tiptext="Destroys the object reference specified by the reference parameter, and returns true if the reference is successfully deleted; false otherwise." version="9"/>
               <string helpurl="operators:dot" name=". (dot)" text="." tiptext="Used to navigate movie clip hierarchies to access nested (child) movie clips, variables, or properties." version="9"/>
               <string helpurl="operators:in" name="in" text="in" tiptext="Checks whether expression1 is a property of expression2." version="9"/>
               <string helpurl="operators:instanceof" name="instanceof" text="instanceof" tiptext="Evaluates whether an object belongs to a specific class." version="9"/>
               <string helpurl="operators:is" name="is" text="is" tiptext="Checks whether expression1 is compatible with data type expression2." version="9"/>
               <string helpurl="operators:name qualifier" name=":: (name qualifier)" text="::" tiptext="Used to identify the namespace of a property, a method, an XML property, or an XML attribute." version="9"/>
               <string helpurl="operators:new" name="new" text="new" tiptext="Creates a new, initially anonymous, object and calls the function identified by the constructor parameter." version="5"/>
               <string helpurl="operators:object initializer" name="{} (object initializer)" text="{}" tiptext="Creates a new object and initializes it with the specified name and value property pairs." version="9"/>
               <string helpurl="operators:parentheses" name="() (parentheses)" text="()" tiptext="Performs a grouping operation on one or more parameters, performs sequential evaluation of expressions, or surrounds one or more parameters and passes them as parameters to a function outside the parentheses." version="9"/>
               <string helpurl="operators:RegExp delimiter" name="/ (RegExp delimiter)" text="/" tiptext="When used before and after characters, the forward slash character (/) define a regular expression literal." version="9"/>
               <string helpurl="operators:type" name=": (type)" text=":" tiptext="Used for strict data typing; this operator specifies the variable type, function return type, or function parameter type." version="9"/>
               <string helpurl="operators:typeof" name="typeof" text="typeof" tiptext="Evaluate the expression and returns a string specifying its type." version="9"/>
               <string helpurl="operators:void" name="void" text="void" tiptext="The void operator evaluates an expression and then discards its value, returning an undefined value." version="9"/>
            </folder>
            <folder name="logical" sort="false" tiptext="logical operators">
               <string helpurl="operators:logical AND" name="&amp;&amp; (logical AND)" text="&amp;&amp;" tiptext="Performs a Boolean operation on the values of one or both of the expressions." version="9"/>
               <string helpurl="operators:logical AND assignment" name="&amp;&amp;= (logical AND assignment)" text="&amp;&amp;=" tiptext="Assigns expression1 the value of expression1 &amp;amp;&amp;amp; expression2." version="9"/>
               <string helpurl="operators:logical NOT" name="! (logical NOT)" text="!" tiptext="Inverts the Boolean value of a variable or expression." version="9"/>
               <string helpurl="operators:logical OR" name="|| (logical OR)" text="||" tiptext="Evaluates expression1 (the expression on the left side of the operator) and returns true if the expression evaluates to true." version="9"/>
               <string helpurl="operators:logical OR assignment" name="||= (logical OR assignment)" text="||=" tiptext="Assigns expression1 the value of expression1 || expression2." version="9"/>
            </folder>
            <folder name="comparison" sort="false" tiptext="comparison operators">
               <string helpurl="operators:equality" name="== (equality)" text="==" tiptext="Tests two expressions for equality." version="9"/>
               <string helpurl="operators:greater than" name="&gt; (greater than)" text="&gt;" tiptext="Compares two expressions and determines whether expression1 is greater than expression2 ; if it is, the operator returns true." version="9"/>
               <string helpurl="operators:greater than or equal to" name="&gt;= (greater than or equal to)" text="&gt;=" tiptext="Compares two expressions and determines whether expression1 is greater than or equal to expression2 ; if it is, the operator returns true." version="9"/>
               <string helpurl="operators:inequality" name="!= (inequality)" text="!=" tiptext="Tests for the exact opposite of the equality (==) operator." version="9"/>
               <string helpurl="operators:less than" name="&lt; (less than)" text="&lt;" tiptext="Compares two expressions and determines whether expression1 is less than expression2 ; if so, the operator returns true." version="9"/>
               <string helpurl="operators:less than or equal to" name="&lt;= (less than or equal to)" text="&lt;=" tiptext="Compares two expressions and determines whether expression1 is less than or equal to expression2 ; if it is, the operator returns true." version="9"/>
               <string helpurl="operators:strict equality" name="=== (strict equality)" text="===" tiptext="Tests two expressions for equality; the strict equality (===) operator performs in the same way as the equality (==) operator, except that data types are not converted." version="9"/>
               <string helpurl="operators:strict inequality" name="!== (strict inequality)" text="!==" tiptext="Tests for the exact opposite of the strict equality (===) operator." version="9"/>
            </folder>
            <folder name="comment" sort="false" tiptext="comment operators">
               <action helpurl="operators:block comment delimiter" id="comment" name="/*..*/ (block comment delimiter)" text="/* %% */\n" tiptext="Indicates one or more lines of script comments." version="9"/>
               <action helpurl="operators:line comment delimiter" id="comment" name="// (line comment delimiter)" quickey="//" text="// %%\n" tiptext="Indicates the beginning of a script comment." version="9"/>
            </folder>
            <folder name="arithmetic" sort="false" tiptext="arithmetic operators">
               <string helpurl="operators:addition" name="+ (addition)" text="+" tiptext="Adds numeric expressions." version="9"/>
               <string helpurl="operators:decrement" name="-- (decrement)" text="--" tiptext="A pre-decrement and post-decrement unary operator that subtracts 1 from the expression." version="9"/>
               <string helpurl="operators:division" name="/ (division)" text="/" tiptext="Divides expression1 by expression2." version="9"/>
               <string helpurl="operators:increment" name="++ (increment)" text="++" tiptext="A pre-increment and post-increment unary operator that adds 1 to  expression ." version="9"/>
               <string helpurl="operators:modulo" name="% (modulo)" text="%" tiptext="Calculates the remainder of expression1 divided by  expression2." version="9"/>
               <string helpurl="operators:multiplication" name="* (multiplication)" text="*" tiptext="Multiplies two numerical expressions." version="9"/>
               <string helpurl="operators:subtraction" name="- (subtraction)" text="-" tiptext="Used for negating or subtracting." version="9"/>
            </folder>
            <folder name="arithmetic compound assignment" sort="false" tiptext="compound arithmetic operators">
               <string helpurl="operators:addition assignment" name="+= (addition assignment)" text="+=" tiptext="Assigns expression1 the value of  expression1 + expression2." version="9"/>
               <string helpurl="operators:division assignment" name="/= (division assignment)" text="/=" tiptext="Assigns expression1 the value of  expression1 / expression2." version="9"/>
               <string helpurl="operators:modulo assignment" name="%= (modulo assignment)" text="%=" tiptext="Assigns expression1 the value of  expression1 % expression2." version="9"/>
               <string helpurl="operators:multiplication assignment" name="*= (multiplication assignment)" text="*=" tiptext="Operator (arithmetic compound assignment); assigns expression1 the value of  expression1 * expression2." version="9"/>
               <string helpurl="operators:subtraction assignment" name="-= (subtraction assignment)" text="-=" tiptext="Assigns expression1 the value of  expression1 - expression2." version="9"/>
            </folder>
            <folder name="bitwise" sort="false" tiptext="bitwise operators">
               <string helpurl="operators:bitwise AND" name="&amp; (bitwise AND)" text="&amp;" tiptext="Converts expression1 and  expression2 to 32-bit unsigned integers, and performs a Boolean AND operation on each bit of the integer parameters." version="9"/>
               <string helpurl="operators:bitwise left shift" name="&lt;&lt; (bitwise left shift)" text="&lt;&lt;" tiptext="Converts expression1 and expression2 to 32-bit integers, and shifts all the bits in expression1 to the left by the number of places specified by the integer resulting from the conversion of expression2." version="9"/>
               <string helpurl="operators:bitwise NOT" name="~ (bitwise NOT)" text="~" tiptext="Also known as the one's complement operator or the bitwise complement operator." version="9"/>
               <string helpurl="operators:bitwise OR" name="| (bitwise OR)" text="|" tiptext="Converts expression1 and expression2 to 32-bit unsigned integers, and places a 1 in each bit position where the corresponding bits of either  expression1 or expression2 are 1." version="9"/>
               <string helpurl="operators:bitwise right shift" name="&gt;&gt; (bitwise right shift)" text="&gt;&gt;" tiptext="Converts expression1 and expression2 to 32-bit integers, and shifts all the bits in expression1 to the right by the number of places specified by the integer that results from the conversion of expression2." version="9"/>
               <string helpurl="operators:bitwise unsigned right shift" name="&gt;&gt;&gt; (bitwise unsigned right shift)" text="&gt;&gt;&gt;" tiptext="The same as the bitwise right shift (&amp;gt;&amp;gt;) operator except that it does not preserve the sign of the original expression because the bits on the left are always filled with 0." version="9"/>
               <string helpurl="operators:bitwise XOR" name="^ (bitwise XOR)" text="^" tiptext="Converts expression1 and expression2 to 32-bit unsigned integers, and returns a 1 in each bit position where the corresponding bits in expression1 or expression2, but not both, are 1." version="9"/>
            </folder>
            <folder name="bitwise compound assignment" sort="false" tiptext="compound bitwise operators">
               <string helpurl="operators:bitwise AND assignment" name="&amp;= (bitwise AND assignment)" text="&amp;=" tiptext="Assigns expression1 the value of expression1 &amp;amp; expression2." version="9"/>
               <string helpurl="operators:bitwise left shift and assignment" name="&lt;&lt;= (bitwise left shift and assignment)" text="&lt;&lt;=" tiptext="This operator performs a bitwise left shift (&amp;lt;&amp;lt;=) operation and stores the contents as a result in expression1." version="9"/>
               <string helpurl="operators:bitwise OR assignment" name="|= (bitwise OR assignment)" text="|=" tiptext="Assigns expression1 the value of  expression1 | expression2." version="9"/>
               <string helpurl="operators:bitwise right shift and assignment" name="&gt;&gt;= (bitwise right shift and assignment)" text="&gt;&gt;=" tiptext="This operator performs a bitwise right-shift operation and stores the contents as a result in expression1." version="9"/>
               <string helpurl="operators:bitwise unsigned right shift and assignment" name="&gt;&gt;&gt;= (bitwise unsigned right shift and assignment)" text="&gt;&gt;&gt;=" tiptext="Performs an unsigned bitwise right-shift operation and stores the contents as a result in expression1." version="9"/>
               <string helpurl="operators:bitwise XOR assignment" name="^= (bitwise XOR assignment)" text="^=" tiptext="Assigns expression1 the value of  expression1 ^ expression2." version="9"/>
            </folder>
            <folder name="string" sort="false" tiptext="string operators">
               <string helpurl="operators:concatenation" name="+ (concatenation)" text="+" tiptext="Concatenates (combines) strings." version="9"/>
               <string helpurl="operators:concatenation assignment" name="+= (concatenation assignment)" text="+=" tiptext="Assigns expression1 the value of  expression1 + expression2." version="9"/>
               <string helpurl="operators:string delimiter" name="&quot; (string delimiter)" text="&quot;" tiptext="When used before and after characters, quotation marks (&quot;) indicate that the characters have a literal value." version="9"/>
            </folder>
            <folder name="assignment" sort="false" tiptext="assignment operators">
               <string helpurl="operators:assignment" name="= (assignment)" text="=" tiptext="Assigns the value of expression2 (the parameter on the right) to the variable, array element, or property in expression1." version="9"/>
            </folder>
            <folder name="XML" sort="false" tiptext="XML operators">
               <string helpurl="operators:attribute identifier" name="@ (attribute identifier)" text="@" tiptext="Use the XML @ (at sign) operator to identify attributes of an XML or XMLList object." version="9"/>
               <string helpurl="operators:braces (XML)" name="{ } (braces (XML))" text="{ }" tiptext="Use the XML { and } operators to pass data by reference (from other variables) into an XML or XMLList literal." version="9"/>
               <string helpurl="operators:brackets (XML)" name="[ ] (brackets (XML))" text="[ ]" tiptext="Accesses a property or attribute of an XML or XMLList object." version="9"/>
               <string helpurl="operators:concatenation (XMLList)" name="+ (concatenation (XMLList))" text="+" tiptext="Use the XML + (concatenation) operator to concatenate XMLList objects." version="9"/>
               <string helpurl="operators:concatenation assignment (XMLList)" name="+= (concatenation assignment (XMLList))" text="+=" tiptext="Assigns expression1, which is an XMLList object, the value of expression1 + expression2." version="9"/>
               <string helpurl="operators:delete (XML)" name="delete (XML)" text="delete (XML)" tiptext="Deletes the XML elements or attributes specified." version="9"/>
               <string helpurl="operators:descendant accessor" name=".. (descendant accessor)" text=".." tiptext="Use the XML descendant accessor (..) operator to navigate to descendant elements of an XML or XMLList object, or (combined with the @ operator) to return attributes descendants." version="9"/>
               <string helpurl="operators:dot (XML)" name=". (dot (XML))" text="." tiptext="Navigates to child elements of an XML or XMLList object, or (combined with the @ operator) returns attributes of an XML or XMLList object." version="9"/>
               <string helpurl="operators:parentheses (XML)" name="( ) (parentheses (XML))" text="( )" tiptext="Use the ( and ) operators to evaluate an expression in an E4X XML construct." version="9"/>
               <string helpurl="operators:XML literal tag delimiter" name="&lt; &gt; (XML literal tag delimiter)" text="&lt; &gt;" tiptext="Use the &amp;lt; and &amp;gt; operators to define an XML tag in an XML literal." version="9"/>
            </folder>
         </folder>
         <folder helpurl="specialTypes:" name="Special Types" sort="true" tiptext="Special Types for strong typing">
            <string helpurl="specialTypes:*" name="*" text="*" tiptext="Specifies that a property is untyped." version="9"/>
            <string helpurl="specialTypes:void" name="void" object="void" text="void" tiptext="Specifies that a function cannot return any value." version="9"/>
            <string helpurl="specialTypes:Null" name="Null" object="Null" text="Null" tiptext="A special data type that represents the lack of a value." version="9"/>
         </folder>
      </folder>
   </actionspanel>
   <codehints>
      <package children="AccImpl,ButtonAccImpl,CheckBoxAccImpl,ComboBoxAccImpl,DataGridAccImpl,LabelButtonAccImpl,ListAccImpl,RadioButtonAccImpl,SelectableListAccImpl,TileListAccImpl,UIComponentAccImpl" name="fl.accessibility"/>
      <package children="BaseScrollPane,ScrollPane,UILoader" name="fl.containers"/>
      <package children="BaseButton,Button,ButtonLabelPlacement,CheckBox,ColorPicker,ComboBox,DataGrid,Label,LabelButton,List,NumericStepper,ProgressBar,ProgressBarDirection,ProgressBarMode,RadioButton,RadioButtonGroup,ScrollBar,ScrollBarDirection,ScrollPolicy,SelectableList,Slider,SliderDirection,TextArea,TextInput,TileList,UIScrollBar" name="fl.controls"/>
      <package children="DataGridCellEditor,DataGridColumn,HeaderRenderer" name="fl.controls.dataGridClasses"/>
      <package children="CellRenderer,ICellRenderer,ImageCell,ListData,TileListData" name="fl.controls.listClasses"/>
      <package children="IndeterminateBar" name="fl.controls.progressBarClasses"/>
      <package children="InvalidationType,UIComponent" name="fl.core"/>
      <package children="DataProvider,SimpleCollectionItem,TileListCollectionItem" name="fl.data"/>
      <package children="ColorPickerEvent,ComponentEvent,DataChangeEvent,DataChangeType,DataGridEvent,DataGridEventReason,InteractionInputType,ListEvent,RSLErrorEvent,RSLEvent,ScrollEvent,SliderEvent,SliderEventClickTarget" name="fl.events"/>
      <package children="IKArmature,IKBone,IKEvent,IKJoint,IKManager,IKMover" name="fl.ik"/>
      <package children="Locale" name="fl.lang"/>
      <package children="LivePreviewParent" name="fl.livepreview"/>
      <package children="FocusManager,IFocusManager,IFocusManagerComponent,IFocusManagerGroup,StyleManager" name="fl.managers"/>
      <package children="AdjustColor,Animator,Animator3D,AnimatorBase,AnimatorFactory,AnimatorFactory3D,AnimatorFactoryBase,AnimatorFactoryUniversal,AnimatorUniversal,BezierEase,BezierSegment,Color,ColorMatrix,CustomEase,DynamicMatrix,FunctionEase,ITween,Keyframe,KeyframeBase,MatrixTransformer,Motion,MotionBase,MotionEvent,RotateDirection,SimpleEase,Source,Tweenables" name="fl.motion"/>
      <package children="Back,Bounce,Circular,Cubic,Elastic,Exponential,Linear,Quadratic,Quartic,Quintic,Sine" name="fl.motion.easing"/>
      <package children="RSLInfo,RSLPreloader,SWZInfo" name="fl.rsl"/>
      <package children="TLFTextField" name="fl.text"/>
      <package children="Blinds,Fade,Fly,Iris,Photo,PixelDissolve,Rotate,Squeeze,Transition,TransitionManager,Tween,TweenEvent,Wipe,Zoom" name="fl.transitions"/>
      <package children="Back,Bounce,Elastic,None,Regular,Strong" name="fl.transitions.easing"/>
      <package children="AutoLayoutEvent,CaptionChangeEvent,CaptionTargetEvent,CuePointType,FLVPlayback,FLVPlaybackCaptioning,INCManager,IVPEvent,LayoutEvent,MetadataEvent,NCManager,NCManagerNative,SkinErrorEvent,SoundEvent,VideoAlign,VideoError,VideoEvent,VideoPlayer,VideoProgressEvent,VideoScaleMode,VideoState" name="fl.video"/>
      <package children="ActionScriptVersion,AVM1Movie,Bitmap,BitmapData,BitmapDataChannel,DisplayObject,DisplayObjectContainer,FrameLabel,GradientType,Graphics,InteractiveObject,Loader,LoaderInfo,MovieClip,NativeWindow,PixelSnapping,Scene,Shape,SimpleButton,Sprite,Stage,StageAlign,StageAspectRatio,StageDisplayState,StageOrientation,StageQuality,StageScaleMode,SWFVersion" name="flash.display"/>
      <package children="EOFError,IllegalOperationError,InvalidSWFError,IOError,MemoryError,ScriptTimeoutError,SQLError,SQLErrorOperation,StackOverflowError" name="flash.errors"/>
      <package children="AccelerometerEvent,AsyncErrorEvent,ContextMenuEvent,DataEvent,DatagramSocketDataEvent,DNSResolverEvent,ErrorEvent,Event,EventDispatcher,EventPhase,FileListEvent,FocusEvent,FullScreenEvent,GeolocationEvent,GestureEvent,GesturePhase,HTTPStatusEvent,IEventDispatcher,IMEEvent,InvokeEvent,IOErrorEvent,KeyboardEvent,MouseEvent,NativeProcessExitEvent,NetStatusEvent,OutputProgressEvent,ProgressEvent,SampleDataEvent,SecurityErrorEvent,ServerSocketConnectEvent,StageBoundsEvent,StageOrientationEvent,StatusEvent,StorageVolumeChangeEvent,SyncEvent,TextEvent,TimerEvent,TouchEvent,TransformGestureEvent,UncaughtErrorEvent,UncaughtErrorEvents" name="flash.events"/>
      <package children="ExternalInterface" name="flash.external"/>
      <package children="File,FileMode,FileStream,StorageVolume,StorageVolumeInfo" name="flash.filesystem"/>
      <package children="ColorTransform,Matrix,Matrix3D,Orientation3D,PerspectiveProjection,Point,Rectangle,Transform,Utils3D,Vector3D" name="flash.geom"/>
      <package children="Camera,ID3Info,MediaLibrary,Microphone,Sound,SoundChannel,SoundCodec,SoundLoaderContext,SoundMixer,SoundTransform,Video,scanHardware" name="flash.media"/>
      <package children="DatagramSocket,FileFilter,FileReference,FileReferenceList,GroupSpecifier,IDynamicPropertyOutput,IDynamicPropertyWriter,InterfaceAddress,IPVersion,LocalConnection,NetConnection,NetGroup,NetGroupInfo,NetGroupReceiveMode,NetGroupReplicationStrategy,NetGroupSendMode,NetGroupSendResult,NetStream,NetStreamInfo,NetStreamMulticastInfo,NetStreamPlayOptions,NetStreamPlayTransitions,NetworkInfo,NetworkInterface,ObjectEncoding,Responder,ServerSocket,SharedObject,SharedObjectFlushStatus,Socket,URLLoader,URLLoaderDataFormat,URLRequest,URLRequestDefaults,URLRequestHeader,URLRequestMethod,URLStream,URLVariables,XMLSocket,getClassByAlias,navigateToURL,registerClassAlias,sendToURL" name="flash.net"/>
      <package children="Accelerometer,Geolocation" name="flash.sensors"/>
      <package children="ApplicationDomain,Capabilities,IME,IMEConversionMode,JPEGLoaderContext,LoaderContext,Security,SecurityDomain,SecurityPanel,System,SystemUpdater,SystemUpdaterType,TouchscreenType,fscommand" name="flash.system"/>
      <package children="AntiAliasType,CSMSettings,Font,FontStyle,FontType,GridFitType,StaticText,StyleSheet,TextColorType,TextDisplayMode,TextExtent,TextField,TextFieldAutoSize,TextFieldType,TextFormat,TextFormatAlign,TextLineMetrics,TextRenderer,TextSnapshot" name="flash.text"/>
      <package children="BreakOpportunity,CFFHinting,ContentElement,DigitCase,DigitWidth,EastAsianJustifier,ElementFormat,FontDescription,FontLookup,FontMetrics,FontPosture,FontWeight,GraphicElement,GroupElement,JustificationStyle,Kerning,LigatureLevel,LineJustification,RenderingMode,SpaceJustifier,TabAlignment,TabStop,TextBaseline,TextBlock,TextElement,TextJustifier,TextLine,TextLineCreationResult,TextLineMirrorRegion,TextLineValidity,TextRotation,TypographicCase" name="flash.text.engine"/>
      <package children="ContextMenu,ContextMenuBuiltInItems,ContextMenuClipboardItems,ContextMenuItem,Keyboard,KeyboardType,KeyLocation,Mouse,MouseCursor,Multitouch,MultitouchInputMode" name="flash.ui"/>
      <package children="ByteArray,CompressionAlgorithm,Dictionary,Endian,IDataInput,IDataOutput,IExternalizable,Proxy,Timer,describeType,escapeMultiByte,getAliasName,getDefinitionByName,getQualifiedClassName,getQualifiedSuperclassName,getTimer,unescapeMultiByte,clearInterval,clearTimeout,setInterval,setTimeout" name="flash.utils"/>
      <package children="XMLDocument,XMLNode,XMLNodeType" name="flash.xml"/>
      <typeinfo object="flash.display.MovieClip" pattern="*_mc"/>
      <typeinfo object="Array" pattern="*_array"/>
      <typeinfo object="String" pattern="*_str"/>
      <typeinfo object="flash.display.SimpleButton" pattern="*_btn"/>
      <typeinfo object="flash.text.TextField" pattern="*_txt"/>
      <typeinfo object="flash.text.TextFormat" pattern="*_fmt"/>
      <typeinfo object="Date" pattern="*_date"/>
      <typeinfo object="flash.media.Sound" pattern="*_sound"/>
      <typeinfo object="XML" pattern="*_xml"/>
      <typeinfo object="flash.xml.XMLNode" pattern="*_xmlnode"/>
      <typeinfo object="flash.net.XMLSocket" pattern="*_xmlsocket"/>
      <typeinfo object="fl.motion.Color" pattern="*_color"/>
      <typeinfo object="Error" pattern="*_err"/>
      <typeinfo object="flash.net.LocalConnection" pattern="*_lc"/>
      <typeinfo object="flash.net.NetConnection" pattern="*_nc"/>
      <typeinfo object="flash.net.NetStream" pattern="*_ns"/>
      <typeinfo object="flash.net.SharedObject" pattern="*_so"/>
      <typeinfo object="flash.media.Video" pattern="*_video"/>
   </codehints>
</toolbox>
