<?xml version="1.0" encoding="utf-8"?>
<!-- This file generated from help file documentation on 12/16/2010 -->
<toolbox>
    <actionspanel>
        <folder name="Top Level" id="Top Level" sort="true" tiptext="The top level contains the core ActionScript classes and global functions.">
        <folder name="ArgumentError" id="ArgumentError" sort="true" index="true" asAncestors="Error,Object" tiptext="The ArgumentError class represents an error that occurs when the arguments supplied in a function do not match the arguments defined for that function." helpurl="globalClassifier:ArgumentError">
            <folder name="Methods" id="Methods" tiptext="Methods for class ArgumentError" helpurl="globalClassifier:ArgumentError">
                <string name="ArgumentError" object="ArgumentError" text="new ArgumentError(%message:String%)" constructor="true" tiptext="Creates an ArgumentError object." version="1.0" playername="" helpurl="ArgumentError:ArgumentError"/>
            </folder>
        </folder>
        <folder name="arguments" id="arguments" sort="true" index="true" asAncestors="Object" tiptext="An arguments object is used to store and access a function&apos;s arguments." helpurl="globalClassifier:arguments">
            <folder name="Properties" id="Properties" tiptext="Properties for class arguments" helpurl="globalClassifier:arguments">
                <string name="callee" object="arguments" text=".callee" tiptext="A reference to the currently executing function." version="" playername="" helpurl="arguments:callee"/>
                <string name="length" object="arguments" text=".length" tiptext="The number of arguments passed to the function." version="" playername="" helpurl="arguments:length"/>
            </folder>
        </folder>
        <folder name="Array" id="Array" sort="true" index="true" asAncestors="Object" tiptext="The Array class lets you access and manipulate arrays." helpurl="globalClassifier:Array">
            <folder name="Methods" id="Methods" tiptext="Methods for class Array" helpurl="globalClassifier:Array">
                <string name="Array" object="Array" text="new Array(%values:restParam%)" constructor="true" tiptext="Lets you create an array that contains the specified elements." version="4" playername="" helpurl="Array:Array"/>
                <string name="Array" object="Array" text="new Array(%[numElements:int=0]%)" constructor="true" tiptext="Lets you create an array of the specified number of elements." version="4" playername="" helpurl="Array:Array"/>
                <string name="concat" object="Array" text=".concat(%args:restParam%):Array" tiptext="Concatenates the elements specified in the parameters." version="4" playername="" helpurl="Array:AS3:concat"/>
                <string name="every" object="Array" text=".every(%callback:Function[,thisObject:*=null]%):Boolean" tiptext="Executes a test function on each item in the array until an item is reached that returns false for the specified function." version="4" playername="" helpurl="Array:AS3:every"/>
                <string name="filter" object="Array" text=".filter(%callback:Function[,thisObject:*=null]%):Array" tiptext="Executes a test function on each item in the array and constructs a new array for all items that return true for the specified function." version="4" playername="" helpurl="Array:AS3:filter"/>
                <string name="forEach" object="Array" text=".forEach(%callback:Function[,thisObject:*=null]%):void" tiptext="Executes a function on each item in the array." version="4" playername="" helpurl="Array:AS3:forEach"/>
                <string name="indexOf" object="Array" text=".indexOf(%searchElement:*[,fromIndex:int=0]%):int" tiptext="Searches for an item in an array by using strict equality (===) and returns the index position of the item." version="4" playername="" helpurl="Array:AS3:indexOf"/>
                <string name="join" object="Array" text=".join(%[sep:*=unknown]%):String" tiptext="Converts the elements in an array to strings." version="4" playername="" helpurl="Array:AS3:join"/>
                <string name="lastIndexOf" object="Array" text=".lastIndexOf(%searchElement:*[,fromIndex:int=0x7fffffff]%):int" tiptext="Searches for an item in an array, working backward from the last item, and returns the index position of the matching item using strict equality (===)." version="4" playername="" helpurl="Array:AS3:lastIndexOf"/>
                <string name="map" object="Array" text=".map(%callback:Function[,thisObject:*=null]%):Array" tiptext="Executes a function on each item in an array, and constructs a new array of items corresponding to the results of the function on each item in the original array." version="4" playername="" helpurl="Array:AS3:map"/>
                <string name="pop" object="Array" text=".pop(%%)" tiptext="Removes the last element from an array and returns the value of that element." version="4" playername="" helpurl="Array:AS3:pop"/>
                <string name="push" object="Array" text=".push(%args:restParam%):uint" tiptext="Adds one or more elements to the end of an array and returns the new length of the array." version="4" playername="" helpurl="Array:AS3:push"/>
                <string name="reverse" object="Array" text=".reverse(%%):Array" tiptext="Reverses the array in place." version="4" playername="" helpurl="Array:AS3:reverse"/>
                <string name="shift" object="Array" text=".shift(%%)" tiptext="Removes the first element from an array and returns that element." version="4" playername="" helpurl="Array:AS3:shift"/>
                <string name="slice" object="Array" text=".slice(%[startIndex:int=0,endIndex:int=16777215]%):Array" tiptext="Returns a new array that consists of a range of elements from the original array." version="4" playername="" helpurl="Array:AS3:slice"/>
                <string name="some" object="Array" text=".some(%callback:Function[,thisObject:*=null]%):Boolean" tiptext="Executes a test function on each item in the array until an item is reached that returns true." version="4" playername="" helpurl="Array:AS3:some"/>
                <string name="sortOn" object="Array" text=".sortOn(%fieldName:Object[,options:Object=null]%):Array" tiptext="Sorts the elements in an array according to one or more fields in the array." version="4" playername="" helpurl="Array:AS3:sortOn"/>
                <string name="sort" object="Array" text=".sort(%args:restParam%):Array" tiptext="Sorts the elements in an array." version="4" playername="" helpurl="Array:AS3:sort"/>
                <string name="splice" object="Array" text=".splice(%startIndex:int,deleteCount:uint,values:restParam%):Array" tiptext="Adds elements to and removes elements from an array." version="4" playername="" helpurl="Array:AS3:splice"/>
                <string name="toLocaleString" object="Array" text=".toLocaleString(%%):String" tiptext="Returns a string that represents the elements in the specified array." version="4" playername="" helpurl="Array:toLocaleString"/>
                <string name="toString" object="Array" text=".toString(%%):String" tiptext="Returns a string that represents the elements in the specified array." version="4" playername="" helpurl="Array:toString"/>
                <string name="unshift" object="Array" text=".unshift(%args:restParam%):uint" tiptext="Adds one or more elements to the beginning of an array and returns the new length of the array." version="4" playername="" helpurl="Array:AS3:unshift"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class Array" helpurl="globalClassifier:Array">
                <string name="CASEINSENSITIVE" object="Array" text="Array.CASEINSENSITIVE" constant="true" tiptext="Specifies case-insensitive sorting for the Array class sorting methods." version="" playername="" helpurl="Array:CASEINSENSITIVE"/>
                <string name="DESCENDING" object="Array" text="Array.DESCENDING" constant="true" tiptext="Specifies descending sorting for the Array class sorting methods." version="" playername="" helpurl="Array:DESCENDING"/>
                <string name="NUMERIC" object="Array" text="Array.NUMERIC" constant="true" tiptext="Specifies numeric (instead of character-string) sorting for the Array class sorting methods." version="" playername="" helpurl="Array:NUMERIC"/>
                <string name="RETURNINDEXEDARRAY" object="Array" text="Array.RETURNINDEXEDARRAY" constant="true" tiptext="Specifies that a sort returns an array that consists of array indices." version="" playername="" helpurl="Array:RETURNINDEXEDARRAY"/>
                <string name="UNIQUESORT" object="Array" text="Array.UNIQUESORT" constant="true" tiptext="Specifies the unique sorting requirement for the Array class sorting methods." version="" playername="" helpurl="Array:UNIQUESORT"/>
                <string name="length" object="Array" text=".length" tiptext="A non-negative integer specifying the number of elements in the array." version="" playername="" helpurl="Array:length:get"/>
            </folder>
        </folder>
        <folder name="Boolean" id="Boolean" sort="true" index="true" asAncestors="Object" tiptext="A Boolean object is a data type that can have one of two values, either true or false, used for logical operations." helpurl="globalClassifier:Boolean">
            <folder name="Methods" id="Methods" tiptext="Methods for class Boolean" helpurl="globalClassifier:Boolean">
                <string name="Boolean" object="Boolean" text="new Boolean(%[expression:Object=false]%)" constructor="true" tiptext="Creates a Boolean object with the specified value." version="4" playername="" helpurl="Boolean:Boolean"/>
                <string name="toString" object="Boolean" text=".toString(%%):String" tiptext="Returns the string representation (&quot;true&quot; or &quot;false&quot;) of the Boolean object." version="4" playername="" helpurl="Boolean:AS3:toString"/>
                <string name="valueOf" object="Boolean" text=".valueOf(%%):Boolean" tiptext="Returns true if the value of the specified Boolean object is true; false otherwise." version="4" playername="" helpurl="Boolean:AS3:valueOf"/>
            </folder>
        </folder>
        <folder name="Date" id="Date" sort="true" index="true" asAncestors="Object" tiptext="The Date class represents date and time information." helpurl="globalClassifier:Date">
            <folder name="Methods" id="Methods" tiptext="Methods for class Date" helpurl="globalClassifier:Date">
                <string name="Date" object="Date" text="new Date(%yearOrTimevalue:Object,month:Number[,date:Number=1,hour:Number=0,minute:Number=0,second:Number=0,millisecond:Number=0]%)" constructor="true" tiptext="Constructs a new Date object that holds the specified date and time." version="4" playername="" helpurl="Date:Date"/>
                <string name="UTC" object="Date" text="Date.UTC(%year:Number,month:Number[,date:Number=1,hour:Number=0,minute:Number=0,second:Number=0,millisecond:Number=0]%):Number" static="true" tiptext="Returns the number of milliseconds between midnight on January 1, 1970, universal time, and the time specified in the parameters." version="4" playername="" helpurl="Date:UTC"/>
                <string name="getDate" object="Date" text=".getDate(%%):Number" tiptext="Returns the day of the month (an integer from 1 to 31) specified by a Date object according to local time." version="4" playername="" helpurl="Date:AS3:getDate"/>
                <string name="getDay" object="Date" text=".getDay(%%):Number" tiptext="Returns the day of the week (0 for Sunday, 1 for Monday, and so on) specified by this Date according to local time." version="4" playername="" helpurl="Date:AS3:getDay"/>
                <string name="getFullYear" object="Date" text=".getFullYear(%%):Number" tiptext="Returns the full year (a four-digit number, such as 2000) of a Date object according to local time." version="4" playername="" helpurl="Date:AS3:getFullYear"/>
                <string name="getHours" object="Date" text=".getHours(%%):Number" tiptext="Returns the hour (an integer from 0 to 23) of the day portion of a Date object according to local time." version="4" playername="" helpurl="Date:AS3:getHours"/>
                <string name="getMilliseconds" object="Date" text=".getMilliseconds(%%):Number" tiptext="Returns the milliseconds (an integer from 0 to 999) portion of a Date object according to local time." version="4" playername="" helpurl="Date:AS3:getMilliseconds"/>
                <string name="getMinutes" object="Date" text=".getMinutes(%%):Number" tiptext="Returns the minutes (an integer from 0 to 59) portion of a Date object according to local time." version="4" playername="" helpurl="Date:AS3:getMinutes"/>
                <string name="getMonth" object="Date" text=".getMonth(%%):Number" tiptext="Returns the month (0 for January, 1 for February, and so on) portion of this  Date according to local time." version="4" playername="" helpurl="Date:AS3:getMonth"/>
                <string name="getSeconds" object="Date" text=".getSeconds(%%):Number" tiptext="Returns the seconds (an integer from 0 to 59) portion of a Date object according to local time." version="4" playername="" helpurl="Date:AS3:getSeconds"/>
                <string name="getTime" object="Date" text=".getTime(%%):Number" tiptext="Returns the number of milliseconds since midnight January 1, 1970, universal time, for a Date object." version="4" playername="" helpurl="Date:AS3:getTime"/>
                <string name="getTimezoneOffset" object="Date" text=".getTimezoneOffset(%%):Number" tiptext="Returns the difference, in minutes, between universal time (UTC) and the computer&apos;s local time." version="4" playername="" helpurl="Date:AS3:getTimezoneOffset"/>
                <string name="getUTCDate" object="Date" text=".getUTCDate(%%):Number" tiptext="Returns the day of the month (an integer from 1 to 31) of a Date object, according to universal time (UTC)." version="4" playername="" helpurl="Date:AS3:getUTCDate"/>
                <string name="getUTCDay" object="Date" text=".getUTCDay(%%):Number" tiptext="Returns the day of the week (0 for Sunday, 1 for Monday, and so on) of this Date  according to universal time (UTC)." version="4" playername="" helpurl="Date:AS3:getUTCDay"/>
                <string name="getUTCFullYear" object="Date" text=".getUTCFullYear(%%):Number" tiptext="Returns the four-digit year of a Date object according to universal time (UTC)." version="4" playername="" helpurl="Date:AS3:getUTCFullYear"/>
                <string name="getUTCHours" object="Date" text=".getUTCHours(%%):Number" tiptext="Returns the hour (an integer from 0 to 23) of the day of a Date object according to universal time (UTC)." version="4" playername="" helpurl="Date:AS3:getUTCHours"/>
                <string name="getUTCMilliseconds" object="Date" text=".getUTCMilliseconds(%%):Number" tiptext="Returns the milliseconds (an integer from 0 to 999) portion of a Date object according to universal time (UTC)." version="4" playername="" helpurl="Date:AS3:getUTCMilliseconds"/>
                <string name="getUTCMinutes" object="Date" text=".getUTCMinutes(%%):Number" tiptext="Returns the minutes (an integer from 0 to 59) portion of a Date object according to universal time (UTC)." version="4" playername="" helpurl="Date:AS3:getUTCMinutes"/>
                <string name="getUTCMonth" object="Date" text=".getUTCMonth(%%):Number" tiptext="Returns the month (0 [January] to 11 [December]) portion of a Date object according to universal time (UTC)." version="4" playername="" helpurl="Date:AS3:getUTCMonth"/>
                <string name="getUTCSeconds" object="Date" text=".getUTCSeconds(%%):Number" tiptext="Returns the seconds (an integer from 0 to 59) portion of a Date object according to universal time (UTC)." version="4" playername="" helpurl="Date:AS3:getUTCSeconds"/>
                <string name="parse" object="Date" text="Date.parse(%date:String%):Number" static="true" tiptext="Converts a string representing a date into a number equaling the number of milliseconds elapsed since January 1, 1970, UTC." version="4" playername="" helpurl="Date:parse"/>
                <string name="setDate" object="Date" text=".setDate(%day:Number%):Number" tiptext="Sets the day of the month, according to local time, and returns the new time in milliseconds." version="4" playername="" helpurl="Date:AS3:setDate"/>
                <string name="setFullYear" object="Date" text=".setFullYear(%year:Number,month:Number,day:Number%):Number" tiptext="Sets the year, according to local time, and returns the new time in milliseconds." version="4" playername="" helpurl="Date:AS3:setFullYear"/>
                <string name="setHours" object="Date" text=".setHours(%hour:Number,minute:Number,second:Number,millisecond:Number%):Number" tiptext="Sets the hour, according to local time, and returns the new time in milliseconds." version="4" playername="" helpurl="Date:AS3:setHours"/>
                <string name="setMilliseconds" object="Date" text=".setMilliseconds(%millisecond:Number%):Number" tiptext="Sets the milliseconds, according to local time, and returns the new time in milliseconds." version="4" playername="" helpurl="Date:AS3:setMilliseconds"/>
                <string name="setMinutes" object="Date" text=".setMinutes(%minute:Number,second:Number,millisecond:Number%):Number" tiptext="Sets the minutes, according to local time, and returns the new time in milliseconds." version="4" playername="" helpurl="Date:AS3:setMinutes"/>
                <string name="setMonth" object="Date" text=".setMonth(%month:Number,day:Number%):Number" tiptext="Sets the month and optionally the day of the month, according to local time, and returns the new time in milliseconds." version="4" playername="" helpurl="Date:AS3:setMonth"/>
                <string name="setSeconds" object="Date" text=".setSeconds(%second:Number,millisecond:Number%):Number" tiptext="Sets the seconds, according to local time, and returns the new time in milliseconds." version="4" playername="" helpurl="Date:AS3:setSeconds"/>
                <string name="setTime" object="Date" text=".setTime(%millisecond:Number%):Number" tiptext="Sets the date in milliseconds since midnight on January 1, 1970, and returns the new time in milliseconds." version="4" playername="" helpurl="Date:AS3:setTime"/>
                <string name="setUTCDate" object="Date" text=".setUTCDate(%day:Number%):Number" tiptext="Sets the day of the month, in universal time (UTC), and returns the new time in milliseconds." version="4" playername="" helpurl="Date:AS3:setUTCDate"/>
                <string name="setUTCFullYear" object="Date" text=".setUTCFullYear(%year:Number,month:Number,day:Number%):Number" tiptext="Sets the year, in universal time (UTC), and returns the new time in milliseconds." version="4" playername="" helpurl="Date:AS3:setUTCFullYear"/>
                <string name="setUTCHours" object="Date" text=".setUTCHours(%hour:Number,minute:Number,second:Number,millisecond:Number%):Number" tiptext="Sets the hour, in universal time (UTC), and returns the new time in milliseconds." version="4" playername="" helpurl="Date:AS3:setUTCHours"/>
                <string name="setUTCMilliseconds" object="Date" text=".setUTCMilliseconds(%millisecond:Number%):Number" tiptext="Sets the milliseconds, in universal time (UTC), and returns the new time in milliseconds." version="4" playername="" helpurl="Date:AS3:setUTCMilliseconds"/>
                <string name="setUTCMinutes" object="Date" text=".setUTCMinutes(%minute:Number,second:Number,millisecond:Number%):Number" tiptext="Sets the minutes, in universal time (UTC), and returns the new time in milliseconds." version="4" playername="" helpurl="Date:AS3:setUTCMinutes"/>
                <string name="setUTCMonth" object="Date" text=".setUTCMonth(%month:Number,day:Number%):Number" tiptext="Sets the month, and optionally the day, in universal time(UTC) and returns the new time in milliseconds." version="4" playername="" helpurl="Date:AS3:setUTCMonth"/>
                <string name="setUTCSeconds" object="Date" text=".setUTCSeconds(%second:Number,millisecond:Number%):Number" tiptext="Sets the seconds, and optionally the milliseconds, in universal time (UTC) and returns the new time in milliseconds." version="4" playername="" helpurl="Date:AS3:setUTCSeconds"/>
                <string name="toDateString" object="Date" text=".toDateString(%%):String" tiptext="Returns a string representation of the day and date only, and does not include the time or timezone." version="4" playername="" helpurl="Date:AS3:toDateString"/>
                <string name="toLocaleDateString" object="Date" text=".toLocaleDateString(%%):String" tiptext="Returns a String representation of the day and date only, and does not include the time or timezone." version="4" playername="" helpurl="Date:AS3:toLocaleDateString"/>
                <string name="toLocaleString" object="Date" text=".toLocaleString(%%):String" tiptext="Returns a String representation of the day, date, time, given in local time." version="4" playername="" helpurl="Date:AS3:toLocaleString"/>
                <string name="toLocaleTimeString" object="Date" text=".toLocaleTimeString(%%):String" tiptext="Returns a String representation of the time only, and does not include the day, date, year, or timezone." version="4" playername="" helpurl="Date:AS3:toLocaleTimeString"/>
                <string name="toString" object="Date" text=".toString(%%):String" tiptext="Returns a String representation of the day, date, time, and timezone." version="4" playername="" helpurl="Date:AS3:toString"/>
                <string name="toTimeString" object="Date" text=".toTimeString(%%):String" tiptext="Returns a String representation of the time and timezone only, and does not include the day and date." version="4" playername="" helpurl="Date:AS3:toTimeString"/>
                <string name="toUTCString" object="Date" text=".toUTCString(%%):String" tiptext="Returns a String representation of the day, date, and time in universal time (UTC)." version="4" playername="" helpurl="Date:AS3:toUTCString"/>
                <string name="valueOf" object="Date" text=".valueOf(%%):Number" tiptext="Returns the number of milliseconds since midnight January 1, 1970, universal time, for a Date object." version="4" playername="" helpurl="Date:AS3:valueOf"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class Date" helpurl="globalClassifier:Date">
                <string name="dateUTC" object="Date" text=".dateUTC" tiptext="The day of the month (an integer from 1 to 31) of a Date object according to universal time (UTC)." version="" playername="" helpurl="Date:AS3:dateUTC:get"/>
                <string name="date" object="Date" text=".date" tiptext="The day of the month (an integer from 1 to 31) specified by a Date object according to local time." version="" playername="" helpurl="Date:AS3:date:get"/>
                <string name="dayUTC" object="Date" text=".dayUTC" tiptext="The day of the week (0 for Sunday, 1 for Monday, and so on) of this Date  according to universal time (UTC)." version="" playername="" helpurl="Date:AS3:dayUTC:get"/>
                <string name="day" object="Date" text=".day" tiptext="The day of the week (0 for Sunday, 1 for Monday, and so on) specified by this Date according to local time." version="" playername="" helpurl="Date:AS3:day:get"/>
                <string name="fullYearUTC" object="Date" text=".fullYearUTC" tiptext="The four-digit year of a Date object according to universal time (UTC)." version="" playername="" helpurl="Date:AS3:fullYearUTC:get"/>
                <string name="fullYear" object="Date" text=".fullYear" tiptext="The full year (a four-digit number, such as 2000) of a Date object according to local time." version="" playername="" helpurl="Date:AS3:fullYear:get"/>
                <string name="hoursUTC" object="Date" text=".hoursUTC" tiptext="The hour (an integer from 0 to 23) of the day of a Date object according to universal time (UTC)." version="" playername="" helpurl="Date:AS3:hoursUTC:get"/>
                <string name="hours" object="Date" text=".hours" tiptext="The hour (an integer from 0 to 23) of the day portion of a Date object according to local time." version="" playername="" helpurl="Date:AS3:hours:get"/>
                <string name="millisecondsUTC" object="Date" text=".millisecondsUTC" tiptext="The milliseconds (an integer from 0 to 999) portion of a Date object according to universal time (UTC)." version="" playername="" helpurl="Date:AS3:millisecondsUTC:get"/>
                <string name="milliseconds" object="Date" text=".milliseconds" tiptext="The milliseconds (an integer from 0 to 999) portion of a Date object according to local time." version="" playername="" helpurl="Date:AS3:milliseconds:get"/>
                <string name="minutesUTC" object="Date" text=".minutesUTC" tiptext="The minutes (an integer from 0 to 59) portion of a Date object according to universal time (UTC)." version="" playername="" helpurl="Date:AS3:minutesUTC:get"/>
                <string name="minutes" object="Date" text=".minutes" tiptext="The minutes (an integer from 0 to 59) portion of a Date object according to local time." version="" playername="" helpurl="Date:AS3:minutes:get"/>
                <string name="monthUTC" object="Date" text=".monthUTC" tiptext="The month (0 [January] to 11 [December]) portion of a Date object according to universal time (UTC)." version="" playername="" helpurl="Date:AS3:monthUTC:get"/>
                <string name="month" object="Date" text=".month" tiptext="The month (0 for January, 1 for February, and so on) portion of a  Date object according to local time." version="" playername="" helpurl="Date:AS3:month:get"/>
                <string name="secondsUTC" object="Date" text=".secondsUTC" tiptext="The seconds (an integer from 0 to 59) portion of a Date object according to universal time (UTC)." version="" playername="" helpurl="Date:AS3:secondsUTC:get"/>
                <string name="seconds" object="Date" text=".seconds" tiptext="The seconds (an integer from 0 to 59) portion of a Date object according to local time." version="" playername="" helpurl="Date:AS3:seconds:get"/>
                <string name="time" object="Date" text=".time" tiptext="The number of milliseconds since midnight January 1, 1970, universal time, for a Date object." version="" playername="" helpurl="Date:AS3:time:get"/>
                <string name="timezoneOffset" object="Date" text=".timezoneOffset" tiptext="The difference, in minutes, between universal time (UTC) and the computer&apos;s local time." version="" playername="" helpurl="Date:AS3:timezoneOffset:get"/>
            </folder>
        </folder>
        <folder name="DefinitionError" id="DefinitionError" sort="true" index="true" asAncestors="Error,Object" tiptext="The DefinitionError class represents an error that occurs when user code attempts to define an identifier that is already defined." helpurl="globalClassifier:DefinitionError">
            <folder name="Methods" id="Methods" tiptext="Methods for class DefinitionError" helpurl="globalClassifier:DefinitionError">
                <string name="DefinitionError" object="DefinitionError" text="new DefinitionError(%message:String%)" constructor="true" tiptext="Creates a new DefinitionError object." version="1.0" playername="" helpurl="DefinitionError:DefinitionError"/>
            </folder>
        </folder>
        <folder name="Error" id="Error" sort="true" index="true" asAncestors="Object" tiptext="The Error class contains information about an error that occurred in a script." helpurl="globalClassifier:Error">
            <folder name="Methods" id="Methods" tiptext="Methods for class Error" helpurl="globalClassifier:Error">
                <string name="Error" object="Error" text="new Error(%message:String[,id:int=0]%)" constructor="true" tiptext="Creates a new Error instance with the specified error message." version="4" playername="" helpurl="Error:Error"/>
                <string name="getStackTrace" object="Error" text=".getStackTrace(%%):String" tiptext="Returns the call stack for an error in a readable form." version="4" playername="" helpurl="Error:getStackTrace"/>
                <string name="toString" object="Error" text=".toString(%%):String" tiptext="Returns the error message, or the word &quot;Error&quot; if the message is undefined." version="4" playername="" helpurl="Error:toString"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class Error" helpurl="globalClassifier:Error">
                <string name="message" object="Error" text=".message" tiptext="Contains the message associated with the Error object." version="" playername="" helpurl="Error:message"/>
                <string name="name" object="Error" text=".name" tiptext="Contains the name of the Error object." version="" playername="" helpurl="Error:name"/>
                <string name="errorID" object="Error" text=".errorID" tiptext="Contains the reference number associated with the specific error message." version="" playername="" helpurl="Error:errorID:get"/>
            </folder>
        </folder>
        <folder name="EvalError" id="EvalError" sort="true" index="true" asAncestors="Error,Object" tiptext="The EvalError class represents an error that occurs when user code calls the eval() function or attempts to use the new operator with the Function object." helpurl="globalClassifier:EvalError">
            <folder name="Methods" id="Methods" tiptext="Methods for class EvalError" helpurl="globalClassifier:EvalError">
                <string name="EvalError" object="EvalError" text="new EvalError(%message:String%)" constructor="true" tiptext="Creates a new EvalError object." version="1.0" playername="" helpurl="EvalError:EvalError"/>
            </folder>
        </folder>
        <folder name="Function" id="Function" sort="true" index="true" asAncestors="Object" tiptext="A function is the basic unit of code that can be invoked in ActionScript." helpurl="globalClassifier:Function">
            <folder name="Methods" id="Methods" tiptext="Methods for class Function" helpurl="globalClassifier:Function">
                <string name="apply" object="Function" text=".apply(%[thisArg:*=unknown,argArray:*=unknown]%)" tiptext="Specifies the object instance on which the Function is called." version="4" playername="" helpurl="Function:AS3:apply"/>
                <string name="call" object="Function" text=".call(%[thisArg:*=unknown,args:restParam]%)" tiptext="Invokes this Function." version="4" playername="" helpurl="Function:AS3:call"/>
            </folder>
        </folder>
        <folder name="int" id="int" sort="true" index="true" asAncestors="Object" tiptext="The int class lets you work with the data type representing a 32-bit signed integer." helpurl="globalClassifier:int">
            <folder name="Methods" id="Methods" tiptext="Methods for class int" helpurl="globalClassifier:int">
                <string name="int" object="int" text="new int(%num:Object%)" constructor="true" tiptext="Constructor; creates a new int object." version="4" playername="" helpurl="int:int"/>
                <string name="toExponential" object="int" text=".toExponential(%fractionDigits:uint%):String" tiptext="Returns a string representation of the number in exponential notation." version="4" playername="" helpurl="int:AS3:toExponential"/>
                <string name="toFixed" object="int" text=".toFixed(%fractionDigits:uint%):String" tiptext="Returns a string representation of the number in fixed-point notation." version="4" playername="" helpurl="int:AS3:toFixed"/>
                <string name="toPrecision" object="int" text=".toPrecision(%precision:uint%):String" tiptext="Returns a string representation of the number either in exponential notation or in fixed-point notation." version="4" playername="" helpurl="int:AS3:toPrecision"/>
                <string name="toString" object="int" text=".toString(%radix:uint%):String" tiptext="Returns the string representation of an int object." version="4" playername="" helpurl="int:AS3:toString"/>
                <string name="valueOf" object="int" text=".valueOf(%%):int" tiptext="Returns the primitive value of the specified int object." version="4" playername="" helpurl="int:AS3:valueOf"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class int" helpurl="globalClassifier:int">
                <string name="MAX_VALUE" object="int" text="int.MAX_VALUE" constant="true" tiptext="The largest representable 32-bit signed integer, which is 2,147,483,647." version="" playername="" helpurl="int:MAX_VALUE"/>
                <string name="MIN_VALUE" object="int" text="int.MIN_VALUE" constant="true" tiptext="The smallest representable 32-bit signed integer, which is -2,147,483,648." version="" playername="" helpurl="int:MIN_VALUE"/>
            </folder>
        </folder>
        <folder name="Math" id="Math" sort="true" index="true" asAncestors="Object" tiptext="The Math class contains methods and constants that represent common mathematical functions and values." helpurl="globalClassifier:Math">
            <folder name="Methods" id="Methods" tiptext="Methods for class Math" helpurl="globalClassifier:Math">
                <string name="abs" object="Math" text="Math.abs(%val:Number%):Number" static="true" tiptext="Returns the absolute value of the specified Number." version="4" playername="" helpurl="Math:abs"/>
                <string name="acos" object="Math" text="Math.acos(%val:Number%):Number" static="true" tiptext="Returns the arc cosine, in radians, of the specified Number." version="4" playername="" helpurl="Math:acos"/>
                <string name="asin" object="Math" text="Math.asin(%val:Number%):Number" static="true" tiptext="Returns the value, in radians, of the arc sine of the specified Number parameter." version="4" playername="" helpurl="Math:asin"/>
                <string name="atan2" object="Math" text="Math.atan2(%y:Number,x:Number%):Number" static="true" tiptext="Returns the angle of the point y/x in radians, when measured counterclockwise from a circle&apos;s x axis." version="4" playername="" helpurl="Math:atan2"/>
                <string name="atan" object="Math" text="Math.atan(%val:Number%):Number" static="true" tiptext="Returns the angle, in radians, whose tangent is specified by parameter val." version="4" playername="" helpurl="Math:atan"/>
                <string name="ceil" object="Math" text="Math.ceil(%val:Number%):Number" static="true" tiptext="Returns the ceiling of the specified number or expression." version="4" playername="" helpurl="Math:ceil"/>
                <string name="cos" object="Math" text="Math.cos(%angleRadians:Number%):Number" static="true" tiptext="Returns the cosine of the specified angle." version="4" playername="" helpurl="Math:cos"/>
                <string name="exp" object="Math" text="Math.exp(%val:Number%):Number" static="true" tiptext="Returns the value of the base of the natural logarithm (e), to the power of the exponent specified in the parameter val." version="4" playername="" helpurl="Math:exp"/>
                <string name="floor" object="Math" text="Math.floor(%val:Number%):Number" static="true" tiptext="Returns the floor of the number or expression specified in the parameter val." version="4" playername="" helpurl="Math:floor"/>
                <string name="log" object="Math" text="Math.log(%val:Number%):Number" static="true" tiptext="Returns the natural logarithm of parameter val." version="4" playername="" helpurl="Math:log"/>
                <string name="max" object="Math" text="Math.max(%val1:Number,val2:Number,rest:restParam%):Number" static="true" tiptext="Evaluates parameters val1 and val2 and returns the larger value." version="4" playername="" helpurl="Math:max"/>
                <string name="min" object="Math" text="Math.min(%val1:Number,val2:Number,rest:restParam%):Number" static="true" tiptext="Evaluates parameters val1 and val2 and returns the smaller value." version="4" playername="" helpurl="Math:min"/>
                <string name="pow" object="Math" text="Math.pow(%base:Number,pow:Number%):Number" static="true" tiptext="Returns val1 to the power of val2." version="4" playername="" helpurl="Math:pow"/>
                <string name="random" object="Math" text="Math.random(%%):Number" static="true" tiptext="Returns a pseudo-random number n, where 0 &amp;lt;= n &amp;lt; 1." version="4" playername="" helpurl="Math:random"/>
                <string name="round" object="Math" text="Math.round(%val:Number%):Number" static="true" tiptext="Returns the value of parameter val rounded up or down to the nearest integer." version="4" playername="" helpurl="Math:round"/>
                <string name="sin" object="Math" text="Math.sin(%angleRadians:Number%):Number" static="true" tiptext="Returns the sine of the specified angle." version="4" playername="" helpurl="Math:sin"/>
                <string name="sqrt" object="Math" text="Math.sqrt(%val:Number%):Number" static="true" tiptext="Returns the square root of the specified number." version="4" playername="" helpurl="Math:sqrt"/>
                <string name="tan" object="Math" text="Math.tan(%angleRadians:Number%):Number" static="true" tiptext="Returns the tangent of the specified angle." version="4" playername="" helpurl="Math:tan"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class Math" helpurl="globalClassifier:Math">
                <string name="E" object="Math" text="Math.E" constant="true" tiptext="A mathematical constant for the base of natural logarithms, expressed as e." version="" playername="" helpurl="Math:E"/>
                <string name="LN10" object="Math" text="Math.LN10" constant="true" tiptext="A mathematical constant for the natural logarithm of 10, expressed as loge10, with an approximate value of 2.302585092994046." version="" playername="" helpurl="Math:LN10"/>
                <string name="LN2" object="Math" text="Math.LN2" constant="true" tiptext="A mathematical constant for the natural logarithm of 2, expressed as loge2, with an approximate value of 0.6931471805599453." version="" playername="" helpurl="Math:LN2"/>
                <string name="LOG10E" object="Math" text="Math.LOG10E" constant="true" tiptext="A mathematical constant for the base-10 logarithm of the constant e (Math.E), expressed as log10e, with an approximate value of 0.4342944819032518." version="" playername="" helpurl="Math:LOG10E"/>
                <string name="LOG2E" object="Math" text="Math.LOG2E" constant="true" tiptext="A mathematical constant for the base-2 logarithm of the constant e, expressed as log2e, with an approximate value of 1.442695040888963387." version="" playername="" helpurl="Math:LOG2E"/>
                <string name="PI" object="Math" text="Math.PI" constant="true" tiptext="A mathematical constant for the ratio of the circumference of a circle to its diameter, expressed as pi, with a value of 3.141592653589793." version="" playername="" helpurl="Math:PI"/>
                <string name="SQRT1_2" object="Math" text="Math.SQRT1_2" constant="true" tiptext="A mathematical constant for the square root of one-half, with an approximate value of 0.7071067811865476." version="" playername="" helpurl="Math:SQRT1_2"/>
                <string name="SQRT2" object="Math" text="Math.SQRT2" constant="true" tiptext="A mathematical constant for the square root of 2, with an approximate value of 1.4142135623730951." version="" playername="" helpurl="Math:SQRT2"/>
            </folder>
        </folder>
        <folder name="Namespace" id="Namespace" sort="true" index="true" asAncestors="Object" tiptext="The Namespace class contains methods and properties for defining and working with namespaces." helpurl="globalClassifier:Namespace">
            <folder name="Methods" id="Methods" tiptext="Methods for class Namespace" helpurl="globalClassifier:Namespace">
                <string name="Namespace" object="Namespace" text="new Namespace(%prefixValue:*,uriValue:*%)" constructor="true" tiptext="Creates a Namespace object, given the prefixValue and uriValue." version="9" playername="" helpurl="Namespace:Namespace"/>
                <string name="Namespace" object="Namespace" text="new Namespace(%uriValue:*%)" constructor="true" tiptext="Creates a Namespace object, given the uriValue." version="9" playername="" helpurl="Namespace:Namespace"/>
                <string name="toString" object="Namespace" text=".toString(%%):String" tiptext="Equivalent to the Namespace.uri property." version="9" playername="" helpurl="Namespace:AS3:toString"/>
                <string name="valueOf" object="Namespace" text=".valueOf(%%):String" tiptext="Equivalent to the Namespace.uri property." version="9" playername="" helpurl="Namespace:AS3:valueOf"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class Namespace" helpurl="globalClassifier:Namespace">
                <string name="prefix" object="Namespace" text=".prefix" tiptext="The prefix of the namespace." version="" playername="" helpurl="Namespace:prefix:get"/>
                <string name="uri" object="Namespace" text=".uri" tiptext="The Uniform Resource Identifier (URI) of the namespace." version="" playername="" helpurl="Namespace:uri:get"/>
            </folder>
        </folder>
        <folder name="Number" id="Number" sort="true" index="true" asAncestors="Object" tiptext="A data type representing an IEEE-754 double-precision floating-point number." helpurl="globalClassifier:Number">
            <folder name="Methods" id="Methods" tiptext="Methods for class Number" helpurl="globalClassifier:Number">
                <string name="Number" object="Number" text="new Number(%num:Object%)" constructor="true" tiptext="Creates a Number with the specified value." version="4" playername="" helpurl="Number:Number"/>
                <string name="toExponential" object="Number" text=".toExponential(%fractionDigits:uint%):String" tiptext="Returns a string representation of the number in exponential notation." version="4" playername="" helpurl="Number:AS3:toExponential"/>
                <string name="toFixed" object="Number" text=".toFixed(%fractionDigits:uint%):String" tiptext="Returns a string representation of the number in fixed-point notation." version="4" playername="" helpurl="Number:AS3:toFixed"/>
                <string name="toPrecision" object="Number" text=".toPrecision(%precision:uint%):String" tiptext="Returns a string representation of the number either in exponential notation or in fixed-point notation." version="4" playername="" helpurl="Number:AS3:toPrecision"/>
                <string name="toString" object="Number" text=".toString(%[radix:Number=10]%):String" tiptext="Returns the string representation of this Number using the specified radix parameter as the numeric base." version="4" playername="" helpurl="Number:AS3:toString"/>
                <string name="valueOf" object="Number" text=".valueOf(%%):Number" tiptext="Returns the primitive value type of the specified Number object." version="4" playername="" helpurl="Number:AS3:valueOf"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class Number" helpurl="globalClassifier:Number">
                <string name="MAX_VALUE" object="Number" text="Number.MAX_VALUE" constant="true" tiptext="The largest representable number (double-precision IEEE-754)." version="" playername="" helpurl="Number:MAX_VALUE"/>
                <string name="MIN_VALUE" object="Number" text="Number.MIN_VALUE" constant="true" tiptext="The smallest representable non-negative, non-zero, number (double-precision IEEE-754)." version="" playername="" helpurl="Number:MIN_VALUE"/>
                <string name="NEGATIVE_INFINITY" object="Number" text="Number.NEGATIVE_INFINITY" constant="true" tiptext="Specifies the IEEE-754 value representing negative infinity." version="" playername="" helpurl="Number:NEGATIVE_INFINITY"/>
                <string name="NaN" object="Number" text="Number.NaN" constant="true" tiptext="The IEEE-754 value representing Not a Number (NaN)." version="" playername="" helpurl="Number:NaN"/>
                <string name="POSITIVE_INFINITY" object="Number" text="Number.POSITIVE_INFINITY" constant="true" tiptext="Specifies the IEEE-754 value representing positive infinity." version="" playername="" helpurl="Number:POSITIVE_INFINITY"/>
            </folder>
        </folder>
        <folder name="Object" id="Object" sort="true" index="true" tiptext="The Object class is at the root of the ActionScript runtime class hierarchy." helpurl="globalClassifier:Object">
            <folder name="Methods" id="Methods" tiptext="Methods for class Object" helpurl="globalClassifier:Object">
                <string name="Object" object="Object" text="new Object(%%)" constructor="true" tiptext="Creates an Object object and stores a reference to the object&apos;s constructor method in the object&apos;s constructor property." version="4" playername="" helpurl="Object:Object"/>
                <string name="hasOwnProperty" object="Object" text=".hasOwnProperty(%name:String%):Boolean" tiptext="Indicates whether an object has a specified property defined." version="4" playername="" helpurl="Object:AS3:hasOwnProperty"/>
                <string name="isPrototypeOf" object="Object" text=".isPrototypeOf(%theClass:Object%):Boolean" tiptext="Indicates whether an instance of the Object class is in the prototype chain of the object specified as the parameter." version="4" playername="" helpurl="Object:AS3:isPrototypeOf"/>
                <string name="propertyIsEnumerable" object="Object" text=".propertyIsEnumerable(%name:String%):Boolean" tiptext="Indicates whether the specified property exists and is enumerable." version="4" playername="" helpurl="Object:AS3:propertyIsEnumerable"/>
                <string name="setPropertyIsEnumerable" object="Object" text=".setPropertyIsEnumerable(%name:String[,isEnum:Boolean=true]%):void" tiptext="Sets the availability of a dynamic property for loop operations." version="4" playername="" helpurl="Object:setPropertyIsEnumerable"/>
                <string name="toLocaleString" object="Object" text=".toLocaleString(%%):String" tiptext="Returns the string representation of this object, formatted according to locale-specific conventions." version="4" playername="" helpurl="Object:toLocaleString"/>
                <string name="toString" object="Object" text=".toString(%%):String" tiptext="Returns the string representation of the specified object." version="4" playername="" helpurl="Object:toString"/>
                <string name="valueOf" object="Object" text=".valueOf(%%):Object" tiptext="Returns the primitive value of the specified object." version="4" playername="" helpurl="Object:valueOf"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class Object" helpurl="globalClassifier:Object">
                <string name="constructor" object="Object" text=".constructor" tiptext="A reference to the class object or constructor function for a given object instance." version="" playername="" helpurl="Object:constructor"/>
                <string name="prototype" object="Object" text=".prototype" tiptext="A reference to the prototype object of a class or function object." version="" playername="" helpurl="Object:prototype"/>
            </folder>
        </folder>
        <folder name="QName" id="QName" sort="true" index="true" asAncestors="Object" tiptext="QName objects represent qualified names of XML elements and attributes." helpurl="globalClassifier:QName">
            <folder name="Methods" id="Methods" tiptext="Methods for class QName" helpurl="globalClassifier:QName">
                <string name="QName" object="QName" text="new QName(%qname:QName%)" constructor="true" tiptext="Creates a QName object that is a copy of another QName object." version="9" playername="" helpurl="QName:QName"/>
                <string name="QName" object="QName" text="new QName(%uri:Namespace,localName:QName%)" constructor="true" tiptext="Creates a QName object with a URI object from a Namespace object and a localName from a QName object." version="9" playername="" helpurl="QName:QName"/>
                <string name="toString" object="QName" text=".toString(%%):String" tiptext="Returns a string composed of the URI, and the local name for the QName object, separated by &quot;::&quot;." version="9" playername="" helpurl="QName:AS3:toString"/>
                <string name="valueOf" object="QName" text=".valueOf(%%):QName" tiptext="Returns the QName object." version="9" playername="" helpurl="QName:AS3:valueOf"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class QName" helpurl="globalClassifier:QName">
                <string name="localName" object="QName" text=".localName" tiptext="The local name of the QName object." version="" playername="" helpurl="QName:localName:get"/>
                <string name="uri" object="QName" text=".uri" tiptext="The Uniform Resource Identifier (URI) of the QName object." version="" playername="" helpurl="QName:uri:get"/>
            </folder>
        </folder>
        <folder name="RangeError" id="RangeError" sort="true" index="true" asAncestors="Error,Object" tiptext="A RangeError exception is thrown when a numeric value is outside the acceptable range." helpurl="globalClassifier:RangeError">
            <folder name="Methods" id="Methods" tiptext="Methods for class RangeError" helpurl="globalClassifier:RangeError">
                <string name="RangeError" object="RangeError" text="new RangeError(%message:String%)" constructor="true" tiptext="Creates a new RangeError object." version="1.0" playername="" helpurl="RangeError:RangeError"/>
            </folder>
        </folder>
        <folder name="ReferenceError" id="ReferenceError" sort="true" index="true" asAncestors="Error,Object" tiptext="A ReferenceError exception is thrown when a reference to an undefined property is attempted on a sealed (nondynamic) object." helpurl="globalClassifier:ReferenceError">
            <folder name="Methods" id="Methods" tiptext="Methods for class ReferenceError" helpurl="globalClassifier:ReferenceError">
                <string name="ReferenceError" object="ReferenceError" text="new ReferenceError(%message:String%)" constructor="true" tiptext="Creates a new ReferenceError object." version="1.0" playername="" helpurl="ReferenceError:ReferenceError"/>
            </folder>
        </folder>
        <folder name="RegExp" id="RegExp" sort="true" index="true" asAncestors="Object" tiptext="The RegExp class lets you work with regular expressions, which are patterns that you can use to perform searches in strings and to replace text in strings." helpurl="globalClassifier:RegExp">
            <folder name="Methods" id="Methods" tiptext="Methods for class RegExp" helpurl="globalClassifier:RegExp">
                <string name="RegExp" object="RegExp" text="new RegExp(%re:String,flags:String%)" constructor="true" tiptext="Lets you construct a regular expression from two strings." version="9" playername="" helpurl="RegExp:RegExp"/>
                <string name="exec" object="RegExp" text=".exec(%str:String%):Object" tiptext="Performs a search for the regular expression on the given string str." version="4" playername="" helpurl="RegExp:AS3:exec"/>
                <string name="test" object="RegExp" text=".test(%str:String%):Boolean" tiptext="Tests for the match of the regular expression in the given string str." version="4" playername="" helpurl="RegExp:AS3:test"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class RegExp" helpurl="globalClassifier:RegExp">
                <string name="dotall" object="RegExp" text=".dotall" tiptext="Specifies whether the dot character (.) in a regular expression pattern matches new-line characters." version="" playername="" helpurl="RegExp:dotall:get"/>
                <string name="extended" object="RegExp" text=".extended" tiptext="Specifies whether to use extended mode for the regular expression." version="" playername="" helpurl="RegExp:extended:get"/>
                <string name="global" object="RegExp" text=".global" tiptext="Specifies whether to use global matching for the regular expression." version="" playername="" helpurl="RegExp:global:get"/>
                <string name="ignoreCase" object="RegExp" text=".ignoreCase" tiptext="Specifies whether the regular expression ignores case sensitivity." version="" playername="" helpurl="RegExp:ignoreCase:get"/>
                <string name="lastIndex" object="RegExp" text=".lastIndex" tiptext="Specifies the index position in the string at which to start the next search." version="" playername="" helpurl="RegExp:lastIndex:get"/>
                <string name="multiline" object="RegExp" text=".multiline" tiptext="Specifies whether the m (multiline) flag is set." version="" playername="" helpurl="RegExp:multiline:get"/>
                <string name="source" object="RegExp" text=".source" tiptext="Specifies the pattern portion of the regular expression." version="" playername="" helpurl="RegExp:source:get"/>
            </folder>
        </folder>
        <folder name="SecurityError" id="SecurityError" sort="true" index="true" asAncestors="Error,Object" tiptext="The SecurityError exception is thrown when some type of security violation takes place." helpurl="globalClassifier:SecurityError">
            <folder name="Methods" id="Methods" tiptext="Methods for class SecurityError" helpurl="globalClassifier:SecurityError">
                <string name="SecurityError" object="SecurityError" text="new SecurityError(%message:String%)" constructor="true" tiptext="Creates a new SecurityError object." version="1.0" playername="" helpurl="SecurityError:SecurityError"/>
            </folder>
        </folder>
        <folder name="String" id="String" sort="true" index="true" asAncestors="Object" tiptext="The String class is a data type that represents a string of characters." helpurl="globalClassifier:String">
            <folder name="Methods" id="Methods" tiptext="Methods for class String" helpurl="globalClassifier:String">
                <string name="String" object="String" text="new String(%val:String%)" constructor="true" tiptext="Creates a new String object initialized to the specified string." version="4" playername="" helpurl="String:String"/>
                <string name="charAt" object="String" text=".charAt(%[index:Number=0]%):String" tiptext="Returns the character in the position specified by the index parameter." version="4" playername="" helpurl="String:AS3:charAt"/>
                <string name="charCodeAt" object="String" text=".charCodeAt(%[index:Number=0]%):Number" tiptext="Returns the numeric Unicode character code of the character at the specified index." version="4" playername="" helpurl="String:AS3:charCodeAt"/>
                <string name="concat" object="String" text=".concat(%args:restParam%):String" tiptext="Appends the supplied arguments to the end of the String object, converting them to strings if necessary, and returns the resulting string." version="4" playername="" helpurl="String:AS3:concat"/>
                <string name="fromCharCode" object="String" text="String.fromCharCode(%charCodes:restParam%):String" static="true" tiptext="Returns a string comprising the characters represented by the Unicode character codes in the parameters." version="4" playername="" helpurl="String:AS3:fromCharCode"/>
                <string name="indexOf" object="String" text=".indexOf(%val:String[,startIndex:Number=0]%):int" tiptext="Searches the string and returns the position of the first occurrence of val found at or after startIndex within the calling string." version="4" playername="" helpurl="String:AS3:indexOf"/>
                <string name="lastIndexOf" object="String" text=".lastIndexOf(%val:String[,startIndex:Number=0x7FFFFFFF]%):int" tiptext="Searches the string from right to left and returns the index of the last occurrence of val found before startIndex." version="4" playername="" helpurl="String:AS3:lastIndexOf"/>
                <string name="localeCompare" object="String" text=".localeCompare(%other:String,values:restParam%):int" tiptext="Compares the sort order of two or more strings and returns the result of the comparison as an integer." version="1.0" playername="" helpurl="String:AS3:localeCompare"/>
                <string name="match" object="String" text=".match(%pattern:*%):Array" tiptext="Matches the specifed pattern against the string." version="1.0" playername="" helpurl="String:AS3:match"/>
                <string name="replace" object="String" text=".replace(%pattern:*,repl:Object%):String" tiptext="Matches the specifed pattern against the string and returns a new string in which the first match of pattern is replaced with the content specified by repl." version="1.0" playername="" helpurl="String:AS3:replace"/>
                <string name="search" object="String" text=".search(%pattern:*%):int" tiptext="Searches for the specifed pattern and returns the index of the first matching substring." version="1.0" playername="" helpurl="String:AS3:search"/>
                <string name="slice" object="String" text=".slice(%[startIndex:Number=0,endIndex:Number=0x7fffffff]%):String" tiptext="Returns a string that includes the startIndex character and all characters up to, but not including, the endIndex character." version="1.0" playername="" helpurl="String:AS3:slice"/>
                <string name="split" object="String" text=".split(%delimiter:*[,limit:Number=0x7fffffff]%):Array" tiptext="Splits a String object into an array of substrings by dividing it wherever the specified delimiter parameter occurs." version="1.0" playername="" helpurl="String:AS3:split"/>
                <string name="substr" object="String" text=".substr(%[startIndex:Number=0,len:Number=0x7fffffff]%):String" tiptext="Returns a substring consisting of the characters that start at the specified  startIndex and with a length specified by len." version="1.0" playername="" helpurl="String:AS3:substr"/>
                <string name="substring" object="String" text=".substring(%[startIndex:Number=0,endIndex:Number=0x7fffffff]%):String" tiptext="Returns a string consisting of the character specified by startIndex and all characters up to endIndex - 1." version="1.0" playername="" helpurl="String:AS3:substring"/>
                <string name="toLocaleLowerCase" object="String" text=".toLocaleLowerCase(%%):String" tiptext="Returns a copy of this string, with all uppercase characters converted to lowercase." version="1.0" playername="" helpurl="String:AS3:toLocaleLowerCase"/>
                <string name="toLocaleUpperCase" object="String" text=".toLocaleUpperCase(%%):String" tiptext="Returns a copy of this string, with all lowercase characters converted to uppercase." version="1.0" playername="" helpurl="String:AS3:toLocaleUpperCase"/>
                <string name="toLowerCase" object="String" text=".toLowerCase(%%):String" tiptext="Returns a copy of this string, with all uppercase characters converted to lowercase." version="1.0" playername="" helpurl="String:AS3:toLowerCase"/>
                <string name="toUpperCase" object="String" text=".toUpperCase(%%):String" tiptext="Returns a copy of this string, with all lowercase characters converted to uppercase." version="1.0" playername="" helpurl="String:AS3:toUpperCase"/>
                <string name="valueOf" object="String" text=".valueOf(%%):String" tiptext="Returns the primitive value of a String instance." version="1.0" playername="" helpurl="String:AS3:valueOf"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class String" helpurl="globalClassifier:String">
                <string name="length" object="String" text=".length" tiptext="An integer specifying the number of characters in the specified String object." version="" playername="" helpurl="String:length:get"/>
            </folder>
        </folder>
        <folder name="SyntaxError" id="SyntaxError" sort="true" index="true" asAncestors="Error,Object" tiptext="A SyntaxError exception is thrown when a parsing error occurs, for one of the following reasons:." helpurl="globalClassifier:SyntaxError">
            <folder name="Methods" id="Methods" tiptext="Methods for class SyntaxError" helpurl="globalClassifier:SyntaxError">
                <string name="SyntaxError" object="SyntaxError" text="new SyntaxError(%message:String%)" constructor="true" tiptext="Creates a new SyntaxError object." version="1.0" playername="" helpurl="SyntaxError:SyntaxError"/>
            </folder>
        </folder>
        <folder name="TypeError" id="TypeError" sort="true" index="true" asAncestors="Error,Object" tiptext="A TypeError exception is thrown when the actual type of an operand is different from the expected type." helpurl="globalClassifier:TypeError">
            <folder name="Methods" id="Methods" tiptext="Methods for class TypeError" helpurl="globalClassifier:TypeError">
                <string name="TypeError" object="TypeError" text="new TypeError(%message:String%)" constructor="true" tiptext="Creates a new TypeError object." version="1.0" playername="" helpurl="TypeError:TypeError"/>
            </folder>
        </folder>
        <folder name="uint" id="uint" sort="true" index="true" asAncestors="Object" tiptext="The uint class provides methods for working with a data type representing a 32-bit unsigned integer." helpurl="globalClassifier:uint">
            <folder name="Methods" id="Methods" tiptext="Methods for class uint" helpurl="globalClassifier:uint">
                <string name="uint" object="uint" text="new uint(%num:Object%)" constructor="true" tiptext="Creates a new uint object." version="4" playername="" helpurl="uint:uint"/>
                <string name="toExponential" object="uint" text=".toExponential(%fractionDigits:uint%):String" tiptext="Returns a string representation of the number in exponential notation." version="4" playername="" helpurl="uint:AS3:toExponential"/>
                <string name="toFixed" object="uint" text=".toFixed(%fractionDigits:uint%):String" tiptext="Returns a string representation of the number in fixed-point notation." version="4" playername="" helpurl="uint:AS3:toFixed"/>
                <string name="toPrecision" object="uint" text=".toPrecision(%precision:uint%):String" tiptext="Returns a string representation of the number either in exponential notation or in fixed-point notation." version="4" playername="" helpurl="uint:AS3:toPrecision"/>
                <string name="toString" object="uint" text=".toString(%radix:uint%):String" tiptext="Returns the string representation of a uint object." version="4" playername="" helpurl="uint:AS3:toString"/>
                <string name="valueOf" object="uint" text=".valueOf(%%):uint" tiptext="Returns the primitive uint type value of the specified uint object." version="4" playername="" helpurl="uint:AS3:valueOf"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class uint" helpurl="globalClassifier:uint">
                <string name="MAX_VALUE" object="uint" text="uint.MAX_VALUE" constant="true" tiptext="The largest representable 32-bit unsigned integer, which is 4,294,967,295." version="" playername="" helpurl="uint:MAX_VALUE"/>
                <string name="MIN_VALUE" object="uint" text="uint.MIN_VALUE" constant="true" tiptext="The smallest representable unsigned integer, which is 0." version="" playername="" helpurl="uint:MIN_VALUE"/>
            </folder>
        </folder>
        <folder name="URIError" id="URIError" sort="true" index="true" asAncestors="Error,Object" tiptext="A URIError exception is thrown when one of the global URI handling functions is used in a way that is incompatible with its definition." helpurl="globalClassifier:URIError">
            <folder name="Methods" id="Methods" tiptext="Methods for class URIError" helpurl="globalClassifier:URIError">
                <string name="URIError" object="URIError" text="new URIError(%message:String%)" constructor="true" tiptext="Creates a new URIError object." version="1.0" playername="" helpurl="URIError:URIError"/>
            </folder>
        </folder>
        <folder name="Vector" id="Vector" sort="true" index="true" asAncestors="Object" tiptext="The Vector class lets you access and manipulate a vector &amp;#8212; an array whose elements all have the same data type." helpurl="globalClassifier:Vector">
            <folder name="Methods" id="Methods" tiptext="Methods for class Vector" helpurl="globalClassifier:Vector">
                <string name="Vector" object="Vector" text="new Vector(%[length:uint=0,fixed:Boolean=false]%)" constructor="true" tiptext="Creates a Vector with the specified base type." version="4" playername="" helpurl="Vector:Vector"/>
                <string name="concat" object="Vector" text=".concat(%args:restParam%):Vector$T" tiptext="Concatenates the elements specified in the parameters." version="4" playername="" helpurl="Vector:AS3:concat"/>
                <string name="every" object="Vector" text=".every(%callback:Function[,thisObject:Object=null]%):Boolean" tiptext="Executes a test function on each item in the Vector until an item is reached that returns false for the specified function." version="4" playername="" helpurl="Vector:AS3:every"/>
                <string name="filter" object="Vector" text=".filter(%callback:Function[,thisObject:Object=null]%):Vector$T" tiptext="Executes a test function on each item in the Vector and returns a new Vector containing all items that return true for the specified function." version="4" playername="" helpurl="Vector:AS3:filter"/>
                <string name="forEach" object="Vector" text=".forEach(%callback:Function[,thisObject:Object=null]%):void" tiptext="Executes a function on each item in the Vector." version="4" playername="" helpurl="Vector:AS3:forEach"/>
                <string name="indexOf" object="Vector" text=".indexOf(%searchElement:T[,fromIndex:int=0]%):int" tiptext="Searches for an item in the Vector and returns the index position of the item." version="4" playername="" helpurl="Vector:AS3:indexOf"/>
                <string name="join" object="Vector" text=".join(%[sep:String=,]%):String" tiptext="Converts the elements in the Vector to strings." version="4" playername="" helpurl="Vector:AS3:join"/>
                <string name="lastIndexOf" object="Vector" text=".lastIndexOf(%searchElement:T[,fromIndex:int=0x7fffffff]%):int" tiptext="Searches for an item in the Vector, working backward from the specified index position, and returns the index position of the matching item." version="4" playername="" helpurl="Vector:AS3:lastIndexOf"/>
                <string name="map" object="Vector" text=".map(%callback:Function[,thisObject:Object=null]%):Vector$T" tiptext="Executes a function on each item in the Vector, and returns a new Vector of items corresponding to the results of calling the function on each item in this Vector." version="4" playername="" helpurl="Vector:AS3:map"/>
                <string name="pop" object="Vector" text=".pop(%%):T" tiptext="Removes the last element from the Vector and returns that element." version="4" playername="" helpurl="Vector:AS3:pop"/>
                <string name="push" object="Vector" text=".push(%args:restParam%):uint" tiptext="Adds one or more elements to the end of the Vector and returns the new length of the Vector." version="4" playername="" helpurl="Vector:AS3:push"/>
                <string name="reverse" object="Vector" text=".reverse(%%):Vector$T" tiptext="Reverses the order of the elements in the Vector." version="4" playername="" helpurl="Vector:AS3:reverse"/>
                <string name="shift" object="Vector" text=".shift(%%):T" tiptext="Removes the first element from the Vector and returns that element." version="4" playername="" helpurl="Vector:AS3:shift"/>
                <string name="slice" object="Vector" text=".slice(%[startIndex:int=0,endIndex:int=16777215]%):Vector$T" tiptext="Returns a new Vector that consists of a range of elements from the original Vector." version="4" playername="" helpurl="Vector:AS3:slice"/>
                <string name="some" object="Vector" text=".some(%callback:Function[,thisObject:Object=null]%):Boolean" tiptext="Executes a test function on each item in the Vector until an item is reached that returns true." version="4" playername="" helpurl="Vector:AS3:some"/>
                <string name="sort" object="Vector" text=".sort(%compareFunction:Function%):Vector$T" tiptext="Sorts the elements in the Vector." version="4" playername="" helpurl="Vector:AS3:sort"/>
                <string name="splice" object="Vector" text=".splice(%startIndex:int[,deleteCount:uint=4294967295,items:restParam]%):Vector$T" tiptext="Adds elements to and removes elements from the Vector." version="4" playername="" helpurl="Vector:AS3:splice"/>
                <string name="toLocaleString" object="Vector" text=".toLocaleString(%%):String" tiptext="Returns a string that represents the elements in the specified Vector." version="4" playername="" helpurl="Vector:toLocaleString"/>
                <string name="toString" object="Vector" text=".toString(%%):String" tiptext="Returns a string that represents the elements in the Vector." version="4" playername="" helpurl="Vector:toString"/>
                <string name="unshift" object="Vector" text=".unshift(%args:restParam%):uint" tiptext="Adds one or more elements to the beginning of the Vector and returns the new length of the Vector." version="4" playername="" helpurl="Vector:AS3:unshift"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class Vector" helpurl="globalClassifier:Vector">
                <string name="fixed" object="Vector" text=".fixed" tiptext="Indicates whether the length property of the Vector can be changed." version="" playername="" helpurl="Vector:fixed:get"/>
                <string name="length" object="Vector" text=".length" tiptext="The range of valid indices available in the Vector." version="" playername="" helpurl="Vector:length:get"/>
            </folder>
        </folder>
        <folder name="VerifyError" id="VerifyError" sort="true" index="true" asAncestors="Error,Object" tiptext="The VerifyError class represents an error that occurs when a malformed or corrupted SWF file is encountered." helpurl="globalClassifier:VerifyError">
            <folder name="Methods" id="Methods" tiptext="Methods for class VerifyError" helpurl="globalClassifier:VerifyError">
                <string name="VerifyError" object="VerifyError" text="new VerifyError(%message:String%)" constructor="true" tiptext="Creates a new VerifyError object." version="1.0" playername="" helpurl="VerifyError:VerifyError"/>
            </folder>
        </folder>
        <folder name="XML" id="XML" sort="true" index="true" asAncestors="Object" tiptext="The XML class contains methods and properties for working with XML objects." helpurl="globalClassifier:XML">
            <folder name="Methods" id="Methods" tiptext="Methods for class XML" helpurl="globalClassifier:XML">
                <string name="XML" object="XML" text="new XML(%value:Object%)" constructor="true" tiptext="Creates a new XML object." version="9" playername="" helpurl="XML:XML"/>
                <string name="addNamespace" object="XML" text=".addNamespace(%ns:Object%):XML" tiptext="Adds a namespace to the set of in-scope namespaces for the XML object." version="9" playername="" helpurl="XML:AS3:addNamespace"/>
                <string name="appendChild" object="XML" text=".appendChild(%child:Object%):XML" tiptext="Appends the given child to the end of the XML object&apos;s properties." version="9" playername="" helpurl="XML:AS3:appendChild"/>
                <string name="attribute" object="XML" text=".attribute(%attributeName:*%):XMLList" tiptext="Returns the XML value of the attribute that has the name matching the attributeName parameter." version="9" playername="" helpurl="XML:AS3:attribute"/>
                <string name="attributes" object="XML" text=".attributes(%%):XMLList" tiptext="Returns a list of attribute values for the given XML object." version="9" playername="" helpurl="XML:AS3:attributes"/>
                <string name="childIndex" object="XML" text=".childIndex(%%):int" tiptext="Identifies the zero-indexed position of this XML object within the context of its parent." version="9" playername="" helpurl="XML:AS3:childIndex"/>
                <string name="child" object="XML" text=".child(%propertyName:Object%):XMLList" tiptext="Lists the children of an XML object." version="9" playername="" helpurl="XML:AS3:child"/>
                <string name="children" object="XML" text=".children(%%):XMLList" tiptext="Lists the children of the XML object in the sequence in which they appear." version="9" playername="" helpurl="XML:AS3:children"/>
                <string name="comments" object="XML" text=".comments(%%):XMLList" tiptext="Lists the properties of the XML object that contain XML comments." version="9" playername="" helpurl="XML:AS3:comments"/>
                <string name="contains" object="XML" text=".contains(%value:XML%):Boolean" tiptext="Compares the XML object against the given value parameter." version="9" playername="" helpurl="XML:AS3:contains"/>
                <string name="copy" object="XML" text=".copy(%%):XML" tiptext="Returns a copy of the given XML object." version="9" playername="" helpurl="XML:AS3:copy"/>
                <string name="defaultSettings" object="XML" text="XML.defaultSettings(%%):Object" static="true" tiptext="Returns an object with the following properties set to the default values: ignoreComments, ignoreProcessingInstructions, ignoreWhitespace, prettyIndent, and prettyPrinting." version="9" playername="" helpurl="XML:AS3:defaultSettings"/>
                <string name="descendants" object="XML" text=".descendants(%[name:Object=*]%):XMLList" tiptext="Returns all descendants (children, grandchildren, great-grandchildren, and so on) of the XML object that have the given name parameter." version="9" playername="" helpurl="XML:AS3:descendants"/>
                <string name="elements" object="XML" text=".elements(%[name:Object=*]%):XMLList" tiptext="Lists the elements of an XML object." version="9" playername="" helpurl="XML:AS3:elements"/>
                <string name="hasComplexContent" object="XML" text=".hasComplexContent(%%):Boolean" tiptext="Checks to see whether the XML object contains complex content." version="9" playername="" helpurl="XML:AS3:hasComplexContent"/>
                <string name="hasOwnProperty" object="XML" text=".hasOwnProperty(%p:String%):Boolean" tiptext="Checks to see whether the object has the property specified by the p parameter." version="9" playername="" helpurl="XML:AS3:hasOwnProperty"/>
                <string name="hasSimpleContent" object="XML" text=".hasSimpleContent(%%):Boolean" tiptext="Checks to see whether the XML object contains simple content." version="9" playername="" helpurl="XML:AS3:hasSimpleContent"/>
                <string name="inScopeNamespaces" object="XML" text=".inScopeNamespaces(%%):Array" tiptext="Lists the namespaces for the XML object, based on the object&apos;s parent." version="9" playername="" helpurl="XML:AS3:inScopeNamespaces"/>
                <string name="insertChildAfter" object="XML" text=".insertChildAfter(%child1:Object,child2:Object%)" tiptext="Inserts the given child2 parameter after the child1 parameter in this XML object and returns the resulting object." version="9" playername="" helpurl="XML:AS3:insertChildAfter"/>
                <string name="insertChildBefore" object="XML" text=".insertChildBefore(%child1:Object,child2:Object%)" tiptext="Inserts the given child2 parameter before the child1 parameter in this XML object and returns the resulting object." version="9" playername="" helpurl="XML:AS3:insertChildBefore"/>
                <string name="length" object="XML" text=".length(%%):int" tiptext="For XML objects, this method always returns the integer 1." version="9" playername="" helpurl="XML:AS3:length"/>
                <string name="localName" object="XML" text=".localName(%%):Object" tiptext="Gives the local name portion of the qualified name of the XML object." version="9" playername="" helpurl="XML:AS3:localName"/>
                <string name="name" object="XML" text=".name(%%):Object" tiptext="Gives the qualified name for the XML object." version="9" playername="" helpurl="XML:AS3:name"/>
                <string name="namespaceDeclarations" object="XML" text=".namespaceDeclarations(%%):Array" tiptext="Lists namespace declarations associated with the XML object in the context of its parent." version="9" playername="" helpurl="XML:AS3:namespaceDeclarations"/>
                <string name="namespace" object="XML" text=".namespace(%[prefix:String=null]%)" tiptext="If no parameter is provided, gives the namespace associated with the qualified name of this XML object." version="9" playername="" helpurl="XML:AS3:namespace"/>
                <string name="nodeKind" object="XML" text=".nodeKind(%%):String" tiptext="Specifies the type of node: text, comment, processing-instruction, attribute, or element." version="9" playername="" helpurl="XML:AS3:nodeKind"/>
                <string name="normalize" object="XML" text=".normalize(%%):XML" tiptext="For the XML object and all descendant XML objects, merges adjacent text nodes and eliminates empty text nodes." version="9" playername="" helpurl="XML:AS3:normalize"/>
                <string name="parent" object="XML" text=".parent(%%)" tiptext="Returns the parent of the XML object." version="9" playername="" helpurl="XML:AS3:parent"/>
                <string name="prependChild" object="XML" text=".prependChild(%value:Object%):XML" tiptext="Inserts a copy of the provided child object into the XML element before any existing XML properties for that element." version="9" playername="" helpurl="XML:AS3:prependChild"/>
                <string name="processingInstructions" object="XML" text=".processingInstructions(%[name:String=*]%):XMLList" tiptext="If a name parameter is provided, lists all the children of the XML object that contain processing instructions with that name." version="9" playername="" helpurl="XML:AS3:processingInstructions"/>
                <string name="propertyIsEnumerable" object="XML" text=".propertyIsEnumerable(%p:String%):Boolean" tiptext="Checks whether the property p is in the set of properties that can be iterated in a for..in statement applied to the XML object." version="9" playername="" helpurl="XML:AS3:propertyIsEnumerable"/>
                <string name="removeNamespace" object="XML" text=".removeNamespace(%ns:Namespace%):XML" tiptext="Removes the given namespace for this object and all descendants." version="9" playername="" helpurl="XML:AS3:removeNamespace"/>
                <string name="replace" object="XML" text=".replace(%propertyName:Object,value:XML%):XML" tiptext="Replaces the properties specified by the propertyName parameter with the given value parameter." version="9" playername="" helpurl="XML:AS3:replace"/>
                <string name="setChildren" object="XML" text=".setChildren(%value:Object%):XML" tiptext="Replaces the child properties of the XML object with the specified set of XML properties, provided in the value parameter." version="9" playername="" helpurl="XML:AS3:setChildren"/>
                <string name="setLocalName" object="XML" text=".setLocalName(%name:String%):void" tiptext="Changes the local name of the XML object to the given name parameter." version="9" playername="" helpurl="XML:AS3:setLocalName"/>
                <string name="setName" object="XML" text=".setName(%name:String%):void" tiptext="Sets the name of the XML object to the given qualified name or attribute name." version="9" playername="" helpurl="XML:AS3:setName"/>
                <string name="setNamespace" object="XML" text=".setNamespace(%ns:Namespace%):void" tiptext="Sets the namespace associated with the XML object." version="9" playername="" helpurl="XML:AS3:setNamespace"/>
                <string name="setSettings" object="XML" text="XML.setSettings(%rest:restParam%):void" static="true" tiptext="Sets values for the following XML properties: ignoreComments, ignoreProcessingInstructions, ignoreWhitespace, prettyIndent, and prettyPrinting." version="9" playername="" helpurl="XML:AS3:setSettings"/>
                <string name="settings" object="XML" text="XML.settings(%%):Object" static="true" tiptext="Retrieves the following properties: ignoreComments, ignoreProcessingInstructions, ignoreWhitespace, prettyIndent, and prettyPrinting." version="9" playername="" helpurl="XML:AS3:settings"/>
                <string name="text" object="XML" text=".text(%%):XMLList" tiptext="Returns an XMLList object of all XML properties of the XML object that represent XML text nodes." version="9" playername="" helpurl="XML:AS3:text"/>
                <string name="toString" object="XML" text=".toString(%%):String" tiptext="Returns a string representation of the XML object." version="9" playername="" helpurl="XML:AS3:toString"/>
                <string name="toXMLString" object="XML" text=".toXMLString(%%):String" tiptext="Returns a string representation of the XML object." version="9" playername="" helpurl="XML:AS3:toXMLString"/>
                <string name="valueOf" object="XML" text=".valueOf(%%):XML" tiptext="Returns the XML object." version="9" playername="" helpurl="XML:AS3:valueOf"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class XML" helpurl="globalClassifier:XML">
                <string name="ignoreComments" object="XML" text=".ignoreComments" tiptext="Determines whether XML comments are ignored when XML objects parse the source XML data." version="" playername="" helpurl="XML:ignoreComments:get"/>
                <string name="ignoreProcessingInstructions" object="XML" text=".ignoreProcessingInstructions" tiptext="Determines whether XML processing instructions are ignored when XML objects parse the source XML data." version="" playername="" helpurl="XML:ignoreProcessingInstructions:get"/>
                <string name="ignoreWhitespace" object="XML" text=".ignoreWhitespace" tiptext="Determines whether white space characters at the beginning and end of text nodes are ignored during parsing." version="" playername="" helpurl="XML:ignoreWhitespace:get"/>
                <string name="prettyIndent" object="XML" text=".prettyIndent" tiptext="Determines the amount of indentation applied by the toString() and toXMLString() methods when the XML.prettyPrinting property is set to true." version="" playername="" helpurl="XML:prettyIndent:get"/>
                <string name="prettyPrinting" object="XML" text=".prettyPrinting" tiptext="Determines whether the toString() and toXMLString() methods normalize white space characters between some tags." version="" playername="" helpurl="XML:prettyPrinting:get"/>
            </folder>
        </folder>
        <folder name="XMLList" id="XMLList" sort="true" index="true" asAncestors="Object" tiptext="The XMLList class contains methods for working with one or more XML elements." helpurl="globalClassifier:XMLList">
            <folder name="Methods" id="Methods" tiptext="Methods for class XMLList" helpurl="globalClassifier:XMLList">
                <string name="XMLList" object="XMLList" text="new XMLList(%value:Object%)" constructor="true" tiptext="Creates a new XMLList object." version="9" playername="" helpurl="XMLList:XMLList"/>
                <string name="attribute" object="XMLList" text=".attribute(%attributeName:*%):XMLList" tiptext="Calls the attribute() method of each XML object and returns an XMLList object of the results." version="9" playername="" helpurl="XMLList:AS3:attribute"/>
                <string name="attributes" object="XMLList" text=".attributes(%%):XMLList" tiptext="Calls the attributes() method of each XML object and returns an XMLList object of attributes for each XML object." version="9" playername="" helpurl="XMLList:AS3:attributes"/>
                <string name="child" object="XMLList" text=".child(%propertyName:Object%):XMLList" tiptext="Calls the child() method of each XML object and returns an XMLList object thatcontains the results in order." version="9" playername="" helpurl="XMLList:AS3:child"/>
                <string name="children" object="XMLList" text=".children(%%):XMLList" tiptext="Calls the children() method of each XML object and returns an XMLList object that contains the results." version="9" playername="" helpurl="XMLList:AS3:children"/>
                <string name="comments" object="XMLList" text=".comments(%%):XMLList" tiptext="Calls the comments() method of each XML object and returns an XMLList of comments." version="9" playername="" helpurl="XMLList:AS3:comments"/>
                <string name="contains" object="XMLList" text=".contains(%value:XML%):Boolean" tiptext="Checks whether the XMLList object contains an XML object that is equal to the given value parameter." version="9" playername="" helpurl="XMLList:AS3:contains"/>
                <string name="copy" object="XMLList" text=".copy(%%):XMLList" tiptext="Returns a copy of the given XMLList object." version="9" playername="" helpurl="XMLList:AS3:copy"/>
                <string name="descendants" object="XMLList" text=".descendants(%[name:Object=*]%):XMLList" tiptext="Returns all descendants (children, grandchildren, great-grandchildren, and so on) of the XML object that have the given name parameter." version="9" playername="" helpurl="XMLList:AS3:descendants"/>
                <string name="elements" object="XMLList" text=".elements(%[name:Object=*]%):XMLList" tiptext="Calls the elements() method of each XML object." version="9" playername="" helpurl="XMLList:AS3:elements"/>
                <string name="hasComplexContent" object="XMLList" text=".hasComplexContent(%%):Boolean" tiptext="Checks whether the XMLList object contains complex content." version="9" playername="" helpurl="XMLList:AS3:hasComplexContent"/>
                <string name="hasOwnProperty" object="XMLList" text=".hasOwnProperty(%p:String%):Boolean" tiptext="Checks for the property specified by p." version="9" playername="" helpurl="XMLList:AS3:hasOwnProperty"/>
                <string name="hasSimpleContent" object="XMLList" text=".hasSimpleContent(%%):Boolean" tiptext="Checks whether the XMLList object contains simple content." version="9" playername="" helpurl="XMLList:AS3:hasSimpleContent"/>
                <string name="length" object="XMLList" text=".length(%%):int" tiptext="Returns the number of properties in the XMLList object." version="9" playername="" helpurl="XMLList:AS3:length"/>
                <string name="normalize" object="XMLList" text=".normalize(%%):XMLList" tiptext="Merges adjacent text nodes and eliminates empty text nodes for each of the following: all text nodes in the XMLList, all the XML objects contained in the XMLList, and the descendants of all the XML objects in the XMLList." version="9" playername="" helpurl="XMLList:AS3:normalize"/>
                <string name="parent" object="XMLList" text=".parent(%%):Object" tiptext="Returns the parent of the XMLList object if all items in the XMLList object have the same parent." version="9" playername="" helpurl="XMLList:AS3:parent"/>
                <string name="processingInstructions" object="XMLList" text=".processingInstructions(%[name:String=*]%):XMLList" tiptext="If a name parameter is provided, lists all the children of the XMLList object that contain processing instructions with that name." version="9" playername="" helpurl="XMLList:AS3:processingInstructions"/>
                <string name="propertyIsEnumerable" object="XMLList" text=".propertyIsEnumerable(%p:String%):Boolean" tiptext="Checks whether the property p is in the set of properties that can be iterated in a for..in statement applied to the XMLList object." version="9" playername="" helpurl="XMLList:AS3:propertyIsEnumerable"/>
                <string name="text" object="XMLList" text=".text(%%):XMLList" tiptext="Calls the text() method of each XML object and returns an XMLList object that contains the results." version="9" playername="" helpurl="XMLList:AS3:text"/>
                <string name="toString" object="XMLList" text=".toString(%%):String" tiptext="Returns a string representation of all the XML objects in an XMLList object." version="9" playername="" helpurl="XMLList:AS3:toString"/>
                <string name="toXMLString" object="XMLList" text=".toXMLString(%%):String" tiptext="Returns a string representation of all the XML objects in an XMLList object." version="9" playername="" helpurl="XMLList:AS3:toXMLString"/>
                <string name="valueOf" object="XMLList" text=".valueOf(%%):XMLList" tiptext="Returns the XMLList object." version="9" playername="" helpurl="XMLList:AS3:valueOf"/>
            </folder>
        </folder>
    </folder>
        <folder name="Language Elements" id="Language Elements" sort="true" index="true" tiptext="Language elements that perform or specify an action at runtime">
            <folder name="Global Functions" id="Global Functions" tiptext="Methods available in every script" helpurl="globalClassifier:methodSummary">
                <string name="Array" text="Array(%args:restParam%):Array" tiptext="Creates a new array." version="4" playername="" helpurl="globalClassifier:Array"/>
                <string name="Boolean" text="Boolean(%expression:Object%):Boolean" tiptext="Converts the expression parameter to a Boolean value and returns the value." version="4" playername="" helpurl="globalClassifier:Boolean"/>
                <string name="Number" text="Number(%expression:Object%):Number" tiptext="Converts a given value to a Number value." version="4" playername="" helpurl="globalClassifier:Number"/>
                <string name="Object" text="Object(%value:Object%):Object" tiptext="Every value in ActionScript 3.0 is an object, which means that calling Object() on a value returns that value." version="4" playername="" helpurl="globalClassifier:Object"/>
                <string name="String" text="String(%expression:Object%):String" tiptext="Returns a string representation of the specified parameter." version="4" playername="" helpurl="globalClassifier:String"/>
                <string name="Vector" text="Vector(%sourceArray:Object%):Vector$T" tiptext="Creates a new Vector instance whose elements are instances of the specified data type." version="4" playername="" helpurl="globalClassifier:Vector"/>
                <string name="XMLList" text="XMLList(%expression:Object%):XMLList" tiptext="Converts an object to an XMLList object." version="4" playername="" helpurl="globalClassifier:XMLList"/>
                <string name="XML" text="XML(%expression:Object%):XML" tiptext="Converts an object to an XML object." version="4" playername="" helpurl="globalClassifier:XML"/>
                <string name="decodeURIComponent" text="decodeURIComponent(%uri:String%):String" tiptext="Decodes an encoded URI component into a string." version="4" playername="" helpurl="globalClassifier:decodeURIComponent"/>
                <string name="decodeURI" text="decodeURI(%uri:String%):String" tiptext="Decodes an encoded URI into a string." version="4" playername="" helpurl="globalClassifier:decodeURI"/>
                <string name="encodeURIComponent" text="encodeURIComponent(%uri:String%):String" tiptext="Encodes a string into a valid URI component." version="4" playername="" helpurl="globalClassifier:encodeURIComponent"/>
                <string name="encodeURI" text="encodeURI(%uri:String%):String" tiptext="Encodes a string into a valid URI (Uniform Resource Identifier)." version="4" playername="" helpurl="globalClassifier:encodeURI"/>
                <string name="escape" text="escape(%str:String%):String" tiptext="Converts the parameter to a string and encodes it in a URL-encoded format, where most nonalphanumeric characters are replaced with % hexadecimal sequences." version="4" playername="" helpurl="globalClassifier:escape"/>
                <string name="int" text="int(%value:Number%):int" tiptext="Converts a given numeric value to an integer value." version="4" playername="" helpurl="globalClassifier:int"/>
                <string name="isFinite" text="isFinite(%num:Number%):Boolean" tiptext="Returns true if the value is a finite number, or false if the value is Infinity or -Infinity." version="4" playername="" helpurl="globalClassifier:isFinite"/>
                <string name="isNaN" text="isNaN(%num:Number%):Boolean" tiptext="Returns true if the value is NaN(not a number)." version="4" playername="" helpurl="globalClassifier:isNaN"/>
                <string name="isXMLName" text="isXMLName(%str:String%):Boolean" tiptext="Determines whether the specified string is a valid name for an XML element or attribute." version="4" playername="" helpurl="globalClassifier:isXMLName"/>
                <string name="parseFloat" text="parseFloat(%str:String%):Number" tiptext="Converts a string to a floating-point number." version="4" playername="" helpurl="globalClassifier:parseFloat"/>
                <string name="parseInt" text="parseInt(%str:String[,radix:uint=0]%):Number" tiptext="Converts a string to an integer." version="4" playername="" helpurl="globalClassifier:parseInt"/>
                <string name="trace" quickey="tr" text="trace(%arguments:restParam%):void" tiptext="Displays expressions, or writes to log files, while debugging." version="4" playername="" helpurl="globalClassifier:trace"/>
                <string name="uint" text="uint(%value:Number%):uint" tiptext="Converts a given numeric value to an unsigned integer value." version="4" playername="" helpurl="globalClassifier:uint"/>
                <string name="unescape" text="unescape(%str:String%):String" tiptext="Evaluates the parameter str as a string, decodes the string from URL-encoded format (converting all hexadecimal sequences to ASCII characters), and returns the string." version="4" playername="" helpurl="globalClassifier:unescape"/>
            </folder>
            <folder name="Global Constants" id="Global Constants" tiptext="Constants availabe in every script" helpurl="globalClassifier:constantSummary">
                <string name="-Infinity" text="-Infinity" constant="true" tiptext="A special value representing negative Infinity." version="" playername="" helpurl="globalValue:-Infinity"/>
                <string name="Infinity" text="Infinity" constant="true" tiptext="A special value representing positive Infinity." version="" playername="" helpurl="globalValue:Infinity"/>
                <string name="NaN" text="NaN" constant="true" tiptext="A special member of the Number data type that represents a value that is &quot;not a number&quot; (NaN)." version="" playername="" helpurl="globalValue:NaN"/>
                <string name="undefined" text="undefined" constant="true" tiptext="A special value that applies to untyped variables that have not been initialized or dynamic object properties that are not initialized." version="" playername="" helpurl="globalValue:undefined"/>
            </folder>
            </folder>
        <folder name="adobe.utils" id="adobe.utils" sort="true" tiptext="Classes for package adobe.utils" helpurl="adobe.utils">
        <folder name="CustomActions" id="[adobe.utils.CustomActions]" sort="true" index="true" asAncestors="Object" tiptext="The methods of the CustomActions class allow a SWF file playing in the Flash authoring tool to manage any custom actions that are registered with the authoring tool." helpurl="adobe.utils:CustomActions">
            <folder name="Methods" id="Methods" tiptext="Methods for class CustomActions" helpurl="adobe.utils:CustomActions">
                <string name="getActions" object="[adobe.utils.CustomActions]" text="CustomActions.getActions(%name:String%):String" static="true" tiptext="Reads the contents of the custom action XML definition file named name." version="9" playername="" helpurl="adobe.utils:CustomActions:getActions"/>
                <string name="installActions" object="[adobe.utils.CustomActions]" text="CustomActions.installActions(%name:String,data:String%):void" static="true" tiptext="Installs a new custom action XML definition file indicated by the name parameter." version="9" playername="" helpurl="adobe.utils:CustomActions:installActions"/>
                <string name="uninstallActions" object="[adobe.utils.CustomActions]" text="CustomActions.uninstallActions(%name:String%):void" static="true" tiptext="Removes the Custom Actions XML definition file named name." version="9" playername="" helpurl="adobe.utils:CustomActions:uninstallActions"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class CustomActions" helpurl="adobe.utils:CustomActions">
                <string name="actionsList" object="[adobe.utils.CustomActions]" text=".actionsList" tiptext="Returns an Array object containing the names of all the custom actions that are registered with the Flash authoring tool." version="" playername="" helpurl="adobe.utils:CustomActions:actionsList:get"/>
            </folder>
        </folder>
        <folder name="Methods" id="Methods" tiptext="Methods for package adobe.utils" helpurl="adobe.utils">
            <string name="MMEndCommand" text="MMEndCommand(%endStatus:Boolean,notifyString:String%):void" tiptext="Notifies an application hosting a SWF command that a command is done and instructs the application to commit or discard the changes submitted by the MMExecute() command." version="1.5" playername="" helpurl="adobe.utils:MMEndCommand"/>
            <string name="MMExecute" text="MMExecute(%name:String%):String" tiptext="Lets you issue Flash JavaScript API (JSAPI) commands from ActionScript." version="9" playername="" helpurl="adobe.utils:MMExecute"/>
        </folder>
        <folder name="XMLUI" id="[adobe.utils.XMLUI]" sort="true" index="true" asAncestors="Object" tiptext="The XMLUI class enables communication with SWF files that are used as custom user interfaces for the Flash authoring tool&apos;s extensibility features." helpurl="adobe.utils:XMLUI">
            <folder name="Methods" id="Methods" tiptext="Methods for class XMLUI" helpurl="adobe.utils:XMLUI">
                <string name="accept" object="[adobe.utils.XMLUI]" text="XMLUI.accept(%%):void" static="true" tiptext="Makes the current XMLUI dialog box close with an &quot;accept&quot; state." version="9" playername="" helpurl="adobe.utils:XMLUI:accept"/>
                <string name="cancel" object="[adobe.utils.XMLUI]" text="XMLUI.cancel(%%):void" static="true" tiptext="Makes the current XMLUI dialog box close with a &quot;cancel&quot; state." version="9" playername="" helpurl="adobe.utils:XMLUI:cancel"/>
                <string name="getProperty" object="[adobe.utils.XMLUI]" text="XMLUI.getProperty(%name:String%):String" static="true" tiptext="Retrieves the value of the specified property of the current XMLUI dialog box." version="9" playername="" helpurl="adobe.utils:XMLUI:getProperty"/>
                <string name="setProperty" object="[adobe.utils.XMLUI]" text="XMLUI.setProperty(%name:String,value:String%):void" static="true" tiptext="Modifies the value of the specified property of the current XMLUI dialog." version="9" playername="" helpurl="adobe.utils:XMLUI:setProperty"/>
            </folder>
        </folder>
    </folder>
        <folder name="air.desktop" id="air.desktop" sort="true" tiptext="Classes for package air.desktop" helpurl="air.desktop">
        <folder name="URLFilePromise" id="[air.desktop.URLFilePromise]" sort="true" index="true" asAncestors="flash.events:EventDispatcher,Object" tiptext="The URLFilePromise class allows resources accessible at a URL to be dragged out of an AIR application as a file promise." helpurl="air.desktop:URLFilePromise">
            <folder name="Methods" id="Methods" tiptext="Methods for class URLFilePromise" helpurl="air.desktop:URLFilePromise">
                <string name="URLFilePromise" object="[air.desktop.URLFilePromise]" text="new URLFilePromise(%%)" constructor="true" tiptext="Creates a URLFilePromise object." version="2.0" playername="AIR" helpurl="air.desktop:URLFilePromise:URLFilePromise"/>
                <string name="close" object="[air.desktop.URLFilePromise]" text=".close(%%):void" tiptext="Allows the AIR runtime to close the data source at the appropriate time during the drag-and-drop operation." version="2.0" playername="AIR" helpurl="air.desktop:URLFilePromise:close"/>
                <string name="open" object="[air.desktop.URLFilePromise]" text=".open(%%):flash.utils:IDataInput" tiptext="Allows the AIR runtime to open the data source at the appropriate time during the drag-and-drop operation." version="2.0" playername="AIR" helpurl="air.desktop:URLFilePromise:open"/>
                <string name="reportError" object="[air.desktop.URLFilePromise]" text=".reportError(%e:flash.events:ErrorEvent%):void" tiptext="Allows the AIR runtime to report errors that occur during the drag-and-drop operation." version="2.0" playername="AIR" helpurl="air.desktop:URLFilePromise:reportError"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class URLFilePromise" helpurl="air.desktop:URLFilePromise">
                <string name="isAsync" object="[air.desktop.URLFilePromise]" text=".isAsync" tiptext="Indicates whether the resource data is available asynchronously." version="" playername="AIR" helpurl="air.desktop:URLFilePromise:isAsync:get"/>
                <string name="relativePath" object="[air.desktop.URLFilePromise]" text=".relativePath" tiptext="The path and file name of the created file, relative to the drop destination." version="" playername="AIR" helpurl="air.desktop:URLFilePromise:relativePath:set"/>
                <string name="request" object="[air.desktop.URLFilePromise]" text=".request" tiptext="The URLRequest identifying the resource to be copied as the result of the drag-and-drop operation." version="" playername="AIR" helpurl="air.desktop:URLFilePromise:request:set"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class URLFilePromise" helpurl="air.desktop:URLFilePromise">
                <string name="securityError" object="[air.desktop.URLFilePromise]" text=".addEventListener(%type:String=SecurityErrorEvent.SECURITY_ERROR{SecurityErrorEvent.SECURITY_ERROR,HTTPStatusEvent.HTTP_STATUS,HTTPStatusEvent.HTTP_RESPONSE_STATUS,IOErrorEvent.IO_ERROR,ProgressEvent.PROGRESS,Event.COMPLETE,Event.OPEN},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a security error prevents the file download." version="" playername="AIR" helpurl="air.desktop:URLFilePromise_flash.events.SecurityErrorEvent.SECURITY_ERROR_securityError"/>
                <string name="httpStatus" object="[air.desktop.URLFilePromise]" text=".addEventListener(%type:String=HTTPStatusEvent.HTTP_STATUS{SecurityErrorEvent.SECURITY_ERROR,HTTPStatusEvent.HTTP_STATUS,HTTPStatusEvent.HTTP_RESPONSE_STATUS,IOErrorEvent.IO_ERROR,ProgressEvent.PROGRESS,Event.COMPLETE,Event.OPEN},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched for HTTP requests to report the request status code." version="" playername="AIR" helpurl="air.desktop:URLFilePromise_flash.events.HTTPStatusEvent.HTTP_STATUS_httpStatus"/>
                <string name="httpResponseStatus" object="[air.desktop.URLFilePromise]" text=".addEventListener(%type:String=HTTPStatusEvent.HTTP_RESPONSE_STATUS{SecurityErrorEvent.SECURITY_ERROR,HTTPStatusEvent.HTTP_STATUS,HTTPStatusEvent.HTTP_RESPONSE_STATUS,IOErrorEvent.IO_ERROR,ProgressEvent.PROGRESS,Event.COMPLETE,Event.OPEN},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched for HTTP requests to report the response headers." version="" playername="AIR" helpurl="air.desktop:URLFilePromise_flash.events.HTTPStatusEvent.HTTP_RESPONSE_STATUS_httpResponseStatus"/>
                <string name="ioError" object="[air.desktop.URLFilePromise]" text=".addEventListener(%type:String=IOErrorEvent.IO_ERROR{SecurityErrorEvent.SECURITY_ERROR,HTTPStatusEvent.HTTP_STATUS,HTTPStatusEvent.HTTP_RESPONSE_STATUS,IOErrorEvent.IO_ERROR,ProgressEvent.PROGRESS,Event.COMPLETE,Event.OPEN},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when an IOError prevents the file download." version="" playername="AIR" helpurl="air.desktop:URLFilePromise_flash.events.IOErrorEvent.IO_ERROR_ioError"/>
                <string name="progress" object="[air.desktop.URLFilePromise]" text=".addEventListener(%type:String=ProgressEvent.PROGRESS{SecurityErrorEvent.SECURITY_ERROR,HTTPStatusEvent.HTTP_STATUS,HTTPStatusEvent.HTTP_RESPONSE_STATUS,IOErrorEvent.IO_ERROR,ProgressEvent.PROGRESS,Event.COMPLETE,Event.OPEN},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a block of data is available to be read from the underlying URLStream." version="" playername="AIR" helpurl="air.desktop:URLFilePromise_flash.events.ProgressEvent.PROGRESS_progress"/>
                <string name="complete" object="[air.desktop.URLFilePromise]" text=".addEventListener(%type:String=Event.COMPLETE{SecurityErrorEvent.SECURITY_ERROR,HTTPStatusEvent.HTTP_STATUS,HTTPStatusEvent.HTTP_RESPONSE_STATUS,IOErrorEvent.IO_ERROR,ProgressEvent.PROGRESS,Event.COMPLETE,Event.OPEN},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the data for the file has been fully downloaded." version="" playername="AIR" helpurl="air.desktop:URLFilePromise_flash.events.Event.COMPLETE_complete"/>
                <string name="open" object="[air.desktop.URLFilePromise]" text=".addEventListener(%type:String=Event.OPEN{SecurityErrorEvent.SECURITY_ERROR,HTTPStatusEvent.HTTP_STATUS,HTTPStatusEvent.HTTP_RESPONSE_STATUS,IOErrorEvent.IO_ERROR,ProgressEvent.PROGRESS,Event.COMPLETE,Event.OPEN},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the underlying URLStream connection is opened." version="" playername="AIR" helpurl="air.desktop:URLFilePromise_flash.events.Event.OPEN_open"/>
            </folder>
        </folder>
    </folder>
        <folder name="air.net" id="air.net" sort="true" tiptext="Classes for package air.net" helpurl="air.net">
        <folder name="SecureSocketMonitor" id="[air.net.SecureSocketMonitor]" sort="true" index="true" asAncestors="air.net:SocketMonitor,air.net:ServiceMonitor,flash.events:EventDispatcher,Object" tiptext="A SecureSocketMonitor object monitors availablity of a TCP endpoint over Secure Sockets Layer (SSL) and Transport Layer Security (TLS) protocols." helpurl="air.net:SecureSocketMonitor">
            <folder name="Methods" id="Methods" tiptext="Methods for class SecureSocketMonitor" helpurl="air.net:SecureSocketMonitor">
                <string name="SecureSocketMonitor" object="[air.net.SecureSocketMonitor]" text="new SecureSocketMonitor(%host:String,port:int%)" constructor="true" tiptext="Creates a SecureSocketMonitor object for a specified TCP endpoint." version="2.0" playername="AIR" helpurl="air.net:SecureSocketMonitor:SecureSocketMonitor"/>
                <string name="createSocket" object="[air.net.SecureSocketMonitor]" text=".createSocket(%%):flash.net:Socket" tiptext="Creates a SecureSocket object." version="2.0" playername="AIR" helpurl="air.net:SecureSocketMonitor:createSocket"/>
                <string name="toString" object="[air.net.SecureSocketMonitor]" text=".toString(%%):String" tiptext="Returns the string representation of the specified object." version="2.0" playername="AIR" helpurl="air.net:SecureSocketMonitor:toString"/>
            </folder>
        </folder>
        <folder name="ServiceMonitor" id="[air.net.ServiceMonitor]" sort="true" index="true" asAncestors="flash.events:EventDispatcher,Object" tiptext="The ServiceMonitor class implements the framework for monitoring the status and availability of network services." helpurl="air.net:ServiceMonitor">
            <folder name="Methods" id="Methods" tiptext="Methods for class ServiceMonitor" helpurl="air.net:ServiceMonitor">
                <string name="ServiceMonitor" object="[air.net.ServiceMonitor]" text="new ServiceMonitor(%%)" constructor="true" tiptext="Creates a ServiceMonitor object." version="1.0" playername="AIR" helpurl="air.net:ServiceMonitor:ServiceMonitor"/>
                <string name="checkStatus" object="[air.net.ServiceMonitor]" text=".checkStatus(%%):void" tiptext="Checks the status of the service." version="1.0" playername="AIR" helpurl="air.net:ServiceMonitor:checkStatus"/>
                <string name="makeJavascriptSubclass" object="[air.net.ServiceMonitor]" text="ServiceMonitor.makeJavascriptSubclass(%constructorFunction:Object%):void" static="true" tiptext="Adds public ServiceMonitor methods to a JavaScript constructor function&apos;s prototype." version="1.0" playername="AIR" helpurl="air.net:ServiceMonitor:makeJavascriptSubclass"/>
                <string name="start" object="[air.net.ServiceMonitor]" text=".start(%%):void" tiptext="Starts the service monitor." version="1.0" playername="AIR" helpurl="air.net:ServiceMonitor:start"/>
                <string name="stop" object="[air.net.ServiceMonitor]" text=".stop(%%):void" tiptext="Stops monitoring the service." version="1.0" playername="AIR" helpurl="air.net:ServiceMonitor:stop"/>
                <string name="toString" object="[air.net.ServiceMonitor]" text=".toString(%%):String" tiptext="Returns the string representation of the specified object." version="1.0" playername="AIR" helpurl="air.net:ServiceMonitor:toString"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class ServiceMonitor" helpurl="air.net:ServiceMonitor">
                <string name="available" object="[air.net.ServiceMonitor]" text=".available" tiptext="Whether the service is currently considered &quot;available.&quot; The initial value is false until either a status check sets the property to true or the property is initialized to true explicitly. Typically, this property is set by the checkStatus() implementation in a subclass or specializer, but if the application has independent information about a service&apos;s availability (for example, a request just succeeded or failed), the property can be set explicitly." version="" playername="AIR" helpurl="air.net:ServiceMonitor:available:get"/>
                <string name="lastStatusUpdate" object="[air.net.ServiceMonitor]" text=".lastStatusUpdate" tiptext="The time of the last status update." version="" playername="AIR" helpurl="air.net:ServiceMonitor:lastStatusUpdate:get"/>
                <string name="pollInterval" object="[air.net.ServiceMonitor]" text=".pollInterval" tiptext="The interval, in milliseconds, for polling the server." version="" playername="AIR" helpurl="air.net:ServiceMonitor:pollInterval:get"/>
                <string name="running" object="[air.net.ServiceMonitor]" text=".running" tiptext="Whether the monitor has been started." version="" playername="AIR" helpurl="air.net:ServiceMonitor:running:get"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class ServiceMonitor" helpurl="air.net:ServiceMonitor">
                <string name="status" object="[air.net.ServiceMonitor]" text=".addEventListener(%type:String=StatusEvent.STATUS{StatusEvent.STATUS},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Indicates that the service status has changed." version="" playername="AIR" helpurl="air.net:ServiceMonitor_flash.events.StatusEvent.STATUS_status"/>
            </folder>
        </folder>
        <folder name="SocketMonitor" id="[air.net.SocketMonitor]" sort="true" index="true" asAncestors="air.net:ServiceMonitor,flash.events:EventDispatcher,Object" tiptext="A SocketMonitor object monitors availablity of a TCP endpoint." helpurl="air.net:SocketMonitor">
            <folder name="Methods" id="Methods" tiptext="Methods for class SocketMonitor" helpurl="air.net:SocketMonitor">
                <string name="SocketMonitor" object="[air.net.SocketMonitor]" text="new SocketMonitor(%host:String,port:int%)" constructor="true" tiptext="Creates a SocketMonitor object for a specified TCP endpoint." version="1.0" playername="AIR" helpurl="air.net:SocketMonitor:SocketMonitor"/>
                <string name="checkStatus" object="[air.net.SocketMonitor]" text=".checkStatus(%%):void" tiptext="Calling the checkStatus() method of a SocketMonitor object causesthe application to try connecting to the socket, to check for a connect event." version="1.0" playername="AIR" helpurl="air.net:SocketMonitor:checkStatus"/>
                <string name="createSocket" object="[air.net.SocketMonitor]" text=".createSocket(%%):flash.net:Socket" tiptext="Creates a Socket object." version="1.0" playername="AIR" helpurl="air.net:SocketMonitor:createSocket"/>
                <string name="toString" object="[air.net.SocketMonitor]" text=".toString(%%):String" tiptext="Returns the string representation of the specified object." version="1.0" playername="AIR" helpurl="air.net:SocketMonitor:toString"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class SocketMonitor" helpurl="air.net:SocketMonitor">
                <string name="host" object="[air.net.SocketMonitor]" text=".host" tiptext="The host being monitored." version="" playername="AIR" helpurl="air.net:SocketMonitor:host:get"/>
                <string name="port" object="[air.net.SocketMonitor]" text=".port" tiptext="The port being monitored." version="" playername="AIR" helpurl="air.net:SocketMonitor:port:get"/>
            </folder>
        </folder>
        <folder name="URLMonitor" id="[air.net.URLMonitor]" sort="true" index="true" asAncestors="air.net:ServiceMonitor,flash.events:EventDispatcher,Object" tiptext="The URLMonitor class monitors availablity of an HTTP- or HTTPS-based service." helpurl="air.net:URLMonitor">
            <folder name="Methods" id="Methods" tiptext="Methods for class URLMonitor" helpurl="air.net:URLMonitor">
                <string name="URLMonitor" object="[air.net.URLMonitor]" text="new URLMonitor(%urlRequest:flash.net:URLRequest[,acceptableStatusCodes:Array=null]%)" constructor="true" tiptext="Creates a URLMonitor Object for a specified HTTP- or HTTPS-based service." version="1.0" playername="AIR" helpurl="air.net:URLMonitor:URLMonitor"/>
                <string name="checkStatus" object="[air.net.URLMonitor]" text=".checkStatus(%%):void" tiptext="Attempts to load content from a URL in the background, to check for a returned HTTP status code." version="1.0" playername="AIR" helpurl="air.net:URLMonitor:checkStatus"/>
                <string name="toString" object="[air.net.URLMonitor]" text=".toString(%%):String" tiptext="Returns the string representation of the specified object." version="1.0" playername="AIR" helpurl="air.net:URLMonitor:toString"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class URLMonitor" helpurl="air.net:URLMonitor">
                <string name="acceptableStatusCodes" object="[air.net.URLMonitor]" text=".acceptableStatusCodes" tiptext="The numeric status codes representing a successful result." version="" playername="AIR" helpurl="air.net:URLMonitor:acceptableStatusCodes:get"/>
                <string name="urlRequest" object="[air.net.URLMonitor]" text=".urlRequest" tiptext="The URLRequest object representing the probe request." version="" playername="AIR" helpurl="air.net:URLMonitor:urlRequest:get"/>
            </folder>
        </folder>
    </folder>
        <folder name="air.update" id="air.update" sort="true" tiptext="Classes for package air.update" helpurl="air.update">
        <folder name="ApplicationUpdater" id="[air.update.ApplicationUpdater]" sort="true" index="true" asAncestors="flash.events:EventDispatcher,Object" tiptext="The ApplicationUpdater class defines the basic functionality of the update framework for Adobe&amp;#xAE; AIR&amp;#xAE; applications, without providing any default user interface." helpurl="air.update:ApplicationUpdater">
            <folder name="Methods" id="Methods" tiptext="Methods for class ApplicationUpdater" helpurl="air.update:ApplicationUpdater">
                <string name="ApplicationUpdater" object="[air.update.ApplicationUpdater]" text="new ApplicationUpdater(%%)" constructor="true" tiptext="The constructor function." version="1.5" playername="AIR" helpurl="air.update:ApplicationUpdater:ApplicationUpdater"/>
                <string name="cancelUpdate" object="[air.update.ApplicationUpdater]" text=".cancelUpdate(%%):void" tiptext="Cancels the update process." version="1.5" playername="AIR" helpurl="air.update:ApplicationUpdater:cancelUpdate"/>
                <string name="checkForUpdate" object="[air.update.ApplicationUpdater]" text=".checkForUpdate(%%):void" tiptext="Asynchronously downloads and interpretsthe update descriptor file." version="1.5" playername="AIR" helpurl="air.update:ApplicationUpdater:checkForUpdate"/>
                <string name="checkNow" object="[air.update.ApplicationUpdater]" text=".checkNow(%%):void" tiptext="Starts the update process." version="1.5" playername="AIR" helpurl="air.update:ApplicationUpdater:checkNow"/>
                <string name="downloadUpdate" object="[air.update.ApplicationUpdater]" text=".downloadUpdate(%%):void" tiptext="Asynchronously downloads the update file." version="1.5" playername="AIR" helpurl="air.update:ApplicationUpdater:downloadUpdate"/>
                <string name="initialize" object="[air.update.ApplicationUpdater]" text=".initialize(%%):void" tiptext="Initializes the updater." version="1.5" playername="AIR" helpurl="air.update:ApplicationUpdater:initialize"/>
                <string name="installFromAIRFile" object="[air.update.ApplicationUpdater]" text=".installFromAIRFile(%file:flash.filesystem:File%):void" tiptext="Starts the update process using a local AIR file." version="1.5" playername="AIR" helpurl="air.update:ApplicationUpdater:installFromAIRFile"/>
                <string name="installUpdate" object="[air.update.ApplicationUpdater]" text=".installUpdate(%%):void" tiptext="Installs the update file." version="1.5" playername="AIR" helpurl="air.update:ApplicationUpdater:installUpdate"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class ApplicationUpdater" helpurl="air.update:ApplicationUpdater">
                <string name="configurationFile" object="[air.update.ApplicationUpdater]" text=".configurationFile" tiptext="The location of the configuration file that sets the values for delay andupdateURL properties." version="" playername="AIR" helpurl="air.update:ApplicationUpdater:configurationFile:get"/>
                <string name="currentState" object="[air.update.ApplicationUpdater]" text=".currentState" tiptext="The internal state of the updater." version="" playername="AIR" helpurl="air.update:ApplicationUpdater:currentState:get"/>
                <string name="currentVersion" object="[air.update.ApplicationUpdater]" text=".currentVersion" tiptext="The current version of the application." version="" playername="AIR" helpurl="air.update:ApplicationUpdater:currentVersion:get"/>
                <string name="delay" object="[air.update.ApplicationUpdater]" text=".delay" tiptext="The interval, in days, between periodic checks of new updates." version="" playername="AIR" helpurl="air.update:ApplicationUpdater:delay:get"/>
                <string name="isFirstRun" object="[air.update.ApplicationUpdater]" text=".isFirstRun" tiptext="Whether this is the first run after a successful update (true) or not (false)." version="" playername="AIR" helpurl="air.update:ApplicationUpdater:isFirstRun:get"/>
                <string name="isNewerVersionFunction" object="[air.update.ApplicationUpdater]" text=".isNewerVersionFunction" tiptext="A function that the updater should use to perform version comparisons." version="" playername="AIR" helpurl="air.update:ApplicationUpdater:isNewerVersionFunction:get"/>
                <string name="previousApplicationStorageDirectory" object="[air.update.ApplicationUpdater]" text=".previousApplicationStorageDirectory" tiptext="The previous location of the application storage directory, if it changedafter an update." version="" playername="AIR" helpurl="air.update:ApplicationUpdater:previousApplicationStorageDirectory:get"/>
                <string name="previousVersion" object="[air.update.ApplicationUpdater]" text=".previousVersion" tiptext="The previous version of the application." version="" playername="AIR" helpurl="air.update:ApplicationUpdater:previousVersion:get"/>
                <string name="updateDescriptor" object="[air.update.ApplicationUpdater]" text=".updateDescriptor" tiptext="The content of the update descriptor file downloaded from the update URL." version="" playername="AIR" helpurl="air.update:ApplicationUpdater:updateDescriptor:get"/>
                <string name="updateURL" object="[air.update.ApplicationUpdater]" text=".updateURL" tiptext="The location of the update descriptor file." version="" playername="AIR" helpurl="air.update:ApplicationUpdater:updateURL:get"/>
                <string name="wasPendingUpdate" object="[air.update.ApplicationUpdater]" text=".wasPendingUpdate" tiptext="Whether there was a postponed update, even if it failed to install (true); false otherwise." version="" playername="AIR" helpurl="air.update:ApplicationUpdater:wasPendingUpdate:get"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class ApplicationUpdater" helpurl="air.update:ApplicationUpdater">
                <string name="error" object="[air.update.ApplicationUpdater]" text=".addEventListener(%type:String=ErrorEvent.ERROR{ErrorEvent.ERROR,ProgressEvent.PROGRESS,StatusFileUpdateErrorEvent.FILE_UPDATE_ERROR,StatusFileUpdateEvent.FILE_UPDATE_STATUS,DownloadErrorEvent.DOWNLOAD_ERROR,StatusUpdateErrorEvent.UPDATE_ERROR,StatusUpdateEvent.UPDATE_STATUS,UpdateEvent.BEFORE_INSTALL,UpdateEvent.DOWNLOAD_COMPLETE,UpdateEvent.DOWNLOAD_START,UpdateEvent.CHECK_FOR_UPDATE,UpdateEvent.INITIALIZED},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when an error occurred either during initializationor during the update process (if something unexpected happens)." version="" playername="AIR" helpurl="air.update:ApplicationUpdater_flash.events.ErrorEvent.ERROR_error"/>
                <string name="progress" object="[air.update.ApplicationUpdater]" text=".addEventListener(%type:String=ProgressEvent.PROGRESS{ErrorEvent.ERROR,ProgressEvent.PROGRESS,StatusFileUpdateErrorEvent.FILE_UPDATE_ERROR,StatusFileUpdateEvent.FILE_UPDATE_STATUS,DownloadErrorEvent.DOWNLOAD_ERROR,StatusUpdateErrorEvent.UPDATE_ERROR,StatusUpdateEvent.UPDATE_STATUS,UpdateEvent.BEFORE_INSTALL,UpdateEvent.DOWNLOAD_COMPLETE,UpdateEvent.DOWNLOAD_START,UpdateEvent.CHECK_FOR_UPDATE,UpdateEvent.INITIALIZED},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched as the update file is downloaded." version="" playername="AIR" helpurl="air.update:ApplicationUpdater_flash.events.ProgressEvent.PROGRESS_progress"/>
                <string name="fileUpdateError" object="[air.update.ApplicationUpdater]" text=".addEventListener(%type:String=StatusFileUpdateErrorEvent.FILE_UPDATE_ERROR{ErrorEvent.ERROR,ProgressEvent.PROGRESS,StatusFileUpdateErrorEvent.FILE_UPDATE_ERROR,StatusFileUpdateEvent.FILE_UPDATE_STATUS,DownloadErrorEvent.DOWNLOAD_ERROR,StatusUpdateErrorEvent.UPDATE_ERROR,StatusUpdateEvent.UPDATE_STATUS,UpdateEvent.BEFORE_INSTALL,UpdateEvent.DOWNLOAD_COMPLETE,UpdateEvent.DOWNLOAD_START,UpdateEvent.CHECK_FOR_UPDATE,UpdateEvent.INITIALIZED},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when an error occurs validating the file passed as the airFile parameter in a call to the installFromAIRFile() method." version="" playername="AIR" helpurl="air.update:ApplicationUpdater_air.update.events.StatusFileUpdateErrorEvent.FILE_UPDATE_ERROR_fileUpdateError"/>
                <string name="fileUpdateStatus" object="[air.update.ApplicationUpdater]" text=".addEventListener(%type:String=StatusFileUpdateEvent.FILE_UPDATE_STATUS{ErrorEvent.ERROR,ProgressEvent.PROGRESS,StatusFileUpdateErrorEvent.FILE_UPDATE_ERROR,StatusFileUpdateEvent.FILE_UPDATE_STATUS,DownloadErrorEvent.DOWNLOAD_ERROR,StatusUpdateErrorEvent.UPDATE_ERROR,StatusUpdateEvent.UPDATE_STATUS,UpdateEvent.BEFORE_INSTALL,UpdateEvent.DOWNLOAD_COMPLETE,UpdateEvent.DOWNLOAD_START,UpdateEvent.CHECK_FOR_UPDATE,UpdateEvent.INITIALIZED},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched after the updater successfully validates thefile in the call to the installFromAIRFile() method." version="" playername="AIR" helpurl="air.update:ApplicationUpdater_air.update.events.StatusFileUpdateEvent.FILE_UPDATE_STATUS_fileUpdateStatus"/>
                <string name="downloadError" object="[air.update.ApplicationUpdater]" text=".addEventListener(%type:String=DownloadErrorEvent.DOWNLOAD_ERROR{ErrorEvent.ERROR,ProgressEvent.PROGRESS,StatusFileUpdateErrorEvent.FILE_UPDATE_ERROR,StatusFileUpdateEvent.FILE_UPDATE_STATUS,DownloadErrorEvent.DOWNLOAD_ERROR,StatusUpdateErrorEvent.UPDATE_ERROR,StatusUpdateEvent.UPDATE_STATUS,UpdateEvent.BEFORE_INSTALL,UpdateEvent.DOWNLOAD_COMPLETE,UpdateEvent.DOWNLOAD_START,UpdateEvent.CHECK_FOR_UPDATE,UpdateEvent.INITIALIZED},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched if there is an error while connecting or downloadingthe update file." version="" playername="AIR" helpurl="air.update:ApplicationUpdater_air.update.events.DownloadErrorEvent.DOWNLOAD_ERROR_downloadError"/>
                <string name="updateError" object="[air.update.ApplicationUpdater]" text=".addEventListener(%type:String=StatusUpdateErrorEvent.UPDATE_ERROR{ErrorEvent.ERROR,ProgressEvent.PROGRESS,StatusFileUpdateErrorEvent.FILE_UPDATE_ERROR,StatusFileUpdateEvent.FILE_UPDATE_STATUS,DownloadErrorEvent.DOWNLOAD_ERROR,StatusUpdateErrorEvent.UPDATE_ERROR,StatusUpdateEvent.UPDATE_STATUS,UpdateEvent.BEFORE_INSTALL,UpdateEvent.DOWNLOAD_COMPLETE,UpdateEvent.DOWNLOAD_START,UpdateEvent.CHECK_FOR_UPDATE,UpdateEvent.INITIALIZED},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched if an error occurs while trying to download or parse the update descriptor file." version="" playername="AIR" helpurl="air.update:ApplicationUpdater_air.update.events.StatusUpdateErrorEvent.UPDATE_ERROR_updateError"/>
                <string name="updateStatus" object="[air.update.ApplicationUpdater]" text=".addEventListener(%type:String=StatusUpdateEvent.UPDATE_STATUS{ErrorEvent.ERROR,ProgressEvent.PROGRESS,StatusFileUpdateErrorEvent.FILE_UPDATE_ERROR,StatusFileUpdateEvent.FILE_UPDATE_STATUS,DownloadErrorEvent.DOWNLOAD_ERROR,StatusUpdateErrorEvent.UPDATE_ERROR,StatusUpdateEvent.UPDATE_STATUS,UpdateEvent.BEFORE_INSTALL,UpdateEvent.DOWNLOAD_COMPLETE,UpdateEvent.DOWNLOAD_START,UpdateEvent.CHECK_FOR_UPDATE,UpdateEvent.INITIALIZED},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched after the updater successfully downloads andinterprets the update descriptor file." version="" playername="AIR" helpurl="air.update:ApplicationUpdater_air.update.events.StatusUpdateEvent.UPDATE_STATUS_updateStatus"/>
                <string name="beforeInstall" object="[air.update.ApplicationUpdater]" text=".addEventListener(%type:String=UpdateEvent.BEFORE_INSTALL{ErrorEvent.ERROR,ProgressEvent.PROGRESS,StatusFileUpdateErrorEvent.FILE_UPDATE_ERROR,StatusFileUpdateEvent.FILE_UPDATE_STATUS,DownloadErrorEvent.DOWNLOAD_ERROR,StatusUpdateErrorEvent.UPDATE_ERROR,StatusUpdateEvent.UPDATE_STATUS,UpdateEvent.BEFORE_INSTALL,UpdateEvent.DOWNLOAD_COMPLETE,UpdateEvent.DOWNLOAD_START,UpdateEvent.CHECK_FOR_UPDATE,UpdateEvent.INITIALIZED},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched just before installing the update, after the installUpdate() method was called." version="" playername="AIR" helpurl="air.update:ApplicationUpdater_air.update.events.UpdateEvent.BEFORE_INSTALL_beforeInstall"/>
                <string name="downloadComplete" object="[air.update.ApplicationUpdater]" text=".addEventListener(%type:String=UpdateEvent.DOWNLOAD_COMPLETE{ErrorEvent.ERROR,ProgressEvent.PROGRESS,StatusFileUpdateErrorEvent.FILE_UPDATE_ERROR,StatusFileUpdateEvent.FILE_UPDATE_STATUS,DownloadErrorEvent.DOWNLOAD_ERROR,StatusUpdateErrorEvent.UPDATE_ERROR,StatusUpdateEvent.UPDATE_STATUS,UpdateEvent.BEFORE_INSTALL,UpdateEvent.DOWNLOAD_COMPLETE,UpdateEvent.DOWNLOAD_START,UpdateEvent.CHECK_FOR_UPDATE,UpdateEvent.INITIALIZED},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the download of the update file is complete." version="" playername="AIR" helpurl="air.update:ApplicationUpdater_air.update.events.UpdateEvent.DOWNLOAD_COMPLETE_downloadComplete"/>
                <string name="downloadStart" object="[air.update.ApplicationUpdater]" text=".addEventListener(%type:String=UpdateEvent.DOWNLOAD_START{ErrorEvent.ERROR,ProgressEvent.PROGRESS,StatusFileUpdateErrorEvent.FILE_UPDATE_ERROR,StatusFileUpdateEvent.FILE_UPDATE_STATUS,DownloadErrorEvent.DOWNLOAD_ERROR,StatusUpdateErrorEvent.UPDATE_ERROR,StatusUpdateEvent.UPDATE_STATUS,UpdateEvent.BEFORE_INSTALL,UpdateEvent.DOWNLOAD_COMPLETE,UpdateEvent.DOWNLOAD_START,UpdateEvent.CHECK_FOR_UPDATE,UpdateEvent.INITIALIZED},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched after a call to the downloadUpdate() method and the connection to the server is established." version="" playername="AIR" helpurl="air.update:ApplicationUpdater_air.update.events.UpdateEvent.DOWNLOAD_START_downloadStart"/>
                <string name="checkForUpdate" object="[air.update.ApplicationUpdater]" text=".addEventListener(%type:String=UpdateEvent.CHECK_FOR_UPDATE{ErrorEvent.ERROR,ProgressEvent.PROGRESS,StatusFileUpdateErrorEvent.FILE_UPDATE_ERROR,StatusFileUpdateEvent.FILE_UPDATE_STATUS,DownloadErrorEvent.DOWNLOAD_ERROR,StatusUpdateErrorEvent.UPDATE_ERROR,StatusUpdateEvent.UPDATE_STATUS,UpdateEvent.BEFORE_INSTALL,UpdateEvent.DOWNLOAD_COMPLETE,UpdateEvent.DOWNLOAD_START,UpdateEvent.CHECK_FOR_UPDATE,UpdateEvent.INITIALIZED},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched before the update process begins, just before theupdater tries to download the update descriptor file." version="" playername="AIR" helpurl="air.update:ApplicationUpdater_air.update.events.UpdateEvent.CHECK_FOR_UPDATE_checkForUpdate"/>
                <string name="initialized" object="[air.update.ApplicationUpdater]" text=".addEventListener(%type:String=UpdateEvent.INITIALIZED{ErrorEvent.ERROR,ProgressEvent.PROGRESS,StatusFileUpdateErrorEvent.FILE_UPDATE_ERROR,StatusFileUpdateEvent.FILE_UPDATE_STATUS,DownloadErrorEvent.DOWNLOAD_ERROR,StatusUpdateErrorEvent.UPDATE_ERROR,StatusUpdateEvent.UPDATE_STATUS,UpdateEvent.BEFORE_INSTALL,UpdateEvent.DOWNLOAD_COMPLETE,UpdateEvent.DOWNLOAD_START,UpdateEvent.CHECK_FOR_UPDATE,UpdateEvent.INITIALIZED},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched after the initialization is complete." version="" playername="AIR" helpurl="air.update:ApplicationUpdater_air.update.events.UpdateEvent.INITIALIZED_initialized"/>
            </folder>
        </folder>
        <folder name="ApplicationUpdaterUI" id="[air.update.ApplicationUpdaterUI]" sort="true" index="true" asAncestors="flash.events:EventDispatcher,Object" tiptext="The ApplicationUpdaterUI class defines the basic functionality of the update framework for Adobe&amp;#xAE; AIR&amp;#xAE; applications, and it provides a default user interface." helpurl="air.update:ApplicationUpdaterUI">
            <folder name="Methods" id="Methods" tiptext="Methods for class ApplicationUpdaterUI" helpurl="air.update:ApplicationUpdaterUI">
                <string name="ApplicationUpdaterUI" object="[air.update.ApplicationUpdaterUI]" text="new ApplicationUpdaterUI(%%):void" constructor="true" tiptext="The constructor function." version="1.5" playername="AIR" helpurl="air.update:ApplicationUpdaterUI:ApplicationUpdaterUI"/>
                <string name="addResources" object="[air.update.ApplicationUpdaterUI]" text=".addResources(%lang:String,res:Object%):void" tiptext="Dynamically adds a new resource bundle for the specified language." version="1.5" playername="AIR" helpurl="air.update:ApplicationUpdaterUI:addResources"/>
                <string name="cancelUpdate" object="[air.update.ApplicationUpdaterUI]" text=".cancelUpdate(%%):void" tiptext="Cancels the update process." version="1.5" playername="AIR" helpurl="air.update:ApplicationUpdaterUI:cancelUpdate"/>
                <string name="checkNow" object="[air.update.ApplicationUpdaterUI]" text=".checkNow(%%):void" tiptext="Starts the update process." version="1.5" playername="AIR" helpurl="air.update:ApplicationUpdaterUI:checkNow"/>
                <string name="initialize" object="[air.update.ApplicationUpdaterUI]" text=".initialize(%%):void" tiptext="Initializes the updater." version="1.5" playername="AIR" helpurl="air.update:ApplicationUpdaterUI:initialize"/>
                <string name="installFromAIRFile" object="[air.update.ApplicationUpdaterUI]" text=".installFromAIRFile(%file:flash.filesystem:File%):void" tiptext="Starts the update process using a local AIR file." version="1.5" playername="AIR" helpurl="air.update:ApplicationUpdaterUI:installFromAIRFile"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class ApplicationUpdaterUI" helpurl="air.update:ApplicationUpdaterUI">
                <string name="configurationFile" object="[air.update.ApplicationUpdaterUI]" text=".configurationFile" tiptext="The location of the configuration file that sets the values for delay andupdateURL properties." version="" playername="AIR" helpurl="air.update:ApplicationUpdaterUI:configurationFile:get"/>
                <string name="currentVersion" object="[air.update.ApplicationUpdaterUI]" text=".currentVersion" tiptext="The current version of the application." version="" playername="AIR" helpurl="air.update:ApplicationUpdaterUI:currentVersion:get"/>
                <string name="delay" object="[air.update.ApplicationUpdaterUI]" text=".delay" tiptext="The interval, in days, between periodic checks of new updates." version="" playername="AIR" helpurl="air.update:ApplicationUpdaterUI:delay:get"/>
                <string name="isCheckForUpdateVisible" object="[air.update.ApplicationUpdaterUI]" text=".isCheckForUpdateVisible" tiptext="Enables the visibility of the Check forUpdate, No Update, and Update Error dialog boxes." version="" playername="AIR" helpurl="air.update:ApplicationUpdaterUI:isCheckForUpdateVisible:get"/>
                <string name="isDownloadProgressVisible" object="[air.update.ApplicationUpdaterUI]" text=".isDownloadProgressVisible" tiptext="Enables the visibility of the Download Updatedialog box." version="" playername="AIR" helpurl="air.update:ApplicationUpdaterUI:isDownloadProgressVisible:get"/>
                <string name="isDownloadUpdateVisible" object="[air.update.ApplicationUpdaterUI]" text=".isDownloadUpdateVisible" tiptext="Enables the visibility of the Download Updatedialog box." version="" playername="AIR" helpurl="air.update:ApplicationUpdaterUI:isDownloadUpdateVisible:get"/>
                <string name="isFileUpdateVisible" object="[air.update.ApplicationUpdaterUI]" text=".isFileUpdateVisible" tiptext="Enables the visibility of the File Update,File No Update, and File Error dialog boxes." version="" playername="AIR" helpurl="air.update:ApplicationUpdaterUI:isFileUpdateVisible:get"/>
                <string name="isFirstRun" object="[air.update.ApplicationUpdaterUI]" text=".isFirstRun" tiptext="Whether this is the first run after a successful update (true) or not (false)." version="" playername="AIR" helpurl="air.update:ApplicationUpdaterUI:isFirstRun:get"/>
                <string name="isInstallUpdateVisible" object="[air.update.ApplicationUpdaterUI]" text=".isInstallUpdateVisible" tiptext="Enables the visibility of the Install Updatedialog box." version="" playername="AIR" helpurl="air.update:ApplicationUpdaterUI:isInstallUpdateVisible:get"/>
                <string name="isNewerVersionFunction" object="[air.update.ApplicationUpdaterUI]" text=".isNewerVersionFunction" tiptext="A function that the updater should use to perform version comparisons." version="" playername="AIR" helpurl="air.update:ApplicationUpdaterUI:isNewerVersionFunction:get"/>
                <string name="isUnexpectedErrorVisible" object="[air.update.ApplicationUpdaterUI]" text=".isUnexpectedErrorVisible" tiptext="Enables the visibility of the UnexpectedError dialog box." version="" playername="AIR" helpurl="air.update:ApplicationUpdaterUI:isUnexpectedErrorVisible:get"/>
                <string name="isUpdateInProgress" object="[air.update.ApplicationUpdaterUI]" text=".isUpdateInProgress" tiptext="A Boolean property, which is true ifan update is running, false otherwise." version="" playername="AIR" helpurl="air.update:ApplicationUpdaterUI:isUpdateInProgress:get"/>
                <string name="localeChain" object="[air.update.ApplicationUpdaterUI]" text=".localeChain" tiptext="An array defining the locale chain usedby the user interface." version="" playername="AIR" helpurl="air.update:ApplicationUpdaterUI:localeChain:get"/>
                <string name="previousApplicationStorageDirectory" object="[air.update.ApplicationUpdaterUI]" text=".previousApplicationStorageDirectory" tiptext="The previous location of the application storage directory, if it changedafter an update." version="" playername="AIR" helpurl="air.update:ApplicationUpdaterUI:previousApplicationStorageDirectory:get"/>
                <string name="previousVersion" object="[air.update.ApplicationUpdaterUI]" text=".previousVersion" tiptext="The previous version of the application." version="" playername="AIR" helpurl="air.update:ApplicationUpdaterUI:previousVersion:get"/>
                <string name="updateDescriptor" object="[air.update.ApplicationUpdaterUI]" text=".updateDescriptor" tiptext="The content of the update descriptor file downloaded from the update URL." version="" playername="AIR" helpurl="air.update:ApplicationUpdaterUI:updateDescriptor:get"/>
                <string name="updateURL" object="[air.update.ApplicationUpdaterUI]" text=".updateURL" tiptext="The location of the update descriptor file." version="" playername="AIR" helpurl="air.update:ApplicationUpdaterUI:updateURL:get"/>
                <string name="wasPendingUpdate" object="[air.update.ApplicationUpdaterUI]" text=".wasPendingUpdate" tiptext="Whether there was a postponed update, even if it failed to install (true); false otherwise." version="" playername="AIR" helpurl="air.update:ApplicationUpdaterUI:wasPendingUpdate:get"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class ApplicationUpdaterUI" helpurl="air.update:ApplicationUpdaterUI">
                <string name="error" object="[air.update.ApplicationUpdaterUI]" text=".addEventListener(%type:String=ErrorEvent.ERROR{ErrorEvent.ERROR,ProgressEvent.PROGRESS,StatusFileUpdateErrorEvent.FILE_UPDATE_ERROR,StatusFileUpdateEvent.FILE_UPDATE_STATUS,DownloadErrorEvent.DOWNLOAD_ERROR,StatusUpdateErrorEvent.UPDATE_ERROR,StatusUpdateEvent.UPDATE_STATUS,UpdateEvent.BEFORE_INSTALL,UpdateEvent.DOWNLOAD_COMPLETE,UpdateEvent.DOWNLOAD_START,UpdateEvent.CHECK_FOR_UPDATE,UpdateEvent.INITIALIZED},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when an error occurred either during initializationor during the update process (if something unexpected happens)." version="" playername="AIR" helpurl="air.update:ApplicationUpdaterUI_flash.events.ErrorEvent.ERROR_error"/>
                <string name="progress" object="[air.update.ApplicationUpdaterUI]" text=".addEventListener(%type:String=ProgressEvent.PROGRESS{ErrorEvent.ERROR,ProgressEvent.PROGRESS,StatusFileUpdateErrorEvent.FILE_UPDATE_ERROR,StatusFileUpdateEvent.FILE_UPDATE_STATUS,DownloadErrorEvent.DOWNLOAD_ERROR,StatusUpdateErrorEvent.UPDATE_ERROR,StatusUpdateEvent.UPDATE_STATUS,UpdateEvent.BEFORE_INSTALL,UpdateEvent.DOWNLOAD_COMPLETE,UpdateEvent.DOWNLOAD_START,UpdateEvent.CHECK_FOR_UPDATE,UpdateEvent.INITIALIZED},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched as the update file is downloaded." version="" playername="AIR" helpurl="air.update:ApplicationUpdaterUI_flash.events.ProgressEvent.PROGRESS_progress"/>
                <string name="fileUpdateError" object="[air.update.ApplicationUpdaterUI]" text=".addEventListener(%type:String=StatusFileUpdateErrorEvent.FILE_UPDATE_ERROR{ErrorEvent.ERROR,ProgressEvent.PROGRESS,StatusFileUpdateErrorEvent.FILE_UPDATE_ERROR,StatusFileUpdateEvent.FILE_UPDATE_STATUS,DownloadErrorEvent.DOWNLOAD_ERROR,StatusUpdateErrorEvent.UPDATE_ERROR,StatusUpdateEvent.UPDATE_STATUS,UpdateEvent.BEFORE_INSTALL,UpdateEvent.DOWNLOAD_COMPLETE,UpdateEvent.DOWNLOAD_START,UpdateEvent.CHECK_FOR_UPDATE,UpdateEvent.INITIALIZED},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when an error occurs validating the file passed as the airFile parameter in a call to the installFromAIRFile() method." version="" playername="AIR" helpurl="air.update:ApplicationUpdaterUI_air.update.events.StatusFileUpdateErrorEvent.FILE_UPDATE_ERROR_fileUpdateError"/>
                <string name="fileUpdateStatus" object="[air.update.ApplicationUpdaterUI]" text=".addEventListener(%type:String=StatusFileUpdateEvent.FILE_UPDATE_STATUS{ErrorEvent.ERROR,ProgressEvent.PROGRESS,StatusFileUpdateErrorEvent.FILE_UPDATE_ERROR,StatusFileUpdateEvent.FILE_UPDATE_STATUS,DownloadErrorEvent.DOWNLOAD_ERROR,StatusUpdateErrorEvent.UPDATE_ERROR,StatusUpdateEvent.UPDATE_STATUS,UpdateEvent.BEFORE_INSTALL,UpdateEvent.DOWNLOAD_COMPLETE,UpdateEvent.DOWNLOAD_START,UpdateEvent.CHECK_FOR_UPDATE,UpdateEvent.INITIALIZED},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched after the updater successfully validates thefile in the call to the installFromAIRFile() method." version="" playername="AIR" helpurl="air.update:ApplicationUpdaterUI_air.update.events.StatusFileUpdateEvent.FILE_UPDATE_STATUS_fileUpdateStatus"/>
                <string name="downloadError" object="[air.update.ApplicationUpdaterUI]" text=".addEventListener(%type:String=DownloadErrorEvent.DOWNLOAD_ERROR{ErrorEvent.ERROR,ProgressEvent.PROGRESS,StatusFileUpdateErrorEvent.FILE_UPDATE_ERROR,StatusFileUpdateEvent.FILE_UPDATE_STATUS,DownloadErrorEvent.DOWNLOAD_ERROR,StatusUpdateErrorEvent.UPDATE_ERROR,StatusUpdateEvent.UPDATE_STATUS,UpdateEvent.BEFORE_INSTALL,UpdateEvent.DOWNLOAD_COMPLETE,UpdateEvent.DOWNLOAD_START,UpdateEvent.CHECK_FOR_UPDATE,UpdateEvent.INITIALIZED},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched if there is an error while connecting or downloadingthe update file." version="" playername="AIR" helpurl="air.update:ApplicationUpdaterUI_air.update.events.DownloadErrorEvent.DOWNLOAD_ERROR_downloadError"/>
                <string name="updateError" object="[air.update.ApplicationUpdaterUI]" text=".addEventListener(%type:String=StatusUpdateErrorEvent.UPDATE_ERROR{ErrorEvent.ERROR,ProgressEvent.PROGRESS,StatusFileUpdateErrorEvent.FILE_UPDATE_ERROR,StatusFileUpdateEvent.FILE_UPDATE_STATUS,DownloadErrorEvent.DOWNLOAD_ERROR,StatusUpdateErrorEvent.UPDATE_ERROR,StatusUpdateEvent.UPDATE_STATUS,UpdateEvent.BEFORE_INSTALL,UpdateEvent.DOWNLOAD_COMPLETE,UpdateEvent.DOWNLOAD_START,UpdateEvent.CHECK_FOR_UPDATE,UpdateEvent.INITIALIZED},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched if an error occurs while trying to download or parse the update descriptor file." version="" playername="AIR" helpurl="air.update:ApplicationUpdaterUI_air.update.events.StatusUpdateErrorEvent.UPDATE_ERROR_updateError"/>
                <string name="updateStatus" object="[air.update.ApplicationUpdaterUI]" text=".addEventListener(%type:String=StatusUpdateEvent.UPDATE_STATUS{ErrorEvent.ERROR,ProgressEvent.PROGRESS,StatusFileUpdateErrorEvent.FILE_UPDATE_ERROR,StatusFileUpdateEvent.FILE_UPDATE_STATUS,DownloadErrorEvent.DOWNLOAD_ERROR,StatusUpdateErrorEvent.UPDATE_ERROR,StatusUpdateEvent.UPDATE_STATUS,UpdateEvent.BEFORE_INSTALL,UpdateEvent.DOWNLOAD_COMPLETE,UpdateEvent.DOWNLOAD_START,UpdateEvent.CHECK_FOR_UPDATE,UpdateEvent.INITIALIZED},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched after the updater successfully downloads andinterprets the update descriptor file." version="" playername="AIR" helpurl="air.update:ApplicationUpdaterUI_air.update.events.StatusUpdateEvent.UPDATE_STATUS_updateStatus"/>
                <string name="beforeInstall" object="[air.update.ApplicationUpdaterUI]" text=".addEventListener(%type:String=UpdateEvent.BEFORE_INSTALL{ErrorEvent.ERROR,ProgressEvent.PROGRESS,StatusFileUpdateErrorEvent.FILE_UPDATE_ERROR,StatusFileUpdateEvent.FILE_UPDATE_STATUS,DownloadErrorEvent.DOWNLOAD_ERROR,StatusUpdateErrorEvent.UPDATE_ERROR,StatusUpdateEvent.UPDATE_STATUS,UpdateEvent.BEFORE_INSTALL,UpdateEvent.DOWNLOAD_COMPLETE,UpdateEvent.DOWNLOAD_START,UpdateEvent.CHECK_FOR_UPDATE,UpdateEvent.INITIALIZED},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched just before installing the update, after the installUpdate() method was called." version="" playername="AIR" helpurl="air.update:ApplicationUpdaterUI_air.update.events.UpdateEvent.BEFORE_INSTALL_beforeInstall"/>
                <string name="downloadComplete" object="[air.update.ApplicationUpdaterUI]" text=".addEventListener(%type:String=UpdateEvent.DOWNLOAD_COMPLETE{ErrorEvent.ERROR,ProgressEvent.PROGRESS,StatusFileUpdateErrorEvent.FILE_UPDATE_ERROR,StatusFileUpdateEvent.FILE_UPDATE_STATUS,DownloadErrorEvent.DOWNLOAD_ERROR,StatusUpdateErrorEvent.UPDATE_ERROR,StatusUpdateEvent.UPDATE_STATUS,UpdateEvent.BEFORE_INSTALL,UpdateEvent.DOWNLOAD_COMPLETE,UpdateEvent.DOWNLOAD_START,UpdateEvent.CHECK_FOR_UPDATE,UpdateEvent.INITIALIZED},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the download of the update file is complete." version="" playername="AIR" helpurl="air.update:ApplicationUpdaterUI_air.update.events.UpdateEvent.DOWNLOAD_COMPLETE_downloadComplete"/>
                <string name="downloadStart" object="[air.update.ApplicationUpdaterUI]" text=".addEventListener(%type:String=UpdateEvent.DOWNLOAD_START{ErrorEvent.ERROR,ProgressEvent.PROGRESS,StatusFileUpdateErrorEvent.FILE_UPDATE_ERROR,StatusFileUpdateEvent.FILE_UPDATE_STATUS,DownloadErrorEvent.DOWNLOAD_ERROR,StatusUpdateErrorEvent.UPDATE_ERROR,StatusUpdateEvent.UPDATE_STATUS,UpdateEvent.BEFORE_INSTALL,UpdateEvent.DOWNLOAD_COMPLETE,UpdateEvent.DOWNLOAD_START,UpdateEvent.CHECK_FOR_UPDATE,UpdateEvent.INITIALIZED},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched after a call to the downloadUpdate() method and the connection to the server is established." version="" playername="AIR" helpurl="air.update:ApplicationUpdaterUI_air.update.events.UpdateEvent.DOWNLOAD_START_downloadStart"/>
                <string name="checkForUpdate" object="[air.update.ApplicationUpdaterUI]" text=".addEventListener(%type:String=UpdateEvent.CHECK_FOR_UPDATE{ErrorEvent.ERROR,ProgressEvent.PROGRESS,StatusFileUpdateErrorEvent.FILE_UPDATE_ERROR,StatusFileUpdateEvent.FILE_UPDATE_STATUS,DownloadErrorEvent.DOWNLOAD_ERROR,StatusUpdateErrorEvent.UPDATE_ERROR,StatusUpdateEvent.UPDATE_STATUS,UpdateEvent.BEFORE_INSTALL,UpdateEvent.DOWNLOAD_COMPLETE,UpdateEvent.DOWNLOAD_START,UpdateEvent.CHECK_FOR_UPDATE,UpdateEvent.INITIALIZED},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched before the update process begins, just before theupdater tries to download the update descriptor file." version="" playername="AIR" helpurl="air.update:ApplicationUpdaterUI_air.update.events.UpdateEvent.CHECK_FOR_UPDATE_checkForUpdate"/>
                <string name="initialized" object="[air.update.ApplicationUpdaterUI]" text=".addEventListener(%type:String=UpdateEvent.INITIALIZED{ErrorEvent.ERROR,ProgressEvent.PROGRESS,StatusFileUpdateErrorEvent.FILE_UPDATE_ERROR,StatusFileUpdateEvent.FILE_UPDATE_STATUS,DownloadErrorEvent.DOWNLOAD_ERROR,StatusUpdateErrorEvent.UPDATE_ERROR,StatusUpdateEvent.UPDATE_STATUS,UpdateEvent.BEFORE_INSTALL,UpdateEvent.DOWNLOAD_COMPLETE,UpdateEvent.DOWNLOAD_START,UpdateEvent.CHECK_FOR_UPDATE,UpdateEvent.INITIALIZED},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched after the initialization is complete." version="" playername="AIR" helpurl="air.update:ApplicationUpdaterUI_air.update.events.UpdateEvent.INITIALIZED_initialized"/>
            </folder>
        </folder>
    </folder>
        <folder name="air.update.events" id="air.update.events" sort="true" tiptext="Classes for package air.update.events" helpurl="air.update.events">
        <folder name="DownloadErrorEvent" id="[air.update.events.DownloadErrorEvent]" sort="true" index="true" asAncestors="flash.events:ErrorEvent,flash.events:TextEvent,flash.events:Event,Object" tiptext="A DownloadErrorEvent object is dispatched by an ApplicationUpdater or ApplicationUpdaterUI object when an error happens while downloading the update file." helpurl="air.update.events:DownloadErrorEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class DownloadErrorEvent" helpurl="air.update.events:DownloadErrorEvent">
                <string name="DownloadErrorEvent" object="[air.update.events.DownloadErrorEvent]" text="new DownloadErrorEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,text:String,id:int=0,subErrorID:int=0]%)" constructor="true" tiptext="The constructor function." version="1.5" playername="AIR" helpurl="air.update.events:DownloadErrorEvent:DownloadErrorEvent"/>
                <string name="clone" object="[air.update.events.DownloadErrorEvent]" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of the object and sets the value of each property to match that of the original." version="" playername="" helpurl="air.update.events:DownloadErrorEvent:clone"/>
                <string name="toString" object="[air.update.events.DownloadErrorEvent]" text=".toString(%%):String" tiptext="Returns a string that contains all the properties of the object." version="" playername="" helpurl="air.update.events:DownloadErrorEvent:toString"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class DownloadErrorEvent" helpurl="air.update.events:DownloadErrorEvent">
                <string name="DOWNLOAD_ERROR" object="[air.update.events.DownloadErrorEvent]" text="DownloadErrorEvent.DOWNLOAD_ERROR" constant="true" tiptext="The DownloadErrorEvent.DOWNLOAD_ERROR constant defines the value of the type property of the event object for a downloadError event." version="" playername="AIR" helpurl="air.update.events:DownloadErrorEvent:DOWNLOAD_ERROR"/>
                <string name="subErrorID" object="[air.update.events.DownloadErrorEvent]" text=".subErrorID" tiptext="Provides information in addition to the errorId property." version="" playername="AIR" helpurl="air.update.events:DownloadErrorEvent:subErrorID"/>
            </folder>
        </folder>
        <folder name="StatusFileUpdateErrorEvent" id="[air.update.events.StatusFileUpdateErrorEvent]" sort="true" index="true" asAncestors="flash.events:ErrorEvent,flash.events:TextEvent,flash.events:Event,Object" tiptext="A StatusUpdateFileErrorEvent is dispatched when a call to the checkForUpdate() method of a ApplicationUpdater object encounters an error while downloading or parsing the update descriptor file." helpurl="air.update.events:StatusFileUpdateErrorEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class StatusFileUpdateErrorEvent" helpurl="air.update.events:StatusFileUpdateErrorEvent">
                <string name="StatusFileUpdateErrorEvent" object="[air.update.events.StatusFileUpdateErrorEvent]" text="new StatusFileUpdateErrorEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,text:String,id:int=0]%)" constructor="true" tiptext="The constructor function." version="1.5" playername="AIR" helpurl="air.update.events:StatusFileUpdateErrorEvent:StatusFileUpdateErrorEvent"/>
                <string name="clone" object="[air.update.events.StatusFileUpdateErrorEvent]" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of the object and sets the value of each property to match that of the original." version="" playername="" helpurl="air.update.events:StatusFileUpdateErrorEvent:clone"/>
                <string name="toString" object="[air.update.events.StatusFileUpdateErrorEvent]" text=".toString(%%):String" tiptext="Returns a string that contains all the properties of the object." version="" playername="" helpurl="air.update.events:StatusFileUpdateErrorEvent:toString"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class StatusFileUpdateErrorEvent" helpurl="air.update.events:StatusFileUpdateErrorEvent">
                <string name="FILE_UPDATE_ERROR" object="[air.update.events.StatusFileUpdateErrorEvent]" text="StatusFileUpdateErrorEvent.FILE_UPDATE_ERROR" constant="true" tiptext="The StatusUpdateErrorEvent.UPDATE_ERROR constant defines the value of the type property of the event object for a statusUpdateError event." version="" playername="AIR" helpurl="air.update.events:StatusFileUpdateErrorEvent:FILE_UPDATE_ERROR"/>
            </folder>
        </folder>
        <folder name="StatusFileUpdateEvent" id="[air.update.events.StatusFileUpdateEvent]" sort="true" index="true" asAncestors="air.update.events:UpdateEvent,flash.events:Event,Object" tiptext="Dispatched after the updater successfully validates thefile in the call to the installFromAIRFile() method." helpurl="air.update.events:StatusFileUpdateEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class StatusFileUpdateEvent" helpurl="air.update.events:StatusFileUpdateEvent">
                <string name="StatusFileUpdateEvent" object="[air.update.events.StatusFileUpdateEvent]" text="new StatusFileUpdateEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,available:Boolean=false,version:String,path:String]%)" constructor="true" tiptext="The constructor function." version="1.5" playername="AIR" helpurl="air.update.events:StatusFileUpdateEvent:StatusFileUpdateEvent"/>
                <string name="clone" object="[air.update.events.StatusFileUpdateEvent]" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of the object and sets the value of each property to match that of the original." version="1.5" playername="AIR" helpurl="air.update.events:StatusFileUpdateEvent:clone"/>
                <string name="toString" object="[air.update.events.StatusFileUpdateEvent]" text=".toString(%%):String" tiptext="Returns a string that contains all the properties of the object." version="1.5" playername="AIR" helpurl="air.update.events:StatusFileUpdateEvent:toString"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class StatusFileUpdateEvent" helpurl="air.update.events:StatusFileUpdateEvent">
                <string name="FILE_UPDATE_STATUS" object="[air.update.events.StatusFileUpdateEvent]" text="StatusFileUpdateEvent.FILE_UPDATE_STATUS" constant="true" tiptext="The StatusUpdateEvent.UPDATE_STATUS constant defines the value of the type property of the event object for a updateStatus event." version="" playername="AIR" helpurl="air.update.events:StatusFileUpdateEvent:FILE_UPDATE_STATUS"/>
                <string name="available" object="[air.update.events.StatusFileUpdateEvent]" text=".available" tiptext="Indicates if if there is a different version available than one of the current application (true); false otherwise (same version)." version="" playername="AIR" helpurl="air.update.events:StatusFileUpdateEvent:available"/>
                <string name="path" object="[air.update.events.StatusFileUpdateEvent]" text=".path" tiptext="The nativePath property of the update File object specified by the airFile parameter in a call to the installFromAIRFile() method." version="" playername="AIR" helpurl="air.update.events:StatusFileUpdateEvent:path"/>
                <string name="versionLabel" object="[air.update.events.StatusFileUpdateEvent]" text=".versionLabel" tiptext="The version label string of the update." version="" playername="AIR" helpurl="air.update.events:StatusFileUpdateEvent:versionLabel"/>
                <string name="version" object="[air.update.events.StatusFileUpdateEvent]" text=".version" tiptext="The version string of the update." version="" playername="AIR" helpurl="air.update.events:StatusFileUpdateEvent:version"/>
            </folder>
        </folder>
        <folder name="StatusUpdateErrorEvent" id="[air.update.events.StatusUpdateErrorEvent]" sort="true" index="true" asAncestors="flash.events:ErrorEvent,flash.events:TextEvent,flash.events:Event,Object" tiptext="A StatusUpdateErrorEvent is dispatched when a call to the checkForUpdate() method of an ApplicationUpdater object encounters an error while downloading or parsing the update descriptor file." helpurl="air.update.events:StatusUpdateErrorEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class StatusUpdateErrorEvent" helpurl="air.update.events:StatusUpdateErrorEvent">
                <string name="StatusUpdateErrorEvent" object="[air.update.events.StatusUpdateErrorEvent]" text="new StatusUpdateErrorEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,text:String,id:int=0,subErrorID:int=0]%)" constructor="true" tiptext="The constructor function." version="1.5" playername="AIR" helpurl="air.update.events:StatusUpdateErrorEvent:StatusUpdateErrorEvent"/>
                <string name="clone" object="[air.update.events.StatusUpdateErrorEvent]" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of the object and sets the value of each property to match that of the original." version="" playername="" helpurl="air.update.events:StatusUpdateErrorEvent:clone"/>
                <string name="toString" object="[air.update.events.StatusUpdateErrorEvent]" text=".toString(%%):String" tiptext="Returns a string that contains all the properties of the object." version="" playername="" helpurl="air.update.events:StatusUpdateErrorEvent:toString"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class StatusUpdateErrorEvent" helpurl="air.update.events:StatusUpdateErrorEvent">
                <string name="UPDATE_ERROR" object="[air.update.events.StatusUpdateErrorEvent]" text="StatusUpdateErrorEvent.UPDATE_ERROR" constant="true" tiptext="The StatusUpdateErrorEvent.UPDATE_ERROR constant defines the value of the type property of the event object for a statusUpdateError event." version="" playername="AIR" helpurl="air.update.events:StatusUpdateErrorEvent:UPDATE_ERROR"/>
                <string name="subErrorID" object="[air.update.events.StatusUpdateErrorEvent]" text=".subErrorID" tiptext="Provides information in addition to the errorId property." version="" playername="AIR" helpurl="air.update.events:StatusUpdateErrorEvent:subErrorID"/>
            </folder>
        </folder>
        <folder name="StatusUpdateEvent" id="[air.update.events.StatusUpdateEvent]" sort="true" index="true" asAncestors="air.update.events:UpdateEvent,flash.events:Event,Object" tiptext="An updater object dispatches a StatusUpdateEvent object after the updater successfully downloads and interprets the update descriptor file." helpurl="air.update.events:StatusUpdateEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class StatusUpdateEvent" helpurl="air.update.events:StatusUpdateEvent">
                <string name="StatusUpdateEvent" object="[air.update.events.StatusUpdateEvent]" text="new StatusUpdateEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,available:Boolean=false,version:String,details:Array=null,versionLabel:String]%)" constructor="true" tiptext="The constructor function." version="1.5" playername="AIR" helpurl="air.update.events:StatusUpdateEvent:StatusUpdateEvent"/>
                <string name="clone" object="[air.update.events.StatusUpdateEvent]" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of the object and sets the value of each property to match that of the original." version="1.5" playername="AIR" helpurl="air.update.events:StatusUpdateEvent:clone"/>
                <string name="toString" object="[air.update.events.StatusUpdateEvent]" text=".toString(%%):String" tiptext="Returns a string that contains all the properties of the object." version="1.5" playername="AIR" helpurl="air.update.events:StatusUpdateEvent:toString"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class StatusUpdateEvent" helpurl="air.update.events:StatusUpdateEvent">
                <string name="UPDATE_STATUS" object="[air.update.events.StatusUpdateEvent]" text="StatusUpdateEvent.UPDATE_STATUS" constant="true" tiptext="The StatusUpdateEvent.UPDATE_STATUS constant defines the value of the type property of the event object for a updateStatus event." version="" playername="AIR" helpurl="air.update.events:StatusUpdateEvent:UPDATE_STATUS"/>
                <string name="available" object="[air.update.events.StatusUpdateEvent]" text=".available" tiptext="Indicates if an update is available." version="" playername="AIR" helpurl="air.update.events:StatusUpdateEvent:available"/>
                <string name="details" object="[air.update.events.StatusUpdateEvent]" text=".details" tiptext="An array defining the details stringfor each of the supported languages." version="" playername="AIR" helpurl="air.update.events:StatusUpdateEvent:details"/>
                <string name="versionLabel" object="[air.update.events.StatusUpdateEvent]" text=".versionLabel" tiptext="The version label string of the update." version="" playername="AIR" helpurl="air.update.events:StatusUpdateEvent:versionLabel"/>
                <string name="version" object="[air.update.events.StatusUpdateEvent]" text=".version" tiptext="The version string of the update." version="" playername="AIR" helpurl="air.update.events:StatusUpdateEvent:version"/>
            </folder>
        </folder>
        <folder name="UpdateEvent" id="[air.update.events.UpdateEvent]" sort="true" index="true" asAncestors="flash.events:Event,Object" tiptext="A UpdateEvent is dispatched by a ApplicationUpdater object during the update process." helpurl="air.update.events:UpdateEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class UpdateEvent" helpurl="air.update.events:UpdateEvent">
                <string name="UpdateEvent" object="[air.update.events.UpdateEvent]" text="new UpdateEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false]%)" constructor="true" tiptext="The constructor function." version="1.5" playername="AIR" helpurl="air.update.events:UpdateEvent:UpdateEvent"/>
                <string name="clone" object="[air.update.events.UpdateEvent]" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of the object and sets the value of each property to match that of the original." version="" playername="" helpurl="air.update.events:UpdateEvent:clone"/>
                <string name="toString" object="[air.update.events.UpdateEvent]" text=".toString(%%):String" tiptext="Returns a string that contains all the properties of the object." version="" playername="" helpurl="air.update.events:UpdateEvent:toString"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class UpdateEvent" helpurl="air.update.events:UpdateEvent">
                <string name="BEFORE_INSTALL" object="[air.update.events.UpdateEvent]" text="UpdateEvent.BEFORE_INSTALL" constant="true" tiptext="The UpdateEvent.BEFORE_INSTALL constant defines the value of the type property of the event object for a beforeInstall event." version="" playername="AIR" helpurl="air.update.events:UpdateEvent:BEFORE_INSTALL"/>
                <string name="CHECK_FOR_UPDATE" object="[air.update.events.UpdateEvent]" text="UpdateEvent.CHECK_FOR_UPDATE" constant="true" tiptext="The UpdateEvent.CHECK_FOR_UPDATE constant defines the value of the type property of the event object for a checkForUpdate event." version="" playername="AIR" helpurl="air.update.events:UpdateEvent:CHECK_FOR_UPDATE"/>
                <string name="DOWNLOAD_COMPLETE" object="[air.update.events.UpdateEvent]" text="UpdateEvent.DOWNLOAD_COMPLETE" constant="true" tiptext="The UpdateEvent.DOWNLOAD_COMPLETE constant defines the value of the type property of the event object for a downloadComplete event." version="" playername="AIR" helpurl="air.update.events:UpdateEvent:DOWNLOAD_COMPLETE"/>
                <string name="DOWNLOAD_START" object="[air.update.events.UpdateEvent]" text="UpdateEvent.DOWNLOAD_START" constant="true" tiptext="The UpdateEvent.DOWNLOAD_START constant defines the value of the type property of the event object for a downloadStart event." version="" playername="AIR" helpurl="air.update.events:UpdateEvent:DOWNLOAD_START"/>
                <string name="INITIALIZED" object="[air.update.events.UpdateEvent]" text="UpdateEvent.INITIALIZED" constant="true" tiptext="The UpdateEvent.INITIALIZED constant defines the value of the type property of the event object for a initialized event." version="" playername="AIR" helpurl="air.update.events:UpdateEvent:INITIALIZED"/>
            </folder>
        </folder>
    </folder>
        <folder name="fl.accessibility" id="fl.accessibility" sort="true" tiptext="Classes for package fl.accessibility" helpurl="fl.accessibility">
        <folder name="AccImpl" id="[fl.accessibility.AccImpl]" sort="true" index="true" asAncestors="flash.accessibility:AccessibilityImplementation,Object" tiptext="The AccImpl class, also called the Accessibility Implementation class, is the base class for the implementation of accessibility in components." helpurl="fl.accessibility:AccImpl">
            <folder name="Methods" id="Methods" tiptext="Methods for class AccImpl" helpurl="fl.accessibility:AccImpl">
                <string name="enableAccessibility" object="[fl.accessibility.AccImpl]" text="AccImpl.enableAccessibility(%%):void" static="true" tiptext="Enables accessibility for a component." version="1.0" playername="" helpurl="fl.accessibility:AccImpl:enableAccessibility"/>
            </folder>
        </folder>
        <folder name="ButtonAccImpl" id="[fl.accessibility.ButtonAccImpl]" sort="true" index="true" asAncestors="fl.accessibility:LabelButtonAccImpl,fl.accessibility:AccImpl,flash.accessibility:AccessibilityImplementation,Object" tiptext="The ButtonAccImpl class, also called the Button Accessibility Implementation class, enables communication between a Button component and a screen reader." helpurl="fl.accessibility:ButtonAccImpl">
            <folder name="Methods" id="Methods" tiptext="Methods for class ButtonAccImpl" helpurl="fl.accessibility:ButtonAccImpl">
                <string name="enableAccessibility" object="[fl.accessibility.ButtonAccImpl]" text="ButtonAccImpl.enableAccessibility(%%):void" static="true" tiptext="Enables accessibility for a Button component." version="1.0" playername="" helpurl="fl.accessibility:ButtonAccImpl:enableAccessibility"/>
            </folder>
        </folder>
        <folder name="CheckBoxAccImpl" id="[fl.accessibility.CheckBoxAccImpl]" sort="true" index="true" asAncestors="fl.accessibility:LabelButtonAccImpl,fl.accessibility:AccImpl,flash.accessibility:AccessibilityImplementation,Object" tiptext="The CheckBoxAccImpl class, also called the CheckBox Accessibility Implementation class, is used to make a CheckBox component accessible." helpurl="fl.accessibility:CheckBoxAccImpl">
            <folder name="Methods" id="Methods" tiptext="Methods for class CheckBoxAccImpl" helpurl="fl.accessibility:CheckBoxAccImpl">
                <string name="enableAccessibility" object="[fl.accessibility.CheckBoxAccImpl]" text="CheckBoxAccImpl.enableAccessibility(%%):void" static="true" tiptext="Enables accessibility for a CheckBox component." version="1.0" playername="" helpurl="fl.accessibility:CheckBoxAccImpl:enableAccessibility"/>
            </folder>
        </folder>
        <folder name="ComboBoxAccImpl" id="[fl.accessibility.ComboBoxAccImpl]" sort="true" index="true" asAncestors="fl.accessibility:AccImpl,flash.accessibility:AccessibilityImplementation,Object" tiptext="The ComboBoxAccImpl class, also called the ComboBox Accessibility Implementation class, is used to make a ComboBox component accessible." helpurl="fl.accessibility:ComboBoxAccImpl">
            <folder name="Methods" id="Methods" tiptext="Methods for class ComboBoxAccImpl" helpurl="fl.accessibility:ComboBoxAccImpl">
                <string name="enableAccessibility" object="[fl.accessibility.ComboBoxAccImpl]" text="ComboBoxAccImpl.enableAccessibility(%%):void" static="true" tiptext="Enables accessibility for a ComboBox component." version="1.0" playername="" helpurl="fl.accessibility:ComboBoxAccImpl:enableAccessibility"/>
            </folder>
        </folder>
        <folder name="DataGridAccImpl" id="[fl.accessibility.DataGridAccImpl]" sort="true" index="true" asAncestors="fl.accessibility:SelectableListAccImpl,fl.accessibility:AccImpl,flash.accessibility:AccessibilityImplementation,Object" tiptext="The DataGridAccImpl class, also called the DataGrid Accessibility Implementation class, is used to make a DataGrid component accessible." helpurl="fl.accessibility:DataGridAccImpl">
            <folder name="Methods" id="Methods" tiptext="Methods for class DataGridAccImpl" helpurl="fl.accessibility:DataGridAccImpl">
                <string name="enableAccessibility" object="[fl.accessibility.DataGridAccImpl]" text="DataGridAccImpl.enableAccessibility(%%):void" static="true" tiptext="Enables accessibility for a DataGrid component." version="1.0" playername="" helpurl="fl.accessibility:DataGridAccImpl:enableAccessibility"/>
            </folder>
        </folder>
        <folder name="LabelButtonAccImpl" id="[fl.accessibility.LabelButtonAccImpl]" sort="true" index="true" asAncestors="fl.accessibility:AccImpl,flash.accessibility:AccessibilityImplementation,Object" tiptext="The LabelButtonAccImpl class, also called the LabelButton Accessibility Implementation class, is used to make a LabelButton component accessible." helpurl="fl.accessibility:LabelButtonAccImpl">
            <folder name="Methods" id="Methods" tiptext="Methods for class LabelButtonAccImpl" helpurl="fl.accessibility:LabelButtonAccImpl">
                <string name="enableAccessibility" object="[fl.accessibility.LabelButtonAccImpl]" text="LabelButtonAccImpl.enableAccessibility(%%):void" static="true" tiptext="Enables accessibility for a LabelButton component." version="1.0" playername="" helpurl="fl.accessibility:LabelButtonAccImpl:enableAccessibility"/>
            </folder>
        </folder>
        <folder name="ListAccImpl" id="[fl.accessibility.ListAccImpl]" sort="true" index="true" asAncestors="fl.accessibility:SelectableListAccImpl,fl.accessibility:AccImpl,flash.accessibility:AccessibilityImplementation,Object" tiptext="The ListAccImpl class, also called the List Accessiblity Implementation class, is used to make a List component accessible." helpurl="fl.accessibility:ListAccImpl">
            <folder name="Methods" id="Methods" tiptext="Methods for class ListAccImpl" helpurl="fl.accessibility:ListAccImpl">
                <string name="enableAccessibility" object="[fl.accessibility.ListAccImpl]" text="ListAccImpl.enableAccessibility(%%):void" static="true" tiptext="Enables accessibility for a List component." version="1.0" playername="" helpurl="fl.accessibility:ListAccImpl:enableAccessibility"/>
            </folder>
        </folder>
        <folder name="RadioButtonAccImpl" id="[fl.accessibility.RadioButtonAccImpl]" sort="true" index="true" asAncestors="fl.accessibility:CheckBoxAccImpl,fl.accessibility:LabelButtonAccImpl,fl.accessibility:AccImpl,flash.accessibility:AccessibilityImplementation,Object" tiptext="The RadioButtonAccImpl class, also called the RadioButton Accessibility Implementation class, is used to make a RadioButton component accessible." helpurl="fl.accessibility:RadioButtonAccImpl">
            <folder name="Methods" id="Methods" tiptext="Methods for class RadioButtonAccImpl" helpurl="fl.accessibility:RadioButtonAccImpl">
                <string name="enableAccessibility" object="[fl.accessibility.RadioButtonAccImpl]" text="RadioButtonAccImpl.enableAccessibility(%%):void" static="true" tiptext="Enables accessibility for a RadioButton component." version="1.0" playername="" helpurl="fl.accessibility:RadioButtonAccImpl:enableAccessibility"/>
            </folder>
        </folder>
        <folder name="SelectableListAccImpl" id="[fl.accessibility.SelectableListAccImpl]" sort="true" index="true" asAncestors="fl.accessibility:AccImpl,flash.accessibility:AccessibilityImplementation,Object" tiptext="The SelectableListAccImpl class, also called the SelectableList Accessibility Implementation class, is used to make a SelectableList component accessible." helpurl="fl.accessibility:SelectableListAccImpl">
            <folder name="Methods" id="Methods" tiptext="Methods for class SelectableListAccImpl" helpurl="fl.accessibility:SelectableListAccImpl">
                <string name="enableAccessibility" object="[fl.accessibility.SelectableListAccImpl]" text="SelectableListAccImpl.enableAccessibility(%%):void" static="true" tiptext="Enables accessibility for a SelectableList component." version="1.0" playername="" helpurl="fl.accessibility:SelectableListAccImpl:enableAccessibility"/>
            </folder>
        </folder>
        <folder name="TileListAccImpl" id="[fl.accessibility.TileListAccImpl]" sort="true" index="true" asAncestors="fl.accessibility:SelectableListAccImpl,fl.accessibility:AccImpl,flash.accessibility:AccessibilityImplementation,Object" tiptext="The TileListAccImpl class, also called the Tile List Accessibility Implementation class, is used to make a TileList component accessible." helpurl="fl.accessibility:TileListAccImpl">
            <folder name="Methods" id="Methods" tiptext="Methods for class TileListAccImpl" helpurl="fl.accessibility:TileListAccImpl">
                <string name="enableAccessibility" object="[fl.accessibility.TileListAccImpl]" text="TileListAccImpl.enableAccessibility(%%):void" static="true" tiptext="Enables accessibility for a TileList component." version="1.0" playername="" helpurl="fl.accessibility:TileListAccImpl:enableAccessibility"/>
            </folder>
        </folder>
        <folder name="UIComponentAccImpl" id="[fl.accessibility.UIComponentAccImpl]" sort="true" index="true" asAncestors="flash.accessibility:AccessibilityProperties,Object" tiptext="The UIComponentAccImpl class, also called the UIComponent Accessibility Implementation class, is used to make a UIComponent accessible." helpurl="fl.accessibility:UIComponentAccImpl">
            <folder name="Methods" id="Methods" tiptext="Methods for class UIComponentAccImpl" helpurl="fl.accessibility:UIComponentAccImpl">
                <string name="enableAccessibility" object="[fl.accessibility.UIComponentAccImpl]" text="UIComponentAccImpl.enableAccessibility(%%):void" static="true" tiptext="Enables accessibility for a UIComponent component." version="1.0" playername="" helpurl="fl.accessibility:UIComponentAccImpl:enableAccessibility"/>
            </folder>
        </folder>
    </folder>
        <folder name="fl.containers" id="fl.containers" sort="true" tiptext="Classes for package fl.containers" helpurl="fl.containers">
        <folder name="BaseScrollPane" id="[fl.containers.BaseScrollPane]" sort="true" index="true" asAncestors="fl.core:UIComponent,flash.display:Sprite,flash.display:DisplayObjectContainer,flash.display:InteractiveObject,flash.display:DisplayObject,flash.events:EventDispatcher,Object" tiptext="The BaseScrollPane class handles basic scroll pane functionality including events, styling, drawing the mask and background, the layout of scroll bars, and the handling of scroll positions." helpurl="fl.containers:BaseScrollPane">
            <folder name="Methods" id="Methods" tiptext="Methods for class BaseScrollPane" helpurl="fl.containers:BaseScrollPane">
                <string name="BaseScrollPane" object="[fl.containers.BaseScrollPane]" text="new BaseScrollPane(%%)" constructor="true" tiptext="Creates a new BaseScrollPane component instance." version="1.0" playername="" helpurl="fl.containers:BaseScrollPane:BaseScrollPane"/>
                <string name="getStyleDefinition" object="[fl.containers.BaseScrollPane]" text="BaseScrollPane.getStyleDefinition(%%):Object" static="true" tiptext="Retrieves the default style map for the current component." version="1.0" playername="" helpurl="fl.containers:BaseScrollPane:getStyleDefinition"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class BaseScrollPane" helpurl="fl.containers:BaseScrollPane">
                <string name="horizontalLineScrollSize" object="[fl.containers.BaseScrollPane]" text=".horizontalLineScrollSize" tiptext="Gets or sets a value that describes the amount of content to be scrolled, horizontally, when a scroll arrow is clicked." version="" playername="" helpurl="fl.containers:BaseScrollPane:horizontalLineScrollSize:get"/>
                <string name="horizontalPageScrollSize" object="[fl.containers.BaseScrollPane]" text=".horizontalPageScrollSize" tiptext="Gets or sets the count of pixels by which to move the scroll thumb on the horizontal scroll bar when the scroll bar track is pressed." version="" playername="" helpurl="fl.containers:BaseScrollPane:horizontalPageScrollSize:get"/>
                <string name="horizontalScrollBar" object="[fl.containers.BaseScrollPane]" text=".horizontalScrollBar" tiptext="Gets a reference to the horizontal scroll bar." version="" playername="" helpurl="fl.containers:BaseScrollPane:horizontalScrollBar:get"/>
                <string name="horizontalScrollPolicy" object="[fl.containers.BaseScrollPane]" text=".horizontalScrollPolicy" tiptext="Gets or sets a value that indicates the state of the horizontal scroll bar." version="" playername="" helpurl="fl.containers:BaseScrollPane:horizontalScrollPolicy:get"/>
                <string name="horizontalScrollPosition" object="[fl.containers.BaseScrollPane]" text=".horizontalScrollPosition" tiptext="Gets or sets a value that describes the horizontal position of the horizontal scroll bar in the scroll pane, in pixels." version="" playername="" helpurl="fl.containers:BaseScrollPane:horizontalScrollPosition:get"/>
                <string name="maxHorizontalScrollPosition" object="[fl.containers.BaseScrollPane]" text=".maxHorizontalScrollPosition" tiptext="Gets the maximum horizontal scroll position for the current content, in pixels." version="" playername="" helpurl="fl.containers:BaseScrollPane:maxHorizontalScrollPosition:get"/>
                <string name="maxVerticalScrollPosition" object="[fl.containers.BaseScrollPane]" text=".maxVerticalScrollPosition" tiptext="Gets the maximum vertical scroll position for the current content, in pixels." version="" playername="" helpurl="fl.containers:BaseScrollPane:maxVerticalScrollPosition:get"/>
                <string name="useBitmapScrolling" object="[fl.containers.BaseScrollPane]" text=".useBitmapScrolling" tiptext="When set to true, the cacheAsBitmap property for the scrolling content is set to true; when set to false this value is turned off." version="" playername="" helpurl="fl.containers:BaseScrollPane:useBitmapScrolling:get"/>
                <string name="verticalLineScrollSize" object="[fl.containers.BaseScrollPane]" text=".verticalLineScrollSize" tiptext="Gets or sets a value that describes how many pixels to scroll vertically when a scroll arrow is clicked." version="" playername="" helpurl="fl.containers:BaseScrollPane:verticalLineScrollSize:get"/>
                <string name="verticalPageScrollSize" object="[fl.containers.BaseScrollPane]" text=".verticalPageScrollSize" tiptext="Gets or sets the count of pixels by which to move the scroll thumb on the vertical scroll bar when the scroll bar track is pressed." version="" playername="" helpurl="fl.containers:BaseScrollPane:verticalPageScrollSize:get"/>
                <string name="verticalScrollBar" object="[fl.containers.BaseScrollPane]" text=".verticalScrollBar" tiptext="Gets a reference to the vertical scroll bar." version="" playername="" helpurl="fl.containers:BaseScrollPane:verticalScrollBar:get"/>
                <string name="verticalScrollPolicy" object="[fl.containers.BaseScrollPane]" text=".verticalScrollPolicy" tiptext="Gets or sets a value that indicates the state of the vertical scroll bar." version="" playername="" helpurl="fl.containers:BaseScrollPane:verticalScrollPolicy:get"/>
                <string name="verticalScrollPosition" object="[fl.containers.BaseScrollPane]" text=".verticalScrollPosition" tiptext="Gets or sets a value that describes the vertical position of the vertical scroll bar in the scroll pane, in pixels." version="" playername="" helpurl="fl.containers:BaseScrollPane:verticalScrollPosition:get"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class BaseScrollPane" helpurl="fl.containers:BaseScrollPane">
                <string name="scroll" object="[fl.containers.BaseScrollPane]" text=".addEventListener(%type:String=ScrollEvent.SCROLL{ScrollEvent.SCROLL},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user scrolls content by using the scroll bars on the component or the wheel on a mouse device." version="" playername="" helpurl="fl.containers:BaseScrollPane_fl.events.ScrollEvent.SCROLL_scroll"/>
            </folder>
        </folder>
        <folder name="ScrollPane" id="[fl.containers.ScrollPane]" sort="true" index="true" asAncestors="fl.containers:BaseScrollPane,fl.core:UIComponent,flash.display:Sprite,flash.display:DisplayObjectContainer,flash.display:InteractiveObject,flash.display:DisplayObject,flash.events:EventDispatcher,Object" tiptext="The ScrollPane component displays display objects and JPEG, GIF, and PNG files, as well as SWF files, in a scrollable area." helpurl="fl.containers:ScrollPane">
            <folder name="Methods" id="Methods" tiptext="Methods for class ScrollPane" helpurl="fl.containers:ScrollPane">
                <string name="ScrollPane" object="[fl.containers.ScrollPane]" text="new ScrollPane(%%)" constructor="true" tiptext="Creates a new ScrollPane component instance." version="1.0" playername="" helpurl="fl.containers:ScrollPane:ScrollPane"/>
                <string name="getStyleDefinition" object="[fl.containers.ScrollPane]" text="ScrollPane.getStyleDefinition(%%):Object" static="true" tiptext="Retrieves the default style map for the current component." version="1.0" playername="" helpurl="fl.containers:ScrollPane:getStyleDefinition"/>
                <string name="load" object="[fl.containers.ScrollPane]" text=".load(%request:flash.net:URLRequest[,context:flash.system:LoaderContext=null]%):void" tiptext="The request parameter of this method accepts only a URLRequest object whose source property contains a string, a class, or a URLRequest object." version="1.0" playername="" helpurl="fl.containers:ScrollPane:load"/>
                <string name="refreshPane" object="[fl.containers.ScrollPane]" text=".refreshPane(%%):void" tiptext="Reloads the contents of the scroll pane." version="1.0" playername="" helpurl="fl.containers:ScrollPane:refreshPane"/>
                <string name="update" object="[fl.containers.ScrollPane]" text=".update(%%):void" tiptext="Refreshes the scroll bar properties based on the width and height of the content." version="1.0" playername="" helpurl="fl.containers:ScrollPane:update"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class ScrollPane" helpurl="fl.containers:ScrollPane">
                <string name="bytesLoaded" object="[fl.containers.ScrollPane]" text=".bytesLoaded" tiptext="Gets the count of bytes of content that have been loaded." version="" playername="" helpurl="fl.containers:ScrollPane:bytesLoaded:get"/>
                <string name="bytesTotal" object="[fl.containers.ScrollPane]" text=".bytesTotal" tiptext="Gets the count of bytes of content to be loaded." version="" playername="" helpurl="fl.containers:ScrollPane:bytesTotal:get"/>
                <string name="content" object="[fl.containers.ScrollPane]" text=".content" tiptext="Gets a reference to the content loaded into the scroll pane." version="" playername="" helpurl="fl.containers:ScrollPane:content:get"/>
                <string name="percentLoaded" object="[fl.containers.ScrollPane]" text=".percentLoaded" tiptext="Gets a number between 0 and 100 indicating what percentage of the content is loaded." version="" playername="" helpurl="fl.containers:ScrollPane:percentLoaded:get"/>
                <string name="scrollDrag" object="[fl.containers.ScrollPane]" text=".scrollDrag" tiptext="Gets or sets a value that indicates whether scrolling occurs when a user drags on content within the scroll pane." version="" playername="" helpurl="fl.containers:ScrollPane:scrollDrag:get"/>
                <string name="source" object="[fl.containers.ScrollPane]" text=".source" tiptext="Gets or sets an absolute or relative URL that identifies the location of the SWF or image file to load, the class name of a movie clip in the library, a reference to a display object, or a instance name of a movie clip on the same level as the component." version="" playername="" helpurl="fl.containers:ScrollPane:source:get"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class ScrollPane" helpurl="fl.containers:ScrollPane">
                <string name="securityError" object="[fl.containers.ScrollPane]" text=".addEventListener(%type:String=SecurityErrorEvent.SECURITY_ERROR{SecurityErrorEvent.SECURITY_ERROR,Event.OPEN,IOErrorEvent.IO_ERROR,Event.INIT,Event.COMPLETE,ProgressEvent.PROGRESS,ScrollEvent.SCROLL},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched after a security error occurs while content is loading." version="" playername="" helpurl="fl.containers:ScrollPane_flash.events.SecurityErrorEvent.SECURITY_ERROR_securityError"/>
                <string name="open" object="[fl.containers.ScrollPane]" text=".addEventListener(%type:String=Event.OPEN{SecurityErrorEvent.SECURITY_ERROR,Event.OPEN,IOErrorEvent.IO_ERROR,Event.INIT,Event.COMPLETE,ProgressEvent.PROGRESS,ScrollEvent.SCROLL},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched after a network operation starts." version="" playername="" helpurl="fl.containers:ScrollPane_flash.events.Event.OPEN_open"/>
                <string name="ioError" object="[fl.containers.ScrollPane]" text=".addEventListener(%type:String=IOErrorEvent.IO_ERROR{SecurityErrorEvent.SECURITY_ERROR,Event.OPEN,IOErrorEvent.IO_ERROR,Event.INIT,Event.COMPLETE,ProgressEvent.PROGRESS,ScrollEvent.SCROLL},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched after an input or output error occurs." version="" playername="" helpurl="fl.containers:ScrollPane_flash.events.IOErrorEvent.IO_ERROR_ioError"/>
                <string name="init" object="[fl.containers.ScrollPane]" text=".addEventListener(%type:String=Event.INIT{SecurityErrorEvent.SECURITY_ERROR,Event.OPEN,IOErrorEvent.IO_ERROR,Event.INIT,Event.COMPLETE,ProgressEvent.PROGRESS,ScrollEvent.SCROLL},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the properties and methods of a loaded SWF file are accessible." version="" playername="" helpurl="fl.containers:ScrollPane_flash.events.Event.INIT_init"/>
                <string name="complete" object="[fl.containers.ScrollPane]" text=".addEventListener(%type:String=Event.COMPLETE{SecurityErrorEvent.SECURITY_ERROR,Event.OPEN,IOErrorEvent.IO_ERROR,Event.INIT,Event.COMPLETE,ProgressEvent.PROGRESS,ScrollEvent.SCROLL},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when content has finished loading." version="" playername="" helpurl="fl.containers:ScrollPane_flash.events.Event.COMPLETE_complete"/>
                <string name="progress" object="[fl.containers.ScrollPane]" text=".addEventListener(%type:String=ProgressEvent.PROGRESS{SecurityErrorEvent.SECURITY_ERROR,Event.OPEN,IOErrorEvent.IO_ERROR,Event.INIT,Event.COMPLETE,ProgressEvent.PROGRESS,ScrollEvent.SCROLL},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched while content is loading." version="" playername="" helpurl="fl.containers:ScrollPane_flash.events.ProgressEvent.PROGRESS_progress"/>
                <string name="scroll" object="[fl.containers.ScrollPane]" text=".addEventListener(%type:String=ScrollEvent.SCROLL{SecurityErrorEvent.SECURITY_ERROR,Event.OPEN,IOErrorEvent.IO_ERROR,Event.INIT,Event.COMPLETE,ProgressEvent.PROGRESS,ScrollEvent.SCROLL},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user scrolls content by using the scroll bars on the component or the wheel on a mouse device." version="" playername="" helpurl="fl.containers:ScrollPane_fl.events.ScrollEvent.SCROLL_scroll"/>
            </folder>
        </folder>
        <folder name="UILoader" id="[fl.containers.UILoader]" sort="true" index="true" asAncestors="fl.core:UIComponent,flash.display:Sprite,flash.display:DisplayObjectContainer,flash.display:InteractiveObject,flash.display:DisplayObject,flash.events:EventDispatcher,Object" tiptext="The UILoader class makes it possible to set content to load and to then monitor the loading operation at run time." helpurl="fl.containers:UILoader">
            <folder name="Methods" id="Methods" tiptext="Methods for class UILoader" helpurl="fl.containers:UILoader">
                <string name="UILoader" object="[fl.containers.UILoader]" text="new UILoader(%%)" constructor="true" tiptext="Creates a new UILoader component instance." version="1.0" playername="" helpurl="fl.containers:UILoader:UILoader"/>
                <string name="close" object="[fl.containers.UILoader]" text=".close(%%):void" tiptext="Cancels a load() method operation that is currently in progress for the Loader instance." version="1.0" playername="" helpurl="fl.containers:UILoader:close"/>
                <string name="getStyleDefinition" object="[fl.containers.UILoader]" text="UILoader.getStyleDefinition(%%):Object" static="true" tiptext="Retrieves the default style map for the current component." version="1.0" playername="" helpurl="fl.containers:UILoader:getStyleDefinition"/>
                <string name="loadBytes" object="[fl.containers.UILoader]" text=".loadBytes(%bytes:flash.utils:ByteArray[,context:flash.system:LoaderContext=null]%):void" tiptext="Loads binary data that is stored in a ByteArray object." version="1.0" playername="" helpurl="fl.containers:UILoader:loadBytes"/>
                <string name="load" object="[fl.containers.UILoader]" text=".load(%[request:flash.net:URLRequest=null,context:flash.system:LoaderContext=null]%):void" tiptext="Loads the specified content or, if no content is specified, loads the content from the location identified by the source property." version="1.0" playername="" helpurl="fl.containers:UILoader:load"/>
                <string name="setSize" object="[fl.containers.UILoader]" text=".setSize(%w:Number,h:Number%):void" tiptext="Resizes the component to the requested size." version="1.0" playername="" helpurl="fl.containers:UILoader:setSize"/>
                <string name="unload" object="[fl.containers.UILoader]" text=".unload(%%):void" tiptext="Removes a child of this UILoader object that was loaded by using either the load() method or the source property." version="1.0" playername="" helpurl="fl.containers:UILoader:unload"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class UILoader" helpurl="fl.containers:UILoader">
                <string name="autoLoad" object="[fl.containers.UILoader]" text=".autoLoad" tiptext="Gets or sets a value that indicates whether the UILoader instance automatically loads the specified content." version="" playername="" helpurl="fl.containers:UILoader:autoLoad:get"/>
                <string name="bytesLoaded" object="[fl.containers.UILoader]" text=".bytesLoaded" tiptext="Gets the count of bytes of content that have been loaded." version="" playername="" helpurl="fl.containers:UILoader:bytesLoaded:get"/>
                <string name="bytesTotal" object="[fl.containers.UILoader]" text=".bytesTotal" tiptext="Gets the count of bytes of content to be loaded." version="" playername="" helpurl="fl.containers:UILoader:bytesTotal:get"/>
                <string name="content" object="[fl.containers.UILoader]" text=".content" tiptext="Contains the root display object of the SWF file or image file (a JPEG, PNG, or GIF format file) that was loaded by using the load() method or setting the source property." version="" playername="" helpurl="fl.containers:UILoader:content:get"/>
                <string name="maintainAspectRatio" object="[fl.containers.UILoader]" text=".maintainAspectRatio" tiptext="Gets or sets a value that indicates whether to maintain the aspect ratio that was used in the original image or to resize the image at the curent width and height of the UILoader component." version="" playername="" helpurl="fl.containers:UILoader:maintainAspectRatio:get"/>
                <string name="percentLoaded" object="[fl.containers.UILoader]" text=".percentLoaded" tiptext="Gets a number between 0 and 100 indicating what percentage of the content is loaded." version="" playername="" helpurl="fl.containers:UILoader:percentLoaded:get"/>
                <string name="scaleContent" object="[fl.containers.UILoader]" text=".scaleContent" tiptext="Gets or sets a value that indicates whether to automatically scale the image to the size of the UILoader instance." version="" playername="" helpurl="fl.containers:UILoader:scaleContent:get"/>
                <string name="source" object="[fl.containers.UILoader]" text=".source" tiptext="Gets or sets an absolute or relative URL that identifies the location of the SWF or image file to load, the class name of a movie clip in the library, a reference to a display object, or a instance name of a movie clip on the same level as the component." version="" playername="" helpurl="fl.containers:UILoader:source:get"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class UILoader" helpurl="fl.containers:UILoader">
                <string name="securityError" object="[fl.containers.UILoader]" text=".addEventListener(%type:String=SecurityErrorEvent.SECURITY_ERROR{SecurityErrorEvent.SECURITY_ERROR,ComponentEvent.RESIZE,ProgressEvent.PROGRESS,Event.OPEN,IOErrorEvent.IO_ERROR,Event.INIT,Event.COMPLETE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched after a security error occurs while content is loading." version="" playername="" helpurl="fl.containers:UILoader_flash.events.SecurityErrorEvent.SECURITY_ERROR_securityError"/>
                <string name="resize" object="[fl.containers.UILoader]" text=".addEventListener(%type:String=ComponentEvent.RESIZE{SecurityErrorEvent.SECURITY_ERROR,ComponentEvent.RESIZE,ProgressEvent.PROGRESS,Event.OPEN,IOErrorEvent.IO_ERROR,Event.INIT,Event.COMPLETE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched after the component is resized." version="" playername="" helpurl="fl.containers:UILoader_fl.events.ComponentEvent.RESIZE_resize"/>
                <string name="progress" object="[fl.containers.UILoader]" text=".addEventListener(%type:String=ProgressEvent.PROGRESS{SecurityErrorEvent.SECURITY_ERROR,ComponentEvent.RESIZE,ProgressEvent.PROGRESS,Event.OPEN,IOErrorEvent.IO_ERROR,Event.INIT,Event.COMPLETE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when content is loading." version="" playername="" helpurl="fl.containers:UILoader_flash.events.ProgressEvent.PROGRESS_progress"/>
                <string name="open" object="[fl.containers.UILoader]" text=".addEventListener(%type:String=Event.OPEN{SecurityErrorEvent.SECURITY_ERROR,ComponentEvent.RESIZE,ProgressEvent.PROGRESS,Event.OPEN,IOErrorEvent.IO_ERROR,Event.INIT,Event.COMPLETE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched after a network operation starts." version="" playername="" helpurl="fl.containers:UILoader_flash.events.Event.OPEN_open"/>
                <string name="ioError" object="[fl.containers.UILoader]" text=".addEventListener(%type:String=IOErrorEvent.IO_ERROR{SecurityErrorEvent.SECURITY_ERROR,ComponentEvent.RESIZE,ProgressEvent.PROGRESS,Event.OPEN,IOErrorEvent.IO_ERROR,Event.INIT,Event.COMPLETE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched after an input or output error occurs." version="" playername="" helpurl="fl.containers:UILoader_flash.events.IOErrorEvent.IO_ERROR_ioError"/>
                <string name="init" object="[fl.containers.UILoader]" text=".addEventListener(%type:String=Event.INIT{SecurityErrorEvent.SECURITY_ERROR,ComponentEvent.RESIZE,ProgressEvent.PROGRESS,Event.OPEN,IOErrorEvent.IO_ERROR,Event.INIT,Event.COMPLETE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the properties and methods of a loaded SWF file are accessible." version="" playername="" helpurl="fl.containers:UILoader_flash.events.Event.INIT_init"/>
                <string name="complete" object="[fl.containers.UILoader]" text=".addEventListener(%type:String=Event.COMPLETE{SecurityErrorEvent.SECURITY_ERROR,ComponentEvent.RESIZE,ProgressEvent.PROGRESS,Event.OPEN,IOErrorEvent.IO_ERROR,Event.INIT,Event.COMPLETE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when content loading is complete." version="" playername="" helpurl="fl.containers:UILoader_flash.events.Event.COMPLETE_complete"/>
            </folder>
        </folder>
    </folder>
        <folder name="fl.controls" id="fl.controls" sort="true" tiptext="Classes for package fl.controls" helpurl="fl.controls">
        <folder name="BaseButton" id="[fl.controls.BaseButton]" sort="true" index="true" asAncestors="fl.core:UIComponent,flash.display:Sprite,flash.display:DisplayObjectContainer,flash.display:InteractiveObject,flash.display:DisplayObject,flash.events:EventDispatcher,Object" tiptext="The BaseButton class is the base class for all button components, defining properties and methods that are common to all buttons." helpurl="fl.controls:BaseButton">
            <folder name="Methods" id="Methods" tiptext="Methods for class BaseButton" helpurl="fl.controls:BaseButton">
                <string name="BaseButton" object="[fl.controls.BaseButton]" text="new BaseButton(%%)" constructor="true" tiptext="Creates a new BaseButton instance." version="1.0" playername="" helpurl="fl.controls:BaseButton:BaseButton"/>
                <string name="getStyleDefinition" object="[fl.controls.BaseButton]" text="BaseButton.getStyleDefinition(%%):Object" static="true" tiptext="Retrieves the default style map for the current component." version="1.0" playername="" helpurl="fl.controls:BaseButton:getStyleDefinition"/>
                <string name="setMouseState" object="[fl.controls.BaseButton]" text=".setMouseState(%state:String%):void" tiptext="Set the mouse state via ActionScript." version="1.0" playername="" helpurl="fl.controls:BaseButton:setMouseState"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class BaseButton" helpurl="fl.controls:BaseButton">
                <string name="autoRepeat" object="[fl.controls.BaseButton]" text=".autoRepeat" tiptext="Gets or sets a Boolean value that indicates whether the buttonDown event is dispatched more than one time when the user holds the mouse button down over the component." version="" playername="" helpurl="fl.controls:BaseButton:autoRepeat:get"/>
                <string name="enabled" object="[fl.controls.BaseButton]" text=".enabled" tiptext="Gets or sets a value that indicates whether the component can accept user input." version="" playername="" helpurl="fl.controls:BaseButton:enabled:get"/>
                <string name="selected" object="[fl.controls.BaseButton]" text=".selected" tiptext="Gets or sets a Boolean value that indicates whether a toggle button is selected." version="" playername="" helpurl="fl.controls:BaseButton:selected:get"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class BaseButton" helpurl="fl.controls:BaseButton">
                <string name="change" object="[fl.controls.BaseButton]" text=".addEventListener(%type:String=Event.CHANGE{Event.CHANGE,ComponentEvent.BUTTON_DOWN},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the value of the selected property of a toggle Button component changes." version="" playername="" helpurl="fl.controls:BaseButton_flash.events.Event.CHANGE_change"/>
                <string name="buttonDown" object="[fl.controls.BaseButton]" text=".addEventListener(%type:String=ComponentEvent.BUTTON_DOWN{Event.CHANGE,ComponentEvent.BUTTON_DOWN},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user presses the Button component." version="" playername="" helpurl="fl.controls:BaseButton_fl.events.ComponentEvent.BUTTON_DOWN_buttonDown"/>
            </folder>
        </folder>
        <folder name="Button" id="[fl.controls.Button]" sort="true" index="true" asAncestors="fl.controls:LabelButton,fl.controls:BaseButton,fl.core:UIComponent,flash.display:Sprite,flash.display:DisplayObjectContainer,flash.display:InteractiveObject,flash.display:DisplayObject,flash.events:EventDispatcher,Object" tiptext="The Button component represents a commonly used rectangular button." helpurl="fl.controls:Button">
            <folder name="Methods" id="Methods" tiptext="Methods for class Button" helpurl="fl.controls:Button">
                <string name="Button" object="[fl.controls.Button]" text="new Button(%%)" constructor="true" tiptext="Creates a new Button component instance." version="1.0" playername="" helpurl="fl.controls:Button:Button"/>
                <string name="getStyleDefinition" object="[fl.controls.Button]" text="Button.getStyleDefinition(%%):Object" static="true" tiptext="Retrieves the default style map for the current component." version="1.0" playername="" helpurl="fl.controls:Button:getStyleDefinition"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class Button" helpurl="fl.controls:Button">
                <string name="emphasized" object="[fl.controls.Button]" text=".emphasized" tiptext="Gets or sets a Boolean value that indicates whether a border is drawn around the Button component when the button is in its up state." version="" playername="" helpurl="fl.controls:Button:emphasized:get"/>
            </folder>
        </folder>
        <folder name="ButtonLabelPlacement" id="[fl.controls.ButtonLabelPlacement]" sort="true" index="true" asAncestors="Object" tiptext="The ButtonLabelPlacement class defines constants for the values of the labelPlacement property of a Button, CheckBox, or RadioButton component." helpurl="fl.controls:ButtonLabelPlacement">
            <folder name="Properties" id="Properties" tiptext="Properties for class ButtonLabelPlacement" helpurl="fl.controls:ButtonLabelPlacement">
                <string name="BOTTOM" object="[fl.controls.ButtonLabelPlacement]" text="ButtonLabelPlacement.BOTTOM" constant="true" tiptext="The label appears below the icon." version="" playername="" helpurl="fl.controls:ButtonLabelPlacement:BOTTOM"/>
                <string name="LEFT" object="[fl.controls.ButtonLabelPlacement]" text="ButtonLabelPlacement.LEFT" constant="true" tiptext="The label appears to the left of the icon." version="" playername="" helpurl="fl.controls:ButtonLabelPlacement:LEFT"/>
                <string name="RIGHT" object="[fl.controls.ButtonLabelPlacement]" text="ButtonLabelPlacement.RIGHT" constant="true" tiptext="The label appears to the right of the icon." version="" playername="" helpurl="fl.controls:ButtonLabelPlacement:RIGHT"/>
                <string name="TOP" object="[fl.controls.ButtonLabelPlacement]" text="ButtonLabelPlacement.TOP" constant="true" tiptext="The label appears above the icon." version="" playername="" helpurl="fl.controls:ButtonLabelPlacement:TOP"/>
            </folder>
        </folder>
        <folder name="CheckBox" id="[fl.controls.CheckBox]" sort="true" index="true" asAncestors="fl.controls:LabelButton,fl.controls:BaseButton,fl.core:UIComponent,flash.display:Sprite,flash.display:DisplayObjectContainer,flash.display:InteractiveObject,flash.display:DisplayObject,flash.events:EventDispatcher,Object" tiptext="The CheckBox component displays a small box that can contain a check mark." helpurl="fl.controls:CheckBox">
            <folder name="Methods" id="Methods" tiptext="Methods for class CheckBox" helpurl="fl.controls:CheckBox">
                <string name="CheckBox" object="[fl.controls.CheckBox]" text="new CheckBox(%%)" constructor="true" tiptext="Creates a new CheckBox component instance." version="1.0" playername="" helpurl="fl.controls:CheckBox:CheckBox"/>
                <string name="drawFocus" object="[fl.controls.CheckBox]" text=".drawFocus(%focused:Boolean%):void" tiptext="Shows or hides the focus indicator around this component." version="1.0" playername="" helpurl="fl.controls:CheckBox:drawFocus"/>
                <string name="getStyleDefinition" object="[fl.controls.CheckBox]" text="CheckBox.getStyleDefinition(%%):Object" static="true" tiptext="Retrieves the default style map for the current component." version="1.0" playername="" helpurl="fl.controls:CheckBox:getStyleDefinition"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class CheckBox" helpurl="fl.controls:CheckBox">
                <string name="autoRepeat" object="[fl.controls.CheckBox]" text=".autoRepeat" tiptext="A CheckBox never auto-repeats by definition, so the autoRepeat property is set to false in the constructor and cannot be changed for a CheckBox." version="" playername="" helpurl="fl.controls:CheckBox:autoRepeat:get"/>
                <string name="toggle" object="[fl.controls.CheckBox]" text=".toggle" tiptext="A CheckBox toggles by definition, so the toggle property is set to true in the constructor and cannot be changed for a CheckBox." version="" playername="" helpurl="fl.controls:CheckBox:toggle:get"/>
            </folder>
        </folder>
        <folder name="ColorPicker" id="[fl.controls.ColorPicker]" sort="true" index="true" asAncestors="fl.core:UIComponent,flash.display:Sprite,flash.display:DisplayObjectContainer,flash.display:InteractiveObject,flash.display:DisplayObject,flash.events:EventDispatcher,Object" tiptext="The ColorPicker component displays a list of one or more swatches from which the user can select a color." helpurl="fl.controls:ColorPicker">
            <folder name="Methods" id="Methods" tiptext="Methods for class ColorPicker" helpurl="fl.controls:ColorPicker">
                <string name="ColorPicker" object="[fl.controls.ColorPicker]" text="new ColorPicker(%%)" constructor="true" tiptext="Creates an instance of the ColorPicker class." version="1.0" playername="" helpurl="fl.controls:ColorPicker:ColorPicker"/>
                <string name="close" object="[fl.controls.ColorPicker]" text=".close(%%):void" tiptext="Hides the color palette." version="1.0" playername="" helpurl="fl.controls:ColorPicker:close"/>
                <string name="getStyleDefinition" object="[fl.controls.ColorPicker]" text="ColorPicker.getStyleDefinition(%%):Object" static="true" tiptext="Retrieves the default style map for the current component." version="1.0" playername="" helpurl="fl.controls:ColorPicker:getStyleDefinition"/>
                <string name="open" object="[fl.controls.ColorPicker]" text=".open(%%):void" tiptext="Shows the color palette." version="1.0" playername="" helpurl="fl.controls:ColorPicker:open"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class ColorPicker" helpurl="fl.controls:ColorPicker">
                <string name="textField" object="[fl.controls.ColorPicker]" text=".textField" tiptext="A reference to the internal text field of the ColorPicker component." version="" playername="" helpurl="fl.controls:ColorPicker:textField"/>
                <string name="colors" object="[fl.controls.ColorPicker]" text=".colors" tiptext="Gets or sets the array of custom colors that the ColorPicker component provides." version="" playername="" helpurl="fl.controls:ColorPicker:colors:get"/>
                <string name="editable" object="[fl.controls.ColorPicker]" text=".editable" tiptext="Gets or sets a Boolean value that indicates whether the internal text field of the ColorPicker component is editable." version="" playername="" helpurl="fl.controls:ColorPicker:editable:get"/>
                <string name="enabled" object="[fl.controls.ColorPicker]" text=".enabled" tiptext="Gets or sets a value that indicates whether the component can accept user interaction." version="" playername="" helpurl="fl.controls:ColorPicker:enabled:get"/>
                <string name="hexValue" object="[fl.controls.ColorPicker]" text=".hexValue" tiptext="Gets the string value of the current color selection." version="" playername="" helpurl="fl.controls:ColorPicker:hexValue:get"/>
                <string name="imeMode" object="[fl.controls.ColorPicker]" text=".imeMode" tiptext="Gets or sets the mode of the input method editor (IME)." version="" playername="" helpurl="fl.controls:ColorPicker:imeMode:get"/>
                <string name="selectedColor" object="[fl.controls.ColorPicker]" text=".selectedColor" tiptext="Gets or sets the swatch that is currently highlighted in the palette of the ColorPicker component." version="" playername="" helpurl="fl.controls:ColorPicker:selectedColor:get"/>
                <string name="showTextField" object="[fl.controls.ColorPicker]" text=".showTextField" tiptext="Gets or sets a Boolean value that indicates whether the internal text field of the ColorPicker component is displayed." version="" playername="" helpurl="fl.controls:ColorPicker:showTextField:get"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class ColorPicker" helpurl="fl.controls:ColorPicker">
                <string name="enter" object="[fl.controls.ColorPicker]" text=".addEventListener(%type:String=ColorPickerEvent.ENTER{ColorPickerEvent.ENTER,ColorPickerEvent.ITEM_ROLL_OUT,ColorPickerEvent.ITEM_ROLL_OVER,ColorPickerEvent.CHANGE,Event.CLOSE,Event.OPEN},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user presses the Enter key after editing the internal text field of the ColorPicker component." version="" playername="" helpurl="fl.controls:ColorPicker_fl.events.ColorPickerEvent.ENTER_enter"/>
                <string name="itemRollOut" object="[fl.controls.ColorPicker]" text=".addEventListener(%type:String=ColorPickerEvent.ITEM_ROLL_OUT{ColorPickerEvent.ENTER,ColorPickerEvent.ITEM_ROLL_OUT,ColorPickerEvent.ITEM_ROLL_OVER,ColorPickerEvent.CHANGE,Event.CLOSE,Event.OPEN},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user rolls out of a swatch in the color palette." version="" playername="" helpurl="fl.controls:ColorPicker_fl.events.ColorPickerEvent.ITEM_ROLL_OUT_itemRollOut"/>
                <string name="itemRollOver" object="[fl.controls.ColorPicker]" text=".addEventListener(%type:String=ColorPickerEvent.ITEM_ROLL_OVER{ColorPickerEvent.ENTER,ColorPickerEvent.ITEM_ROLL_OUT,ColorPickerEvent.ITEM_ROLL_OVER,ColorPickerEvent.CHANGE,Event.CLOSE,Event.OPEN},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user rolls over a swatch in the color palette." version="" playername="" helpurl="fl.controls:ColorPicker_fl.events.ColorPickerEvent.ITEM_ROLL_OVER_itemRollOver"/>
                <string name="change" object="[fl.controls.ColorPicker]" text=".addEventListener(%type:String=ColorPickerEvent.CHANGE{ColorPickerEvent.ENTER,ColorPickerEvent.ITEM_ROLL_OUT,ColorPickerEvent.ITEM_ROLL_OVER,ColorPickerEvent.CHANGE,Event.CLOSE,Event.OPEN},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user clicks a color in the palette." version="" playername="" helpurl="fl.controls:ColorPicker_fl.events.ColorPickerEvent.CHANGE_change"/>
                <string name="close" object="[fl.controls.ColorPicker]" text=".addEventListener(%type:String=Event.CLOSE{ColorPickerEvent.ENTER,ColorPickerEvent.ITEM_ROLL_OUT,ColorPickerEvent.ITEM_ROLL_OVER,ColorPickerEvent.CHANGE,Event.CLOSE,Event.OPEN},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user closes the color palette." version="" playername="" helpurl="fl.controls:ColorPicker_flash.events.Event.CLOSE_close"/>
                <string name="open" object="[fl.controls.ColorPicker]" text=".addEventListener(%type:String=Event.OPEN{ColorPickerEvent.ENTER,ColorPickerEvent.ITEM_ROLL_OUT,ColorPickerEvent.ITEM_ROLL_OVER,ColorPickerEvent.CHANGE,Event.CLOSE,Event.OPEN},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user opens the color palette." version="" playername="" helpurl="fl.controls:ColorPicker_flash.events.Event.OPEN_open"/>
            </folder>
        </folder>
        <folder name="ComboBox" id="[fl.controls.ComboBox]" sort="true" index="true" asAncestors="fl.core:UIComponent,flash.display:Sprite,flash.display:DisplayObjectContainer,flash.display:InteractiveObject,flash.display:DisplayObject,flash.events:EventDispatcher,Object" tiptext="The ComboBox component contains a drop-down list from which the user can select one value." helpurl="fl.controls:ComboBox">
            <folder name="Methods" id="Methods" tiptext="Methods for class ComboBox" helpurl="fl.controls:ComboBox">
                <string name="ComboBox" object="[fl.controls.ComboBox]" text="new ComboBox(%%)" constructor="true" tiptext="Creates a new ComboBox component instance." version="1.0" playername="" helpurl="fl.controls:ComboBox:ComboBox"/>
                <string name="addItemAt" object="[fl.controls.ComboBox]" text=".addItemAt(%item:Object,index:uint%):void" tiptext="Inserts an item into the list at the specified index location." version="1.0" playername="" helpurl="fl.controls:ComboBox:addItemAt"/>
                <string name="addItem" object="[fl.controls.ComboBox]" text=".addItem(%item:Object%):void" tiptext="Appends an item to the end of the list of items." version="1.0" playername="" helpurl="fl.controls:ComboBox:addItem"/>
                <string name="close" object="[fl.controls.ComboBox]" text=".close(%%):void" tiptext="Closes the drop-down list." version="1.0" playername="" helpurl="fl.controls:ComboBox:close"/>
                <string name="getItemAt" object="[fl.controls.ComboBox]" text=".getItemAt(%index:uint%):Object" tiptext="Retrieves the item at the specified index." version="1.0" playername="" helpurl="fl.controls:ComboBox:getItemAt"/>
                <string name="getStyleDefinition" object="[fl.controls.ComboBox]" text="ComboBox.getStyleDefinition(%%):Object" static="true" tiptext="Retrieves the default style map for the current component." version="1.0" playername="" helpurl="fl.controls:ComboBox:getStyleDefinition"/>
                <string name="itemToLabel" object="[fl.controls.ComboBox]" text=".itemToLabel(%item:Object%):String" tiptext="Retrieves the string that the renderer displays for the given data object based on the labelField and labelFunction properties." version="1.0" playername="" helpurl="fl.controls:ComboBox:itemToLabel"/>
                <string name="open" object="[fl.controls.ComboBox]" text=".open(%%):void" tiptext="Opens the drop-down list." version="1.0" playername="" helpurl="fl.controls:ComboBox:open"/>
                <string name="removeAll" object="[fl.controls.ComboBox]" text=".removeAll(%%):void" tiptext="Removes all items from the list." version="1.0" playername="" helpurl="fl.controls:ComboBox:removeAll"/>
                <string name="removeItemAt" object="[fl.controls.ComboBox]" text=".removeItemAt(%index:uint%):void" tiptext="Removes the item at the specified index position." version="1.0" playername="" helpurl="fl.controls:ComboBox:removeItemAt"/>
                <string name="removeItem" object="[fl.controls.ComboBox]" text=".removeItem(%item:Object%):Object" tiptext="Removes the specified item from the list." version="1.0" playername="" helpurl="fl.controls:ComboBox:removeItem"/>
                <string name="replaceItemAt" object="[fl.controls.ComboBox]" text=".replaceItemAt(%item:Object,index:uint%):Object" tiptext="Replaces the item at the specified index location with another item." version="1.0" playername="" helpurl="fl.controls:ComboBox:replaceItemAt"/>
                <string name="sortItemsOn" object="[fl.controls.ComboBox]" text=".sortItemsOn(%field:String[,options:Object=null]%)" tiptext="Sorts the elements of the current data provider by one or more of its fields." version="1.0" playername="" helpurl="fl.controls:ComboBox:sortItemsOn"/>
                <string name="sortItems" object="[fl.controls.ComboBox]" text=".sortItems(%sortArgs:restParam%)" tiptext="Sorts the elements of the current data provider." version="1.0" playername="" helpurl="fl.controls:ComboBox:sortItems"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class ComboBox" helpurl="fl.controls:ComboBox">
                <string name="dataProvider" object="[fl.controls.ComboBox]" text=".dataProvider" tiptext="Gets or sets the data model of the list of items to be viewed." version="" playername="" helpurl="fl.controls:ComboBox:dataProvider:get"/>
                <string name="dropdownWidth" object="[fl.controls.ComboBox]" text=".dropdownWidth" tiptext="Gets or sets the maximum width of the drop-down list, in pixels." version="" playername="" helpurl="fl.controls:ComboBox:dropdownWidth:get"/>
                <string name="dropdown" object="[fl.controls.ComboBox]" text=".dropdown" tiptext="Gets a reference to the List component that the ComboBox component contains." version="" playername="" helpurl="fl.controls:ComboBox:dropdown:get"/>
                <string name="editable" object="[fl.controls.ComboBox]" text=".editable" tiptext="Gets or sets a Boolean value that indicates whether the ComboBox component is editable or read-only." version="" playername="" helpurl="fl.controls:ComboBox:editable:get"/>
                <string name="labelField" object="[fl.controls.ComboBox]" text=".labelField" tiptext="Gets or sets the name of the field in the dataProvider object to be displayed as the label for the TextInput field and drop-down list." version="" playername="" helpurl="fl.controls:ComboBox:labelField:get"/>
                <string name="labelFunction" object="[fl.controls.ComboBox]" text=".labelFunction" tiptext="Gets or sets the function to be used to obtain the label for the item." version="" playername="" helpurl="fl.controls:ComboBox:labelFunction:get"/>
                <string name="length" object="[fl.controls.ComboBox]" text=".length" tiptext="Gets the number of items in the list." version="" playername="" helpurl="fl.controls:ComboBox:length:get"/>
                <string name="prompt" object="[fl.controls.ComboBox]" text=".prompt" tiptext="Gets or sets the prompt for the ComboBox component." version="" playername="" helpurl="fl.controls:ComboBox:prompt:get"/>
                <string name="restrict" object="[fl.controls.ComboBox]" text=".restrict" tiptext="Gets or sets the characters that a user can enter in the text field." version="" playername="" helpurl="fl.controls:ComboBox:restrict:get"/>
                <string name="rowCount" object="[fl.controls.ComboBox]" text=".rowCount" tiptext="Gets or sets the maximum number of rows that can appear in a drop-down  list that does not have a scroll bar." version="" playername="" helpurl="fl.controls:ComboBox:rowCount:get"/>
                <string name="selectedIndex" object="[fl.controls.ComboBox]" text=".selectedIndex" tiptext="Gets or sets the index of the item that is selected in a single-selection list." version="" playername="" helpurl="fl.controls:ComboBox:selectedIndex:get"/>
                <string name="selectedItem" object="[fl.controls.ComboBox]" text=".selectedItem" tiptext="Gets or sets the value of the item that is selected in the drop-down list." version="" playername="" helpurl="fl.controls:ComboBox:selectedItem:get"/>
                <string name="selectedLabel" object="[fl.controls.ComboBox]" text=".selectedLabel" tiptext="Gets the string that is displayed in the TextInput portion of the ComboBox component." version="" playername="" helpurl="fl.controls:ComboBox:selectedLabel:get"/>
                <string name="textField" object="[fl.controls.ComboBox]" text=".textField" tiptext="Gets a reference to the TextInput component that the ComboBox component contains." version="" playername="" helpurl="fl.controls:ComboBox:textField:get"/>
                <string name="text" object="[fl.controls.ComboBox]" text=".text" tiptext="Gets or sets the text that the text box contains in an editable ComboBox component." version="" playername="" helpurl="fl.controls:ComboBox:text:get"/>
                <string name="value" object="[fl.controls.ComboBox]" text=".value" tiptext="Gets the label of an item in an editable ComboBox component." version="" playername="" helpurl="fl.controls:ComboBox:value:get"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class ComboBox" helpurl="fl.controls:ComboBox">
                <string name="scroll" object="[fl.controls.ComboBox]" text=".addEventListener(%type:String=ScrollEvent.SCROLL{ScrollEvent.SCROLL,Event.OPEN,ComponentEvent.ENTER,Event.CLOSE,ListEvent.ITEM_ROLL_OUT,ListEvent.ITEM_ROLL_OVER,Event.CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user scrolls the drop-down list of the ComboBox component." version="" playername="" helpurl="fl.controls:ComboBox_fl.events.ScrollEvent.SCROLL_scroll"/>
                <string name="open" object="[fl.controls.ComboBox]" text=".addEventListener(%type:String=Event.OPEN{ScrollEvent.SCROLL,Event.OPEN,ComponentEvent.ENTER,Event.CLOSE,ListEvent.ITEM_ROLL_OUT,ListEvent.ITEM_ROLL_OVER,Event.CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user clicks the drop-down button to display the drop-down list." version="" playername="" helpurl="fl.controls:ComboBox_flash.events.Event.OPEN_open"/>
                <string name="enter" object="[fl.controls.ComboBox]" text=".addEventListener(%type:String=ComponentEvent.ENTER{ScrollEvent.SCROLL,Event.OPEN,ComponentEvent.ENTER,Event.CLOSE,ListEvent.ITEM_ROLL_OUT,ListEvent.ITEM_ROLL_OVER,Event.CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched if the editable property is set to true and the user presses the Enter key while typing in the editable text field." version="" playername="" helpurl="fl.controls:ComboBox_fl.events.ComponentEvent.ENTER_enter"/>
                <string name="close" object="[fl.controls.ComboBox]" text=".addEventListener(%type:String=Event.CLOSE{ScrollEvent.SCROLL,Event.OPEN,ComponentEvent.ENTER,Event.CLOSE,ListEvent.ITEM_ROLL_OUT,ListEvent.ITEM_ROLL_OVER,Event.CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the drop-down list is dismissed for any reason." version="" playername="" helpurl="fl.controls:ComboBox_flash.events.Event.CLOSE_close"/>
                <string name="itemRollOut" object="[fl.controls.ComboBox]" text=".addEventListener(%type:String=ListEvent.ITEM_ROLL_OUT{ScrollEvent.SCROLL,Event.OPEN,ComponentEvent.ENTER,Event.CLOSE,ListEvent.ITEM_ROLL_OUT,ListEvent.ITEM_ROLL_OVER,Event.CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user rolls the pointer off of an item in the component." version="" playername="" helpurl="fl.controls:ComboBox_fl.events.ListEvent.ITEM_ROLL_OUT_itemRollOut"/>
                <string name="itemRollOver" object="[fl.controls.ComboBox]" text=".addEventListener(%type:String=ListEvent.ITEM_ROLL_OVER{ScrollEvent.SCROLL,Event.OPEN,ComponentEvent.ENTER,Event.CLOSE,ListEvent.ITEM_ROLL_OUT,ListEvent.ITEM_ROLL_OVER,Event.CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user rolls the pointer over an item in the component." version="" playername="" helpurl="fl.controls:ComboBox_fl.events.ListEvent.ITEM_ROLL_OVER_itemRollOver"/>
                <string name="change" object="[fl.controls.ComboBox]" text=".addEventListener(%type:String=Event.CHANGE{ScrollEvent.SCROLL,Event.OPEN,ComponentEvent.ENTER,Event.CLOSE,ListEvent.ITEM_ROLL_OUT,ListEvent.ITEM_ROLL_OVER,Event.CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user changes the selection in the ComboBox component or, if the ComboBox component is editable, each time the user enters a keystroke in the text field." version="" playername="" helpurl="fl.controls:ComboBox_flash.events.Event.CHANGE_change"/>
            </folder>
        </folder>
        <folder name="DataGrid" id="[fl.controls.DataGrid]" sort="true" index="true" asAncestors="fl.controls:SelectableList,fl.containers:BaseScrollPane,fl.core:UIComponent,flash.display:Sprite,flash.display:DisplayObjectContainer,flash.display:InteractiveObject,flash.display:DisplayObject,flash.events:EventDispatcher,Object" tiptext="The DataGrid class is a list-based component that provides a grid of rows and columns." helpurl="fl.controls:DataGrid">
            <folder name="Methods" id="Methods" tiptext="Methods for class DataGrid" helpurl="fl.controls:DataGrid">
                <string name="DataGrid" object="[fl.controls.DataGrid]" text="new DataGrid(%%)" constructor="true" tiptext="Creates a new DataGrid component instance." version="1.0" playername="" helpurl="fl.controls:DataGrid:DataGrid"/>
                <string name="addColumnAt" object="[fl.controls.DataGrid]" text=".addColumnAt(%column:*,index:uint%):fl.controls.dataGridClasses:DataGridColumn" tiptext="Inserts a column at the specified index in the columns array." version="1.0" playername="" helpurl="fl.controls:DataGrid:addColumnAt"/>
                <string name="addColumn" object="[fl.controls.DataGrid]" text=".addColumn(%column:*%):fl.controls.dataGridClasses:DataGridColumn" tiptext="Adds a column to the end of the columns array." version="1.0" playername="" helpurl="fl.controls:DataGrid:addColumn"/>
                <string name="createItemEditor" object="[fl.controls.DataGrid]" text=".createItemEditor(%colIndex:uint,rowIndex:uint%):void" tiptext="Uses the editor specified by the itemEditor property to create an item editor for the item renderer at the column and row index identified by the editedItemPosition property." version="1.0" playername="" helpurl="fl.controls:DataGrid:createItemEditor"/>
                <string name="destroyItemEditor" object="[fl.controls.DataGrid]" text=".destroyItemEditor(%%):void" tiptext="Closes an item editor that is currently open on an item renderer." version="1.0" playername="" helpurl="fl.controls:DataGrid:destroyItemEditor"/>
                <string name="editField" object="[fl.controls.DataGrid]" text=".editField(%index:uint,dataField:String,data:Object%):void" tiptext="Edits a given field or property in the DataGrid component." version="1.0" playername="" helpurl="fl.controls:DataGrid:editField"/>
                <string name="getCellRendererAt" object="[fl.controls.DataGrid]" text=".getCellRendererAt(%row:uint,column:uint%):fl.controls.listClasses:ICellRenderer" tiptext="Get the instance of a cell renderer at the specified position in the DataGrid." version="1.0" playername="" helpurl="fl.controls:DataGrid:getCellRendererAt"/>
                <string name="getColumnAt" object="[fl.controls.DataGrid]" text=".getColumnAt(%index:uint%):fl.controls.dataGridClasses:DataGridColumn" tiptext="Retrieves the column that is located at the specified index of the columns array." version="1.0" playername="" helpurl="fl.controls:DataGrid:getColumnAt"/>
                <string name="getColumnCount" object="[fl.controls.DataGrid]" text=".getColumnCount(%%):uint" tiptext="Retrieves the number of columns in the DataGrid component." version="1.0" playername="" helpurl="fl.controls:DataGrid:getColumnCount"/>
                <string name="getColumnIndex" object="[fl.controls.DataGrid]" text=".getColumnIndex(%name:String%):int" tiptext="Retrieves the index of the column of the specified name, or -1 if no match is found." version="1.0" playername="" helpurl="fl.controls:DataGrid:getColumnIndex"/>
                <string name="getStyleDefinition" object="[fl.controls.DataGrid]" text="DataGrid.getStyleDefinition(%%):Object" static="true" tiptext="Retrieves the default style map for the current component." version="1.0" playername="" helpurl="fl.controls:DataGrid:getStyleDefinition"/>
                <string name="itemToCellRenderer" object="[fl.controls.DataGrid]" text=".itemToCellRenderer(%item:Object%):fl.controls.listClasses:ICellRenderer" tiptext="The DataGrid component has multiple cells for any given item, so the itemToCellRenderer method always returns null." version="1.0" playername="" helpurl="fl.controls:DataGrid:itemToCellRenderer"/>
                <string name="removeAllColumns" object="[fl.controls.DataGrid]" text=".removeAllColumns(%%):void" tiptext="Removes all columns from the DataGrid component." version="1.0" playername="" helpurl="fl.controls:DataGrid:removeAllColumns"/>
                <string name="removeColumnAt" object="[fl.controls.DataGrid]" text=".removeColumnAt(%index:uint%):fl.controls.dataGridClasses:DataGridColumn" tiptext="Removes the column that is located at the specified index of the columns array." version="1.0" playername="" helpurl="fl.controls:DataGrid:removeColumnAt"/>
                <string name="scrollToIndex" object="[fl.controls.DataGrid]" text=".scrollToIndex(%newCaretIndex:int%):void" tiptext="Scrolls the list to the item at the specified index." version="1.0" playername="" helpurl="fl.controls:DataGrid:scrollToIndex"/>
                <string name="spaceColumnsEqually" object="[fl.controls.DataGrid]" text=".spaceColumnsEqually(%%):void" tiptext="Resets the widths of the visible columns to the same size." version="1.0" playername="" helpurl="fl.controls:DataGrid:spaceColumnsEqually"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class DataGrid" helpurl="fl.controls:DataGrid">
                <string name="editable" object="[fl.controls.DataGrid]" text=".editable" tiptext="Indicates whether or not the user can edit items in the data provider." version="" playername="" helpurl="fl.controls:DataGrid:editable"/>
                <string name="itemEditorInstance" object="[fl.controls.DataGrid]" text=".itemEditorInstance" tiptext="A reference to the currently active instance of the item editor, if one exists." version="" playername="" helpurl="fl.controls:DataGrid:itemEditorInstance"/>
                <string name="resizableColumns" object="[fl.controls.DataGrid]" text=".resizableColumns" tiptext="Indicates whether the user can change the size of the columns." version="" playername="" helpurl="fl.controls:DataGrid:resizableColumns"/>
                <string name="sortableColumns" object="[fl.controls.DataGrid]" text=".sortableColumns" tiptext="Indicates whether the user can sort the items in the data provider by clicking on a column header cell." version="" playername="" helpurl="fl.controls:DataGrid:sortableColumns"/>
                <string name="columns" object="[fl.controls.DataGrid]" text=".columns" tiptext="Gets or sets an array of DataGridColumn objects, one for each column that can be displayed." version="" playername="" helpurl="fl.controls:DataGrid:columns:get"/>
                <string name="editedItemPosition" object="[fl.controls.DataGrid]" text=".editedItemPosition" tiptext="Gets or sets the column and row index of the item renderer for the data provider item that is being edited." version="" playername="" helpurl="fl.controls:DataGrid:editedItemPosition:get"/>
                <string name="editedItemRenderer" object="[fl.controls.DataGrid]" text=".editedItemRenderer" tiptext="Gets a reference to the item renderer in the DataGrid component whose item is currently being edited." version="" playername="" helpurl="fl.controls:DataGrid:editedItemRenderer:get"/>
                <string name="headerHeight" object="[fl.controls.DataGrid]" text=".headerHeight" tiptext="Gets or sets the height of the DataGrid header, in pixels." version="" playername="" helpurl="fl.controls:DataGrid:headerHeight:get"/>
                <string name="horizontalScrollPolicy" object="[fl.controls.DataGrid]" text=".horizontalScrollPolicy" tiptext="Gets or sets a Boolean value that indicates whether the horizontal scroll bar is always on." version="" playername="" helpurl="fl.controls:DataGrid:horizontalScrollPolicy:get"/>
                <string name="imeMode" object="[fl.controls.DataGrid]" text=".imeMode" tiptext="Gets or sets the mode of the input method editor (IME)." version="" playername="" helpurl="fl.controls:DataGrid:imeMode:get"/>
                <string name="labelFunction" object="[fl.controls.DataGrid]" text=".labelFunction" tiptext="Gets or sets a function that determines which fields of each item to use for the label text." version="" playername="" helpurl="fl.controls:DataGrid:labelFunction:get"/>
                <string name="minColumnWidth" object="[fl.controls.DataGrid]" text=".minColumnWidth" tiptext="Gets or sets the minimum width of a DataGrid column, in pixels." version="" playername="" helpurl="fl.controls:DataGrid:minColumnWidth:get"/>
                <string name="rowCount" object="[fl.controls.DataGrid]" text=".rowCount" tiptext="Gets or sets the number of rows that are at least partially visible in the list." version="" playername="" helpurl="fl.controls:DataGrid:rowCount:get"/>
                <string name="rowHeight" object="[fl.controls.DataGrid]" text=".rowHeight" tiptext="Gets or sets the height of each row in the DataGrid component, in pixels." version="" playername="" helpurl="fl.controls:DataGrid:rowHeight:get"/>
                <string name="showHeaders" object="[fl.controls.DataGrid]" text=".showHeaders" tiptext="Gets or sets a Boolean value that indicates whether the DataGrid component shows column headers." version="" playername="" helpurl="fl.controls:DataGrid:showHeaders:get"/>
                <string name="sortDescending" object="[fl.controls.DataGrid]" text=".sortDescending" tiptext="Gets the order in which a column is sorted when the user clicks its header." version="" playername="" helpurl="fl.controls:DataGrid:sortDescending:get"/>
                <string name="sortIndex" object="[fl.controls.DataGrid]" text=".sortIndex" tiptext="Gets the index of the column to be sorted." version="" playername="" helpurl="fl.controls:DataGrid:sortIndex:get"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class DataGrid" helpurl="fl.controls:DataGrid">
                <string name="itemFocusOut" object="[fl.controls.DataGrid]" text=".addEventListener(%type:String=DataGridEvent.ITEM_FOCUS_OUT{DataGridEvent.ITEM_FOCUS_OUT,DataGridEvent.ITEM_FOCUS_IN,DataGridEvent.ITEM_EDIT_END,DataGridEvent.ITEM_EDIT_BEGIN,DataGridEvent.ITEM_EDIT_BEGINNING,DataGridEvent.COLUMN_STRETCH,DataGridEvent.HEADER_RELEASE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched after an item loses focus." version="" playername="" helpurl="fl.controls:DataGrid_fl.events.DataGridEvent.ITEM_FOCUS_OUT_itemFocusOut"/>
                <string name="itemFocusIn" object="[fl.controls.DataGrid]" text=".addEventListener(%type:String=DataGridEvent.ITEM_FOCUS_IN{DataGridEvent.ITEM_FOCUS_OUT,DataGridEvent.ITEM_FOCUS_IN,DataGridEvent.ITEM_EDIT_END,DataGridEvent.ITEM_EDIT_BEGIN,DataGridEvent.ITEM_EDIT_BEGINNING,DataGridEvent.COLUMN_STRETCH,DataGridEvent.HEADER_RELEASE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched after an item receives focus." version="" playername="" helpurl="fl.controls:DataGrid_fl.events.DataGridEvent.ITEM_FOCUS_IN_itemFocusIn"/>
                <string name="itemEditEnd" object="[fl.controls.DataGrid]" text=".addEventListener(%type:String=DataGridEvent.ITEM_EDIT_END{DataGridEvent.ITEM_FOCUS_OUT,DataGridEvent.ITEM_FOCUS_IN,DataGridEvent.ITEM_EDIT_END,DataGridEvent.ITEM_EDIT_BEGIN,DataGridEvent.ITEM_EDIT_BEGINNING,DataGridEvent.COLUMN_STRETCH,DataGridEvent.HEADER_RELEASE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when an item editing session ends for any reason." version="" playername="" helpurl="fl.controls:DataGrid_fl.events.DataGridEvent.ITEM_EDIT_END_itemEditEnd"/>
                <string name="itemEditBegin" object="[fl.controls.DataGrid]" text=".addEventListener(%type:String=DataGridEvent.ITEM_EDIT_BEGIN{DataGridEvent.ITEM_FOCUS_OUT,DataGridEvent.ITEM_FOCUS_IN,DataGridEvent.ITEM_EDIT_END,DataGridEvent.ITEM_EDIT_BEGIN,DataGridEvent.ITEM_EDIT_BEGINNING,DataGridEvent.COLUMN_STRETCH,DataGridEvent.HEADER_RELEASE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched after the editedItemPosition property is set and the item can be edited." version="" playername="" helpurl="fl.controls:DataGrid_fl.events.DataGridEvent.ITEM_EDIT_BEGIN_itemEditBegin"/>
                <string name="itemEditBeginning" object="[fl.controls.DataGrid]" text=".addEventListener(%type:String=DataGridEvent.ITEM_EDIT_BEGINNING{DataGridEvent.ITEM_FOCUS_OUT,DataGridEvent.ITEM_FOCUS_IN,DataGridEvent.ITEM_EDIT_END,DataGridEvent.ITEM_EDIT_BEGIN,DataGridEvent.ITEM_EDIT_BEGINNING,DataGridEvent.COLUMN_STRETCH,DataGridEvent.HEADER_RELEASE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched after a user prepares to edit an item, for example, by releasing the mouse button over the item." version="" playername="" helpurl="fl.controls:DataGrid_fl.events.DataGridEvent.ITEM_EDIT_BEGINNING_itemEditBeginning"/>
                <string name="columnStretch" object="[fl.controls.DataGrid]" text=".addEventListener(%type:String=DataGridEvent.COLUMN_STRETCH{DataGridEvent.ITEM_FOCUS_OUT,DataGridEvent.ITEM_FOCUS_IN,DataGridEvent.ITEM_EDIT_END,DataGridEvent.ITEM_EDIT_BEGIN,DataGridEvent.ITEM_EDIT_BEGINNING,DataGridEvent.COLUMN_STRETCH,DataGridEvent.HEADER_RELEASE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched after a user expands a column horizontally." version="" playername="" helpurl="fl.controls:DataGrid_fl.events.DataGridEvent.COLUMN_STRETCH_columnStretch"/>
                <string name="headerRelease" object="[fl.controls.DataGrid]" text=".addEventListener(%type:String=DataGridEvent.HEADER_RELEASE{DataGridEvent.ITEM_FOCUS_OUT,DataGridEvent.ITEM_FOCUS_IN,DataGridEvent.ITEM_EDIT_END,DataGridEvent.ITEM_EDIT_BEGIN,DataGridEvent.ITEM_EDIT_BEGINNING,DataGridEvent.COLUMN_STRETCH,DataGridEvent.HEADER_RELEASE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched after the user clicks a header cell." version="" playername="" helpurl="fl.controls:DataGrid_fl.events.DataGridEvent.HEADER_RELEASE_headerRelease"/>
            </folder>
        </folder>
        <folder name="Label" id="[fl.controls.Label]" sort="true" index="true" asAncestors="fl.core:UIComponent,flash.display:Sprite,flash.display:DisplayObjectContainer,flash.display:InteractiveObject,flash.display:DisplayObject,flash.events:EventDispatcher,Object" tiptext="A Label component displays one or more lines of plain or HTML-formatted text that can be formatted for alignment and size." helpurl="fl.controls:Label">
            <folder name="Methods" id="Methods" tiptext="Methods for class Label" helpurl="fl.controls:Label">
                <string name="Label" object="[fl.controls.Label]" text="new Label(%%)" constructor="true" tiptext="Creates a new Label component instance." version="1.0" playername="" helpurl="fl.controls:Label:Label"/>
                <string name="getStyleDefinition" object="[fl.controls.Label]" text="Label.getStyleDefinition(%%):Object" static="true" tiptext="Retrieves the default style map for the current component." version="1.0" playername="" helpurl="fl.controls:Label:getStyleDefinition"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class Label" helpurl="fl.controls:Label">
                <string name="textField" object="[fl.controls.Label]" text=".textField" tiptext="A reference to the internal text field of the Label component." version="" playername="" helpurl="fl.controls:Label:textField"/>
                <string name="autoSize" object="[fl.controls.Label]" text=".autoSize" tiptext="Gets or sets a string that indicates how a label is sized and aligned to fit the value of its text property." version="" playername="" helpurl="fl.controls:Label:autoSize:get"/>
                <string name="condenseWhite" object="[fl.controls.Label]" text=".condenseWhite" tiptext="Gets or sets a value that indicates whether extra white space such as spaces and line breaks should be removed from a Label component that contains HTML text." version="" playername="" helpurl="fl.controls:Label:condenseWhite:get"/>
                <string name="height" object="[fl.controls.Label]" text=".height" tiptext="Gets or sets the height of the component, in pixels." version="" playername="" helpurl="fl.controls:Label:height:get"/>
                <string name="htmlText" object="[fl.controls.Label]" text=".htmlText" tiptext="Gets or sets the text to be displayed by the Label component, including HTML markup that expresses the styles of that text." version="" playername="" helpurl="fl.controls:Label:htmlText:get"/>
                <string name="selectable" object="[fl.controls.Label]" text=".selectable" tiptext="Gets or sets a value that indicates whether the text can be selected." version="" playername="" helpurl="fl.controls:Label:selectable:get"/>
                <string name="text" object="[fl.controls.Label]" text=".text" tiptext="Gets or sets the plain text to be displayed by the Label component." version="" playername="" helpurl="fl.controls:Label:text:get"/>
                <string name="width" object="[fl.controls.Label]" text=".width" tiptext="Gets or sets the width of the component, in pixels." version="" playername="" helpurl="fl.controls:Label:width:get"/>
                <string name="wordWrap" object="[fl.controls.Label]" text=".wordWrap" tiptext="Gets or sets a value that indicates whether the text field supports word wrapping." version="" playername="" helpurl="fl.controls:Label:wordWrap:get"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class Label" helpurl="fl.controls:Label">
                <string name="resize" object="[fl.controls.Label]" text=".addEventListener(%type:String=ComponentEvent.RESIZE{ComponentEvent.RESIZE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched after there is a change in the width or height of the component." version="" playername="" helpurl="fl.controls:Label_fl.events.ComponentEvent.RESIZE_resize"/>
            </folder>
        </folder>
        <folder name="LabelButton" id="[fl.controls.LabelButton]" sort="true" index="true" asAncestors="fl.controls:BaseButton,fl.core:UIComponent,flash.display:Sprite,flash.display:DisplayObjectContainer,flash.display:InteractiveObject,flash.display:DisplayObject,flash.events:EventDispatcher,Object" tiptext="The LabelButton class is an abstract class that extends the BaseButton class by adding a label, an icon, and toggle functionality." helpurl="fl.controls:LabelButton">
            <folder name="Methods" id="Methods" tiptext="Methods for class LabelButton" helpurl="fl.controls:LabelButton">
                <string name="LabelButton" object="[fl.controls.LabelButton]" text="new LabelButton(%%)" constructor="true" tiptext="Creates a new LabelButton component instance." version="1.0" playername="" helpurl="fl.controls:LabelButton:LabelButton"/>
                <string name="getStyleDefinition" object="[fl.controls.LabelButton]" text="LabelButton.getStyleDefinition(%%):Object" static="true" tiptext="Retrieves the default style map for the current component." version="1.0" playername="" helpurl="fl.controls:LabelButton:getStyleDefinition"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class LabelButton" helpurl="fl.controls:LabelButton">
                <string name="textField" object="[fl.controls.LabelButton]" text=".textField" tiptext="A reference to the component&apos;s internal text field." version="" playername="" helpurl="fl.controls:LabelButton:textField"/>
                <string name="labelPlacement" object="[fl.controls.LabelButton]" text=".labelPlacement" tiptext="Position of the label in relation to a specified icon." version="" playername="" helpurl="fl.controls:LabelButton:labelPlacement:get"/>
                <string name="label" object="[fl.controls.LabelButton]" text=".label" tiptext="Gets or sets the text label for the component." version="" playername="" helpurl="fl.controls:LabelButton:label:get"/>
                <string name="selected" object="[fl.controls.LabelButton]" text=".selected" tiptext="Gets or sets a Boolean value that indicates whether a toggle button is toggled in the on or off position." version="" playername="" helpurl="fl.controls:LabelButton:selected:get"/>
                <string name="toggle" object="[fl.controls.LabelButton]" text=".toggle" tiptext="Gets or sets a Boolean value that indicates whether a button can be toggled." version="" playername="" helpurl="fl.controls:LabelButton:toggle:get"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class LabelButton" helpurl="fl.controls:LabelButton">
                <string name="labelChange" object="[fl.controls.LabelButton]" text=".addEventListener(%type:String=ComponentEvent.LABEL_CHANGE{ComponentEvent.LABEL_CHANGE,MouseEvent.CLICK},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched after the label value changes." version="" playername="" helpurl="fl.controls:LabelButton_fl.events.ComponentEvent.LABEL_CHANGE_labelChange"/>
                <string name="click" object="[fl.controls.LabelButton]" text=".addEventListener(%type:String=MouseEvent.CLICK{ComponentEvent.LABEL_CHANGE,MouseEvent.CLICK},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched after the toggle button receives input from a mouse device or from the spacebar." version="" playername="" helpurl="fl.controls:LabelButton_flash.events.MouseEvent.CLICK_click"/>
            </folder>
        </folder>
        <folder name="List" id="[fl.controls.List]" sort="true" index="true" asAncestors="fl.controls:SelectableList,fl.containers:BaseScrollPane,fl.core:UIComponent,flash.display:Sprite,flash.display:DisplayObjectContainer,flash.display:InteractiveObject,flash.display:DisplayObject,flash.events:EventDispatcher,Object" tiptext="The List component displays list-based information and is ideally suited for the display of arrays of information." helpurl="fl.controls:List">
            <folder name="Methods" id="Methods" tiptext="Methods for class List" helpurl="fl.controls:List">
                <string name="List" object="[fl.controls.List]" text="new List(%%)" constructor="true" tiptext="Creates a new List component instance." version="1.0" playername="" helpurl="fl.controls:List:List"/>
                <string name="getStyleDefinition" object="[fl.controls.List]" text="List.getStyleDefinition(%%):Object" static="true" tiptext="Retrieves the default style map for the current component." version="1.0" playername="" helpurl="fl.controls:List:getStyleDefinition"/>
                <string name="itemToLabel" object="[fl.controls.List]" text=".itemToLabel(%item:Object%):String" tiptext="Retrieves the string that the renderer displays for the given data object based on the labelField and labelFunction properties." version="1.0" playername="" helpurl="fl.controls:List:itemToLabel"/>
                <string name="scrollToIndex" object="[fl.controls.List]" text=".scrollToIndex(%newCaretIndex:int%):void" tiptext="Scrolls the list to the item at the specified index." version="1.0" playername="" helpurl="fl.controls:List:scrollToIndex"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class List" helpurl="fl.controls:List">
                <string name="iconField" object="[fl.controls.List]" text=".iconField" tiptext="Gets or sets the item field that provides the icon for the item." version="" playername="" helpurl="fl.controls:List:iconField:get"/>
                <string name="iconFunction" object="[fl.controls.List]" text=".iconFunction" tiptext="Gets or sets the function to be used to obtain the icon for the item." version="" playername="" helpurl="fl.controls:List:iconFunction:get"/>
                <string name="labelField" object="[fl.controls.List]" text=".labelField" tiptext="Gets or sets the name of the field in the dataProvider object to be displayed as the label for the TextInput field and drop-down list." version="" playername="" helpurl="fl.controls:List:labelField:get"/>
                <string name="labelFunction" object="[fl.controls.List]" text=".labelFunction" tiptext="Gets or sets the function to be used to obtain the label for the item." version="" playername="" helpurl="fl.controls:List:labelFunction:get"/>
                <string name="rowCount" object="[fl.controls.List]" text=".rowCount" tiptext="Gets or sets the number of rows that are at least partially visible in the list." version="" playername="" helpurl="fl.controls:List:rowCount:get"/>
                <string name="rowHeight" object="[fl.controls.List]" text=".rowHeight" tiptext="Gets or sets the height of each row in the list, in pixels." version="" playername="" helpurl="fl.controls:List:rowHeight:get"/>
            </folder>
        </folder>
        <folder name="NumericStepper" id="[fl.controls.NumericStepper]" sort="true" index="true" asAncestors="fl.core:UIComponent,flash.display:Sprite,flash.display:DisplayObjectContainer,flash.display:InteractiveObject,flash.display:DisplayObject,flash.events:EventDispatcher,Object" tiptext="The NumericStepper component displays an ordered set of numbers from which the user can make a selection." helpurl="fl.controls:NumericStepper">
            <folder name="Methods" id="Methods" tiptext="Methods for class NumericStepper" helpurl="fl.controls:NumericStepper">
                <string name="NumericStepper" object="[fl.controls.NumericStepper]" text="new NumericStepper(%%)" constructor="true" tiptext="Creates a new NumericStepper component instance." version="1.0" playername="" helpurl="fl.controls:NumericStepper:NumericStepper"/>
                <string name="drawFocus" object="[fl.controls.NumericStepper]" text=".drawFocus(%focused:Boolean%):void" tiptext="Shows or hides the focus indicator on this component." version="1.0" playername="" helpurl="fl.controls:NumericStepper:drawFocus"/>
                <string name="getStyleDefinition" object="[fl.controls.NumericStepper]" text="NumericStepper.getStyleDefinition(%%):Object" static="true" tiptext="Retrieves the default style map for the current component." version="1.0" playername="" helpurl="fl.controls:NumericStepper:getStyleDefinition"/>
                <string name="setFocus" object="[fl.controls.NumericStepper]" text=".setFocus(%%):void" tiptext="Sets focus to the component instance." version="1.0" playername="" helpurl="fl.controls:NumericStepper:setFocus"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class NumericStepper" helpurl="fl.controls:NumericStepper">
                <string name="enabled" object="[fl.controls.NumericStepper]" text=".enabled" tiptext="Gets or sets a value that indicates whether the component can accept user interaction." version="" playername="" helpurl="fl.controls:NumericStepper:enabled:get"/>
                <string name="imeMode" object="[fl.controls.NumericStepper]" text=".imeMode" tiptext="Gets or sets the mode of the input method editor (IME)." version="" playername="" helpurl="fl.controls:NumericStepper:imeMode:get"/>
                <string name="maximum" object="[fl.controls.NumericStepper]" text=".maximum" tiptext="Gets or sets the maximum value in the sequence of numeric values." version="" playername="" helpurl="fl.controls:NumericStepper:maximum:get"/>
                <string name="minimum" object="[fl.controls.NumericStepper]" text=".minimum" tiptext="Gets or sets the minimum number in the sequence of numeric values." version="" playername="" helpurl="fl.controls:NumericStepper:minimum:get"/>
                <string name="nextValue" object="[fl.controls.NumericStepper]" text=".nextValue" tiptext="Gets the next value in the sequence of values." version="" playername="" helpurl="fl.controls:NumericStepper:nextValue:get"/>
                <string name="previousValue" object="[fl.controls.NumericStepper]" text=".previousValue" tiptext="Gets the previous value in the sequence of values." version="" playername="" helpurl="fl.controls:NumericStepper:previousValue:get"/>
                <string name="stepSize" object="[fl.controls.NumericStepper]" text=".stepSize" tiptext="Gets or sets a nonzero number that describes the unit of change between values." version="" playername="" helpurl="fl.controls:NumericStepper:stepSize:get"/>
                <string name="textField" object="[fl.controls.NumericStepper]" text=".textField" tiptext="Gets a reference to the TextInput component that the NumericStepper component contains." version="" playername="" helpurl="fl.controls:NumericStepper:textField:get"/>
                <string name="value" object="[fl.controls.NumericStepper]" text=".value" tiptext="Gets or sets the current value of the NumericStepper component." version="" playername="" helpurl="fl.controls:NumericStepper:value:get"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class NumericStepper" helpurl="fl.controls:NumericStepper">
                <string name="change" object="[fl.controls.NumericStepper]" text=".addEventListener(%type:String=Event.CHANGE{Event.CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user changes the value of the NumericStepper component." version="" playername="" helpurl="fl.controls:NumericStepper_flash.events.Event.CHANGE_change"/>
            </folder>
        </folder>
        <folder name="ProgressBar" id="[fl.controls.ProgressBar]" sort="true" index="true" asAncestors="fl.core:UIComponent,flash.display:Sprite,flash.display:DisplayObjectContainer,flash.display:InteractiveObject,flash.display:DisplayObject,flash.events:EventDispatcher,Object" tiptext="The ProgressBar component displays the progress of content that is being loaded." helpurl="fl.controls:ProgressBar">
            <folder name="Methods" id="Methods" tiptext="Methods for class ProgressBar" helpurl="fl.controls:ProgressBar">
                <string name="ProgressBar" object="[fl.controls.ProgressBar]" text="new ProgressBar(%%)" constructor="true" tiptext="Creates a new ProgressBar component instance." version="1.0" playername="" helpurl="fl.controls:ProgressBar:ProgressBar"/>
                <string name="getStyleDefinition" object="[fl.controls.ProgressBar]" text="ProgressBar.getStyleDefinition(%%):Object" static="true" tiptext="Retrieves the default style map for the current component." version="1.0" playername="" helpurl="fl.controls:ProgressBar:getStyleDefinition"/>
                <string name="reset" object="[fl.controls.ProgressBar]" text=".reset(%%):void" tiptext="Resets the progress bar for a new load operation." version="1.0" playername="" helpurl="fl.controls:ProgressBar:reset"/>
                <string name="setProgress" object="[fl.controls.ProgressBar]" text=".setProgress(%value:Number,maximum:Number%):void" tiptext="Sets the state of the bar to reflect the amount of progress made when using manual mode." version="1.0" playername="" helpurl="fl.controls:ProgressBar:setProgress"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class ProgressBar" helpurl="fl.controls:ProgressBar">
                <string name="direction" object="[fl.controls.ProgressBar]" text=".direction" tiptext="Indicates the fill direction for the progress bar." version="" playername="" helpurl="fl.controls:ProgressBar:direction:get"/>
                <string name="indeterminate" object="[fl.controls.ProgressBar]" text=".indeterminate" tiptext="Gets or sets a value that indicates the type of fill that the progress bar uses and whether the loading source is known or unknown." version="" playername="" helpurl="fl.controls:ProgressBar:indeterminate:get"/>
                <string name="maximum" object="[fl.controls.ProgressBar]" text=".maximum" tiptext="Gets or sets the maximum value for the progress bar when the ProgressBar.mode property is set to ProgressBarMode.MANUAL." version="" playername="" helpurl="fl.controls:ProgressBar:maximum:get"/>
                <string name="minimum" object="[fl.controls.ProgressBar]" text=".minimum" tiptext="Gets or sets the minimum value for the progress bar when the ProgressBar.mode property is set to ProgressBarMode.MANUAL." version="" playername="" helpurl="fl.controls:ProgressBar:minimum:get"/>
                <string name="mode" object="[fl.controls.ProgressBar]" text=".mode" tiptext="Gets or sets the method to be used to update the progress bar." version="" playername="" helpurl="fl.controls:ProgressBar:mode:get"/>
                <string name="percentComplete" object="[fl.controls.ProgressBar]" text=".percentComplete" tiptext="Gets a number between 0 and 100 that indicates the percentage of the content has already loaded." version="" playername="" helpurl="fl.controls:ProgressBar:percentComplete:get"/>
                <string name="source" object="[fl.controls.ProgressBar]" text=".source" tiptext="Gets or sets a reference to the content that is being loaded and for which the ProgressBar is measuring the progress of the load operation." version="" playername="" helpurl="fl.controls:ProgressBar:source:get"/>
                <string name="value" object="[fl.controls.ProgressBar]" text=".value" tiptext="Gets or sets a value that indicates the amount of progress that has been made in the load operation." version="" playername="" helpurl="fl.controls:ProgressBar:value:get"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class ProgressBar" helpurl="fl.controls:ProgressBar">
                <string name="progress" object="[fl.controls.ProgressBar]" text=".addEventListener(%type:String=ProgressEvent.PROGRESS{ProgressEvent.PROGRESS,Event.COMPLETE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched as content loads in event mode or polled mode." version="" playername="" helpurl="fl.controls:ProgressBar_flash.events.ProgressEvent.PROGRESS_progress"/>
                <string name="complete" object="[fl.controls.ProgressBar]" text=".addEventListener(%type:String=Event.COMPLETE{ProgressEvent.PROGRESS,Event.COMPLETE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the load operation completes." version="" playername="" helpurl="fl.controls:ProgressBar_flash.events.Event.COMPLETE_complete"/>
            </folder>
        </folder>
        <folder name="ProgressBarDirection" id="[fl.controls.ProgressBarDirection]" sort="true" index="true" asAncestors="Object" tiptext="The ProgressBarDirection class defines the values for the direction property of the ProgressBar class." helpurl="fl.controls:ProgressBarDirection">
            <folder name="Properties" id="Properties" tiptext="Properties for class ProgressBarDirection" helpurl="fl.controls:ProgressBarDirection">
                <string name="LEFT" object="[fl.controls.ProgressBarDirection]" text="ProgressBarDirection.LEFT" constant="true" tiptext="Fill the progress bar from right to left." version="" playername="" helpurl="fl.controls:ProgressBarDirection:LEFT"/>
                <string name="RIGHT" object="[fl.controls.ProgressBarDirection]" text="ProgressBarDirection.RIGHT" constant="true" tiptext="Fill the progress bar from left to right." version="" playername="" helpurl="fl.controls:ProgressBarDirection:RIGHT"/>
            </folder>
        </folder>
        <folder name="ProgressBarMode" id="[fl.controls.ProgressBarMode]" sort="true" index="true" asAncestors="Object" tiptext="The ProgressBarMode class defines the values for the mode property of the ProgressBar class." helpurl="fl.controls:ProgressBarMode">
            <folder name="Properties" id="Properties" tiptext="Properties for class ProgressBarMode" helpurl="fl.controls:ProgressBarMode">
                <string name="EVENT" object="[fl.controls.ProgressBarMode]" text="ProgressBarMode.EVENT" constant="true" tiptext="The component specified by the source property must dispatch progress and complete events." version="" playername="" helpurl="fl.controls:ProgressBarMode:EVENT"/>
                <string name="MANUAL" object="[fl.controls.ProgressBarMode]" text="ProgressBarMode.MANUAL" constant="true" tiptext="Manually update the status of the ProgressBar component." version="" playername="" helpurl="fl.controls:ProgressBarMode:MANUAL"/>
                <string name="POLLED" object="[fl.controls.ProgressBarMode]" text="ProgressBarMode.POLLED" constant="true" tiptext="Progress is updated by polling the source." version="" playername="" helpurl="fl.controls:ProgressBarMode:POLLED"/>
            </folder>
        </folder>
        <folder name="RadioButton" id="[fl.controls.RadioButton]" sort="true" index="true" asAncestors="fl.controls:LabelButton,fl.controls:BaseButton,fl.core:UIComponent,flash.display:Sprite,flash.display:DisplayObjectContainer,flash.display:InteractiveObject,flash.display:DisplayObject,flash.events:EventDispatcher,Object" tiptext="The RadioButton component lets you force a user to make a single selection from a set of choices." helpurl="fl.controls:RadioButton">
            <folder name="Methods" id="Methods" tiptext="Methods for class RadioButton" helpurl="fl.controls:RadioButton">
                <string name="RadioButton" object="[fl.controls.RadioButton]" text="new RadioButton(%%)" constructor="true" tiptext="Creates a new RadioButton component instance." version="1.0" playername="" helpurl="fl.controls:RadioButton:RadioButton"/>
                <string name="drawFocus" object="[fl.controls.RadioButton]" text=".drawFocus(%focused:Boolean%):void" tiptext="Shows or hides the focus indicator around this component instance." version="1.0" playername="" helpurl="fl.controls:RadioButton:drawFocus"/>
                <string name="getStyleDefinition" object="[fl.controls.RadioButton]" text="RadioButton.getStyleDefinition(%%):Object" static="true" tiptext="Retrieves the default style map for the current component." version="1.0" playername="" helpurl="fl.controls:RadioButton:getStyleDefinition"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class RadioButton" helpurl="fl.controls:RadioButton">
                <string name="autoRepeat" object="[fl.controls.RadioButton]" text=".autoRepeat" tiptext="A radio button never auto-repeats by definition, so the autoRepeat property is set to false in the constructor and cannot be changed." version="" playername="" helpurl="fl.controls:RadioButton:autoRepeat:get"/>
                <string name="groupName" object="[fl.controls.RadioButton]" text=".groupName" tiptext="The group name for a radio button instance or group." version="" playername="" helpurl="fl.controls:RadioButton:groupName:get"/>
                <string name="group" object="[fl.controls.RadioButton]" text=".group" tiptext="The RadioButtonGroup object to which this RadioButton belongs." version="" playername="" helpurl="fl.controls:RadioButton:group:get"/>
                <string name="selected" object="[fl.controls.RadioButton]" text=".selected" tiptext="Indicates whether a radio button is currently selected (true) or deselected (false)." version="" playername="" helpurl="fl.controls:RadioButton:selected:get"/>
                <string name="toggle" object="[fl.controls.RadioButton]" text=".toggle" tiptext="A radio button is a toggle button; its toggle property is set to true in the constructor and cannot be changed." version="" playername="" helpurl="fl.controls:RadioButton:toggle:get"/>
                <string name="value" object="[fl.controls.RadioButton]" text=".value" tiptext="A user-defined value that is associated with a radio button." version="" playername="" helpurl="fl.controls:RadioButton:value:get"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class RadioButton" helpurl="fl.controls:RadioButton">
                <string name="click" object="[fl.controls.RadioButton]" text=".addEventListener(%type:String=MouseEvent.CLICK{MouseEvent.CLICK,Event.CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user clicks the radio button with the mouse or spacebar." version="" playername="" helpurl="fl.controls:RadioButton_flash.events.MouseEvent.CLICK_click"/>
                <string name="change" object="[fl.controls.RadioButton]" text=".addEventListener(%type:String=Event.CHANGE{MouseEvent.CLICK,Event.CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the radio button instance&apos;s selected property changes." version="" playername="" helpurl="fl.controls:RadioButton_flash.events.Event.CHANGE_change"/>
            </folder>
        </folder>
        <folder name="RadioButtonGroup" id="[fl.controls.RadioButtonGroup]" sort="true" index="true" asAncestors="flash.events:EventDispatcher,Object" tiptext="The RadioButtonGroup class defines a group of RadioButton components to act as a single component." helpurl="fl.controls:RadioButtonGroup">
            <folder name="Methods" id="Methods" tiptext="Methods for class RadioButtonGroup" helpurl="fl.controls:RadioButtonGroup">
                <string name="RadioButtonGroup" object="[fl.controls.RadioButtonGroup]" text="new RadioButtonGroup(%name:String%)" constructor="true" tiptext="Creates a new RadioButtonGroup instance." version="1.0" playername="" helpurl="fl.controls:RadioButtonGroup:RadioButtonGroup"/>
                <string name="addRadioButton" object="[fl.controls.RadioButtonGroup]" text=".addRadioButton(%radioButton:fl.controls:RadioButton%):void" tiptext="Adds a radio button to the internal radio button array for use with radio button group indexing, which allows for the selection of a single radio button in a group of radio buttons." version="1.0" playername="" helpurl="fl.controls:RadioButtonGroup:addRadioButton"/>
                <string name="getGroup" object="[fl.controls.RadioButtonGroup]" text="RadioButtonGroup.getGroup(%name:String%):fl.controls:RadioButtonGroup" static="true" tiptext="Retrieves a reference to the specified radio button group." version="1.0" playername="" helpurl="fl.controls:RadioButtonGroup:getGroup"/>
                <string name="getRadioButtonAt" object="[fl.controls.RadioButtonGroup]" text=".getRadioButtonAt(%index:int%):fl.controls:RadioButton" tiptext="Retrieves the RadioButton component at the specified index location." version="1.0" playername="" helpurl="fl.controls:RadioButtonGroup:getRadioButtonAt"/>
                <string name="getRadioButtonIndex" object="[fl.controls.RadioButtonGroup]" text=".getRadioButtonIndex(%radioButton:fl.controls:RadioButton%):int" tiptext="Returns the index of the specified RadioButton instance." version="1.0" playername="" helpurl="fl.controls:RadioButtonGroup:getRadioButtonIndex"/>
                <string name="removeRadioButton" object="[fl.controls.RadioButtonGroup]" text=".removeRadioButton(%radioButton:fl.controls:RadioButton%):void" tiptext="Clears the RadioButton instance from the internal list of radio buttons." version="1.0" playername="" helpurl="fl.controls:RadioButtonGroup:removeRadioButton"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class RadioButtonGroup" helpurl="fl.controls:RadioButtonGroup">
                <string name="name" object="[fl.controls.RadioButtonGroup]" text=".name" tiptext="Gets the instance name of the radio button." version="" playername="" helpurl="fl.controls:RadioButtonGroup:name:get"/>
                <string name="numRadioButtons" object="[fl.controls.RadioButtonGroup]" text=".numRadioButtons" tiptext="Gets the number of radio buttons in this radio button group." version="" playername="" helpurl="fl.controls:RadioButtonGroup:numRadioButtons:get"/>
                <string name="selectedData" object="[fl.controls.RadioButtonGroup]" text=".selectedData" tiptext="Gets or sets the selected radio button&apos;s value property." version="" playername="" helpurl="fl.controls:RadioButtonGroup:selectedData:get"/>
                <string name="selection" object="[fl.controls.RadioButtonGroup]" text=".selection" tiptext="Gets or sets a reference to the radio button that is currently selected from the radio button group." version="" playername="" helpurl="fl.controls:RadioButtonGroup:selection:get"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class RadioButtonGroup" helpurl="fl.controls:RadioButtonGroup">
                <string name="click" object="[fl.controls.RadioButtonGroup]" text=".addEventListener(%type:String=MouseEvent.CLICK{MouseEvent.CLICK,Event.CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a RadioButton instance is clicked." version="" playername="" helpurl="fl.controls:RadioButtonGroup_flash.events.MouseEvent.CLICK_click"/>
                <string name="change" object="[fl.controls.RadioButtonGroup]" text=".addEventListener(%type:String=Event.CHANGE{MouseEvent.CLICK,Event.CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the selected RadioButton instance in a group changes." version="" playername="" helpurl="fl.controls:RadioButtonGroup_flash.events.Event.CHANGE_change"/>
            </folder>
        </folder>
        <folder name="ScrollBar" id="[fl.controls.ScrollBar]" sort="true" index="true" asAncestors="fl.core:UIComponent,flash.display:Sprite,flash.display:DisplayObjectContainer,flash.display:InteractiveObject,flash.display:DisplayObject,flash.events:EventDispatcher,Object" tiptext="The ScrollBar component provides the end user with a way to control the portion of data that is displayed when there is too much data to fit in the display area." helpurl="fl.controls:ScrollBar">
            <folder name="Methods" id="Methods" tiptext="Methods for class ScrollBar" helpurl="fl.controls:ScrollBar">
                <string name="ScrollBar" object="[fl.controls.ScrollBar]" text="new ScrollBar(%%)" constructor="true" tiptext="Creates a new ScrollBar component instance." version="1.0" playername="" helpurl="fl.controls:ScrollBar:ScrollBar"/>
                <string name="getStyleDefinition" object="[fl.controls.ScrollBar]" text="ScrollBar.getStyleDefinition(%%):Object" static="true" tiptext="Retrieves the default style map for the current component." version="1.0" playername="" helpurl="fl.controls:ScrollBar:getStyleDefinition"/>
                <string name="setScrollProperties" object="[fl.controls.ScrollBar]" text=".setScrollProperties(%pageSize:Number,minScrollPosition:Number,maxScrollPosition:Number[,pageScrollSize:Number=0]%):void" tiptext="Sets the range and viewport size of the ScrollBar component." version="1.0" playername="" helpurl="fl.controls:ScrollBar:setScrollProperties"/>
                <string name="setSize" object="[fl.controls.ScrollBar]" text=".setSize(%width:Number,height:Number%):void" tiptext="Sets the component to the specified width and height." version="1.0" playername="" helpurl="fl.controls:ScrollBar:setSize"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class ScrollBar" helpurl="fl.controls:ScrollBar">
                <string name="direction" object="[fl.controls.ScrollBar]" text=".direction" tiptext="Gets or sets a value that indicates whether the scroll bar scrolls horizontally or vertically." version="" playername="" helpurl="fl.controls:ScrollBar:direction:get"/>
                <string name="enabled" object="[fl.controls.ScrollBar]" text=".enabled" tiptext="Gets or sets a Boolean value that indicates whether the scroll bar is enabled." version="" playername="" helpurl="fl.controls:ScrollBar:enabled:get"/>
                <string name="height" object="[fl.controls.ScrollBar]" text=".height" tiptext="Gets or sets the height of the component, in pixels." version="" playername="" helpurl="fl.controls:ScrollBar:height:get"/>
                <string name="lineScrollSize" object="[fl.controls.ScrollBar]" text=".lineScrollSize" tiptext="Gets or sets a value that represents the increment by which to scroll the page when the scroll bar track is pressed." version="" playername="" helpurl="fl.controls:ScrollBar:lineScrollSize:get"/>
                <string name="maxScrollPosition" object="[fl.controls.ScrollBar]" text=".maxScrollPosition" tiptext="Gets or sets a number that represents the maximum scroll position." version="" playername="" helpurl="fl.controls:ScrollBar:maxScrollPosition:get"/>
                <string name="minScrollPosition" object="[fl.controls.ScrollBar]" text=".minScrollPosition" tiptext="Gets or sets a number that represents the minimum scroll position." version="" playername="" helpurl="fl.controls:ScrollBar:minScrollPosition:get"/>
                <string name="pageScrollSize" object="[fl.controls.ScrollBar]" text=".pageScrollSize" tiptext="Gets or sets a value that represents the increment by which the page is scrolled when the scroll bar track is pressed." version="" playername="" helpurl="fl.controls:ScrollBar:pageScrollSize:get"/>
                <string name="pageSize" object="[fl.controls.ScrollBar]" text=".pageSize" tiptext="Gets or sets the number of lines that a page contains." version="" playername="" helpurl="fl.controls:ScrollBar:pageSize:get"/>
                <string name="scrollPosition" object="[fl.controls.ScrollBar]" text=".scrollPosition" tiptext="Gets or sets the current scroll position and updates the position of the thumb." version="" playername="" helpurl="fl.controls:ScrollBar:scrollPosition:get"/>
                <string name="width" object="[fl.controls.ScrollBar]" text=".width" tiptext="Gets or sets the width of the component, in pixels." version="" playername="" helpurl="fl.controls:ScrollBar:width:get"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class ScrollBar" helpurl="fl.controls:ScrollBar">
                <string name="scroll" object="[fl.controls.ScrollBar]" text=".addEventListener(%type:String=ScrollEvent.SCROLL{ScrollEvent.SCROLL},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the ScrollBar instance&apos;s scrollPosition property changes." version="" playername="" helpurl="fl.controls:ScrollBar_fl.events.ScrollEvent.SCROLL_scroll"/>
            </folder>
        </folder>
        <folder name="ScrollBarDirection" id="[fl.controls.ScrollBarDirection]" sort="true" index="true" asAncestors="Object" tiptext="Defines the values for the direction property of the ScrollBar component." helpurl="fl.controls:ScrollBarDirection">
            <folder name="Properties" id="Properties" tiptext="Properties for class ScrollBarDirection" helpurl="fl.controls:ScrollBarDirection">
                <string name="HORIZONTAL" object="[fl.controls.ScrollBarDirection]" text="ScrollBarDirection.HORIZONTAL" constant="true" tiptext="Indicates that the ScrollBar component instance is used for horizontal scrolling." version="" playername="" helpurl="fl.controls:ScrollBarDirection:HORIZONTAL"/>
                <string name="VERTICAL" object="[fl.controls.ScrollBarDirection]" text="ScrollBarDirection.VERTICAL" constant="true" tiptext="Indicates that the ScrollBar component instance is used for vertical scrolling." version="" playername="" helpurl="fl.controls:ScrollBarDirection:VERTICAL"/>
            </folder>
        </folder>
        <folder name="ScrollPolicy" id="[fl.controls.ScrollPolicy]" sort="true" index="true" asAncestors="Object" tiptext="Values for the horizontalScrollPolicy and verticalScrollPolicy properties of the BaseScrollPane class." helpurl="fl.controls:ScrollPolicy">
            <folder name="Properties" id="Properties" tiptext="Properties for class ScrollPolicy" helpurl="fl.controls:ScrollPolicy">
                <string name="AUTO" object="[fl.controls.ScrollPolicy]" text="ScrollPolicy.AUTO" constant="true" tiptext="Show the scroll bar if the children exceed the owner&apos;s dimensions." version="" playername="" helpurl="fl.controls:ScrollPolicy:AUTO"/>
                <string name="OFF" object="[fl.controls.ScrollPolicy]" text="ScrollPolicy.OFF" constant="true" tiptext="Never show the scroll bar." version="" playername="" helpurl="fl.controls:ScrollPolicy:OFF"/>
                <string name="ON" object="[fl.controls.ScrollPolicy]" text="ScrollPolicy.ON" constant="true" tiptext="Always show the scroll bar." version="" playername="" helpurl="fl.controls:ScrollPolicy:ON"/>
            </folder>
        </folder>
        <folder name="SelectableList" id="[fl.controls.SelectableList]" sort="true" index="true" asAncestors="fl.containers:BaseScrollPane,fl.core:UIComponent,flash.display:Sprite,flash.display:DisplayObjectContainer,flash.display:InteractiveObject,flash.display:DisplayObject,flash.events:EventDispatcher,Object" tiptext="The SelectableList is the base class for all list-based components--for example, the List, TileList, DataGrid, and ComboBox components." helpurl="fl.controls:SelectableList">
            <folder name="Methods" id="Methods" tiptext="Methods for class SelectableList" helpurl="fl.controls:SelectableList">
                <string name="SelectableList" object="[fl.controls.SelectableList]" text="new SelectableList(%%)" constructor="true" tiptext="Creates a new SelectableList instance." version="1.0" playername="" helpurl="fl.controls:SelectableList:SelectableList"/>
                <string name="addItemAt" object="[fl.controls.SelectableList]" text=".addItemAt(%item:Object,index:uint%):void" tiptext="Inserts an item into the list at the specified index location." version="1.0" playername="" helpurl="fl.controls:SelectableList:addItemAt"/>
                <string name="addItem" object="[fl.controls.SelectableList]" text=".addItem(%item:Object%):void" tiptext="Appends an item to the end of the list of items." version="1.0" playername="" helpurl="fl.controls:SelectableList:addItem"/>
                <string name="clearRendererStyle" object="[fl.controls.SelectableList]" text=".clearRendererStyle(%name:String[,column:int=-1]%):void" tiptext="Clears a style that is set on the renderers in the list." version="1.0" playername="" helpurl="fl.controls:SelectableList:clearRendererStyle"/>
                <string name="clearSelection" object="[fl.controls.SelectableList]" text=".clearSelection(%%):void" tiptext="Clears the currently selected item in the list and sets the selectedIndex property to -1." version="1.0" playername="" helpurl="fl.controls:SelectableList:clearSelection"/>
                <string name="getItemAt" object="[fl.controls.SelectableList]" text=".getItemAt(%index:uint%):Object" tiptext="Retrieves the item at the specified index." version="1.0" playername="" helpurl="fl.controls:SelectableList:getItemAt"/>
                <string name="getNextIndexAtLetter" object="[fl.controls.SelectableList]" text=".getNextIndexAtLetter(%firstLetter:String[,startIndex:int=-1]%):int" tiptext="Returns the index of the next item in the dataProvider in which the label&apos;s first character matches a specified string character." version="1.0" playername="" helpurl="fl.controls:SelectableList:getNextIndexAtLetter"/>
                <string name="getRendererStyle" object="[fl.controls.SelectableList]" text=".getRendererStyle(%name:String[,column:int=-1]%):Object" tiptext="Retrieves a style that is set on the renderers in the list." version="1.0" playername="" helpurl="fl.controls:SelectableList:getRendererStyle"/>
                <string name="getStyleDefinition" object="[fl.controls.SelectableList]" text="SelectableList.getStyleDefinition(%%):Object" static="true" tiptext="Retrieves the default style map for the current component." version="1.0" playername="" helpurl="fl.controls:SelectableList:getStyleDefinition"/>
                <string name="invalidateItemAt" object="[fl.controls.SelectableList]" text=".invalidateItemAt(%index:uint%):void" tiptext="Invalidates the renderer for the item at the specified index." version="1.0" playername="" helpurl="fl.controls:SelectableList:invalidateItemAt"/>
                <string name="invalidateItem" object="[fl.controls.SelectableList]" text=".invalidateItem(%item:Object%):void" tiptext="Invalidates a specific item renderer." version="1.0" playername="" helpurl="fl.controls:SelectableList:invalidateItem"/>
                <string name="invalidateList" object="[fl.controls.SelectableList]" text=".invalidateList(%%):void" tiptext="Invalidates the whole list, forcing the list items to be redrawn." version="1.0" playername="" helpurl="fl.controls:SelectableList:invalidateList"/>
                <string name="isItemSelected" object="[fl.controls.SelectableList]" text=".isItemSelected(%item:Object%):Boolean" tiptext="Checks whether the specified item is selected in the list." version="1.0" playername="" helpurl="fl.controls:SelectableList:isItemSelected"/>
                <string name="itemToCellRenderer" object="[fl.controls.SelectableList]" text=".itemToCellRenderer(%item:Object%):fl.controls.listClasses:ICellRenderer" tiptext="Retrieves the ICellRenderer for a given item object, if there is one." version="1.0" playername="" helpurl="fl.controls:SelectableList:itemToCellRenderer"/>
                <string name="itemToLabel" object="[fl.controls.SelectableList]" text=".itemToLabel(%item:Object%):String" tiptext="Retrieves the string that the renderer displays for the given data object based on the label properties of the object." version="1.0" playername="" helpurl="fl.controls:SelectableList:itemToLabel"/>
                <string name="removeAll" object="[fl.controls.SelectableList]" text=".removeAll(%%):void" tiptext="Removes all items from the list." version="1.0" playername="" helpurl="fl.controls:SelectableList:removeAll"/>
                <string name="removeItemAt" object="[fl.controls.SelectableList]" text=".removeItemAt(%index:uint%):Object" tiptext="Removes the item at the specified index position." version="1.0" playername="" helpurl="fl.controls:SelectableList:removeItemAt"/>
                <string name="removeItem" object="[fl.controls.SelectableList]" text=".removeItem(%item:Object%):Object" tiptext="Removes the specified item from the list." version="1.0" playername="" helpurl="fl.controls:SelectableList:removeItem"/>
                <string name="replaceItemAt" object="[fl.controls.SelectableList]" text=".replaceItemAt(%item:Object,index:uint%):Object" tiptext="Replaces the item at the specified index location with another item." version="1.0" playername="" helpurl="fl.controls:SelectableList:replaceItemAt"/>
                <string name="scrollToIndex" object="[fl.controls.SelectableList]" text=".scrollToIndex(%newCaretIndex:int%):void" tiptext="Scrolls the list to the item at the specified index." version="1.0" playername="" helpurl="fl.controls:SelectableList:scrollToIndex"/>
                <string name="scrollToSelected" object="[fl.controls.SelectableList]" text=".scrollToSelected(%%):void" tiptext="Scrolls the list to the item at the location indicated by the current value of the selectedIndex property." version="1.0" playername="" helpurl="fl.controls:SelectableList:scrollToSelected"/>
                <string name="setRendererStyle" object="[fl.controls.SelectableList]" text=".setRendererStyle(%name:String,style:Object[,column:uint=0]%):void" tiptext="Sets a style on the renderers in the list." version="1.0" playername="" helpurl="fl.controls:SelectableList:setRendererStyle"/>
                <string name="sortItemsOn" object="[fl.controls.SelectableList]" text=".sortItemsOn(%field:String[,options:Object=null]%)" tiptext="Sorts the elements of the current data provider by one or more of its fields." version="1.0" playername="" helpurl="fl.controls:SelectableList:sortItemsOn"/>
                <string name="sortItems" object="[fl.controls.SelectableList]" text=".sortItems(%sortArgs:restParam%)" tiptext="Sorts the elements of the current data provider." version="1.0" playername="" helpurl="fl.controls:SelectableList:sortItems"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class SelectableList" helpurl="fl.controls:SelectableList">
                <string name="allowMultipleSelection" object="[fl.controls.SelectableList]" text=".allowMultipleSelection" tiptext="Gets a Boolean value that indicates whether more than one list item can be selected at a time." version="" playername="" helpurl="fl.controls:SelectableList:allowMultipleSelection:get"/>
                <string name="dataProvider" object="[fl.controls.SelectableList]" text=".dataProvider" tiptext="Gets or sets the data model of the list of items to be viewed." version="" playername="" helpurl="fl.controls:SelectableList:dataProvider:get"/>
                <string name="length" object="[fl.controls.SelectableList]" text=".length" tiptext="Gets the number of items in the data provider." version="" playername="" helpurl="fl.controls:SelectableList:length:get"/>
                <string name="maxHorizontalScrollPosition" object="[fl.controls.SelectableList]" text=".maxHorizontalScrollPosition" tiptext="Gets or sets the number of pixels that the list scrolls to the right when the horizontalScrollPolicy property is set to ScrollPolicy.ON." version="" playername="" helpurl="fl.controls:SelectableList:maxHorizontalScrollPosition:get"/>
                <string name="rowCount" object="[fl.controls.SelectableList]" text=".rowCount" tiptext="Gets the number of rows that are at least partially visible in the list." version="" playername="" helpurl="fl.controls:SelectableList:rowCount:get"/>
                <string name="selectable" object="[fl.controls.SelectableList]" text=".selectable" tiptext="Gets or sets a Boolean value that indicates whether the items in the list can be selected." version="" playername="" helpurl="fl.controls:SelectableList:selectable:get"/>
                <string name="selectedIndex" object="[fl.controls.SelectableList]" text=".selectedIndex" tiptext="Gets or sets the index of the item that is selected in a single-selection list." version="" playername="" helpurl="fl.controls:SelectableList:selectedIndex:get"/>
                <string name="selectedIndices" object="[fl.controls.SelectableList]" text=".selectedIndices" tiptext="Gets or sets an array that contains the items that were selected from a multiple-selection list." version="" playername="" helpurl="fl.controls:SelectableList:selectedIndices:get"/>
                <string name="selectedItem" object="[fl.controls.SelectableList]" text=".selectedItem" tiptext="Gets or sets the item that was selected from a single-selection list." version="" playername="" helpurl="fl.controls:SelectableList:selectedItem:get"/>
                <string name="selectedItems" object="[fl.controls.SelectableList]" text=".selectedItems" tiptext="Gets or sets an array that contains the objects for the items that were selected from the multiple-selection list." version="" playername="" helpurl="fl.controls:SelectableList:selectedItems:get"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class SelectableList" helpurl="fl.controls:SelectableList">
                <string name="scroll" object="[fl.controls.SelectableList]" text=".addEventListener(%type:String=ScrollEvent.SCROLL{ScrollEvent.SCROLL,Event.CHANGE,ListEvent.ITEM_DOUBLE_CLICK,ListEvent.ITEM_CLICK,MouseEvent.ROLL_OUT,MouseEvent.ROLL_OVER,ListEvent.ITEM_ROLL_OVER,ListEvent.ITEM_ROLL_OUT},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user scrolls horizontally or vertically." version="" playername="" helpurl="fl.controls:SelectableList_fl.events.ScrollEvent.SCROLL_scroll"/>
                <string name="change" object="[fl.controls.SelectableList]" text=".addEventListener(%type:String=Event.CHANGE{ScrollEvent.SCROLL,Event.CHANGE,ListEvent.ITEM_DOUBLE_CLICK,ListEvent.ITEM_CLICK,MouseEvent.ROLL_OUT,MouseEvent.ROLL_OVER,ListEvent.ITEM_ROLL_OVER,ListEvent.ITEM_ROLL_OUT},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a different item is selected in the list." version="" playername="" helpurl="fl.controls:SelectableList_flash.events.Event.CHANGE_change"/>
                <string name="itemDoubleClick" object="[fl.controls.SelectableList]" text=".addEventListener(%type:String=ListEvent.ITEM_DOUBLE_CLICK{ScrollEvent.SCROLL,Event.CHANGE,ListEvent.ITEM_DOUBLE_CLICK,ListEvent.ITEM_CLICK,MouseEvent.ROLL_OUT,MouseEvent.ROLL_OVER,ListEvent.ITEM_ROLL_OVER,ListEvent.ITEM_ROLL_OUT},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user clicks an item in the component twice in rapid succession." version="" playername="" helpurl="fl.controls:SelectableList_fl.events.ListEvent.ITEM_DOUBLE_CLICK_itemDoubleClick"/>
                <string name="itemClick" object="[fl.controls.SelectableList]" text=".addEventListener(%type:String=ListEvent.ITEM_CLICK{ScrollEvent.SCROLL,Event.CHANGE,ListEvent.ITEM_DOUBLE_CLICK,ListEvent.ITEM_CLICK,MouseEvent.ROLL_OUT,MouseEvent.ROLL_OVER,ListEvent.ITEM_ROLL_OVER,ListEvent.ITEM_ROLL_OUT},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user clicks an item in the component." version="" playername="" helpurl="fl.controls:SelectableList_fl.events.ListEvent.ITEM_CLICK_itemClick"/>
                <string name="rollOut" object="[fl.controls.SelectableList]" text=".addEventListener(%type:String=MouseEvent.ROLL_OUT{ScrollEvent.SCROLL,Event.CHANGE,ListEvent.ITEM_DOUBLE_CLICK,ListEvent.ITEM_CLICK,MouseEvent.ROLL_OUT,MouseEvent.ROLL_OVER,ListEvent.ITEM_ROLL_OVER,ListEvent.ITEM_ROLL_OUT},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user rolls the pointer off of the component." version="" playername="" helpurl="fl.controls:SelectableList_flash.events.MouseEvent.ROLL_OUT_rollOut"/>
                <string name="rollOver" object="[fl.controls.SelectableList]" text=".addEventListener(%type:String=MouseEvent.ROLL_OVER{ScrollEvent.SCROLL,Event.CHANGE,ListEvent.ITEM_DOUBLE_CLICK,ListEvent.ITEM_CLICK,MouseEvent.ROLL_OUT,MouseEvent.ROLL_OVER,ListEvent.ITEM_ROLL_OVER,ListEvent.ITEM_ROLL_OUT},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user rolls the pointer over the component." version="" playername="" helpurl="fl.controls:SelectableList_flash.events.MouseEvent.ROLL_OVER_rollOver"/>
                <string name="itemRollOver" object="[fl.controls.SelectableList]" text=".addEventListener(%type:String=ListEvent.ITEM_ROLL_OVER{ScrollEvent.SCROLL,Event.CHANGE,ListEvent.ITEM_DOUBLE_CLICK,ListEvent.ITEM_CLICK,MouseEvent.ROLL_OUT,MouseEvent.ROLL_OVER,ListEvent.ITEM_ROLL_OVER,ListEvent.ITEM_ROLL_OUT},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user rolls the pointer over an item in the component." version="" playername="" helpurl="fl.controls:SelectableList_fl.events.ListEvent.ITEM_ROLL_OVER_itemRollOver"/>
                <string name="itemRollOut" object="[fl.controls.SelectableList]" text=".addEventListener(%type:String=ListEvent.ITEM_ROLL_OUT{ScrollEvent.SCROLL,Event.CHANGE,ListEvent.ITEM_DOUBLE_CLICK,ListEvent.ITEM_CLICK,MouseEvent.ROLL_OUT,MouseEvent.ROLL_OVER,ListEvent.ITEM_ROLL_OVER,ListEvent.ITEM_ROLL_OUT},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user rolls the pointer off of an item in the component." version="" playername="" helpurl="fl.controls:SelectableList_fl.events.ListEvent.ITEM_ROLL_OUT_itemRollOut"/>
            </folder>
        </folder>
        <folder name="Slider" id="[fl.controls.Slider]" sort="true" index="true" asAncestors="fl.core:UIComponent,flash.display:Sprite,flash.display:DisplayObjectContainer,flash.display:InteractiveObject,flash.display:DisplayObject,flash.events:EventDispatcher,Object" tiptext="The Slider component lets users select a value by moving a slider thumb between the end points of the slider track." helpurl="fl.controls:Slider">
            <folder name="Methods" id="Methods" tiptext="Methods for class Slider" helpurl="fl.controls:Slider">
                <string name="Slider" object="[fl.controls.Slider]" text="new Slider(%%)" constructor="true" tiptext="Creates a new Slider component instance." version="1.0" playername="" helpurl="fl.controls:Slider:Slider"/>
                <string name="getStyleDefinition" object="[fl.controls.Slider]" text="Slider.getStyleDefinition(%%):Object" static="true" tiptext="Retrieves the default style map for the current component." version="1.0" playername="" helpurl="fl.controls:Slider:getStyleDefinition"/>
                <string name="setSize" object="[fl.controls.Slider]" text=".setSize(%width:Number,height:Number%):void" tiptext="Sets the component to the specified width and height." version="1.0" playername="" helpurl="fl.controls:Slider:setSize"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class Slider" helpurl="fl.controls:Slider">
                <string name="direction" object="[fl.controls.Slider]" text=".direction" tiptext="Sets the direction of the slider." version="" playername="" helpurl="fl.controls:Slider:direction:get"/>
                <string name="enabled" object="[fl.controls.Slider]" text=".enabled" tiptext="Gets or sets a value that indicates whether the component can accept user interaction." version="" playername="" helpurl="fl.controls:Slider:enabled:get"/>
                <string name="maximum" object="[fl.controls.Slider]" text=".maximum" tiptext="The maximum allowed value on the Slider component instance." version="" playername="" helpurl="fl.controls:Slider:maximum:get"/>
                <string name="minimum" object="[fl.controls.Slider]" text=".minimum" tiptext="The minimum value allowed on the Slider component instance." version="" playername="" helpurl="fl.controls:Slider:minimum:get"/>
                <string name="snapInterval" object="[fl.controls.Slider]" text=".snapInterval" tiptext="Gets or sets the increment by which the value is increased or decreased as the user moves the slider thumb." version="" playername="" helpurl="fl.controls:Slider:snapInterval:get"/>
                <string name="tickInterval" object="[fl.controls.Slider]" text=".tickInterval" tiptext="The spacing of the tick marks relative to the maximum value of the component." version="" playername="" helpurl="fl.controls:Slider:tickInterval:get"/>
                <string name="value" object="[fl.controls.Slider]" text=".value" tiptext="Gets or sets the current value of the Slider component." version="" playername="" helpurl="fl.controls:Slider:value:get"/>
                <string name="liveDragging" object="[fl.controls.Slider]" text=".liveDragging" tiptext="Gets or sets a Boolean value that indicates whether the SliderEvent.CHANGE event is dispatched continuously as the user moves the slider thumb." version="" playername="" helpurl="fl.controls:Slider:liveDragging:set"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class Slider" helpurl="fl.controls:Slider">
                <string name="change" object="[fl.controls.Slider]" text=".addEventListener(%type:String=SliderEvent.CHANGE{SliderEvent.CHANGE,SliderEvent.THUMB_DRAG,SliderEvent.THUMB_RELEASE,SliderEvent.THUMB_PRESS},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the value of the Slider component changes as a result of mouse or keyboard interaction." version="" playername="" helpurl="fl.controls:Slider_fl.events.SliderEvent.CHANGE_change"/>
                <string name="thumbDrag" object="[fl.controls.Slider]" text=".addEventListener(%type:String=SliderEvent.THUMB_DRAG{SliderEvent.CHANGE,SliderEvent.THUMB_DRAG,SliderEvent.THUMB_RELEASE,SliderEvent.THUMB_PRESS},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the slider thumb is pressed and then moved by the mouse." version="" playername="" helpurl="fl.controls:Slider_fl.events.SliderEvent.THUMB_DRAG_thumbDrag"/>
                <string name="thumbRelease" object="[fl.controls.Slider]" text=".addEventListener(%type:String=SliderEvent.THUMB_RELEASE{SliderEvent.CHANGE,SliderEvent.THUMB_DRAG,SliderEvent.THUMB_RELEASE,SliderEvent.THUMB_PRESS},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the slider thumb is pressed and released." version="" playername="" helpurl="fl.controls:Slider_fl.events.SliderEvent.THUMB_RELEASE_thumbRelease"/>
                <string name="thumbPress" object="[fl.controls.Slider]" text=".addEventListener(%type:String=SliderEvent.THUMB_PRESS{SliderEvent.CHANGE,SliderEvent.THUMB_DRAG,SliderEvent.THUMB_RELEASE,SliderEvent.THUMB_PRESS},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the slider thumb is pressed." version="" playername="" helpurl="fl.controls:Slider_fl.events.SliderEvent.THUMB_PRESS_thumbPress"/>
            </folder>
        </folder>
        <folder name="SliderDirection" id="[fl.controls.SliderDirection]" sort="true" index="true" asAncestors="Object" tiptext="The orientation of the Slider component." helpurl="fl.controls:SliderDirection">
            <folder name="Properties" id="Properties" tiptext="Properties for class SliderDirection" helpurl="fl.controls:SliderDirection">
                <string name="HORIZONTAL" object="[fl.controls.SliderDirection]" text=".HORIZONTAL" tiptext="Position the Slider component on the horizontal axis." version="" playername="" helpurl="fl.controls:SliderDirection:HORIZONTAL"/>
                <string name="VERTICAL" object="[fl.controls.SliderDirection]" text=".VERTICAL" tiptext="Position the Slider component on the vertical axis." version="" playername="" helpurl="fl.controls:SliderDirection:VERTICAL"/>
            </folder>
        </folder>
        <folder name="TextArea" id="[fl.controls.TextArea]" sort="true" index="true" asAncestors="fl.core:UIComponent,flash.display:Sprite,flash.display:DisplayObjectContainer,flash.display:InteractiveObject,flash.display:DisplayObject,flash.events:EventDispatcher,Object" tiptext="The TextArea component is a multiline text field with a border and optional scroll bars." helpurl="fl.controls:TextArea">
            <folder name="Methods" id="Methods" tiptext="Methods for class TextArea" helpurl="fl.controls:TextArea">
                <string name="TextArea" object="[fl.controls.TextArea]" text="new TextArea(%%)" constructor="true" tiptext="Creates a new TextArea component instance." version="1.0" playername="" helpurl="fl.controls:TextArea:TextArea"/>
                <string name="appendText" object="[fl.controls.TextArea]" text=".appendText(%text:String%):void" tiptext="Appends the specified string after the last character that the TextArea component contains." version="1.0" playername="" helpurl="fl.controls:TextArea:appendText"/>
                <string name="drawFocus" object="[fl.controls.TextArea]" text=".drawFocus(%focused:Boolean%):void" tiptext="Shows or hides the focus indicator on this component." version="1.0" playername="" helpurl="fl.controls:TextArea:drawFocus"/>
                <string name="getLineMetrics" object="[fl.controls.TextArea]" text=".getLineMetrics(%lineIndex:int%):flash.text:TextLineMetrics" tiptext="Retrieves information about a specified line of text." version="1.0" playername="" helpurl="fl.controls:TextArea:getLineMetrics"/>
                <string name="getStyleDefinition" object="[fl.controls.TextArea]" text="TextArea.getStyleDefinition(%%):Object" static="true" tiptext="Retrieves the default style map for the current component." version="1.0" playername="" helpurl="fl.controls:TextArea:getStyleDefinition"/>
                <string name="setSelection" object="[fl.controls.TextArea]" text=".setSelection(%setSelection:int,endIndex:int%):void" tiptext="Sets the range of a selection made in a text area that has focus." version="1.0" playername="" helpurl="fl.controls:TextArea:setSelection"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class TextArea" helpurl="fl.controls:TextArea">
                <string name="textField" object="[fl.controls.TextArea]" text=".textField" tiptext="A reference to the internal text field of the TextArea component." version="" playername="" helpurl="fl.controls:TextArea:textField"/>
                <string name="alwaysShowSelection" object="[fl.controls.TextArea]" text=".alwaysShowSelection" tiptext="Gets or sets a Boolean value that indicates whether Flash Player highlights a selection in the text field when the text field does not have focus." version="" playername="" helpurl="fl.controls:TextArea:alwaysShowSelection:get"/>
                <string name="condenseWhite" object="[fl.controls.TextArea]" text=".condenseWhite" tiptext="Gets or sets a Boolean value that indicates whether extra white space is removed from a TextArea component that contains HTML text." version="" playername="" helpurl="fl.controls:TextArea:condenseWhite:get"/>
                <string name="displayAsPassword" object="[fl.controls.TextArea]" text=".displayAsPassword" tiptext="Gets or sets a Boolean value that indicates whether the TextArea component instance is the text field for a password." version="" playername="" helpurl="fl.controls:TextArea:displayAsPassword:get"/>
                <string name="editable" object="[fl.controls.TextArea]" text=".editable" tiptext="Gets or sets a Boolean value that indicates whether the user can edit the text in the component." version="" playername="" helpurl="fl.controls:TextArea:editable:get"/>
                <string name="enabled" object="[fl.controls.TextArea]" text=".enabled" tiptext="Gets or sets a value that indicates whether the component can accept user interaction." version="" playername="" helpurl="fl.controls:TextArea:enabled:get"/>
                <string name="horizontalScrollBar" object="[fl.controls.TextArea]" text=".horizontalScrollBar" tiptext="Gets a reference to the horizontal scroll bar." version="" playername="" helpurl="fl.controls:TextArea:horizontalScrollBar:get"/>
                <string name="horizontalScrollPolicy" object="[fl.controls.TextArea]" text=".horizontalScrollPolicy" tiptext="Gets or sets the scroll policy for the horizontal scroll bar." version="" playername="" helpurl="fl.controls:TextArea:horizontalScrollPolicy:get"/>
                <string name="horizontalScrollPosition" object="[fl.controls.TextArea]" text=".horizontalScrollPosition" tiptext="Gets or sets the change in the position of the scroll bar thumb, in pixels, after the user scrolls the text field horizontally." version="" playername="" helpurl="fl.controls:TextArea:horizontalScrollPosition:get"/>
                <string name="htmlText" object="[fl.controls.TextArea]" text=".htmlText" tiptext="Gets or sets the HTML representation of the string that the text field contains." version="" playername="" helpurl="fl.controls:TextArea:htmlText:get"/>
                <string name="imeMode" object="[fl.controls.TextArea]" text=".imeMode" tiptext="Gets or sets the mode of the input method editor (IME)." version="" playername="" helpurl="fl.controls:TextArea:imeMode:get"/>
                <string name="length" object="[fl.controls.TextArea]" text=".length" tiptext="Gets the count of characters that the TextArea component contains." version="" playername="" helpurl="fl.controls:TextArea:length:get"/>
                <string name="maxChars" object="[fl.controls.TextArea]" text=".maxChars" tiptext="Gets or sets the maximum number of characters that a user can enter in the text field." version="" playername="" helpurl="fl.controls:TextArea:maxChars:get"/>
                <string name="maxHorizontalScrollPosition" object="[fl.controls.TextArea]" text=".maxHorizontalScrollPosition" tiptext="Gets the maximum value of the horizontalScrollPosition property." version="" playername="" helpurl="fl.controls:TextArea:maxHorizontalScrollPosition:get"/>
                <string name="maxVerticalScrollPosition" object="[fl.controls.TextArea]" text=".maxVerticalScrollPosition" tiptext="Gets the maximum value of the verticalScrollPosition property." version="" playername="" helpurl="fl.controls:TextArea:maxVerticalScrollPosition:get"/>
                <string name="restrict" object="[fl.controls.TextArea]" text=".restrict" tiptext="Gets or sets the string of characters that the text field accepts from a user." version="" playername="" helpurl="fl.controls:TextArea:restrict:get"/>
                <string name="selectionBeginIndex" object="[fl.controls.TextArea]" text=".selectionBeginIndex" tiptext="Gets the index position of the first selected character in a selection of one or more characters." version="" playername="" helpurl="fl.controls:TextArea:selectionBeginIndex:get"/>
                <string name="selectionEndIndex" object="[fl.controls.TextArea]" text=".selectionEndIndex" tiptext="Gets the index position of the last selected character in a selection of one or more characters." version="" playername="" helpurl="fl.controls:TextArea:selectionEndIndex:get"/>
                <string name="textHeight" object="[fl.controls.TextArea]" text=".textHeight" tiptext="Gets the height of the text, in pixels." version="" playername="" helpurl="fl.controls:TextArea:textHeight:get"/>
                <string name="textWidth" object="[fl.controls.TextArea]" text=".textWidth" tiptext="Gets the width of the text, in pixels." version="" playername="" helpurl="fl.controls:TextArea:textWidth:get"/>
                <string name="text" object="[fl.controls.TextArea]" text=".text" tiptext="Gets or sets a string which contains the text that is currently in the TextInput component." version="" playername="" helpurl="fl.controls:TextArea:text:get"/>
                <string name="verticalScrollBar" object="[fl.controls.TextArea]" text=".verticalScrollBar" tiptext="Gets a reference to the vertical scroll bar." version="" playername="" helpurl="fl.controls:TextArea:verticalScrollBar:get"/>
                <string name="verticalScrollPolicy" object="[fl.controls.TextArea]" text=".verticalScrollPolicy" tiptext="Gets or sets the scroll policy for the vertical scroll bar." version="" playername="" helpurl="fl.controls:TextArea:verticalScrollPolicy:get"/>
                <string name="verticalScrollPosition" object="[fl.controls.TextArea]" text=".verticalScrollPosition" tiptext="Gets or sets the change in the position of the scroll bar thumb, in pixels, after the user scrolls the text field vertically." version="" playername="" helpurl="fl.controls:TextArea:verticalScrollPosition:get"/>
                <string name="wordWrap" object="[fl.controls.TextArea]" text=".wordWrap" tiptext="Gets or sets a Boolean value that indicates whether the text wraps at the end of the line." version="" playername="" helpurl="fl.controls:TextArea:wordWrap:get"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class TextArea" helpurl="fl.controls:TextArea">
                <string name="scroll" object="[fl.controls.TextArea]" text=".addEventListener(%type:String=ScrollEvent.SCROLL{ScrollEvent.SCROLL,ComponentEvent.ENTER,TextEvent.TEXT_INPUT,Event.CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the content is scrolled." version="" playername="" helpurl="fl.controls:TextArea_fl.events.ScrollEvent.SCROLL_scroll"/>
                <string name="enter" object="[fl.controls.TextArea]" text=".addEventListener(%type:String=ComponentEvent.ENTER{ScrollEvent.SCROLL,ComponentEvent.ENTER,TextEvent.TEXT_INPUT,Event.CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user presses the Enter key while in the component." version="" playername="" helpurl="fl.controls:TextArea_fl.events.ComponentEvent.ENTER_enter"/>
                <string name="textInput" object="[fl.controls.TextArea]" text=".addEventListener(%type:String=TextEvent.TEXT_INPUT{ScrollEvent.SCROLL,ComponentEvent.ENTER,TextEvent.TEXT_INPUT,Event.CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user enters, deletes, or pastes text into the component." version="" playername="" helpurl="fl.controls:TextArea_flash.events.TextEvent.TEXT_INPUT_textInput"/>
                <string name="change" object="[fl.controls.TextArea]" text=".addEventListener(%type:String=Event.CHANGE{ScrollEvent.SCROLL,ComponentEvent.ENTER,TextEvent.TEXT_INPUT,Event.CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the text in the TextArea component changes." version="" playername="" helpurl="fl.controls:TextArea_flash.events.Event.CHANGE_change"/>
            </folder>
        </folder>
        <folder name="TextInput" id="[fl.controls.TextInput]" sort="true" index="true" asAncestors="fl.core:UIComponent,flash.display:Sprite,flash.display:DisplayObjectContainer,flash.display:InteractiveObject,flash.display:DisplayObject,flash.events:EventDispatcher,Object" tiptext="The TextInput component is a single-line text component that contains a native ActionScript TextField object." helpurl="fl.controls:TextInput">
            <folder name="Methods" id="Methods" tiptext="Methods for class TextInput" helpurl="fl.controls:TextInput">
                <string name="TextInput" object="[fl.controls.TextInput]" text="new TextInput(%%)" constructor="true" tiptext="Creates a new TextInput component instance." version="1.0" playername="" helpurl="fl.controls:TextInput:TextInput"/>
                <string name="appendText" object="[fl.controls.TextInput]" text=".appendText(%text:String%):void" tiptext="Appends the specified string after the last character that the TextArea contains." version="1.0" playername="" helpurl="fl.controls:TextInput:appendText"/>
                <string name="drawFocus" object="[fl.controls.TextInput]" text=".drawFocus(%focused:Boolean%):void" tiptext="Shows or hides the focus indicator on this component." version="1.0" playername="" helpurl="fl.controls:TextInput:drawFocus"/>
                <string name="getLineMetrics" object="[fl.controls.TextInput]" text=".getLineMetrics(%index:int%):flash.text:TextLineMetrics" tiptext="Retrieves information about a specified line of text." version="1.0" playername="" helpurl="fl.controls:TextInput:getLineMetrics"/>
                <string name="getStyleDefinition" object="[fl.controls.TextInput]" text="TextInput.getStyleDefinition(%%):Object" static="true" tiptext="Retrieves the default style map for the current component." version="1.0" playername="" helpurl="fl.controls:TextInput:getStyleDefinition"/>
                <string name="setSelection" object="[fl.controls.TextInput]" text=".setSelection(%beginIndex:int,endIndex:int%):void" tiptext="Sets the range of a selection made in a text area that has focus." version="1.0" playername="" helpurl="fl.controls:TextInput:setSelection"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class TextInput" helpurl="fl.controls:TextInput">
                <string name="textField" object="[fl.controls.TextInput]" text=".textField" tiptext="A reference to the internal text field of the TextInput component." version="" playername="" helpurl="fl.controls:TextInput:textField"/>
                <string name="alwaysShowSelection" object="[fl.controls.TextInput]" text=".alwaysShowSelection" tiptext="Gets or sets a Boolean value that indicates how a selection is displayed when the text field does not have focus." version="" playername="" helpurl="fl.controls:TextInput:alwaysShowSelection:get"/>
                <string name="condenseWhite" object="[fl.controls.TextInput]" text=".condenseWhite" tiptext="Gets or sets a Boolean value that indicates whether extra white space is removed from a TextInput component that contains HTML text." version="" playername="" helpurl="fl.controls:TextInput:condenseWhite:get"/>
                <string name="displayAsPassword" object="[fl.controls.TextInput]" text=".displayAsPassword" tiptext="Gets or sets a Boolean value that indicates whether the current TextInput component instance was created to contain a password or to contain text." version="" playername="" helpurl="fl.controls:TextInput:displayAsPassword:get"/>
                <string name="editable" object="[fl.controls.TextInput]" text=".editable" tiptext="Gets or sets a Boolean value that indicates whether the text field can be edited by the user." version="" playername="" helpurl="fl.controls:TextInput:editable:get"/>
                <string name="enabled" object="[fl.controls.TextInput]" text=".enabled" tiptext="Gets or sets a value that indicates whether the component can accept user interaction." version="" playername="" helpurl="fl.controls:TextInput:enabled:get"/>
                <string name="horizontalScrollPosition" object="[fl.controls.TextInput]" text=".horizontalScrollPosition" tiptext="Gets or sets the position of the thumb of the horizontal scroll bar." version="" playername="" helpurl="fl.controls:TextInput:horizontalScrollPosition:get"/>
                <string name="htmlText" object="[fl.controls.TextInput]" text=".htmlText" tiptext="Contains the HTML representation of the string that the text field contains." version="" playername="" helpurl="fl.controls:TextInput:htmlText:get"/>
                <string name="imeMode" object="[fl.controls.TextInput]" text=".imeMode" tiptext="Gets or sets the mode of the input method editor (IME)." version="" playername="" helpurl="fl.controls:TextInput:imeMode:get"/>
                <string name="length" object="[fl.controls.TextInput]" text=".length" tiptext="Gets the number of characters in a TextInput component." version="" playername="" helpurl="fl.controls:TextInput:length:get"/>
                <string name="maxChars" object="[fl.controls.TextInput]" text=".maxChars" tiptext="Gets or sets the maximum number of characters that a user can enter in the text field." version="" playername="" helpurl="fl.controls:TextInput:maxChars:get"/>
                <string name="maxHorizontalScrollPosition" object="[fl.controls.TextInput]" text=".maxHorizontalScrollPosition" tiptext="Gets a value that describes the furthest position to which the text field can be scrolled to the right." version="" playername="" helpurl="fl.controls:TextInput:maxHorizontalScrollPosition:get"/>
                <string name="restrict" object="[fl.controls.TextInput]" text=".restrict" tiptext="Gets or sets the string of characters that the text field accepts from a user." version="" playername="" helpurl="fl.controls:TextInput:restrict:get"/>
                <string name="selectionBeginIndex" object="[fl.controls.TextInput]" text=".selectionBeginIndex" tiptext="Gets the index value of the first selected character in a selection of one or more characters." version="" playername="" helpurl="fl.controls:TextInput:selectionBeginIndex:get"/>
                <string name="selectionEndIndex" object="[fl.controls.TextInput]" text=".selectionEndIndex" tiptext="Gets the index position of the last selected character in a selection of one or more characters." version="" playername="" helpurl="fl.controls:TextInput:selectionEndIndex:get"/>
                <string name="textHeight" object="[fl.controls.TextInput]" text=".textHeight" tiptext="The height of the text, in pixels." version="" playername="" helpurl="fl.controls:TextInput:textHeight:get"/>
                <string name="textWidth" object="[fl.controls.TextInput]" text=".textWidth" tiptext="The width of the text, in pixels." version="" playername="" helpurl="fl.controls:TextInput:textWidth:get"/>
                <string name="text" object="[fl.controls.TextInput]" text=".text" tiptext="Gets or sets a string which contains the text that is currently in the TextInput component." version="" playername="" helpurl="fl.controls:TextInput:text:get"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class TextInput" helpurl="fl.controls:TextInput">
                <string name="textInput" object="[fl.controls.TextInput]" text=".addEventListener(%type:String=TextEvent.TEXT_INPUT{TextEvent.TEXT_INPUT,ComponentEvent.ENTER,Event.CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user inputs text." version="" playername="" helpurl="fl.controls:TextInput_flash.events.TextEvent.TEXT_INPUT_textInput"/>
                <string name="enter" object="[fl.controls.TextInput]" text=".addEventListener(%type:String=ComponentEvent.ENTER{TextEvent.TEXT_INPUT,ComponentEvent.ENTER,Event.CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user presses the Enter key." version="" playername="" helpurl="fl.controls:TextInput_fl.events.ComponentEvent.ENTER_enter"/>
                <string name="change" object="[fl.controls.TextInput]" text=".addEventListener(%type:String=Event.CHANGE{TextEvent.TEXT_INPUT,ComponentEvent.ENTER,Event.CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when user input changes text in the TextInput component." version="" playername="" helpurl="fl.controls:TextInput_flash.events.Event.CHANGE_change"/>
            </folder>
        </folder>
        <folder name="TileList" id="[fl.controls.TileList]" sort="true" index="true" asAncestors="fl.controls:SelectableList,fl.containers:BaseScrollPane,fl.core:UIComponent,flash.display:Sprite,flash.display:DisplayObjectContainer,flash.display:InteractiveObject,flash.display:DisplayObject,flash.events:EventDispatcher,Object" tiptext="The TileList class provides a grid of rows and columns that is typically used to format and display images in a &quot;tiled&quot; format." helpurl="fl.controls:TileList">
            <folder name="Methods" id="Methods" tiptext="Methods for class TileList" helpurl="fl.controls:TileList">
                <string name="TileList" object="[fl.controls.TileList]" text="new TileList(%%)" constructor="true" tiptext="Creates a new List component instance." version="1.0" playername="" helpurl="fl.controls:TileList:TileList"/>
                <string name="getStyleDefinition" object="[fl.controls.TileList]" text="TileList.getStyleDefinition(%%):Object" static="true" tiptext="Retrieves the default style map for the current component." version="1.0" playername="" helpurl="fl.controls:TileList:getStyleDefinition"/>
                <string name="itemToLabel" object="[fl.controls.TileList]" text=".itemToLabel(%item:Object%):String" tiptext="Retrieves the string that the renderer displays for a given data object based on the labelField and labelFunction properties." version="1.0" playername="" helpurl="fl.controls:TileList:itemToLabel"/>
                <string name="scrollToIndex" object="[fl.controls.TileList]" text=".scrollToIndex(%newCaretIndex:int%):void" tiptext="Scrolls the list to the item at the specified index." version="1.0" playername="" helpurl="fl.controls:TileList:scrollToIndex"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class TileList" helpurl="fl.controls:TileList">
                <string name="columnCount" object="[fl.controls.TileList]" text=".columnCount" tiptext="Gets or sets the number of columns that are at least partially visible in the list." version="" playername="" helpurl="fl.controls:TileList:columnCount:get"/>
                <string name="columnWidth" object="[fl.controls.TileList]" text=".columnWidth" tiptext="Gets or sets the width that is applied to a column in the list, in pixels." version="" playername="" helpurl="fl.controls:TileList:columnWidth:get"/>
                <string name="dataProvider" object="[fl.controls.TileList]" text=".dataProvider" tiptext="Gets or sets the data model of the list of items to be viewed." version="" playername="" helpurl="fl.controls:TileList:dataProvider:get"/>
                <string name="direction" object="[fl.controls.TileList]" text=".direction" tiptext="Gets or sets a value that indicates whether the TileList component scrolls horizontally or vertically." version="" playername="" helpurl="fl.controls:TileList:direction:get"/>
                <string name="iconField" object="[fl.controls.TileList]" text=".iconField" tiptext="Gets or sets the item field that provides the icon for the item." version="" playername="" helpurl="fl.controls:TileList:iconField:get"/>
                <string name="iconFunction" object="[fl.controls.TileList]" text=".iconFunction" tiptext="Gets or sets the function to be used to obtain the icon for the item." version="" playername="" helpurl="fl.controls:TileList:iconFunction:get"/>
                <string name="innerHeight" object="[fl.controls.TileList]" text=".innerHeight" tiptext="Gets the height of the content area, in pixels." version="" playername="" helpurl="fl.controls:TileList:innerHeight:get"/>
                <string name="innerWidth" object="[fl.controls.TileList]" text=".innerWidth" tiptext="Gets the width of the content area, in pixels." version="" playername="" helpurl="fl.controls:TileList:innerWidth:get"/>
                <string name="labelField" object="[fl.controls.TileList]" text=".labelField" tiptext="Gets or sets a field in each item that contains a label for each tile." version="" playername="" helpurl="fl.controls:TileList:labelField:get"/>
                <string name="labelFunction" object="[fl.controls.TileList]" text=".labelFunction" tiptext="Gets a function that indicates the fields of an item that provide the label text for a tile." version="" playername="" helpurl="fl.controls:TileList:labelFunction:get"/>
                <string name="maxHorizontalScrollPosition" object="[fl.controls.TileList]" text=".maxHorizontalScrollPosition" tiptext="Gets the maximum horizontal scroll position for the current content, in pixels." version="" playername="" helpurl="fl.controls:TileList:maxHorizontalScrollPosition:get"/>
                <string name="rowCount" object="[fl.controls.TileList]" text=".rowCount" tiptext="Gets or sets the number of rows that are at least partially visible in the list." version="" playername="" helpurl="fl.controls:TileList:rowCount:get"/>
                <string name="rowHeight" object="[fl.controls.TileList]" text=".rowHeight" tiptext="Gets or sets the height that is applied to each row in the list, in pixels." version="" playername="" helpurl="fl.controls:TileList:rowHeight:get"/>
                <string name="scrollPolicy" object="[fl.controls.TileList]" text=".scrollPolicy" tiptext="Gets or sets the scroll policy for the TileList component." version="" playername="" helpurl="fl.controls:TileList:scrollPolicy:get"/>
                <string name="sourceField" object="[fl.controls.TileList]" text=".sourceField" tiptext="Gets or sets the item field that provides the source path for a tile." version="" playername="" helpurl="fl.controls:TileList:sourceField:get"/>
                <string name="sourceFunction" object="[fl.controls.TileList]" text=".sourceFunction" tiptext="Gets or sets the function to be used to obtain the source path for a tile." version="" playername="" helpurl="fl.controls:TileList:sourceFunction:get"/>
            </folder>
        </folder>
        <folder name="UIScrollBar" id="[fl.controls.UIScrollBar]" sort="true" index="true" asAncestors="fl.controls:ScrollBar,fl.core:UIComponent,flash.display:Sprite,flash.display:DisplayObjectContainer,flash.display:InteractiveObject,flash.display:DisplayObject,flash.events:EventDispatcher,Object" tiptext="The UIScrollBar class includes all of the scroll bar functionality, but adds a scrollTarget property so it can be attached to a TextField instance or a TLFTextField instance." helpurl="fl.controls:UIScrollBar">
            <folder name="Methods" id="Methods" tiptext="Methods for class UIScrollBar" helpurl="fl.controls:UIScrollBar">
                <string name="UIScrollBar" object="[fl.controls.UIScrollBar]" text="new UIScrollBar(%%)" constructor="true" tiptext="Creates a new UIScrollBar component instance." version="1.0" playername="" helpurl="fl.controls:UIScrollBar:UIScrollBar"/>
                <string name="getStyleDefinition" object="[fl.controls.UIScrollBar]" text="UIScrollBar.getStyleDefinition(%%):Object" static="true" tiptext="Retrieves the default style map for the current component." version="1.0" playername="" helpurl="fl.controls:UIScrollBar:getStyleDefinition"/>
                <string name="setScrollProperties" object="[fl.controls.UIScrollBar]" text=".setScrollProperties(%pageSize:Number,minScrollPosition:Number,maxScrollPosition:Number[,pageScrollSize:Number=0]%):void" tiptext="Sets the range and viewport size of the ScrollBar component." version="1.0" playername="" helpurl="fl.controls:UIScrollBar:setScrollProperties"/>
                <string name="update" object="[fl.controls.UIScrollBar]" text=".update(%%):void" tiptext="Forces the scroll bar to update its scroll properties immediately." version="1.0" playername="" helpurl="fl.controls:UIScrollBar:update"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class UIScrollBar" helpurl="fl.controls:UIScrollBar">
                <string name="direction" object="[fl.controls.UIScrollBar]" text=".direction" tiptext="Gets or sets a value that indicates whether the scroll bar scrolls horizontally or vertically." version="" playername="" helpurl="fl.controls:UIScrollBar:direction:get"/>
                <string name="scrollTarget" object="[fl.controls.UIScrollBar]" text=".scrollTarget" tiptext="Registers a TextField instance or a TLFTextField instance with the ScrollBar component instance." version="" playername="" helpurl="fl.controls:UIScrollBar:scrollTarget:get"/>
            </folder>
        </folder>
    </folder>
        <folder name="fl.controls.dataGridClasses" id="fl.controls.dataGridClasses" sort="true" tiptext="Classes for package fl.controls.dataGridClasses" helpurl="fl.controls.dataGridClasses">
        <folder name="DataGridCellEditor" id="[fl.controls.dataGridClasses.DataGridCellEditor]" sort="true" index="true" asAncestors="fl.controls:TextInput,fl.core:UIComponent,flash.display:Sprite,flash.display:DisplayObjectContainer,flash.display:InteractiveObject,flash.display:DisplayObject,flash.events:EventDispatcher,Object" tiptext="The DataGridCellEditor class defines the default item editor for a DataGrid control." helpurl="fl.controls.dataGridClasses:DataGridCellEditor">
            <folder name="Methods" id="Methods" tiptext="Methods for class DataGridCellEditor" helpurl="fl.controls.dataGridClasses:DataGridCellEditor">
                <string name="DataGridCellEditor" object="[fl.controls.dataGridClasses.DataGridCellEditor]" text="new DataGridCellEditor(%%):void" constructor="true" tiptext="Creates a new DataGridCellEditor instance." version="1.0" playername="" helpurl="fl.controls.dataGridClasses:DataGridCellEditor:DataGridCellEditor"/>
                <string name="getStyleDefinition" object="[fl.controls.dataGridClasses.DataGridCellEditor]" text="DataGridCellEditor.getStyleDefinition(%%):Object" static="true" tiptext="Retrieves the default style map for the current component." version="1.0" playername="" helpurl="fl.controls.dataGridClasses:DataGridCellEditor:getStyleDefinition"/>
                <string name="setMouseState" object="[fl.controls.dataGridClasses.DataGridCellEditor]" text=".setMouseState(%state:String%):void" tiptext="Sets the current cell to a specific mouse state." version="1.0" playername="" helpurl="fl.controls.dataGridClasses:DataGridCellEditor:setMouseState"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class DataGridCellEditor" helpurl="fl.controls.dataGridClasses:DataGridCellEditor">
                <string name="data" object="[fl.controls.dataGridClasses.DataGridCellEditor]" text=".data" tiptext="Gets or sets an Object that represents the data that is associated with a component." version="" playername="" helpurl="fl.controls.dataGridClasses:DataGridCellEditor:data:get"/>
                <string name="listData" object="[fl.controls.dataGridClasses.DataGridCellEditor]" text=".listData" tiptext="Gets or sets the list properties that are applied to the cell--for example, the index and selected values." version="" playername="" helpurl="fl.controls.dataGridClasses:DataGridCellEditor:listData:get"/>
                <string name="selected" object="[fl.controls.dataGridClasses.DataGridCellEditor]" text=".selected" tiptext="Indicates whether the cell is included in the indices that were selected by the owner." version="" playername="" helpurl="fl.controls.dataGridClasses:DataGridCellEditor:selected:get"/>
            </folder>
        </folder>
        <folder name="DataGridColumn" id="[fl.controls.dataGridClasses.DataGridColumn]" sort="true" index="true" asAncestors="Object" tiptext="The DataGridColumn class describes a column in a DataGrid component." helpurl="fl.controls.dataGridClasses:DataGridColumn">
            <folder name="Methods" id="Methods" tiptext="Methods for class DataGridColumn" helpurl="fl.controls.dataGridClasses:DataGridColumn">
                <string name="DataGridColumn" object="[fl.controls.dataGridClasses.DataGridColumn]" text="new DataGridColumn(%[columnName:String=null]%)" constructor="true" tiptext="Creates a new DataGridColumn instance." version="1.0" playername="" helpurl="fl.controls.dataGridClasses:DataGridColumn:DataGridColumn"/>
                <string name="itemToLabel" object="[fl.controls.dataGridClasses.DataGridColumn]" text=".itemToLabel(%data:Object%):String" tiptext="Returns the string that the item renderer displays for the given data object." version="1.0" playername="" helpurl="fl.controls.dataGridClasses:DataGridColumn:itemToLabel"/>
                <string name="toString" object="[fl.controls.dataGridClasses.DataGridColumn]" text=".toString(%%):String" tiptext="Returns a string representation of the DataGridColumn object." version="1.0" playername="" helpurl="fl.controls.dataGridClasses:DataGridColumn:toString"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class DataGridColumn" helpurl="fl.controls.dataGridClasses:DataGridColumn">
                <string name="dataField" object="[fl.controls.dataGridClasses.DataGridColumn]" text=".dataField" tiptext="Identifies the name of the field or property in the data provider item that is associated with the column." version="" playername="" helpurl="fl.controls.dataGridClasses:DataGridColumn:dataField"/>
                <string name="editable" object="[fl.controls.dataGridClasses.DataGridColumn]" text=".editable" tiptext="Indicates whether the items in the column can be edited." version="" playername="" helpurl="fl.controls.dataGridClasses:DataGridColumn:editable"/>
                <string name="editorDataField" object="[fl.controls.dataGridClasses.DataGridColumn]" text=".editorDataField" tiptext="Identifies the name of the property of the item editor that contains the new data for the list item." version="" playername="" helpurl="fl.controls.dataGridClasses:DataGridColumn:editorDataField"/>
                <string name="itemEditor" object="[fl.controls.dataGridClasses.DataGridColumn]" text=".itemEditor" tiptext="Indicates the class of the instances of the item editor to use for the column, when it is editable." version="" playername="" helpurl="fl.controls.dataGridClasses:DataGridColumn:itemEditor"/>
                <string name="resizable" object="[fl.controls.dataGridClasses.DataGridColumn]" text=".resizable" tiptext="Indicates whether the user is allowed to change the width of the column." version="" playername="" helpurl="fl.controls.dataGridClasses:DataGridColumn:resizable"/>
                <string name="sortDescending" object="[fl.controls.dataGridClasses.DataGridColumn]" text=".sortDescending" tiptext="Indicates whether the DataGridColumn is to be sorted in ascending or descending order." version="" playername="" helpurl="fl.controls.dataGridClasses:DataGridColumn:sortDescending"/>
                <string name="sortOptions" object="[fl.controls.dataGridClasses.DataGridColumn]" text=".sortOptions" tiptext="One or more defined constants, identified by name or number and separated by the bitwise OR (|) operator." version="" playername="" helpurl="fl.controls.dataGridClasses:DataGridColumn:sortOptions"/>
                <string name="sortable" object="[fl.controls.dataGridClasses.DataGridColumn]" text=".sortable" tiptext="Indicates whether the user can click on the header of the current column to sort the data provider." version="" playername="" helpurl="fl.controls.dataGridClasses:DataGridColumn:sortable"/>
                <string name="cellRenderer" object="[fl.controls.dataGridClasses.DataGridColumn]" text=".cellRenderer" tiptext="The class that is used to render the items in this column." version="" playername="" helpurl="fl.controls.dataGridClasses:DataGridColumn:cellRenderer:get"/>
                <string name="headerRenderer" object="[fl.controls.dataGridClasses.DataGridColumn]" text=".headerRenderer" tiptext="The class that is used to render the header of this column." version="" playername="" helpurl="fl.controls.dataGridClasses:DataGridColumn:headerRenderer:get"/>
                <string name="headerText" object="[fl.controls.dataGridClasses.DataGridColumn]" text=".headerText" tiptext="The column name to be displayed in the column header." version="" playername="" helpurl="fl.controls.dataGridClasses:DataGridColumn:headerText:get"/>
                <string name="imeMode" object="[fl.controls.dataGridClasses.DataGridColumn]" text=".imeMode" tiptext="The mode of the input method editor (IME)." version="" playername="" helpurl="fl.controls.dataGridClasses:DataGridColumn:imeMode:get"/>
                <string name="labelFunction" object="[fl.controls.dataGridClasses.DataGridColumn]" text=".labelFunction" tiptext="A function that determines the text to be displayed in this column." version="" playername="" helpurl="fl.controls.dataGridClasses:DataGridColumn:labelFunction:get"/>
                <string name="minWidth" object="[fl.controls.dataGridClasses.DataGridColumn]" text=".minWidth" tiptext="The minimum width of the column, in pixels." version="" playername="" helpurl="fl.controls.dataGridClasses:DataGridColumn:minWidth:get"/>
                <string name="sortCompareFunction" object="[fl.controls.dataGridClasses.DataGridColumn]" text=".sortCompareFunction" tiptext="A callback function that is called when sorting the data in the column." version="" playername="" helpurl="fl.controls.dataGridClasses:DataGridColumn:sortCompareFunction:get"/>
                <string name="visible" object="[fl.controls.dataGridClasses.DataGridColumn]" text=".visible" tiptext="Indicates whether the column is visible." version="" playername="" helpurl="fl.controls.dataGridClasses:DataGridColumn:visible:get"/>
                <string name="width" object="[fl.controls.dataGridClasses.DataGridColumn]" text=".width" tiptext="The width of the column, in pixels." version="" playername="" helpurl="fl.controls.dataGridClasses:DataGridColumn:width:get"/>
            </folder>
        </folder>
        <folder name="HeaderRenderer" id="[fl.controls.dataGridClasses.HeaderRenderer]" sort="true" index="true" asAncestors="fl.controls:LabelButton,fl.controls:BaseButton,fl.core:UIComponent,flash.display:Sprite,flash.display:DisplayObjectContainer,flash.display:InteractiveObject,flash.display:DisplayObject,flash.events:EventDispatcher,Object" tiptext="The HeaderRenderer class displays the column header for the current DataGrid column." helpurl="fl.controls.dataGridClasses:HeaderRenderer">
            <folder name="Methods" id="Methods" tiptext="Methods for class HeaderRenderer" helpurl="fl.controls.dataGridClasses:HeaderRenderer">
                <string name="HeaderRenderer" object="[fl.controls.dataGridClasses.HeaderRenderer]" text="new HeaderRenderer(%%):void" constructor="true" tiptext="Creates a new HeaderRenderer instance." version="1.0" playername="" helpurl="fl.controls.dataGridClasses:HeaderRenderer:HeaderRenderer"/>
                <string name="getStyleDefinition" object="[fl.controls.dataGridClasses.HeaderRenderer]" text="HeaderRenderer.getStyleDefinition(%%):Object" static="true" tiptext="Retrieves the default style map for the current component." version="1.0" playername="" helpurl="fl.controls.dataGridClasses:HeaderRenderer:getStyleDefinition"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class HeaderRenderer" helpurl="fl.controls.dataGridClasses:HeaderRenderer">
                <string name="column" object="[fl.controls.dataGridClasses.HeaderRenderer]" text=".column" tiptext="The index of the column that belongs to this HeaderRenderer instance." version="" playername="" helpurl="fl.controls.dataGridClasses:HeaderRenderer:column:get"/>
            </folder>
        </folder>
    </folder>
        <folder name="fl.controls.listClasses" id="fl.controls.listClasses" sort="true" tiptext="Classes for package fl.controls.listClasses" helpurl="fl.controls.listClasses">
        <folder name="CellRenderer" id="[fl.controls.listClasses.CellRenderer]" sort="true" index="true" asAncestors="fl.controls:LabelButton,fl.controls:BaseButton,fl.core:UIComponent,flash.display:Sprite,flash.display:DisplayObjectContainer,flash.display:InteractiveObject,flash.display:DisplayObject,flash.events:EventDispatcher,Object" tiptext="The CellRenderer class defines methods and properties for list-based components to use to manipulate and display custom cell content in each of their rows." helpurl="fl.controls.listClasses:CellRenderer">
            <folder name="Methods" id="Methods" tiptext="Methods for class CellRenderer" helpurl="fl.controls.listClasses:CellRenderer">
                <string name="CellRenderer" object="[fl.controls.listClasses.CellRenderer]" text="new CellRenderer(%%):void" constructor="true" tiptext="Creates a new CellRenderer instance." version="1.0" playername="" helpurl="fl.controls.listClasses:CellRenderer:CellRenderer"/>
                <string name="getStyleDefinition" object="[fl.controls.listClasses.CellRenderer]" text="CellRenderer.getStyleDefinition(%%):Object" static="true" tiptext="Retrieves the default style map for the current component." version="1.0" playername="" helpurl="fl.controls.listClasses:CellRenderer:getStyleDefinition"/>
                <string name="setSize" object="[fl.controls.listClasses.CellRenderer]" text=".setSize(%width:Number,height:Number%):void" tiptext="Specifies the dimensions at which the data should be rendered." version="1.0" playername="" helpurl="fl.controls.listClasses:CellRenderer:setSize"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class CellRenderer" helpurl="fl.controls.listClasses:CellRenderer">
                <string name="data" object="[fl.controls.listClasses.CellRenderer]" text=".data" tiptext="Gets or sets an Object that represents the data that is associated with a component." version="" playername="" helpurl="fl.controls.listClasses:CellRenderer:data:get"/>
                <string name="listData" object="[fl.controls.listClasses.CellRenderer]" text=".listData" tiptext="Gets or sets the list properties that are applied to the cell--for example, the index and selected values." version="" playername="" helpurl="fl.controls.listClasses:CellRenderer:listData:get"/>
                <string name="selected" object="[fl.controls.listClasses.CellRenderer]" text=".selected" tiptext="Gets or sets a Boolean value that indicates whether the current cell is selected." version="" playername="" helpurl="fl.controls.listClasses:CellRenderer:selected:get"/>
            </folder>
        </folder>
        <folder name="ICellRenderer" id="[fl.controls.listClasses.ICellRenderer]" sort="true" index="true" tiptext="The ICellRenderer interface provides the methods and properties that a cell renderer requires." helpurl="fl.controls.listClasses:ICellRenderer">
            <folder name="Methods" id="Methods" tiptext="Methods for class ICellRenderer" helpurl="fl.controls.listClasses:ICellRenderer">
                <string name="setMouseState" object="[fl.controls.listClasses.ICellRenderer]" text=".setMouseState(%state:String%):void" tiptext="Sets the current cell to a specific mouse state." version="1.0" playername="" helpurl="fl.controls.listClasses:ICellRenderer:setMouseState"/>
                <string name="setSize" object="[fl.controls.listClasses.ICellRenderer]" text=".setSize(%width:Number,height:Number%):void" tiptext="Sets the size of the data according to the pixel values specified by the width and height parameters." version="1.0" playername="" helpurl="fl.controls.listClasses:ICellRenderer:setSize"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class ICellRenderer" helpurl="fl.controls.listClasses:ICellRenderer">
                <string name="data" object="[fl.controls.listClasses.ICellRenderer]" text=".data" tiptext="Gets or sets an Object that represents the data that is associated with a component." version="" playername="" helpurl="fl.controls.listClasses:ICellRenderer:data:get"/>
                <string name="listData" object="[fl.controls.listClasses.ICellRenderer]" text=".listData" tiptext="Gets or sets the list properties that are applied to the cell--for example, the index and selected values." version="" playername="" helpurl="fl.controls.listClasses:ICellRenderer:listData:get"/>
                <string name="selected" object="[fl.controls.listClasses.ICellRenderer]" text=".selected" tiptext="Gets or sets a Boolean value that indicates whether the current cell is selected." version="" playername="" helpurl="fl.controls.listClasses:ICellRenderer:selected:get"/>
                <string name="x" object="[fl.controls.listClasses.ICellRenderer]" text=".x" tiptext="Sets the x coordinate of the cell renderer" version="" playername="" helpurl="fl.controls.listClasses:ICellRenderer:x:set"/>
                <string name="y" object="[fl.controls.listClasses.ICellRenderer]" text=".y" tiptext="Sets the y coordinate of the cell renderer" version="" playername="" helpurl="fl.controls.listClasses:ICellRenderer:y:set"/>
            </folder>
        </folder>
        <folder name="ImageCell" id="[fl.controls.listClasses.ImageCell]" sort="true" index="true" asAncestors="fl.controls.listClasses:CellRenderer,fl.controls:LabelButton,fl.controls:BaseButton,fl.core:UIComponent,flash.display:Sprite,flash.display:DisplayObjectContainer,flash.display:InteractiveObject,flash.display:DisplayObject,flash.events:EventDispatcher,Object" tiptext="The ImageCell is the default cell renderer for the TileList component." helpurl="fl.controls.listClasses:ImageCell">
            <folder name="Methods" id="Methods" tiptext="Methods for class ImageCell" helpurl="fl.controls.listClasses:ImageCell">
                <string name="ImageCell" object="[fl.controls.listClasses.ImageCell]" text="new ImageCell(%%)" constructor="true" tiptext="Creates a new ImageCell instance." version="1.0" playername="" helpurl="fl.controls.listClasses:ImageCell:ImageCell"/>
                <string name="getStyleDefinition" object="[fl.controls.listClasses.ImageCell]" text="ImageCell.getStyleDefinition(%%):Object" static="true" tiptext="Retrieves the default style map for the current component." version="1.0" playername="" helpurl="fl.controls.listClasses:ImageCell:getStyleDefinition"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class ImageCell" helpurl="fl.controls.listClasses:ImageCell">
                <string name="listData" object="[fl.controls.listClasses.ImageCell]" text=".listData" tiptext="Gets or sets the list properties that are applied to the cell, for example, the index and selected values." version="" playername="" helpurl="fl.controls.listClasses:ImageCell:listData:get"/>
                <string name="source" object="[fl.controls.listClasses.ImageCell]" text=".source" tiptext="Gets or sets an absolute or relative URL that identifies the location of the SWF or image file to load, the class name of a movie clip in the library, or a reference to a display object." version="" playername="" helpurl="fl.controls.listClasses:ImageCell:source:get"/>
            </folder>
        </folder>
        <folder name="ListData" id="[fl.controls.listClasses.ListData]" sort="true" index="true" asAncestors="Object" tiptext="ListData is a messenger class that holds information relevant to a specific cell in a list-based component." helpurl="fl.controls.listClasses:ListData">
            <folder name="Methods" id="Methods" tiptext="Methods for class ListData" helpurl="fl.controls.listClasses:ListData">
                <string name="ListData" object="[fl.controls.listClasses.ListData]" text="new ListData(%label:String,icon:Object,owner:fl.core:UIComponent,index:uint,row:uint[,col:uint=0]%)" constructor="true" tiptext="Creates a new instance of the ListData class as specified by its parameters." version="1.0" playername="" helpurl="fl.controls.listClasses:ListData:ListData"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class ListData" helpurl="fl.controls.listClasses:ListData">
                <string name="column" object="[fl.controls.listClasses.ListData]" text=".column" tiptext="The column in which the data item is displayed." version="" playername="" helpurl="fl.controls.listClasses:ListData:column:get"/>
                <string name="icon" object="[fl.controls.listClasses.ListData]" text=".icon" tiptext="A class that represents the icon for the item in the List component, computed from the List class method." version="" playername="" helpurl="fl.controls.listClasses:ListData:icon:get"/>
                <string name="index" object="[fl.controls.listClasses.ListData]" text=".index" tiptext="The index of the item in the data provider." version="" playername="" helpurl="fl.controls.listClasses:ListData:index:get"/>
                <string name="label" object="[fl.controls.listClasses.ListData]" text=".label" tiptext="The label to be displayed in the cell." version="" playername="" helpurl="fl.controls.listClasses:ListData:label:get"/>
                <string name="owner" object="[fl.controls.listClasses.ListData]" text=".owner" tiptext="A reference to the List object that owns this item." version="" playername="" helpurl="fl.controls.listClasses:ListData:owner:get"/>
                <string name="row" object="[fl.controls.listClasses.ListData]" text=".row" tiptext="The row in which the data item is displayed." version="" playername="" helpurl="fl.controls.listClasses:ListData:row:get"/>
            </folder>
        </folder>
        <folder name="TileListData" id="[fl.controls.listClasses.TileListData]" sort="true" index="true" asAncestors="fl.controls.listClasses:ListData,Object" tiptext="TileListData is a messenger class that holds information relevant to a specific cell in the list-based TileListData component." helpurl="fl.controls.listClasses:TileListData">
            <folder name="Methods" id="Methods" tiptext="Methods for class TileListData" helpurl="fl.controls.listClasses:TileListData">
                <string name="TileListData" object="[fl.controls.listClasses.TileListData]" text="new TileListData(%label:String,icon:Object,source:Object,owner:fl.core:UIComponent,index:uint,row:uint[,col:uint=0]%)" constructor="true" tiptext="Creates a new instance of the TileListData class as specified by its parameters." version="1.0" playername="" helpurl="fl.controls.listClasses:TileListData:TileListData"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class TileListData" helpurl="fl.controls.listClasses:TileListData">
                <string name="source" object="[fl.controls.listClasses.TileListData]" text=".source" tiptext="Gets or sets an absolute or relative URL that identifies the location of the SWF or image file to load, the class name of a movie clip in the library, or a reference to a display object." version="" playername="" helpurl="fl.controls.listClasses:TileListData:source:get"/>
            </folder>
        </folder>
    </folder>
        <folder name="fl.controls.progressBarClasses" id="fl.controls.progressBarClasses" sort="true" tiptext="Classes for package fl.controls.progressBarClasses" helpurl="fl.controls.progressBarClasses">
        <folder name="IndeterminateBar" id="[fl.controls.progressBarClasses.IndeterminateBar]" sort="true" index="true" asAncestors="fl.core:UIComponent,flash.display:Sprite,flash.display:DisplayObjectContainer,flash.display:InteractiveObject,flash.display:DisplayObject,flash.events:EventDispatcher,Object" tiptext="The IndeterminateBar class handles the drawing of the progress bar component when the size of the source that is being loaded is unknown." helpurl="fl.controls.progressBarClasses:IndeterminateBar">
            <folder name="Methods" id="Methods" tiptext="Methods for class IndeterminateBar" helpurl="fl.controls.progressBarClasses:IndeterminateBar">
                <string name="IndeterminateBar" object="[fl.controls.progressBarClasses.IndeterminateBar]" text="new IndeterminateBar(%%)" constructor="true" tiptext="Creates a new instance of the IndeterminateBar component." version="1.0" playername="" helpurl="fl.controls.progressBarClasses:IndeterminateBar:IndeterminateBar"/>
                <string name="getStyleDefinition" object="[fl.controls.progressBarClasses.IndeterminateBar]" text="IndeterminateBar.getStyleDefinition(%%):Object" static="true" tiptext="Retrieves the default style map for the current component." version="1.0" playername="" helpurl="fl.controls.progressBarClasses:IndeterminateBar:getStyleDefinition"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class IndeterminateBar" helpurl="fl.controls.progressBarClasses:IndeterminateBar">
                <string name="visible" object="[fl.controls.progressBarClasses.IndeterminateBar]" text=".visible" tiptext="Gets or sets a Boolean value that indicates whether the indeterminate bar is visible." version="" playername="" helpurl="fl.controls.progressBarClasses:IndeterminateBar:visible:get"/>
            </folder>
        </folder>
    </folder>
        <folder name="fl.core" id="fl.core" sort="true" tiptext="Classes for package fl.core" helpurl="fl.core">
        <folder name="InvalidationType" id="[fl.core.InvalidationType]" sort="true" index="true" asAncestors="Object" tiptext="The InvalidationType class defines InvalidationType constants that are used by the type property of an event object that is dispatched after a component is invalidated." helpurl="fl.core:InvalidationType">
            <folder name="Properties" id="Properties" tiptext="Properties for class InvalidationType" helpurl="fl.core:InvalidationType">
                <string name="ALL" object="[fl.core.InvalidationType]" text="InvalidationType.ALL" constant="true" tiptext="The InvalidationType.ALL constant defines the value of the type property of the event object that is dispatched to indicate that the component should redraw itself entirely." version="" playername="" helpurl="fl.core:InvalidationType:ALL"/>
                <string name="DATA" object="[fl.core.InvalidationType]" text="InvalidationType.DATA" constant="true" tiptext="The InvalidationType.DATA constant defines the value of the type property of the event object that is dispatched to indicate that the data that belongs to a component is invalid." version="" playername="" helpurl="fl.core:InvalidationType:DATA"/>
                <string name="RENDERER_STYLES" object="[fl.core.InvalidationType]" text="InvalidationType.RENDERER_STYLES" constant="true" tiptext="The InvalidationType.RENDERER_STYLES constant defines the value of the type property of the event object that is dispatched to indicate that the renderer styles of the component are invalid." version="" playername="" helpurl="fl.core:InvalidationType:RENDERER_STYLES"/>
                <string name="SCROLL" object="[fl.core.InvalidationType]" text="InvalidationType.SCROLL" constant="true" tiptext="The InvalidationType.SCROLL constant defines the value of the type property of the event object that is dispatched to indicate that the scroll position of the component is invalid." version="" playername="" helpurl="fl.core:InvalidationType:SCROLL"/>
                <string name="SELECTED" object="[fl.core.InvalidationType]" text="InvalidationType.SELECTED" constant="true" tiptext="The InvalidationType.SELECTED constant defines the value of the type property of the event object that is dispatched to indicate that the selected property of the component is invalid." version="" playername="" helpurl="fl.core:InvalidationType:SELECTED"/>
                <string name="SIZE" object="[fl.core.InvalidationType]" text="InvalidationType.SIZE" constant="true" tiptext="The InvalidationType.SIZE constant defines the value of the type property of the event object that is dispatched to indicate that the screen dimensions of the component are invalid." version="" playername="" helpurl="fl.core:InvalidationType:SIZE"/>
                <string name="STATE" object="[fl.core.InvalidationType]" text="InvalidationType.STATE" constant="true" tiptext="The InvalidationType.STATE constant defines the value of the type property of the event object that is dispatched to indicate that the state of the component is invalid." version="" playername="" helpurl="fl.core:InvalidationType:STATE"/>
                <string name="STYLES" object="[fl.core.InvalidationType]" text="InvalidationType.STYLES" constant="true" tiptext="The InvalidationType.STYLES constant defines the value of the type property of the event object that is dispatched to indicate that the styles of the component are invalid." version="" playername="" helpurl="fl.core:InvalidationType:STYLES"/>
            </folder>
        </folder>
        <folder name="UIComponent" id="[fl.core.UIComponent]" sort="true" index="true" asAncestors="flash.display:Sprite,flash.display:DisplayObjectContainer,flash.display:InteractiveObject,flash.display:DisplayObject,flash.events:EventDispatcher,Object" tiptext="The UIComponent class is the base class for all visual components, both interactive and noninteractive." helpurl="fl.core:UIComponent">
            <folder name="Methods" id="Methods" tiptext="Methods for class UIComponent" helpurl="fl.core:UIComponent">
                <string name="UIComponent" object="[fl.core.UIComponent]" text="new UIComponent(%%)" constructor="true" tiptext="Creates a new UIComponent component instance." version="1.0" playername="" helpurl="fl.core:UIComponent:UIComponent"/>
                <string name="clearStyle" object="[fl.core.UIComponent]" text=".clearStyle(%style:String%):void" tiptext="Deletes a style property from this component instance." version="1.0" playername="" helpurl="fl.core:UIComponent:clearStyle"/>
                <string name="drawFocus" object="[fl.core.UIComponent]" text=".drawFocus(%focused:Boolean%):void" tiptext="Shows or hides the focus indicator on this component." version="1.0" playername="" helpurl="fl.core:UIComponent:drawFocus"/>
                <string name="drawNow" object="[fl.core.UIComponent]" text=".drawNow(%%):void" tiptext="Initiates an immediate draw operation, without invalidating everything as invalidateNow does." version="1.0" playername="" helpurl="fl.core:UIComponent:drawNow"/>
                <string name="getFocus" object="[fl.core.UIComponent]" text=".getFocus(%%):flash.display:InteractiveObject" tiptext="Retrieves the object that currently has focus." version="1.0" playername="" helpurl="fl.core:UIComponent:getFocus"/>
                <string name="getStyleDefinition" object="[fl.core.UIComponent]" text="UIComponent.getStyleDefinition(%%):Object" static="true" tiptext="Retrieves the default style map for the current component." version="1.0" playername="" helpurl="fl.core:UIComponent:getStyleDefinition"/>
                <string name="getStyleValue" object="[fl.core.UIComponent]" text=".getStyleValue(%name:String%):Object" tiptext="Returns the specified style for a component, considering all styles set on the global level, component level and instance level." version="1.0" playername="" helpurl="fl.core:UIComponent:getStyleValue"/>
                <string name="getStyle" object="[fl.core.UIComponent]" text=".getStyle(%style:String%):Object" tiptext="Retrieves a style property that is set in the style lookup chain of the component." version="1.0" playername="" helpurl="fl.core:UIComponent:getStyle"/>
                <string name="invalidate" object="[fl.core.UIComponent]" text=".invalidate(%[property:String=unknown,callLater:Boolean=true]%):void" tiptext="Marks a property as invalid and redraws the component on the next frame unless otherwise specified." version="1.0" playername="" helpurl="fl.core:UIComponent:invalidate"/>
                <string name="mergeStyles" object="[fl.core.UIComponent]" text="UIComponent.mergeStyles(%list:restParam%):Object" static="true" tiptext="Merges the styles from multiple classes into one object." version="1.0" playername="" helpurl="fl.core:UIComponent:mergeStyles"/>
                <string name="move" object="[fl.core.UIComponent]" text=".move(%x:Number,y:Number%):void" tiptext="Moves the component to the specified position within its parent." version="1.0" playername="" helpurl="fl.core:UIComponent:move"/>
                <string name="setFocus" object="[fl.core.UIComponent]" text=".setFocus(%%):void" tiptext="Sets the focus to this component." version="1.0" playername="" helpurl="fl.core:UIComponent:setFocus"/>
                <string name="setSize" object="[fl.core.UIComponent]" text=".setSize(%width:Number,height:Number%):void" tiptext="Sets the component to the specified width and height." version="1.0" playername="" helpurl="fl.core:UIComponent:setSize"/>
                <string name="setStyle" object="[fl.core.UIComponent]" text=".setStyle(%style:String,value:Object%):void" tiptext="Sets a style property on this component instance." version="1.0" playername="" helpurl="fl.core:UIComponent:setStyle"/>
                <string name="validateNow" object="[fl.core.UIComponent]" text=".validateNow(%%):void" tiptext="Validates and updates the properties and layout of this object, redrawing it if necessary." version="1.0" playername="" helpurl="fl.core:UIComponent:validateNow"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class UIComponent" helpurl="fl.core:UIComponent">
                <string name="version" object="[fl.core.UIComponent]" text="UIComponent.version" constant="true" tiptext="The version number of the components." version="" playername="" helpurl="fl.core:UIComponent:version"/>
                <string name="enabled" object="[fl.core.UIComponent]" text=".enabled" tiptext="Gets or sets a value that indicates whether the component can accept user interaction." version="" playername="" helpurl="fl.core:UIComponent:enabled:get"/>
                <string name="focusEnabled" object="[fl.core.UIComponent]" text=".focusEnabled" tiptext="Gets or sets a Boolean value that indicates whether the component can receive focus after the user clicks it." version="" playername="" helpurl="fl.core:UIComponent:focusEnabled:get"/>
                <string name="focusManager" object="[fl.core.UIComponent]" text=".focusManager" tiptext="Gets or sets the FocusManager that controls focus for this component and its peers." version="" playername="" helpurl="fl.core:UIComponent:focusManager:get"/>
                <string name="height" object="[fl.core.UIComponent]" text=".height" tiptext="Gets or sets the height of the component, in pixels." version="" playername="" helpurl="fl.core:UIComponent:height:get"/>
                <string name="mouseFocusEnabled" object="[fl.core.UIComponent]" text=".mouseFocusEnabled" tiptext="Gets or sets a value that indicates whether the component can receive focus after the user clicks it." version="" playername="" helpurl="fl.core:UIComponent:mouseFocusEnabled:get"/>
                <string name="scaleX" object="[fl.core.UIComponent]" text=".scaleX" tiptext="Multiplies the current width of the component by a scale factor." version="" playername="" helpurl="fl.core:UIComponent:scaleX:get"/>
                <string name="scaleY" object="[fl.core.UIComponent]" text=".scaleY" tiptext="Multiplies the current height of the component by a scale factor." version="" playername="" helpurl="fl.core:UIComponent:scaleY:get"/>
                <string name="visible" object="[fl.core.UIComponent]" text=".visible" tiptext="Gets or sets a value that indicates whether the current component instance is visible." version="" playername="" helpurl="fl.core:UIComponent:visible:get"/>
                <string name="width" object="[fl.core.UIComponent]" text=".width" tiptext="Gets or sets the width of the component, in pixels." version="" playername="" helpurl="fl.core:UIComponent:width:get"/>
                <string name="x" object="[fl.core.UIComponent]" text=".x" tiptext="Gets or sets the x coordinate that represents the position of the component along the x axis within its parent container." version="" playername="" helpurl="fl.core:UIComponent:x:get"/>
                <string name="y" object="[fl.core.UIComponent]" text=".y" tiptext="Gets or sets the y coordinate that represents the position of the component along the y axis within its parent container." version="" playername="" helpurl="fl.core:UIComponent:y:get"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class UIComponent" helpurl="fl.core:UIComponent">
                <string name="hide" object="[fl.core.UIComponent]" text=".addEventListener(%type:String=ComponentEvent.HIDE{ComponentEvent.HIDE,ComponentEvent.SHOW,ComponentEvent.RESIZE,ComponentEvent.MOVE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched after the component visibility changes from visible to invisible." version="" playername="" helpurl="fl.core:UIComponent_fl.events.ComponentEvent.HIDE_hide"/>
                <string name="show" object="[fl.core.UIComponent]" text=".addEventListener(%type:String=ComponentEvent.SHOW{ComponentEvent.HIDE,ComponentEvent.SHOW,ComponentEvent.RESIZE,ComponentEvent.MOVE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched after the component visibility changes from invisible to visible." version="" playername="" helpurl="fl.core:UIComponent_fl.events.ComponentEvent.SHOW_show"/>
                <string name="resize" object="[fl.core.UIComponent]" text=".addEventListener(%type:String=ComponentEvent.RESIZE{ComponentEvent.HIDE,ComponentEvent.SHOW,ComponentEvent.RESIZE,ComponentEvent.MOVE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched after the component is resized." version="" playername="" helpurl="fl.core:UIComponent_fl.events.ComponentEvent.RESIZE_resize"/>
                <string name="move" object="[fl.core.UIComponent]" text=".addEventListener(%type:String=ComponentEvent.MOVE{ComponentEvent.HIDE,ComponentEvent.SHOW,ComponentEvent.RESIZE,ComponentEvent.MOVE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched after the component is moved." version="" playername="" helpurl="fl.core:UIComponent_fl.events.ComponentEvent.MOVE_move"/>
            </folder>
        </folder>
    </folder>
        <folder name="fl.data" id="fl.data" sort="true" tiptext="Classes for package fl.data" helpurl="fl.data">
        <folder name="DataProvider" id="[fl.data.DataProvider]" sort="true" index="true" asAncestors="flash.events:EventDispatcher,Object" tiptext="The DataProvider class provides methods and properties that allow you to query and modify the data in any list-based component--for example, in a List, DataGrid, TileList, or ComboBox component." helpurl="fl.data:DataProvider">
            <folder name="Methods" id="Methods" tiptext="Methods for class DataProvider" helpurl="fl.data:DataProvider">
                <string name="DataProvider" object="[fl.data.DataProvider]" text="new DataProvider(%[value:Object=null]%)" constructor="true" tiptext="Creates a new DataProvider object using a list, XML instance or an array of data objects as the data source." version="1.0" playername="" helpurl="fl.data:DataProvider:DataProvider"/>
                <string name="addItemAt" object="[fl.data.DataProvider]" text=".addItemAt(%item:Object,index:uint%):void" tiptext="Adds a new item to the data provider at the specified index." version="1.0" playername="" helpurl="fl.data:DataProvider:addItemAt"/>
                <string name="addItem" object="[fl.data.DataProvider]" text=".addItem(%item:Object%):void" tiptext="Appends an item to the end of the data provider." version="1.0" playername="" helpurl="fl.data:DataProvider:addItem"/>
                <string name="addItemsAt" object="[fl.data.DataProvider]" text=".addItemsAt(%items:Object,index:uint%):void" tiptext="Adds several items to the data provider at the specified index and dispatches a DataChangeType.ADD event." version="1.0" playername="" helpurl="fl.data:DataProvider:addItemsAt"/>
                <string name="addItems" object="[fl.data.DataProvider]" text=".addItems(%items:Object%):void" tiptext="Appends multiple items to the end of the DataProvider and dispatches a DataChangeType.ADD event." version="1.0" playername="" helpurl="fl.data:DataProvider:addItems"/>
                <string name="clone" object="[fl.data.DataProvider]" text=".clone(%%):fl.data:DataProvider" tiptext="Creates a copy of the current DataProvider object." version="1.0" playername="" helpurl="fl.data:DataProvider:clone"/>
                <string name="concat" object="[fl.data.DataProvider]" text=".concat(%items:Object%):void" tiptext="Concatenates the specified items to the end of the current data provider." version="1.0" playername="" helpurl="fl.data:DataProvider:concat"/>
                <string name="getItemAt" object="[fl.data.DataProvider]" text=".getItemAt(%index:uint%):Object" tiptext="Returns the item at the specified index." version="1.0" playername="" helpurl="fl.data:DataProvider:getItemAt"/>
                <string name="getItemIndex" object="[fl.data.DataProvider]" text=".getItemIndex(%item:Object%):int" tiptext="Returns the index of the specified item." version="1.0" playername="" helpurl="fl.data:DataProvider:getItemIndex"/>
                <string name="invalidateItemAt" object="[fl.data.DataProvider]" text=".invalidateItemAt(%index:int%):void" tiptext="Invalidates the item at the specified index." version="1.0" playername="" helpurl="fl.data:DataProvider:invalidateItemAt"/>
                <string name="invalidateItem" object="[fl.data.DataProvider]" text=".invalidateItem(%item:Object%):void" tiptext="Invalidates the specified item." version="1.0" playername="" helpurl="fl.data:DataProvider:invalidateItem"/>
                <string name="invalidate" object="[fl.data.DataProvider]" text=".invalidate(%%):void" tiptext="Invalidates all the data items that the DataProvider contains and dispatches a DataChangeEvent.INVALIDATE_ALL event." version="1.0" playername="" helpurl="fl.data:DataProvider:invalidate"/>
                <string name="merge" object="[fl.data.DataProvider]" text=".merge(%newData:Object%):void" tiptext="Appends the specified data into the data that the data provider contains and removes any duplicate items." version="1.0" playername="" helpurl="fl.data:DataProvider:merge"/>
                <string name="removeAll" object="[fl.data.DataProvider]" text=".removeAll(%%):void" tiptext="Removes all items from the data provider and dispatches a DataChangeType.REMOVE_ALL event." version="1.0" playername="" helpurl="fl.data:DataProvider:removeAll"/>
                <string name="removeItemAt" object="[fl.data.DataProvider]" text=".removeItemAt(%index:uint%):Object" tiptext="Removes the item at the specified index and dispatches a DataChangeType.REMOVE event." version="1.0" playername="" helpurl="fl.data:DataProvider:removeItemAt"/>
                <string name="removeItem" object="[fl.data.DataProvider]" text=".removeItem(%item:Object%):Object" tiptext="Removes the specified item from the data provider and dispatches a DataChangeType.REMOVE event." version="1.0" playername="" helpurl="fl.data:DataProvider:removeItem"/>
                <string name="replaceItemAt" object="[fl.data.DataProvider]" text=".replaceItemAt(%newItem:Object,index:uint%):Object" tiptext="Replaces the item at the specified index and dispatches a DataChangeType.REPLACE event." version="1.0" playername="" helpurl="fl.data:DataProvider:replaceItemAt"/>
                <string name="replaceItem" object="[fl.data.DataProvider]" text=".replaceItem(%newItem:Object,oldItem:Object%):Object" tiptext="Replaces an existing item with a new item and dispatches a DataChangeType.REPLACE event." version="1.0" playername="" helpurl="fl.data:DataProvider:replaceItem"/>
                <string name="sortOn" object="[fl.data.DataProvider]" text=".sortOn(%fieldName:Object[,options:Object=null]%)" tiptext="Sorts the items that the data provider contains by the specified field and dispatches a DataChangeType.SORT event." version="1.0" playername="" helpurl="fl.data:DataProvider:sortOn"/>
                <string name="sort" object="[fl.data.DataProvider]" text=".sort(%sortArgs:restParam%)" tiptext="Sorts the items that the data provider contains and dispatches a DataChangeType.SORT event." version="1.0" playername="" helpurl="fl.data:DataProvider:sort"/>
                <string name="toArray" object="[fl.data.DataProvider]" text=".toArray(%%):Array" tiptext="Creates an Array object representation of the data that the data provider contains." version="1.0" playername="" helpurl="fl.data:DataProvider:toArray"/>
                <string name="toString" object="[fl.data.DataProvider]" text=".toString(%%):String" tiptext="Creates a string representation of the data that the data provider contains." version="1.0" playername="" helpurl="fl.data:DataProvider:toString"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class DataProvider" helpurl="fl.data:DataProvider">
                <string name="length" object="[fl.data.DataProvider]" text=".length" tiptext="The number of items that the data provider contains." version="" playername="" helpurl="fl.data:DataProvider:length:get"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class DataProvider" helpurl="fl.data:DataProvider">
                <string name="dataChange" object="[fl.data.DataProvider]" text=".addEventListener(%type:String=DataChangeEvent.DATA_CHANGE{DataChangeEvent.DATA_CHANGE,DataChangeEvent.PRE_DATA_CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched after the data is changed." version="" playername="" helpurl="fl.data:DataProvider_fl.events.DataChangeEvent.DATA_CHANGE_dataChange"/>
                <string name="preDataChange" object="[fl.data.DataProvider]" text=".addEventListener(%type:String=DataChangeEvent.PRE_DATA_CHANGE{DataChangeEvent.DATA_CHANGE,DataChangeEvent.PRE_DATA_CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched before the data is changed." version="" playername="" helpurl="fl.data:DataProvider_fl.events.DataChangeEvent.PRE_DATA_CHANGE_preDataChange"/>
            </folder>
        </folder>
        <folder name="SimpleCollectionItem" id="[fl.data.SimpleCollectionItem]" sort="true" index="true" asAncestors="Object" tiptext="The SimpleCollectionItem class defines a single item in an inspectable property that represents a data provider." helpurl="fl.data:SimpleCollectionItem">
            <folder name="Methods" id="Methods" tiptext="Methods for class SimpleCollectionItem" helpurl="fl.data:SimpleCollectionItem">
                <string name="SimpleCollectionItem" object="[fl.data.SimpleCollectionItem]" text="new SimpleCollectionItem(%%)" constructor="true" tiptext="Creates a new SimpleCollectionItem object." version="1.0" playername="" helpurl="fl.data:SimpleCollectionItem:SimpleCollectionItem"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class SimpleCollectionItem" helpurl="fl.data:SimpleCollectionItem">
                <string name="data" object="[fl.data.SimpleCollectionItem]" text=".data" tiptext="The data property of the object." version="" playername="" helpurl="fl.data:SimpleCollectionItem:data"/>
                <string name="label" object="[fl.data.SimpleCollectionItem]" text=".label" tiptext="The label property of the object." version="" playername="" helpurl="fl.data:SimpleCollectionItem:label"/>
            </folder>
        </folder>
        <folder name="TileListCollectionItem" id="[fl.data.TileListCollectionItem]" sort="true" index="true" asAncestors="Object" tiptext="The TileListCollectionItem class defines a single item in an inspectable property that represents a data provider." helpurl="fl.data:TileListCollectionItem">
            <folder name="Methods" id="Methods" tiptext="Methods for class TileListCollectionItem" helpurl="fl.data:TileListCollectionItem">
                <string name="TileListCollectionItem" object="[fl.data.TileListCollectionItem]" text="new TileListCollectionItem(%%)" constructor="true" tiptext="Creates a new TileListCollectionItem object." version="1.0" playername="" helpurl="fl.data:TileListCollectionItem:TileListCollectionItem"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class TileListCollectionItem" helpurl="fl.data:TileListCollectionItem">
                <string name="label" object="[fl.data.TileListCollectionItem]" text=".label" tiptext="The label property of the object." version="" playername="" helpurl="fl.data:TileListCollectionItem:label"/>
                <string name="source" object="[fl.data.TileListCollectionItem]" text=".source" tiptext="The source property of the object." version="" playername="" helpurl="fl.data:TileListCollectionItem:source"/>
            </folder>
        </folder>
    </folder>
        <folder name="fl.display" id="fl.display" sort="true" tiptext="Classes for package fl.display" helpurl="fl.display">
        <folder name="ProLoader" id="[fl.display.ProLoader]" sort="true" index="true" asAncestors="flash.display:Sprite,flash.display:DisplayObjectContainer,flash.display:InteractiveObject,flash.display:DisplayObject,flash.events:EventDispatcher,Object" tiptext="Use to load SWF files or images." helpurl="fl.display:ProLoader">
            <folder name="Methods" id="Methods" tiptext="Methods for class ProLoader" helpurl="fl.display:ProLoader">
                <string name="ProLoader" object="[fl.display.ProLoader]" text="new ProLoader(%%)" constructor="true" tiptext="Use to load SWF files or images." version="" playername="" helpurl="fl.display:ProLoader:ProLoader"/>
                <string name="close" object="[fl.display.ProLoader]" text=".close(%%):void" tiptext="mimic Loader API" version="" playername="" helpurl="fl.display:ProLoader:close"/>
                <string name="loadBytes" object="[fl.display.ProLoader]" text=".loadBytes(%bytes:flash.utils:ByteArray[,context:flash.system:LoaderContext=null]%):void" tiptext="mimic Loader API" version="" playername="" helpurl="fl.display:ProLoader:loadBytes"/>
                <string name="loadFilePromise" object="[fl.display.ProLoader]" text=".loadFilePromise(%promise:Object[,context:flash.system:LoaderContext=null]%):void" tiptext="mimic loadFilePromise() API." version="2.0" playername="AIR" helpurl="fl.display:ProLoader:loadFilePromise"/>
                <string name="load" object="[fl.display.ProLoader]" text=".load(%request:flash.net:URLRequest[,context:flash.system:LoaderContext=null]%):void" tiptext="mimic Loader API" version="" playername="" helpurl="fl.display:ProLoader:load"/>
                <string name="unloadAndStop" object="[fl.display.ProLoader]" text=".unloadAndStop(%[gc:Boolean=true]%):void" tiptext="Calling this API in a player that does not support it will throw an Error." version="1.5" playername="" helpurl="fl.display:ProLoader:unloadAndStop"/>
                <string name="unload" object="[fl.display.ProLoader]" text=".unload(%%):void" tiptext="mimic Loader API" version="" playername="" helpurl="fl.display:ProLoader:unload"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class ProLoader" helpurl="fl.display:ProLoader">
                <string name="contentLoaderInfo" object="[fl.display.ProLoader]" text=".contentLoaderInfo" tiptext="mimic Loader API." version="" playername="" helpurl="fl.display:ProLoader:contentLoaderInfo:get"/>
                <string name="content" object="[fl.display.ProLoader]" text=".content" tiptext="mimic Loader API" version="" playername="" helpurl="fl.display:ProLoader:content:get"/>
                <string name="uncaughtErrorEvents" object="[fl.display.ProLoader]" text=".uncaughtErrorEvents" tiptext="mimic uncaughtErrorEvents API." version="" playername="" helpurl="fl.display:ProLoader:uncaughtErrorEvents:get"/>
            </folder>
        </folder>
        <folder name="ProLoaderInfo" id="[fl.display.ProLoaderInfo]" sort="true" index="true" asAncestors="flash.events:EventDispatcher,Object" tiptext="Used by ProLoader instead of LoaderInfo." helpurl="fl.display:ProLoaderInfo">
            <folder name="Properties" id="Properties" tiptext="Properties for class ProLoaderInfo" helpurl="fl.display:ProLoaderInfo">
                <string name="actionScriptVersion" object="[fl.display.ProLoaderInfo]" text=".actionScriptVersion" tiptext="The ActionScript version of the loaded SWF file." version="" playername="" helpurl="fl.display:ProLoaderInfo:actionScriptVersion:get"/>
                <string name="applicationDomain" object="[fl.display.ProLoaderInfo]" text=".applicationDomain" tiptext="When an external SWF file is loaded, all ActionScript 3.0 definitions contained in the loaded class are stored in the applicationDomain property." version="" playername="" helpurl="fl.display:ProLoaderInfo:applicationDomain:get"/>
                <string name="bytesLoaded" object="[fl.display.ProLoaderInfo]" text=".bytesLoaded" tiptext="The number of bytes that are loaded for the media." version="" playername="" helpurl="fl.display:ProLoaderInfo:bytesLoaded:get"/>
                <string name="bytesTotal" object="[fl.display.ProLoaderInfo]" text=".bytesTotal" tiptext="Before the first progress event is dispatched by this ProLoaderInfo object&apos;s corresponding ProLoader object, bytesTotal is 0." version="" playername="" helpurl="fl.display:ProLoaderInfo:bytesTotal:get"/>
                <string name="bytes" object="[fl.display.ProLoaderInfo]" text=".bytes" tiptext="The bytes associated with a ProLoaderInfo object." version="" playername="" helpurl="fl.display:ProLoaderInfo:bytes:get"/>
                <string name="childAllowsParent" object="[fl.display.ProLoaderInfo]" text=".childAllowsParent" tiptext="Expresses the trust relationship from content (child) to the ProLoader (parent)." version="" playername="" helpurl="fl.display:ProLoaderInfo:childAllowsParent:get"/>
                <string name="childSandboxBridge" object="[fl.display.ProLoaderInfo]" text=".childSandboxBridge" tiptext="A object that can be set by the loaded content&apos;s code to expose properties and methods that can be accessed by code in the Loader object&apos;s sandbox." version="" playername="AIR" helpurl="fl.display:ProLoaderInfo:childSandboxBridge:get"/>
                <string name="contentType" object="[fl.display.ProLoaderInfo]" text=".contentType" tiptext="The MIME type of the loaded file." version="" playername="" helpurl="fl.display:ProLoaderInfo:contentType:get"/>
                <string name="content" object="[fl.display.ProLoaderInfo]" text=".content" tiptext="The loaded object associated with this ProLoaderInfo object." version="" playername="" helpurl="fl.display:ProLoaderInfo:content:get"/>
                <string name="frameRate" object="[fl.display.ProLoaderInfo]" text=".frameRate" tiptext="The nominal frame rate, in frames per second, of the loaded SWF file." version="" playername="" helpurl="fl.display:ProLoaderInfo:frameRate:get"/>
                <string name="height" object="[fl.display.ProLoaderInfo]" text=".height" tiptext="The nominal height of the loaded file." version="" playername="" helpurl="fl.display:ProLoaderInfo:height:get"/>
                <string name="isURLInaccessible" object="[fl.display.ProLoaderInfo]" text=".isURLInaccessible" tiptext="Indicates if the LoaderInfo.url property has been truncated." version="" playername="" helpurl="fl.display:ProLoaderInfo:isURLInaccessible:get"/>
                <string name="loaderURL" object="[fl.display.ProLoaderInfo]" text=".loaderURL" tiptext="The URL of the SWF file that initiated the loading of the media described by this LoaderInfo object." version="" playername="" helpurl="fl.display:ProLoaderInfo:loaderURL:get"/>
                <string name="loader" object="[fl.display.ProLoaderInfo]" text=".loader" tiptext="The ProLoader object associated with this ProLoaderInfo object." version="" playername="" helpurl="fl.display:ProLoaderInfo:loader:get"/>
                <string name="parameters" object="[fl.display.ProLoaderInfo]" text=".parameters" tiptext="An object that contains name-value pairs that represent the parameters provided to the loaded SWF file." version="" playername="" helpurl="fl.display:ProLoaderInfo:parameters:get"/>
                <string name="parentAllowsChild" object="[fl.display.ProLoaderInfo]" text=".parentAllowsChild" tiptext="Expresses the trust relationship from ProLoader (parent) to the content (child)." version="" playername="" helpurl="fl.display:ProLoaderInfo:parentAllowsChild:get"/>
                <string name="parentSandboxBridge" object="[fl.display.ProLoaderInfo]" text=".parentSandboxBridge" tiptext="A object that can be set by code in the Loader object&apos;s sandbox to expose properties and methods that can be accessed by the loaded content&apos;s code." version="" playername="AIR" helpurl="fl.display:ProLoaderInfo:parentSandboxBridge:get"/>
                <string name="sameDomain" object="[fl.display.ProLoaderInfo]" text=".sameDomain" tiptext="Expresses the domain relationship between the loader and the content: true if they have the same origin domain; false otherwise." version="" playername="" helpurl="fl.display:ProLoaderInfo:sameDomain:get"/>
                <string name="sharedEvents" object="[fl.display.ProLoaderInfo]" text=".sharedEvents" tiptext="Because of timing issues when loading content that does RSL preloading, it is recommended to wait until the init event is received to add event listeners to the sharedEvents object, or to add them again when the init event is received." version="" playername="" helpurl="fl.display:ProLoaderInfo:sharedEvents:get"/>
                <string name="swfVersion" object="[fl.display.ProLoaderInfo]" text=".swfVersion" tiptext="The file format version of the loaded SWF file." version="" playername="" helpurl="fl.display:ProLoaderInfo:swfVersion:get"/>
                <string name="url" object="[fl.display.ProLoaderInfo]" text=".url" tiptext="The URL of the media being loaded." version="" playername="" helpurl="fl.display:ProLoaderInfo:url:get"/>
                <string name="width" object="[fl.display.ProLoaderInfo]" text=".width" tiptext="The nominal width of the loaded content." version="" playername="" helpurl="fl.display:ProLoaderInfo:width:get"/>
            </folder>
        </folder>
    </folder>
        <folder name="fl.events" id="fl.events" sort="true" tiptext="Classes for package fl.events" helpurl="fl.events">
        <folder name="ColorPickerEvent" id="[fl.events.ColorPickerEvent]" sort="true" index="true" asAncestors="flash.events:Event,Object" tiptext="The ColorPickerEvent class defines events that are associated with the ColorPicker component." helpurl="fl.events:ColorPickerEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class ColorPickerEvent" helpurl="fl.events:ColorPickerEvent">
                <string name="ColorPickerEvent" object="[fl.events.ColorPickerEvent]" text="new ColorPickerEvent(%type:String,color:uint%)" constructor="true" tiptext="Creates a new ColorPickerEvent object." version="1.0" playername="" helpurl="fl.events:ColorPickerEvent:ColorPickerEvent"/>
                <string name="clone" object="[fl.events.ColorPickerEvent]" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of the ColorPickerEvent object and sets the value of each parameter to match the original." version="1.0" playername="" helpurl="fl.events:ColorPickerEvent:clone"/>
                <string name="toString" object="[fl.events.ColorPickerEvent]" text=".toString(%%):String" tiptext="Returns a string that contains all the properties of the ColorPickerEvent object." version="1.0" playername="" helpurl="fl.events:ColorPickerEvent:toString"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class ColorPickerEvent" helpurl="fl.events:ColorPickerEvent">
                <string name="CHANGE" object="[fl.events.ColorPickerEvent]" text="ColorPickerEvent.CHANGE" constant="true" tiptext="Defines the value of the type property of the change event object." version="" playername="" helpurl="fl.events:ColorPickerEvent:CHANGE"/>
                <string name="ENTER" object="[fl.events.ColorPickerEvent]" text="ColorPickerEvent.ENTER" constant="true" tiptext="Defines the value of the type property of an enter event object." version="" playername="" helpurl="fl.events:ColorPickerEvent:ENTER"/>
                <string name="ITEM_ROLL_OUT" object="[fl.events.ColorPickerEvent]" text="ColorPickerEvent.ITEM_ROLL_OUT" constant="true" tiptext="Defines the value of the type property for an itemRollOut event object." version="" playername="" helpurl="fl.events:ColorPickerEvent:ITEM_ROLL_OUT"/>
                <string name="ITEM_ROLL_OVER" object="[fl.events.ColorPickerEvent]" text="ColorPickerEvent.ITEM_ROLL_OVER" constant="true" tiptext="Defines the value of the type property for an itemRollOver event object." version="" playername="" helpurl="fl.events:ColorPickerEvent:ITEM_ROLL_OVER"/>
                <string name="color" object="[fl.events.ColorPickerEvent]" text=".color" tiptext="Gets the color value that is associated with the event." version="" playername="" helpurl="fl.events:ColorPickerEvent:color:get"/>
            </folder>
        </folder>
        <folder name="ComponentEvent" id="[fl.events.ComponentEvent]" sort="true" index="true" asAncestors="flash.events:Event,Object" tiptext="The ComponentEvent class defines events that are associated with the UIComponent class." helpurl="fl.events:ComponentEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class ComponentEvent" helpurl="fl.events:ComponentEvent">
                <string name="ComponentEvent" object="[fl.events.ComponentEvent]" text="new ComponentEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false]%)" constructor="true" tiptext="Creates a new ComponentEvent object that contains information about a component event." version="1.0" playername="" helpurl="fl.events:ComponentEvent:ComponentEvent"/>
                <string name="clone" object="[fl.events.ComponentEvent]" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of the ComponentEvent object and sets the value of each parameter to match the original." version="1.0" playername="" helpurl="fl.events:ComponentEvent:clone"/>
                <string name="toString" object="[fl.events.ComponentEvent]" text=".toString(%%):String" tiptext="Returns a string that contains all the properties of the ComponentEvent object." version="1.0" playername="" helpurl="fl.events:ComponentEvent:toString"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class ComponentEvent" helpurl="fl.events:ComponentEvent">
                <string name="BUTTON_DOWN" object="[fl.events.ComponentEvent]" text="ComponentEvent.BUTTON_DOWN" constant="true" tiptext="Defines the value of the type property of a buttonDown event object." version="" playername="" helpurl="fl.events:ComponentEvent:BUTTON_DOWN"/>
                <string name="ENTER" object="[fl.events.ComponentEvent]" text="ComponentEvent.ENTER" constant="true" tiptext="Defines the value of the type property of an enter event object." version="" playername="" helpurl="fl.events:ComponentEvent:ENTER"/>
                <string name="HIDE" object="[fl.events.ComponentEvent]" text="ComponentEvent.HIDE" constant="true" tiptext="Defines the value of the type property of a hide event object." version="" playername="" helpurl="fl.events:ComponentEvent:HIDE"/>
                <string name="LABEL_CHANGE" object="[fl.events.ComponentEvent]" text="ComponentEvent.LABEL_CHANGE" constant="true" tiptext="Defines the value of the type property of a labelChange event object." version="" playername="" helpurl="fl.events:ComponentEvent:LABEL_CHANGE"/>
                <string name="MOVE" object="[fl.events.ComponentEvent]" text="ComponentEvent.MOVE" constant="true" tiptext="Defines the value of the type property of a move event object." version="" playername="" helpurl="fl.events:ComponentEvent:MOVE"/>
                <string name="RESIZE" object="[fl.events.ComponentEvent]" text="ComponentEvent.RESIZE" constant="true" tiptext="Defines the value of the type property of a resize event object." version="" playername="" helpurl="fl.events:ComponentEvent:RESIZE"/>
                <string name="SHOW" object="[fl.events.ComponentEvent]" text="ComponentEvent.SHOW" constant="true" tiptext="Defines the value of the type property of a show event object." version="" playername="" helpurl="fl.events:ComponentEvent:SHOW"/>
            </folder>
        </folder>
        <folder name="DataChangeEvent" id="[fl.events.DataChangeEvent]" sort="true" index="true" asAncestors="flash.events:Event,Object" tiptext="The DataChangeEvent class defines the event that is dispatched when the data that is associated with a component changes." helpurl="fl.events:DataChangeEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class DataChangeEvent" helpurl="fl.events:DataChangeEvent">
                <string name="DataChangeEvent" object="[fl.events.DataChangeEvent]" text="new DataChangeEvent(%eventType:String,changeType:String,items:Array[,startIndex:int=-1,endIndex:int=-1]%):void" constructor="true" tiptext="Creates a new DataChangeEvent object with the specified parameters." version="1.0" playername="" helpurl="fl.events:DataChangeEvent:DataChangeEvent"/>
                <string name="clone" object="[fl.events.DataChangeEvent]" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of the DataEvent object and sets the value of each parameter to match that of the original." version="1.0" playername="" helpurl="fl.events:DataChangeEvent:clone"/>
                <string name="toString" object="[fl.events.DataChangeEvent]" text=".toString(%%):String" tiptext="Returns a string that contains all the properties of the DataChangeEvent object." version="1.0" playername="" helpurl="fl.events:DataChangeEvent:toString"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class DataChangeEvent" helpurl="fl.events:DataChangeEvent">
                <string name="DATA_CHANGE" object="[fl.events.DataChangeEvent]" text="DataChangeEvent.DATA_CHANGE" constant="true" tiptext="Defines the value of the type property of a dataChange event object." version="" playername="" helpurl="fl.events:DataChangeEvent:DATA_CHANGE"/>
                <string name="PRE_DATA_CHANGE" object="[fl.events.DataChangeEvent]" text="DataChangeEvent.PRE_DATA_CHANGE" constant="true" tiptext="Defines the value of the type property of a preDataChange event object." version="" playername="" helpurl="fl.events:DataChangeEvent:PRE_DATA_CHANGE"/>
                <string name="changeType" object="[fl.events.DataChangeEvent]" text=".changeType" tiptext="Gets the type of the change that triggered the event." version="" playername="" helpurl="fl.events:DataChangeEvent:changeType:get"/>
                <string name="endIndex" object="[fl.events.DataChangeEvent]" text=".endIndex" tiptext="Gets the index of the last changed item in the array of items that were changed." version="" playername="" helpurl="fl.events:DataChangeEvent:endIndex:get"/>
                <string name="items" object="[fl.events.DataChangeEvent]" text=".items" tiptext="Gets an array that contains the changed items." version="" playername="" helpurl="fl.events:DataChangeEvent:items:get"/>
                <string name="startIndex" object="[fl.events.DataChangeEvent]" text=".startIndex" tiptext="Gets the index of the first changed item in the array of items that were changed." version="" playername="" helpurl="fl.events:DataChangeEvent:startIndex:get"/>
            </folder>
        </folder>
        <folder name="DataChangeType" id="[fl.events.DataChangeType]" sort="true" index="true" asAncestors="Object" tiptext="The DataChangeType class defines constants for the DataChangeEvent.changeType event." helpurl="fl.events:DataChangeType">
            <folder name="Properties" id="Properties" tiptext="Properties for class DataChangeType" helpurl="fl.events:DataChangeType">
                <string name="ADD" object="[fl.events.DataChangeType]" text="DataChangeType.ADD" constant="true" tiptext="Items were added to the data provider." version="" playername="" helpurl="fl.events:DataChangeType:ADD"/>
                <string name="CHANGE" object="[fl.events.DataChangeType]" text="DataChangeType.CHANGE" constant="true" tiptext="A change was made to the component data." version="" playername="" helpurl="fl.events:DataChangeType:CHANGE"/>
                <string name="INVALIDATE_ALL" object="[fl.events.DataChangeType]" text="DataChangeType.INVALIDATE_ALL" constant="true" tiptext="The data set is invalid." version="" playername="" helpurl="fl.events:DataChangeType:INVALIDATE_ALL"/>
                <string name="INVALIDATE" object="[fl.events.DataChangeType]" text="DataChangeType.INVALIDATE" constant="true" tiptext="A change was made to the data contained in an item." version="" playername="" helpurl="fl.events:DataChangeType:INVALIDATE"/>
                <string name="REMOVE_ALL" object="[fl.events.DataChangeType]" text="DataChangeType.REMOVE_ALL" constant="true" tiptext="All items were removed from the data provider." version="" playername="" helpurl="fl.events:DataChangeType:REMOVE_ALL"/>
                <string name="REMOVE" object="[fl.events.DataChangeType]" text="DataChangeType.REMOVE" constant="true" tiptext="Items were removed from the data provider." version="" playername="" helpurl="fl.events:DataChangeType:REMOVE"/>
                <string name="REPLACE" object="[fl.events.DataChangeType]" text="DataChangeType.REPLACE" constant="true" tiptext="The items in the data provider were replaced by new items." version="" playername="" helpurl="fl.events:DataChangeType:REPLACE"/>
                <string name="SORT" object="[fl.events.DataChangeType]" text="DataChangeType.SORT" constant="true" tiptext="The data provider was sorted." version="" playername="" helpurl="fl.events:DataChangeType:SORT"/>
            </folder>
        </folder>
        <folder name="DataGridEvent" id="[fl.events.DataGridEvent]" sort="true" index="true" asAncestors="fl.events:ListEvent,flash.events:Event,Object" tiptext="The DataGridEvent class defines events that are associated with the DataGrid component." helpurl="fl.events:DataGridEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class DataGridEvent" helpurl="fl.events:DataGridEvent">
                <string name="DataGridEvent" object="[fl.events.DataGridEvent]" text="new DataGridEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,columnIndex:int=-1,rowIndex:int=-1,itemRenderer:Object=null,dataField:String=null,reason:String=null]%)" constructor="true" tiptext="Creates a new DataGridEvent object with the specified parameters." version="1.0" playername="" helpurl="fl.events:DataGridEvent:DataGridEvent"/>
                <string name="clone" object="[fl.events.DataGridEvent]" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of the DataGridEvent object and sets the value of each property to match the original." version="1.0" playername="" helpurl="fl.events:DataGridEvent:clone"/>
                <string name="toString" object="[fl.events.DataGridEvent]" text=".toString(%%):String" tiptext="Returns a string that contains all the properties of the DataGridEvent object." version="1.0" playername="" helpurl="fl.events:DataGridEvent:toString"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class DataGridEvent" helpurl="fl.events:DataGridEvent">
                <string name="COLUMN_STRETCH" object="[fl.events.DataGridEvent]" text="DataGridEvent.COLUMN_STRETCH" constant="true" tiptext="The DataGridEvent.COLUMN_STRETCH constant defines the value of the type property of a columnStretch event object." version="" playername="" helpurl="fl.events:DataGridEvent:COLUMN_STRETCH"/>
                <string name="HEADER_RELEASE" object="[fl.events.DataGridEvent]" text="DataGridEvent.HEADER_RELEASE" constant="true" tiptext="The DataGridEvent.HEADER_RELEASE constant defines the value of the type property of a headerRelease event object." version="" playername="" helpurl="fl.events:DataGridEvent:HEADER_RELEASE"/>
                <string name="ITEM_EDIT_BEGINNING" object="[fl.events.DataGridEvent]" text="DataGridEvent.ITEM_EDIT_BEGINNING" constant="true" tiptext="The DataGridEvent.ITEM__EDIT_BEGINNING constant defines the value of the type property of an itemEditBeginning event object." version="" playername="" helpurl="fl.events:DataGridEvent:ITEM_EDIT_BEGINNING"/>
                <string name="ITEM_EDIT_BEGIN" object="[fl.events.DataGridEvent]" text="DataGridEvent.ITEM_EDIT_BEGIN" constant="true" tiptext="The DataGridEvent.ITEM_EDIT_BEGIN constant defines the value of the type property of an itemEditBegin event object." version="" playername="" helpurl="fl.events:DataGridEvent:ITEM_EDIT_BEGIN"/>
                <string name="ITEM_EDIT_END" object="[fl.events.DataGridEvent]" text="DataGridEvent.ITEM_EDIT_END" constant="true" tiptext="The DataGridEvent.ITEM_EDIT_END constant defines the value of the type property of an itemEditEnd event object." version="" playername="" helpurl="fl.events:DataGridEvent:ITEM_EDIT_END"/>
                <string name="ITEM_FOCUS_IN" object="[fl.events.DataGridEvent]" text="DataGridEvent.ITEM_FOCUS_IN" constant="true" tiptext="The DataGridEvent.ITEM_FOCUS_IN constant defines the value of the type property of a itemFocusIn event object." version="" playername="" helpurl="fl.events:DataGridEvent:ITEM_FOCUS_IN"/>
                <string name="ITEM_FOCUS_OUT" object="[fl.events.DataGridEvent]" text="DataGridEvent.ITEM_FOCUS_OUT" constant="true" tiptext="The DataGridEvent.ITEM_FOCUS_OUT constant defines the value of the type property of an itemFocusOut event object." version="" playername="" helpurl="fl.events:DataGridEvent:ITEM_FOCUS_OUT"/>
                <string name="dataField" object="[fl.events.DataGridEvent]" text=".dataField" tiptext="Gets or sets the name of the field or property in the data associated with the column." version="" playername="" helpurl="fl.events:DataGridEvent:dataField:get"/>
                <string name="itemRenderer" object="[fl.events.DataGridEvent]" text=".itemRenderer" tiptext="Gets the item renderer for the item that is being edited or the header renderer that is being clicked or resized." version="" playername="" helpurl="fl.events:DataGridEvent:itemRenderer:get"/>
                <string name="reason" object="[fl.events.DataGridEvent]" text=".reason" tiptext="Gets the reason the itemEditEnd event was dispatched." version="" playername="" helpurl="fl.events:DataGridEvent:reason:get"/>
            </folder>
        </folder>
        <folder name="DataGridEventReason" id="[fl.events.DataGridEventReason]" sort="true" index="true" asAncestors="Object" tiptext="The DataGridEventReason class defines constants that are used for the values of the reason property of the DataGridEvent object when the value of the type property is itemEditEnd." helpurl="fl.events:DataGridEventReason">
            <folder name="Properties" id="Properties" tiptext="Properties for class DataGridEventReason" helpurl="fl.events:DataGridEventReason">
                <string name="CANCELLED" object="[fl.events.DataGridEventReason]" text="DataGridEventReason.CANCELLED" constant="true" tiptext="The user canceled editing and does not want to save the edited data." version="" playername="" helpurl="fl.events:DataGridEventReason:CANCELLED"/>
                <string name="NEW_COLUMN" object="[fl.events.DataGridEventReason]" text="DataGridEventReason.NEW_COLUMN" constant="true" tiptext="The user moved focus to a new column in the same row." version="" playername="" helpurl="fl.events:DataGridEventReason:NEW_COLUMN"/>
                <string name="NEW_ROW" object="[fl.events.DataGridEventReason]" text="DataGridEventReason.NEW_ROW" constant="true" tiptext="Indicates that the user moved focus to a new row." version="" playername="" helpurl="fl.events:DataGridEventReason:NEW_ROW"/>
                <string name="OTHER" object="[fl.events.DataGridEventReason]" text="DataGridEventReason.OTHER" constant="true" tiptext="The list component lost focus, was scrolled, or is in a state where editing is not allowed." version="" playername="" helpurl="fl.events:DataGridEventReason:OTHER"/>
            </folder>
        </folder>
        <folder name="InteractionInputType" id="[fl.events.InteractionInputType]" sort="true" index="true" asAncestors="Object" tiptext="The InteractionInputType class defines constants for the values of the triggerEvent property of the SliderEvent object." helpurl="fl.events:InteractionInputType">
            <folder name="Properties" id="Properties" tiptext="Properties for class InteractionInputType" helpurl="fl.events:InteractionInputType">
                <string name="KEYBOARD" object="[fl.events.InteractionInputType]" text="InteractionInputType.KEYBOARD" constant="true" tiptext="The InteractionInputType.KEYBOARD constant defines the value of the type property of a keyboard event object." version="" playername="" helpurl="fl.events:InteractionInputType:KEYBOARD"/>
                <string name="MOUSE" object="[fl.events.InteractionInputType]" text="InteractionInputType.MOUSE" constant="true" tiptext="The InteractionInputType.MOUSE constant defines the value of the type property of a mouse event object." version="" playername="" helpurl="fl.events:InteractionInputType:MOUSE"/>
            </folder>
        </folder>
        <folder name="ListEvent" id="[fl.events.ListEvent]" sort="true" index="true" asAncestors="flash.events:Event,Object" tiptext="The ListEvent class defines events for list-based components including the List, DataGrid, TileList, and ComboBox components." helpurl="fl.events:ListEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class ListEvent" helpurl="fl.events:ListEvent">
                <string name="ListEvent" object="[fl.events.ListEvent]" text="new ListEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,columnIndex:int=-1,rowIndex:int=-1,index:int=-1,item:Object=null]%)" constructor="true" tiptext="Creates a new ListEvent object with the specified parameters." version="1.0" playername="" helpurl="fl.events:ListEvent:ListEvent"/>
                <string name="clone" object="[fl.events.ListEvent]" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of the ListEvent object and sets the value of each parameter to match the original." version="1.0" playername="" helpurl="fl.events:ListEvent:clone"/>
                <string name="toString" object="[fl.events.ListEvent]" text=".toString(%%):String" tiptext="Returns a string that contains all the properties of the ListEvent object." version="1.0" playername="" helpurl="fl.events:ListEvent:toString"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class ListEvent" helpurl="fl.events:ListEvent">
                <string name="ITEM_CLICK" object="[fl.events.ListEvent]" text="ListEvent.ITEM_CLICK" constant="true" tiptext="Defines the value of the type property of an itemClick event object." version="" playername="" helpurl="fl.events:ListEvent:ITEM_CLICK"/>
                <string name="ITEM_DOUBLE_CLICK" object="[fl.events.ListEvent]" text="ListEvent.ITEM_DOUBLE_CLICK" constant="true" tiptext="Defines the value of the type property of an itemDoubleClick event object." version="" playername="" helpurl="fl.events:ListEvent:ITEM_DOUBLE_CLICK"/>
                <string name="ITEM_ROLL_OUT" object="[fl.events.ListEvent]" text="ListEvent.ITEM_ROLL_OUT" constant="true" tiptext="Defines the value of the type property of an itemRollOut event object." version="" playername="" helpurl="fl.events:ListEvent:ITEM_ROLL_OUT"/>
                <string name="ITEM_ROLL_OVER" object="[fl.events.ListEvent]" text="ListEvent.ITEM_ROLL_OVER" constant="true" tiptext="Defines the value of the type property of an itemRollOver event object." version="" playername="" helpurl="fl.events:ListEvent:ITEM_ROLL_OVER"/>
                <string name="columnIndex" object="[fl.events.ListEvent]" text=".columnIndex" tiptext="Gets the column index of the item that is associated with this event." version="" playername="" helpurl="fl.events:ListEvent:columnIndex:get"/>
                <string name="index" object="[fl.events.ListEvent]" text=".index" tiptext="Gets the zero-based index of the cell that contains the renderer." version="" playername="" helpurl="fl.events:ListEvent:index:get"/>
                <string name="item" object="[fl.events.ListEvent]" text=".item" tiptext="Gets the data that belongs to the current cell renderer." version="" playername="" helpurl="fl.events:ListEvent:item:get"/>
                <string name="rowIndex" object="[fl.events.ListEvent]" text=".rowIndex" tiptext="Gets the row index of the item that is associated with this event." version="" playername="" helpurl="fl.events:ListEvent:rowIndex:get"/>
            </folder>
        </folder>
        <folder name="RSLErrorEvent" id="[fl.events.RSLErrorEvent]" sort="true" index="true" asAncestors="flash.events:ErrorEvent,flash.events:TextEvent,flash.events:Event,Object" tiptext="The RSLErrorEvent class defines an error event dispatched by RSLPreloader." helpurl="fl.events:RSLErrorEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class RSLErrorEvent" helpurl="fl.events:RSLErrorEvent">
                <string name="RSLErrorEvent" object="[fl.events.RSLErrorEvent]" text="new RSLErrorEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,rslsLoaded:int=0,rslsFailed:int=0,rslsTotal:int=0,failedURLs:Array=null]%)" constructor="true" tiptext="Creates an RSLErrorEvent object that contains information about RSLError events." version="2" playername="" helpurl="fl.events:RSLErrorEvent:RSLErrorEvent"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class RSLErrorEvent" helpurl="fl.events:RSLErrorEvent">
                <string name="RSL_LOAD_FAILED" object="[fl.events.RSLErrorEvent]" text="RSLErrorEvent.RSL_LOAD_FAILED" constant="true" tiptext="Error dispatched by RSLPreloader when all RSLs have finished downloading and one or more have failed." version="" playername="" helpurl="fl.events:RSLErrorEvent:RSL_LOAD_FAILED"/>
                <string name="failedURLs" object="[fl.events.RSLErrorEvent]" text=".failedURLs" tiptext="Returns an array of files that have failed to download." version="" playername="" helpurl="fl.events:RSLErrorEvent:failedURLs:get"/>
                <string name="rslsFailed" object="[fl.events.RSLErrorEvent]" text=".rslsFailed" tiptext="Returns the number of files that have failed to download." version="" playername="" helpurl="fl.events:RSLErrorEvent:rslsFailed:get"/>
                <string name="rslsLoaded" object="[fl.events.RSLErrorEvent]" text=".rslsLoaded" tiptext="Returns the number of files that have downloaded successfully." version="" playername="" helpurl="fl.events:RSLErrorEvent:rslsLoaded:get"/>
                <string name="rslsTotal" object="[fl.events.RSLErrorEvent]" text=".rslsTotal" tiptext="Returns the total number of files that have downloaded, successfully or not." version="" playername="" helpurl="fl.events:RSLErrorEvent:rslsTotal:get"/>
            </folder>
        </folder>
        <folder name="RSLEvent" id="[fl.events.RSLEvent]" sort="true" index="true" asAncestors="flash.events:Event,Object" tiptext="The RSLEvent class defines events dispatched by RSLPreloader." helpurl="fl.events:RSLEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class RSLEvent" helpurl="fl.events:RSLEvent">
                <string name="RSLEvent" object="[fl.events.RSLEvent]" text="new RSLEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,rslsLoaded:int=0,rslsFailed:int=0,rslsTotal:int=0,bytesLoaded:int=0,bytesTotal:int=0]%)" constructor="true" tiptext="Creates an Event object with specific information relevant to RSL events." version="2" playername="" helpurl="fl.events:RSLEvent:RSLEvent"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class RSLEvent" helpurl="fl.events:RSLEvent">
                <string name="RSL_LOAD_COMPLETE" object="[fl.events.RSLEvent]" text="RSLEvent.RSL_LOAD_COMPLETE" constant="true" tiptext="Event dispatched by RSLPreloader when all RSLs have successfully downloading." version="" playername="" helpurl="fl.events:RSLEvent:RSL_LOAD_COMPLETE"/>
                <string name="RSL_PROGRESS" object="[fl.events.RSLEvent]" text="RSLEvent.RSL_PROGRESS" constant="true" tiptext="Event dispatched by RSLPreloader to indicate progress in downloading RSL files." version="" playername="" helpurl="fl.events:RSLEvent:RSL_PROGRESS"/>
                <string name="bytesLoaded" object="[fl.events.RSLEvent]" text=".bytesLoaded" tiptext="Returns the total number of downloaded bytes in files that have successfully downloaded." version="" playername="" helpurl="fl.events:RSLEvent:bytesLoaded:get"/>
                <string name="bytesTotal" object="[fl.events.RSLEvent]" text=".bytesTotal" tiptext="Returns the total number of downloaded bytes in files that have downloaded, successful or not." version="" playername="" helpurl="fl.events:RSLEvent:bytesTotal:get"/>
                <string name="rslsFailed" object="[fl.events.RSLEvent]" text=".rslsFailed" tiptext="Returns the number of files that have failed to download." version="" playername="" helpurl="fl.events:RSLEvent:rslsFailed:get"/>
                <string name="rslsLoaded" object="[fl.events.RSLEvent]" text=".rslsLoaded" tiptext="Returns the number of files that have downloaded successfully." version="" playername="" helpurl="fl.events:RSLEvent:rslsLoaded:get"/>
                <string name="rslsTotal" object="[fl.events.RSLEvent]" text=".rslsTotal" tiptext="Returns the total number of files that have downloaded, successfully or not." version="" playername="" helpurl="fl.events:RSLEvent:rslsTotal:get"/>
            </folder>
        </folder>
        <folder name="ScrollEvent" id="[fl.events.ScrollEvent]" sort="true" index="true" asAncestors="flash.events:Event,Object" tiptext="The ScrollEvent class defines the scroll event that is associated with the ScrollBar component." helpurl="fl.events:ScrollEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class ScrollEvent" helpurl="fl.events:ScrollEvent">
                <string name="ScrollEvent" object="[fl.events.ScrollEvent]" text="new ScrollEvent(%direction:String,delta:Number,position:Number%)" constructor="true" tiptext="Creates a new ScrollEvent object with the specified parameters." version="1.0" playername="" helpurl="fl.events:ScrollEvent:ScrollEvent"/>
                <string name="clone" object="[fl.events.ScrollEvent]" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of the ScrollEvent object and sets the value of each parameter to match the original." version="1.0" playername="" helpurl="fl.events:ScrollEvent:clone"/>
                <string name="toString" object="[fl.events.ScrollEvent]" text=".toString(%%):String" tiptext="Returns a string that contains all the properties of the ScrollEvent object." version="1.0" playername="" helpurl="fl.events:ScrollEvent:toString"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class ScrollEvent" helpurl="fl.events:ScrollEvent">
                <string name="SCROLL" object="[fl.events.ScrollEvent]" text="ScrollEvent.SCROLL" constant="true" tiptext="Defines the value of the type property of a scroll event object." version="" playername="" helpurl="fl.events:ScrollEvent:SCROLL"/>
                <string name="delta" object="[fl.events.ScrollEvent]" text=".delta" tiptext="Gets the size of the change in scroll position, in pixels." version="" playername="" helpurl="fl.events:ScrollEvent:delta:get"/>
                <string name="direction" object="[fl.events.ScrollEvent]" text=".direction" tiptext="Gets a constant value that indicates the direction of movement associated with the event." version="" playername="" helpurl="fl.events:ScrollEvent:direction:get"/>
                <string name="position" object="[fl.events.ScrollEvent]" text=".position" tiptext="Gets the current scroll position, in pixels." version="" playername="" helpurl="fl.events:ScrollEvent:position:get"/>
            </folder>
        </folder>
        <folder name="SliderEvent" id="[fl.events.SliderEvent]" sort="true" index="true" asAncestors="flash.events:Event,Object" tiptext="The SliderEvent class defines events that are associated with the Slider component." helpurl="fl.events:SliderEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class SliderEvent" helpurl="fl.events:SliderEvent">
                <string name="SliderEvent" object="[fl.events.SliderEvent]" text="new SliderEvent(%type:String,value:Number,clickTarget:String,triggerEvent:String[,keyCode:int=0]%)" constructor="true" tiptext="Creates a new SliderEvent object with the specified parameters." version="1.0" playername="" helpurl="fl.events:SliderEvent:SliderEvent"/>
                <string name="clone" object="[fl.events.SliderEvent]" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of the SliderEvent object and sets the value of each parameter to match the original." version="1.0" playername="" helpurl="fl.events:SliderEvent:clone"/>
                <string name="toString" object="[fl.events.SliderEvent]" text=".toString(%%):String" tiptext="Returns a string that contains all the properties of the SliderEvent object." version="1.0" playername="" helpurl="fl.events:SliderEvent:toString"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class SliderEvent" helpurl="fl.events:SliderEvent">
                <string name="CHANGE" object="[fl.events.SliderEvent]" text="SliderEvent.CHANGE" constant="true" tiptext="Defines the value of the type property of a change event object." version="" playername="" helpurl="fl.events:SliderEvent:CHANGE"/>
                <string name="THUMB_DRAG" object="[fl.events.SliderEvent]" text="SliderEvent.THUMB_DRAG" constant="true" tiptext="Defines the value of the type property of a thumbDrag event object." version="" playername="" helpurl="fl.events:SliderEvent:THUMB_DRAG"/>
                <string name="THUMB_PRESS" object="[fl.events.SliderEvent]" text="SliderEvent.THUMB_PRESS" constant="true" tiptext="Defines the value of the type property of a thumbPress event object." version="" playername="" helpurl="fl.events:SliderEvent:THUMB_PRESS"/>
                <string name="THUMB_RELEASE" object="[fl.events.SliderEvent]" text="SliderEvent.THUMB_RELEASE" constant="true" tiptext="Defines the value of the type property of a thumbRelease event object." version="" playername="" helpurl="fl.events:SliderEvent:THUMB_RELEASE"/>
                <string name="clickTarget" object="[fl.events.SliderEvent]" text=".clickTarget" tiptext="Gets a string that indicates whether the slider thumb or a slider track was pressed." version="" playername="" helpurl="fl.events:SliderEvent:clickTarget:get"/>
                <string name="keyCode" object="[fl.events.SliderEvent]" text=".keyCode" tiptext="Gets the key code for the key that was pressed to trigger the event." version="" playername="" helpurl="fl.events:SliderEvent:keyCode:get"/>
                <string name="triggerEvent" object="[fl.events.SliderEvent]" text=".triggerEvent" tiptext="Gets the type of device that was used to send the input." version="" playername="" helpurl="fl.events:SliderEvent:triggerEvent:get"/>
                <string name="value" object="[fl.events.SliderEvent]" text=".value" tiptext="Gets the new value of the slider, based on its position." version="" playername="" helpurl="fl.events:SliderEvent:value:get"/>
            </folder>
        </folder>
        <folder name="SliderEventClickTarget" id="[fl.events.SliderEventClickTarget]" sort="true" index="true" asAncestors="Object" tiptext="The SliderEventClickTarget class defines constants for the values of the clickTarget property of the SliderEvent class." helpurl="fl.events:SliderEventClickTarget">
            <folder name="Properties" id="Properties" tiptext="Properties for class SliderEventClickTarget" helpurl="fl.events:SliderEventClickTarget">
                <string name="THUMB" object="[fl.events.SliderEventClickTarget]" text="SliderEventClickTarget.THUMB" constant="true" tiptext="The Slider thumb was clicked." version="" playername="" helpurl="fl.events:SliderEventClickTarget:THUMB"/>
                <string name="TRACK" object="[fl.events.SliderEventClickTarget]" text="SliderEventClickTarget.TRACK" constant="true" tiptext="The Slider track was clicked." version="" playername="" helpurl="fl.events:SliderEventClickTarget:TRACK"/>
            </folder>
        </folder>
    </folder>
        <folder name="fl.ik" id="fl.ik" sort="true" tiptext="Classes for package fl.ik" helpurl="fl.ik">
        <folder name="IKArmature" id="[fl.ik.IKArmature]" sort="true" index="true" asAncestors="Object" tiptext="The IKArmature class describes an inverse kinematics (IK) armature." helpurl="fl.ik:IKArmature">
            <folder name="Methods" id="Methods" tiptext="Methods for class IKArmature" helpurl="fl.ik:IKArmature">
                <string name="getBoneByName" object="[fl.ik.IKArmature]" text=".getBoneByName(%targetName:String%):fl.ik:IKBone" tiptext="Returns the specified bone." version="1.5" playername="" helpurl="fl.ik:IKArmature:getBoneByName"/>
                <string name="registerElements" object="[fl.ik.IKArmature]" text=".registerElements(%container:flash.display:DisplayObjectContainer%)" tiptext="Activates inverse kinematic (IK) movement for a library symbol instance that contains an armature." version="1.5" playername="" helpurl="fl.ik:IKArmature:registerElements"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class IKArmature" helpurl="fl.ik:IKArmature">
                <string name="container" object="[fl.ik.IKArmature]" text=".container" tiptext="Returns DisplayObjectContainer passed into call to registerElements." version="" playername="" helpurl="fl.ik:IKArmature:container:get"/>
                <string name="name" object="[fl.ik.IKArmature]" text=".name" tiptext="The name of the armature." version="" playername="" helpurl="fl.ik:IKArmature:name:get"/>
                <string name="rootJoint" object="[fl.ik.IKArmature]" text=".rootJoint" tiptext="The root joint in the armature." version="" playername="" helpurl="fl.ik:IKArmature:rootJoint:get"/>
                <string name="springsEnabled" object="[fl.ik.IKArmature]" text=".springsEnabled" tiptext="Specifies whether springs are enabled for an armature." version="" playername="" helpurl="fl.ik:IKArmature:springsEnabled:get"/>
            </folder>
        </folder>
        <folder name="IKBone" id="[fl.ik.IKBone]" sort="true" index="true" asAncestors="Object" tiptext="The IKBone class describes a single segment, which is a foundational component of an inverse kinematics (IK) armature." helpurl="fl.ik:IKBone">
            <folder name="Properties" id="Properties" tiptext="Properties for class IKBone" helpurl="fl.ik:IKBone">
                <string name="headJoint" object="[fl.ik.IKBone]" text=".headJoint" tiptext="The head joint of the bone." version="" playername="" helpurl="fl.ik:IKBone:headJoint:get"/>
                <string name="name" object="[fl.ik.IKBone]" text=".name" tiptext="The name of the bone." version="" playername="" helpurl="fl.ik:IKBone:name:get"/>
                <string name="tailJoint" object="[fl.ik.IKBone]" text=".tailJoint" tiptext="The tail joint of the bone." version="" playername="" helpurl="fl.ik:IKBone:tailJoint:get"/>
            </folder>
        </folder>
        <folder name="IKEvent" id="[fl.ik.IKEvent]" sort="true" index="true" asAncestors="flash.events:Event,Object" tiptext="The IKEvent class defines events related to objects that contain inverse kinematics (IK) armatures." helpurl="fl.ik:IKEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class IKEvent" helpurl="fl.ik:IKEvent">
                <string name="IKEvent" object="[fl.ik.IKEvent]" text="new IKEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false]%)" constructor="true" tiptext="Creates an event object that contains information about IK events." version="1.5" playername="" helpurl="fl.ik:IKEvent:IKEvent"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class IKEvent" helpurl="fl.ik:IKEvent">
                <string name="DISTANCE_LIMIT" object="[fl.ik.IKEvent]" text="IKEvent.DISTANCE_LIMIT" constant="true" tiptext="Defines the value of the type property of a distanceLimit event object." version="" playername="" helpurl="fl.ik:IKEvent:DISTANCE_LIMIT"/>
                <string name="ITERATION_LIMIT" object="[fl.ik.IKEvent]" text="IKEvent.ITERATION_LIMIT" constant="true" tiptext="Defines the value of the type property of an iterationLimit event object." version="" playername="" helpurl="fl.ik:IKEvent:ITERATION_LIMIT"/>
                <string name="SINGLE_STEP" object="[fl.ik.IKEvent]" text="IKEvent.SINGLE_STEP" constant="true" tiptext="Defines the value of the type property of a singleStep event object." version="" playername="" helpurl="fl.ik:IKEvent:SINGLE_STEP"/>
                <string name="TIME_LIMIT" object="[fl.ik.IKEvent]" text="IKEvent.TIME_LIMIT" constant="true" tiptext="Defines the value of the type property of a timeLimit event object." version="" playername="" helpurl="fl.ik:IKEvent:TIME_LIMIT"/>
                <string name="distance" object="[fl.ik.IKEvent]" text=".distance" tiptext="The distance in pixels from the original position of the joint." version="" playername="" helpurl="fl.ik:IKEvent:distance:get"/>
                <string name="iterationCount" object="[fl.ik.IKEvent]" text=".iterationCount" tiptext="Number of iterations of IK moves performed." version="" playername="" helpurl="fl.ik:IKEvent:iterationCount:get"/>
                <string name="joint" object="[fl.ik.IKEvent]" text=".joint" tiptext="The joint related to the event." version="" playername="" helpurl="fl.ik:IKEvent:joint:get"/>
                <string name="time" object="[fl.ik.IKEvent]" text=".time" tiptext="The time elapsed in milliseconds since the previous dispatch of the IKEvent." version="" playername="" helpurl="fl.ik:IKEvent:time:get"/>
            </folder>
        </folder>
        <folder name="IKJoint" id="[fl.ik.IKJoint]" sort="true" index="true" asAncestors="Object" tiptext="The IKJoint class defines a connection between two bones, which are required foundational components of an inverse kinematics (IK) armature." helpurl="fl.ik:IKJoint">
            <folder name="Methods" id="Methods" tiptext="Methods for class IKJoint" helpurl="fl.ik:IKJoint">
                <string name="clearSpringAngle" object="[fl.ik.IKJoint]" text=".clearSpringAngle(%%):void" tiptext="Clears the current spring angle." version="1.5" playername="" helpurl="fl.ik:IKJoint:clearSpringAngle"/>
                <string name="clearSpringPoint" object="[fl.ik.IKJoint]" text=".clearSpringPoint(%%):void" tiptext="Clears the current spring point." version="1.5" playername="" helpurl="fl.ik:IKJoint:clearSpringPoint"/>
                <string name="getChildAt" object="[fl.ik.IKJoint]" text=".getChildAt(%iChild:int%):fl.ik:IKJoint" tiptext="Returns the child IKJoint object at the specified index value." version="1.5" playername="" helpurl="fl.ik:IKJoint:getChildAt"/>
                <string name="getChildIndex" object="[fl.ik.IKJoint]" text=".getChildIndex(%child:fl.ik:IKJoint%):int" tiptext="Returns the index value of the specified IKJoint object." version="1.5" playername="" helpurl="fl.ik:IKJoint:getChildIndex"/>
                <string name="getJointValue" object="[fl.ik.IKJoint]" text=".getJointValue(%dof:int%):Number" tiptext="Retrieves the current value of the specified type of degree of freedom." version="1.5" playername="" helpurl="fl.ik:IKJoint:getJointValue"/>
                <string name="getSpringAngle" object="[fl.ik.IKJoint]" text=".getSpringAngle(%%):Number" tiptext="Returns the current spring angle." version="1.5" playername="" helpurl="fl.ik:IKJoint:getSpringAngle"/>
                <string name="getSpringPt" object="[fl.ik.IKJoint]" text=".getSpringPt(%%):flash.geom:Point" tiptext="Returns the current spring point." version="1.5" playername="" helpurl="fl.ik:IKJoint:getSpringPt"/>
                <string name="hasPhysics" object="[fl.ik.IKJoint]" text=".hasPhysics(%[recursive:Boolean=true]%):Boolean" tiptext="Returns whether the sub-tree (children) of the joint has physics applied." version="1.5" playername="" helpurl="fl.ik:IKJoint:hasPhysics"/>
                <string name="hasSpringAngle" object="[fl.ik.IKJoint]" text=".hasSpringAngle(%%):Boolean" tiptext="Returns whether the current spring angle is set." version="1.5" playername="" helpurl="fl.ik:IKJoint:hasSpringAngle"/>
                <string name="hasSpringPoint" object="[fl.ik.IKJoint]" text=".hasSpringPoint(%%):Boolean" tiptext="Returns whether a spring point is currently set." version="1.5" playername="" helpurl="fl.ik:IKJoint:hasSpringPoint"/>
                <string name="isConstrained" object="[fl.ik.IKJoint]" text=".isConstrained(%dof:int%):Boolean" tiptext="Returns if the type of degree of freedom is constrained." version="1.5" playername="" helpurl="fl.ik:IKJoint:isConstrained"/>
                <string name="isEnabled" object="[fl.ik.IKJoint]" text=".isEnabled(%dof:int%)" tiptext="Returns if the specified type of degree of freedom is enabled." version="1.5" playername="" helpurl="fl.ik:IKJoint:isEnabled"/>
                <string name="setConstrained" object="[fl.ik.IKJoint]" text=".setConstrained(%dof:int,constrained:Boolean%):void" tiptext="Sets the constraint of the specified type of degree of freedom." version="1.5" playername="" helpurl="fl.ik:IKJoint:setConstrained"/>
                <string name="setEnabled" object="[fl.ik.IKJoint]" text=".setEnabled(%dof:int,enable:Boolean%)" tiptext="Enables or disables the specified type of degree of freedom." version="1.5" playername="" helpurl="fl.ik:IKJoint:setEnabled"/>
                <string name="setSpringAngle" object="[fl.ik.IKJoint]" text=".setSpringAngle(%angle:Number%):void" tiptext="Sets the current spring angle." version="1.5" playername="" helpurl="fl.ik:IKJoint:setSpringAngle"/>
                <string name="setSpringPt" object="[fl.ik.IKJoint]" text=".setSpringPt(%pt:flash.geom:Point%):void" tiptext="Sets the current spring point." version="1.5" playername="" helpurl="fl.ik:IKJoint:setSpringPt"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class IKJoint" helpurl="fl.ik:IKJoint">
                <string name="DOF_ROTATION" object="[fl.ik.IKJoint]" text=".DOF_ROTATION" tiptext="Static constant for the rotation degree of freedom." version="" playername="" helpurl="fl.ik:IKJoint:DOF_ROTATION"/>
                <string name="DOF_XTRANS" object="[fl.ik.IKJoint]" text=".DOF_XTRANS" tiptext="Static constant for the x-translation degree of freedom." version="" playername="" helpurl="fl.ik:IKJoint:DOF_XTRANS"/>
                <string name="DOF_YTRANS" object="[fl.ik.IKJoint]" text=".DOF_YTRANS" tiptext="Static constant for the y-translation degree of freedom." version="" playername="" helpurl="fl.ik:IKJoint:DOF_YTRANS"/>
                <string name="bone" object="[fl.ik.IKJoint]" text=".bone" tiptext="The head bone associated with the IKJoint object." version="" playername="" helpurl="fl.ik:IKJoint:bone:get"/>
                <string name="name" object="[fl.ik.IKJoint]" text=".name" tiptext="The IKJoint instance&apos;s name." version="" playername="" helpurl="fl.ik:IKJoint:name:get"/>
                <string name="numChildren" object="[fl.ik.IKJoint]" text=".numChildren" tiptext="Returns the number of IKJoint objects branching from the specified IKJoint." version="" playername="" helpurl="fl.ik:IKJoint:numChildren:get"/>
                <string name="parent" object="[fl.ik.IKJoint]" text=".parent" tiptext="The parent IKJoint object." version="" playername="" helpurl="fl.ik:IKJoint:parent:get"/>
                <string name="position" object="[fl.ik.IKJoint]" text=".position" tiptext="The IKJoint&apos;s coordinates." version="" playername="" helpurl="fl.ik:IKJoint:position:get"/>
                <string name="rotationConstrained" object="[fl.ik.IKJoint]" text=".rotationConstrained" tiptext="Returns if the rotation is constrained." version="" playername="" helpurl="fl.ik:IKJoint:rotationConstrained:get"/>
                <string name="rotationEnabled" object="[fl.ik.IKJoint]" text=".rotationEnabled" tiptext="Specifies if the rotation is enabled." version="" playername="" helpurl="fl.ik:IKJoint:rotationEnabled:get"/>
                <string name="rotationMax" object="[fl.ik.IKJoint]" text=".rotationMax" tiptext="The maximum rotation value." version="" playername="" helpurl="fl.ik:IKJoint:rotationMax:get"/>
                <string name="rotationMin" object="[fl.ik.IKJoint]" text=".rotationMin" tiptext="The minimum rotation value." version="" playername="" helpurl="fl.ik:IKJoint:rotationMin:get"/>
                <string name="rotation" object="[fl.ik.IKJoint]" text=".rotation" tiptext="The current rotation value." version="" playername="" helpurl="fl.ik:IKJoint:rotation:get"/>
                <string name="speed" object="[fl.ik.IKJoint]" text=".speed" tiptext="The rotation speed degree of freedom; the xTranslation and yTranslation properties respect the same speed setting." version="" playername="" helpurl="fl.ik:IKJoint:speed:get"/>
                <string name="springDamping" object="[fl.ik.IKJoint]" text=".springDamping" tiptext="The spring damping value." version="" playername="" helpurl="fl.ik:IKJoint:springDamping:get"/>
                <string name="springPosition" object="[fl.ik.IKJoint]" text=".springPosition" tiptext="The spring position (for translational joints) or angle (for rotational joints)." version="" playername="" helpurl="fl.ik:IKJoint:springPosition:get"/>
                <string name="springStrength" object="[fl.ik.IKJoint]" text=".springStrength" tiptext="The spring strength value." version="" playername="" helpurl="fl.ik:IKJoint:springStrength:get"/>
                <string name="xTranslationConstrained" object="[fl.ik.IKJoint]" text=".xTranslationConstrained" tiptext="Returns if the x-translation is constrained." version="" playername="" helpurl="fl.ik:IKJoint:xTranslationConstrained:get"/>
                <string name="xTranslationEnabled" object="[fl.ik.IKJoint]" text=".xTranslationEnabled" tiptext="Specifies if the x-translation is enabled." version="" playername="" helpurl="fl.ik:IKJoint:xTranslationEnabled:get"/>
                <string name="xTranslationMax" object="[fl.ik.IKJoint]" text=".xTranslationMax" tiptext="The maximum x-translation value." version="" playername="" helpurl="fl.ik:IKJoint:xTranslationMax:get"/>
                <string name="xTranslationMin" object="[fl.ik.IKJoint]" text=".xTranslationMin" tiptext="The minimum x-translation value." version="" playername="" helpurl="fl.ik:IKJoint:xTranslationMin:get"/>
                <string name="xTranslation" object="[fl.ik.IKJoint]" text=".xTranslation" tiptext="The current x-translation value." version="" playername="" helpurl="fl.ik:IKJoint:xTranslation:get"/>
                <string name="yTranslationConstrained" object="[fl.ik.IKJoint]" text=".yTranslationConstrained" tiptext="Returns if the y-translation is constrained." version="" playername="" helpurl="fl.ik:IKJoint:yTranslationConstrained:get"/>
                <string name="yTranslationEnabled" object="[fl.ik.IKJoint]" text=".yTranslationEnabled" tiptext="Specifies if the y-translation is enabled." version="" playername="" helpurl="fl.ik:IKJoint:yTranslationEnabled:get"/>
                <string name="yTranslationMax" object="[fl.ik.IKJoint]" text=".yTranslationMax" tiptext="The maximum y-translation value." version="" playername="" helpurl="fl.ik:IKJoint:yTranslationMax:get"/>
                <string name="yTranslationMin" object="[fl.ik.IKJoint]" text=".yTranslationMin" tiptext="The minimum y-translation value." version="" playername="" helpurl="fl.ik:IKJoint:yTranslationMin:get"/>
                <string name="yTranslation" object="[fl.ik.IKJoint]" text=".yTranslation" tiptext="The current y-translation value." version="" playername="" helpurl="fl.ik:IKJoint:yTranslation:get"/>
            </folder>
        </folder>
        <folder name="IKManager" id="[fl.ik.IKManager]" sort="true" index="true" asAncestors="flash.events:EventDispatcher,Object" tiptext="The IKManager class is a container class that represents all the inverse kinematics (IK) trees (armatures) defined in a document, and allows the management of those armatures at run time." helpurl="fl.ik:IKManager">
            <folder name="Methods" id="Methods" tiptext="Methods for class IKManager" helpurl="fl.ik:IKManager">
                <string name="getArmatureAt" object="[fl.ik.IKManager]" text="IKManager.getArmatureAt(%index:int%):fl.ik:IKArmature" static="true" tiptext="Returns the armature at the specified index." version="1.5" playername="" helpurl="fl.ik:IKManager:getArmatureAt"/>
                <string name="getArmatureByName" object="[fl.ik.IKManager]" text="IKManager.getArmatureByName(%name:String%):fl.ik:IKArmature" static="true" tiptext="Returns the armature with the specified name." version="1.5" playername="" helpurl="fl.ik:IKManager:getArmatureByName"/>
                <string name="setStage" object="[fl.ik.IKManager]" text="IKManager.setStage(%stage:flash.display:DisplayObjectContainer%):void" static="true" tiptext="Use this method to indicate the container of symbols in a loaded SWF file." version="1.5" playername="" helpurl="fl.ik:IKManager:setStage"/>
                <string name="trackAllArmatures" object="[fl.ik.IKManager]" text="IKManager.trackAllArmatures(%[enable:Boolean=true]%):void" static="true" tiptext="Enables or disables live-tracking for all armatures." version="1.5" playername="" helpurl="fl.ik:IKManager:trackAllArmatures"/>
                <string name="trackIKArmature" object="[fl.ik.IKManager]" text="IKManager.trackIKArmature(%theTree:fl.ik:IKArmature[,enable:Boolean=true]%):void" static="true" tiptext="Enables or disables live-tracking for the specified IKArmature instance." version="1.5" playername="" helpurl="fl.ik:IKManager:trackIKArmature"/>
                <string name="trackIKObject" object="[fl.ik.IKManager]" text="IKManager.trackIKObject(%target:flash.display:DisplayObject[,enable:Boolean=true]%)" static="true" tiptext="Enables or disables live-tracking for the specified IK display object instance." version="1.5" playername="" helpurl="fl.ik:IKManager:trackIKObject"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class IKManager" helpurl="fl.ik:IKManager">
                <string name="numArmatures" object="[fl.ik.IKManager]" text=".numArmatures" tiptext="The number of armatures on the stage." version="" playername="" helpurl="fl.ik:IKManager:numArmatures:get"/>
            </folder>
        </folder>
        <folder name="IKMover" id="[fl.ik.IKMover]" sort="true" index="true" asAncestors="flash.events:EventDispatcher,Object" tiptext="The IKMover class initiates and controls the inverse kinematic (IK) movement of armatures." helpurl="fl.ik:IKMover">
            <folder name="Methods" id="Methods" tiptext="Methods for class IKMover" helpurl="fl.ik:IKMover">
                <string name="IKMover" object="[fl.ik.IKMover]" text="new IKMover(%endEffector:fl.ik:IKJoint,targetIn:flash.geom:Point%)" constructor="true" tiptext="Constructor for an IKMover object." version="1.5" playername="" helpurl="fl.ik:IKMover:IKMover"/>
                <string name="moveTo" object="[fl.ik.IKMover]" text=".moveTo(%targetIn:flash.geom:Point%)" tiptext="Moves the associated IKJoint object to the target point, updating all the related IKJoint objectss based on their IK constraints." version="1.5" playername="" helpurl="fl.ik:IKMover:moveTo"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class IKMover" helpurl="fl.ik:IKMover">
                <string name="distanceLimit" object="[fl.ik.IKMover]" text=".distanceLimit" tiptext="The maximum distance (in pixels) the IK engine should move for each iteration." version="" playername="" helpurl="fl.ik:IKMover:distanceLimit:get"/>
                <string name="iterationLimit" object="[fl.ik.IKMover]" text=".iterationLimit" tiptext="Specifies the maximum number of iterations the IK engine performs for each movement." version="" playername="" helpurl="fl.ik:IKMover:iterationLimit:get"/>
                <string name="limitByDistance" object="[fl.ik.IKMover]" text=".limitByDistance" tiptext="Specifies whether the IK engine ends a movement after the distanceLimit value is exceeded." version="" playername="" helpurl="fl.ik:IKMover:limitByDistance:get"/>
                <string name="limitByIteration" object="[fl.ik.IKMover]" text=".limitByIteration" tiptext="Specifies whether the IK engine ends a movement after the iterationLimit value is exceeded." version="" playername="" helpurl="fl.ik:IKMover:limitByIteration:get"/>
                <string name="limitByTime" object="[fl.ik.IKMover]" text=".limitByTime" tiptext="Specifies whether the IK engine ends a movement after a specified timeLimit is exceeded." version="" playername="" helpurl="fl.ik:IKMover:limitByTime:get"/>
                <string name="stepCount" object="[fl.ik.IKMover]" text=".stepCount" tiptext="The number of iterations of the IK movement." version="" playername="" helpurl="fl.ik:IKMover:stepCount:get"/>
                <string name="timeLimit" object="[fl.ik.IKMover]" text=".timeLimit" tiptext="Specifies the maximum time (in milliseconds) the IK engine performs the movement." version="" playername="" helpurl="fl.ik:IKMover:timeLimit:get"/>
            </folder>
        </folder>
    </folder>
        <folder name="fl.lang" id="fl.lang" sort="true" tiptext="Classes for package fl.lang" helpurl="fl.lang">
        <folder name="Locale" id="[fl.lang.Locale]" sort="true" index="true" asAncestors="flash.events:EventDispatcher,Object" tiptext="The fl.lang.Locale class allows you to control how multilanguage text is displayed in a SWF file." helpurl="fl.lang:Locale">
            <folder name="Methods" id="Methods" tiptext="Methods for class Locale" helpurl="fl.lang:Locale">
                <string name="addDelayedInstance" object="[fl.lang.Locale]" text="Locale.addDelayedInstance(%instance:Object,stringID:String%)" static="true" tiptext="Adds the {instance, string ID} pair into the internal array for later use." version="1.0" playername="" helpurl="fl.lang:Locale:addDelayedInstance"/>
                <string name="addXMLPath" object="[fl.lang.Locale]" text="Locale.addXMLPath(%langCode:String,path:String%):void" static="true" tiptext="Adds the {languageCode and languagePath} pair into the internal array for later use." version="1.0" playername="" helpurl="fl.lang:Locale:addXMLPath"/>
                <string name="checkXMLStatus" object="[fl.lang.Locale]" text="Locale.checkXMLStatus(%%):Boolean" static="true" tiptext="Returns true if the XML file is loaded; false otherwise." version="1.0" playername="" helpurl="fl.lang:Locale:checkXMLStatus"/>
                <string name="getDefaultLang" object="[fl.lang.Locale]" text="Locale.getDefaultLang(%%):String" static="true" tiptext="The default language code as set in the Strings panel dialog box or by calling the setDefaultLang() method." version="1.0" playername="" helpurl="fl.lang:Locale:getDefaultLang"/>
                <string name="initialize" object="[fl.lang.Locale]" text="Locale.initialize(%%):void" static="true" tiptext="Automatically determines the language to use and loads the XML language file." version="1.0" playername="" helpurl="fl.lang:Locale:initialize"/>
                <string name="loadLanguageXML" object="[fl.lang.Locale]" text="Locale.loadLanguageXML(%xmlLanguageCode:String[,customXmlCompleteCallback:Function=null]%):void" static="true" tiptext="Loads the specified XML language file." version="1.0" playername="" helpurl="fl.lang:Locale:loadLanguageXML"/>
                <string name="loadStringEx" object="[fl.lang.Locale]" text="Locale.loadStringEx(%stringID:String,languageCode:String%):String" static="true" tiptext="Returns the string value associated with the given string ID and language code." version="1.0" playername="" helpurl="fl.lang:Locale:loadStringEx"/>
                <string name="loadString" object="[fl.lang.Locale]" text="Locale.loadString(%id:String%):String" static="true" tiptext="Returns the string value associated with the given string ID in the current language." version="1.0" playername="" helpurl="fl.lang:Locale:loadString"/>
                <string name="setDefaultLang" object="[fl.lang.Locale]" text="Locale.setDefaultLang(%langCode:String%):void" static="true" tiptext="Sets the default language code." version="1.0" playername="" helpurl="fl.lang:Locale:setDefaultLang"/>
                <string name="setLoadCallback" object="[fl.lang.Locale]" text="Locale.setLoadCallback(%loadCallback:Function%)" static="true" tiptext="Sets the callback function that is called after the XML file is loaded." version="1.0" playername="" helpurl="fl.lang:Locale:setLoadCallback"/>
                <string name="setString" object="[fl.lang.Locale]" text="Locale.setString(%stringID:String,languageCode:String,stringValue:String%):void" static="true" tiptext="Sets the new string value of a given string ID and language code." version="1.0" playername="" helpurl="fl.lang:Locale:setString"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class Locale" helpurl="fl.lang:Locale">
                <string name="autoReplace" object="[fl.lang.Locale]" text=".autoReplace" tiptext="Determines whether strings are replaced automatically after loading the XML file." version="" playername="" helpurl="fl.lang:Locale:autoReplace:get"/>
                <string name="languageCodeArray" object="[fl.lang.Locale]" text=".languageCodeArray" tiptext="An array containing language codes for the languages that have been specified or loaded into the FLA file." version="" playername="" helpurl="fl.lang:Locale:languageCodeArray:get"/>
                <string name="stringIDArray" object="[fl.lang.Locale]" text=".stringIDArray" tiptext="An array containing all the string IDs in the FLA file." version="" playername="" helpurl="fl.lang:Locale:stringIDArray:get"/>
            </folder>
        </folder>
    </folder>
        <folder name="fl.livepreview" id="fl.livepreview" sort="true" tiptext="Classes for package fl.livepreview" helpurl="fl.livepreview">
        <folder name="LivePreviewParent" id="[fl.livepreview.LivePreviewParent]" sort="true" index="true" asAncestors="flash.display:MovieClip,flash.display:Sprite,flash.display:DisplayObjectContainer,flash.display:InteractiveObject,flash.display:DisplayObject,flash.events:EventDispatcher,Object" tiptext="The LivePreviewParent class provides the timeline for a SWC file or for a compiled clip that is being exported when ActionScript 3.0 is selected." helpurl="fl.livepreview:LivePreviewParent">
            <folder name="Methods" id="Methods" tiptext="Methods for class LivePreviewParent" helpurl="fl.livepreview:LivePreviewParent">
                <string name="LivePreviewParent" object="[fl.livepreview.LivePreviewParent]" text="new LivePreviewParent(%%)" constructor="true" tiptext="Initializes the scale and align modes of the Stage, sets the myInstance property, resizes myInstance to the proper size and uses the ExternalInterface class to expose functions to Flash." version="1.0" playername="" helpurl="fl.livepreview:LivePreviewParent:LivePreviewParent"/>
                <string name="onResize" object="[fl.livepreview.LivePreviewParent]" text=".onResize(%width:Number,height:Number%):void" tiptext="Resizes the component instance on the Stage to the specified dimensions, either by calling a user-defined method, or by separately setting the width and height properties." version="1.0" playername="" helpurl="fl.livepreview:LivePreviewParent:onResize"/>
                <string name="onUpdate" object="[fl.livepreview.LivePreviewParent]" text=".onUpdate(%updateArray:restParam%):void" tiptext="Updates the properties of the component instance." version="1.0" playername="" helpurl="fl.livepreview:LivePreviewParent:onUpdate"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class LivePreviewParent" helpurl="fl.livepreview:LivePreviewParent">
                <string name="myInstance" object="[fl.livepreview.LivePreviewParent]" text=".myInstance" tiptext="The component instance associated with the live preview." version="" playername="" helpurl="fl.livepreview:LivePreviewParent:myInstance"/>
            </folder>
        </folder>
    </folder>
        <folder name="fl.managers" id="fl.managers" sort="true" tiptext="Classes for package fl.managers" helpurl="fl.managers">
        <folder name="FocusManager" id="[fl.managers.FocusManager]" sort="true" index="true" asAncestors="Object" tiptext="The FocusManager class manages focus for a set of components that are navigated by mouse or keyboard as a tab loop." helpurl="fl.managers:FocusManager">
            <folder name="Methods" id="Methods" tiptext="Methods for class FocusManager" helpurl="fl.managers:FocusManager">
                <string name="FocusManager" object="[fl.managers.FocusManager]" text="new FocusManager(%container:flash.display:DisplayObjectContainer%)" constructor="true" tiptext="Creates a new FocusManager instance." version="1.0" playername="" helpurl="fl.managers:FocusManager:FocusManager"/>
                <string name="activate" object="[fl.managers.FocusManager]" text=".activate(%%):void" tiptext="Activates the FocusManager instance." version="1.0" playername="" helpurl="fl.managers:FocusManager:activate"/>
                <string name="deactivate" object="[fl.managers.FocusManager]" text=".deactivate(%%):void" tiptext="Deactivates the FocusManager." version="1.0" playername="" helpurl="fl.managers:FocusManager:deactivate"/>
                <string name="findFocusManagerComponent" object="[fl.managers.FocusManager]" text=".findFocusManagerComponent(%component:flash.display:InteractiveObject%):flash.display:InteractiveObject" tiptext="Retrieves the interactive object that contains the given object, if any." version="1.0" playername="" helpurl="fl.managers:FocusManager:findFocusManagerComponent"/>
                <string name="getFocus" object="[fl.managers.FocusManager]" text=".getFocus(%%):flash.display:InteractiveObject" tiptext="Gets the interactive object that currently has focus." version="1.0" playername="" helpurl="fl.managers:FocusManager:getFocus"/>
                <string name="getNextFocusManagerComponent" object="[fl.managers.FocusManager]" text=".getNextFocusManagerComponent(%[backward:Boolean=false]%):flash.display:InteractiveObject" tiptext="Retrieves the interactive object that would receive focus if the user pressed the Tab key to navigate to the next object." version="1.0" playername="" helpurl="fl.managers:FocusManager:getNextFocusManagerComponent"/>
                <string name="hideFocus" object="[fl.managers.FocusManager]" text=".hideFocus(%%):void" tiptext="Sets the showFocusIndicator value to false and removes the visual focus indicator from the object that has focus, if any." version="1.0" playername="" helpurl="fl.managers:FocusManager:hideFocus"/>
                <string name="setFocus" object="[fl.managers.FocusManager]" text=".setFocus(%component:flash.display:InteractiveObject%):void" tiptext="Sets focus on an IFocusManagerComponent component." version="1.0" playername="" helpurl="fl.managers:FocusManager:setFocus"/>
                <string name="showFocus" object="[fl.managers.FocusManager]" text=".showFocus(%%):void" tiptext="Sets the showFocusIndicator value to true and draws the visual focus indicator on the object with focus, if any." version="1.0" playername="" helpurl="fl.managers:FocusManager:showFocus"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class FocusManager" helpurl="fl.managers:FocusManager">
                <string name="defaultButtonEnabled" object="[fl.managers.FocusManager]" text=".defaultButtonEnabled" tiptext="Gets or sets a value that indicates whether the default button is enabled." version="" playername="" helpurl="fl.managers:FocusManager:defaultButtonEnabled:get"/>
                <string name="defaultButton" object="[fl.managers.FocusManager]" text=".defaultButton" tiptext="Gets or sets the current default button." version="" playername="" helpurl="fl.managers:FocusManager:defaultButton:get"/>
                <string name="nextTabIndex" object="[fl.managers.FocusManager]" text=".nextTabIndex" tiptext="Gets the next unique tab index to use in this tab loop." version="" playername="" helpurl="fl.managers:FocusManager:nextTabIndex:get"/>
                <string name="showFocusIndicator" object="[fl.managers.FocusManager]" text=".showFocusIndicator" tiptext="Gets or sets a value that indicates whether a component that has focus should be marked with a visual indicator of focus." version="" playername="" helpurl="fl.managers:FocusManager:showFocusIndicator:get"/>
            </folder>
        </folder>
        <folder name="IFocusManager" id="[fl.managers.IFocusManager]" sort="true" index="true" tiptext="Implement the IFocusManager interface to create a custom focus manager." helpurl="fl.managers:IFocusManager">
            <folder name="Methods" id="Methods" tiptext="Methods for class IFocusManager" helpurl="fl.managers:IFocusManager">
                <string name="activate" object="[fl.managers.IFocusManager]" text=".activate(%%):void" tiptext="Activates a focus manager." version="1.0" playername="" helpurl="fl.managers:IFocusManager:activate"/>
                <string name="deactivate" object="[fl.managers.IFocusManager]" text=".deactivate(%%):void" tiptext="Deactivates a focus manager." version="1.0" playername="" helpurl="fl.managers:IFocusManager:deactivate"/>
                <string name="findFocusManagerComponent" object="[fl.managers.IFocusManager]" text=".findFocusManagerComponent(%component:flash.display:InteractiveObject%):flash.display:InteractiveObject" tiptext="Retrieves the IFocusManagerComponent object that contains the specified object, if there is one." version="1.0" playername="" helpurl="fl.managers:IFocusManager:findFocusManagerComponent"/>
                <string name="getFocus" object="[fl.managers.IFocusManager]" text=".getFocus(%%):flash.display:InteractiveObject" tiptext="Retrieves the IFocusManagerComponent component that currently has focus." version="1.0" playername="" helpurl="fl.managers:IFocusManager:getFocus"/>
                <string name="getNextFocusManagerComponent" object="[fl.managers.IFocusManager]" text=".getNextFocusManagerComponent(%[backward:Boolean=false]%):flash.display:InteractiveObject" tiptext="Retrieves the component that receives focus next if the user causes focus to move by using the Tab key." version="1.0" playername="" helpurl="fl.managers:IFocusManager:getNextFocusManagerComponent"/>
                <string name="hideFocus" object="[fl.managers.IFocusManager]" text=".hideFocus(%%):void" tiptext="Sets the showFocusIndicator property to false." version="1.0" playername="" helpurl="fl.managers:IFocusManager:hideFocus"/>
                <string name="setFocus" object="[fl.managers.IFocusManager]" text=".setFocus(%o:flash.display:InteractiveObject%):void" tiptext="Sets focus to an IFocusManagerComponent component." version="1.0" playername="" helpurl="fl.managers:IFocusManager:setFocus"/>
                <string name="showFocus" object="[fl.managers.IFocusManager]" text=".showFocus(%%):void" tiptext="Sets the showFocusIndicator property to true." version="1.0" playername="" helpurl="fl.managers:IFocusManager:showFocus"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class IFocusManager" helpurl="fl.managers:IFocusManager">
                <string name="defaultButtonEnabled" object="[fl.managers.IFocusManager]" text=".defaultButtonEnabled" tiptext="Gets or sets a value that indicates whether the default button is enabled." version="" playername="" helpurl="fl.managers:IFocusManager:defaultButtonEnabled:get"/>
                <string name="defaultButton" object="[fl.managers.IFocusManager]" text=".defaultButton" tiptext="Gets or sets a reference to the default button." version="" playername="" helpurl="fl.managers:IFocusManager:defaultButton:get"/>
                <string name="nextTabIndex" object="[fl.managers.IFocusManager]" text=".nextTabIndex" tiptext="Gets the next unique tab index to use in the current tab loop." version="" playername="" helpurl="fl.managers:IFocusManager:nextTabIndex:get"/>
                <string name="showFocusIndicator" object="[fl.managers.IFocusManager]" text=".showFocusIndicator" tiptext="Gets or sets a value that determines whether the user interface changes to indicate that a specific component has focus." version="" playername="" helpurl="fl.managers:IFocusManager:showFocusIndicator:get"/>
            </folder>
        </folder>
        <folder name="IFocusManagerComponent" id="[fl.managers.IFocusManagerComponent]" sort="true" index="true" tiptext="The IFocusManagerComponent interface provides methods and properties that give components the capability to receive focus." helpurl="fl.managers:IFocusManagerComponent">
            <folder name="Methods" id="Methods" tiptext="Methods for class IFocusManagerComponent" helpurl="fl.managers:IFocusManagerComponent">
                <string name="drawFocus" object="[fl.managers.IFocusManagerComponent]" text=".drawFocus(%draw:Boolean%):void" tiptext="Draws a visual focus indicator." version="1.0" playername="" helpurl="fl.managers:IFocusManagerComponent:drawFocus"/>
                <string name="setFocus" object="[fl.managers.IFocusManagerComponent]" text=".setFocus(%%):void" tiptext="Sets focus for a component." version="1.0" playername="" helpurl="fl.managers:IFocusManagerComponent:setFocus"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class IFocusManagerComponent" helpurl="fl.managers:IFocusManagerComponent">
                <string name="focusEnabled" object="[fl.managers.IFocusManagerComponent]" text=".focusEnabled" tiptext="Gets or sets a Boolean value that indicates whether a selected component can receive focus from the focus manager." version="" playername="" helpurl="fl.managers:IFocusManagerComponent:focusEnabled:get"/>
                <string name="mouseFocusEnabled" object="[fl.managers.IFocusManagerComponent]" text=".mouseFocusEnabled" tiptext="Gets a Boolean value that indicates whether a component that is selected by using a mouse device can receive focus." version="" playername="" helpurl="fl.managers:IFocusManagerComponent:mouseFocusEnabled:get"/>
                <string name="tabEnabled" object="[fl.managers.IFocusManagerComponent]" text=".tabEnabled" tiptext="Gets a Boolean value that indicates whether pressing the Tab key can move focus to this component." version="" playername="" helpurl="fl.managers:IFocusManagerComponent:tabEnabled:get"/>
                <string name="tabIndex" object="[fl.managers.IFocusManagerComponent]" text=".tabIndex" tiptext="Gets the order in which the component receives focus, if tabEnabledis set to true." version="" playername="" helpurl="fl.managers:IFocusManagerComponent:tabIndex:get"/>
            </folder>
        </folder>
        <folder name="IFocusManagerGroup" id="[fl.managers.IFocusManagerGroup]" sort="true" index="true" tiptext="The IFocusManagerGroup interface provides properties that are used to manage a set of components of which only one can be selected at a time." helpurl="fl.managers:IFocusManagerGroup">
            <folder name="Properties" id="Properties" tiptext="Properties for class IFocusManagerGroup" helpurl="fl.managers:IFocusManagerGroup">
                <string name="groupName" object="[fl.managers.IFocusManagerGroup]" text=".groupName" tiptext="Gets or sets the name of the group of components to which this component belongs." version="" playername="" helpurl="fl.managers:IFocusManagerGroup:groupName:get"/>
                <string name="selected" object="[fl.managers.IFocusManagerGroup]" text=".selected" tiptext="Gets or sets a Boolean value that indicates whether this component is selected." version="" playername="" helpurl="fl.managers:IFocusManagerGroup:selected:get"/>
            </folder>
        </folder>
        <folder name="StyleManager" id="[fl.managers.StyleManager]" sort="true" index="true" asAncestors="Object" tiptext="The StyleManager class provides static methods that can be used to get and set styles for a component instance, an entire component type, or all user interface components in a Flash document." helpurl="fl.managers:StyleManager">
            <folder name="Methods" id="Methods" tiptext="Methods for class StyleManager" helpurl="fl.managers:StyleManager">
                <string name="StyleManager" object="[fl.managers.StyleManager]" text="new StyleManager(%%)" constructor="true" tiptext="Creates a new StyleManager object." version="1.0" playername="" helpurl="fl.managers:StyleManager:StyleManager"/>
                <string name="clearComponentStyle" object="[fl.managers.StyleManager]" text="StyleManager.clearComponentStyle(%component:Object,name:String%):void" static="true" tiptext="Removes a style from the specified component." version="1.0" playername="" helpurl="fl.managers:StyleManager:clearComponentStyle"/>
                <string name="clearStyle" object="[fl.managers.StyleManager]" text="StyleManager.clearStyle(%name:String%):void" static="true" tiptext="Removes a global style from all user interface components in a document." version="1.0" playername="" helpurl="fl.managers:StyleManager:clearStyle"/>
                <string name="getComponentStyle" object="[fl.managers.StyleManager]" text="StyleManager.getComponentStyle(%component:Object,name:String%):Object" static="true" tiptext="Gets a style that exists on a specific component." version="1.0" playername="" helpurl="fl.managers:StyleManager:getComponentStyle"/>
                <string name="getStyle" object="[fl.managers.StyleManager]" text="StyleManager.getStyle(%name:String%):Object" static="true" tiptext="Gets a global style by name." version="1.0" playername="" helpurl="fl.managers:StyleManager:getStyle"/>
                <string name="registerInstance" object="[fl.managers.StyleManager]" text="StyleManager.registerInstance(%instance:fl.core:UIComponent%):void" static="true" tiptext="Registers a component instance with the style manager." version="1.0" playername="" helpurl="fl.managers:StyleManager:registerInstance"/>
                <string name="setComponentStyle" object="[fl.managers.StyleManager]" text="StyleManager.setComponentStyle(%component:Object,name:String,style:Object%):void" static="true" tiptext="Sets a style on all instances of a component type, for example, on all instances of a Button component, or on all instances of a ComboBox component." version="1.0" playername="" helpurl="fl.managers:StyleManager:setComponentStyle"/>
                <string name="setStyle" object="[fl.managers.StyleManager]" text="StyleManager.setStyle(%name:String,style:Object%):void" static="true" tiptext="Sets a global style for all user interface components in a document." version="1.0" playername="" helpurl="fl.managers:StyleManager:setStyle"/>
            </folder>
        </folder>
    </folder>
        <folder name="fl.motion" id="fl.motion" sort="true" tiptext="Classes for package fl.motion" helpurl="fl.motion">
        <folder name="AdjustColor" id="[fl.motion.AdjustColor]" sort="true" index="true" asAncestors="Object" tiptext="The AdjustColor class defines various color properties, such as brightness, contrast, hue, and saturation, to support the ColorMatrixFilter class." helpurl="fl.motion:AdjustColor">
            <folder name="Methods" id="Methods" tiptext="Methods for class AdjustColor" helpurl="fl.motion:AdjustColor">
                <string name="AdjustColor" object="[fl.motion.AdjustColor]" text="new AdjustColor(%%)" constructor="true" tiptext="The AdjustColor class defines various color properties to support the ColorMatrixFilter." version="1.0" playername="" helpurl="fl.motion:AdjustColor:AdjustColor"/>
                <string name="AllValuesAreSet" object="[fl.motion.AdjustColor]" text=".AllValuesAreSet(%%):Boolean" tiptext="Verifies if all four AdjustColor properties are set." version="1.0" playername="" helpurl="fl.motion:AdjustColor:AllValuesAreSet"/>
                <string name="CalculateFinalFlatArray" object="[fl.motion.AdjustColor]" text=".CalculateFinalFlatArray(%%):Array" tiptext="Returns the flat array of values for all four properties." version="1.0" playername="" helpurl="fl.motion:AdjustColor:CalculateFinalFlatArray"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class AdjustColor" helpurl="fl.motion:AdjustColor">
                <string name="brightness" object="[fl.motion.AdjustColor]" text=".brightness" tiptext="Sets the brightness of the AdjustColor filter." version="" playername="" helpurl="fl.motion:AdjustColor:brightness:set"/>
                <string name="contrast" object="[fl.motion.AdjustColor]" text=".contrast" tiptext="Sets the contrast of the AdjustColor filter." version="" playername="" helpurl="fl.motion:AdjustColor:contrast:set"/>
                <string name="hue" object="[fl.motion.AdjustColor]" text=".hue" tiptext="Sets the hue of the AdjustColor filter." version="" playername="" helpurl="fl.motion:AdjustColor:hue:set"/>
                <string name="saturation" object="[fl.motion.AdjustColor]" text=".saturation" tiptext="Sets the saturation of the AdjustColor filter." version="" playername="" helpurl="fl.motion:AdjustColor:saturation:set"/>
            </folder>
        </folder>
        <folder name="Animator" id="[fl.motion.Animator]" sort="true" index="true" asAncestors="fl.motion:AnimatorBase,flash.events:EventDispatcher,Object" tiptext="The Animator class applies an XML description of a motion tween to a display object." helpurl="fl.motion:Animator">
            <folder name="Methods" id="Methods" tiptext="Methods for class Animator" helpurl="fl.motion:Animator">
                <string name="Animator" object="[fl.motion.Animator]" text="new Animator(%[xml:XML=null,target:flash.display:DisplayObject=null]%)" constructor="true" tiptext="Creates an Animator object to apply the XML-based motion tween description to a display object." version="1.0" playername="" helpurl="fl.motion:Animator:Animator"/>
                <string name="fromXMLString" object="[fl.motion.Animator]" text="Animator.fromXMLString(%xmlString:String[,target:flash.display:DisplayObject=null]%):fl.motion:Animator" static="true" tiptext="Creates an Animator object from a string of XML." version="1.0" playername="" helpurl="fl.motion:Animator:fromXMLString"/>
                <string name="matricesEqual" object="[fl.motion.Animator]" text="Animator.matricesEqual(%a:flash.geom:Matrix,b:flash.geom:Matrix%):Boolean" static="true" tiptext="Compares two matrices specified as parameters and returns true if they are equal to one another." version="2" playername="" helpurl="fl.motion:Animator:matricesEqual"/>
            </folder>
        </folder>
        <folder name="Animator3D" id="[fl.motion.Animator3D]" sort="true" index="true" asAncestors="fl.motion:AnimatorBase,flash.events:EventDispatcher,Object" tiptext="The Animator3D class applies an XML description of a three-dimensional motion tween to a display object." helpurl="fl.motion:Animator3D">
            <folder name="Methods" id="Methods" tiptext="Methods for class Animator3D" helpurl="fl.motion:Animator3D">
                <string name="Animator3D" object="[fl.motion.Animator3D]" text="new Animator3D(%[xml:XML=null,target:flash.display:DisplayObject=null]%)" constructor="true" tiptext="Creates an Animator3D object to apply the XML-based motion tween description in three dimensions to a display object." version="1.0" playername="" helpurl="fl.motion:Animator3D:Animator3D"/>
                <string name="convertMatrixToMatrix3D" object="[fl.motion.Animator3D]" text="Animator3D.convertMatrixToMatrix3D(%mat2D:flash.geom:Matrix%):flash.geom:Matrix3D" static="true" tiptext="" version="" playername="" helpurl="fl.motion:Animator3D:convertMatrixToMatrix3D"/>
                <string name="matrices3DEqual" object="[fl.motion.Animator3D]" text="Animator3D.matrices3DEqual(%a:flash.geom:Matrix3D,b:flash.geom:Matrix3D%):Boolean" static="true" tiptext="" version="" playername="" helpurl="fl.motion:Animator3D:matrices3DEqual"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class Animator3D" helpurl="fl.motion:Animator3D">
                <string name="initialPosition" object="[fl.motion.Animator3D]" text=".initialPosition" tiptext="Establishes, the x-, y-, and z- coordinates of the display object." version="" playername="" helpurl="fl.motion:Animator3D:initialPosition:set"/>
            </folder>
        </folder>
        <folder name="AnimatorBase" id="[fl.motion.AnimatorBase]" sort="true" index="true" asAncestors="flash.events:EventDispatcher,Object" tiptext="The AnimatorBase class applies an XML description of a motion tween to a display object." helpurl="fl.motion:AnimatorBase">
            <folder name="Methods" id="Methods" tiptext="Methods for class AnimatorBase" helpurl="fl.motion:AnimatorBase">
                <string name="AnimatorBase" object="[fl.motion.AnimatorBase]" text="new AnimatorBase(%[xml:XML=null,target:flash.display:DisplayObject=null]%)" constructor="true" tiptext="Creates an AnimatorBase object to apply the XML-based motion tween description to a display object." version="1.0" playername="" helpurl="fl.motion:AnimatorBase:AnimatorBase"/>
                <string name="end" object="[fl.motion.AnimatorBase]" text=".end(%[reset:Boolean=false,stopEnterFrame:Boolean=true,pastLastFrame:Boolean=false]%):void" tiptext="Stops the animation and Flash Player goes immediately to the last frame in the animation sequence." version="1.0" playername="" helpurl="fl.motion:AnimatorBase:end"/>
                <string name="nextFrame" object="[fl.motion.AnimatorBase]" text=".nextFrame(%[reset:Boolean=false,stopEnterFrame:Boolean=true]%):void" tiptext="Advances Flash Player to the next frame in the animation sequence." version="1.0" playername="" helpurl="fl.motion:AnimatorBase:nextFrame"/>
                <string name="pause" object="[fl.motion.AnimatorBase]" text=".pause(%%):void" tiptext="Pauses the animation until you call the resume() method." version="1.0" playername="" helpurl="fl.motion:AnimatorBase:pause"/>
                <string name="play" object="[fl.motion.AnimatorBase]" text=".play(%[startTime:int=-1,startEnterFrame:Boolean=true]%):void" tiptext="Begins the animation." version="1.0" playername="" helpurl="fl.motion:AnimatorBase:play"/>
                <string name="processCurrentFrame" object="[fl.motion.AnimatorBase]" text="AnimatorBase.processCurrentFrame(%parent:flash.display:MovieClip,anim:fl.motion:AnimatorBase,startEnterFrame:Boolean[,playOnly:Boolean=false]%):void" static="true" tiptext="" version="" playername="" helpurl="fl.motion:AnimatorBase:processCurrentFrame"/>
                <string name="registerParentFrameHandler" object="[fl.motion.AnimatorBase]" text="AnimatorBase.registerParentFrameHandler(%parent:flash.display:MovieClip,anim:fl.motion:AnimatorBase,spanStart:int[,repeatCount:int=0,useCurrentFrame:Boolean=false]%):void" static="true" tiptext="Registers the given MovieClip and an AnimatorBase instance for a child of that MovieClip." version="1.0" playername="" helpurl="fl.motion:AnimatorBase:registerParentFrameHandler"/>
                <string name="resume" object="[fl.motion.AnimatorBase]" text=".resume(%%):void" tiptext="Resumes the animation after it has been paused by the pause() method." version="1.0" playername="" helpurl="fl.motion:AnimatorBase:resume"/>
                <string name="rewind" object="[fl.motion.AnimatorBase]" text=".rewind(%%):void" tiptext="Sets Flash Player to the first frame of the animation." version="1.0" playername="" helpurl="fl.motion:AnimatorBase:rewind"/>
                <string name="startFrameEvents" object="[fl.motion.AnimatorBase]" text=".startFrameEvents(%%):void" tiptext="Initiates frame events." version="1.0" playername="" helpurl="fl.motion:AnimatorBase:startFrameEvents"/>
                <string name="stop" object="[fl.motion.AnimatorBase]" text=".stop(%%):void" tiptext="Stops the animation and Flash Player goes back to the first frame in the animation sequence." version="1.0" playername="" helpurl="fl.motion:AnimatorBase:stop"/>
                <string name="useCurrentFrame" object="[fl.motion.AnimatorBase]" text=".useCurrentFrame(%enable:Boolean,spanStart:int%):void" tiptext="Sets the currentFrame property whenever a new frame is entered, and sets whether the target&apos;s animation is synchronized to the frames in its parent MovieClips&apos;s timeline." version="1.0" playername="" helpurl="fl.motion:AnimatorBase:useCurrentFrame"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class AnimatorBase" helpurl="fl.motion:AnimatorBase">
                <string name="autoRewind" object="[fl.motion.AnimatorBase]" text=".autoRewind" tiptext="Sets the animation to restart after it finishes." version="" playername="" helpurl="fl.motion:AnimatorBase:autoRewind"/>
                <string name="orientToPath" object="[fl.motion.AnimatorBase]" text=".orientToPath" tiptext="Sets the position of the display object along the motion path." version="" playername="" helpurl="fl.motion:AnimatorBase:orientToPath"/>
                <string name="positionMatrix" object="[fl.motion.AnimatorBase]" text=".positionMatrix" tiptext="The Matrix object that applies an overall transformation to the motion path." version="" playername="" helpurl="fl.motion:AnimatorBase:positionMatrix"/>
                <string name="repeatCount" object="[fl.motion.AnimatorBase]" text=".repeatCount" tiptext="Number of times to repeat the animation." version="" playername="" helpurl="fl.motion:AnimatorBase:repeatCount"/>
                <string name="transformationPointZ" object="[fl.motion.AnimatorBase]" text=".transformationPointZ" tiptext="The z-coordinate point of reference for rotating or scaling a display object." version="" playername="" helpurl="fl.motion:AnimatorBase:transformationPointZ"/>
                <string name="transformationPoint" object="[fl.motion.AnimatorBase]" text=".transformationPoint" tiptext="The point of reference for rotating or scaling a display object." version="" playername="" helpurl="fl.motion:AnimatorBase:transformationPoint"/>
                <string name="frameEvent" object="[fl.motion.AnimatorBase]" text=".frameEvent" tiptext="The name of the event object created by the Event.ENTER_FRAME event." version="" playername="" helpurl="fl.motion:AnimatorBase:frameEvent:get"/>
                <string name="instanceFactoryClass" object="[fl.motion.AnimatorBase]" text=".instanceFactoryClass" tiptext="When creating instances with ActionScript, this is the class that creates the instance." version="" playername="" helpurl="fl.motion:AnimatorBase:instanceFactoryClass:get"/>
                <string name="isPlaying" object="[fl.motion.AnimatorBase]" text=".isPlaying" tiptext="Indicates whether the animation is currently playing." version="" playername="" helpurl="fl.motion:AnimatorBase:isPlaying:get"/>
                <string name="motionArray" object="[fl.motion.AnimatorBase]" text=".motionArray" tiptext="The Array of objects that contains the motion tween properties for the animation." version="" playername="" helpurl="fl.motion:AnimatorBase:motionArray:get"/>
                <string name="motion" object="[fl.motion.AnimatorBase]" text=".motion" tiptext="The object that contains the motion tween properties for the animation." version="" playername="" helpurl="fl.motion:AnimatorBase:motion:get"/>
                <string name="placeholderName" object="[fl.motion.AnimatorBase]" text=".placeholderName" tiptext="When creating instances with ActionScript, this is the instance that appears on stage that we will replace." version="" playername="" helpurl="fl.motion:AnimatorBase:placeholderName:get"/>
                <string name="sceneName" object="[fl.motion.AnimatorBase]" text=".sceneName" tiptext="A reference for exported scenes, for 3D motion, so the scene can be loaded into a parent timeline." version="" playername="" helpurl="fl.motion:AnimatorBase:sceneName:get"/>
                <string name="spanEnd" object="[fl.motion.AnimatorBase]" text=".spanEnd" tiptext="Returns the frame of the target&apos;s parent on which the animation of the target ends." version="" playername="" helpurl="fl.motion:AnimatorBase:spanEnd:get"/>
                <string name="spanStart" object="[fl.motion.AnimatorBase]" text=".spanStart" tiptext="Returns the frame of the target&apos;s parent on which the animation of the target begins." version="" playername="" helpurl="fl.motion:AnimatorBase:spanStart:get"/>
                <string name="targetName" object="[fl.motion.AnimatorBase]" text=".targetName" tiptext="The name of the target object as seen by the parent DisplayObjectContainer." version="" playername="" helpurl="fl.motion:AnimatorBase:targetName:get"/>
                <string name="targetParentButton" object="[fl.motion.AnimatorBase]" text=".targetParentButton" tiptext="" version="" playername="" helpurl="fl.motion:AnimatorBase:targetParentButton:get"/>
                <string name="targetParent" object="[fl.motion.AnimatorBase]" text=".targetParent" tiptext="The target parent DisplayObjectContainer being animated, which can be used in conjunction with targetName to retrieve the target object after it is removed and then replaced on the timeline." version="" playername="" helpurl="fl.motion:AnimatorBase:targetParent:get"/>
                <string name="targetState3D" object="[fl.motion.AnimatorBase]" text=".targetState3D" tiptext="The initial orientation for the target object." version="" playername="" helpurl="fl.motion:AnimatorBase:targetState3D:get"/>
                <string name="target" object="[fl.motion.AnimatorBase]" text=".target" tiptext="The display object being animated." version="" playername="" helpurl="fl.motion:AnimatorBase:target:get"/>
                <string name="time" object="[fl.motion.AnimatorBase]" text=".time" tiptext="A zero-based integer that indicates and controls the time in the current animation." version="" playername="" helpurl="fl.motion:AnimatorBase:time:get"/>
                <string name="usingCurrentFrame" object="[fl.motion.AnimatorBase]" text=".usingCurrentFrame" tiptext="Indicates whether the currentFrame property is checked whenever a new frame is entered andwhether the target&apos;s animation is synchronized to the frames in its parent&apos;s timeline, or always advancing no matter what the parent&apos;s current frame is." version="" playername="" helpurl="fl.motion:AnimatorBase:usingCurrentFrame:get"/>
                <string name="initialPosition" object="[fl.motion.AnimatorBase]" text=".initialPosition" tiptext="An array of coordinates defining the starting location of the animation." version="" playername="" helpurl="fl.motion:AnimatorBase:initialPosition:set"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class AnimatorBase" helpurl="fl.motion:AnimatorBase">
                <string name="timeChange" object="[fl.motion.AnimatorBase]" text=".addEventListener(%type:String=MotionEvent.TIME_CHANGE{MotionEvent.TIME_CHANGE,MotionEvent.MOTION_UPDATE,MotionEvent.MOTION_START,MotionEvent.MOTION_END},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the Animator&apos;s time value has changed, but the screen has not yet been updated (i.e., the motionUpdate event)." version="" playername="" helpurl="fl.motion:AnimatorBase_fl.motion.MotionEvent.TIME_CHANGE_timeChange"/>
                <string name="motionUpdate" object="[fl.motion.AnimatorBase]" text=".addEventListener(%type:String=MotionEvent.MOTION_UPDATE{MotionEvent.TIME_CHANGE,MotionEvent.MOTION_UPDATE,MotionEvent.MOTION_START,MotionEvent.MOTION_END},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the motion has changed and the screen has been updated." version="" playername="" helpurl="fl.motion:AnimatorBase_fl.motion.MotionEvent.MOTION_UPDATE_motionUpdate"/>
                <string name="motionStart" object="[fl.motion.AnimatorBase]" text=".addEventListener(%type:String=MotionEvent.MOTION_START{MotionEvent.TIME_CHANGE,MotionEvent.MOTION_UPDATE,MotionEvent.MOTION_START,MotionEvent.MOTION_END},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the motion starts playing." version="" playername="" helpurl="fl.motion:AnimatorBase_fl.motion.MotionEvent.MOTION_START_motionStart"/>
                <string name="motionEnd" object="[fl.motion.AnimatorBase]" text=".addEventListener(%type:String=MotionEvent.MOTION_END{MotionEvent.TIME_CHANGE,MotionEvent.MOTION_UPDATE,MotionEvent.MOTION_START,MotionEvent.MOTION_END},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the motion finishes playing, either when it reaches the end, or when the motion is interrupted by a call to the stop() or end() methods." version="" playername="" helpurl="fl.motion:AnimatorBase_fl.motion.MotionEvent.MOTION_END_motionEnd"/>
            </folder>
        </folder>
        <folder name="AnimatorFactory" id="[fl.motion.AnimatorFactory]" sort="true" index="true" asAncestors="fl.motion:AnimatorFactoryBase,Object" tiptext="The AnimatorFactory class provides ActionScript-based support to associate one Motion object with multiple display objects." helpurl="fl.motion:AnimatorFactory">
            <folder name="Methods" id="Methods" tiptext="Methods for class AnimatorFactory" helpurl="fl.motion:AnimatorFactory">
                <string name="AnimatorFactory" object="[fl.motion.AnimatorFactory]" text="new AnimatorFactory(%motion:fl.motion:MotionBase[,motionArray:Array=null]%)" constructor="true" tiptext="Creates an AnimatorFactory instance you can use to assign the properties of a MotionBase object to display objects." version="1.0" playername="" helpurl="fl.motion:AnimatorFactory:AnimatorFactory"/>
            </folder>
        </folder>
        <folder name="AnimatorFactory3D" id="[fl.motion.AnimatorFactory3D]" sort="true" index="true" asAncestors="fl.motion:AnimatorFactoryBase,Object" tiptext="The AnimatorFactory3D class provides ActionScript-based support to associate one Motion object containing three-dimensional properties with multiple display objects." helpurl="fl.motion:AnimatorFactory3D">
            <folder name="Methods" id="Methods" tiptext="Methods for class AnimatorFactory3D" helpurl="fl.motion:AnimatorFactory3D">
                <string name="AnimatorFactory3D" object="[fl.motion.AnimatorFactory3D]" text="new AnimatorFactory3D(%motion:fl.motion:MotionBase[,motionArray:Array=null]%)" constructor="true" tiptext="Creates an AnimatorFactory3D instance you can use to assign the properties of a MotionBase object to display objects." version="1.0" playername="" helpurl="fl.motion:AnimatorFactory3D:AnimatorFactory3D"/>
            </folder>
        </folder>
        <folder name="AnimatorFactoryBase" id="[fl.motion.AnimatorFactoryBase]" sort="true" index="true" asAncestors="Object" tiptext="The AnimatorFactoryBase class provides ActionScript-based support to display and tween multiple targeted objects with one Motion dynamically at runtime." helpurl="fl.motion:AnimatorFactoryBase">
            <folder name="Methods" id="Methods" tiptext="Methods for class AnimatorFactoryBase" helpurl="fl.motion:AnimatorFactoryBase">
                <string name="AnimatorFactoryBase" object="[fl.motion.AnimatorFactoryBase]" text="new AnimatorFactoryBase(%motion:fl.motion:MotionBase[,motionArray:Array=null]%)" constructor="true" tiptext="Creates an instance of the AnimatorFactoryBase class." version="1.0" playername="" helpurl="fl.motion:AnimatorFactoryBase:AnimatorFactoryBase"/>
                <string name="addTargetInfo" object="[fl.motion.AnimatorFactoryBase]" text=".addTargetInfo(%targetParent:flash.display:DisplayObject,targetName:String[,repeatCount:int=0,autoPlay:Boolean=true,startFrame:int=-1,useCurrentFrame:Boolean=false,initialPosition:Array=null,zIndex:int=-1,placeholderName:String=null,instanceFactoryClass:Class=null]%):fl.motion:AnimatorBase" tiptext="References the parent DisplayObjectContainer and then creates and returns an AnimatorBase instance whose target property is set to the DisplayObject (if applicable) that is the targetName property of the targetParent,and whose Motion property is stored in the AnimatorFactoryBase instance upon creation." version="1.0" playername="" helpurl="fl.motion:AnimatorFactoryBase:addTargetInfo"/>
                <string name="addTarget" object="[fl.motion.AnimatorFactoryBase]" text=".addTarget(%target:flash.display:DisplayObject[,repeatCount:int=0,autoPlay:Boolean=true,startFrame:int=-1,useCurrentFrame:Boolean=false]%):fl.motion:AnimatorBase" tiptext="Creates and returns an AnimatorBase instance whose target property is set to the DisplayObject (if applicable)that is the targetName property of the targetParent,and whose Motion property is stored in the AnimatorFactoryBase instance upon creation." version="1.0" playername="" helpurl="fl.motion:AnimatorFactoryBase:addTarget"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class AnimatorFactoryBase" helpurl="fl.motion:AnimatorFactoryBase">
                <string name="motion" object="[fl.motion.AnimatorFactoryBase]" text=".motion" tiptext="The MotionBase instance that the AnimatorFactoryBase instance and its target objects are associated with." version="" playername="" helpurl="fl.motion:AnimatorFactoryBase:motion:get"/>
                <string name="sceneName" object="[fl.motion.AnimatorFactoryBase]" text=".sceneName" tiptext="A reference for exported scenes, for 3D motion, so the scene can be loaded into a parent timeline." version="" playername="" helpurl="fl.motion:AnimatorFactoryBase:sceneName:set"/>
                <string name="transformationPointZ" object="[fl.motion.AnimatorFactoryBase]" text=".transformationPointZ" tiptext="The z-coordinate point of reference for rotating or scaling a display object." version="" playername="" helpurl="fl.motion:AnimatorFactoryBase:transformationPointZ:set"/>
                <string name="transformationPoint" object="[fl.motion.AnimatorFactoryBase]" text=".transformationPoint" tiptext="The point of reference for rotating or scaling a display object." version="" playername="" helpurl="fl.motion:AnimatorFactoryBase:transformationPoint:set"/>
            </folder>
        </folder>
        <folder name="AnimatorFactoryUniversal" id="[fl.motion.AnimatorFactoryUniversal]" sort="true" index="true" asAncestors="fl.motion:AnimatorFactoryBase,Object" tiptext="The AnimatorFactoryUniversal class provides ActionScript-based support to associate one Motion object with multiple display objects." helpurl="fl.motion:AnimatorFactoryUniversal">
            <folder name="Methods" id="Methods" tiptext="Methods for class AnimatorFactoryUniversal" helpurl="fl.motion:AnimatorFactoryUniversal">
                <string name="AnimatorFactoryUniversal" object="[fl.motion.AnimatorFactoryUniversal]" text="new AnimatorFactoryUniversal(%motion:fl.motion:MotionBase,motionArray:Array%)" constructor="true" tiptext="Creates an AnimatorFactory instance you can use to assign the properties of a MotionBase object to display objects." version="1.0" playername="" helpurl="fl.motion:AnimatorFactoryUniversal:AnimatorFactoryUniversal"/>
            </folder>
        </folder>
        <folder name="AnimatorUniversal" id="[fl.motion.AnimatorUniversal]" sort="true" index="true" asAncestors="fl.motion:Animator3D,fl.motion:AnimatorBase,flash.events:EventDispatcher,Object" tiptext="The AnimatorUniversal class applies an ActionScript description of a two and three-dimensional motion to a display object." helpurl="fl.motion:AnimatorUniversal">
            <folder name="Methods" id="Methods" tiptext="Methods for class AnimatorUniversal" helpurl="fl.motion:AnimatorUniversal">
                <string name="AnimatorUniversal" object="[fl.motion.AnimatorUniversal]" text="new AnimatorUniversal(%%)" constructor="true" tiptext="Creates an AnimatorUniversal object motion to a display object." version="1.0" playername="" helpurl="fl.motion:AnimatorUniversal:AnimatorUniversal"/>
                <string name="setTargetState" object="[fl.motion.AnimatorUniversal]" text=".setTargetState(%%):void" tiptext="" version="" playername="" helpurl="fl.motion:AnimatorUniversal:setTargetState"/>
            </folder>
        </folder>
        <folder name="BezierEase" id="[fl.motion.BezierEase]" sort="true" index="true" asAncestors="Object" tiptext="The BezierEase class provides precise easing control for a motion tween between two keyframes." helpurl="fl.motion:BezierEase">
            <folder name="Methods" id="Methods" tiptext="Methods for class BezierEase" helpurl="fl.motion:BezierEase">
                <string name="BezierEase" object="[fl.motion.BezierEase]" text="new BezierEase(%[xml:XML=null]%)" constructor="true" tiptext="Constructor for BezierEase instances." version="1.0" playername="" helpurl="fl.motion:BezierEase:BezierEase"/>
                <string name="getValue" object="[fl.motion.BezierEase]" text=".getValue(%time:Number,begin:Number,change:Number,duration:Number%):Number" tiptext="Calculates an interpolated value for a numerical property of animation, using a Bezier easing curve." version="1.0" playername="" helpurl="fl.motion:BezierEase:getValue"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class BezierEase" helpurl="fl.motion:BezierEase">
                <string name="points" object="[fl.motion.BezierEase]" text=".points" tiptext="An ordered collection of points in the custom easing curve." version="" playername="" helpurl="fl.motion:BezierEase:points"/>
                <string name="target" object="[fl.motion.BezierEase]" text=".target" tiptext="The name of the animation property to target." version="" playername="" helpurl="fl.motion:BezierEase:target:get"/>
            </folder>
        </folder>
        <folder name="BezierSegment" id="[fl.motion.BezierSegment]" sort="true" index="true" asAncestors="Object" tiptext="A Bezier segment consists of four Point objects that define a single cubic Bezier curve." helpurl="fl.motion:BezierSegment">
            <folder name="Methods" id="Methods" tiptext="Methods for class BezierSegment" helpurl="fl.motion:BezierSegment">
                <string name="BezierSegment" object="[fl.motion.BezierSegment]" text="new BezierSegment(%a:flash.geom:Point,b:flash.geom:Point,c:flash.geom:Point,d:flash.geom:Point%)" constructor="true" tiptext="Constructor for BezierSegment instances." version="1.0" playername="" helpurl="fl.motion:BezierSegment:BezierSegment"/>
                <string name="getCubicCoefficients" object="[fl.motion.BezierSegment]" text="BezierSegment.getCubicCoefficients(%a:Number,b:Number,c:Number,d:Number%):Array" static="true" tiptext="Calculates the coefficients for a cubic polynomial equation, given the values of the corresponding cubic Bezier equation." version="1.0" playername="" helpurl="fl.motion:BezierSegment:getCubicCoefficients"/>
                <string name="getCubicRoots" object="[fl.motion.BezierSegment]" text="BezierSegment.getCubicRoots(%[a:Number=0,b:Number=0,c:Number=0,d:Number=0]%):Array" static="true" tiptext="Finds the real solutions, if they exist, to a cubic polynomial equation of the form: at^3 + bt^2 + ct + d." version="1.0" playername="" helpurl="fl.motion:BezierSegment:getCubicRoots"/>
                <string name="getQuadraticRoots" object="[fl.motion.BezierSegment]" text="BezierSegment.getQuadraticRoots(%a:Number,b:Number,c:Number%):Array" static="true" tiptext="Finds the real solutions, if they exist, to a quadratic equation of the form: at^2 + bt + c." version="1.0" playername="" helpurl="fl.motion:BezierSegment:getQuadraticRoots"/>
                <string name="getSingleValue" object="[fl.motion.BezierSegment]" text="BezierSegment.getSingleValue(%t:Number[,a:Number=0,b:Number=0,c:Number=0,d:Number=0]%):Number" static="true" tiptext="Calculates the value of a one-dimensional cubic Bezier equation at a specific time." version="1.0" playername="" helpurl="fl.motion:BezierSegment:getSingleValue"/>
                <string name="getValue" object="[fl.motion.BezierSegment]" text=".getValue(%t:Number%):flash.geom:Point" tiptext="Calculates the location of a two-dimensional cubic Bezier curve at a specific time." version="1.0" playername="" helpurl="fl.motion:BezierSegment:getValue"/>
                <string name="getYForX" object="[fl.motion.BezierSegment]" text=".getYForX(%x:Number[,coefficients:Array=null]%):Number" tiptext="Finds the y value of a cubic Bezier curve at a given x coordinate." version="1.0" playername="" helpurl="fl.motion:BezierSegment:getYForX"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class BezierSegment" helpurl="fl.motion:BezierSegment">
                <string name="a" object="[fl.motion.BezierSegment]" text=".a" tiptext="The first point of the Bezier curve." version="" playername="" helpurl="fl.motion:BezierSegment:a"/>
                <string name="b" object="[fl.motion.BezierSegment]" text=".b" tiptext="The second point of the Bezier curve." version="" playername="" helpurl="fl.motion:BezierSegment:b"/>
                <string name="c" object="[fl.motion.BezierSegment]" text=".c" tiptext="The third point of the Bezier curve." version="" playername="" helpurl="fl.motion:BezierSegment:c"/>
                <string name="d" object="[fl.motion.BezierSegment]" text=".d" tiptext="The fourth point of the Bezier curve." version="" playername="" helpurl="fl.motion:BezierSegment:d"/>
            </folder>
        </folder>
        <folder name="Color" id="[fl.motion.Color]" sort="true" index="true" asAncestors="flash.geom:ColorTransform,Object" tiptext="The Color class extends the Flash Player ColorTransform class, adding the ability to control brightness and tint." helpurl="fl.motion:Color">
            <folder name="Methods" id="Methods" tiptext="Methods for class Color" helpurl="fl.motion:Color">
                <string name="Color" object="[fl.motion.Color]" text="new Color(%[redMultiplier:Number=1.0,greenMultiplier:Number=1.0,blueMultiplier:Number=1.0,alphaMultiplier:Number=1.0,redOffset:Number=0,greenOffset:Number=0,blueOffset:Number=0,alphaOffset:Number=0]%)" constructor="true" tiptext="Constructor for Color instances." version="1.0" playername="" helpurl="fl.motion:Color:Color"/>
                <string name="fromXML" object="[fl.motion.Color]" text="Color.fromXML(%xml:XML%):fl.motion:Color" static="true" tiptext="Creates a Color instance from XML." version="1.0" playername="" helpurl="fl.motion:Color:fromXML"/>
                <string name="interpolateColor" object="[fl.motion.Color]" text="Color.interpolateColor(%fromColor:uint,toColor:uint,progress:Number%):uint" static="true" tiptext="Blends smoothly from one color value to another." version="1.0" playername="" helpurl="fl.motion:Color:interpolateColor"/>
                <string name="interpolateTransform" object="[fl.motion.Color]" text="Color.interpolateTransform(%fromColor:flash.geom:ColorTransform,toColor:flash.geom:ColorTransform,progress:Number%):flash.geom:ColorTransform" static="true" tiptext="Blends smoothly from one ColorTransform object to another." version="1.0" playername="" helpurl="fl.motion:Color:interpolateTransform"/>
                <string name="setTint" object="[fl.motion.Color]" text=".setTint(%tintColor:uint,tintMultiplier:Number%):void" tiptext="Sets the tint color and amount at the same time." version="1.0" playername="" helpurl="fl.motion:Color:setTint"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class Color" helpurl="fl.motion:Color">
                <string name="brightness" object="[fl.motion.Color]" text=".brightness" tiptext="The percentage of brightness, as a decimal between -1 and 1." version="" playername="" helpurl="fl.motion:Color:brightness:get"/>
                <string name="tintColor" object="[fl.motion.Color]" text=".tintColor" tiptext="The tinting color value in the 0xRRGGBB format." version="" playername="" helpurl="fl.motion:Color:tintColor:get"/>
                <string name="tintMultiplier" object="[fl.motion.Color]" text=".tintMultiplier" tiptext="The percentage to apply the tint color, as a decimal value between 0 and 1." version="" playername="" helpurl="fl.motion:Color:tintMultiplier:get"/>
            </folder>
        </folder>
        <folder name="ColorMatrix" id="[fl.motion.ColorMatrix]" sort="true" index="true" asAncestors="fl.motion:DynamicMatrix,Object" tiptext="The ColorMatrix class calculates and stores color matrixes based on given values." helpurl="fl.motion:ColorMatrix">
            <folder name="Methods" id="Methods" tiptext="Methods for class ColorMatrix" helpurl="fl.motion:ColorMatrix">
                <string name="ColorMatrix" object="[fl.motion.ColorMatrix]" text="new ColorMatrix(%%)" constructor="true" tiptext="Calculates and stores color matrixes based on given values." version="1.0" playername="" helpurl="fl.motion:ColorMatrix:ColorMatrix"/>
                <string name="GetFlatArray" object="[fl.motion.ColorMatrix]" text=".GetFlatArray(%%):Array" tiptext="Calculates and returns a flat array of 20 numerical values representing the four matrixes set in this object." version="1.0" playername="" helpurl="fl.motion:ColorMatrix:GetFlatArray"/>
                <string name="SetBrightnessMatrix" object="[fl.motion.ColorMatrix]" text=".SetBrightnessMatrix(%value:Number%):void" tiptext="Calculates and stores a brightness matrix based on the given value." version="1.0" playername="" helpurl="fl.motion:ColorMatrix:SetBrightnessMatrix"/>
                <string name="SetContrastMatrix" object="[fl.motion.ColorMatrix]" text=".SetContrastMatrix(%value:Number%):void" tiptext="Calculates and stores a contrast matrix based on the given value." version="1.0" playername="" helpurl="fl.motion:ColorMatrix:SetContrastMatrix"/>
                <string name="SetHueMatrix" object="[fl.motion.ColorMatrix]" text=".SetHueMatrix(%angle:Number%):void" tiptext="Calculates and stores a hue matrix based on the given value." version="1.0" playername="" helpurl="fl.motion:ColorMatrix:SetHueMatrix"/>
                <string name="SetSaturationMatrix" object="[fl.motion.ColorMatrix]" text=".SetSaturationMatrix(%value:Number%):void" tiptext="Calculates and stores a saturation matrix based on the given value." version="1.0" playername="" helpurl="fl.motion:ColorMatrix:SetSaturationMatrix"/>
            </folder>
        </folder>
        <folder name="CustomEase" id="[fl.motion.CustomEase]" sort="true" index="true" asAncestors="Object" tiptext="The CustomEase class is used to modify specific properties of the easing behavior of a motion tween as the tween progresses over time." helpurl="fl.motion:CustomEase">
            <folder name="Methods" id="Methods" tiptext="Methods for class CustomEase" helpurl="fl.motion:CustomEase">
                <string name="CustomEase" object="[fl.motion.CustomEase]" text="new CustomEase(%[xml:XML=null]%)" constructor="true" tiptext="Constructor for CustomEase instances." version="1.0" playername="" helpurl="fl.motion:CustomEase:CustomEase"/>
                <string name="getValue" object="[fl.motion.CustomEase]" text=".getValue(%time:Number,begin:Number,change:Number,duration:Number%):Number" tiptext="Calculates an interpolated value for a numerical property of animation, using a custom easing curve." version="1.0" playername="" helpurl="fl.motion:CustomEase:getValue"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class CustomEase" helpurl="fl.motion:CustomEase">
                <string name="points" object="[fl.motion.CustomEase]" text=".points" tiptext="An ordered collection of points in the custom easing curve." version="" playername="" helpurl="fl.motion:CustomEase:points"/>
                <string name="target" object="[fl.motion.CustomEase]" text=".target" tiptext="The name of the animation property to target." version="" playername="" helpurl="fl.motion:CustomEase:target:get"/>
            </folder>
        </folder>
        <folder name="DynamicMatrix" id="[fl.motion.DynamicMatrix]" sort="true" index="true" asAncestors="Object" tiptext="The DynamicMatrix class calculates and stores a matrix based on given values." helpurl="fl.motion:DynamicMatrix">
            <folder name="Methods" id="Methods" tiptext="Methods for class DynamicMatrix" helpurl="fl.motion:DynamicMatrix">
                <string name="DynamicMatrix" object="[fl.motion.DynamicMatrix]" text="new DynamicMatrix(%width:int,height:int%)" constructor="true" tiptext="Constructs a matrix with the given number of rows and columns." version="1.0" playername="" helpurl="fl.motion:DynamicMatrix:DynamicMatrix"/>
                <string name="Add" object="[fl.motion.DynamicMatrix]" text=".Add(%inMatrix:fl.motion:DynamicMatrix%):Boolean" tiptext="Adds the current matrix with a specified matrix." version="1.0" playername="" helpurl="fl.motion:DynamicMatrix:Add"/>
                <string name="GetHeight" object="[fl.motion.DynamicMatrix]" text=".GetHeight(%%):Number" tiptext="Returns the number of rows in the current matrix." version="1.0" playername="" helpurl="fl.motion:DynamicMatrix:GetHeight"/>
                <string name="GetValue" object="[fl.motion.DynamicMatrix]" text=".GetValue(%row:int,col:int%):Number" tiptext="Returns the value at the specified zero-based row and column in the current matrix." version="1.0" playername="" helpurl="fl.motion:DynamicMatrix:GetValue"/>
                <string name="GetWidth" object="[fl.motion.DynamicMatrix]" text=".GetWidth(%%):Number" tiptext="Returns the number of columns in the current matrix." version="1.0" playername="" helpurl="fl.motion:DynamicMatrix:GetWidth"/>
                <string name="LoadIdentity" object="[fl.motion.DynamicMatrix]" text=".LoadIdentity(%%):void" tiptext="Sets the current matrix to an identity matrix." version="1.0" playername="" helpurl="fl.motion:DynamicMatrix:LoadIdentity"/>
                <string name="LoadZeros" object="[fl.motion.DynamicMatrix]" text=".LoadZeros(%%):void" tiptext="Sets all values in the current matrix to zero." version="1.0" playername="" helpurl="fl.motion:DynamicMatrix:LoadZeros"/>
                <string name="MultiplyNumber" object="[fl.motion.DynamicMatrix]" text=".MultiplyNumber(%value:Number%):Boolean" tiptext="Multiplies a number with each item in the matrix and stores the results in the current matrix." version="1.0" playername="" helpurl="fl.motion:DynamicMatrix:MultiplyNumber"/>
                <string name="Multiply" object="[fl.motion.DynamicMatrix]" text=".Multiply(%inMatrix:fl.motion:DynamicMatrix[,order:int=unknown]%):Boolean" tiptext="Multiplies the current matrix with a specified matrix; and either appends or prepends the specified matrix." version="1.0" playername="" helpurl="fl.motion:DynamicMatrix:Multiply"/>
                <string name="SetValue" object="[fl.motion.DynamicMatrix]" text=".SetValue(%row:int,col:int,value:Number%):void" tiptext="Sets the value at a specified zero-based row and column in the current matrix." version="1.0" playername="" helpurl="fl.motion:DynamicMatrix:SetValue"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class DynamicMatrix" helpurl="fl.motion:DynamicMatrix">
                <string name="MATRIX_ORDER_APPEND" object="[fl.motion.DynamicMatrix]" text="DynamicMatrix.MATRIX_ORDER_APPEND" constant="true" tiptext="Specifies that a matrix is appended for concatenation." version="" playername="" helpurl="fl.motion:DynamicMatrix:MATRIX_ORDER_APPEND"/>
                <string name="MATRIX_ORDER_PREPEND" object="[fl.motion.DynamicMatrix]" text="DynamicMatrix.MATRIX_ORDER_PREPEND" constant="true" tiptext="Specifies that a matrix is prepended for concatenation." version="" playername="" helpurl="fl.motion:DynamicMatrix:MATRIX_ORDER_PREPEND"/>
            </folder>
        </folder>
        <folder name="FunctionEase" id="[fl.motion.FunctionEase]" sort="true" index="true" asAncestors="Object" tiptext="The FunctionEase class allows custom interpolation functions to be used with the fl.motion framework in place of other interpolations like SimpleEase and CustomEase." helpurl="fl.motion:FunctionEase">
            <folder name="Methods" id="Methods" tiptext="Methods for class FunctionEase" helpurl="fl.motion:FunctionEase">
                <string name="FunctionEase" object="[fl.motion.FunctionEase]" text="new FunctionEase(%[xml:XML=null]%)" constructor="true" tiptext="Constructor for FunctionEase instances." version="1.0" playername="" helpurl="fl.motion:FunctionEase:FunctionEase"/>
                <string name="getValue" object="[fl.motion.FunctionEase]" text=".getValue(%time:Number,begin:Number,change:Number,duration:Number%):Number" tiptext="Calculates an interpolated value for a numerical property of animation, using the specified easing function." version="1.0" playername="" helpurl="fl.motion:FunctionEase:getValue"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class FunctionEase" helpurl="fl.motion:FunctionEase">
                <string name="easingFunction" object="[fl.motion.FunctionEase]" text=".easingFunction" tiptext="A reference to a function with a (t, b, c, d) signature like the methods in the fl.motion.easing classes." version="" playername="" helpurl="fl.motion:FunctionEase:easingFunction"/>
                <string name="parameters" object="[fl.motion.FunctionEase]" text=".parameters" tiptext="An optional array of values to be passed to the easing function as additional arguments." version="" playername="" helpurl="fl.motion:FunctionEase:parameters"/>
                <string name="functionName" object="[fl.motion.FunctionEase]" text=".functionName" tiptext="The fully qualified name of an easing function, such as fl.motion.easing.Bounce.easeOut()." version="" playername="" helpurl="fl.motion:FunctionEase:functionName:get"/>
                <string name="target" object="[fl.motion.FunctionEase]" text=".target" tiptext="The name of the animation property to target." version="" playername="" helpurl="fl.motion:FunctionEase:target:get"/>
            </folder>
        </folder>
        <folder name="ITween" id="[fl.motion.ITween]" sort="true" index="true" tiptext="The ITween interface defines the application programming interface (API) that interpolation classes implement in order to work with the fl.motion classes." helpurl="fl.motion:ITween">
            <folder name="Methods" id="Methods" tiptext="Methods for class ITween" helpurl="fl.motion:ITween">
                <string name="getValue" object="[fl.motion.ITween]" text=".getValue(%time:Number,begin:Number,change:Number,duration:Number%):Number" tiptext="Calculates an interpolated value for a numerical property of animation." version="1.0" playername="" helpurl="fl.motion:ITween:getValue"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class ITween" helpurl="fl.motion:ITween">
                <string name="target" object="[fl.motion.ITween]" text=".target" tiptext="The name of the animation property to target." version="" playername="" helpurl="fl.motion:ITween:target:get"/>
            </folder>
        </folder>
        <folder name="Keyframe" id="[fl.motion.Keyframe]" sort="true" index="true" asAncestors="fl.motion:KeyframeBase,Object" tiptext="The Keyframe class defines the visual state at a specific time in a motion tween." helpurl="fl.motion:Keyframe">
            <folder name="Methods" id="Methods" tiptext="Methods for class Keyframe" helpurl="fl.motion:Keyframe">
                <string name="Keyframe" object="[fl.motion.Keyframe]" text="new Keyframe(%[xml:XML=null]%)" constructor="true" tiptext="Constructor for keyframe instances." version="1.0" playername="" helpurl="fl.motion:Keyframe:Keyframe"/>
                <string name="getTween" object="[fl.motion.Keyframe]" text=".getTween(%target:String%):fl.motion:ITween" tiptext="Retrieves an ITween object for a specific animation property." version="1.0" playername="" helpurl="fl.motion:Keyframe:getTween"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class Keyframe" helpurl="fl.motion:Keyframe">
                <string name="tweenScale" object="[fl.motion.Keyframe]" text=".tweenScale" tiptext="A flag that controls whether scale will be interpolated during a tween." version="" playername="" helpurl="fl.motion:Keyframe:tweenScale"/>
                <string name="tweenSnap" object="[fl.motion.Keyframe]" text=".tweenSnap" tiptext="Stores the value of the Snap checkbox for motion tweens, which snaps the object to a motion guide." version="" playername="" helpurl="fl.motion:Keyframe:tweenSnap"/>
                <string name="tweenSync" object="[fl.motion.Keyframe]" text=".tweenSync" tiptext="Stores the value of the Sync checkbox for motion tweens, which affects graphic symbols only." version="" playername="" helpurl="fl.motion:Keyframe:tweenSync"/>
                <string name="tweens" object="[fl.motion.Keyframe]" text=".tweens" tiptext="An array that contains each tween object to be applied to the target object at a particular keyframe." version="" playername="" helpurl="fl.motion:Keyframe:tweens"/>
                <string name="tweensLength" object="[fl.motion.Keyframe]" text=".tweensLength" tiptext="The number of frames for the tween." version="" playername="" helpurl="fl.motion:Keyframe:tweensLength:get"/>
            </folder>
        </folder>
        <folder name="KeyframeBase" id="[fl.motion.KeyframeBase]" sort="true" index="true" asAncestors="Object" tiptext="The KeyframeBase class defines the visual state at a specific time in a motion tween." helpurl="fl.motion:KeyframeBase">
            <folder name="Methods" id="Methods" tiptext="Methods for class KeyframeBase" helpurl="fl.motion:KeyframeBase">
                <string name="KeyframeBase" object="[fl.motion.KeyframeBase]" text="new KeyframeBase(%[xml:XML=null]%)" constructor="true" tiptext="Constructor for keyframe instances." version="1.0" playername="" helpurl="fl.motion:KeyframeBase:KeyframeBase"/>
                <string name="affectsTweenable" object="[fl.motion.KeyframeBase]" text=".affectsTweenable(%tweenableName:String%):Boolean" tiptext="Indicates whether the keyframe has an influence on a specific animation property." version="1.0" playername="" helpurl="fl.motion:KeyframeBase:affectsTweenable"/>
                <string name="getValue" object="[fl.motion.KeyframeBase]" text=".getValue(%tweenableName:String%):Number" tiptext="Retrieves the value of a specific tweenable property on the keyframe." version="1.0" playername="" helpurl="fl.motion:KeyframeBase:getValue"/>
                <string name="setAdjustColorProperty" object="[fl.motion.KeyframeBase]" text=".setAdjustColorProperty(%filterIndex:int,propertyName:String,value:*%):void" tiptext="Sets one of the four AdjustColor properties to the AdjustColor object for the given filter index." version="1.0" playername="" helpurl="fl.motion:KeyframeBase:setAdjustColorProperty"/>
                <string name="setValue" object="[fl.motion.KeyframeBase]" text=".setValue(%tweenableName:String,newValue:Number%):void" tiptext="Changes the value of a specific tweenable property on the keyframe." version="1.0" playername="" helpurl="fl.motion:KeyframeBase:setValue"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class KeyframeBase" helpurl="fl.motion:KeyframeBase">
                <string name="adjustColorObjects" object="[fl.motion.KeyframeBase]" text=".adjustColorObjects" tiptext="Stores AdjustColor instances mapped to their corresponding index in the filters Array for this keyframe." version="" playername="" helpurl="fl.motion:KeyframeBase:adjustColorObjects"/>
                <string name="blank" object="[fl.motion.KeyframeBase]" text=".blank" tiptext="Indicates that the target object should not be displayed on this keyframe." version="" playername="" helpurl="fl.motion:KeyframeBase:blank"/>
                <string name="blendMode" object="[fl.motion.KeyframeBase]" text=".blendMode" tiptext="A value from the BlendMode class that specifies how Flash Player mixes the display object&apos;s colors with graphics underneath it." version="" playername="" helpurl="fl.motion:KeyframeBase:blendMode"/>
                <string name="cacheAsBitmap" object="[fl.motion.KeyframeBase]" text=".cacheAsBitmap" tiptext="If set to true, Flash Player caches an internal bitmap representation of the display object." version="" playername="" helpurl="fl.motion:KeyframeBase:cacheAsBitmap"/>
                <string name="color" object="[fl.motion.KeyframeBase]" text=".color" tiptext="A color object that adjusts the color transform in the target object." version="" playername="" helpurl="fl.motion:KeyframeBase:color"/>
                <string name="filters" object="[fl.motion.KeyframeBase]" text=".filters" tiptext="An array that contains each filter object to be applied to the target object at a particular keyframe." version="" playername="" helpurl="fl.motion:KeyframeBase:filters"/>
                <string name="firstFrame" object="[fl.motion.KeyframeBase]" text=".firstFrame" tiptext="Stores the name of the first frame for motion tweens, which affects graphic symbols only." version="" playername="" helpurl="fl.motion:KeyframeBase:firstFrame"/>
                <string name="label" object="[fl.motion.KeyframeBase]" text=".label" tiptext="A string used to describe the keyframe." version="" playername="" helpurl="fl.motion:KeyframeBase:label"/>
                <string name="loop" object="[fl.motion.KeyframeBase]" text=".loop" tiptext="Stores the value of the Loop checkbox for motion tweens, which affects graphic symbols only." version="" playername="" helpurl="fl.motion:KeyframeBase:loop"/>
                <string name="matrix3D" object="[fl.motion.KeyframeBase]" text=".matrix3D" tiptext="Stores matrix3d property if one exists for this keyframe." version="" playername="" helpurl="fl.motion:KeyframeBase:matrix3D"/>
                <string name="matrix" object="[fl.motion.KeyframeBase]" text=".matrix" tiptext="Stores matrix property if one exists for this keyframe." version="" playername="" helpurl="fl.motion:KeyframeBase:matrix"/>
                <string name="opaqueBackground" object="[fl.motion.KeyframeBase]" text=".opaqueBackground" tiptext="Controls whether target object has an opaque background." version="" playername="" helpurl="fl.motion:KeyframeBase:opaqueBackground"/>
                <string name="orientToPath" object="[fl.motion.KeyframeBase]" text=".orientToPath" tiptext="If set to true, this property causes the target object to rotate automatically to follow the angle of its path." version="" playername="" helpurl="fl.motion:KeyframeBase:orientToPath"/>
                <string name="rotateDirection" object="[fl.motion.KeyframeBase]" text=".rotateDirection" tiptext="Controls how the target object rotates during a motion tween, with a value from the RotateDirection class." version="" playername="" helpurl="fl.motion:KeyframeBase:rotateDirection"/>
                <string name="rotateTimes" object="[fl.motion.KeyframeBase]" text=".rotateTimes" tiptext="Adds rotation to the target object during a motion tween, in addition to any existing rotation." version="" playername="" helpurl="fl.motion:KeyframeBase:rotateTimes"/>
                <string name="rotationConcat" object="[fl.motion.KeyframeBase]" text=".rotationConcat" tiptext="The rotation (z-axis) values of the target object in the motion relative to previous orientation as applied from the transformation point, as opposed to absolute rotation values, and separate from skewY values." version="" playername="" helpurl="fl.motion:KeyframeBase:rotationConcat"/>
                <string name="rotationX" object="[fl.motion.KeyframeBase]" text=".rotationX" tiptext="Stores rotationX property for this keyframe." version="" playername="" helpurl="fl.motion:KeyframeBase:rotationX"/>
                <string name="rotationY" object="[fl.motion.KeyframeBase]" text=".rotationY" tiptext="Stores rotationY property for this keyframe." version="" playername="" helpurl="fl.motion:KeyframeBase:rotationY"/>
                <string name="scaleX" object="[fl.motion.KeyframeBase]" text=".scaleX" tiptext="Indicates the horizontal scale as a percentage of the object as applied from the transformation point." version="" playername="" helpurl="fl.motion:KeyframeBase:scaleX"/>
                <string name="scaleY" object="[fl.motion.KeyframeBase]" text=".scaleY" tiptext="Indicates the vertical scale as a percentage of the object as applied from the transformation point." version="" playername="" helpurl="fl.motion:KeyframeBase:scaleY"/>
                <string name="skewX" object="[fl.motion.KeyframeBase]" text=".skewX" tiptext="Indicates the horizontal skew angle of the target object in degrees as applied from the transformation point." version="" playername="" helpurl="fl.motion:KeyframeBase:skewX"/>
                <string name="skewY" object="[fl.motion.KeyframeBase]" text=".skewY" tiptext="Indicates the vertical skew angle of the target object in degrees as applied from the transformation point." version="" playername="" helpurl="fl.motion:KeyframeBase:skewY"/>
                <string name="useRotationConcat" object="[fl.motion.KeyframeBase]" text=".useRotationConcat" tiptext="If set to true, this property causes the target object to rotate when data for motion is supplied by addpropertyarray." version="" playername="" helpurl="fl.motion:KeyframeBase:useRotationConcat"/>
                <string name="visible" object="[fl.motion.KeyframeBase]" text=".visible" tiptext="Controls whether target object is visible." version="" playername="" helpurl="fl.motion:KeyframeBase:visible"/>
                <string name="x" object="[fl.motion.KeyframeBase]" text=".x" tiptext="The horizontal position of the target object&apos;s transformation point in its parent&apos;s coordinate space." version="" playername="" helpurl="fl.motion:KeyframeBase:x"/>
                <string name="y" object="[fl.motion.KeyframeBase]" text=".y" tiptext="The vertical position of the target object&apos;s transformation point in its parent&apos;s coordinate space." version="" playername="" helpurl="fl.motion:KeyframeBase:y"/>
                <string name="z" object="[fl.motion.KeyframeBase]" text=".z" tiptext="The depth (z-axis) position of the target object&apos;s transformation point in its parent&apos;s coordinate space." version="" playername="" helpurl="fl.motion:KeyframeBase:z"/>
                <string name="index" object="[fl.motion.KeyframeBase]" text=".index" tiptext="The keyframe&apos;s unique time value in the motion tween." version="" playername="" helpurl="fl.motion:KeyframeBase:index:get"/>
                <string name="rotation" object="[fl.motion.KeyframeBase]" text=".rotation" tiptext="Indicates the rotation of the target object in degrees from its original orientation as applied from the transformation point." version="" playername="" helpurl="fl.motion:KeyframeBase:rotation:get"/>
                <string name="tweensLength" object="[fl.motion.KeyframeBase]" text=".tweensLength" tiptext="The number of frames for the tween." version="" playername="" helpurl="fl.motion:KeyframeBase:tweensLength:get"/>
            </folder>
        </folder>
        <folder name="MatrixTransformer" id="[fl.motion.MatrixTransformer]" sort="true" index="true" asAncestors="Object" tiptext="The MatrixTransformer class contains methods for modifying individual properties of a transformation matrix: horizontal and vertical scale, horizontal and vertical skew, and rotation." helpurl="fl.motion:MatrixTransformer">
            <folder name="Methods" id="Methods" tiptext="Methods for class MatrixTransformer" helpurl="fl.motion:MatrixTransformer">
                <string name="getRotationRadians" object="[fl.motion.MatrixTransformer]" text="MatrixTransformer.getRotationRadians(%m:flash.geom:Matrix%):Number" static="true" tiptext="Calculates the angle of rotation present in a matrix, in radians." version="1.0" playername="" helpurl="fl.motion:MatrixTransformer:getRotationRadians"/>
                <string name="getRotation" object="[fl.motion.MatrixTransformer]" text="MatrixTransformer.getRotation(%m:flash.geom:Matrix%):Number" static="true" tiptext="Calculates the angle of rotation present in a matrix, in degrees." version="1.0" playername="" helpurl="fl.motion:MatrixTransformer:getRotation"/>
                <string name="getScaleX" object="[fl.motion.MatrixTransformer]" text="MatrixTransformer.getScaleX(%m:flash.geom:Matrix%):Number" static="true" tiptext="Calculates the horizontal scale present in a matrix." version="1.0" playername="" helpurl="fl.motion:MatrixTransformer:getScaleX"/>
                <string name="getScaleY" object="[fl.motion.MatrixTransformer]" text="MatrixTransformer.getScaleY(%m:flash.geom:Matrix%):Number" static="true" tiptext="Calculates the vertical scale present in a matrix." version="1.0" playername="" helpurl="fl.motion:MatrixTransformer:getScaleY"/>
                <string name="getSkewXRadians" object="[fl.motion.MatrixTransformer]" text="MatrixTransformer.getSkewXRadians(%m:flash.geom:Matrix%):Number" static="true" tiptext="Calculates the angle of horizontal skew present in a matrix, in radians." version="1.0" playername="" helpurl="fl.motion:MatrixTransformer:getSkewXRadians"/>
                <string name="getSkewX" object="[fl.motion.MatrixTransformer]" text="MatrixTransformer.getSkewX(%m:flash.geom:Matrix%):Number" static="true" tiptext="Calculates the angle of horizontal skew present in a matrix, in degrees." version="1.0" playername="" helpurl="fl.motion:MatrixTransformer:getSkewX"/>
                <string name="getSkewYRadians" object="[fl.motion.MatrixTransformer]" text="MatrixTransformer.getSkewYRadians(%m:flash.geom:Matrix%):Number" static="true" tiptext="Calculates the angle of vertical skew present in a matrix, in radians." version="1.0" playername="" helpurl="fl.motion:MatrixTransformer:getSkewYRadians"/>
                <string name="getSkewY" object="[fl.motion.MatrixTransformer]" text="MatrixTransformer.getSkewY(%m:flash.geom:Matrix%):Number" static="true" tiptext="Calculates the angle of vertical skew present in a matrix, in degrees." version="1.0" playername="" helpurl="fl.motion:MatrixTransformer:getSkewY"/>
                <string name="matchInternalPointWithExternal" object="[fl.motion.MatrixTransformer]" text="MatrixTransformer.matchInternalPointWithExternal(%m:flash.geom:Matrix,internalPoint:flash.geom:Point,externalPoint:flash.geom:Point%):void" static="true" tiptext="Moves a matrix as necessary to align an internal point with an external point." version="1.0" playername="" helpurl="fl.motion:MatrixTransformer:matchInternalPointWithExternal"/>
                <string name="rotateAroundExternalPoint" object="[fl.motion.MatrixTransformer]" text="MatrixTransformer.rotateAroundExternalPoint(%m:flash.geom:Matrix,x:Number,y:Number,angleDegrees:Number%):void" static="true" tiptext="Rotates a matrix about a point defined outside the matrix&apos;s transformation space." version="1.0" playername="" helpurl="fl.motion:MatrixTransformer:rotateAroundExternalPoint"/>
                <string name="rotateAroundInternalPoint" object="[fl.motion.MatrixTransformer]" text="MatrixTransformer.rotateAroundInternalPoint(%m:flash.geom:Matrix,x:Number,y:Number,angleDegrees:Number%):void" static="true" tiptext="Rotates a matrix about a point defined inside the matrix&apos;s transformation space." version="1.0" playername="" helpurl="fl.motion:MatrixTransformer:rotateAroundInternalPoint"/>
                <string name="setRotationRadians" object="[fl.motion.MatrixTransformer]" text="MatrixTransformer.setRotationRadians(%m:flash.geom:Matrix,rotation:Number%):void" static="true" tiptext="Changes the angle of rotation in a matrix." version="1.0" playername="" helpurl="fl.motion:MatrixTransformer:setRotationRadians"/>
                <string name="setRotation" object="[fl.motion.MatrixTransformer]" text="MatrixTransformer.setRotation(%m:flash.geom:Matrix,rotation:Number%):void" static="true" tiptext="Changes the angle of rotation in a matrix." version="1.0" playername="" helpurl="fl.motion:MatrixTransformer:setRotation"/>
                <string name="setScaleX" object="[fl.motion.MatrixTransformer]" text="MatrixTransformer.setScaleX(%m:flash.geom:Matrix,scaleX:Number%):void" static="true" tiptext="Changes the horizontal scale in a matrix." version="1.0" playername="" helpurl="fl.motion:MatrixTransformer:setScaleX"/>
                <string name="setScaleY" object="[fl.motion.MatrixTransformer]" text="MatrixTransformer.setScaleY(%m:flash.geom:Matrix,scaleY:Number%):void" static="true" tiptext="Changes the vertical scale in a matrix." version="1.0" playername="" helpurl="fl.motion:MatrixTransformer:setScaleY"/>
                <string name="setSkewXRadians" object="[fl.motion.MatrixTransformer]" text="MatrixTransformer.setSkewXRadians(%m:flash.geom:Matrix,skewX:Number%):void" static="true" tiptext="Changes the horizontal skew in a matrix." version="1.0" playername="" helpurl="fl.motion:MatrixTransformer:setSkewXRadians"/>
                <string name="setSkewX" object="[fl.motion.MatrixTransformer]" text="MatrixTransformer.setSkewX(%m:flash.geom:Matrix,skewX:Number%):void" static="true" tiptext="Changes the horizontal skew in a matrix." version="1.0" playername="" helpurl="fl.motion:MatrixTransformer:setSkewX"/>
                <string name="setSkewYRadians" object="[fl.motion.MatrixTransformer]" text="MatrixTransformer.setSkewYRadians(%m:flash.geom:Matrix,skewY:Number%):void" static="true" tiptext="Changes the vertical skew in a matrix." version="1.0" playername="" helpurl="fl.motion:MatrixTransformer:setSkewYRadians"/>
                <string name="setSkewY" object="[fl.motion.MatrixTransformer]" text="MatrixTransformer.setSkewY(%m:flash.geom:Matrix,skewY:Number%):void" static="true" tiptext="Changes the vertical skew in a matrix." version="1.0" playername="" helpurl="fl.motion:MatrixTransformer:setSkewY"/>
            </folder>
        </folder>
        <folder name="Motion" id="[fl.motion.Motion]" sort="true" index="true" asAncestors="fl.motion:MotionBase,Object" tiptext="The Motion class stores a keyframe animation sequence that can be applied to a visual object." helpurl="fl.motion:Motion">
            <folder name="Methods" id="Methods" tiptext="Methods for class Motion" helpurl="fl.motion:Motion">
                <string name="Motion" object="[fl.motion.Motion]" text="new Motion(%[xml:XML=null]%)" constructor="true" tiptext="Constructor for Motion instances." version="1.0" playername="" helpurl="fl.motion:Motion:Motion"/>
                <string name="fromXMLString" object="[fl.motion.Motion]" text="Motion.fromXMLString(%xmlString:String%):fl.motion:Motion" static="true" tiptext="A method needed to create a Motion instance from a string of XML." version="1.0" playername="" helpurl="fl.motion:Motion:fromXMLString"/>
                <string name="getColorTransform" object="[fl.motion.Motion]" text=".getColorTransform(%index:int%):flash.geom:ColorTransform" tiptext="Retrieves an interpolated ColorTransform object at a specific time index in the Motion instance." version="1.0" playername="" helpurl="fl.motion:Motion:getColorTransform"/>
                <string name="getFilters" object="[fl.motion.Motion]" text=".getFilters(%index:Number%):Array" tiptext="Retrieves an interpolated array of filters at a specific time index in the Motion instance." version="1.0" playername="" helpurl="fl.motion:Motion:getFilters"/>
                <string name="interpolateFilters" object="[fl.motion.Motion]" text="Motion.interpolateFilters(%fromFilters:Array,toFilters:Array,progress:Number%):Array" static="true" tiptext="Blends filters smoothly from one array of filter objects to another." version="1.0" playername="" helpurl="fl.motion:Motion:interpolateFilters"/>
                <string name="interpolateFilter" object="[fl.motion.Motion]" text="Motion.interpolateFilter(%fromFilter:flash.filters:BitmapFilter,toFilter:flash.filters:BitmapFilter,progress:Number%):flash.filters:BitmapFilter" static="true" tiptext="Blends filters smoothly from one filter object to another." version="1.0" playername="" helpurl="fl.motion:Motion:interpolateFilter"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class Motion" helpurl="fl.motion:Motion">
                <string name="source" object="[fl.motion.Motion]" text=".source" tiptext="An object that stores information about the context in which the motion was created, such as frame rate, dimensions, transformation point, and initial position, scale, rotation, and skew." version="" playername="" helpurl="fl.motion:Motion:source"/>
                <string name="keyframesCompact" object="[fl.motion.Motion]" text=".keyframesCompact" tiptext="A compact array of keyframes, where each index is occupied by a keyframe." version="" playername="" helpurl="fl.motion:Motion:keyframesCompact:get"/>
            </folder>
        </folder>
        <folder name="MotionBase" id="[fl.motion.MotionBase]" sort="true" index="true" asAncestors="Object" tiptext="The MotionBase class stores a keyframe animation sequence that can be applied to a visual object." helpurl="fl.motion:MotionBase">
            <folder name="Methods" id="Methods" tiptext="Methods for class MotionBase" helpurl="fl.motion:MotionBase">
                <string name="MotionBase" object="[fl.motion.MotionBase]" text="new MotionBase(%[xml:XML=null]%)" constructor="true" tiptext="Constructor for MotionBase instances." version="1.0" playername="" helpurl="fl.motion:MotionBase:MotionBase"/>
                <string name="addFilterPropertyArray" object="[fl.motion.MotionBase]" text=".addFilterPropertyArray(%index:int,name:String,values:Array[,startFrame:int=-1,endFrame:int=-1]%):void" tiptext="Modifies a filter property in all corresponding keyframes for a Motion object." version="1.0" playername="" helpurl="fl.motion:MotionBase:addFilterPropertyArray"/>
                <string name="addKeyframe" object="[fl.motion.MotionBase]" text=".addKeyframe(%newKeyframe:fl.motion:KeyframeBase%):void" tiptext="Adds a keyframe object to the Motion instance." version="1.0" playername="" helpurl="fl.motion:MotionBase:addKeyframe"/>
                <string name="addPropertyArray" object="[fl.motion.MotionBase]" text=".addPropertyArray(%name:String,values:Array[,startFrame:int=-1,endFrame:int=-1]%):void" tiptext="Stores an array of values in corresponding keyframes for a declared property of the Motion class." version="1.0" playername="" helpurl="fl.motion:MotionBase:addPropertyArray"/>
                <string name="getColorTransform" object="[fl.motion.MotionBase]" text=".getColorTransform(%index:int%):flash.geom:ColorTransform" tiptext="Retrieves an interpolated ColorTransform object at a specific time index in the Motion instance." version="1.0" playername="" helpurl="fl.motion:MotionBase:getColorTransform"/>
                <string name="getCurrentKeyframe" object="[fl.motion.MotionBase]" text=".getCurrentKeyframe(%index:int,tweenableName:String%):fl.motion:KeyframeBase" tiptext="Retrieves the keyframe that is currently active at a specific frame in the Motion instance." version="1.0" playername="" helpurl="fl.motion:MotionBase:getCurrentKeyframe"/>
                <string name="getFilters" object="[fl.motion.MotionBase]" text=".getFilters(%index:Number%):Array" tiptext="Retrieves an interpolated array of filters at a specific time index in the Motion instance." version="1.0" playername="" helpurl="fl.motion:MotionBase:getFilters"/>
                <string name="getMatrix3D" object="[fl.motion.MotionBase]" text=".getMatrix3D(%index:int%):Object" tiptext="Returns the Matrix3D object for the specified index position of the frame of animation." version="1.0" playername="" helpurl="fl.motion:MotionBase:getMatrix3D"/>
                <string name="getMatrix" object="[fl.motion.MotionBase]" text=".getMatrix(%index:int%):flash.geom:Matrix" tiptext="Returns the Matrix object for the specified index position of the frame of animation." version="1.0" playername="" helpurl="fl.motion:MotionBase:getMatrix"/>
                <string name="getNextKeyframe" object="[fl.motion.MotionBase]" text=".getNextKeyframe(%index:int,tweenableName:String%):fl.motion:KeyframeBase" tiptext="Retrieves the next keyframe after a specific frame in the Motion instance." version="1.0" playername="" helpurl="fl.motion:MotionBase:getNextKeyframe"/>
                <string name="getValue" object="[fl.motion.MotionBase]" text=".getValue(%index:Number,tweenableName:String%):Number" tiptext="Retrieves the value for an animation property at a point in time." version="1.0" playername="" helpurl="fl.motion:MotionBase:getValue"/>
                <string name="initFilters" object="[fl.motion.MotionBase]" text=".initFilters(%filterClasses:Array,gradientSubarrayLengths:Array[,startFrame:int=-1,endFrame:int=-1]%):void" tiptext="Initializes the filters list for the target object and copies the list of filters to each Keyframe instance of the Motion object." version="1.0" playername="" helpurl="fl.motion:MotionBase:initFilters"/>
                <string name="overrideTargetTransform" object="[fl.motion.MotionBase]" text=".overrideTargetTransform(%[scale:Boolean=true,skew:Boolean=true,rotate:Boolean=true]%):void" tiptext="" version="" playername="" helpurl="fl.motion:MotionBase:overrideTargetTransform"/>
                <string name="setValue" object="[fl.motion.MotionBase]" text=".setValue(%index:int,tweenableName:String,value:Number%):void" tiptext="Sets the value of a specific tweenables property at a given time index in the Motion instance." version="1.0" playername="" helpurl="fl.motion:MotionBase:setValue"/>
                <string name="useRotationConcat" object="[fl.motion.MotionBase]" text=".useRotationConcat(%index:int%):Boolean" tiptext="Rotates the target object when data for the motion is supplied by the addPropertyArray() method." version="1.0" playername="" helpurl="fl.motion:MotionBase:useRotationConcat"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class MotionBase" helpurl="fl.motion:MotionBase">
                <string name="keyframes" object="[fl.motion.MotionBase]" text=".keyframes" tiptext="An array of keyframes that define the motion&apos;s behavior over time." version="" playername="" helpurl="fl.motion:MotionBase:keyframes"/>
                <string name="duration" object="[fl.motion.MotionBase]" text=".duration" tiptext="Controls the Motion instance&apos;s length of time, measured in frames." version="" playername="" helpurl="fl.motion:MotionBase:duration:get"/>
                <string name="is3D" object="[fl.motion.MotionBase]" text=".is3D" tiptext="Specifies whether the motion contains 3D property changes." version="" playername="" helpurl="fl.motion:MotionBase:is3D:get"/>
                <string name="initialMatrix" object="[fl.motion.MotionBase]" text=".initialMatrix" tiptext="Used when an array of MotionBase instances are passed into a AnimatorBase subclass." version="" playername="" helpurl="fl.motion:MotionBase:initialMatrix:set"/>
                <string name="initialPosition" object="[fl.motion.MotionBase]" text=".initialPosition" tiptext="Used when an array of MotionBase instances are passed into a AnimatorBase subclass." version="" playername="" helpurl="fl.motion:MotionBase:initialPosition:set"/>
                <string name="spanStart" object="[fl.motion.MotionBase]" text=".spanStart" tiptext="Used when an array of MotionBase instances are passed into a AnimatorBase subclass." version="" playername="" helpurl="fl.motion:MotionBase:spanStart:set"/>
                <string name="transformationPointZ" object="[fl.motion.MotionBase]" text=".transformationPointZ" tiptext="Used when an array of MotionBase instances are passed into a AnimatorBase subclass." version="" playername="" helpurl="fl.motion:MotionBase:transformationPointZ:set"/>
                <string name="transformationPoint" object="[fl.motion.MotionBase]" text=".transformationPoint" tiptext="Used when an array of MotionBase instances are passed into a AnimatorBase subclass." version="" playername="" helpurl="fl.motion:MotionBase:transformationPoint:set"/>
            </folder>
        </folder>
        <folder name="MotionEvent" id="[fl.motion.MotionEvent]" sort="true" index="true" asAncestors="flash.events:Event,Object" tiptext="The MotionEvent class represents events that are broadcast by the fl.motion.Animator class." helpurl="fl.motion:MotionEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class MotionEvent" helpurl="fl.motion:MotionEvent">
                <string name="MotionEvent" object="[fl.motion.MotionEvent]" text="new MotionEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false]%)" constructor="true" tiptext="Constructor." version="1.0" playername="" helpurl="fl.motion:MotionEvent:MotionEvent"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class MotionEvent" helpurl="fl.motion:MotionEvent">
                <string name="MOTION_END" object="[fl.motion.MotionEvent]" text="MotionEvent.MOTION_END" constant="true" tiptext="Indicates that the motion has stopped, whether by an explicit call to Animator.stop() or Animator.end(), or by reaching the end of the Motion instance." version="" playername="" helpurl="fl.motion:MotionEvent:MOTION_END"/>
                <string name="MOTION_START" object="[fl.motion.MotionEvent]" text="MotionEvent.MOTION_START" constant="true" tiptext="Indicates that the Motion instance has started playing." version="" playername="" helpurl="fl.motion:MotionEvent:MOTION_START"/>
                <string name="MOTION_UPDATE" object="[fl.motion.MotionEvent]" text="MotionEvent.MOTION_UPDATE" constant="true" tiptext="Indicates that the Motion instance has changed and the screen has been updated." version="" playername="" helpurl="fl.motion:MotionEvent:MOTION_UPDATE"/>
                <string name="TIME_CHANGE" object="[fl.motion.MotionEvent]" text="MotionEvent.TIME_CHANGE" constant="true" tiptext="Indicates that the Animator instance&apos;s time value has changed, but the screen has not yet been updated (Flash Player has not dispatched the motionUpdate event)." version="" playername="" helpurl="fl.motion:MotionEvent:TIME_CHANGE"/>
            </folder>
        </folder>
        <folder name="RotateDirection" id="[fl.motion.RotateDirection]" sort="true" index="true" asAncestors="Object" tiptext="The RotateDirection class provides constant values for rotation behavior during a tween." helpurl="fl.motion:RotateDirection">
            <folder name="Properties" id="Properties" tiptext="Properties for class RotateDirection" helpurl="fl.motion:RotateDirection">
                <string name="AUTO" object="[fl.motion.RotateDirection]" text="RotateDirection.AUTO" constant="true" tiptext="Chooses a direction of rotation that requires the least amount of turning." version="" playername="" helpurl="fl.motion:RotateDirection:AUTO"/>
                <string name="CCW" object="[fl.motion.RotateDirection]" text="RotateDirection.CCW" constant="true" tiptext="Ensures that the object rotates counterclockwise during a tween to match the rotation of the object in the following keyframe." version="" playername="" helpurl="fl.motion:RotateDirection:CCW"/>
                <string name="CW" object="[fl.motion.RotateDirection]" text="RotateDirection.CW" constant="true" tiptext="Ensures that the object rotates clockwise during a tween to match the rotation of the object in the following keyframe." version="" playername="" helpurl="fl.motion:RotateDirection:CW"/>
                <string name="NONE" object="[fl.motion.RotateDirection]" text="RotateDirection.NONE" constant="true" tiptext="Prevents the object from rotating during a tween until the next keyframe is reached." version="" playername="" helpurl="fl.motion:RotateDirection:NONE"/>
            </folder>
        </folder>
        <folder name="SimpleEase" id="[fl.motion.SimpleEase]" sort="true" index="true" asAncestors="Object" tiptext="The SimpleEase class allows you to control an animation with the kind of percentage easing that is used in the Flash timeline." helpurl="fl.motion:SimpleEase">
            <folder name="Methods" id="Methods" tiptext="Methods for class SimpleEase" helpurl="fl.motion:SimpleEase">
                <string name="SimpleEase" object="[fl.motion.SimpleEase]" text="new SimpleEase(%[xml:XML=null]%)" constructor="true" tiptext="Constructor for SimpleEase instances." version="1.0" playername="" helpurl="fl.motion:SimpleEase:SimpleEase"/>
                <string name="easeNone" object="[fl.motion.SimpleEase]" text="SimpleEase.easeNone(%time:Number,begin:Number,change:Number,duration:Number%):Number" static="true" tiptext="Calculates an interpolated value for a numerical property of animation, using a linear tween of constant velocity." version="1.0" playername="" helpurl="fl.motion:SimpleEase:easeNone"/>
                <string name="easeQuadPercent" object="[fl.motion.SimpleEase]" text="SimpleEase.easeQuadPercent(%time:Number,begin:Number,change:Number,duration:Number,percent:Number%):Number" static="true" tiptext="Calculates an interpolated value for a numerical property of animation, using a percentage of quadratic easing." version="1.0" playername="" helpurl="fl.motion:SimpleEase:easeQuadPercent"/>
                <string name="getValue" object="[fl.motion.SimpleEase]" text=".getValue(%time:Number,begin:Number,change:Number,duration:Number%):Number" tiptext="Calculates an interpolated value for a numerical property of animation, using a percentage of quadratic easing." version="1.0" playername="" helpurl="fl.motion:SimpleEase:getValue"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class SimpleEase" helpurl="fl.motion:SimpleEase">
                <string name="ease" object="[fl.motion.SimpleEase]" text=".ease" tiptext="A percentage between -1 (100% ease in or acceleration) and 1 (100% ease out or deceleration)." version="" playername="" helpurl="fl.motion:SimpleEase:ease:get"/>
                <string name="target" object="[fl.motion.SimpleEase]" text=".target" tiptext="The name of the animation property to target." version="" playername="" helpurl="fl.motion:SimpleEase:target:get"/>
            </folder>
        </folder>
        <folder name="Source" id="[fl.motion.Source]" sort="true" index="true" asAncestors="Object" tiptext="The Source class stores information about the context in which a Motion instance was generated." helpurl="fl.motion:Source">
            <folder name="Methods" id="Methods" tiptext="Methods for class Source" helpurl="fl.motion:Source">
                <string name="Source" object="[fl.motion.Source]" text="new Source(%[xml:XML=null]%)" constructor="true" tiptext="Constructor for Source instances." version="1.0" playername="" helpurl="fl.motion:Source:Source"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class Source" helpurl="fl.motion:Source">
                <string name="dimensions" object="[fl.motion.Source]" text=".dimensions" tiptext="Indicates the position and size of the bounding box of the object from which the Motion instance was generated." version="" playername="" helpurl="fl.motion:Source:dimensions"/>
                <string name="elementType" object="[fl.motion.Source]" text=".elementType" tiptext="Indicates the type of object from which the Motion instance was generated." version="" playername="" helpurl="fl.motion:Source:elementType"/>
                <string name="frameRate" object="[fl.motion.Source]" text=".frameRate" tiptext="Indicates the frames per second of the movie in which the Motion instance was generated." version="" playername="" helpurl="fl.motion:Source:frameRate"/>
                <string name="instanceName" object="[fl.motion.Source]" text=".instanceName" tiptext="Indicates the instance name given to the movie clip from which the Motion instance was generated." version="" playername="" helpurl="fl.motion:Source:instanceName"/>
                <string name="linkageID" object="[fl.motion.Source]" text=".linkageID" tiptext="Indicates the library linkage identifier for the symbol from which the Motion instance was generated." version="" playername="" helpurl="fl.motion:Source:linkageID"/>
                <string name="rotation" object="[fl.motion.Source]" text=".rotation" tiptext="Indicates the rotation value of the original object." version="" playername="" helpurl="fl.motion:Source:rotation"/>
                <string name="scaleX" object="[fl.motion.Source]" text=".scaleX" tiptext="Indicates the scaleX value of the original object." version="" playername="" helpurl="fl.motion:Source:scaleX"/>
                <string name="scaleY" object="[fl.motion.Source]" text=".scaleY" tiptext="Indicates the scaleY value of the original object." version="" playername="" helpurl="fl.motion:Source:scaleY"/>
                <string name="skewX" object="[fl.motion.Source]" text=".skewX" tiptext="Indicates the skewX value of the original object." version="" playername="" helpurl="fl.motion:Source:skewX"/>
                <string name="skewY" object="[fl.motion.Source]" text=".skewY" tiptext="Indicates the skewY value of the original object." version="" playername="" helpurl="fl.motion:Source:skewY"/>
                <string name="symbolName" object="[fl.motion.Source]" text=".symbolName" tiptext="Indicates the name of the symbol from which the Motion instance was generated." version="" playername="" helpurl="fl.motion:Source:symbolName"/>
                <string name="transformationPoint" object="[fl.motion.Source]" text=".transformationPoint" tiptext="Specifies the location of the transformation or &quot;pivot&quot; point of the original object, from which transformations are applied." version="" playername="" helpurl="fl.motion:Source:transformationPoint"/>
                <string name="x" object="[fl.motion.Source]" text=".x" tiptext="Indicates the x value of the original object." version="" playername="" helpurl="fl.motion:Source:x"/>
                <string name="y" object="[fl.motion.Source]" text=".y" tiptext="Indicates the y value of the original object." version="" playername="" helpurl="fl.motion:Source:y"/>
            </folder>
        </folder>
        <folder name="Tweenables" id="[fl.motion.Tweenables]" sort="true" index="true" asAncestors="Object" tiptext="The Tweenables class provides constant values for the names of animation properties used in the MotionBase and KeyframeBase classes." helpurl="fl.motion:Tweenables">
            <folder name="Properties" id="Properties" tiptext="Properties for class Tweenables" helpurl="fl.motion:Tweenables">
                <string name="ROTATION_CONCAT" object="[fl.motion.Tweenables]" text="Tweenables.ROTATION_CONCAT" constant="true" tiptext="Constant for the rotationConcat property." version="" playername="" helpurl="fl.motion:Tweenables:ROTATION_CONCAT"/>
                <string name="ROTATION_X" object="[fl.motion.Tweenables]" text="Tweenables.ROTATION_X" constant="true" tiptext="Constant for the rotationX property." version="" playername="" helpurl="fl.motion:Tweenables:ROTATION_X"/>
                <string name="ROTATION_Y" object="[fl.motion.Tweenables]" text="Tweenables.ROTATION_Y" constant="true" tiptext="Constant for the rotationY property." version="" playername="" helpurl="fl.motion:Tweenables:ROTATION_Y"/>
                <string name="ROTATION" object="[fl.motion.Tweenables]" text="Tweenables.ROTATION" constant="true" tiptext="Constant for the rotation property." version="" playername="" helpurl="fl.motion:Tweenables:ROTATION"/>
                <string name="SCALE_X" object="[fl.motion.Tweenables]" text="Tweenables.SCALE_X" constant="true" tiptext="Constant for the scaleX property." version="" playername="" helpurl="fl.motion:Tweenables:SCALE_X"/>
                <string name="SCALE_Y" object="[fl.motion.Tweenables]" text="Tweenables.SCALE_Y" constant="true" tiptext="Constant for the scaleY property." version="" playername="" helpurl="fl.motion:Tweenables:SCALE_Y"/>
                <string name="SKEW_X" object="[fl.motion.Tweenables]" text="Tweenables.SKEW_X" constant="true" tiptext="Constant for the skewX property." version="" playername="" helpurl="fl.motion:Tweenables:SKEW_X"/>
                <string name="SKEW_Y" object="[fl.motion.Tweenables]" text="Tweenables.SKEW_Y" constant="true" tiptext="Constant for the skewY property." version="" playername="" helpurl="fl.motion:Tweenables:SKEW_Y"/>
                <string name="X" object="[fl.motion.Tweenables]" text="Tweenables.X" constant="true" tiptext="Constant for the x property." version="" playername="" helpurl="fl.motion:Tweenables:X"/>
                <string name="Y" object="[fl.motion.Tweenables]" text="Tweenables.Y" constant="true" tiptext="Constant for the y property." version="" playername="" helpurl="fl.motion:Tweenables:Y"/>
                <string name="Z" object="[fl.motion.Tweenables]" text="Tweenables.Z" constant="true" tiptext="Constant for the z property." version="" playername="" helpurl="fl.motion:Tweenables:Z"/>
            </folder>
        </folder>
    </folder>
        <folder name="fl.motion.easing" id="fl.motion.easing" sort="true" tiptext="Classes for package fl.motion.easing" helpurl="fl.motion.easing">
        <folder name="Back" id="[fl.motion.easing.Back]" sort="true" index="true" asAncestors="Object" tiptext="The Back class defines three easing functions to implement motion with ActionScript animations." helpurl="fl.motion.easing:Back">
            <folder name="Methods" id="Methods" tiptext="Methods for class Back" helpurl="fl.motion.easing:Back">
                <string name="easeInOut" object="[fl.motion.easing.Back]" text="Back.easeInOut(%t:Number,b:Number,c:Number,d:Number[,s:Number=0]%):Number" static="true" tiptext="The easeInOut() method combines the motion of the easeIn() and easeOut() methods to start the motion by backtracking, then reversing direction and moving toward the target, overshooting the target slightly, reversing direction again, and then moving back toward the target." version="1.0" playername="" helpurl="fl.motion.easing:Back:easeInOut"/>
                <string name="easeIn" object="[fl.motion.easing.Back]" text="Back.easeIn(%t:Number,b:Number,c:Number,d:Number[,s:Number=0]%):Number" static="true" tiptext="The easeIn() method starts the motion by backtracking and then reversing direction and moving toward the target." version="1.0" playername="" helpurl="fl.motion.easing:Back:easeIn"/>
                <string name="easeOut" object="[fl.motion.easing.Back]" text="Back.easeOut(%t:Number,b:Number,c:Number,d:Number[,s:Number=0]%):Number" static="true" tiptext="The easeOut() method starts the motion by moving towards the target, overshooting it slightly, and then reversing direction back toward the target." version="1.0" playername="" helpurl="fl.motion.easing:Back:easeOut"/>
            </folder>
        </folder>
        <folder name="Bounce" id="[fl.motion.easing.Bounce]" sort="true" index="true" asAncestors="Object" tiptext="The Bounce class defines three easing functions to implement bouncing motion with ActionScript animation, similar to a ball falling and bouncing on a floor with several decaying rebounds." helpurl="fl.motion.easing:Bounce">
            <folder name="Methods" id="Methods" tiptext="Methods for class Bounce" helpurl="fl.motion.easing:Bounce">
                <string name="easeInOut" object="[fl.motion.easing.Bounce]" text="Bounce.easeInOut(%t:Number,b:Number,c:Number,d:Number%):Number" static="true" tiptext="The easeInOut() method combines the motion of the easeIn() and easeOut() methods to start the bounce motion slowly, accelerate motion, then decelerate." version="1.0" playername="" helpurl="fl.motion.easing:Bounce:easeInOut"/>
                <string name="easeIn" object="[fl.motion.easing.Bounce]" text="Bounce.easeIn(%t:Number,b:Number,c:Number,d:Number%):Number" static="true" tiptext="The easeIn() method starts the bounce motion slowly and then accelerates motion as it executes." version="1.0" playername="" helpurl="fl.motion.easing:Bounce:easeIn"/>
                <string name="easeOut" object="[fl.motion.easing.Bounce]" text="Bounce.easeOut(%t:Number,b:Number,c:Number,d:Number%):Number" static="true" tiptext="The easeOut() method starts the bounce motion fast and then decelerates motion as it executes." version="1.0" playername="" helpurl="fl.motion.easing:Bounce:easeOut"/>
            </folder>
        </folder>
        <folder name="Circular" id="[fl.motion.easing.Circular]" sort="true" index="true" asAncestors="Object" tiptext="The Circular class defines three easing functions to implement motion with ActionScript animation." helpurl="fl.motion.easing:Circular">
            <folder name="Methods" id="Methods" tiptext="Methods for class Circular" helpurl="fl.motion.easing:Circular">
                <string name="easeInOut" object="[fl.motion.easing.Circular]" text="Circular.easeInOut(%t:Number,b:Number,c:Number,d:Number%):Number" static="true" tiptext="The easeInOut() method combines the motion of the easeIn() and easeOut() methods to start the motion from a zero velocity, accelerate motion, then decelerate to a zero velocity." version="1.0" playername="" helpurl="fl.motion.easing:Circular:easeInOut"/>
                <string name="easeIn" object="[fl.motion.easing.Circular]" text="Circular.easeIn(%t:Number,b:Number,c:Number,d:Number%):Number" static="true" tiptext="The easeIn() method starts motion from zero velocity and then accelerates motion as it executes." version="1.0" playername="" helpurl="fl.motion.easing:Circular:easeIn"/>
                <string name="easeOut" object="[fl.motion.easing.Circular]" text="Circular.easeOut(%t:Number,b:Number,c:Number,d:Number%):Number" static="true" tiptext="The easeOut() method starts motion fast and then decelerates motion to a zero velocity as it executes." version="1.0" playername="" helpurl="fl.motion.easing:Circular:easeOut"/>
            </folder>
        </folder>
        <folder name="Cubic" id="[fl.motion.easing.Cubic]" sort="true" index="true" asAncestors="Object" tiptext="The Cubic class defines three easing functions to implement motion with ActionScript animation." helpurl="fl.motion.easing:Cubic">
            <folder name="Methods" id="Methods" tiptext="Methods for class Cubic" helpurl="fl.motion.easing:Cubic">
                <string name="easeInOut" object="[fl.motion.easing.Cubic]" text="Cubic.easeInOut(%t:Number,b:Number,c:Number,d:Number%):Number" static="true" tiptext="The easeInOut() method combines the motion of the easeIn() and easeOut() methods to start the motion from a zero velocity, accelerate motion, then decelerate to a zero velocity." version="1.0" playername="" helpurl="fl.motion.easing:Cubic:easeInOut"/>
                <string name="easeIn" object="[fl.motion.easing.Cubic]" text="Cubic.easeIn(%t:Number,b:Number,c:Number,d:Number%):Number" static="true" tiptext="The easeIn() method starts motion from zero velocity and then accelerates motion as it executes." version="1.0" playername="" helpurl="fl.motion.easing:Cubic:easeIn"/>
                <string name="easeOut" object="[fl.motion.easing.Cubic]" text="Cubic.easeOut(%t:Number,b:Number,c:Number,d:Number%):Number" static="true" tiptext="The easeOut() method starts motion fast and then decelerates motion to a zero velocity as it executes." version="1.0" playername="" helpurl="fl.motion.easing:Cubic:easeOut"/>
            </folder>
        </folder>
        <folder name="Elastic" id="[fl.motion.easing.Elastic]" sort="true" index="true" asAncestors="Object" tiptext="The Elastic class defines three easing functions to implement motion with ActionScript animation, where the motion is defined by an exponentially decaying sine wave." helpurl="fl.motion.easing:Elastic">
            <folder name="Methods" id="Methods" tiptext="Methods for class Elastic" helpurl="fl.motion.easing:Elastic">
                <string name="easeInOut" object="[fl.motion.easing.Elastic]" text="Elastic.easeInOut(%t:Number,b:Number,c:Number,d:Number[,a:Number=0,p:Number=0]%):Number" static="true" tiptext="The easeInOut() method combines the motion of the easeIn() and easeOut() methods to start the motion slowly, accelerate motion, then decelerate." version="1.0" playername="" helpurl="fl.motion.easing:Elastic:easeInOut"/>
                <string name="easeIn" object="[fl.motion.easing.Elastic]" text="Elastic.easeIn(%t:Number,b:Number,c:Number,d:Number[,a:Number=0,p:Number=0]%):Number" static="true" tiptext="The easeIn() method starts motion slowly and then accelerates motion as it executes." version="1.0" playername="" helpurl="fl.motion.easing:Elastic:easeIn"/>
                <string name="easeOut" object="[fl.motion.easing.Elastic]" text="Elastic.easeOut(%t:Number,b:Number,c:Number,d:Number[,a:Number=0,p:Number=0]%):Number" static="true" tiptext="The easeOut() method starts motion fast and then decelerates motion as it executes." version="1.0" playername="" helpurl="fl.motion.easing:Elastic:easeOut"/>
            </folder>
        </folder>
        <folder name="Exponential" id="[fl.motion.easing.Exponential]" sort="true" index="true" asAncestors="Object" tiptext="The Exponential class defines three easing functions to implement motion with ActionScript animation." helpurl="fl.motion.easing:Exponential">
            <folder name="Methods" id="Methods" tiptext="Methods for class Exponential" helpurl="fl.motion.easing:Exponential">
                <string name="easeInOut" object="[fl.motion.easing.Exponential]" text="Exponential.easeInOut(%t:Number,b:Number,c:Number,d:Number%):Number" static="true" tiptext="The easeInOut() method combines the motion of the easeIn() and easeOut() methods to start the motion from a zero velocity, accelerate motion, then decelerate to a zero velocity." version="1.0" playername="" helpurl="fl.motion.easing:Exponential:easeInOut"/>
                <string name="easeIn" object="[fl.motion.easing.Exponential]" text="Exponential.easeIn(%t:Number,b:Number,c:Number,d:Number%):Number" static="true" tiptext="The easeIn() method starts motion slowly and then accelerates motion as it executes." version="1.0" playername="" helpurl="fl.motion.easing:Exponential:easeIn"/>
                <string name="easeOut" object="[fl.motion.easing.Exponential]" text="Exponential.easeOut(%t:Number,b:Number,c:Number,d:Number%):Number" static="true" tiptext="The easeOut() method starts motion fast and then decelerates motion to a zero velocity as it executes." version="1.0" playername="" helpurl="fl.motion.easing:Exponential:easeOut"/>
            </folder>
        </folder>
        <folder name="Linear" id="[fl.motion.easing.Linear]" sort="true" index="true" asAncestors="Object" tiptext="The Linear class defines easing functions to implement non-accelerated motion with ActionScript animations." helpurl="fl.motion.easing:Linear">
            <folder name="Methods" id="Methods" tiptext="Methods for class Linear" helpurl="fl.motion.easing:Linear">
                <string name="easeInOut" object="[fl.motion.easing.Linear]" text="Linear.easeInOut(%t:Number,b:Number,c:Number,d:Number%):Number" static="true" tiptext="The easeInOut() method defines a constant motion with no acceleration." version="1.0" playername="" helpurl="fl.motion.easing:Linear:easeInOut"/>
                <string name="easeIn" object="[fl.motion.easing.Linear]" text="Linear.easeIn(%t:Number,b:Number,c:Number,d:Number%):Number" static="true" tiptext="The easeIn() method defines a constant motion with no acceleration." version="1.0" playername="" helpurl="fl.motion.easing:Linear:easeIn"/>
                <string name="easeNone" object="[fl.motion.easing.Linear]" text="Linear.easeNone(%t:Number,b:Number,c:Number,d:Number%):Number" static="true" tiptext="The easeNone() method defines a constant motion with no acceleration." version="1.0" playername="" helpurl="fl.motion.easing:Linear:easeNone"/>
                <string name="easeOut" object="[fl.motion.easing.Linear]" text="Linear.easeOut(%t:Number,b:Number,c:Number,d:Number%):Number" static="true" tiptext="The easeOut() method defines a constant motion with no acceleration." version="1.0" playername="" helpurl="fl.motion.easing:Linear:easeOut"/>
            </folder>
        </folder>
        <folder name="Quadratic" id="[fl.motion.easing.Quadratic]" sort="true" index="true" asAncestors="Object" tiptext="The Quadratic class defines three easing functions to implement accelerated motion with ActionScript animations." helpurl="fl.motion.easing:Quadratic">
            <folder name="Methods" id="Methods" tiptext="Methods for class Quadratic" helpurl="fl.motion.easing:Quadratic">
                <string name="easeInOut" object="[fl.motion.easing.Quadratic]" text="Quadratic.easeInOut(%t:Number,b:Number,c:Number,d:Number%):Number" static="true" tiptext="The easeInOut() method combines the motion of the easeIn() and easeOut() methods to start the motion from a zero velocity, accelerate motion, then decelerate to a zero velocity." version="1.0" playername="" helpurl="fl.motion.easing:Quadratic:easeInOut"/>
                <string name="easeIn" object="[fl.motion.easing.Quadratic]" text="Quadratic.easeIn(%t:Number,b:Number,c:Number,d:Number%):Number" static="true" tiptext="The easeIn() method starts motion from a zero velocity and then accelerates motion as it executes." version="1.0" playername="" helpurl="fl.motion.easing:Quadratic:easeIn"/>
                <string name="easeOut" object="[fl.motion.easing.Quadratic]" text="Quadratic.easeOut(%t:Number,b:Number,c:Number,d:Number%):Number" static="true" tiptext="The easeOut() method starts motion fast and then decelerates motion to a zero velocity as it executes." version="1.0" playername="" helpurl="fl.motion.easing:Quadratic:easeOut"/>
            </folder>
        </folder>
        <folder name="Quartic" id="[fl.motion.easing.Quartic]" sort="true" index="true" asAncestors="Object" tiptext="The Quartic class defines three easing functions to implement motion with ActionScript animation." helpurl="fl.motion.easing:Quartic">
            <folder name="Methods" id="Methods" tiptext="Methods for class Quartic" helpurl="fl.motion.easing:Quartic">
                <string name="easeInOut" object="[fl.motion.easing.Quartic]" text="Quartic.easeInOut(%t:Number,b:Number,c:Number,d:Number%):Number" static="true" tiptext="The easeInOut() method combines the motion of the easeIn() and easeOut() methods to start the motion from a zero velocity, accelerate motion, then decelerate to a zero velocity." version="1.0" playername="" helpurl="fl.motion.easing:Quartic:easeInOut"/>
                <string name="easeIn" object="[fl.motion.easing.Quartic]" text="Quartic.easeIn(%t:Number,b:Number,c:Number,d:Number%):Number" static="true" tiptext="The easeIn() method starts motion from zero velocity and then accelerates motion as it executes." version="1.0" playername="" helpurl="fl.motion.easing:Quartic:easeIn"/>
                <string name="easeOut" object="[fl.motion.easing.Quartic]" text="Quartic.easeOut(%t:Number,b:Number,c:Number,d:Number%):Number" static="true" tiptext="The easeOut() method starts motion fast and then decelerates motion to a zero velocity as it executes." version="1.0" playername="" helpurl="fl.motion.easing:Quartic:easeOut"/>
            </folder>
        </folder>
        <folder name="Quintic" id="[fl.motion.easing.Quintic]" sort="true" index="true" asAncestors="Object" tiptext="The Quintic class defines three easing functions to implement motion with ActionScript animation." helpurl="fl.motion.easing:Quintic">
            <folder name="Methods" id="Methods" tiptext="Methods for class Quintic" helpurl="fl.motion.easing:Quintic">
                <string name="easeInOut" object="[fl.motion.easing.Quintic]" text="Quintic.easeInOut(%t:Number,b:Number,c:Number,d:Number%):Number" static="true" tiptext="The easeInOut() method combines the motion of the easeIn() and easeOut() methods to start the motion from a zero velocity, accelerate motion, then decelerate to a zero velocity." version="1.0" playername="" helpurl="fl.motion.easing:Quintic:easeInOut"/>
                <string name="easeIn" object="[fl.motion.easing.Quintic]" text="Quintic.easeIn(%t:Number,b:Number,c:Number,d:Number%):Number" static="true" tiptext="The easeIn() method starts motion from zero velocity and then accelerates motion as it executes." version="1.0" playername="" helpurl="fl.motion.easing:Quintic:easeIn"/>
                <string name="easeOut" object="[fl.motion.easing.Quintic]" text="Quintic.easeOut(%t:Number,b:Number,c:Number,d:Number%):Number" static="true" tiptext="The easeOut() method starts motion fast and then decelerates motion to a zero velocity as it executes." version="1.0" playername="" helpurl="fl.motion.easing:Quintic:easeOut"/>
            </folder>
        </folder>
        <folder name="Sine" id="[fl.motion.easing.Sine]" sort="true" index="true" asAncestors="Object" tiptext="The Sine class defines three easing functions to implement motion with ActionScript animation." helpurl="fl.motion.easing:Sine">
            <folder name="Methods" id="Methods" tiptext="Methods for class Sine" helpurl="fl.motion.easing:Sine">
                <string name="easeInOut" object="[fl.motion.easing.Sine]" text="Sine.easeInOut(%t:Number,b:Number,c:Number,d:Number%):Number" static="true" tiptext="The easeInOut() method combines the motion of the easeIn() and easeOut() methods to start the motion from a zero velocity, accelerate motion, then decelerate to a zero velocity." version="1.0" playername="" helpurl="fl.motion.easing:Sine:easeInOut"/>
                <string name="easeIn" object="[fl.motion.easing.Sine]" text="Sine.easeIn(%t:Number,b:Number,c:Number,d:Number%):Number" static="true" tiptext="The easeIn() method starts motion from zero velocity and then accelerates motion as it executes." version="1.0" playername="" helpurl="fl.motion.easing:Sine:easeIn"/>
                <string name="easeOut" object="[fl.motion.easing.Sine]" text="Sine.easeOut(%t:Number,b:Number,c:Number,d:Number%):Number" static="true" tiptext="The easeOut() method starts motion fast and then decelerates motion to a zero velocity as it executes." version="1.0" playername="" helpurl="fl.motion.easing:Sine:easeOut"/>
            </folder>
        </folder>
    </folder>
        <folder name="fl.rsl" id="fl.rsl" sort="true" tiptext="Classes for package fl.rsl" helpurl="fl.rsl">
        <folder name="RSLInfo" id="[fl.rsl.RSLInfo]" sort="true" index="true" asAncestors="flash.events:EventDispatcher,Object" tiptext="The RSLInfo class allows to you specify the use of RSLs (Runtime Shared Library Files)." helpurl="fl.rsl:RSLInfo">
            <folder name="Methods" id="Methods" tiptext="Methods for class RSLInfo" helpurl="fl.rsl:RSLInfo">
                <string name="RSLInfo" object="[fl.rsl.RSLInfo]" text="new RSLInfo(%%)" constructor="true" tiptext="Constructor." version="2" playername="" helpurl="fl.rsl:RSLInfo:RSLInfo"/>
                <string name="addEntry" object="[fl.rsl.RSLInfo]" text=".addEntry(%url:String[,policyFileURL:String=null]%):void" tiptext="Adds a series of URLs (RSL files and policy files)." version="2" playername="" helpurl="fl.rsl:RSLInfo:addEntry"/>
                <string name="load" object="[fl.rsl.RSLInfo]" text=".load(%%):void" tiptext="Starts the RSL download." version="2" playername="" helpurl="fl.rsl:RSLInfo:load"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class RSLInfo" helpurl="fl.rsl:RSLInfo">
                <string name="bytesLoaded" object="[fl.rsl.RSLInfo]" text=".bytesLoaded" tiptext="Indicates the number of bytes that have been loaded thus far for all files being loaded." version="" playername="" helpurl="fl.rsl:RSLInfo:bytesLoaded:get"/>
                <string name="bytesTotal" object="[fl.rsl.RSLInfo]" text=".bytesTotal" tiptext="Indicates the total number of bytes that have been loaded thus far for all files being loaded." version="" playername="" helpurl="fl.rsl:RSLInfo:bytesTotal:get"/>
                <string name="complete" object="[fl.rsl.RSLInfo]" text=".complete" tiptext="Returns a value of true if the download has completed successfully and false if the download is not yet complete or has failed." version="" playername="" helpurl="fl.rsl:RSLInfo:complete:get"/>
                <string name="currentAttemptIndex" object="[fl.rsl.RSLInfo]" text=".currentAttemptIndex" tiptext="Returns the index of the URL currently attempting to download." version="" playername="" helpurl="fl.rsl:RSLInfo:currentAttemptIndex:get"/>
                <string name="failed" object="[fl.rsl.RSLInfo]" text=".failed" tiptext="Returns a value of true if the download has failed and false if the download is not yet complete or has completed successfully." version="" playername="" helpurl="fl.rsl:RSLInfo:failed:get"/>
                <string name="loader" object="[fl.rsl.RSLInfo]" text=".loader" tiptext="Returns the loader used to download the RSL." version="" playername="" helpurl="fl.rsl:RSLInfo:loader:get"/>
                <string name="policyFileURLs" object="[fl.rsl.RSLInfo]" text=".policyFileURLs" tiptext="Returns an array of policy file URLs that have been added via addEntry()." version="" playername="" helpurl="fl.rsl:RSLInfo:policyFileURLs:get"/>
                <string name="rslURLs" object="[fl.rsl.RSLInfo]" text=".rslURLs" tiptext="Returns an array of RSL URLs added via addEntry()." version="" playername="" helpurl="fl.rsl:RSLInfo:rslURLs:get"/>
            </folder>
        </folder>
        <folder name="RSLPreloader" id="[fl.rsl.RSLPreloader]" sort="true" index="true" asAncestors="flash.events:EventDispatcher,Object" tiptext="The RSLPreloader class manages preloading of RSLs (Runtime Shared Libraries) before playing other content." helpurl="fl.rsl:RSLPreloader">
            <folder name="Methods" id="Methods" tiptext="Methods for class RSLPreloader" helpurl="fl.rsl:RSLPreloader">
                <string name="RSLPreloader" object="[fl.rsl.RSLPreloader]" text="new RSLPreloader(%[mainTimeline:flash.display:MovieClip=null]%)" constructor="true" tiptext="Constructor." version="2" playername="" helpurl="fl.rsl:RSLPreloader:RSLPreloader"/>
                <string name="addRSLInfo" object="[fl.rsl.RSLPreloader]" text=".addRSLInfo(%info:fl.rsl:RSLInfo%):void" tiptext="Adds a descriptive RSLInfo record to the SWF or SWZ file being downloaded." version="2" playername="" helpurl="fl.rsl:RSLPreloader:addRSLInfo"/>
                <string name="getRSLInfoAt" object="[fl.rsl.RSLPreloader]" text=".getRSLInfoAt(%index:int%):fl.rsl:RSLInfo" tiptext="Gets the RSLInfo record added via addRSLInfo() at the specified index." version="2" playername="" helpurl="fl.rsl:RSLPreloader:getRSLInfoAt"/>
                <string name="loadContent" object="[fl.rsl.RSLPreloader]" text=".loadContent(%%):void" tiptext="The loadContent method is called from frame 2 of the wrapper SWF when a content class name is supplied to the start() method." version="2" playername="" helpurl="fl.rsl:RSLPreloader:loadContent"/>
                <string name="start" object="[fl.rsl.RSLPreloader]" text=".start(%[preloaderAnimClass:Class=null,contentClassName:String=null]%):void" tiptext="Starts downloading the RSL files." version="2" playername="" helpurl="fl.rsl:RSLPreloader:start"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class RSLPreloader" helpurl="fl.rsl:RSLPreloader">
                <string name="debugWaitTime" object="[fl.rsl.RSLPreloader]" text=".debugWaitTime" tiptext="Set this value to the number of milliseconds to wait before downloading the first RSL file." version="" playername="" helpurl="fl.rsl:RSLPreloader:debugWaitTime:get"/>
                <string name="numRSLInfos" object="[fl.rsl.RSLPreloader]" text=".numRSLInfos" tiptext="The number of RSLInfo instances added via addRSLInfo()." version="" playername="" helpurl="fl.rsl:RSLPreloader:numRSLInfos:get"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class RSLPreloader" helpurl="fl.rsl:RSLPreloader">
                <string name="rslLoadFailed" object="[fl.rsl.RSLPreloader]" text=".addEventListener(%type:String=RSLErrorEvent.RSL_LOAD_FAILED{RSLErrorEvent.RSL_LOAD_FAILED,RSLEvent.RSL_PROGRESS,RSLEvent.RSL_LOAD_COMPLETE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched by RSLPreloader when all RSLs have finished downloading and one or more have failed." version="" playername="" helpurl="fl.rsl:RSLPreloader__rslLoadFailed"/>
                <string name="rslProgress" object="[fl.rsl.RSLPreloader]" text=".addEventListener(%type:String=RSLEvent.RSL_PROGRESS{RSLErrorEvent.RSL_LOAD_FAILED,RSLEvent.RSL_PROGRESS,RSLEvent.RSL_LOAD_COMPLETE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched by RSLPreloader to indicate progress in downloading RSL files." version="" playername="" helpurl="fl.rsl:RSLPreloader__rslProgress"/>
                <string name="rslLoadComplete" object="[fl.rsl.RSLPreloader]" text=".addEventListener(%type:String=RSLEvent.RSL_LOAD_COMPLETE{RSLErrorEvent.RSL_LOAD_FAILED,RSLEvent.RSL_PROGRESS,RSLEvent.RSL_LOAD_COMPLETE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched by RSLPreloader when all RSLs have completed loading." version="" playername="" helpurl="fl.rsl:RSLPreloader__rslLoadComplete"/>
            </folder>
        </folder>
        <folder name="SWZInfo" id="[fl.rsl.SWZInfo]" sort="true" index="true" asAncestors="fl.rsl:RSLInfo,flash.events:EventDispatcher,Object" tiptext="The SWZInfo class indicates how to download a SWZ file, which is a signed Runtime Shared Library (RSL)." helpurl="fl.rsl:SWZInfo">
            <folder name="Methods" id="Methods" tiptext="Methods for class SWZInfo" helpurl="fl.rsl:SWZInfo">
                <string name="SWZInfo" object="[fl.rsl.SWZInfo]" text="new SWZInfo(%digest:String%)" constructor="true" tiptext="Constructor." version="2" playername="" helpurl="fl.rsl:SWZInfo:SWZInfo"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class SWZInfo" helpurl="fl.rsl:SWZInfo">
                <string name="digest" object="[fl.rsl.SWZInfo]" text=".digest" tiptext="Returns the read-only digest that was set in the constructor." version="" playername="" helpurl="fl.rsl:SWZInfo:digest:get"/>
            </folder>
        </folder>
    </folder>
        <folder name="fl.text" id="fl.text" sort="true" tiptext="Classes for package fl.text" helpurl="fl.text">
        <folder name="TLFTextField" id="[fl.text.TLFTextField]" sort="true" index="true" asAncestors="flash.display:Sprite,flash.display:DisplayObjectContainer,flash.display:InteractiveObject,flash.display:DisplayObject,flash.events:EventDispatcher,Object" tiptext="Use the TLFTextField class to create text fields that use the advanced text display features of the Text Layout Framework (TLF)." helpurl="fl.text:TLFTextField">
            <folder name="Methods" id="Methods" tiptext="Methods for class TLFTextField" helpurl="fl.text:TLFTextField">
                <string name="TLFTextField" object="[fl.text.TLFTextField]" text="new TLFTextField(%%)" constructor="true" tiptext="Constructor for TLFTextField objects." version="1.5" playername="" helpurl="fl.text:TLFTextField:TLFTextField"/>
                <string name="appendText" object="[fl.text.TLFTextField]" text=".appendText(%newText:String%):void" tiptext="Appends text to the end of the existing text of the TextField." version="1.5" playername="" helpurl="fl.text:TLFTextField:appendText"/>
                <string name="getCharBoundaries" object="[fl.text.TLFTextField]" text=".getCharBoundaries(%charIndex:int%):flash.geom:Rectangle" tiptext="Returns a rectangle that is the bounding box of the character." version="1.5" playername="" helpurl="fl.text:TLFTextField:getCharBoundaries"/>
                <string name="getCharIndexAtPoint" object="[fl.text.TLFTextField]" text=".getCharIndexAtPoint(%x:Number,y:Number%):int" tiptext="Returns the zero-based index value of the character." version="1.5" playername="" helpurl="fl.text:TLFTextField:getCharIndexAtPoint"/>
                <string name="getFirstCharInParagraph" object="[fl.text.TLFTextField]" text=".getFirstCharInParagraph(%charIndex:int%):int" tiptext="The zero-based index value of the character." version="1.5" playername="" helpurl="fl.text:TLFTextField:getFirstCharInParagraph"/>
                <string name="getImageReference" object="[fl.text.TLFTextField]" text=".getImageReference(%id:String%):flash.display:DisplayObject" tiptext="Returns a DisplayObject reference for the given id, for an image or SWF filethat has been added to an HTML-formatted text field by using an &amp;lt;img&amp;gt; tag." version="1.5" playername="" helpurl="fl.text:TLFTextField:getImageReference"/>
                <string name="getLineIndexAtPoint" object="[fl.text.TLFTextField]" text=".getLineIndexAtPoint(%x:Number,y:Number%):int" tiptext="The zero-based index value of the line at a specified point." version="1.5" playername="" helpurl="fl.text:TLFTextField:getLineIndexAtPoint"/>
                <string name="getLineIndexOfChar" object="[fl.text.TLFTextField]" text=".getLineIndexOfChar(%charIndex:int%):int" tiptext="The zero-based index value of the line containing the character that the the charIndex parameter specifies." version="1.5" playername="" helpurl="fl.text:TLFTextField:getLineIndexOfChar"/>
                <string name="getLineLength" object="[fl.text.TLFTextField]" text=".getLineLength(%lineIndex:int%):int" tiptext="Returns the number of characters in a specific text line." version="1.5" playername="" helpurl="fl.text:TLFTextField:getLineLength"/>
                <string name="getLineMetrics" object="[fl.text.TLFTextField]" text=".getLineMetrics(%lineIndex:int%):flash.text:TextLineMetrics" tiptext="Returns metrics information about a given text line." version="1.5" playername="" helpurl="fl.text:TLFTextField:getLineMetrics"/>
                <string name="getLineOffset" object="[fl.text.TLFTextField]" text=".getLineOffset(%lineIndex:int%):int" tiptext="The zero-based index value of the first character in the line." version="1.5" playername="" helpurl="fl.text:TLFTextField:getLineOffset"/>
                <string name="getLineText" object="[fl.text.TLFTextField]" text=".getLineText(%lineIndex:int%):String" tiptext="The text string contained in the specified line." version="1.5" playername="" helpurl="fl.text:TLFTextField:getLineText"/>
                <string name="getParagraphLength" object="[fl.text.TLFTextField]" text=".getParagraphLength(%charIndex:int%):int" tiptext="The zero-based index value of the character." version="1.5" playername="" helpurl="fl.text:TLFTextField:getParagraphLength"/>
                <string name="getTextFormat" object="[fl.text.TLFTextField]" text=".getTextFormat(%[beginIndex:int=-1,endIndex:int=-1]%):flash.text:TextFormat" tiptext="Returns a TextFormat object." version="1.5" playername="" helpurl="fl.text:TLFTextField:getTextFormat"/>
                <string name="isFontCompatible" object="[fl.text.TLFTextField]" text=".isFontCompatible(%fontName:String,fontStyle:String%):Boolean" tiptext="Returns true if an embedded font is available with the specified fontName and fontStylewhere Font.fontType is flash.text.FontType.EMBEDDED_CFF." version="1.5" playername="" helpurl="fl.text:TLFTextField:isFontCompatible"/>
                <string name="replaceSelectedText" object="[fl.text.TLFTextField]" text=".replaceSelectedText(%value:String%):void" tiptext="Replaces the current selection with the contents of the value parameter." version="1.5" playername="" helpurl="fl.text:TLFTextField:replaceSelectedText"/>
                <string name="replaceText" object="[fl.text.TLFTextField]" text=".replaceText(%beginIndex:int,endIndex:int,newText:String%):void" tiptext="Replaces a range of characters." version="1.5" playername="" helpurl="fl.text:TLFTextField:replaceText"/>
                <string name="setSelection" object="[fl.text.TLFTextField]" text=".setSelection(%begIdx:int,endIdx:int%):void" tiptext="Sets a new text selection." version="1.5" playername="" helpurl="fl.text:TLFTextField:setSelection"/>
                <string name="setTextFormat" object="[fl.text.TLFTextField]" text=".setTextFormat(%format:flash.text:TextFormat[,beginIndex:int=-1,endIndex:int=-1]%):void" tiptext="Applies text formatting." version="1.5" playername="" helpurl="fl.text:TLFTextField:setTextFormat"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class TLFTextField" helpurl="fl.text:TLFTextField">
                <string name="alwaysShowSelection" object="[fl.text.TLFTextField]" text=".alwaysShowSelection" tiptext="When set to true and the text field is not in focus, Flash Player highlights the selection in the text field in light blue." version="" playername="" helpurl="fl.text:TLFTextField:alwaysShowSelection:get"/>
                <string name="antiAliasType" object="[fl.text.TLFTextField]" text=".antiAliasType" tiptext="The type of anti-aliasing used for this text field." version="" playername="" helpurl="fl.text:TLFTextField:antiAliasType:get"/>
                <string name="autoSize" object="[fl.text.TLFTextField]" text=".autoSize" tiptext="Controls automatic sizing and alignment of text fields." version="" playername="" helpurl="fl.text:TLFTextField:autoSize:get"/>
                <string name="backgroundAlpha" object="[fl.text.TLFTextField]" text=".backgroundAlpha" tiptext="Specifies the alpha value of the text field background." version="" playername="" helpurl="fl.text:TLFTextField:backgroundAlpha:get"/>
                <string name="backgroundColor" object="[fl.text.TLFTextField]" text=".backgroundColor" tiptext="Specifies the color of the text field background." version="" playername="" helpurl="fl.text:TLFTextField:backgroundColor:get"/>
                <string name="background" object="[fl.text.TLFTextField]" text=".background" tiptext="Specifies whether the text field has a background fill." version="" playername="" helpurl="fl.text:TLFTextField:background:get"/>
                <string name="blockProgression" object="[fl.text.TLFTextField]" text=".blockProgression" tiptext="Specifies a vertical or horizontal progression of line placement." version="" playername="" helpurl="fl.text:TLFTextField:blockProgression:get"/>
                <string name="borderAlpha" object="[fl.text.TLFTextField]" text=".borderAlpha" tiptext="Specifies the alpha value of the border." version="" playername="" helpurl="fl.text:TLFTextField:borderAlpha:get"/>
                <string name="borderColor" object="[fl.text.TLFTextField]" text=".borderColor" tiptext="Specifies the color of the text field border." version="" playername="" helpurl="fl.text:TLFTextField:borderColor:get"/>
                <string name="borderWidth" object="[fl.text.TLFTextField]" text=".borderWidth" tiptext="Specifies the width of the border." version="" playername="" helpurl="fl.text:TLFTextField:borderWidth:get"/>
                <string name="border" object="[fl.text.TLFTextField]" text=".border" tiptext="Specifies whether the text field has a border." version="" playername="" helpurl="fl.text:TLFTextField:border:get"/>
                <string name="bottomScrollV" object="[fl.text.TLFTextField]" text=".bottomScrollV" tiptext="An integer (1-based index) that indicates the bottommost line that is currently visible in the specified text field." version="" playername="" helpurl="fl.text:TLFTextField:bottomScrollV:get"/>
                <string name="caretIndex" object="[fl.text.TLFTextField]" text=".caretIndex" tiptext="The index of the insertion point (caret) position." version="" playername="" helpurl="fl.text:TLFTextField:caretIndex:get"/>
                <string name="columnCount" object="[fl.text.TLFTextField]" text=".columnCount" tiptext="Number of text columns (adopts default value if undefined during cascade)." version="" playername="" helpurl="fl.text:TLFTextField:columnCount:get"/>
                <string name="columnGap" object="[fl.text.TLFTextField]" text=".columnGap" tiptext="Specifies the amount of gutter space, in pixels, to leave between the columns (adopts default value if undefined during cascade)." version="" playername="" helpurl="fl.text:TLFTextField:columnGap:get"/>
                <string name="columnWidth" object="[fl.text.TLFTextField]" text=".columnWidth" tiptext="Column width in pixels (adopts default value if undefined during cascade)." version="" playername="" helpurl="fl.text:TLFTextField:columnWidth:get"/>
                <string name="condenseWhite" object="[fl.text.TLFTextField]" text=".condenseWhite" tiptext="A Boolean value that specifies whether extra white space (spaces, line breaks, and so on) in a text field with HTML text, or TLF markup, is removed." version="" playername="" helpurl="fl.text:TLFTextField:condenseWhite:get"/>
                <string name="defaultTextFormat" object="[fl.text.TLFTextField]" text=".defaultTextFormat" tiptext="Specifies the format applied to newly inserted text, such as text entered by a user or text inserted with the replaceSelectedText() method." version="" playername="" helpurl="fl.text:TLFTextField:defaultTextFormat:get"/>
                <string name="direction" object="[fl.text.TLFTextField]" text=".direction" tiptext="Specifies the default bidirectional embedding level of the text in the text block." version="" playername="" helpurl="fl.text:TLFTextField:direction:get"/>
                <string name="displayAsPassword" object="[fl.text.TLFTextField]" text=".displayAsPassword" tiptext="Specifies whether the text field is a password text field." version="" playername="" helpurl="fl.text:TLFTextField:displayAsPassword:get"/>
                <string name="embedFonts" object="[fl.text.TLFTextField]" text=".embedFonts" tiptext="Specifies whether to render by using embedded font outlines." version="" playername="" helpurl="fl.text:TLFTextField:embedFonts:get"/>
                <string name="firstBaselineOffset" object="[fl.text.TLFTextField]" text=".firstBaselineOffset" tiptext="Specifies the baseline position of the first line in the container." version="" playername="" helpurl="fl.text:TLFTextField:firstBaselineOffset:get"/>
                <string name="gridFitType" object="[fl.text.TLFTextField]" text=".gridFitType" tiptext="The type of grid fitting used for this text field." version="" playername="" helpurl="fl.text:TLFTextField:gridFitType:get"/>
                <string name="htmlText" object="[fl.text.TLFTextField]" text=".htmlText" tiptext="Contains the HTML representation of the text field contents." version="" playername="" helpurl="fl.text:TLFTextField:htmlText:get"/>
                <string name="length" object="[fl.text.TLFTextField]" text=".length" tiptext="The number of characters in a text field." version="" playername="" helpurl="fl.text:TLFTextField:length:get"/>
                <string name="maxChars" object="[fl.text.TLFTextField]" text=".maxChars" tiptext="The maximum number of characters that the text field can contain, as entered by a user." version="" playername="" helpurl="fl.text:TLFTextField:maxChars:get"/>
                <string name="maxScrollH" object="[fl.text.TLFTextField]" text=".maxScrollH" tiptext="The maximum value of scrollH." version="" playername="" helpurl="fl.text:TLFTextField:maxScrollH:get"/>
                <string name="maxScrollV" object="[fl.text.TLFTextField]" text=".maxScrollV" tiptext="The maximum value of scrollV." version="" playername="" helpurl="fl.text:TLFTextField:maxScrollV:get"/>
                <string name="mouseWheelEnabled" object="[fl.text.TLFTextField]" text=".mouseWheelEnabled" tiptext="A Boolean value that indicates whether Flash Player automatically scrolls multiline text fields when the user clicks a text field and rolls the mouse wheel." version="" playername="" helpurl="fl.text:TLFTextField:mouseWheelEnabled:get"/>
                <string name="multiline" object="[fl.text.TLFTextField]" text=".multiline" tiptext="Indicates whether text field is a multiline text field." version="" playername="" helpurl="fl.text:TLFTextField:multiline:get"/>
                <string name="numLines" object="[fl.text.TLFTextField]" text=".numLines" tiptext="Defines the number of text lines in a multiline text field." version="" playername="" helpurl="fl.text:TLFTextField:numLines:get"/>
                <string name="paddingBottom" object="[fl.text.TLFTextField]" text=".paddingBottom" tiptext="Botttom inset in pixels (adopts default value if undefined during cascade)." version="" playername="" helpurl="fl.text:TLFTextField:paddingBottom:get"/>
                <string name="paddingLeft" object="[fl.text.TLFTextField]" text=".paddingLeft" tiptext="Left inset in pixels (adopts default value if undefined during cascade)." version="" playername="" helpurl="fl.text:TLFTextField:paddingLeft:get"/>
                <string name="paddingRight" object="[fl.text.TLFTextField]" text=".paddingRight" tiptext="Right inset in pixels (adopts default value if undefined during cascade)." version="" playername="" helpurl="fl.text:TLFTextField:paddingRight:get"/>
                <string name="paddingTop" object="[fl.text.TLFTextField]" text=".paddingTop" tiptext="Top inset in pixels (adopts default value if undefined during cascade)." version="" playername="" helpurl="fl.text:TLFTextField:paddingTop:get"/>
                <string name="restrict" object="[fl.text.TLFTextField]" text=".restrict" tiptext="Indicates the set of characters that a user can enter into the text field." version="" playername="" helpurl="fl.text:TLFTextField:restrict:get"/>
                <string name="scrollH" object="[fl.text.TLFTextField]" text=".scrollH" tiptext="The current horizontal scrolling position." version="" playername="" helpurl="fl.text:TLFTextField:scrollH:get"/>
                <string name="scrollV" object="[fl.text.TLFTextField]" text=".scrollV" tiptext="The vertical position of text in a text field." version="" playername="" helpurl="fl.text:TLFTextField:scrollV:get"/>
                <string name="selectable" object="[fl.text.TLFTextField]" text=".selectable" tiptext="A Boolean value that indicates whether the text field is selectable." version="" playername="" helpurl="fl.text:TLFTextField:selectable:get"/>
                <string name="selectionBeginIndex" object="[fl.text.TLFTextField]" text=".selectionBeginIndex" tiptext="The zero-based character index value of the first character in the current selection." version="" playername="" helpurl="fl.text:TLFTextField:selectionBeginIndex:get"/>
                <string name="selectionEndIndex" object="[fl.text.TLFTextField]" text=".selectionEndIndex" tiptext="The zero-based character index value of the last character in the current selection." version="" playername="" helpurl="fl.text:TLFTextField:selectionEndIndex:get"/>
                <string name="sharpness" object="[fl.text.TLFTextField]" text=".sharpness" tiptext="Sharpness is not applicable to TLF TextFields." version="" playername="" helpurl="fl.text:TLFTextField:sharpness:get"/>
                <string name="styleSheet" object="[fl.text.TLFTextField]" text=".styleSheet" tiptext="Style sheets are not supported by TLF TextFields." version="" playername="" helpurl="fl.text:TLFTextField:styleSheet:get"/>
                <string name="textColor" object="[fl.text.TLFTextField]" text=".textColor" tiptext="The color of the text in a text field, in hexadecimal format." version="" playername="" helpurl="fl.text:TLFTextField:textColor:get"/>
                <string name="textFlow" object="[fl.text.TLFTextField]" text=".textFlow" tiptext="Use this property to assign formatting from the TLF classes in the flashx packages to the TLFTextField instance." version="" playername="" helpurl="fl.text:TLFTextField:textFlow:get"/>
                <string name="textHeight" object="[fl.text.TLFTextField]" text=".textHeight" tiptext="The height of the text in pixels." version="" playername="" helpurl="fl.text:TLFTextField:textHeight:get"/>
                <string name="textWidth" object="[fl.text.TLFTextField]" text=".textWidth" tiptext="The width of the text in pixels." version="" playername="" helpurl="fl.text:TLFTextField:textWidth:get"/>
                <string name="text" object="[fl.text.TLFTextField]" text=".text" tiptext="A string that is the current text in the text field." version="" playername="" helpurl="fl.text:TLFTextField:text:get"/>
                <string name="thickness" object="[fl.text.TLFTextField]" text=".thickness" tiptext="The thickness property is not applicable to the TLF TextField." version="" playername="" helpurl="fl.text:TLFTextField:thickness:get"/>
                <string name="tlfMarkup" object="[fl.text.TLFTextField]" text=".tlfMarkup" tiptext="Sets or gets the TLF markup of the text in the TLF text field." version="" playername="" helpurl="fl.text:TLFTextField:tlfMarkup:get"/>
                <string name="type" object="[fl.text.TLFTextField]" text=".type" tiptext="The type of the text field." version="" playername="" helpurl="fl.text:TLFTextField:type:get"/>
                <string name="useRichTextClipboard" object="[fl.text.TLFTextField]" text=".useRichTextClipboard" tiptext="Specifies whether to copy the text formatting along with the text to the clipboard." version="" playername="" helpurl="fl.text:TLFTextField:useRichTextClipboard:get"/>
                <string name="verticalAlign" object="[fl.text.TLFTextField]" text=".verticalAlign" tiptext="Vertical alignment or justification (adopts default value if undefined during cascade)." version="" playername="" helpurl="fl.text:TLFTextField:verticalAlign:get"/>
                <string name="wordWrap" object="[fl.text.TLFTextField]" text=".wordWrap" tiptext="A Boolean value that indicates whether the text field has word wrap." version="" playername="" helpurl="fl.text:TLFTextField:wordWrap:get"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class TLFTextField" helpurl="fl.text:TLFTextField">
                <string name="textInput" object="[fl.text.TLFTextField]" text=".addEventListener(%type:String=TextEvent.TEXT_INPUT{TextEvent.TEXT_INPUT,Event.SCROLL,TextEvent.LINK,Event.CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Flash Player dispatches the textInput event when a user enters one or more characters of text." version="" playername="" helpurl="fl.text:TLFTextField_flash.events.TextEvent.TEXT_INPUT_textInput"/>
                <string name="scroll" object="[fl.text.TLFTextField]" text=".addEventListener(%type:String=Event.SCROLL{TextEvent.TEXT_INPUT,Event.SCROLL,TextEvent.LINK,Event.CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched by a TextField object after the user scrolls." version="" playername="" helpurl="fl.text:TLFTextField_flash.events.Event.SCROLL_scroll"/>
                <string name="link" object="[fl.text.TLFTextField]" text=".addEventListener(%type:String=TextEvent.LINK{TextEvent.TEXT_INPUT,Event.SCROLL,TextEvent.LINK,Event.CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a user clicks a hyperlink in an HTML-enabled text field, where the URL begins with &quot;event:&quot;." version="" playername="" helpurl="fl.text:TLFTextField_flash.events.TextEvent.LINK_link"/>
                <string name="change" object="[fl.text.TLFTextField]" text=".addEventListener(%type:String=Event.CHANGE{TextEvent.TEXT_INPUT,Event.SCROLL,TextEvent.LINK,Event.CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched after a control value is modified, unlike the textInput event, which is dispatched before the value is modified." version="" playername="" helpurl="fl.text:TLFTextField_flash.events.Event.CHANGE_change"/>
            </folder>
        </folder>
    </folder>
        <folder name="fl.transitions" id="fl.transitions" sort="true" tiptext="Classes for package fl.transitions" helpurl="fl.transitions">
        <folder name="Iris" id="[fl.transitions.Iris]" sort="true" index="true" asAncestors="fl.transitions:Transition,flash.events:EventDispatcher,Object" tiptext="The Iris class reveals the movie clip object by using an animated mask of a square shape or a circle shape that zooms in or out." helpurl="fl.transitions:Iris">
            <folder name="Properties" id="Properties" tiptext="Properties for class Iris" helpurl="fl.transitions:Iris">
                <string name="CIRCLE" object="[fl.transitions.Iris]" text="Iris.CIRCLE" constant="true" tiptext="Used to specify a circle mask shape for the transition effect." version="" playername="" helpurl="fl.transitions:Iris:CIRCLE"/>
                <string name="SQUARE" object="[fl.transitions.Iris]" text="Iris.SQUARE" constant="true" tiptext="Used to specify a square mask shape for the transition effect." version="" playername="" helpurl="fl.transitions:Iris:SQUARE"/>
            </folder>
        </folder>
        <folder name="Transition" id="[fl.transitions.Transition]" sort="true" index="true" asAncestors="flash.events:EventDispatcher,Object" tiptext="The Transition class is the base class for all transition classes." helpurl="fl.transitions:Transition">
            <folder name="Properties" id="Properties" tiptext="Properties for class Transition" helpurl="fl.transitions:Transition">
                <string name="IN" object="[fl.transitions.Transition]" text="Transition.IN" constant="true" tiptext="Constant for the direction property that determines the type of easing." version="" playername="" helpurl="fl.transitions:Transition:IN"/>
                <string name="OUT" object="[fl.transitions.Transition]" text="Transition.OUT" constant="true" tiptext="Constant for the direction property that determines the type of easing." version="" playername="" helpurl="fl.transitions:Transition:OUT"/>
                <string name="direction" object="[fl.transitions.Transition]" text=".direction" tiptext="Determines the easing direction for the Tween instance." version="" playername="" helpurl="fl.transitions:Transition:direction:get"/>
                <string name="duration" object="[fl.transitions.Transition]" text=".duration" tiptext="Determines the length of time for the Tween instance." version="" playername="" helpurl="fl.transitions:Transition:duration:get"/>
                <string name="easing" object="[fl.transitions.Transition]" text=".easing" tiptext="Sets the tweening effect for the animation." version="" playername="" helpurl="fl.transitions:Transition:easing:get"/>
            </folder>
        </folder>
        <folder name="TransitionManager" id="[fl.transitions.TransitionManager]" sort="true" index="true" asAncestors="flash.events:EventDispatcher,Object" tiptext="The TransitionManager class defines animation effects." helpurl="fl.transitions:TransitionManager">
            <folder name="Methods" id="Methods" tiptext="Methods for class TransitionManager" helpurl="fl.transitions:TransitionManager">
                <string name="TransitionManager" object="[fl.transitions.TransitionManager]" text="new TransitionManager(%content:flash.display:MovieClip%)" constructor="true" tiptext="Constructor function for creating a new TransitionManager instance." version="1.0" playername="" helpurl="fl.transitions:TransitionManager:TransitionManager"/>
                <string name="startTransition" object="[fl.transitions.TransitionManager]" text=".startTransition(%transParams:Object%):fl.transitions:Transition" tiptext="Creates a transition instance and starts it." version="1.0" playername="" helpurl="fl.transitions:TransitionManager:startTransition"/>
                <string name="start" object="[fl.transitions.TransitionManager]" text="TransitionManager.start(%content:flash.display:MovieClip,transParams:Object%):fl.transitions:Transition" static="true" tiptext="Creates a new TransitionManager instance, designates the target object, applies a transition, and starts the transition." version="1.0" playername="" helpurl="fl.transitions:TransitionManager:start"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class TransitionManager" helpurl="fl.transitions:TransitionManager">
                <string name="contentAppearance" object="[fl.transitions.TransitionManager]" text=".contentAppearance" tiptext="An object that contains the saved visual properties of the content (target movie clip) to which the transitions will be applied." version="" playername="" helpurl="fl.transitions:TransitionManager:contentAppearance:get"/>
                <string name="content" object="[fl.transitions.TransitionManager]" text=".content" tiptext="The movie clip instance to which TransitionManager is to apply a transition." version="" playername="" helpurl="fl.transitions:TransitionManager:content:get"/>
            </folder>
        </folder>
        <folder name="Tween" id="[fl.transitions.Tween]" sort="true" index="true" asAncestors="flash.events:EventDispatcher,Object" tiptext="The Tween class lets you use ActionScript to move, resize, and fade movie clips by specifying a property of the target movie clip to animate over a number of frames or seconds." helpurl="fl.transitions:Tween">
            <folder name="Methods" id="Methods" tiptext="Methods for class Tween" helpurl="fl.transitions:Tween">
                <string name="Tween" object="[fl.transitions.Tween]" text="new Tween(%obj:Object,prop:String,func:Function,begin:Number,finish:Number,duration:Number[,useSeconds:Boolean=false]%)" constructor="true" tiptext="Creates an instance of the Tween class." version="1.0" playername="" helpurl="fl.transitions:Tween:Tween"/>
                <string name="continueTo" object="[fl.transitions.Tween]" text=".continueTo(%finish:Number,duration:Number%):void" tiptext="Instructs the tweened animation to continue tweening from its current animation point to a new finish and duration point." version="1.0" playername="" helpurl="fl.transitions:Tween:continueTo"/>
                <string name="fforward" object="[fl.transitions.Tween]" text=".fforward(%%):void" tiptext="Forwards the tweened animation directly to the final value of the tweened animation." version="1.0" playername="" helpurl="fl.transitions:Tween:fforward"/>
                <string name="nextFrame" object="[fl.transitions.Tween]" text=".nextFrame(%%):void" tiptext="Forwards the tweened animation to the next frame of an animation that was stopped." version="1.0" playername="" helpurl="fl.transitions:Tween:nextFrame"/>
                <string name="prevFrame" object="[fl.transitions.Tween]" text=".prevFrame(%%):void" tiptext="Plays the previous frame of the tweened animation from the current stopping point of an animation that was stopped." version="1.0" playername="" helpurl="fl.transitions:Tween:prevFrame"/>
                <string name="resume" object="[fl.transitions.Tween]" text=".resume(%%):void" tiptext="Resumes the play of a tweened animation that has been stopped." version="1.0" playername="" helpurl="fl.transitions:Tween:resume"/>
                <string name="rewind" object="[fl.transitions.Tween]" text=".rewind(%[t:Number=0]%):void" tiptext="Moves the play of a tweened animation back to its starting value." version="1.0" playername="" helpurl="fl.transitions:Tween:rewind"/>
                <string name="start" object="[fl.transitions.Tween]" text=".start(%%):void" tiptext="Starts the play of a tweened animation from its starting point." version="1.0" playername="" helpurl="fl.transitions:Tween:start"/>
                <string name="stop" object="[fl.transitions.Tween]" text=".stop(%%):void" tiptext="Stops the play of a tweened animation at its current value." version="1.0" playername="" helpurl="fl.transitions:Tween:stop"/>
                <string name="yoyo" object="[fl.transitions.Tween]" text=".yoyo(%%):void" tiptext="Instructs the tweened animation to play in reverse from its last direction of tweened property increments." version="1.0" playername="" helpurl="fl.transitions:Tween:yoyo"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class Tween" helpurl="fl.transitions:Tween">
                <string name="begin" object="[fl.transitions.Tween]" text=".begin" tiptext="The initial value of the target object&apos;s designated property before the tween starts." version="" playername="" helpurl="fl.transitions:Tween:begin"/>
                <string name="func" object="[fl.transitions.Tween]" text=".func" tiptext="The easing function which is used with the tween." version="" playername="" helpurl="fl.transitions:Tween:func"/>
                <string name="isPlaying" object="[fl.transitions.Tween]" text=".isPlaying" tiptext="Indicates whether the tween is currently playing." version="" playername="" helpurl="fl.transitions:Tween:isPlaying"/>
                <string name="looping" object="[fl.transitions.Tween]" text=".looping" tiptext="Indicates whether the tween will loop." version="" playername="" helpurl="fl.transitions:Tween:looping"/>
                <string name="obj" object="[fl.transitions.Tween]" text=".obj" tiptext="The target object that is being tweened." version="" playername="" helpurl="fl.transitions:Tween:obj"/>
                <string name="prop" object="[fl.transitions.Tween]" text=".prop" tiptext="The name of the property affected by the tween of the target object." version="" playername="" helpurl="fl.transitions:Tween:prop"/>
                <string name="useSeconds" object="[fl.transitions.Tween]" text=".useSeconds" tiptext="Indicates whether the tween plays over a period of frames or seconds." version="" playername="" helpurl="fl.transitions:Tween:useSeconds"/>
                <string name="FPS" object="[fl.transitions.Tween]" text=".FPS" tiptext="The number of frames per second calculated into the tweened animation." version="" playername="" helpurl="fl.transitions:Tween:FPS:get"/>
                <string name="duration" object="[fl.transitions.Tween]" text=".duration" tiptext="The duration of the tweened animation in frames or seconds." version="" playername="" helpurl="fl.transitions:Tween:duration:get"/>
                <string name="finish" object="[fl.transitions.Tween]" text=".finish" tiptext="A number indicating the ending value of the target object property that is to be tweened." version="" playername="" helpurl="fl.transitions:Tween:finish:get"/>
                <string name="position" object="[fl.transitions.Tween]" text=".position" tiptext="The current value of the target object property being tweened." version="" playername="" helpurl="fl.transitions:Tween:position:get"/>
                <string name="time" object="[fl.transitions.Tween]" text=".time" tiptext="The current time within the duration of the animation." version="" playername="" helpurl="fl.transitions:Tween:time:get"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class Tween" helpurl="fl.transitions:Tween">
                <string name="motionStop" object="[fl.transitions.Tween]" text=".addEventListener(%type:String=TweenEvent.MOTION_STOP{TweenEvent.MOTION_STOP,TweenEvent.MOTION_START,TweenEvent.MOTION_RESUME,TweenEvent.MOTION_LOOP,TweenEvent.MOTION_FINISH,TweenEvent.MOTION_CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Indicates that the Tween has been stopped with an explicit call to Tween.stop()." version="" playername="" helpurl="fl.transitions:Tween_fl.transitions.TweenEvent.MOTION_STOP_motionStop"/>
                <string name="motionStart" object="[fl.transitions.Tween]" text=".addEventListener(%type:String=TweenEvent.MOTION_START{TweenEvent.MOTION_STOP,TweenEvent.MOTION_START,TweenEvent.MOTION_RESUME,TweenEvent.MOTION_LOOP,TweenEvent.MOTION_FINISH,TweenEvent.MOTION_CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Indicates that the motion has started playing." version="" playername="" helpurl="fl.transitions:Tween_fl.transitions.TweenEvent.MOTION_START_motionStart"/>
                <string name="motionResume" object="[fl.transitions.Tween]" text=".addEventListener(%type:String=TweenEvent.MOTION_RESUME{TweenEvent.MOTION_STOP,TweenEvent.MOTION_START,TweenEvent.MOTION_RESUME,TweenEvent.MOTION_LOOP,TweenEvent.MOTION_FINISH,TweenEvent.MOTION_CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Indicates that the Tween has resumed playing after being paused." version="" playername="" helpurl="fl.transitions:Tween_fl.transitions.TweenEvent.MOTION_RESUME_motionResume"/>
                <string name="motionLoop" object="[fl.transitions.Tween]" text=".addEventListener(%type:String=TweenEvent.MOTION_LOOP{TweenEvent.MOTION_STOP,TweenEvent.MOTION_START,TweenEvent.MOTION_RESUME,TweenEvent.MOTION_LOOP,TweenEvent.MOTION_FINISH,TweenEvent.MOTION_CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Indicates that the Tween has restarted playing from the beginning in looping mode." version="" playername="" helpurl="fl.transitions:Tween_fl.transitions.TweenEvent.MOTION_LOOP_motionLoop"/>
                <string name="motionFinish" object="[fl.transitions.Tween]" text=".addEventListener(%type:String=TweenEvent.MOTION_FINISH{TweenEvent.MOTION_STOP,TweenEvent.MOTION_START,TweenEvent.MOTION_RESUME,TweenEvent.MOTION_LOOP,TweenEvent.MOTION_FINISH,TweenEvent.MOTION_CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Indicates that the Tween has reached the end and finished." version="" playername="" helpurl="fl.transitions:Tween_fl.transitions.TweenEvent.MOTION_FINISH_motionFinish"/>
                <string name="motionChange" object="[fl.transitions.Tween]" text=".addEventListener(%type:String=TweenEvent.MOTION_CHANGE{TweenEvent.MOTION_STOP,TweenEvent.MOTION_START,TweenEvent.MOTION_RESUME,TweenEvent.MOTION_LOOP,TweenEvent.MOTION_FINISH,TweenEvent.MOTION_CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Indicates that the Tween has changed and the screen has been updated." version="" playername="" helpurl="fl.transitions:Tween_fl.transitions.TweenEvent.MOTION_CHANGE_motionChange"/>
            </folder>
        </folder>
        <folder name="TweenEvent" id="[fl.transitions.TweenEvent]" sort="true" index="true" asAncestors="flash.events:Event,Object" tiptext="The TweenEvent class represents events that are broadcast by the fl.transitions.Tween class." helpurl="fl.transitions:TweenEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class TweenEvent" helpurl="fl.transitions:TweenEvent">
                <string name="TweenEvent" object="[fl.transitions.TweenEvent]" text="new TweenEvent(%type:String,time:Number,position:Number[,bubbles:Boolean=false,cancelable:Boolean=false]%)" constructor="true" tiptext="Constructor function for a TweenEvent object." version="1.0" playername="" helpurl="fl.transitions:TweenEvent:TweenEvent"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class TweenEvent" helpurl="fl.transitions:TweenEvent">
                <string name="MOTION_CHANGE" object="[fl.transitions.TweenEvent]" text="TweenEvent.MOTION_CHANGE" constant="true" tiptext="Indicates that the Tween has changed and the screen has been updated." version="" playername="" helpurl="fl.transitions:TweenEvent:MOTION_CHANGE"/>
                <string name="MOTION_FINISH" object="[fl.transitions.TweenEvent]" text="TweenEvent.MOTION_FINISH" constant="true" tiptext="Indicates that the Tween has reached the end and finished." version="" playername="" helpurl="fl.transitions:TweenEvent:MOTION_FINISH"/>
                <string name="MOTION_LOOP" object="[fl.transitions.TweenEvent]" text="TweenEvent.MOTION_LOOP" constant="true" tiptext="Indicates that the Tween has restarted playing from the beginning in looping mode." version="" playername="" helpurl="fl.transitions:TweenEvent:MOTION_LOOP"/>
                <string name="MOTION_RESUME" object="[fl.transitions.TweenEvent]" text="TweenEvent.MOTION_RESUME" constant="true" tiptext="Indicates that the Tween has resumed playing after being paused." version="" playername="" helpurl="fl.transitions:TweenEvent:MOTION_RESUME"/>
                <string name="MOTION_START" object="[fl.transitions.TweenEvent]" text="TweenEvent.MOTION_START" constant="true" tiptext="Indicates that the motion has started playing." version="" playername="" helpurl="fl.transitions:TweenEvent:MOTION_START"/>
                <string name="MOTION_STOP" object="[fl.transitions.TweenEvent]" text="TweenEvent.MOTION_STOP" constant="true" tiptext="Indicates that the Tween has been stopped with an explicit call to Tween.stop()." version="" playername="" helpurl="fl.transitions:TweenEvent:MOTION_STOP"/>
                <string name="position" object="[fl.transitions.TweenEvent]" text=".position" tiptext="The value of the property controlled by the Tween, when the event occurred." version="" playername="" helpurl="fl.transitions:TweenEvent:position"/>
                <string name="time" object="[fl.transitions.TweenEvent]" text=".time" tiptext="The time of the Tween when the event occurred." version="" playername="" helpurl="fl.transitions:TweenEvent:time"/>
            </folder>
        </folder>
    </folder>
        <folder name="fl.transitions.easing" id="fl.transitions.easing" sort="true" tiptext="Classes for package fl.transitions.easing" helpurl="fl.transitions.easing">
        <folder name="Back" id="[fl.transitions.easing.Back]" sort="true" index="true" asAncestors="Object" tiptext="The Back class defines three easing functions to implement motion with ActionScript animations." helpurl="fl.transitions.easing:Back">
            <folder name="Methods" id="Methods" tiptext="Methods for class Back" helpurl="fl.transitions.easing:Back">
                <string name="easeInOut" object="[fl.transitions.easing.Back]" text="Back.easeInOut(%t:Number,b:Number,c:Number,d:Number[,s:Number=0]%):Number" static="true" tiptext="The easeInOut() method combines the motion of the easeIn() and easeOut() methods to start the motion by backtracking, then reversing direction and moving toward the target, overshooting the target slightly, reversing direction again, and then moving back toward the target." version="1.0" playername="" helpurl="fl.transitions.easing:Back:easeInOut"/>
                <string name="easeIn" object="[fl.transitions.easing.Back]" text="Back.easeIn(%t:Number,b:Number,c:Number,d:Number[,s:Number=0]%):Number" static="true" tiptext="The easeIn() method starts the motion by backtracking and then reversing direction and moving toward the target." version="1.0" playername="" helpurl="fl.transitions.easing:Back:easeIn"/>
                <string name="easeOut" object="[fl.transitions.easing.Back]" text="Back.easeOut(%t:Number,b:Number,c:Number,d:Number[,s:Number=0]%):Number" static="true" tiptext="The easeOut() method starts the motion by moving towards the target, overshooting it slightly, and then reversing direction back toward the target." version="1.0" playername="" helpurl="fl.transitions.easing:Back:easeOut"/>
            </folder>
        </folder>
        <folder name="Bounce" id="[fl.transitions.easing.Bounce]" sort="true" index="true" asAncestors="Object" tiptext="The Bounce class defines three easing functions to implement bouncing motion with ActionScript animation, similar to a ball falling and bouncing on a floor with several decaying rebounds." helpurl="fl.transitions.easing:Bounce">
            <folder name="Methods" id="Methods" tiptext="Methods for class Bounce" helpurl="fl.transitions.easing:Bounce">
                <string name="easeInOut" object="[fl.transitions.easing.Bounce]" text="Bounce.easeInOut(%t:Number,b:Number,c:Number,d:Number%):Number" static="true" tiptext="The easeInOut() method combines the motion of the easeIn() and easeOut() methods to start the bounce motion slowly, accelerate motion, then decelerate." version="1.0" playername="" helpurl="fl.transitions.easing:Bounce:easeInOut"/>
                <string name="easeIn" object="[fl.transitions.easing.Bounce]" text="Bounce.easeIn(%t:Number,b:Number,c:Number,d:Number%):Number" static="true" tiptext="The easeIn() method starts the bounce motion slowly and then accelerates motion as it executes." version="1.0" playername="" helpurl="fl.transitions.easing:Bounce:easeIn"/>
                <string name="easeOut" object="[fl.transitions.easing.Bounce]" text="Bounce.easeOut(%t:Number,b:Number,c:Number,d:Number%):Number" static="true" tiptext="The easeOut() method starts the bounce motion fast and then decelerates motion as it executes." version="1.0" playername="" helpurl="fl.transitions.easing:Bounce:easeOut"/>
            </folder>
        </folder>
        <folder name="Elastic" id="[fl.transitions.easing.Elastic]" sort="true" index="true" asAncestors="Object" tiptext="The Elastic class defines three easing functions to implement motion with ActionScript animation, where the motion is defined by an exponentially decaying sine wave." helpurl="fl.transitions.easing:Elastic">
            <folder name="Methods" id="Methods" tiptext="Methods for class Elastic" helpurl="fl.transitions.easing:Elastic">
                <string name="easeInOut" object="[fl.transitions.easing.Elastic]" text="Elastic.easeInOut(%t:Number,b:Number,c:Number,d:Number[,a:Number=0,p:Number=0]%):Number" static="true" tiptext="The easeInOut() method combines the motion of the easeIn() and easeOut() methods to start the motion slowly, accelerate motion, then decelerate." version="1.0" playername="" helpurl="fl.transitions.easing:Elastic:easeInOut"/>
                <string name="easeIn" object="[fl.transitions.easing.Elastic]" text="Elastic.easeIn(%t:Number,b:Number,c:Number,d:Number[,a:Number=0,p:Number=0]%):Number" static="true" tiptext="The easeIn() method starts motion slowly and then accelerates motion as it executes." version="1.0" playername="" helpurl="fl.transitions.easing:Elastic:easeIn"/>
                <string name="easeOut" object="[fl.transitions.easing.Elastic]" text="Elastic.easeOut(%t:Number,b:Number,c:Number,d:Number[,a:Number=0,p:Number=0]%):Number" static="true" tiptext="The easeOut() method starts motion fast and then decelerates motion as it executes." version="1.0" playername="" helpurl="fl.transitions.easing:Elastic:easeOut"/>
            </folder>
        </folder>
        <folder name="None" id="[fl.transitions.easing.None]" sort="true" index="true" asAncestors="Object" tiptext="The None class defines easing functions to implement nonaccelerated motion with ActionScript animations." helpurl="fl.transitions.easing:None">
            <folder name="Methods" id="Methods" tiptext="Methods for class None" helpurl="fl.transitions.easing:None">
                <string name="easeInOut" object="[fl.transitions.easing.None]" text="None.easeInOut(%t:Number,b:Number,c:Number,d:Number%):Number" static="true" tiptext="The easeInOut() method defines a constant motion, with no acceleration." version="1.0" playername="" helpurl="fl.transitions.easing:None:easeInOut"/>
                <string name="easeIn" object="[fl.transitions.easing.None]" text="None.easeIn(%t:Number,b:Number,c:Number,d:Number%):Number" static="true" tiptext="The easeIn() method defines a constant motion, with no acceleration." version="1.0" playername="" helpurl="fl.transitions.easing:None:easeIn"/>
                <string name="easeNone" object="[fl.transitions.easing.None]" text="None.easeNone(%t:Number,b:Number,c:Number,d:Number%):Number" static="true" tiptext="The easeNone() method defines a constant motion, with no acceleration." version="1.0" playername="" helpurl="fl.transitions.easing:None:easeNone"/>
                <string name="easeOut" object="[fl.transitions.easing.None]" text="None.easeOut(%t:Number,b:Number,c:Number,d:Number%):Number" static="true" tiptext="The easeOut() method defines a constant motion, with no acceleration." version="1.0" playername="" helpurl="fl.transitions.easing:None:easeOut"/>
            </folder>
        </folder>
        <folder name="Regular" id="[fl.transitions.easing.Regular]" sort="true" index="true" asAncestors="Object" tiptext="The Regular class defines three easing functions to implement accelerated motion with ActionScript animations." helpurl="fl.transitions.easing:Regular">
            <folder name="Methods" id="Methods" tiptext="Methods for class Regular" helpurl="fl.transitions.easing:Regular">
                <string name="easeInOut" object="[fl.transitions.easing.Regular]" text="Regular.easeInOut(%t:Number,b:Number,c:Number,d:Number%):Number" static="true" tiptext="The easeInOut() method combines the motion of the easeIn() and easeOut() methods to start the motion from a zero velocity, accelerate motion, then decelerate to a zero velocity." version="1.0" playername="" helpurl="fl.transitions.easing:Regular:easeInOut"/>
                <string name="easeIn" object="[fl.transitions.easing.Regular]" text="Regular.easeIn(%t:Number,b:Number,c:Number,d:Number%):Number" static="true" tiptext="The easeIn() method starts motion from a zero velocity and then accelerates motion as it executes." version="1.0" playername="" helpurl="fl.transitions.easing:Regular:easeIn"/>
                <string name="easeOut" object="[fl.transitions.easing.Regular]" text="Regular.easeOut(%t:Number,b:Number,c:Number,d:Number%):Number" static="true" tiptext="The easeOut() method starts motion fast and then decelerates motion to a zero velocity as it executes." version="1.0" playername="" helpurl="fl.transitions.easing:Regular:easeOut"/>
            </folder>
        </folder>
        <folder name="Strong" id="[fl.transitions.easing.Strong]" sort="true" index="true" asAncestors="Object" tiptext="The Strong class defines three easing functions to implement motion with ActionScript animation." helpurl="fl.transitions.easing:Strong">
            <folder name="Methods" id="Methods" tiptext="Methods for class Strong" helpurl="fl.transitions.easing:Strong">
                <string name="easeInOut" object="[fl.transitions.easing.Strong]" text="Strong.easeInOut(%t:Number,b:Number,c:Number,d:Number%):Number" static="true" tiptext="The easeInOut() method combines the motion of the easeIn() and easeOut() methods to start the motion from a zero velocity, accelerate motion, then decelerate to a zero velocity." version="1.0" playername="" helpurl="fl.transitions.easing:Strong:easeInOut"/>
                <string name="easeIn" object="[fl.transitions.easing.Strong]" text="Strong.easeIn(%t:Number,b:Number,c:Number,d:Number%):Number" static="true" tiptext="The easeIn() method starts motion from zero velocity and then accelerates motion as it executes." version="1.0" playername="" helpurl="fl.transitions.easing:Strong:easeIn"/>
                <string name="easeOut" object="[fl.transitions.easing.Strong]" text="Strong.easeOut(%t:Number,b:Number,c:Number,d:Number%):Number" static="true" tiptext="The easeOut() method starts motion fast and then decelerates motion to a zero velocity as it executes." version="1.0" playername="" helpurl="fl.transitions.easing:Strong:easeOut"/>
            </folder>
        </folder>
    </folder>
        <folder name="fl.video" id="fl.video" sort="true" tiptext="Classes for package fl.video" helpurl="fl.video">
        <folder name="AutoLayoutEvent" id="[fl.video.AutoLayoutEvent]" sort="true" index="true" asAncestors="fl.video:LayoutEvent,flash.events:Event,Object" tiptext="Flash&amp;#xAE; Player dispatches an AutoLayoutEvent object when the video player is resized and laid out automatically." helpurl="fl.video:AutoLayoutEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class AutoLayoutEvent" helpurl="fl.video:AutoLayoutEvent">
                <string name="AutoLayoutEvent" object="[fl.video.AutoLayoutEvent]" text="new AutoLayoutEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,oldBounds:flash.geom:Rectangle=null,oldRegistrationBounds:flash.geom:Rectangle=null,vp:uint=0]%)" constructor="true" tiptext="Creates an Event object that contains information about autoLayout events." version="1.0" playername="" helpurl="fl.video:AutoLayoutEvent:AutoLayoutEvent"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class AutoLayoutEvent" helpurl="fl.video:AutoLayoutEvent">
                <string name="AUTO_LAYOUT" object="[fl.video.AutoLayoutEvent]" text="AutoLayoutEvent.AUTO_LAYOUT" constant="true" tiptext="Defines the value of the type property of an autoLayout event object." version="" playername="" helpurl="fl.video:AutoLayoutEvent:AUTO_LAYOUT"/>
                <string name="vp" object="[fl.video.AutoLayoutEvent]" text=".vp" tiptext="The index of the VideoPlayer object involved in this event." version="" playername="" helpurl="fl.video:AutoLayoutEvent:vp:get"/>
            </folder>
        </folder>
        <folder name="CaptionChangeEvent" id="[fl.video.CaptionChangeEvent]" sort="true" index="true" asAncestors="flash.events:Event,Object" tiptext="The CaptionChangeEvent is dispatched any time a caption is added or removed from the caption target text field." helpurl="fl.video:CaptionChangeEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class CaptionChangeEvent" helpurl="fl.video:CaptionChangeEvent">
                <string name="CaptionChangeEvent" object="[fl.video.CaptionChangeEvent]" text="new CaptionChangeEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,added:Boolean=true,captionCuePointObject:Object=null]%)" constructor="true" tiptext="Creates an Event object that contains information about captionChange events." version="9.0.28.0" playername="" helpurl="fl.video:CaptionChangeEvent:CaptionChangeEvent"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class CaptionChangeEvent" helpurl="fl.video:CaptionChangeEvent">
                <string name="CAPTION_CHANGE" object="[fl.video.CaptionChangeEvent]" text="CaptionChangeEvent.CAPTION_CHANGE" constant="true" tiptext="Defines the value of the type property of a captionChange event object." version="" playername="" helpurl="fl.video:CaptionChangeEvent:CAPTION_CHANGE"/>
                <string name="added" object="[fl.video.CaptionChangeEvent]" text=".added" tiptext="A Boolean value that determines whether the caption was added or removed." version="" playername="" helpurl="fl.video:CaptionChangeEvent:added:get"/>
                <string name="captionCuePointObject" object="[fl.video.CaptionChangeEvent]" text=".captionCuePointObject" tiptext="The cue point object for the caption that was added or removed." version="" playername="" helpurl="fl.video:CaptionChangeEvent:captionCuePointObject:get"/>
            </folder>
        </folder>
        <folder name="CaptionTargetEvent" id="[fl.video.CaptionTargetEvent]" sort="true" index="true" asAncestors="flash.events:Event,Object" tiptext="Type for the captionTargetCreated event, dispatched after the captionTargetCreated event is created automatically and before any captions have been added to it." helpurl="fl.video:CaptionTargetEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class CaptionTargetEvent" helpurl="fl.video:CaptionTargetEvent">
                <string name="CaptionTargetEvent" object="[fl.video.CaptionTargetEvent]" text="new CaptionTargetEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,captionTarget:flash.display:DisplayObject=null]%)" constructor="true" tiptext="Creates an Event object that contains information about caption target events." version="9.0.28.0" playername="" helpurl="fl.video:CaptionTargetEvent:CaptionTargetEvent"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class CaptionTargetEvent" helpurl="fl.video:CaptionTargetEvent">
                <string name="CAPTION_TARGET_CREATED" object="[fl.video.CaptionTargetEvent]" text="CaptionTargetEvent.CAPTION_TARGET_CREATED" constant="true" tiptext="The CaptionTargetEvent.CAPTION_TARGET_CREATED constant defines the value of the type property of a captionTargetCreated event object." version="" playername="" helpurl="fl.video:CaptionTargetEvent:CAPTION_TARGET_CREATED"/>
                <string name="captionTarget" object="[fl.video.CaptionTargetEvent]" text=".captionTarget" tiptext="The caption target from the FLVPlaybackCaptioning instance property of the same name." version="" playername="" helpurl="fl.video:CaptionTargetEvent:captionTarget:get"/>
            </folder>
        </folder>
        <folder name="CuePointType" id="[fl.video.CuePointType]" sort="true" index="true" asAncestors="Object" tiptext="The CuePointType class provides constant values for the type property on the info object of a MetadataEvent instance of type CUE_POINT." helpurl="fl.video:CuePointType">
            <folder name="Properties" id="Properties" tiptext="Properties for class CuePointType" helpurl="fl.video:CuePointType">
                <string name="ACTIONSCRIPT" object="[fl.video.CuePointType]" text="CuePointType.ACTIONSCRIPT" constant="true" tiptext="Defines the value of the type parameter of the findCuePoint() and findNearestCuePoint() methods." version="" playername="" helpurl="fl.video:CuePointType:ACTIONSCRIPT"/>
                <string name="ALL" object="[fl.video.CuePointType]" text="CuePointType.ALL" constant="true" tiptext="Defines the value of the type parameter of the findCuePoint() and findNearestCuePoint() methods." version="" playername="" helpurl="fl.video:CuePointType:ALL"/>
                <string name="EVENT" object="[fl.video.CuePointType]" text="CuePointType.EVENT" constant="true" tiptext="Defines the value of the type parameter of the findCuePoint() and findNearestCuePoint() methods." version="" playername="" helpurl="fl.video:CuePointType:EVENT"/>
                <string name="FLV" object="[fl.video.CuePointType]" text="CuePointType.FLV" constant="true" tiptext="Defines the value of the type parameter of the findCuePoint() and findNearestCuePoint() methods." version="" playername="" helpurl="fl.video:CuePointType:FLV"/>
                <string name="NAVIGATION" object="[fl.video.CuePointType]" text="CuePointType.NAVIGATION" constant="true" tiptext="Defines the value of the type parameter of the findCuePoint() and findNearestCuePoint() methods." version="" playername="" helpurl="fl.video:CuePointType:NAVIGATION"/>
            </folder>
        </folder>
        <folder name="FLVPlayback" id="[fl.video.FLVPlayback]" sort="true" index="true" asAncestors="flash.display:Sprite,flash.display:DisplayObjectContainer,flash.display:InteractiveObject,flash.display:DisplayObject,flash.events:EventDispatcher,Object" tiptext="FLVPlayback extends the Sprite class and wraps a VideoPlayer object." helpurl="fl.video:FLVPlayback">
            <folder name="Methods" id="Methods" tiptext="Methods for class FLVPlayback" helpurl="fl.video:FLVPlayback">
                <string name="FLVPlayback" object="[fl.video.FLVPlayback]" text="new FLVPlayback(%%)" constructor="true" tiptext="FLVPlayback constructor" version="1.0" playername="" helpurl="fl.video:FLVPlayback:FLVPlayback"/>
                <string name="addASCuePoint" object="[fl.video.FLVPlayback]" text=".addASCuePoint(%timeOrCuePoint:*[,name:String=null,parameters:Object=null]%):Object" tiptext="Adds an ActionScript cue point and has the same effect as adding an ActionScript cue point using the Cue Points dialog box, except that it occurs when an application executes rather than during application development." version="1.0" playername="" helpurl="fl.video:FLVPlayback:addASCuePoint"/>
                <string name="assignTabIndexes" object="[fl.video.FLVPlayback]" text=".assignTabIndexes(%startTabIndex:int%):int" tiptext="Assigns a tabIndex value to each of the FLVPlayback controls by sorting them by position horizontally left to right." version="1.0" playername="" helpurl="fl.video:FLVPlayback:assignTabIndexes"/>
                <string name="bringVideoPlayerToFront" object="[fl.video.FLVPlayback]" text=".bringVideoPlayerToFront(%index:uint%):void" tiptext="Brings a video player to the front of the stack of video players." version="1.0" playername="" helpurl="fl.video:FLVPlayback:bringVideoPlayerToFront"/>
                <string name="closeVideoPlayer" object="[fl.video.FLVPlayback]" text=".closeVideoPlayer(%index:uint%):void" tiptext="Closes NetStream and deletes the video player specified by the index parameter." version="1.0" playername="" helpurl="fl.video:FLVPlayback:closeVideoPlayer"/>
                <string name="enterFullScreenDisplayState" object="[fl.video.FLVPlayback]" text=".enterFullScreenDisplayState(%%):void" tiptext="Sets the FLVPlayback video player to full screen." version="9.0.115.0" playername="" helpurl="fl.video:FLVPlayback:enterFullScreenDisplayState"/>
                <string name="findCuePoint" object="[fl.video.FLVPlayback]" text=".findCuePoint(%timeNameOrCuePoint:*[,type:String=unknown]%):Object" tiptext="Finds the cue point of the type specified by the type parameter and having the time, name, or combination of time and name that you specify through the parameters." version="1.0" playername="" helpurl="fl.video:FLVPlayback:findCuePoint"/>
                <string name="findNearestCuePoint" object="[fl.video.FLVPlayback]" text=".findNearestCuePoint(%timeNameOrCuePoint:*[,type:String=unknown]%):Object" tiptext="Finds a cue point of the specified type that matches or is earlier than the time that you specify." version="1.0" playername="" helpurl="fl.video:FLVPlayback:findNearestCuePoint"/>
                <string name="findNextCuePointWithName" object="[fl.video.FLVPlayback]" text=".findNextCuePointWithName(%cuePoint:Object%):Object" tiptext="Finds the next cue point in my_cuePoint.array that has the same name as my_cuePoint.name." version="1.0" playername="" helpurl="fl.video:FLVPlayback:findNextCuePointWithName"/>
                <string name="getVideoPlayer" object="[fl.video.FLVPlayback]" text=".getVideoPlayer(%index:Number%):fl.video:VideoPlayer" tiptext="Gets the video player specified by the index parameter." version="1.0" playername="" helpurl="fl.video:FLVPlayback:getVideoPlayer"/>
                <string name="isFLVCuePointEnabled" object="[fl.video.FLVPlayback]" text=".isFLVCuePointEnabled(%timeNameOrCuePoint:*%):Boolean" tiptext="Returns false if the FLV file embedded cue point is disabled." version="1.0" playername="" helpurl="fl.video:FLVPlayback:isFLVCuePointEnabled"/>
                <string name="load" object="[fl.video.FLVPlayback]" text=".load(%source:String[,totalTime:Number=unknown,isLive:Boolean=false]%):void" tiptext="load method" version="1.0" playername="" helpurl="fl.video:FLVPlayback:load"/>
                <string name="pause" object="[fl.video.FLVPlayback]" text=".pause(%%):void" tiptext="pause method" version="1.0" playername="" helpurl="fl.video:FLVPlayback:pause"/>
                <string name="playWhenEnoughDownloaded" object="[fl.video.FLVPlayback]" text=".playWhenEnoughDownloaded(%%):void" tiptext="playWhenEnoughDownloaded method" version="1.0" playername="" helpurl="fl.video:FLVPlayback:playWhenEnoughDownloaded"/>
                <string name="play" object="[fl.video.FLVPlayback]" text=".play(%[source:String=null,totalTime:Number=unknown,isLive:Boolean=false]%):void" tiptext="play method" version="1.0" playername="" helpurl="fl.video:FLVPlayback:play"/>
                <string name="removeASCuePoint" object="[fl.video.FLVPlayback]" text=".removeASCuePoint(%timeNameOrCuePoint:*%):Object" tiptext="Removes an ActionScript cue point from the currently loaded FLV file." version="1.0" playername="" helpurl="fl.video:FLVPlayback:removeASCuePoint"/>
                <string name="seekPercent" object="[fl.video.FLVPlayback]" text=".seekPercent(%percent:Number%):void" tiptext="seekPercent method" version="1.0" playername="" helpurl="fl.video:FLVPlayback:seekPercent"/>
                <string name="seekSeconds" object="[fl.video.FLVPlayback]" text=".seekSeconds(%time:Number%):void" tiptext="seekSeconds method" version="1.0" playername="" helpurl="fl.video:FLVPlayback:seekSeconds"/>
                <string name="seekToNavCuePoint" object="[fl.video.FLVPlayback]" text=".seekToNavCuePoint(%timeNameOrCuePoint:*%):void" tiptext="Seeks to a navigation cue point that matches the specified time, name, or time and name." version="1.0" playername="" helpurl="fl.video:FLVPlayback:seekToNavCuePoint"/>
                <string name="seekToNextNavCuePoint" object="[fl.video.FLVPlayback]" text=".seekToNextNavCuePoint(%[time:Number=unknown]%):void" tiptext="Seeks to the next navigation cue point, based on the current value of the playheadTime property." version="1.0" playername="" helpurl="fl.video:FLVPlayback:seekToNextNavCuePoint"/>
                <string name="seekToPrevNavCuePoint" object="[fl.video.FLVPlayback]" text=".seekToPrevNavCuePoint(%[time:Number=unknown]%):void" tiptext="Seeks to the previous navigation cue point, based on the current value of the playheadTime property." version="1.0" playername="" helpurl="fl.video:FLVPlayback:seekToPrevNavCuePoint"/>
                <string name="seek" object="[fl.video.FLVPlayback]" text=".seek(%time:Number%):void" tiptext="seek method" version="1.0" playername="" helpurl="fl.video:FLVPlayback:seek"/>
                <string name="setFLVCuePointEnabled" object="[fl.video.FLVPlayback]" text=".setFLVCuePointEnabled(%enabled:Boolean,timeNameOrCuePoint:*%):Number" tiptext="Enables or disables one or more FLV file cue points." version="1.0" playername="" helpurl="fl.video:FLVPlayback:setFLVCuePointEnabled"/>
                <string name="setScale" object="[fl.video.FLVPlayback]" text=".setScale(%scaleX:Number,scaleY:Number%):void" tiptext="setScale method" version="1.0" playername="" helpurl="fl.video:FLVPlayback:setScale"/>
                <string name="setSize" object="[fl.video.FLVPlayback]" text=".setSize(%width:Number,height:Number%):void" tiptext="setSize method" version="1.0" playername="" helpurl="fl.video:FLVPlayback:setSize"/>
                <string name="stop" object="[fl.video.FLVPlayback]" text=".stop(%%):void" tiptext="stop method" version="1.0" playername="" helpurl="fl.video:FLVPlayback:stop"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class FLVPlayback" helpurl="fl.video:FLVPlayback">
                <string name="SHORT_VERSION" object="[fl.video.FLVPlayback]" text="FLVPlayback.SHORT_VERSION" constant="true" tiptext="State variable indicating the short version number of the component." version="" playername="" helpurl="fl.video:FLVPlayback:SHORT_VERSION"/>
                <string name="VERSION" object="[fl.video.FLVPlayback]" text="FLVPlayback.VERSION" constant="true" tiptext="State variable indicating the long version number of the component." version="" playername="" helpurl="fl.video:FLVPlayback:VERSION"/>
                <string name="activeVideoPlayerIndex" object="[fl.video.FLVPlayback]" text=".activeVideoPlayerIndex" tiptext="A number that specifies which video player instance is affected by other application  programming interfaces (APIs)." version="" playername="" helpurl="fl.video:FLVPlayback:activeVideoPlayerIndex:get"/>
                <string name="align" object="[fl.video.FLVPlayback]" text=".align" tiptext="Specifies the video layout when the scaleMode property is set to VideoScaleMode.MAINTAIN_ASPECT_RATIO or VideoScaleMode.NO_SCALE." version="" playername="" helpurl="fl.video:FLVPlayback:align:get"/>
                <string name="autoPlay" object="[fl.video.FLVPlayback]" text=".autoPlay" tiptext="A Boolean value that, if set to true, causes the FLV file to start playing automatically after the source property is set." version="" playername="" helpurl="fl.video:FLVPlayback:autoPlay:get"/>
                <string name="autoRewind" object="[fl.video.FLVPlayback]" text=".autoRewind" tiptext="A Boolean value that, if true, causes the FLV file to rewind to Frame 1 when play stops, either because the player reached the end of the stream or the stop() method was called." version="" playername="" helpurl="fl.video:FLVPlayback:autoRewind:get"/>
                <string name="backButton" object="[fl.video.FLVPlayback]" text=".backButton" tiptext="BackButton playback control." version="" playername="" helpurl="fl.video:FLVPlayback:backButton:get"/>
                <string name="bitrate" object="[fl.video.FLVPlayback]" text=".bitrate" tiptext="A number that specifies the bits per second at which to transfer the FLV file." version="" playername="" helpurl="fl.video:FLVPlayback:bitrate:get"/>
                <string name="bufferTime" object="[fl.video.FLVPlayback]" text=".bufferTime" tiptext="A number that specifies the number of seconds to buffer in memory before beginning to play a video stream." version="" playername="" helpurl="fl.video:FLVPlayback:bufferTime:get"/>
                <string name="bufferingBarHidesAndDisablesOthers" object="[fl.video.FLVPlayback]" text=".bufferingBarHidesAndDisablesOthers" tiptext="If set to true, hides the SeekBar control and disables the Play, Pause, PlayPause, BackButton and ForwardButton controls while the FLV file is in the buffering state." version="" playername="" helpurl="fl.video:FLVPlayback:bufferingBarHidesAndDisablesOthers:get"/>
                <string name="bufferingBar" object="[fl.video.FLVPlayback]" text=".bufferingBar" tiptext="Buffering bar control." version="" playername="" helpurl="fl.video:FLVPlayback:bufferingBar:get"/>
                <string name="buffering" object="[fl.video.FLVPlayback]" text=".buffering" tiptext="A Boolean value that is true if the video is in a buffering state." version="" playername="" helpurl="fl.video:FLVPlayback:buffering:get"/>
                <string name="bytesLoaded" object="[fl.video.FLVPlayback]" text=".bytesLoaded" tiptext="A number that indicates the extent of downloading, in number of bytes, for an HTTP download." version="" playername="" helpurl="fl.video:FLVPlayback:bytesLoaded:get"/>
                <string name="bytesTotal" object="[fl.video.FLVPlayback]" text=".bytesTotal" tiptext="A number that specifies the total number of bytes downloaded for an HTTP download." version="" playername="" helpurl="fl.video:FLVPlayback:bytesTotal:get"/>
                <string name="endTabIndex" object="[fl.video.FLVPlayback]" text=".endTabIndex" tiptext="Returns the next available tabIndex value after the FLVPlayback controls." version="" playername="" helpurl="fl.video:FLVPlayback:endTabIndex:get"/>
                <string name="forwardButton" object="[fl.video.FLVPlayback]" text=".forwardButton" tiptext="Forward button control." version="" playername="" helpurl="fl.video:FLVPlayback:forwardButton:get"/>
                <string name="fullScreenBackgroundColor" object="[fl.video.FLVPlayback]" text=".fullScreenBackgroundColor" tiptext="Background color used when in full-screen takeover mode." version="" playername="" helpurl="fl.video:FLVPlayback:fullScreenBackgroundColor:get"/>
                <string name="fullScreenButton" object="[fl.video.FLVPlayback]" text=".fullScreenButton" tiptext="FullScreen button control." version="" playername="" helpurl="fl.video:FLVPlayback:fullScreenButton:get"/>
                <string name="fullScreenSkinDelay" object="[fl.video.FLVPlayback]" text=".fullScreenSkinDelay" tiptext="Specifies the delay time in milliseconds to hide the skin." version="" playername="" helpurl="fl.video:FLVPlayback:fullScreenSkinDelay:get"/>
                <string name="fullScreenTakeOver" object="[fl.video.FLVPlayback]" text=".fullScreenTakeOver" tiptext="When the stage enters full-screen mode, the FLVPlayback component is on top of all content and takes over the entire screen." version="" playername="" helpurl="fl.video:FLVPlayback:fullScreenTakeOver:get"/>
                <string name="height" object="[fl.video.FLVPlayback]" text=".height" tiptext="A number that specifies the height of the FLVPlayback instance." version="" playername="" helpurl="fl.video:FLVPlayback:height:get"/>
                <string name="idleTimeout" object="[fl.video.FLVPlayback]" text=".idleTimeout" tiptext="The amount of time, in milliseconds, before Flash terminates an idle connection to Flash Media Server (FMS) because playing paused or stopped." version="" playername="" helpurl="fl.video:FLVPlayback:idleTimeout:get"/>
                <string name="isLive" object="[fl.video.FLVPlayback]" text=".isLive" tiptext="A Boolean value that is true if the video stream is live." version="" playername="" helpurl="fl.video:FLVPlayback:isLive:get"/>
                <string name="isRTMP" object="[fl.video.FLVPlayback]" text=".isRTMP" tiptext="A Boolean value that is true if the FLV file is streaming from Flash Media Server (FMS) using RTMP." version="" playername="" helpurl="fl.video:FLVPlayback:isRTMP:get"/>
                <string name="metadataLoaded" object="[fl.video.FLVPlayback]" text=".metadataLoaded" tiptext="A Boolean value that is true if a metadata packet has been encountered and processed or if the FLV file was encoded without the metadata packet." version="" playername="" helpurl="fl.video:FLVPlayback:metadataLoaded:get"/>
                <string name="metadata" object="[fl.video.FLVPlayback]" text=".metadata" tiptext="An object that is a metadata information packet that is received from a call to the NetSteam.onMetaData() callback method, if available." version="" playername="" helpurl="fl.video:FLVPlayback:metadata:get"/>
                <string name="muteButton" object="[fl.video.FLVPlayback]" text=".muteButton" tiptext="Mute button control." version="" playername="" helpurl="fl.video:FLVPlayback:muteButton:get"/>
                <string name="ncMgr" object="[fl.video.FLVPlayback]" text=".ncMgr" tiptext="An INCManager object that provides access to an instance of the class implementing INCManager, which is an interface to the NCManager class." version="" playername="" helpurl="fl.video:FLVPlayback:ncMgr:get"/>
                <string name="pauseButton" object="[fl.video.FLVPlayback]" text=".pauseButton" tiptext="Pause button control." version="" playername="" helpurl="fl.video:FLVPlayback:pauseButton:get"/>
                <string name="paused" object="[fl.video.FLVPlayback]" text=".paused" tiptext="A Boolean value that is true if the FLV file is in a paused state." version="" playername="" helpurl="fl.video:FLVPlayback:paused:get"/>
                <string name="playButton" object="[fl.video.FLVPlayback]" text=".playButton" tiptext="Play button control." version="" playername="" helpurl="fl.video:FLVPlayback:playButton:get"/>
                <string name="playPauseButton" object="[fl.video.FLVPlayback]" text=".playPauseButton" tiptext="Play/pause button control." version="" playername="" helpurl="fl.video:FLVPlayback:playPauseButton:get"/>
                <string name="playheadPercentage" object="[fl.video.FLVPlayback]" text=".playheadPercentage" tiptext="A number that specifies the current playheadTime as a percentage of the totalTime property." version="" playername="" helpurl="fl.video:FLVPlayback:playheadPercentage:get"/>
                <string name="playheadTime" object="[fl.video.FLVPlayback]" text=".playheadTime" tiptext="A number that is the current playhead time or position, measured in seconds, which can be a fractional value." version="" playername="" helpurl="fl.video:FLVPlayback:playheadTime:get"/>
                <string name="playheadUpdateInterval" object="[fl.video.FLVPlayback]" text=".playheadUpdateInterval" tiptext="A number that is the amount of time, in milliseconds, between each playheadUpdate event." version="" playername="" helpurl="fl.video:FLVPlayback:playheadUpdateInterval:get"/>
                <string name="playing" object="[fl.video.FLVPlayback]" text=".playing" tiptext="A Boolean value that is true if the FLV file is in the playing state." version="" playername="" helpurl="fl.video:FLVPlayback:playing:get"/>
                <string name="preferredHeight" object="[fl.video.FLVPlayback]" text=".preferredHeight" tiptext="A number that specifies the height of the source FLV file." version="" playername="" helpurl="fl.video:FLVPlayback:preferredHeight:get"/>
                <string name="preferredWidth" object="[fl.video.FLVPlayback]" text=".preferredWidth" tiptext="Gives the width of the source FLV file." version="" playername="" helpurl="fl.video:FLVPlayback:preferredWidth:get"/>
                <string name="progressInterval" object="[fl.video.FLVPlayback]" text=".progressInterval" tiptext="A number that is the amount of time, in milliseconds, between each progress event." version="" playername="" helpurl="fl.video:FLVPlayback:progressInterval:get"/>
                <string name="registrationHeight" object="[fl.video.FLVPlayback]" text=".registrationHeight" tiptext="The height used to align the video content when autoresizing." version="" playername="" helpurl="fl.video:FLVPlayback:registrationHeight:get"/>
                <string name="registrationWidth" object="[fl.video.FLVPlayback]" text=".registrationWidth" tiptext="The width used to align the video content when autoresizing." version="" playername="" helpurl="fl.video:FLVPlayback:registrationWidth:get"/>
                <string name="registrationX" object="[fl.video.FLVPlayback]" text=".registrationX" tiptext="The x coordinate used to align the video content when autoresizing." version="" playername="" helpurl="fl.video:FLVPlayback:registrationX:get"/>
                <string name="registrationY" object="[fl.video.FLVPlayback]" text=".registrationY" tiptext="The y coordinate used to align the video content when autoresizing." version="" playername="" helpurl="fl.video:FLVPlayback:registrationY:get"/>
                <string name="scaleMode" object="[fl.video.FLVPlayback]" text=".scaleMode" tiptext="Specifies how the video will resize after loading." version="" playername="" helpurl="fl.video:FLVPlayback:scaleMode:get"/>
                <string name="scaleX" object="[fl.video.FLVPlayback]" text=".scaleX" tiptext="A number that is the horizontal scale." version="" playername="" helpurl="fl.video:FLVPlayback:scaleX:get"/>
                <string name="scaleY" object="[fl.video.FLVPlayback]" text=".scaleY" tiptext="A number that is the vertical scale." version="" playername="" helpurl="fl.video:FLVPlayback:scaleY:get"/>
                <string name="scrubbing" object="[fl.video.FLVPlayback]" text=".scrubbing" tiptext="A Boolean value that is true if the user is scrubbing with the SeekBar and false otherwise." version="" playername="" helpurl="fl.video:FLVPlayback:scrubbing:get"/>
                <string name="seekBarInterval" object="[fl.video.FLVPlayback]" text=".seekBarInterval" tiptext="A number that specifies, in milliseconds, how often to check the SeekBar handle when scrubbing." version="" playername="" helpurl="fl.video:FLVPlayback:seekBarInterval:get"/>
                <string name="seekBarScrubTolerance" object="[fl.video.FLVPlayback]" text=".seekBarScrubTolerance" tiptext="A number that specifies how far a user can move the SeekBar handle before an update occurs." version="" playername="" helpurl="fl.video:FLVPlayback:seekBarScrubTolerance:get"/>
                <string name="seekBar" object="[fl.video.FLVPlayback]" text=".seekBar" tiptext="The SeekBar control." version="" playername="" helpurl="fl.video:FLVPlayback:seekBar:get"/>
                <string name="seekToPrevOffset" object="[fl.video.FLVPlayback]" text=".seekToPrevOffset" tiptext="The number of seconds that the seekToPrevNavCuePoint() method uses when it compares its time against the previous cue point." version="" playername="" helpurl="fl.video:FLVPlayback:seekToPrevOffset:get"/>
                <string name="skinAutoHide" object="[fl.video.FLVPlayback]" text=".skinAutoHide" tiptext="A Boolean value that, if true, hides the component skin when the mouse is not over the video." version="" playername="" helpurl="fl.video:FLVPlayback:skinAutoHide:get"/>
                <string name="skinBackgroundAlpha" object="[fl.video.FLVPlayback]" text=".skinBackgroundAlpha" tiptext="The alpha for the background of the skin." version="" playername="" helpurl="fl.video:FLVPlayback:skinBackgroundAlpha:get"/>
                <string name="skinBackgroundColor" object="[fl.video.FLVPlayback]" text=".skinBackgroundColor" tiptext="The color for the background of the skin (0xRRGGBB)." version="" playername="" helpurl="fl.video:FLVPlayback:skinBackgroundColor:get"/>
                <string name="skinFadeTime" object="[fl.video.FLVPlayback]" text=".skinFadeTime" tiptext="The amount of time in milliseconds that it takes for the skin to fade in or fade out when hiding or showing." version="" playername="" helpurl="fl.video:FLVPlayback:skinFadeTime:get"/>
                <string name="skinScaleMaximum" object="[fl.video.FLVPlayback]" text=".skinScaleMaximum" tiptext="This property specifies the largest multiple that FLVPlayback will use to scale upits skin when it enters full screen mode with a Flash Player that supportshardware acceleration." version="" playername="" helpurl="fl.video:FLVPlayback:skinScaleMaximum:get"/>
                <string name="skin" object="[fl.video.FLVPlayback]" text=".skin" tiptext="A string that specifies the URL to a skin SWF file." version="" playername="" helpurl="fl.video:FLVPlayback:skin:get"/>
                <string name="soundTransform" object="[fl.video.FLVPlayback]" text=".soundTransform" tiptext="Provides direct access to the VideoPlayer.soundTransform property to expose more sound control." version="" playername="" helpurl="fl.video:FLVPlayback:soundTransform:get"/>
                <string name="source" object="[fl.video.FLVPlayback]" text=".source" tiptext="A string that specifies the URL of the FLV file to stream and how to stream it." version="" playername="" helpurl="fl.video:FLVPlayback:source:get"/>
                <string name="startTabIndex" object="[fl.video.FLVPlayback]" text=".startTabIndex" tiptext="Returns the first tabIndex value for the FLVPlayback controls." version="" playername="" helpurl="fl.video:FLVPlayback:startTabIndex:get"/>
                <string name="stateResponsive" object="[fl.video.FLVPlayback]" text=".stateResponsive" tiptext="A Boolean value that is true if the state is responsive." version="" playername="" helpurl="fl.video:FLVPlayback:stateResponsive:get"/>
                <string name="state" object="[fl.video.FLVPlayback]" text=".state" tiptext="A string that specifies the state of the component." version="" playername="" helpurl="fl.video:FLVPlayback:state:get"/>
                <string name="stopButton" object="[fl.video.FLVPlayback]" text=".stopButton" tiptext="The Stop button control." version="" playername="" helpurl="fl.video:FLVPlayback:stopButton:get"/>
                <string name="stopped" object="[fl.video.FLVPlayback]" text=".stopped" tiptext="A Boolean value that is true if the state of the FLVPlayback instance is stopped." version="" playername="" helpurl="fl.video:FLVPlayback:stopped:get"/>
                <string name="totalTime" object="[fl.video.FLVPlayback]" text=".totalTime" tiptext="A number that is the total playing time for the video in seconds." version="" playername="" helpurl="fl.video:FLVPlayback:totalTime:get"/>
                <string name="visibleVideoPlayerIndex" object="[fl.video.FLVPlayback]" text=".visibleVideoPlayerIndex" tiptext="A number that you can use to manage multiple FLV file streams." version="" playername="" helpurl="fl.video:FLVPlayback:visibleVideoPlayerIndex:get"/>
                <string name="volumeBarInterval" object="[fl.video.FLVPlayback]" text=".volumeBarInterval" tiptext="A number that specifies, in milliseconds, how often to check the volume bar handle location when scrubbing." version="" playername="" helpurl="fl.video:FLVPlayback:volumeBarInterval:get"/>
                <string name="volumeBarScrubTolerance" object="[fl.video.FLVPlayback]" text=".volumeBarScrubTolerance" tiptext="A number that specifies how far a user can move the volume bar handle before an update occurs." version="" playername="" helpurl="fl.video:FLVPlayback:volumeBarScrubTolerance:get"/>
                <string name="volumeBar" object="[fl.video.FLVPlayback]" text=".volumeBar" tiptext="The volume bar control." version="" playername="" helpurl="fl.video:FLVPlayback:volumeBar:get"/>
                <string name="volume" object="[fl.video.FLVPlayback]" text=".volume" tiptext="A number in the range of 0 to 1 that indicates the volume control setting." version="" playername="" helpurl="fl.video:FLVPlayback:volume:get"/>
                <string name="width" object="[fl.video.FLVPlayback]" text=".width" tiptext="A number that specifies the width of the FLVPlayback instance on the Stage." version="" playername="" helpurl="fl.video:FLVPlayback:width:get"/>
                <string name="x" object="[fl.video.FLVPlayback]" text=".x" tiptext="A number that specifies the horizontal position (in pixels) of the video player." version="" playername="" helpurl="fl.video:FLVPlayback:x:get"/>
                <string name="y" object="[fl.video.FLVPlayback]" text=".y" tiptext="A number that specifies the vertical position (in pixels) of the video player." version="" playername="" helpurl="fl.video:FLVPlayback:y:get"/>
                <string name="cuePoints" object="[fl.video.FLVPlayback]" text=".cuePoints" tiptext="An array that describes ActionScript cue points and disabled embedded FLV file cue points." version="" playername="" helpurl="fl.video:FLVPlayback:cuePoints:set"/>
                <string name="preview" object="[fl.video.FLVPlayback]" text=".preview" tiptext="Only for live preview." version="" playername="" helpurl="fl.video:FLVPlayback:preview:set"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class FLVPlayback" helpurl="fl.video:FLVPlayback">
                <string name="soundUpdate" object="[fl.video.FLVPlayback]" text=".addEventListener(%type:String=SoundEvent.SOUND_UPDATE{SoundEvent.SOUND_UPDATE,VideoEvent.STOPPED_STATE_ENTERED,VideoEvent.STATE_CHANGE,VideoEvent.SKIN_LOADED,SkinErrorEvent.SKIN_ERROR,VideoEvent.SEEKED,VideoEvent.SCRUB_START,VideoEvent.SCRUB_FINISH,VideoEvent.REWIND,LayoutEvent.LAYOUT,VideoEvent.READY,VideoProgressEvent.PROGRESS,VideoEvent.PLAYHEAD_UPDATE,VideoEvent.PLAYING_STATE_ENTERED,VideoEvent.PAUSED_STATE_ENTERED,MetadataEvent.METADATA_RECEIVED,VideoEvent.FAST_FORWARD,MetadataEvent.CUE_POINT,VideoEvent.COMPLETE,VideoEvent.CLOSE,VideoEvent.BUFFERING_STATE_ENTERED,VideoEvent.AUTO_REWOUND,AutoLayoutEvent.AUTO_LAYOUT},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when sound changes by the user either moving the handle of the volumeBar control or setting the volume or soundTransform property." version="" playername="" helpurl="fl.video:FLVPlayback_fl.video.SoundEvent.SOUND_UPDATE_soundUpdate"/>
                <string name="stoppedStateEntered" object="[fl.video.FLVPlayback]" text=".addEventListener(%type:String=VideoEvent.STOPPED_STATE_ENTERED{SoundEvent.SOUND_UPDATE,VideoEvent.STOPPED_STATE_ENTERED,VideoEvent.STATE_CHANGE,VideoEvent.SKIN_LOADED,SkinErrorEvent.SKIN_ERROR,VideoEvent.SEEKED,VideoEvent.SCRUB_START,VideoEvent.SCRUB_FINISH,VideoEvent.REWIND,LayoutEvent.LAYOUT,VideoEvent.READY,VideoProgressEvent.PROGRESS,VideoEvent.PLAYHEAD_UPDATE,VideoEvent.PLAYING_STATE_ENTERED,VideoEvent.PAUSED_STATE_ENTERED,MetadataEvent.METADATA_RECEIVED,VideoEvent.FAST_FORWARD,MetadataEvent.CUE_POINT,VideoEvent.COMPLETE,VideoEvent.CLOSE,VideoEvent.BUFFERING_STATE_ENTERED,VideoEvent.AUTO_REWOUND,AutoLayoutEvent.AUTO_LAYOUT},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when entering the stopped state." version="" playername="" helpurl="fl.video:FLVPlayback_fl.video.VideoEvent.STOPPED_STATE_ENTERED_stoppedStateEntered"/>
                <string name="stateChange" object="[fl.video.FLVPlayback]" text=".addEventListener(%type:String=VideoEvent.STATE_CHANGE{SoundEvent.SOUND_UPDATE,VideoEvent.STOPPED_STATE_ENTERED,VideoEvent.STATE_CHANGE,VideoEvent.SKIN_LOADED,SkinErrorEvent.SKIN_ERROR,VideoEvent.SEEKED,VideoEvent.SCRUB_START,VideoEvent.SCRUB_FINISH,VideoEvent.REWIND,LayoutEvent.LAYOUT,VideoEvent.READY,VideoProgressEvent.PROGRESS,VideoEvent.PLAYHEAD_UPDATE,VideoEvent.PLAYING_STATE_ENTERED,VideoEvent.PAUSED_STATE_ENTERED,MetadataEvent.METADATA_RECEIVED,VideoEvent.FAST_FORWARD,MetadataEvent.CUE_POINT,VideoEvent.COMPLETE,VideoEvent.CLOSE,VideoEvent.BUFFERING_STATE_ENTERED,VideoEvent.AUTO_REWOUND,AutoLayoutEvent.AUTO_LAYOUT},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the playback state changes." version="" playername="" helpurl="fl.video:FLVPlayback_fl.video.VideoEvent.STATE_CHANGE_stateChange"/>
                <string name="skinLoaded" object="[fl.video.FLVPlayback]" text=".addEventListener(%type:String=VideoEvent.SKIN_LOADED{SoundEvent.SOUND_UPDATE,VideoEvent.STOPPED_STATE_ENTERED,VideoEvent.STATE_CHANGE,VideoEvent.SKIN_LOADED,SkinErrorEvent.SKIN_ERROR,VideoEvent.SEEKED,VideoEvent.SCRUB_START,VideoEvent.SCRUB_FINISH,VideoEvent.REWIND,LayoutEvent.LAYOUT,VideoEvent.READY,VideoProgressEvent.PROGRESS,VideoEvent.PLAYHEAD_UPDATE,VideoEvent.PLAYING_STATE_ENTERED,VideoEvent.PAUSED_STATE_ENTERED,MetadataEvent.METADATA_RECEIVED,VideoEvent.FAST_FORWARD,MetadataEvent.CUE_POINT,VideoEvent.COMPLETE,VideoEvent.CLOSE,VideoEvent.BUFFERING_STATE_ENTERED,VideoEvent.AUTO_REWOUND,AutoLayoutEvent.AUTO_LAYOUT},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a skin SWF file is loaded." version="" playername="" helpurl="fl.video:FLVPlayback_fl.video.VideoEvent.SKIN_LOADED_skinLoaded"/>
                <string name="skinError" object="[fl.video.FLVPlayback]" text=".addEventListener(%type:String=SkinErrorEvent.SKIN_ERROR{SoundEvent.SOUND_UPDATE,VideoEvent.STOPPED_STATE_ENTERED,VideoEvent.STATE_CHANGE,VideoEvent.SKIN_LOADED,SkinErrorEvent.SKIN_ERROR,VideoEvent.SEEKED,VideoEvent.SCRUB_START,VideoEvent.SCRUB_FINISH,VideoEvent.REWIND,LayoutEvent.LAYOUT,VideoEvent.READY,VideoProgressEvent.PROGRESS,VideoEvent.PLAYHEAD_UPDATE,VideoEvent.PLAYING_STATE_ENTERED,VideoEvent.PAUSED_STATE_ENTERED,MetadataEvent.METADATA_RECEIVED,VideoEvent.FAST_FORWARD,MetadataEvent.CUE_POINT,VideoEvent.COMPLETE,VideoEvent.CLOSE,VideoEvent.BUFFERING_STATE_ENTERED,VideoEvent.AUTO_REWOUND,AutoLayoutEvent.AUTO_LAYOUT},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when an error occurs loading a skin SWF file." version="" playername="" helpurl="fl.video:FLVPlayback_fl.video.SkinErrorEvent.SKIN_ERROR_skinError"/>
                <string name="seeked" object="[fl.video.FLVPlayback]" text=".addEventListener(%type:String=VideoEvent.SEEKED{SoundEvent.SOUND_UPDATE,VideoEvent.STOPPED_STATE_ENTERED,VideoEvent.STATE_CHANGE,VideoEvent.SKIN_LOADED,SkinErrorEvent.SKIN_ERROR,VideoEvent.SEEKED,VideoEvent.SCRUB_START,VideoEvent.SCRUB_FINISH,VideoEvent.REWIND,LayoutEvent.LAYOUT,VideoEvent.READY,VideoProgressEvent.PROGRESS,VideoEvent.PLAYHEAD_UPDATE,VideoEvent.PLAYING_STATE_ENTERED,VideoEvent.PAUSED_STATE_ENTERED,MetadataEvent.METADATA_RECEIVED,VideoEvent.FAST_FORWARD,MetadataEvent.CUE_POINT,VideoEvent.COMPLETE,VideoEvent.CLOSE,VideoEvent.BUFFERING_STATE_ENTERED,VideoEvent.AUTO_REWOUND,AutoLayoutEvent.AUTO_LAYOUT},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the location of the playhead is changed by a call to seek() or by setting the playheadTime property or by using the SeekBar control." version="" playername="" helpurl="fl.video:FLVPlayback_fl.video.VideoEvent.SEEKED_seeked"/>
                <string name="scrubStart" object="[fl.video.FLVPlayback]" text=".addEventListener(%type:String=VideoEvent.SCRUB_START{SoundEvent.SOUND_UPDATE,VideoEvent.STOPPED_STATE_ENTERED,VideoEvent.STATE_CHANGE,VideoEvent.SKIN_LOADED,SkinErrorEvent.SKIN_ERROR,VideoEvent.SEEKED,VideoEvent.SCRUB_START,VideoEvent.SCRUB_FINISH,VideoEvent.REWIND,LayoutEvent.LAYOUT,VideoEvent.READY,VideoProgressEvent.PROGRESS,VideoEvent.PLAYHEAD_UPDATE,VideoEvent.PLAYING_STATE_ENTERED,VideoEvent.PAUSED_STATE_ENTERED,MetadataEvent.METADATA_RECEIVED,VideoEvent.FAST_FORWARD,MetadataEvent.CUE_POINT,VideoEvent.COMPLETE,VideoEvent.CLOSE,VideoEvent.BUFFERING_STATE_ENTERED,VideoEvent.AUTO_REWOUND,AutoLayoutEvent.AUTO_LAYOUT},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user begins scrubbing the FLV file with the seek bar." version="" playername="" helpurl="fl.video:FLVPlayback_fl.video.VideoEvent.SCRUB_START_scrubStart"/>
                <string name="scrubFinish" object="[fl.video.FLVPlayback]" text=".addEventListener(%type:String=VideoEvent.SCRUB_FINISH{SoundEvent.SOUND_UPDATE,VideoEvent.STOPPED_STATE_ENTERED,VideoEvent.STATE_CHANGE,VideoEvent.SKIN_LOADED,SkinErrorEvent.SKIN_ERROR,VideoEvent.SEEKED,VideoEvent.SCRUB_START,VideoEvent.SCRUB_FINISH,VideoEvent.REWIND,LayoutEvent.LAYOUT,VideoEvent.READY,VideoProgressEvent.PROGRESS,VideoEvent.PLAYHEAD_UPDATE,VideoEvent.PLAYING_STATE_ENTERED,VideoEvent.PAUSED_STATE_ENTERED,MetadataEvent.METADATA_RECEIVED,VideoEvent.FAST_FORWARD,MetadataEvent.CUE_POINT,VideoEvent.COMPLETE,VideoEvent.CLOSE,VideoEvent.BUFFERING_STATE_ENTERED,VideoEvent.AUTO_REWOUND,AutoLayoutEvent.AUTO_LAYOUT},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user stops scrubbing the FLV file with the seek bar." version="" playername="" helpurl="fl.video:FLVPlayback_fl.video.VideoEvent.SCRUB_FINISH_scrubFinish"/>
                <string name="rewind" object="[fl.video.FLVPlayback]" text=".addEventListener(%type:String=VideoEvent.REWIND{SoundEvent.SOUND_UPDATE,VideoEvent.STOPPED_STATE_ENTERED,VideoEvent.STATE_CHANGE,VideoEvent.SKIN_LOADED,SkinErrorEvent.SKIN_ERROR,VideoEvent.SEEKED,VideoEvent.SCRUB_START,VideoEvent.SCRUB_FINISH,VideoEvent.REWIND,LayoutEvent.LAYOUT,VideoEvent.READY,VideoProgressEvent.PROGRESS,VideoEvent.PLAYHEAD_UPDATE,VideoEvent.PLAYING_STATE_ENTERED,VideoEvent.PAUSED_STATE_ENTERED,MetadataEvent.METADATA_RECEIVED,VideoEvent.FAST_FORWARD,MetadataEvent.CUE_POINT,VideoEvent.COMPLETE,VideoEvent.CLOSE,VideoEvent.BUFFERING_STATE_ENTERED,VideoEvent.AUTO_REWOUND,AutoLayoutEvent.AUTO_LAYOUT},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the location of the playhead moves backward by a call to seek() or when an autoRewind call is completed." version="" playername="" helpurl="fl.video:FLVPlayback_fl.video.VideoEvent.REWIND_rewind"/>
                <string name="layout" object="[fl.video.FLVPlayback]" text=".addEventListener(%type:String=LayoutEvent.LAYOUT{SoundEvent.SOUND_UPDATE,VideoEvent.STOPPED_STATE_ENTERED,VideoEvent.STATE_CHANGE,VideoEvent.SKIN_LOADED,SkinErrorEvent.SKIN_ERROR,VideoEvent.SEEKED,VideoEvent.SCRUB_START,VideoEvent.SCRUB_FINISH,VideoEvent.REWIND,LayoutEvent.LAYOUT,VideoEvent.READY,VideoProgressEvent.PROGRESS,VideoEvent.PLAYHEAD_UPDATE,VideoEvent.PLAYING_STATE_ENTERED,VideoEvent.PAUSED_STATE_ENTERED,MetadataEvent.METADATA_RECEIVED,VideoEvent.FAST_FORWARD,MetadataEvent.CUE_POINT,VideoEvent.COMPLETE,VideoEvent.CLOSE,VideoEvent.BUFFERING_STATE_ENTERED,VideoEvent.AUTO_REWOUND,AutoLayoutEvent.AUTO_LAYOUT},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the video player is resized or laid out." version="" playername="" helpurl="fl.video:FLVPlayback_fl.video.LayoutEvent.LAYOUT_layout"/>
                <string name="ready" object="[fl.video.FLVPlayback]" text=".addEventListener(%type:String=VideoEvent.READY{SoundEvent.SOUND_UPDATE,VideoEvent.STOPPED_STATE_ENTERED,VideoEvent.STATE_CHANGE,VideoEvent.SKIN_LOADED,SkinErrorEvent.SKIN_ERROR,VideoEvent.SEEKED,VideoEvent.SCRUB_START,VideoEvent.SCRUB_FINISH,VideoEvent.REWIND,LayoutEvent.LAYOUT,VideoEvent.READY,VideoProgressEvent.PROGRESS,VideoEvent.PLAYHEAD_UPDATE,VideoEvent.PLAYING_STATE_ENTERED,VideoEvent.PAUSED_STATE_ENTERED,MetadataEvent.METADATA_RECEIVED,VideoEvent.FAST_FORWARD,MetadataEvent.CUE_POINT,VideoEvent.COMPLETE,VideoEvent.CLOSE,VideoEvent.BUFFERING_STATE_ENTERED,VideoEvent.AUTO_REWOUND,AutoLayoutEvent.AUTO_LAYOUT},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when an FLV file is loaded and ready to display." version="" playername="" helpurl="fl.video:FLVPlayback_fl.video.VideoEvent.READY_ready"/>
                <string name="progress" object="[fl.video.FLVPlayback]" text=".addEventListener(%type:String=VideoProgressEvent.PROGRESS{SoundEvent.SOUND_UPDATE,VideoEvent.STOPPED_STATE_ENTERED,VideoEvent.STATE_CHANGE,VideoEvent.SKIN_LOADED,SkinErrorEvent.SKIN_ERROR,VideoEvent.SEEKED,VideoEvent.SCRUB_START,VideoEvent.SCRUB_FINISH,VideoEvent.REWIND,LayoutEvent.LAYOUT,VideoEvent.READY,VideoProgressEvent.PROGRESS,VideoEvent.PLAYHEAD_UPDATE,VideoEvent.PLAYING_STATE_ENTERED,VideoEvent.PAUSED_STATE_ENTERED,MetadataEvent.METADATA_RECEIVED,VideoEvent.FAST_FORWARD,MetadataEvent.CUE_POINT,VideoEvent.COMPLETE,VideoEvent.CLOSE,VideoEvent.BUFFERING_STATE_ENTERED,VideoEvent.AUTO_REWOUND,AutoLayoutEvent.AUTO_LAYOUT},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Indicates progress made in number of bytes downloaded." version="" playername="" helpurl="fl.video:FLVPlayback_fl.video.VideoProgressEvent.PROGRESS_progress"/>
                <string name="playheadUpdate" object="[fl.video.FLVPlayback]" text=".addEventListener(%type:String=VideoEvent.PLAYHEAD_UPDATE{SoundEvent.SOUND_UPDATE,VideoEvent.STOPPED_STATE_ENTERED,VideoEvent.STATE_CHANGE,VideoEvent.SKIN_LOADED,SkinErrorEvent.SKIN_ERROR,VideoEvent.SEEKED,VideoEvent.SCRUB_START,VideoEvent.SCRUB_FINISH,VideoEvent.REWIND,LayoutEvent.LAYOUT,VideoEvent.READY,VideoProgressEvent.PROGRESS,VideoEvent.PLAYHEAD_UPDATE,VideoEvent.PLAYING_STATE_ENTERED,VideoEvent.PAUSED_STATE_ENTERED,MetadataEvent.METADATA_RECEIVED,VideoEvent.FAST_FORWARD,MetadataEvent.CUE_POINT,VideoEvent.COMPLETE,VideoEvent.CLOSE,VideoEvent.BUFFERING_STATE_ENTERED,VideoEvent.AUTO_REWOUND,AutoLayoutEvent.AUTO_LAYOUT},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched while the FLV file is playing at the frequency specified by the playheadUpdateInterval property or when rewinding starts." version="" playername="" helpurl="fl.video:FLVPlayback_fl.video.VideoEvent.PLAYHEAD_UPDATE_playheadUpdate"/>
                <string name="playingStateEntered" object="[fl.video.FLVPlayback]" text=".addEventListener(%type:String=VideoEvent.PLAYING_STATE_ENTERED{SoundEvent.SOUND_UPDATE,VideoEvent.STOPPED_STATE_ENTERED,VideoEvent.STATE_CHANGE,VideoEvent.SKIN_LOADED,SkinErrorEvent.SKIN_ERROR,VideoEvent.SEEKED,VideoEvent.SCRUB_START,VideoEvent.SCRUB_FINISH,VideoEvent.REWIND,LayoutEvent.LAYOUT,VideoEvent.READY,VideoProgressEvent.PROGRESS,VideoEvent.PLAYHEAD_UPDATE,VideoEvent.PLAYING_STATE_ENTERED,VideoEvent.PAUSED_STATE_ENTERED,MetadataEvent.METADATA_RECEIVED,VideoEvent.FAST_FORWARD,MetadataEvent.CUE_POINT,VideoEvent.COMPLETE,VideoEvent.CLOSE,VideoEvent.BUFFERING_STATE_ENTERED,VideoEvent.AUTO_REWOUND,AutoLayoutEvent.AUTO_LAYOUT},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the playing state is entered." version="" playername="" helpurl="fl.video:FLVPlayback_fl.video.VideoEvent.PLAYING_STATE_ENTERED_playingStateEntered"/>
                <string name="pausedStateEntered" object="[fl.video.FLVPlayback]" text=".addEventListener(%type:String=VideoEvent.PAUSED_STATE_ENTERED{SoundEvent.SOUND_UPDATE,VideoEvent.STOPPED_STATE_ENTERED,VideoEvent.STATE_CHANGE,VideoEvent.SKIN_LOADED,SkinErrorEvent.SKIN_ERROR,VideoEvent.SEEKED,VideoEvent.SCRUB_START,VideoEvent.SCRUB_FINISH,VideoEvent.REWIND,LayoutEvent.LAYOUT,VideoEvent.READY,VideoProgressEvent.PROGRESS,VideoEvent.PLAYHEAD_UPDATE,VideoEvent.PLAYING_STATE_ENTERED,VideoEvent.PAUSED_STATE_ENTERED,MetadataEvent.METADATA_RECEIVED,VideoEvent.FAST_FORWARD,MetadataEvent.CUE_POINT,VideoEvent.COMPLETE,VideoEvent.CLOSE,VideoEvent.BUFFERING_STATE_ENTERED,VideoEvent.AUTO_REWOUND,AutoLayoutEvent.AUTO_LAYOUT},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the player enters the paused state." version="" playername="" helpurl="fl.video:FLVPlayback_fl.video.VideoEvent.PAUSED_STATE_ENTERED_pausedStateEntered"/>
                <string name="metadataReceived" object="[fl.video.FLVPlayback]" text=".addEventListener(%type:String=MetadataEvent.METADATA_RECEIVED{SoundEvent.SOUND_UPDATE,VideoEvent.STOPPED_STATE_ENTERED,VideoEvent.STATE_CHANGE,VideoEvent.SKIN_LOADED,SkinErrorEvent.SKIN_ERROR,VideoEvent.SEEKED,VideoEvent.SCRUB_START,VideoEvent.SCRUB_FINISH,VideoEvent.REWIND,LayoutEvent.LAYOUT,VideoEvent.READY,VideoProgressEvent.PROGRESS,VideoEvent.PLAYHEAD_UPDATE,VideoEvent.PLAYING_STATE_ENTERED,VideoEvent.PAUSED_STATE_ENTERED,MetadataEvent.METADATA_RECEIVED,VideoEvent.FAST_FORWARD,MetadataEvent.CUE_POINT,VideoEvent.COMPLETE,VideoEvent.CLOSE,VideoEvent.BUFFERING_STATE_ENTERED,VideoEvent.AUTO_REWOUND,AutoLayoutEvent.AUTO_LAYOUT},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched the first time the FLV file&apos;s metadata is reached." version="" playername="" helpurl="fl.video:FLVPlayback_fl.video.MetadataEvent.METADATA_RECEIVED_metadataReceived"/>
                <string name="fastForward" object="[fl.video.FLVPlayback]" text=".addEventListener(%type:String=VideoEvent.FAST_FORWARD{SoundEvent.SOUND_UPDATE,VideoEvent.STOPPED_STATE_ENTERED,VideoEvent.STATE_CHANGE,VideoEvent.SKIN_LOADED,SkinErrorEvent.SKIN_ERROR,VideoEvent.SEEKED,VideoEvent.SCRUB_START,VideoEvent.SCRUB_FINISH,VideoEvent.REWIND,LayoutEvent.LAYOUT,VideoEvent.READY,VideoProgressEvent.PROGRESS,VideoEvent.PLAYHEAD_UPDATE,VideoEvent.PLAYING_STATE_ENTERED,VideoEvent.PAUSED_STATE_ENTERED,MetadataEvent.METADATA_RECEIVED,VideoEvent.FAST_FORWARD,MetadataEvent.CUE_POINT,VideoEvent.COMPLETE,VideoEvent.CLOSE,VideoEvent.BUFFERING_STATE_ENTERED,VideoEvent.AUTO_REWOUND,AutoLayoutEvent.AUTO_LAYOUT},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the location of the playhead moves forward by a call to the seek() method or by clicking the ForwardButton control." version="" playername="" helpurl="fl.video:FLVPlayback_fl.video.VideoEvent.FAST_FORWARD_fastForward"/>
                <string name="cuePoint" object="[fl.video.FLVPlayback]" text=".addEventListener(%type:String=MetadataEvent.CUE_POINT{SoundEvent.SOUND_UPDATE,VideoEvent.STOPPED_STATE_ENTERED,VideoEvent.STATE_CHANGE,VideoEvent.SKIN_LOADED,SkinErrorEvent.SKIN_ERROR,VideoEvent.SEEKED,VideoEvent.SCRUB_START,VideoEvent.SCRUB_FINISH,VideoEvent.REWIND,LayoutEvent.LAYOUT,VideoEvent.READY,VideoProgressEvent.PROGRESS,VideoEvent.PLAYHEAD_UPDATE,VideoEvent.PLAYING_STATE_ENTERED,VideoEvent.PAUSED_STATE_ENTERED,MetadataEvent.METADATA_RECEIVED,VideoEvent.FAST_FORWARD,MetadataEvent.CUE_POINT,VideoEvent.COMPLETE,VideoEvent.CLOSE,VideoEvent.BUFFERING_STATE_ENTERED,VideoEvent.AUTO_REWOUND,AutoLayoutEvent.AUTO_LAYOUT},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a cue point is reached." version="" playername="" helpurl="fl.video:FLVPlayback_fl.video.MetadataEvent.CUE_POINT_cuePoint"/>
                <string name="complete" object="[fl.video.FLVPlayback]" text=".addEventListener(%type:String=VideoEvent.COMPLETE{SoundEvent.SOUND_UPDATE,VideoEvent.STOPPED_STATE_ENTERED,VideoEvent.STATE_CHANGE,VideoEvent.SKIN_LOADED,SkinErrorEvent.SKIN_ERROR,VideoEvent.SEEKED,VideoEvent.SCRUB_START,VideoEvent.SCRUB_FINISH,VideoEvent.REWIND,LayoutEvent.LAYOUT,VideoEvent.READY,VideoProgressEvent.PROGRESS,VideoEvent.PLAYHEAD_UPDATE,VideoEvent.PLAYING_STATE_ENTERED,VideoEvent.PAUSED_STATE_ENTERED,MetadataEvent.METADATA_RECEIVED,VideoEvent.FAST_FORWARD,MetadataEvent.CUE_POINT,VideoEvent.COMPLETE,VideoEvent.CLOSE,VideoEvent.BUFFERING_STATE_ENTERED,VideoEvent.AUTO_REWOUND,AutoLayoutEvent.AUTO_LAYOUT},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when playing completes because the player reached the end of the FLV file." version="" playername="" helpurl="fl.video:FLVPlayback_fl.video.VideoEvent.COMPLETE_complete"/>
                <string name="close" object="[fl.video.FLVPlayback]" text=".addEventListener(%type:String=VideoEvent.CLOSE{SoundEvent.SOUND_UPDATE,VideoEvent.STOPPED_STATE_ENTERED,VideoEvent.STATE_CHANGE,VideoEvent.SKIN_LOADED,SkinErrorEvent.SKIN_ERROR,VideoEvent.SEEKED,VideoEvent.SCRUB_START,VideoEvent.SCRUB_FINISH,VideoEvent.REWIND,LayoutEvent.LAYOUT,VideoEvent.READY,VideoProgressEvent.PROGRESS,VideoEvent.PLAYHEAD_UPDATE,VideoEvent.PLAYING_STATE_ENTERED,VideoEvent.PAUSED_STATE_ENTERED,MetadataEvent.METADATA_RECEIVED,VideoEvent.FAST_FORWARD,MetadataEvent.CUE_POINT,VideoEvent.COMPLETE,VideoEvent.CLOSE,VideoEvent.BUFFERING_STATE_ENTERED,VideoEvent.AUTO_REWOUND,AutoLayoutEvent.AUTO_LAYOUT},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the event object closes the NetConnection, by timing out or through a call to the closeVideoPlayer() method or when you call the load() or play() methods or set the source property and cause the RTMP connection to close as a result." version="" playername="" helpurl="fl.video:FLVPlayback_fl.video.VideoEvent.CLOSE_close"/>
                <string name="bufferingStateEntered" object="[fl.video.FLVPlayback]" text=".addEventListener(%type:String=VideoEvent.BUFFERING_STATE_ENTERED{SoundEvent.SOUND_UPDATE,VideoEvent.STOPPED_STATE_ENTERED,VideoEvent.STATE_CHANGE,VideoEvent.SKIN_LOADED,SkinErrorEvent.SKIN_ERROR,VideoEvent.SEEKED,VideoEvent.SCRUB_START,VideoEvent.SCRUB_FINISH,VideoEvent.REWIND,LayoutEvent.LAYOUT,VideoEvent.READY,VideoProgressEvent.PROGRESS,VideoEvent.PLAYHEAD_UPDATE,VideoEvent.PLAYING_STATE_ENTERED,VideoEvent.PAUSED_STATE_ENTERED,MetadataEvent.METADATA_RECEIVED,VideoEvent.FAST_FORWARD,MetadataEvent.CUE_POINT,VideoEvent.COMPLETE,VideoEvent.CLOSE,VideoEvent.BUFFERING_STATE_ENTERED,VideoEvent.AUTO_REWOUND,AutoLayoutEvent.AUTO_LAYOUT},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the FLVPlayback instance enters the buffering state." version="" playername="" helpurl="fl.video:FLVPlayback_fl.video.VideoEvent.BUFFERING_STATE_ENTERED_bufferingStateEntered"/>
                <string name="autoRewound" object="[fl.video.FLVPlayback]" text=".addEventListener(%type:String=VideoEvent.AUTO_REWOUND{SoundEvent.SOUND_UPDATE,VideoEvent.STOPPED_STATE_ENTERED,VideoEvent.STATE_CHANGE,VideoEvent.SKIN_LOADED,SkinErrorEvent.SKIN_ERROR,VideoEvent.SEEKED,VideoEvent.SCRUB_START,VideoEvent.SCRUB_FINISH,VideoEvent.REWIND,LayoutEvent.LAYOUT,VideoEvent.READY,VideoProgressEvent.PROGRESS,VideoEvent.PLAYHEAD_UPDATE,VideoEvent.PLAYING_STATE_ENTERED,VideoEvent.PAUSED_STATE_ENTERED,MetadataEvent.METADATA_RECEIVED,VideoEvent.FAST_FORWARD,MetadataEvent.CUE_POINT,VideoEvent.COMPLETE,VideoEvent.CLOSE,VideoEvent.BUFFERING_STATE_ENTERED,VideoEvent.AUTO_REWOUND,AutoLayoutEvent.AUTO_LAYOUT},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the playhead is moved to the start of the video player because the autoRewind property is set to true." version="" playername="" helpurl="fl.video:FLVPlayback_fl.video.VideoEvent.AUTO_REWOUND_autoRewound"/>
                <string name="autoLayout" object="[fl.video.FLVPlayback]" text=".addEventListener(%type:String=AutoLayoutEvent.AUTO_LAYOUT{SoundEvent.SOUND_UPDATE,VideoEvent.STOPPED_STATE_ENTERED,VideoEvent.STATE_CHANGE,VideoEvent.SKIN_LOADED,SkinErrorEvent.SKIN_ERROR,VideoEvent.SEEKED,VideoEvent.SCRUB_START,VideoEvent.SCRUB_FINISH,VideoEvent.REWIND,LayoutEvent.LAYOUT,VideoEvent.READY,VideoProgressEvent.PROGRESS,VideoEvent.PLAYHEAD_UPDATE,VideoEvent.PLAYING_STATE_ENTERED,VideoEvent.PAUSED_STATE_ENTERED,MetadataEvent.METADATA_RECEIVED,VideoEvent.FAST_FORWARD,MetadataEvent.CUE_POINT,VideoEvent.COMPLETE,VideoEvent.CLOSE,VideoEvent.BUFFERING_STATE_ENTERED,VideoEvent.AUTO_REWOUND,AutoLayoutEvent.AUTO_LAYOUT},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the video player is resized or laid out automatically." version="" playername="" helpurl="fl.video:FLVPlayback_fl.video.AutoLayoutEvent.AUTO_LAYOUT_autoLayout"/>
            </folder>
        </folder>
        <folder name="FLVPlaybackCaptioning" id="[fl.video.FLVPlaybackCaptioning]" sort="true" index="true" asAncestors="flash.display:Sprite,flash.display:DisplayObjectContainer,flash.display:InteractiveObject,flash.display:DisplayObject,flash.events:EventDispatcher,Object" tiptext="The FLVPlaybackCaptioning component enables captioning for the FLVPlayback component." helpurl="fl.video:FLVPlaybackCaptioning">
            <folder name="Methods" id="Methods" tiptext="Methods for class FLVPlaybackCaptioning" helpurl="fl.video:FLVPlaybackCaptioning">
                <string name="FLVPlaybackCaptioning" object="[fl.video.FLVPlaybackCaptioning]" text="new FLVPlaybackCaptioning(%%)" constructor="true" tiptext="Creates a new FLVPlaybackCaptioning instance." version="9.0.28.0" playername="" helpurl="fl.video:FLVPlaybackCaptioning:FLVPlaybackCaptioning"/>
                <string name="findInCaptions" object="[fl.video.FLVPlaybackCaptioning]" text=".findInCaptions(%searchString:String%):Array" tiptext="Returns an array of FLVPlayback component cuepoints whose caption text contains the search string." version="9.0.28.0" playername="" helpurl="fl.video:FLVPlaybackCaptioning:findInCaptions"/>
                <string name="getCaptionsAsArray" object="[fl.video.FLVPlaybackCaptioning]" text=".getCaptionsAsArray(%%):Array" tiptext="Returns an array of FLVPlayback component cuepoints that contain the captions." version="9.0.28.0" playername="" helpurl="fl.video:FLVPlaybackCaptioning:getCaptionsAsArray"/>
                <string name="getCaptionsAsTranscript" object="[fl.video.FLVPlaybackCaptioning]" text=".getCaptionsAsTranscript(%[preserveFormatting:Boolean=false]%):String" tiptext="Returns a string containing all captions as an HTML-formatted transcript." version="9.0.28.0" playername="" helpurl="fl.video:FLVPlaybackCaptioning:getCaptionsAsTranscript"/>
                <string name="secondsToTime" object="[fl.video.FLVPlaybackCaptioning]" text=".secondsToTime(%sec:Number%):String" tiptext="Returns a number of seconds as a timecode string." version="9.0.28.0" playername="" helpurl="fl.video:FLVPlaybackCaptioning:secondsToTime"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class FLVPlaybackCaptioning" helpurl="fl.video:FLVPlaybackCaptioning">
                <string name="SHORT_VERSION" object="[fl.video.FLVPlaybackCaptioning]" text="FLVPlaybackCaptioning.SHORT_VERSION" constant="true" tiptext="State variable indicating the short version number of the component." version="" playername="" helpurl="fl.video:FLVPlaybackCaptioning:SHORT_VERSION"/>
                <string name="VERSION" object="[fl.video.FLVPlaybackCaptioning]" text="FLVPlaybackCaptioning.VERSION" constant="true" tiptext="State variable indicating the long version number of the component." version="" playername="" helpurl="fl.video:FLVPlaybackCaptioning:VERSION"/>
                <string name="autoLayout" object="[fl.video.FLVPlaybackCaptioning]" text=".autoLayout" tiptext="Determines whether the FLVPlaybackCaptioning component automatically moves and resizes the TextField object for captioning." version="" playername="" helpurl="fl.video:FLVPlaybackCaptioning:autoLayout:get"/>
                <string name="captionButton" object="[fl.video.FLVPlaybackCaptioning]" text=".captionButton" tiptext="Defines the captionButton FLVPlayback custom UI component instance which provides toggle capabilities to turn captioning on and off." version="" playername="" helpurl="fl.video:FLVPlaybackCaptioning:captionButton:get"/>
                <string name="captionTargetName" object="[fl.video.FLVPlaybackCaptioning]" text=".captionTargetName" tiptext="The instance name of the TextField object or MovieClip enclosing a Textfield object that contains the captions." version="" playername="" helpurl="fl.video:FLVPlaybackCaptioning:captionTargetName:get"/>
                <string name="captionTarget" object="[fl.video.FLVPlaybackCaptioning]" text=".captionTarget" tiptext="Sets the DisplayObject instance in which to display captions." version="" playername="" helpurl="fl.video:FLVPlaybackCaptioning:captionTarget:get"/>
                <string name="flvPlaybackName" object="[fl.video.FLVPlaybackCaptioning]" text=".flvPlaybackName" tiptext="Sets an FLVPlayback instance name for the FLVPlayback instance that you want to caption." version="" playername="" helpurl="fl.video:FLVPlaybackCaptioning:flvPlaybackName:get"/>
                <string name="flvPlayback" object="[fl.video.FLVPlaybackCaptioning]" text=".flvPlayback" tiptext="Sets the FLVPlayback instance to caption." version="" playername="" helpurl="fl.video:FLVPlaybackCaptioning:flvPlayback:get"/>
                <string name="showCaptions" object="[fl.video.FLVPlaybackCaptioning]" text=".showCaptions" tiptext="Used to display captions; true = display captions, false = do not display captions." version="" playername="" helpurl="fl.video:FLVPlaybackCaptioning:showCaptions:get"/>
                <string name="simpleFormatting" object="[fl.video.FLVPlaybackCaptioning]" text=".simpleFormatting" tiptext="Limits formatting instructions from the Timed Text file when set to true." version="" playername="" helpurl="fl.video:FLVPlaybackCaptioning:simpleFormatting:get"/>
                <string name="source" object="[fl.video.FLVPlaybackCaptioning]" text=".source" tiptext="URL of the Timed Text XML file that contains caption information (required property)." version="" playername="" helpurl="fl.video:FLVPlaybackCaptioning:source:get"/>
                <string name="track" object="[fl.video.FLVPlaybackCaptioning]" text=".track" tiptext="Support for multiple language tracks." version="" playername="" helpurl="fl.video:FLVPlaybackCaptioning:track:get"/>
                <string name="videoPlayerIndex" object="[fl.video.FLVPlaybackCaptioning]" text=".videoPlayerIndex" tiptext="Connects the captioning to a specific VideoPlayer in the FLVPlayback component." version="" playername="" helpurl="fl.video:FLVPlaybackCaptioning:videoPlayerIndex:get"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class FLVPlaybackCaptioning" helpurl="fl.video:FLVPlaybackCaptioning">
                <string name="securityError" object="[fl.video.FLVPlaybackCaptioning]" text=".addEventListener(%type:String=SecurityErrorEvent.SECURITY_ERROR{SecurityErrorEvent.SECURITY_ERROR,ProgressEvent.PROGRESS,Event.OPEN,IOErrorEvent.IO_ERROR,HTTPStatusEvent.HTTP_STATUS,Event.COMPLETE,CaptionTargetEvent.CAPTION_TARGET_CREATED,CaptionChangeEvent.CAPTION_CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched if a call to the URLLoader.load() event attempts to load a Timed Text XML file from a server outside the security sandbox." version="" playername="" helpurl="fl.video:FLVPlaybackCaptioning_flash.events.SecurityErrorEvent.SECURITY_ERROR_securityError"/>
                <string name="progress" object="[fl.video.FLVPlaybackCaptioning]" text=".addEventListener(%type:String=ProgressEvent.PROGRESS{SecurityErrorEvent.SECURITY_ERROR,ProgressEvent.PROGRESS,Event.OPEN,IOErrorEvent.IO_ERROR,HTTPStatusEvent.HTTP_STATUS,Event.COMPLETE,CaptionTargetEvent.CAPTION_TARGET_CREATED,CaptionChangeEvent.CAPTION_CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when data is received as the download of the Timed Text XML file progresses." version="" playername="" helpurl="fl.video:FLVPlaybackCaptioning_flash.events.ProgressEvent.PROGRESS_progress"/>
                <string name="open" object="[fl.video.FLVPlaybackCaptioning]" text=".addEventListener(%type:String=Event.OPEN{SecurityErrorEvent.SECURITY_ERROR,ProgressEvent.PROGRESS,Event.OPEN,IOErrorEvent.IO_ERROR,HTTPStatusEvent.HTTP_STATUS,Event.COMPLETE,CaptionTargetEvent.CAPTION_TARGET_CREATED,CaptionChangeEvent.CAPTION_CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the download operation to load the Timed Text XML file begins, following a call to the URLLoader.load() method." version="" playername="" helpurl="fl.video:FLVPlaybackCaptioning_flash.events.Event.OPEN_open"/>
                <string name="ioError" object="[fl.video.FLVPlaybackCaptioning]" text=".addEventListener(%type:String=IOErrorEvent.IO_ERROR{SecurityErrorEvent.SECURITY_ERROR,ProgressEvent.PROGRESS,Event.OPEN,IOErrorEvent.IO_ERROR,HTTPStatusEvent.HTTP_STATUS,Event.COMPLETE,CaptionTargetEvent.CAPTION_TARGET_CREATED,CaptionChangeEvent.CAPTION_CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched if a call to the URLLoader.load() event results in a fatal error that terminates the download of the Timed Text XML file." version="" playername="" helpurl="fl.video:FLVPlaybackCaptioning_flash.events.IOErrorEvent.IO_ERROR_ioError"/>
                <string name="httpStatus" object="[fl.video.FLVPlaybackCaptioning]" text=".addEventListener(%type:String=HTTPStatusEvent.HTTP_STATUS{SecurityErrorEvent.SECURITY_ERROR,ProgressEvent.PROGRESS,Event.OPEN,IOErrorEvent.IO_ERROR,HTTPStatusEvent.HTTP_STATUS,Event.COMPLETE,CaptionTargetEvent.CAPTION_TARGET_CREATED,CaptionChangeEvent.CAPTION_CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched if a call to the URLLoader.load() event attempts to access a Timed Text XML file over HTTP and the current Flash Player environment is able to detect and return the status code for the request." version="" playername="" helpurl="fl.video:FLVPlaybackCaptioning_flash.events.HTTPStatusEvent.HTTP_STATUS_httpStatus"/>
                <string name="complete" object="[fl.video.FLVPlaybackCaptioning]" text=".addEventListener(%type:String=Event.COMPLETE{SecurityErrorEvent.SECURITY_ERROR,ProgressEvent.PROGRESS,Event.OPEN,IOErrorEvent.IO_ERROR,HTTPStatusEvent.HTTP_STATUS,Event.COMPLETE,CaptionTargetEvent.CAPTION_TARGET_CREATED,CaptionChangeEvent.CAPTION_CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched after all of the Timed Text XML data is loaded." version="" playername="" helpurl="fl.video:FLVPlaybackCaptioning_flash.events.Event.COMPLETE_complete"/>
                <string name="captionTargetCreated" object="[fl.video.FLVPlaybackCaptioning]" text=".addEventListener(%type:String=CaptionTargetEvent.CAPTION_TARGET_CREATED{SecurityErrorEvent.SECURITY_ERROR,ProgressEvent.PROGRESS,Event.OPEN,IOErrorEvent.IO_ERROR,HTTPStatusEvent.HTTP_STATUS,Event.COMPLETE,CaptionTargetEvent.CAPTION_TARGET_CREATED,CaptionChangeEvent.CAPTION_CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched after the captionTarget property is created, but before any captions are added (the captionTarget property is empty)." version="" playername="" helpurl="fl.video:FLVPlaybackCaptioning_fl.video.CaptionTargetEvent.CAPTION_TARGET_CREATED_captionTargetCreated"/>
                <string name="captionChange" object="[fl.video.FLVPlaybackCaptioning]" text=".addEventListener(%type:String=CaptionChangeEvent.CAPTION_CHANGE{SecurityErrorEvent.SECURITY_ERROR,ProgressEvent.PROGRESS,Event.OPEN,IOErrorEvent.IO_ERROR,HTTPStatusEvent.HTTP_STATUS,Event.COMPLETE,CaptionTargetEvent.CAPTION_TARGET_CREATED,CaptionChangeEvent.CAPTION_CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a caption is added or removed from the caption target text field." version="" playername="" helpurl="fl.video:FLVPlaybackCaptioning_fl.video.CaptionChangeEvent.CAPTION_CHANGE_captionChange"/>
            </folder>
        </folder>
        <folder name="INCManager" id="[fl.video.INCManager]" sort="true" index="true" tiptext="The INCManager is the interface for classes that create the flash.net.NetConnection for the VideoPlayer class." helpurl="fl.video:INCManager">
            <folder name="Methods" id="Methods" tiptext="Methods for class INCManager" helpurl="fl.video:INCManager">
                <string name="close" object="[fl.video.INCManager]" text=".close(%%):void" tiptext="Closes the NetConnection." version="1.0" playername="" helpurl="fl.video:INCManager:close"/>
                <string name="connectAgain" object="[fl.video.INCManager]" text=".connectAgain(%%):Boolean" tiptext="Called by the VideoPlayer object if the connection is successfully made but the stream is not found." version="1.0" playername="" helpurl="fl.video:INCManager:connectAgain"/>
                <string name="connectToURL" object="[fl.video.INCManager]" text=".connectToURL(%url:String%):Boolean" tiptext="Called by the VideoPlayer object to ask for a connection to the URL." version="1.0" playername="" helpurl="fl.video:INCManager:connectToURL"/>
                <string name="getProperty" object="[fl.video.INCManager]" text=".getProperty(%propertyName:String%)" tiptext="Gets values of arbitrary properties supported by the class implementing INCManager." version="1.0" playername="" helpurl="fl.video:INCManager:getProperty"/>
                <string name="helperDone" object="[fl.video.INCManager]" text=".helperDone(%helper:Object,success:Boolean%):void" tiptext="Called by any helper object doing a task for the NCManager object to signal it has completed and whether it was successful." version="1.0" playername="" helpurl="fl.video:INCManager:helperDone"/>
                <string name="reconnect" object="[fl.video.INCManager]" text=".reconnect(%%):void" tiptext="Called by the VideoPlayer object to ask for reconnection after the connection is lost." version="1.0" playername="" helpurl="fl.video:INCManager:reconnect"/>
                <string name="setProperty" object="[fl.video.INCManager]" text=".setProperty(%propertyName:String,value:*%):void" tiptext="Sets values of arbitrary properties supported by the class implementing INCManager." version="1.0" playername="" helpurl="fl.video:INCManager:setProperty"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class INCManager" helpurl="fl.video:INCManager">
                <string name="bitrate" object="[fl.video.INCManager]" text=".bitrate" tiptext="The bandwidth, in bits per second, used to switch between multiple streams." version="" playername="" helpurl="fl.video:INCManager:bitrate:get"/>
                <string name="isRTMP" object="[fl.video.INCManager]" text=".isRTMP" tiptext="Whether the URL is for RTMP streaming from a Flash Media Server (FMS) or a progressive download." version="" playername="" helpurl="fl.video:INCManager:isRTMP:get"/>
                <string name="netConnection" object="[fl.video.INCManager]" text=".netConnection" tiptext="Reference to the NetConnection object." version="" playername="" helpurl="fl.video:INCManager:netConnection:get"/>
                <string name="streamHeight" object="[fl.video.INCManager]" text=".streamHeight" tiptext="Height of the stream, in pixels." version="" playername="" helpurl="fl.video:INCManager:streamHeight:get"/>
                <string name="streamLength" object="[fl.video.INCManager]" text=".streamLength" tiptext="Length of the stream, in seconds." version="" playername="" helpurl="fl.video:INCManager:streamLength:get"/>
                <string name="streamName" object="[fl.video.INCManager]" text=".streamName" tiptext="The stream name passed into the NetStream.play() method." version="" playername="" helpurl="fl.video:INCManager:streamName:get"/>
                <string name="streamWidth" object="[fl.video.INCManager]" text=".streamWidth" tiptext="Width of the stream, in pixels." version="" playername="" helpurl="fl.video:INCManager:streamWidth:get"/>
                <string name="timeout" object="[fl.video.INCManager]" text=".timeout" tiptext="The time in milliseconds after which attempts to make a connection stop." version="" playername="" helpurl="fl.video:INCManager:timeout:get"/>
                <string name="videoPlayer" object="[fl.video.INCManager]" text=".videoPlayer" tiptext="The VideoPlayer object that owns this object." version="" playername="" helpurl="fl.video:INCManager:videoPlayer:get"/>
            </folder>
        </folder>
        <folder name="IVPEvent" id="[fl.video.IVPEvent]" sort="true" index="true" tiptext="The IVPEvent interface is implemented by video events that apply to a specific VideoPlayer object within the FLVPlayback component." helpurl="fl.video:IVPEvent">
            <folder name="Properties" id="Properties" tiptext="Properties for class IVPEvent" helpurl="fl.video:IVPEvent">
                <string name="type" object="[fl.video.IVPEvent]" text=".type" tiptext="The type of event." version="" playername="" helpurl="fl.video:IVPEvent:type:get"/>
                <string name="vp" object="[fl.video.IVPEvent]" text=".vp" tiptext="The index of the VideoPlayer object involved in this event." version="" playername="" helpurl="fl.video:IVPEvent:vp:get"/>
            </folder>
        </folder>
        <folder name="LayoutEvent" id="[fl.video.LayoutEvent]" sort="true" index="true" asAncestors="flash.events:Event,Object" tiptext="Event dispatched when the video player is resized and/or laid out." helpurl="fl.video:LayoutEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class LayoutEvent" helpurl="fl.video:LayoutEvent">
                <string name="LayoutEvent" object="[fl.video.LayoutEvent]" text="new LayoutEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,oldBounds:flash.geom:Rectangle=null,oldRegistrationBounds:flash.geom:Rectangle=null]%)" constructor="true" tiptext="Creates an Event object that contains information about layout events." version="1.0" playername="" helpurl="fl.video:LayoutEvent:LayoutEvent"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class LayoutEvent" helpurl="fl.video:LayoutEvent">
                <string name="LAYOUT" object="[fl.video.LayoutEvent]" text="LayoutEvent.LAYOUT" constant="true" tiptext="Defines the value of the type property of a layout event object." version="" playername="" helpurl="fl.video:LayoutEvent:LAYOUT"/>
                <string name="oldBounds" object="[fl.video.LayoutEvent]" text=".oldBounds" tiptext="Indicates the values of the x, y, width, and height properties of the target before the event occurs." version="" playername="" helpurl="fl.video:LayoutEvent:oldBounds:get"/>
                <string name="oldRegistrationBounds" object="[fl.video.LayoutEvent]" text=".oldRegistrationBounds" tiptext="Indicates the values of the registrationX, registrationY, registrationWidth, and registrationHeight properties of the target before the event occurs." version="" playername="" helpurl="fl.video:LayoutEvent:oldRegistrationBounds:get"/>
            </folder>
        </folder>
        <folder name="MetadataEvent" id="[fl.video.MetadataEvent]" sort="true" index="true" asAncestors="flash.events:Event,Object" tiptext="Flash&amp;#xAE; Player dispatches a MetadataEvent object when the user requests the FLV file&apos;s metadata information packet (NetStream.onMetaData) and when cue points (NetStream.onCuePoint) are encountered in the FLV file." helpurl="fl.video:MetadataEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class MetadataEvent" helpurl="fl.video:MetadataEvent">
                <string name="MetadataEvent" object="[fl.video.MetadataEvent]" text="new MetadataEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,info:Object=null,vp:uint=0]%)" constructor="true" tiptext="Creates an Event object that contains information about metadata events." version="1.0" playername="" helpurl="fl.video:MetadataEvent:MetadataEvent"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class MetadataEvent" helpurl="fl.video:MetadataEvent">
                <string name="CUE_POINT" object="[fl.video.MetadataEvent]" text="MetadataEvent.CUE_POINT" constant="true" tiptext="Defines the value of the type property of a cuePoint event object." version="" playername="" helpurl="fl.video:MetadataEvent:CUE_POINT"/>
                <string name="METADATA_RECEIVED" object="[fl.video.MetadataEvent]" text="MetadataEvent.METADATA_RECEIVED" constant="true" tiptext="Defines the value of the type property of a metadataReceived event object." version="" playername="" helpurl="fl.video:MetadataEvent:METADATA_RECEIVED"/>
                <string name="info" object="[fl.video.MetadataEvent]" text=".info" tiptext="An object with dynamic properties added depending on the event type." version="" playername="" helpurl="fl.video:MetadataEvent:info:get"/>
                <string name="vp" object="[fl.video.MetadataEvent]" text=".vp" tiptext="The index of the VideoPlayer object involved in this event." version="" playername="" helpurl="fl.video:MetadataEvent:vp:get"/>
            </folder>
        </folder>
        <folder name="NCManager" id="[fl.video.NCManager]" sort="true" index="true" asAncestors="Object" tiptext="Creates the NetConnection object for the VideoPlayer class, a helper class for that user facing class." helpurl="fl.video:NCManager">
            <folder name="Methods" id="Methods" tiptext="Methods for class NCManager" helpurl="fl.video:NCManager">
                <string name="NCManager" object="[fl.video.NCManager]" text="new NCManager(%%)" constructor="true" tiptext="Creates a new NCManager instance." version="1.0" playername="" helpurl="fl.video:NCManager:NCManager"/>
                <string name="close" object="[fl.video.NCManager]" text=".close(%%):void" tiptext="Closes the NetConnection." version="1.0" playername="" helpurl="fl.video:NCManager:close"/>
                <string name="connectAgain" object="[fl.video.NCManager]" text=".connectAgain(%%):Boolean" tiptext="Called by the VideoPlayer object if the connection is successfully made but the stream is not found." version="1.0" playername="" helpurl="fl.video:NCManager:connectAgain"/>
                <string name="connectToURL" object="[fl.video.NCManager]" text=".connectToURL(%url:String%):Boolean" tiptext="Called by the VideoPlayer object to ask for a connection to the URL." version="1.0" playername="" helpurl="fl.video:NCManager:connectToURL"/>
                <string name="getProperty" object="[fl.video.NCManager]" text=".getProperty(%propertyName:String%)" tiptext="Allows getting of the fallbackServerName, fpadZone, objectEncoding, and proxyType properties." version="1.0" playername="" helpurl="fl.video:NCManager:getProperty"/>
                <string name="helperDone" object="[fl.video.NCManager]" text=".helperDone(%helper:Object,success:Boolean%):void" tiptext="Called by any helper object doing a task for the NCManager object to signal it has completed and whether it was successful." version="1.0" playername="" helpurl="fl.video:NCManager:helperDone"/>
                <string name="reconnect" object="[fl.video.NCManager]" text=".reconnect(%%):void" tiptext="Called by the VideoPlayer object to ask for reconnection after the connection is lost." version="1.0" playername="" helpurl="fl.video:NCManager:reconnect"/>
                <string name="setProperty" object="[fl.video.NCManager]" text=".setProperty(%propertyName:String,value:*%):void" tiptext="Allows setting of the fallbackServerName, fpadZone, objectEncoding, and proxyType properties." version="1.0" playername="" helpurl="fl.video:NCManager:setProperty"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class NCManager" helpurl="fl.video:NCManager">
                <string name="DEFAULT_TIMEOUT" object="[fl.video.NCManager]" text="NCManager.DEFAULT_TIMEOUT" constant="true" tiptext="The default timeout in milliseconds." version="" playername="" helpurl="fl.video:NCManager:DEFAULT_TIMEOUT"/>
                <string name="SHORT_VERSION" object="[fl.video.NCManager]" text="NCManager.SHORT_VERSION" constant="true" tiptext="State variable indicating the short version number of the component." version="" playername="" helpurl="fl.video:NCManager:SHORT_VERSION"/>
                <string name="VERSION" object="[fl.video.NCManager]" text="NCManager.VERSION" constant="true" tiptext="State variable indicating the long version number of the component." version="" playername="" helpurl="fl.video:NCManager:VERSION"/>
                <string name="fallbackServerName" object="[fl.video.NCManager]" text=".fallbackServerName" tiptext="Exposes the fallbackServerName property indirectly or directly." version="" playername="" helpurl="fl.video:NCManager:fallbackServerName"/>
                <string name="bitrate" object="[fl.video.NCManager]" text=".bitrate" tiptext="When streaming from Flash Media Server (FMS), the bitrate property returns the value calculated from autodetection, not the value set through the bitrate() property." version="" playername="" helpurl="fl.video:NCManager:bitrate:get"/>
                <string name="isRTMP" object="[fl.video.NCManager]" text=".isRTMP" tiptext="Whether the URL is for RTMP streaming from a Flash Media Server (FMS) or a progressive download." version="" playername="" helpurl="fl.video:NCManager:isRTMP:get"/>
                <string name="netConnection" object="[fl.video.NCManager]" text=".netConnection" tiptext="Reference to the NetConnection object." version="" playername="" helpurl="fl.video:NCManager:netConnection:get"/>
                <string name="streamHeight" object="[fl.video.NCManager]" text=".streamHeight" tiptext="Height of the stream, in pixels." version="" playername="" helpurl="fl.video:NCManager:streamHeight:get"/>
                <string name="streamLength" object="[fl.video.NCManager]" text=".streamLength" tiptext="Length of the stream, in seconds." version="" playername="" helpurl="fl.video:NCManager:streamLength:get"/>
                <string name="streamName" object="[fl.video.NCManager]" text=".streamName" tiptext="The stream name passed into the NetStream.play() method." version="" playername="" helpurl="fl.video:NCManager:streamName:get"/>
                <string name="streamWidth" object="[fl.video.NCManager]" text=".streamWidth" tiptext="Width of the stream, in pixels." version="" playername="" helpurl="fl.video:NCManager:streamWidth:get"/>
                <string name="timeout" object="[fl.video.NCManager]" text=".timeout" tiptext="The time in milliseconds after which attempts to make a connection stop." version="" playername="" helpurl="fl.video:NCManager:timeout:get"/>
                <string name="videoPlayer" object="[fl.video.NCManager]" text=".videoPlayer" tiptext="The VideoPlayer object that owns this object." version="" playername="" helpurl="fl.video:NCManager:videoPlayer:get"/>
            </folder>
        </folder>
        <folder name="NCManagerNative" id="[fl.video.NCManagerNative]" sort="true" index="true" asAncestors="fl.video:NCManager,Object" tiptext="The NCManagerNative class is a subclass of the NCManager class and supports native bandwidth detection, which some Flash Video Streaming Service providers may support." helpurl="fl.video:NCManagerNative">
            <folder name="Methods" id="Methods" tiptext="Methods for class NCManagerNative" helpurl="fl.video:NCManagerNative">
                <string name="NCManagerNative" object="[fl.video.NCManagerNative]" text="new NCManagerNative(%%):void" constructor="true" tiptext="NCManagerNative constructor" version="1.0" playername="" helpurl="fl.video:NCManagerNative:NCManagerNative"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class NCManagerNative" helpurl="fl.video:NCManagerNative">
                <string name="SHORT_VERSION" object="[fl.video.NCManagerNative]" text="NCManagerNative.SHORT_VERSION" constant="true" tiptext="State variable indicating the short version number of the component." version="" playername="" helpurl="fl.video:NCManagerNative:SHORT_VERSION"/>
                <string name="VERSION" object="[fl.video.NCManagerNative]" text="NCManagerNative.VERSION" constant="true" tiptext="State variable indicating the long version number of the component." version="" playername="" helpurl="fl.video:NCManagerNative:VERSION"/>
                <string name="streamLength" object="[fl.video.NCManagerNative]" text=".streamLength" tiptext="Length of the stream, in milliseconds." version="" playername="" helpurl="fl.video:NCManagerNative:streamLength:get"/>
            </folder>
        </folder>
        <folder name="SkinErrorEvent" id="[fl.video.SkinErrorEvent]" sort="true" index="true" asAncestors="flash.events:ErrorEvent,flash.events:TextEvent,flash.events:Event,Object" tiptext="Flash&amp;#xAE; Player dispatches a SkinErrorEvent object when there is an error loading a skin." helpurl="fl.video:SkinErrorEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class SkinErrorEvent" helpurl="fl.video:SkinErrorEvent">
                <string name="SkinErrorEvent" object="[fl.video.SkinErrorEvent]" text="new SkinErrorEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,text:String]%)" constructor="true" tiptext="Creates an Event object that contains information about skinError events." version="1.0" playername="" helpurl="fl.video:SkinErrorEvent:SkinErrorEvent"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class SkinErrorEvent" helpurl="fl.video:SkinErrorEvent">
                <string name="SKIN_ERROR" object="[fl.video.SkinErrorEvent]" text="SkinErrorEvent.SKIN_ERROR" constant="true" tiptext="Defines the value of the type property of a skinError event object." version="" playername="" helpurl="fl.video:SkinErrorEvent:SKIN_ERROR"/>
            </folder>
        </folder>
        <folder name="SoundEvent" id="[fl.video.SoundEvent]" sort="true" index="true" asAncestors="flash.events:Event,Object" tiptext="Flash&amp;#xAE; Player dispatches a SoundEvent object when the user changes the sound by either moving the handle of the volumeBar control or setting the volume or soundTransform property." helpurl="fl.video:SoundEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class SoundEvent" helpurl="fl.video:SoundEvent">
                <string name="SoundEvent" object="[fl.video.SoundEvent]" text="new SoundEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,soundTransform:flash.media:SoundTransform=null]%)" constructor="true" tiptext="SoundEvent construtor" version="1.0" playername="" helpurl="fl.video:SoundEvent:SoundEvent"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class SoundEvent" helpurl="fl.video:SoundEvent">
                <string name="SOUND_UPDATE" object="[fl.video.SoundEvent]" text="SoundEvent.SOUND_UPDATE" constant="true" tiptext="Defines the value of the type property of a soundUpdate event object." version="" playername="" helpurl="fl.video:SoundEvent:SOUND_UPDATE"/>
                <string name="soundTransform" object="[fl.video.SoundEvent]" text=".soundTransform" tiptext="Indicates new values for volume and panning." version="" playername="" helpurl="fl.video:SoundEvent:soundTransform:get"/>
            </folder>
        </folder>
        <folder name="VideoAlign" id="[fl.video.VideoAlign]" sort="true" index="true" asAncestors="Object" tiptext="The VideoAlign class provides constant values to use for the FLVPlayback.align and VideoPlayer.align properties." helpurl="fl.video:VideoAlign">
            <folder name="Properties" id="Properties" tiptext="Properties for class VideoAlign" helpurl="fl.video:VideoAlign">
                <string name="BOTTOM_LEFT" object="[fl.video.VideoAlign]" text="VideoAlign.BOTTOM_LEFT" constant="true" tiptext="Specifies that the video is aligned in the bottom-left corner." version="" playername="" helpurl="fl.video:VideoAlign:BOTTOM_LEFT"/>
                <string name="BOTTOM_RIGHT" object="[fl.video.VideoAlign]" text="VideoAlign.BOTTOM_RIGHT" constant="true" tiptext="Specifies that the video is aligned in the bottom-right corner." version="" playername="" helpurl="fl.video:VideoAlign:BOTTOM_RIGHT"/>
                <string name="BOTTOM" object="[fl.video.VideoAlign]" text="VideoAlign.BOTTOM" constant="true" tiptext="Specifies that the video is aligned at the bottom." version="" playername="" helpurl="fl.video:VideoAlign:BOTTOM"/>
                <string name="CENTER" object="[fl.video.VideoAlign]" text="VideoAlign.CENTER" constant="true" tiptext="Specifies that the video is aligned in the center." version="" playername="" helpurl="fl.video:VideoAlign:CENTER"/>
                <string name="LEFT" object="[fl.video.VideoAlign]" text="VideoAlign.LEFT" constant="true" tiptext="Specifies that the video is aligned on the left." version="" playername="" helpurl="fl.video:VideoAlign:LEFT"/>
                <string name="RIGHT" object="[fl.video.VideoAlign]" text="VideoAlign.RIGHT" constant="true" tiptext="Specifies that the video is aligned to the right." version="" playername="" helpurl="fl.video:VideoAlign:RIGHT"/>
                <string name="TOP_LEFT" object="[fl.video.VideoAlign]" text="VideoAlign.TOP_LEFT" constant="true" tiptext="Specifies that the video is aligned in the top-left corner." version="" playername="" helpurl="fl.video:VideoAlign:TOP_LEFT"/>
                <string name="TOP_RIGHT" object="[fl.video.VideoAlign]" text="VideoAlign.TOP_RIGHT" constant="true" tiptext="Specifies that the video is aligned in the top-right corner." version="" playername="" helpurl="fl.video:VideoAlign:TOP_RIGHT"/>
                <string name="TOP" object="[fl.video.VideoAlign]" text="VideoAlign.TOP" constant="true" tiptext="Specifies that the video is aligned at the top." version="" playername="" helpurl="fl.video:VideoAlign:TOP"/>
            </folder>
        </folder>
        <folder name="VideoError" id="[fl.video.VideoError]" sort="true" index="true" asAncestors="Error,Object" tiptext="The VideoError exception is the primary mechanism for reporting runtime errors from the FLVPlayback and VideoPlayer classes." helpurl="fl.video:VideoError">
            <folder name="Methods" id="Methods" tiptext="Methods for class VideoError" helpurl="fl.video:VideoError">
                <string name="VideoError" object="[fl.video.VideoError]" text="new VideoError(%errCode:uint[,msg:String=null]%)" constructor="true" tiptext="Creates a new VideoError object." version="1.0" playername="" helpurl="fl.video:VideoError:VideoError"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class VideoError" helpurl="fl.video:VideoError">
                <string name="DELETE_DEFAULT_PLAYER" object="[fl.video.VideoError]" text="VideoError.DELETE_DEFAULT_PLAYER" constant="true" tiptext="State variable indicating that the user cannot delete the default VideoPlayer object." version="" playername="" helpurl="fl.video:VideoError:DELETE_DEFAULT_PLAYER"/>
                <string name="ILLEGAL_CUE_POINT" object="[fl.video.VideoError]" text="VideoError.ILLEGAL_CUE_POINT" constant="true" tiptext="State variable indicating the illegal cue point." version="" playername="" helpurl="fl.video:VideoError:ILLEGAL_CUE_POINT"/>
                <string name="INCMANAGER_CLASS_UNSET" object="[fl.video.VideoError]" text="VideoError.INCMANAGER_CLASS_UNSET" constant="true" tiptext="State variable indicating that the INCManager class is not set." version="" playername="" helpurl="fl.video:VideoError:INCMANAGER_CLASS_UNSET"/>
                <string name="INVALID_SEEK" object="[fl.video.VideoError]" text="VideoError.INVALID_SEEK" constant="true" tiptext="State variable indicating an invalid seek." version="" playername="" helpurl="fl.video:VideoError:INVALID_SEEK"/>
                <string name="INVALID_SOURCE" object="[fl.video.VideoError]" text="VideoError.INVALID_SOURCE" constant="true" tiptext="State variable indicating an invalid source." version="" playername="" helpurl="fl.video:VideoError:INVALID_SOURCE"/>
                <string name="INVALID_XML" object="[fl.video.VideoError]" text="VideoError.INVALID_XML" constant="true" tiptext="State variable indicating invalid XML." version="" playername="" helpurl="fl.video:VideoError:INVALID_XML"/>
                <string name="MISSING_SKIN_STYLE" object="[fl.video.VideoError]" text="VideoError.MISSING_SKIN_STYLE" constant="true" tiptext="State variable indicating a missing skin style." version="" playername="" helpurl="fl.video:VideoError:MISSING_SKIN_STYLE"/>
                <string name="NETSTREAM_CLIENT_CLASS_UNSET" object="[fl.video.VideoError]" text="VideoError.NETSTREAM_CLIENT_CLASS_UNSET" constant="true" tiptext="An error that occurs when the VideoPlayer.netStatusClientClassstatic property is set to an invalid value." version="" playername="" helpurl="fl.video:VideoError:NETSTREAM_CLIENT_CLASS_UNSET"/>
                <string name="NO_BITRATE_MATCH" object="[fl.video.VideoError]" text="VideoError.NO_BITRATE_MATCH" constant="true" tiptext="State variable indicating that there is no bitrate match." version="" playername="" helpurl="fl.video:VideoError:NO_BITRATE_MATCH"/>
                <string name="NO_CONNECTION" object="[fl.video.VideoError]" text="VideoError.NO_CONNECTION" constant="true" tiptext="State variable indicating that Flash Player is unable to make a connection to the server or to find the FLV file on the server." version="" playername="" helpurl="fl.video:VideoError:NO_CONNECTION"/>
                <string name="NULL_URL_LOAD" object="[fl.video.VideoError]" text="VideoError.NULL_URL_LOAD" constant="true" tiptext="State variable indicating that a null URL was sent to the load() method." version="" playername="" helpurl="fl.video:VideoError:NULL_URL_LOAD"/>
                <string name="SHORT_VERSION" object="[fl.video.VideoError]" text="VideoError.SHORT_VERSION" constant="true" tiptext="State variable indicating the short version number of the component." version="" playername="" helpurl="fl.video:VideoError:SHORT_VERSION"/>
                <string name="UNSUPPORTED_PROPERTY" object="[fl.video.VideoError]" text="VideoError.UNSUPPORTED_PROPERTY" constant="true" tiptext="State variable indicating that an unsupported property was passed to the INCManager class, or the getProperty or setProperty methods." version="" playername="" helpurl="fl.video:VideoError:UNSUPPORTED_PROPERTY"/>
                <string name="VERSION" object="[fl.video.VideoError]" text="VideoError.VERSION" constant="true" tiptext="State variable indicating the long version number of the component." version="" playername="" helpurl="fl.video:VideoError:VERSION"/>
                <string name="code" object="[fl.video.VideoError]" text=".code" tiptext="The code that corresponds to the error." version="" playername="" helpurl="fl.video:VideoError:code:get"/>
            </folder>
        </folder>
        <folder name="VideoEvent" id="[fl.video.VideoEvent]" sort="true" index="true" asAncestors="flash.events:Event,Object" tiptext="Flash&amp;#xAE; Player dispatches a VideoEvent object when the user plays a video." helpurl="fl.video:VideoEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class VideoEvent" helpurl="fl.video:VideoEvent">
                <string name="VideoEvent" object="[fl.video.VideoEvent]" text="new VideoEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,state:String=null,playheadTime:Number=unknown,vp:uint=0]%)" constructor="true" tiptext="Creates an Event object that contains information about video events." version="1.0" playername="" helpurl="fl.video:VideoEvent:VideoEvent"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class VideoEvent" helpurl="fl.video:VideoEvent">
                <string name="AUTO_REWOUND" object="[fl.video.VideoEvent]" text="VideoEvent.AUTO_REWOUND" constant="true" tiptext="Defines the value of the type property of an autoRewound event object." version="" playername="" helpurl="fl.video:VideoEvent:AUTO_REWOUND"/>
                <string name="BUFFERING_STATE_ENTERED" object="[fl.video.VideoEvent]" text="VideoEvent.BUFFERING_STATE_ENTERED" constant="true" tiptext="Defines the value of the type property of a bufferingStateEntered event object." version="" playername="" helpurl="fl.video:VideoEvent:BUFFERING_STATE_ENTERED"/>
                <string name="CLOSE" object="[fl.video.VideoEvent]" text="VideoEvent.CLOSE" constant="true" tiptext="Defines the value of the type property of a close event object." version="" playername="" helpurl="fl.video:VideoEvent:CLOSE"/>
                <string name="COMPLETE" object="[fl.video.VideoEvent]" text="VideoEvent.COMPLETE" constant="true" tiptext="Defines the value of the type property of a complete event object." version="" playername="" helpurl="fl.video:VideoEvent:COMPLETE"/>
                <string name="FAST_FORWARD" object="[fl.video.VideoEvent]" text="VideoEvent.FAST_FORWARD" constant="true" tiptext="Defines the value of the type property of a fastForward event object." version="" playername="" helpurl="fl.video:VideoEvent:FAST_FORWARD"/>
                <string name="PAUSED_STATE_ENTERED" object="[fl.video.VideoEvent]" text="VideoEvent.PAUSED_STATE_ENTERED" constant="true" tiptext="Defines the value of the type property of a pausedStateEntered event object." version="" playername="" helpurl="fl.video:VideoEvent:PAUSED_STATE_ENTERED"/>
                <string name="PLAYHEAD_UPDATE" object="[fl.video.VideoEvent]" text="VideoEvent.PLAYHEAD_UPDATE" constant="true" tiptext="Defines the value of the type property of a playheadUpdate event object." version="" playername="" helpurl="fl.video:VideoEvent:PLAYHEAD_UPDATE"/>
                <string name="PLAYING_STATE_ENTERED" object="[fl.video.VideoEvent]" text="VideoEvent.PLAYING_STATE_ENTERED" constant="true" tiptext="Defines the value of the type property of a playingStateEntered event object." version="" playername="" helpurl="fl.video:VideoEvent:PLAYING_STATE_ENTERED"/>
                <string name="READY" object="[fl.video.VideoEvent]" text="VideoEvent.READY" constant="true" tiptext="Defines the value of the type property of a ready event object." version="" playername="" helpurl="fl.video:VideoEvent:READY"/>
                <string name="REWIND" object="[fl.video.VideoEvent]" text="VideoEvent.REWIND" constant="true" tiptext="Defines the value of the type property of a rewind event object." version="" playername="" helpurl="fl.video:VideoEvent:REWIND"/>
                <string name="SCRUB_FINISH" object="[fl.video.VideoEvent]" text="VideoEvent.SCRUB_FINISH" constant="true" tiptext="Defines the value of the type property of a scrubFinish event object." version="" playername="" helpurl="fl.video:VideoEvent:SCRUB_FINISH"/>
                <string name="SCRUB_START" object="[fl.video.VideoEvent]" text="VideoEvent.SCRUB_START" constant="true" tiptext="Defines the value of the type property of a scrubStart event object." version="" playername="" helpurl="fl.video:VideoEvent:SCRUB_START"/>
                <string name="SEEKED" object="[fl.video.VideoEvent]" text="VideoEvent.SEEKED" constant="true" tiptext="Defines the value of the type property of a seeked event object." version="" playername="" helpurl="fl.video:VideoEvent:SEEKED"/>
                <string name="SKIN_LOADED" object="[fl.video.VideoEvent]" text="VideoEvent.SKIN_LOADED" constant="true" tiptext="Defines the value of the type property of a skinLoaded event object." version="" playername="" helpurl="fl.video:VideoEvent:SKIN_LOADED"/>
                <string name="STATE_CHANGE" object="[fl.video.VideoEvent]" text="VideoEvent.STATE_CHANGE" constant="true" tiptext="Defines the value of the type property of a stateChange event object." version="" playername="" helpurl="fl.video:VideoEvent:STATE_CHANGE"/>
                <string name="STOPPED_STATE_ENTERED" object="[fl.video.VideoEvent]" text="VideoEvent.STOPPED_STATE_ENTERED" constant="true" tiptext="Defines the value of the type property of a stoppedStateEntered event object." version="" playername="" helpurl="fl.video:VideoEvent:STOPPED_STATE_ENTERED"/>
                <string name="playheadTime" object="[fl.video.VideoEvent]" text=".playheadTime" tiptext="A number that is the current playhead time or position, measured in seconds, which can be a fractional value." version="" playername="" helpurl="fl.video:VideoEvent:playheadTime:get"/>
                <string name="state" object="[fl.video.VideoEvent]" text=".state" tiptext="A string identifying the constant from the VideoState class that describes the playback state of the component." version="" playername="" helpurl="fl.video:VideoEvent:state:get"/>
                <string name="vp" object="[fl.video.VideoEvent]" text=".vp" tiptext="The index of the VideoPlayer object involved in this event." version="" playername="" helpurl="fl.video:VideoEvent:vp:get"/>
            </folder>
        </folder>
        <folder name="VideoPlayer" id="[fl.video.VideoPlayer]" sort="true" index="true" asAncestors="flash.media:Video,flash.display:DisplayObject,flash.events:EventDispatcher,Object" tiptext="The VideoPlayer class lets you create a video player with a slightly smaller SWF file than if you used the FLVPlayback component." helpurl="fl.video:VideoPlayer">
            <folder name="Methods" id="Methods" tiptext="Methods for class VideoPlayer" helpurl="fl.video:VideoPlayer">
                <string name="VideoPlayer" object="[fl.video.VideoPlayer]" text="new VideoPlayer(%[width:int=320,height:int=240]%)" constructor="true" tiptext="Creates a VideoPlayer object with a specified width and height." version="1.0" playername="" helpurl="fl.video:VideoPlayer:VideoPlayer"/>
                <string name="close" object="[fl.video.VideoPlayer]" text=".close(%%):void" tiptext="Forces the video stream and Flash Media Server connection to close." version="1.0" playername="" helpurl="fl.video:VideoPlayer:close"/>
                <string name="load" object="[fl.video.VideoPlayer]" text=".load(%url:String[,totalTime:Number=unknown,isLive:Boolean=false,startTime:Number=unknown,duration:Number=unknown]%):void" tiptext="Similar to the play() method, but causes the FLV file to load without playing." version="1.0" playername="" helpurl="fl.video:VideoPlayer:load"/>
                <string name="ncConnected" object="[fl.video.VideoPlayer]" text=".ncConnected(%%):void" tiptext="Called by INCManager after the connection is complete or failed after a call to the INCManager.connectToURL() method." version="1.0" playername="" helpurl="fl.video:VideoPlayer:ncConnected"/>
                <string name="ncReconnected" object="[fl.video.VideoPlayer]" text=".ncReconnected(%%):void" tiptext="Called by INCManager after the reconnection is complete or has failed after a call to the INCManager.reconnect() method." version="1.0" playername="" helpurl="fl.video:VideoPlayer:ncReconnected"/>
                <string name="pause" object="[fl.video.VideoPlayer]" text=".pause(%%):void" tiptext="Pauses video playback." version="1.0" playername="" helpurl="fl.video:VideoPlayer:pause"/>
                <string name="playWhenEnoughDownloaded" object="[fl.video.VideoPlayer]" text=".playWhenEnoughDownloaded(%%):void" tiptext="playWhenEnoughDownloaded method" version="1.0" playername="" helpurl="fl.video:VideoPlayer:playWhenEnoughDownloaded"/>
                <string name="play" object="[fl.video.VideoPlayer]" text=".play(%[url:String=null,totalTime:Number=unknown,isLive:Boolean=false,startTime:Number=unknown,duration:Number=unknown]%):void" tiptext="play method" version="1.0" playername="" helpurl="fl.video:VideoPlayer:play"/>
                <string name="seek" object="[fl.video.VideoPlayer]" text=".seek(%time:Number%):void" tiptext="Seeks to a given time in the file, specified in seconds, with a precision of three decimal places (milliseconds)." version="1.0" playername="" helpurl="fl.video:VideoPlayer:seek"/>
                <string name="setScale" object="[fl.video.VideoPlayer]" text=".setScale(%scaleX:Number,scaleY:Number%):void" tiptext="Sets the scaleX and scaleY properties simultaneously." version="1.0" playername="" helpurl="fl.video:VideoPlayer:setScale"/>
                <string name="setSize" object="[fl.video.VideoPlayer]" text=".setSize(%width:Number,height:Number%):void" tiptext="Sets the width and height properties simultaneously." version="1.0" playername="" helpurl="fl.video:VideoPlayer:setSize"/>
                <string name="stop" object="[fl.video.VideoPlayer]" text=".stop(%%):void" tiptext="Stops video playback." version="1.0" playername="" helpurl="fl.video:VideoPlayer:stop"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class VideoPlayer" helpurl="fl.video:VideoPlayer">
                <string name="SHORT_VERSION" object="[fl.video.VideoPlayer]" text="VideoPlayer.SHORT_VERSION" constant="true" tiptext="State variable indicating the short version number of the component." version="" playername="" helpurl="fl.video:VideoPlayer:SHORT_VERSION"/>
                <string name="VERSION" object="[fl.video.VideoPlayer]" text="VideoPlayer.VERSION" constant="true" tiptext="State variable indicating the long version number of the component." version="" playername="" helpurl="fl.video:VideoPlayer:VERSION"/>
                <string name="iNCManagerClass" object="[fl.video.VideoPlayer]" text=".iNCManagerClass" tiptext="To make all VideoPlayer objects use your custom class as the default INCManager implementation, set the iNCManagerClass property to the class object or string name of your custom class." version="" playername="" helpurl="fl.video:VideoPlayer:iNCManagerClass"/>
                <string name="netStreamClientClass" object="[fl.video.VideoPlayer]" text=".netStreamClientClass" tiptext="Registers a custom class for the NetStream&apos;s client property." version="" playername="" helpurl="fl.video:VideoPlayer:netStreamClientClass"/>
                <string name="align" object="[fl.video.VideoPlayer]" text=".align" tiptext="Specifies how the video is displayed relative to the registrationX, registrationY, registrationWidth and registrationHeight properties." version="" playername="" helpurl="fl.video:VideoPlayer:align:get"/>
                <string name="autoRewind" object="[fl.video.VideoPlayer]" text=".autoRewind" tiptext="A Boolean value that, if true, causes the FLV file to rewind to Frame 1 when play stops, either because the player reached the end of the stream or the stop() method was called." version="" playername="" helpurl="fl.video:VideoPlayer:autoRewind:get"/>
                <string name="bufferTime" object="[fl.video.VideoPlayer]" text=".bufferTime" tiptext="A number that specifies the number of seconds to buffer in memory before beginning to play a video stream." version="" playername="" helpurl="fl.video:VideoPlayer:bufferTime:get"/>
                <string name="bytesLoaded" object="[fl.video.VideoPlayer]" text=".bytesLoaded" tiptext="A number that indicates the extent of downloading, in number of bytes, for an HTTP download." version="" playername="" helpurl="fl.video:VideoPlayer:bytesLoaded:get"/>
                <string name="bytesTotal" object="[fl.video.VideoPlayer]" text=".bytesTotal" tiptext="A number that specifies the total number of bytes downloaded for an HTTP download." version="" playername="" helpurl="fl.video:VideoPlayer:bytesTotal:get"/>
                <string name="idleTimeout" object="[fl.video.VideoPlayer]" text=".idleTimeout" tiptext="The amount of time, in milliseconds, before Flash terminates an idle connection to a video server, such as Flash Media Server, because playing paused or stopped." version="" playername="" helpurl="fl.video:VideoPlayer:idleTimeout:get"/>
                <string name="isLive" object="[fl.video.VideoPlayer]" text=".isLive" tiptext="A Boolean value that is true if the video stream is live." version="" playername="" helpurl="fl.video:VideoPlayer:isLive:get"/>
                <string name="isRTMP" object="[fl.video.VideoPlayer]" text=".isRTMP" tiptext="A Boolean value that is true if the FLV file is streaming from Flash Media Server (FMS) using RTMP." version="" playername="" helpurl="fl.video:VideoPlayer:isRTMP:get"/>
                <string name="metadata" object="[fl.video.VideoPlayer]" text=".metadata" tiptext="An object that is a metadata information packet that is received from a call to the NetSteam.onMetaData() callback method, if available." version="" playername="" helpurl="fl.video:VideoPlayer:metadata:get"/>
                <string name="ncMgr" object="[fl.video.VideoPlayer]" text=".ncMgr" tiptext="An INCManager object that provides access to an instance of the class implementing INCManager, which is an interface to the NCManager class." version="" playername="" helpurl="fl.video:VideoPlayer:ncMgr:get"/>
                <string name="netConnection" object="[fl.video.VideoPlayer]" text=".netConnection" tiptext="Allows direct access to the NetConnection instance created by the video player." version="" playername="" helpurl="fl.video:VideoPlayer:netConnection:get"/>
                <string name="netStream" object="[fl.video.VideoPlayer]" text=".netStream" tiptext="Allows direct access to the NetStream instance created by the video player." version="" playername="" helpurl="fl.video:VideoPlayer:netStream:get"/>
                <string name="playheadTime" object="[fl.video.VideoPlayer]" text=".playheadTime" tiptext="A number that is the current playhead time or position, measured in seconds, which can be a fractional value." version="" playername="" helpurl="fl.video:VideoPlayer:playheadTime:get"/>
                <string name="playheadUpdateInterval" object="[fl.video.VideoPlayer]" text=".playheadUpdateInterval" tiptext="A number that is the amount of time, in milliseconds, between each playheadUpdate event." version="" playername="" helpurl="fl.video:VideoPlayer:playheadUpdateInterval:get"/>
                <string name="progressInterval" object="[fl.video.VideoPlayer]" text=".progressInterval" tiptext="A number that is the amount of time, in milliseconds, between each progress event." version="" playername="" helpurl="fl.video:VideoPlayer:progressInterval:get"/>
                <string name="registrationHeight" object="[fl.video.VideoPlayer]" text=".registrationHeight" tiptext="The height used to align the video content when autoresizing." version="" playername="" helpurl="fl.video:VideoPlayer:registrationHeight:get"/>
                <string name="registrationWidth" object="[fl.video.VideoPlayer]" text=".registrationWidth" tiptext="The width used to align the video content when autoresizing." version="" playername="" helpurl="fl.video:VideoPlayer:registrationWidth:get"/>
                <string name="registrationX" object="[fl.video.VideoPlayer]" text=".registrationX" tiptext="The x coordinate used to align the video content when autoresizing." version="" playername="" helpurl="fl.video:VideoPlayer:registrationX:get"/>
                <string name="registrationY" object="[fl.video.VideoPlayer]" text=".registrationY" tiptext="The y coordinate used to align the video content when autoresizing." version="" playername="" helpurl="fl.video:VideoPlayer:registrationY:get"/>
                <string name="scaleMode" object="[fl.video.VideoPlayer]" text=".scaleMode" tiptext="Specifies how the video resizes after loading." version="" playername="" helpurl="fl.video:VideoPlayer:scaleMode:get"/>
                <string name="soundTransform" object="[fl.video.VideoPlayer]" text=".soundTransform" tiptext="Provides direct access to the NetStream.soundTransform property to expose more sound control." version="" playername="" helpurl="fl.video:VideoPlayer:soundTransform:get"/>
                <string name="source" object="[fl.video.VideoPlayer]" text=".source" tiptext="A string that specifies the URL of the FLV file to stream and how to stream it." version="" playername="" helpurl="fl.video:VideoPlayer:source:get"/>
                <string name="stateResponsive" object="[fl.video.VideoPlayer]" text=".stateResponsive" tiptext="A Boolean value that is true if the state is responsive." version="" playername="" helpurl="fl.video:VideoPlayer:stateResponsive:get"/>
                <string name="state" object="[fl.video.VideoPlayer]" text=".state" tiptext="A string that specifies the state of the component." version="" playername="" helpurl="fl.video:VideoPlayer:state:get"/>
                <string name="totalTime" object="[fl.video.VideoPlayer]" text=".totalTime" tiptext="A number that is the total playing time for the video in seconds." version="" playername="" helpurl="fl.video:VideoPlayer:totalTime:get"/>
                <string name="videoHeight" object="[fl.video.VideoPlayer]" text=".videoHeight" tiptext="The source width of the loaded FLV file." version="" playername="" helpurl="fl.video:VideoPlayer:videoHeight:get"/>
                <string name="videoWidth" object="[fl.video.VideoPlayer]" text=".videoWidth" tiptext="The source width of the loaded FLV file." version="" playername="" helpurl="fl.video:VideoPlayer:videoWidth:get"/>
                <string name="visible" object="[fl.video.VideoPlayer]" text=".visible" tiptext="A Boolean value that, if true, makes the VideoPlayer instance visible." version="" playername="" helpurl="fl.video:VideoPlayer:visible:get"/>
                <string name="volume" object="[fl.video.VideoPlayer]" text=".volume" tiptext="A number in the range of 0 to 1 that indicates the volume control setting." version="" playername="" helpurl="fl.video:VideoPlayer:volume:get"/>
                <string name="height" object="[fl.video.VideoPlayer]" text=".height" tiptext="A number that specifies the height of the VideoPlayer instance (in pixels)." version="" playername="" helpurl="fl.video:VideoPlayer:height:set"/>
                <string name="scaleX" object="[fl.video.VideoPlayer]" text=".scaleX" tiptext="A number that is the horizontal scale." version="" playername="" helpurl="fl.video:VideoPlayer:scaleX:set"/>
                <string name="scaleY" object="[fl.video.VideoPlayer]" text=".scaleY" tiptext="A number that is the vertical scale." version="" playername="" helpurl="fl.video:VideoPlayer:scaleY:set"/>
                <string name="width" object="[fl.video.VideoPlayer]" text=".width" tiptext="A number that specifies the width of the VideoPlayer instance on the Stage." version="" playername="" helpurl="fl.video:VideoPlayer:width:set"/>
                <string name="x" object="[fl.video.VideoPlayer]" text=".x" tiptext="A number that specifies the horizontal position (in pixels) of the video player." version="" playername="" helpurl="fl.video:VideoPlayer:x:set"/>
                <string name="y" object="[fl.video.VideoPlayer]" text=".y" tiptext="A number that specifies the vertical position (in pixels) of the video player." version="" playername="" helpurl="fl.video:VideoPlayer:y:set"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class VideoPlayer" helpurl="fl.video:VideoPlayer">
                <string name="drmStatus" object="[fl.video.VideoPlayer]" text=".addEventListener(%type:String=DRMStatusEvent.{DRMStatusEvent.,DRMErrorEvent.,DRMAuthenticateEvent.,VideoEvent.STATE_CHANGE,VideoEvent.AUTO_REWOUND,LayoutEvent.LAYOUT,VideoEvent.READY,VideoProgressEvent.PROGRESS,VideoEvent.PLAYHEAD_UPDATE,MetadataEvent.METADATA_RECEIVED,MetadataEvent.CUE_POINT,VideoEvent.COMPLETE,VideoEvent.CLOSE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="drmError event" version="" playername="AIR" helpurl="fl.video:VideoPlayer__drmStatus"/>
                <string name="drmError" object="[fl.video.VideoPlayer]" text=".addEventListener(%type:String=DRMErrorEvent.{DRMStatusEvent.,DRMErrorEvent.,DRMAuthenticateEvent.,VideoEvent.STATE_CHANGE,VideoEvent.AUTO_REWOUND,LayoutEvent.LAYOUT,VideoEvent.READY,VideoProgressEvent.PROGRESS,VideoEvent.PLAYHEAD_UPDATE,MetadataEvent.METADATA_RECEIVED,MetadataEvent.CUE_POINT,VideoEvent.COMPLETE,VideoEvent.CLOSE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="drmError event" version="" playername="AIR" helpurl="fl.video:VideoPlayer__drmError"/>
                <string name="drmAuthenticate" object="[fl.video.VideoPlayer]" text=".addEventListener(%type:String=DRMAuthenticateEvent.{DRMStatusEvent.,DRMErrorEvent.,DRMAuthenticateEvent.,VideoEvent.STATE_CHANGE,VideoEvent.AUTO_REWOUND,LayoutEvent.LAYOUT,VideoEvent.READY,VideoProgressEvent.PROGRESS,VideoEvent.PLAYHEAD_UPDATE,MetadataEvent.METADATA_RECEIVED,MetadataEvent.CUE_POINT,VideoEvent.COMPLETE,VideoEvent.CLOSE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="drmAuthenticate event" version="" playername="AIR" helpurl="fl.video:VideoPlayer__drmAuthenticate"/>
                <string name="stateChange" object="[fl.video.VideoPlayer]" text=".addEventListener(%type:String=VideoEvent.STATE_CHANGE{DRMStatusEvent.,DRMErrorEvent.,DRMAuthenticateEvent.,VideoEvent.STATE_CHANGE,VideoEvent.AUTO_REWOUND,LayoutEvent.LAYOUT,VideoEvent.READY,VideoProgressEvent.PROGRESS,VideoEvent.PLAYHEAD_UPDATE,MetadataEvent.METADATA_RECEIVED,MetadataEvent.CUE_POINT,VideoEvent.COMPLETE,VideoEvent.CLOSE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the playback state changes." version="" playername="" helpurl="fl.video:VideoPlayer_fl.video.VideoEvent.STATE_CHANGE_stateChange"/>
                <string name="autoRewound" object="[fl.video.VideoPlayer]" text=".addEventListener(%type:String=VideoEvent.AUTO_REWOUND{DRMStatusEvent.,DRMErrorEvent.,DRMAuthenticateEvent.,VideoEvent.STATE_CHANGE,VideoEvent.AUTO_REWOUND,LayoutEvent.LAYOUT,VideoEvent.READY,VideoProgressEvent.PROGRESS,VideoEvent.PLAYHEAD_UPDATE,MetadataEvent.METADATA_RECEIVED,MetadataEvent.CUE_POINT,VideoEvent.COMPLETE,VideoEvent.CLOSE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the playhead is moved to the start of the video player because the autoRewind property is set to true." version="" playername="" helpurl="fl.video:VideoPlayer_fl.video.VideoEvent.AUTO_REWOUND_autoRewound"/>
                <string name="layout" object="[fl.video.VideoPlayer]" text=".addEventListener(%type:String=LayoutEvent.LAYOUT{DRMStatusEvent.,DRMErrorEvent.,DRMAuthenticateEvent.,VideoEvent.STATE_CHANGE,VideoEvent.AUTO_REWOUND,LayoutEvent.LAYOUT,VideoEvent.READY,VideoProgressEvent.PROGRESS,VideoEvent.PLAYHEAD_UPDATE,MetadataEvent.METADATA_RECEIVED,MetadataEvent.CUE_POINT,VideoEvent.COMPLETE,VideoEvent.CLOSE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the video player is resized or laid out." version="" playername="" helpurl="fl.video:VideoPlayer_fl.video.LayoutEvent.LAYOUT_layout"/>
                <string name="ready" object="[fl.video.VideoPlayer]" text=".addEventListener(%type:String=VideoEvent.READY{DRMStatusEvent.,DRMErrorEvent.,DRMAuthenticateEvent.,VideoEvent.STATE_CHANGE,VideoEvent.AUTO_REWOUND,LayoutEvent.LAYOUT,VideoEvent.READY,VideoProgressEvent.PROGRESS,VideoEvent.PLAYHEAD_UPDATE,MetadataEvent.METADATA_RECEIVED,MetadataEvent.CUE_POINT,VideoEvent.COMPLETE,VideoEvent.CLOSE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Event dispatched when an FLV file is loaded and ready to display." version="" playername="" helpurl="fl.video:VideoPlayer_fl.video.VideoEvent.READY_ready"/>
                <string name="progress" object="[fl.video.VideoPlayer]" text=".addEventListener(%type:String=VideoProgressEvent.PROGRESS{DRMStatusEvent.,DRMErrorEvent.,DRMAuthenticateEvent.,VideoEvent.STATE_CHANGE,VideoEvent.AUTO_REWOUND,LayoutEvent.LAYOUT,VideoEvent.READY,VideoProgressEvent.PROGRESS,VideoEvent.PLAYHEAD_UPDATE,MetadataEvent.METADATA_RECEIVED,MetadataEvent.CUE_POINT,VideoEvent.COMPLETE,VideoEvent.CLOSE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Indicates progress made in number of bytes downloaded." version="" playername="" helpurl="fl.video:VideoPlayer_fl.video.VideoProgressEvent.PROGRESS_progress"/>
                <string name="playheadUpdate" object="[fl.video.VideoPlayer]" text=".addEventListener(%type:String=VideoEvent.PLAYHEAD_UPDATE{DRMStatusEvent.,DRMErrorEvent.,DRMAuthenticateEvent.,VideoEvent.STATE_CHANGE,VideoEvent.AUTO_REWOUND,LayoutEvent.LAYOUT,VideoEvent.READY,VideoProgressEvent.PROGRESS,VideoEvent.PLAYHEAD_UPDATE,MetadataEvent.METADATA_RECEIVED,MetadataEvent.CUE_POINT,VideoEvent.COMPLETE,VideoEvent.CLOSE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched while the FLV file is playing at the frequency specified by the playheadUpdateInterval property or when rewinding starts." version="" playername="" helpurl="fl.video:VideoPlayer_fl.video.VideoEvent.PLAYHEAD_UPDATE_playheadUpdate"/>
                <string name="metadataReceived" object="[fl.video.VideoPlayer]" text=".addEventListener(%type:String=MetadataEvent.METADATA_RECEIVED{DRMStatusEvent.,DRMErrorEvent.,DRMAuthenticateEvent.,VideoEvent.STATE_CHANGE,VideoEvent.AUTO_REWOUND,LayoutEvent.LAYOUT,VideoEvent.READY,VideoProgressEvent.PROGRESS,VideoEvent.PLAYHEAD_UPDATE,MetadataEvent.METADATA_RECEIVED,MetadataEvent.CUE_POINT,VideoEvent.COMPLETE,VideoEvent.CLOSE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched the first time the FLV file&apos;s metadata is reached." version="" playername="" helpurl="fl.video:VideoPlayer_fl.video.MetadataEvent.METADATA_RECEIVED_metadataReceived"/>
                <string name="cuePoint" object="[fl.video.VideoPlayer]" text=".addEventListener(%type:String=MetadataEvent.CUE_POINT{DRMStatusEvent.,DRMErrorEvent.,DRMAuthenticateEvent.,VideoEvent.STATE_CHANGE,VideoEvent.AUTO_REWOUND,LayoutEvent.LAYOUT,VideoEvent.READY,VideoProgressEvent.PROGRESS,VideoEvent.PLAYHEAD_UPDATE,MetadataEvent.METADATA_RECEIVED,MetadataEvent.CUE_POINT,VideoEvent.COMPLETE,VideoEvent.CLOSE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a cue point is reached." version="" playername="" helpurl="fl.video:VideoPlayer_fl.video.MetadataEvent.CUE_POINT_cuePoint"/>
                <string name="complete" object="[fl.video.VideoPlayer]" text=".addEventListener(%type:String=VideoEvent.COMPLETE{DRMStatusEvent.,DRMErrorEvent.,DRMAuthenticateEvent.,VideoEvent.STATE_CHANGE,VideoEvent.AUTO_REWOUND,LayoutEvent.LAYOUT,VideoEvent.READY,VideoProgressEvent.PROGRESS,VideoEvent.PLAYHEAD_UPDATE,MetadataEvent.METADATA_RECEIVED,MetadataEvent.CUE_POINT,VideoEvent.COMPLETE,VideoEvent.CLOSE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when playing completes because the player reached the end of the FLV file." version="" playername="" helpurl="fl.video:VideoPlayer_fl.video.VideoEvent.COMPLETE_complete"/>
                <string name="close" object="[fl.video.VideoPlayer]" text=".addEventListener(%type:String=VideoEvent.CLOSE{DRMStatusEvent.,DRMErrorEvent.,DRMAuthenticateEvent.,VideoEvent.STATE_CHANGE,VideoEvent.AUTO_REWOUND,LayoutEvent.LAYOUT,VideoEvent.READY,VideoProgressEvent.PROGRESS,VideoEvent.PLAYHEAD_UPDATE,MetadataEvent.METADATA_RECEIVED,MetadataEvent.CUE_POINT,VideoEvent.COMPLETE,VideoEvent.CLOSE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched by the VideoPlayer instance when it closes the NetConnection by timing out or through a call to the close() method, or when you call the load() or play() methods or set the source property and cause the RTMP connection to close as a result." version="" playername="" helpurl="fl.video:VideoPlayer_fl.video.VideoEvent.CLOSE_close"/>
            </folder>
        </folder>
        <folder name="VideoProgressEvent" id="[fl.video.VideoProgressEvent]" sort="true" index="true" asAncestors="flash.events:ProgressEvent,flash.events:Event,Object" tiptext="Flash&amp;#xAE; Player dispatches a VideoProgressEvent object when the user makes a request for the number of bytes loaded during a progressive HTTP download of their video." helpurl="fl.video:VideoProgressEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class VideoProgressEvent" helpurl="fl.video:VideoProgressEvent">
                <string name="VideoProgressEvent" object="[fl.video.VideoProgressEvent]" text="new VideoProgressEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,bytesLoaded:uint=0,bytesTotal:uint=0,vp:uint=0]%)" constructor="true" tiptext="Creates an Event object that contains information about progress events." version="1.0" playername="" helpurl="fl.video:VideoProgressEvent:VideoProgressEvent"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class VideoProgressEvent" helpurl="fl.video:VideoProgressEvent">
                <string name="PROGRESS" object="[fl.video.VideoProgressEvent]" text="VideoProgressEvent.PROGRESS" constant="true" tiptext="Defines the value of the type property of a progress event object." version="" playername="" helpurl="fl.video:VideoProgressEvent:PROGRESS"/>
                <string name="vp" object="[fl.video.VideoProgressEvent]" text=".vp" tiptext="The index of the VideoPlayer object involved in this event." version="" playername="" helpurl="fl.video:VideoProgressEvent:vp:get"/>
            </folder>
        </folder>
        <folder name="VideoScaleMode" id="[fl.video.VideoScaleMode]" sort="true" index="true" asAncestors="Object" tiptext="The VideoScaleMode class provides constant values to use for the FLVPlayback.scaleMode and VideoPlayer.scaleMode properties." helpurl="fl.video:VideoScaleMode">
            <folder name="Properties" id="Properties" tiptext="Properties for class VideoScaleMode" helpurl="fl.video:VideoScaleMode">
                <string name="EXACT_FIT" object="[fl.video.VideoScaleMode]" text="VideoScaleMode.EXACT_FIT" constant="true" tiptext="Specifies that the video be displayed at the height and width specified by the registrationHeight or height and registrationWidth or width properties." version="" playername="" helpurl="fl.video:VideoScaleMode:EXACT_FIT"/>
                <string name="MAINTAIN_ASPECT_RATIO" object="[fl.video.VideoScaleMode]" text="VideoScaleMode.MAINTAIN_ASPECT_RATIO" constant="true" tiptext="Specifies that the video be constrained within the rectangle determined by the registrationX, registrationY, registrationWidth, and registrationHeight properties but that its original aspect ratio be preserved." version="" playername="" helpurl="fl.video:VideoScaleMode:MAINTAIN_ASPECT_RATIO"/>
                <string name="NO_SCALE" object="[fl.video.VideoScaleMode]" text="VideoScaleMode.NO_SCALE" constant="true" tiptext="Specifies that the video be displayed at exactly the height and width of the source video." version="" playername="" helpurl="fl.video:VideoScaleMode:NO_SCALE"/>
            </folder>
        </folder>
        <folder name="VideoState" id="[fl.video.VideoState]" sort="true" index="true" asAncestors="Object" tiptext="The VideoState class provides constant values for the read-only FLVPlayback.state and VideoPlayer.state properties." helpurl="fl.video:VideoState">
            <folder name="Properties" id="Properties" tiptext="Properties for class VideoState" helpurl="fl.video:VideoState">
                <string name="BUFFERING" object="[fl.video.VideoState]" text="VideoState.BUFFERING" constant="true" tiptext="The video player is in the buffering state." version="" playername="" helpurl="fl.video:VideoState:BUFFERING"/>
                <string name="CONNECTION_ERROR" object="[fl.video.VideoState]" text="VideoState.CONNECTION_ERROR" constant="true" tiptext="The video player is in the connection error state." version="" playername="" helpurl="fl.video:VideoState:CONNECTION_ERROR"/>
                <string name="DISCONNECTED" object="[fl.video.VideoState]" text="VideoState.DISCONNECTED" constant="true" tiptext="The video player is in the disconnected state." version="" playername="" helpurl="fl.video:VideoState:DISCONNECTED"/>
                <string name="LOADING" object="[fl.video.VideoState]" text="VideoState.LOADING" constant="true" tiptext="The video player is in the loading state." version="" playername="" helpurl="fl.video:VideoState:LOADING"/>
                <string name="PAUSED" object="[fl.video.VideoState]" text="VideoState.PAUSED" constant="true" tiptext="The video player is in the paused state." version="" playername="" helpurl="fl.video:VideoState:PAUSED"/>
                <string name="PLAYING" object="[fl.video.VideoState]" text="VideoState.PLAYING" constant="true" tiptext="The video player is in the playing state." version="" playername="" helpurl="fl.video:VideoState:PLAYING"/>
                <string name="RESIZING" object="[fl.video.VideoState]" text="VideoState.RESIZING" constant="true" tiptext="The video player is in the resizing state." version="" playername="" helpurl="fl.video:VideoState:RESIZING"/>
                <string name="REWINDING" object="[fl.video.VideoState]" text="VideoState.REWINDING" constant="true" tiptext="The video player is in the rewinding state." version="" playername="" helpurl="fl.video:VideoState:REWINDING"/>
                <string name="SEEKING" object="[fl.video.VideoState]" text="VideoState.SEEKING" constant="true" tiptext="The video player is in the seeking state." version="" playername="" helpurl="fl.video:VideoState:SEEKING"/>
                <string name="STOPPED" object="[fl.video.VideoState]" text="VideoState.STOPPED" constant="true" tiptext="The video player is in the stopped state." version="" playername="" helpurl="fl.video:VideoState:STOPPED"/>
            </folder>
        </folder>
    </folder>
        <folder name="flash.accessibility" id="flash.accessibility" sort="true" tiptext="Classes for package flash.accessibility" helpurl="flash.accessibility">
        <folder name="Accessibility" id="[flash.accessibility.Accessibility]" sort="true" index="true" asAncestors="Object" tiptext="The Accessibility class manages communication with screen readers." helpurl="flash.accessibility:Accessibility">
            <folder name="Methods" id="Methods" tiptext="Methods for class Accessibility" helpurl="flash.accessibility:Accessibility">
                <string name="updateProperties" object="[flash.accessibility.Accessibility]" text="Accessibility.updateProperties(%%):void" static="true" tiptext="Tells Flash Player to apply any accessibility changes made by using the DisplayObject.accessibilityProperties property." version="9" playername="" helpurl="flash.accessibility:Accessibility:updateProperties"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class Accessibility" helpurl="flash.accessibility:Accessibility">
                <string name="active" object="[flash.accessibility.Accessibility]" text=".active" tiptext="Indicates whether a screen reader is active and the application is communicating with it." version="" playername="" helpurl="flash.accessibility:Accessibility:active:get"/>
            </folder>
        </folder>
        <folder name="AccessibilityImplementation" id="[flash.accessibility.AccessibilityImplementation]" sort="true" index="true" asAncestors="Object" tiptext="The AccessibilityImplementation class is the base class in Flash Player that allows for the implementation of accessibility in components." helpurl="flash.accessibility:AccessibilityImplementation">
            <folder name="Methods" id="Methods" tiptext="Methods for class AccessibilityImplementation" helpurl="flash.accessibility:AccessibilityImplementation">
                <string name="AccessibilityImplementation" object="[flash.accessibility.AccessibilityImplementation]" text="new AccessibilityImplementation(%%)" constructor="true" tiptext="Static constructor." version="2" playername="" helpurl="flash.accessibility:AccessibilityImplementation:AccessibilityImplementation"/>
                <string name="accDoDefaultAction" object="[flash.accessibility.AccessibilityImplementation]" text=".accDoDefaultAction(%childID:uint%):void" tiptext="Performs the default action associated with the component." version="2" playername="" helpurl="flash.accessibility:AccessibilityImplementation:accDoDefaultAction"/>
                <string name="accLocation" object="[flash.accessibility.AccessibilityImplementation]" text=".accLocation(%childID:uint%)" tiptext="Returns a DisplayObject or Rectangle object that specifies the bounding box of a child element." version="2" playername="" helpurl="flash.accessibility:AccessibilityImplementation:accLocation"/>
                <string name="accSelect" object="[flash.accessibility.AccessibilityImplementation]" text=".accSelect(%operation:uint,childID:uint%):void" tiptext="IAccessible method for altering the selection in the component that this AccessibilityImplementation represents." version="2" playername="" helpurl="flash.accessibility:AccessibilityImplementation:accSelect"/>
                <string name="getChildIDArray" object="[flash.accessibility.AccessibilityImplementation]" text=".getChildIDArray(%%):Array" tiptext="Returns an array containing the unsigned integer IDs of all child elements in the AccessibilityImplementation." version="2" playername="" helpurl="flash.accessibility:AccessibilityImplementation:getChildIDArray"/>
                <string name="get_accDefaultAction" object="[flash.accessibility.AccessibilityImplementation]" text=".get_accDefaultAction(%childID:uint%):String" tiptext="Returns the default action of the component." version="2" playername="" helpurl="flash.accessibility:AccessibilityImplementation:get_accDefaultAction"/>
                <string name="get_accFocus" object="[flash.accessibility.AccessibilityImplementation]" text=".get_accFocus(%%):uint" tiptext="Returns the unsigned integer ID of the child element that has child focus within the component." version="2" playername="" helpurl="flash.accessibility:AccessibilityImplementation:get_accFocus"/>
                <string name="get_accName" object="[flash.accessibility.AccessibilityImplementation]" text=".get_accName(%childID:uint%):String" tiptext="Returns the name of the component" version="2" playername="" helpurl="flash.accessibility:AccessibilityImplementation:get_accName"/>
                <string name="get_accRole" object="[flash.accessibility.AccessibilityImplementation]" text=".get_accRole(%childID:uint%):uint" tiptext="Returns the system role for the component" version="2" playername="" helpurl="flash.accessibility:AccessibilityImplementation:get_accRole"/>
                <string name="get_accSelection" object="[flash.accessibility.AccessibilityImplementation]" text=".get_accSelection(%%):Array" tiptext="Returns an array containing the IDs of all selected child elements." version="2" playername="" helpurl="flash.accessibility:AccessibilityImplementation:get_accSelection"/>
                <string name="get_accState" object="[flash.accessibility.AccessibilityImplementation]" text=".get_accState(%childID:uint%):uint" tiptext="Returns the state of the component" version="2" playername="" helpurl="flash.accessibility:AccessibilityImplementation:get_accState"/>
                <string name="get_accValue" object="[flash.accessibility.AccessibilityImplementation]" text=".get_accValue(%childID:uint%):String" tiptext="Returns the value of the component" version="2" playername="" helpurl="flash.accessibility:AccessibilityImplementation:get_accValue"/>
                <string name="isLabeledBy" object="[flash.accessibility.AccessibilityImplementation]" text=".isLabeledBy(%labelBounds:flash.geom:Rectangle%):Boolean" tiptext="Indicates whether a nearby text object is a label for this component." version="2" playername="" helpurl="flash.accessibility:AccessibilityImplementation:isLabeledBy"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class AccessibilityImplementation" helpurl="flash.accessibility:AccessibilityImplementation">
                <string name="errno" object="[flash.accessibility.AccessibilityImplementation]" text=".errno" tiptext="Indicates an error code." version="" playername="" helpurl="flash.accessibility:AccessibilityImplementation:errno"/>
                <string name="stub" object="[flash.accessibility.AccessibilityImplementation]" text=".stub" tiptext="Used to create a component accessibility stub." version="" playername="" helpurl="flash.accessibility:AccessibilityImplementation:stub"/>
            </folder>
        </folder>
        <folder name="AccessibilityProperties" id="[flash.accessibility.AccessibilityProperties]" sort="true" index="true" asAncestors="Object" tiptext="The AccessibilityProperties class lets you control the presentation of Flash objects to accessibility aids, such as screen readers." helpurl="flash.accessibility:AccessibilityProperties">
            <folder name="Methods" id="Methods" tiptext="Methods for class AccessibilityProperties" helpurl="flash.accessibility:AccessibilityProperties">
                <string name="AccessibilityProperties" object="[flash.accessibility.AccessibilityProperties]" text="new AccessibilityProperties(%%)" constructor="true" tiptext="Creates a new AccessibilityProperties object." version="9" playername="" helpurl="flash.accessibility:AccessibilityProperties:AccessibilityProperties"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class AccessibilityProperties" helpurl="flash.accessibility:AccessibilityProperties">
                <string name="description" object="[flash.accessibility.AccessibilityProperties]" text=".description" tiptext="Provides a description for this display object in the accessible presentation." version="" playername="" helpurl="flash.accessibility:AccessibilityProperties:description"/>
                <string name="forceSimple" object="[flash.accessibility.AccessibilityProperties]" text=".forceSimple" tiptext="If true, causes Flash Player to exclude child objects within this display object from the accessible presentation." version="" playername="" helpurl="flash.accessibility:AccessibilityProperties:forceSimple"/>
                <string name="name" object="[flash.accessibility.AccessibilityProperties]" text=".name" tiptext="Provides a name for this display object in the accessible presentation." version="" playername="" helpurl="flash.accessibility:AccessibilityProperties:name"/>
                <string name="noAutoLabeling" object="[flash.accessibility.AccessibilityProperties]" text=".noAutoLabeling" tiptext="If true, disables the Flash Player default auto-labeling system." version="" playername="" helpurl="flash.accessibility:AccessibilityProperties:noAutoLabeling"/>
                <string name="shortcut" object="[flash.accessibility.AccessibilityProperties]" text=".shortcut" tiptext="Indicates a keyboard shortcut associated with this display object." version="" playername="" helpurl="flash.accessibility:AccessibilityProperties:shortcut"/>
                <string name="silent" object="[flash.accessibility.AccessibilityProperties]" text=".silent" tiptext="If true, excludes this display object from accessible presentation." version="" playername="" helpurl="flash.accessibility:AccessibilityProperties:silent"/>
            </folder>
        </folder>
        <folder name="ISearchableText" id="[flash.accessibility.ISearchableText]" sort="true" index="true" tiptext="The ISearchableText interface can be implemented by objects that contain text which should be searchable on the web." helpurl="flash.accessibility:ISearchableText">
            <folder name="Properties" id="Properties" tiptext="Properties for class ISearchableText" helpurl="flash.accessibility:ISearchableText">
                <string name="searchText" object="[flash.accessibility.ISearchableText]" text=".searchText" tiptext="Gets the search text from a component implementing ISearchableText." version="" playername="" helpurl="flash.accessibility:ISearchableText:searchText:get"/>
            </folder>
        </folder>
        <folder name="ISimpleTextSelection" id="[flash.accessibility.ISimpleTextSelection]" sort="true" index="true" tiptext="The ISimpleTextSelection class can be used to add support for the MSAA ISimpleTextSelection interface to an AccessibilityImplementation." helpurl="flash.accessibility:ISimpleTextSelection">
            <folder name="Properties" id="Properties" tiptext="Properties for class ISimpleTextSelection" helpurl="flash.accessibility:ISimpleTextSelection">
                <string name="selectionActiveIndex" object="[flash.accessibility.ISimpleTextSelection]" text=".selectionActiveIndex" tiptext="The zero-based character index value of the last character in the current selection." version="" playername="" helpurl="flash.accessibility:ISimpleTextSelection:selectionActiveIndex:get"/>
                <string name="selectionAnchorIndex" object="[flash.accessibility.ISimpleTextSelection]" text=".selectionAnchorIndex" tiptext="The zero-based character index value of the first character in the current selection." version="" playername="" helpurl="flash.accessibility:ISimpleTextSelection:selectionAnchorIndex:get"/>
            </folder>
        </folder>
    </folder>
        <folder name="flash.data" id="flash.data" sort="true" tiptext="Classes for package flash.data" helpurl="flash.data">
        <folder name="EncryptedLocalStore" id="[flash.data.EncryptedLocalStore]" sort="true" index="true" asAncestors="Object" tiptext="The EncryptedLocalStore class provides a persistent, encrypted data storage mechanism." helpurl="flash.data:EncryptedLocalStore">
            <folder name="Methods" id="Methods" tiptext="Methods for class EncryptedLocalStore" helpurl="flash.data:EncryptedLocalStore">
                <string name="getItem" object="[flash.data.EncryptedLocalStore]" text="EncryptedLocalStore.getItem(%name:String%):flash.utils:ByteArray" static="true" tiptext="The data corresponding to the specified name." version="1.0" playername="AIR" helpurl="flash.data:EncryptedLocalStore:getItem"/>
                <string name="removeItem" object="[flash.data.EncryptedLocalStore]" text="EncryptedLocalStore.removeItem(%name:String%):void" static="true" tiptext="Removes the item with the given name from the encrypted local store." version="1.0" playername="AIR" helpurl="flash.data:EncryptedLocalStore:removeItem"/>
                <string name="reset" object="[flash.data.EncryptedLocalStore]" text="EncryptedLocalStore.reset(%%):void" static="true" tiptext="Clears the entire encrypted local store, deleting all data." version="1.0" playername="AIR" helpurl="flash.data:EncryptedLocalStore:reset"/>
                <string name="setItem" object="[flash.data.EncryptedLocalStore]" text="EncryptedLocalStore.setItem(%name:String,data:flash.utils:ByteArray[,stronglyBound:Boolean=false]%):void" static="true" tiptext="Stores a ByteArray object under the specified name." version="1.0" playername="AIR" helpurl="flash.data:EncryptedLocalStore:setItem"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class EncryptedLocalStore" helpurl="flash.data:EncryptedLocalStore">
                <string name="isSupported" object="[flash.data.EncryptedLocalStore]" text=".isSupported" tiptext="The isSupported property is set to true if the EncryptedLocalStore class is supported on the current platform, otherwise it is set to false." version="" playername="AIR" helpurl="flash.data:EncryptedLocalStore:isSupported:get"/>
            </folder>
        </folder>
        <folder name="SQLCollationType" id="[flash.data.SQLCollationType]" sort="true" index="true" asAncestors="Object" tiptext="This class contains the constants that represent the possible values for the defaultCollationType parameter of the SQLColumnSchema constructor, as well as the SQLColumnSchema.defaultCollationType property." helpurl="flash.data:SQLCollationType">
            <folder name="Properties" id="Properties" tiptext="Properties for class SQLCollationType" helpurl="flash.data:SQLCollationType">
                <string name="BINARY" object="[flash.data.SQLCollationType]" text="SQLCollationType.BINARY" constant="true" tiptext="Indicates that the column is defined to use the BINARY collation sequence." version="" playername="AIR" helpurl="flash.data:SQLCollationType:BINARY"/>
                <string name="NO_CASE" object="[flash.data.SQLCollationType]" text="SQLCollationType.NO_CASE" constant="true" tiptext="Indicates that the column is defined to use the NOCASE collation sequence." version="" playername="AIR" helpurl="flash.data:SQLCollationType:NO_CASE"/>
            </folder>
        </folder>
        <folder name="SQLColumnNameStyle" id="[flash.data.SQLColumnNameStyle]" sort="true" index="true" asAncestors="Object" tiptext="This class contains the constants that represent the possible values for the SQLConnection.columnNameStyle property." helpurl="flash.data:SQLColumnNameStyle">
            <folder name="Properties" id="Properties" tiptext="Properties for class SQLColumnNameStyle" helpurl="flash.data:SQLColumnNameStyle">
                <string name="DEFAULT" object="[flash.data.SQLColumnNameStyle]" text="SQLColumnNameStyle.DEFAULT" constant="true" tiptext="Indicates that column names returned from a SELECT statement use the default format." version="" playername="AIR" helpurl="flash.data:SQLColumnNameStyle:DEFAULT"/>
                <string name="LONG" object="[flash.data.SQLColumnNameStyle]" text="SQLColumnNameStyle.LONG" constant="true" tiptext="Indicates that column names returned from a SELECT statement use long-column-name format." version="" playername="AIR" helpurl="flash.data:SQLColumnNameStyle:LONG"/>
                <string name="SHORT" object="[flash.data.SQLColumnNameStyle]" text="SQLColumnNameStyle.SHORT" constant="true" tiptext="Indicates that column names returned from a SELECT statement use short-column-name format." version="" playername="AIR" helpurl="flash.data:SQLColumnNameStyle:SHORT"/>
            </folder>
        </folder>
        <folder name="SQLColumnSchema" id="[flash.data.SQLColumnSchema]" sort="true" index="true" asAncestors="Object" tiptext="The SQLColumnSchema class provides information describing the characteristics of a specific column within a table in a database." helpurl="flash.data:SQLColumnSchema">
            <folder name="Methods" id="Methods" tiptext="Methods for class SQLColumnSchema" helpurl="flash.data:SQLColumnSchema">
                <string name="SQLColumnSchema" object="[flash.data.SQLColumnSchema]" text="new SQLColumnSchema(%name:String,primaryKey:Boolean,allowNull:Boolean,autoIncrement:Boolean,dataType:String,defaultCollationType:String%)" constructor="true" tiptext="Constructs a SQLColumnSchema instance." version="1.0" playername="AIR" helpurl="flash.data:SQLColumnSchema:SQLColumnSchema"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class SQLColumnSchema" helpurl="flash.data:SQLColumnSchema">
                <string name="allowNull" object="[flash.data.SQLColumnSchema]" text=".allowNull" tiptext="Indicates whether NULL values are allowed in this column." version="" playername="AIR" helpurl="flash.data:SQLColumnSchema:allowNull:get"/>
                <string name="autoIncrement" object="[flash.data.SQLColumnSchema]" text=".autoIncrement" tiptext="Indicates whether this is an auto-increment column." version="" playername="AIR" helpurl="flash.data:SQLColumnSchema:autoIncrement:get"/>
                <string name="dataType" object="[flash.data.SQLColumnSchema]" text=".dataType" tiptext="Gets the data type of the column as a string." version="" playername="AIR" helpurl="flash.data:SQLColumnSchema:dataType:get"/>
                <string name="defaultCollationType" object="[flash.data.SQLColumnSchema]" text=".defaultCollationType" tiptext="Indicates the default collation sequence that is defined for this column." version="" playername="AIR" helpurl="flash.data:SQLColumnSchema:defaultCollationType:get"/>
                <string name="name" object="[flash.data.SQLColumnSchema]" text=".name" tiptext="Gets the name of the column." version="" playername="AIR" helpurl="flash.data:SQLColumnSchema:name:get"/>
                <string name="primaryKey" object="[flash.data.SQLColumnSchema]" text=".primaryKey" tiptext="Indicates whether this column is the primary key column (or one of the primary key columns in a composite key) for its associated table." version="" playername="AIR" helpurl="flash.data:SQLColumnSchema:primaryKey:get"/>
            </folder>
        </folder>
        <folder name="SQLConnection" id="[flash.data.SQLConnection]" sort="true" index="true" asAncestors="flash.events:EventDispatcher,Object" tiptext="A SQLConnection instance is used to manage the creation of and connection to local SQL database files (local databases)." helpurl="flash.data:SQLConnection">
            <folder name="Methods" id="Methods" tiptext="Methods for class SQLConnection" helpurl="flash.data:SQLConnection">
                <string name="SQLConnection" object="[flash.data.SQLConnection]" text="new SQLConnection(%%)" constructor="true" tiptext="Creates a SQLConnection instance." version="1.0" playername="AIR" helpurl="flash.data:SQLConnection:SQLConnection"/>
                <string name="addEventListener" object="[flash.data.SQLConnection]" text=".addEventListener(%type:String,listener:Function[,useCapture:Boolean=false,priority:int=0.0,useWeakReference:Boolean=false]%):void" tiptext="Registers an event listener object with an EventDispatcher object so that the listener receives notification of an event." version="1.0" playername="AIR" helpurl="flash.data:SQLConnection:addEventListener"/>
                <string name="analyze" object="[flash.data.SQLConnection]" text=".analyze(%[resourceName:String=null,responder:flash.net:Responder=null]%):void" tiptext="Gathers statistics about database indices and stores them in the database." version="1.0" playername="AIR" helpurl="flash.data:SQLConnection:analyze"/>
                <string name="attach" object="[flash.data.SQLConnection]" text=".attach(%name:String[,reference:Object=null,responder:flash.net:Responder=null,encryptionKey:flash.utils:ByteArray=null]%):void" tiptext="Adds another database to the SQLConnection instance, giving the new database the specified name." version="1.0" playername="AIR" helpurl="flash.data:SQLConnection:attach"/>
                <string name="begin" object="[flash.data.SQLConnection]" text=".begin(%[option:String=null,responder:flash.net:Responder=null]%):void" tiptext="Begins a transaction within which all SQL statements executed against the connection&apos;s database or databases are grouped." version="1.0" playername="AIR" helpurl="flash.data:SQLConnection:begin"/>
                <string name="cancel" object="[flash.data.SQLConnection]" text=".cancel(%[responder:flash.net:Responder=null]%):void" tiptext="Aborts all SQL statements that are currently executing on databases connected to the SQLConnection instance." version="1.0" playername="AIR" helpurl="flash.data:SQLConnection:cancel"/>
                <string name="close" object="[flash.data.SQLConnection]" text=".close(%[responder:flash.net:Responder=null]%):void" tiptext="Closes the current database connection." version="1.0" playername="AIR" helpurl="flash.data:SQLConnection:close"/>
                <string name="commit" object="[flash.data.SQLConnection]" text=".commit(%[responder:flash.net:Responder=null]%):void" tiptext="Commits an existing transaction, causing any actions performed by the transaction&apos;s statements to be permanently applied to the database." version="1.0" playername="AIR" helpurl="flash.data:SQLConnection:commit"/>
                <string name="compact" object="[flash.data.SQLConnection]" text=".compact(%[responder:flash.net:Responder=null]%):void" tiptext="Reclaims all unused space in the database." version="1.0" playername="AIR" helpurl="flash.data:SQLConnection:compact"/>
                <string name="deanalyze" object="[flash.data.SQLConnection]" text=".deanalyze(%[responder:flash.net:Responder=null]%):void" tiptext="Removes all statistical information created by a call to the analyze() method." version="1.0" playername="AIR" helpurl="flash.data:SQLConnection:deanalyze"/>
                <string name="detach" object="[flash.data.SQLConnection]" text=".detach(%name:String[,responder:flash.net:Responder=null]%):void" tiptext="Detaches an additional database previously attached to the SQLConnection instance using the attach() method." version="1.0" playername="AIR" helpurl="flash.data:SQLConnection:detach"/>
                <string name="getSchemaResult" object="[flash.data.SQLConnection]" text=".getSchemaResult(%%):flash.data:SQLSchemaResult" tiptext="Provides access to the result of a call to the loadSchema() method." version="1.0" playername="AIR" helpurl="flash.data:SQLConnection:getSchemaResult"/>
                <string name="loadSchema" object="[flash.data.SQLConnection]" text=".loadSchema(%[type:Class=null,name:String=null,database:String=main,includeColumnSchema:Boolean=true,responder:flash.net:Responder=null]%):void" tiptext="Loads schema information from the connected database or any attached databases." version="1.0" playername="AIR" helpurl="flash.data:SQLConnection:loadSchema"/>
                <string name="openAsync" object="[flash.data.SQLConnection]" text=".openAsync(%[reference:Object=null,openMode:String=create,responder:flash.net:Responder=null,autoCompact:Boolean=false,pageSize:int=1024,encryptionKey:flash.utils:ByteArray=null]%):void" tiptext="Opens an asynchronous connection to the database file at the specified location in the file system, or creates and opens a new database file at the location, or creates and opens an in-memory database." version="1.0" playername="AIR" helpurl="flash.data:SQLConnection:openAsync"/>
                <string name="open" object="[flash.data.SQLConnection]" text=".open(%[reference:Object=null,openMode:String=create,autoCompact:Boolean=false,pageSize:int=1024,encryptionKey:flash.utils:ByteArray=null]%):void" tiptext="Opens a synchronous connection to the database file at the specified location in the file system, or creates and opens a new database file at the location, or creates and opens an in-memory database." version="1.0" playername="AIR" helpurl="flash.data:SQLConnection:open"/>
                <string name="reencrypt" object="[flash.data.SQLConnection]" text=".reencrypt(%newEncryptionKey:flash.utils:ByteArray[,responder:flash.net:Responder=null]%):void" tiptext="Changes the encryption key of an encrypted database." version="1.5" playername="AIR" helpurl="flash.data:SQLConnection:reencrypt"/>
                <string name="releaseSavepoint" object="[flash.data.SQLConnection]" text=".releaseSavepoint(%[name:String=null,responder:flash.net:Responder=null]%):void" tiptext="This method commits the SQL operations made since the most recent savepoint or the named savepoint if a name is specified." version="2" playername="AIR" helpurl="flash.data:SQLConnection:releaseSavepoint"/>
                <string name="removeEventListener" object="[flash.data.SQLConnection]" text=".removeEventListener(%type:String,listener:Function[,useCapture:Boolean=false]%):void" tiptext="Removes a listener from the EventDispatcher object." version="1.0" playername="AIR" helpurl="flash.data:SQLConnection:removeEventListener"/>
                <string name="rollbackToSavepoint" object="[flash.data.SQLConnection]" text=".rollbackToSavepoint(%[name:String=null,responder:flash.net:Responder=null]%):void" tiptext="Rolls back any SQL operations since the most recent savepoint or the named savepoint if a name is specified." version="2" playername="AIR" helpurl="flash.data:SQLConnection:rollbackToSavepoint"/>
                <string name="rollback" object="[flash.data.SQLConnection]" text=".rollback(%[responder:flash.net:Responder=null]%):void" tiptext="Rolls back an existing transaction created using the begin() method, meaning all changes made by any SQL statements in the transaction are discarded." version="1.0" playername="AIR" helpurl="flash.data:SQLConnection:rollback"/>
                <string name="setSavepoint" object="[flash.data.SQLConnection]" text=".setSavepoint(%[name:String=null,responder:flash.net:Responder=null]%):void" tiptext="Creates a savepoint, which is like a bookmark within a database transaction." version="2" playername="AIR" helpurl="flash.data:SQLConnection:setSavepoint"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class SQLConnection" helpurl="flash.data:SQLConnection">
                <string name="autoCompact" object="[flash.data.SQLConnection]" text=".autoCompact" tiptext="Indicates whether autocompacting was enabled when the current database was originally created (the value that was specified for the autoCompact parameter in the open() or openAsync() call that created the database)." version="" playername="AIR" helpurl="flash.data:SQLConnection:autoCompact:get"/>
                <string name="cacheSize" object="[flash.data.SQLConnection]" text=".cacheSize" tiptext="Provides access to the cache size for this connection, which represents the maximum number of database disk pages that are held in memory at one time." version="" playername="AIR" helpurl="flash.data:SQLConnection:cacheSize:get"/>
                <string name="columnNameStyle" object="[flash.data.SQLConnection]" text=".columnNameStyle" tiptext="Indicates how column names are reported in the result of a SELECT statement." version="" playername="AIR" helpurl="flash.data:SQLConnection:columnNameStyle:get"/>
                <string name="connected" object="[flash.data.SQLConnection]" text=".connected" tiptext="Indicates whether the SQLConnection instance has an open connection to a database file." version="" playername="AIR" helpurl="flash.data:SQLConnection:connected:get"/>
                <string name="inTransaction" object="[flash.data.SQLConnection]" text=".inTransaction" tiptext="Indicates whether this connection is currently involved in a transaction." version="" playername="AIR" helpurl="flash.data:SQLConnection:inTransaction:get"/>
                <string name="lastInsertRowID" object="[flash.data.SQLConnection]" text=".lastInsertRowID" tiptext="The last generated row identifier created by a SQL INSERT statement." version="" playername="AIR" helpurl="flash.data:SQLConnection:lastInsertRowID:get"/>
                <string name="pageSize" object="[flash.data.SQLConnection]" text=".pageSize" tiptext="Indicates the database page size (in bytes) that was specified when the current database was originally created (the value that was specified for the pageSize parameter in the open() or openAsync() call that created the database)." version="" playername="AIR" helpurl="flash.data:SQLConnection:pageSize:get"/>
                <string name="totalChanges" object="[flash.data.SQLConnection]" text=".totalChanges" tiptext="Contains the total number of data changes that have been made since the connection to the database was opened." version="" playername="AIR" helpurl="flash.data:SQLConnection:totalChanges:get"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class SQLConnection" helpurl="flash.data:SQLConnection">
                <string name="update" object="[flash.data.SQLConnection]" text=".addEventListener(%type:String=SQLUpdateEvent.UPDATE{SQLUpdateEvent.UPDATE,SQLEvent.SET_SAVEPOINT,SQLEvent.SCHEMA,SQLEvent.ROLLBACK_TO_SAVEPOINT,SQLEvent.ROLLBACK,SQLEvent.RELEASE_SAVEPOINT,SQLEvent.REENCRYPT,SQLEvent.OPEN,SQLUpdateEvent.INSERT,SQLErrorEvent.ERROR,SQLEvent.DETACH,SQLUpdateEvent.DELETE,SQLEvent.DEANALYZE,SQLEvent.COMMIT,SQLEvent.CLOSE,SQLEvent.COMPACT,SQLEvent.CANCEL,SQLEvent.BEGIN,SQLEvent.ATTACH,SQLEvent.ANALYZE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when data in any table in any of the connected databases changes as a result of a SQL UPDATE command." version="" playername="AIR" helpurl="flash.data:SQLConnection_flash.events.SQLUpdateEvent.UPDATE_update"/>
                <string name="setSavepoint" object="[flash.data.SQLConnection]" text=".addEventListener(%type:String=SQLEvent.SET_SAVEPOINT{SQLUpdateEvent.UPDATE,SQLEvent.SET_SAVEPOINT,SQLEvent.SCHEMA,SQLEvent.ROLLBACK_TO_SAVEPOINT,SQLEvent.ROLLBACK,SQLEvent.RELEASE_SAVEPOINT,SQLEvent.REENCRYPT,SQLEvent.OPEN,SQLUpdateEvent.INSERT,SQLErrorEvent.ERROR,SQLEvent.DETACH,SQLUpdateEvent.DELETE,SQLEvent.DEANALYZE,SQLEvent.COMMIT,SQLEvent.CLOSE,SQLEvent.COMPACT,SQLEvent.CANCEL,SQLEvent.BEGIN,SQLEvent.ATTACH,SQLEvent.ANALYZE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a setSavepoint() method call&apos;s operation completes successfully." version="" playername="AIR" helpurl="flash.data:SQLConnection_flash.events.SQLEvent.SET_SAVEPOINT_setSavepoint"/>
                <string name="schema" object="[flash.data.SQLConnection]" text=".addEventListener(%type:String=SQLEvent.SCHEMA{SQLUpdateEvent.UPDATE,SQLEvent.SET_SAVEPOINT,SQLEvent.SCHEMA,SQLEvent.ROLLBACK_TO_SAVEPOINT,SQLEvent.ROLLBACK,SQLEvent.RELEASE_SAVEPOINT,SQLEvent.REENCRYPT,SQLEvent.OPEN,SQLUpdateEvent.INSERT,SQLErrorEvent.ERROR,SQLEvent.DETACH,SQLUpdateEvent.DELETE,SQLEvent.DEANALYZE,SQLEvent.COMMIT,SQLEvent.CLOSE,SQLEvent.COMPACT,SQLEvent.CANCEL,SQLEvent.BEGIN,SQLEvent.ATTACH,SQLEvent.ANALYZE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a loadSchema() method call&apos;s operation completes successfully and the schema results are ready." version="" playername="AIR" helpurl="flash.data:SQLConnection_flash.events.SQLEvent.SCHEMA_schema"/>
                <string name="rollbackToSavepoint" object="[flash.data.SQLConnection]" text=".addEventListener(%type:String=SQLEvent.ROLLBACK_TO_SAVEPOINT{SQLUpdateEvent.UPDATE,SQLEvent.SET_SAVEPOINT,SQLEvent.SCHEMA,SQLEvent.ROLLBACK_TO_SAVEPOINT,SQLEvent.ROLLBACK,SQLEvent.RELEASE_SAVEPOINT,SQLEvent.REENCRYPT,SQLEvent.OPEN,SQLUpdateEvent.INSERT,SQLErrorEvent.ERROR,SQLEvent.DETACH,SQLUpdateEvent.DELETE,SQLEvent.DEANALYZE,SQLEvent.COMMIT,SQLEvent.CLOSE,SQLEvent.COMPACT,SQLEvent.CANCEL,SQLEvent.BEGIN,SQLEvent.ATTACH,SQLEvent.ANALYZE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a rollbackToSavepoint() method call&apos;s operation completes successfully." version="" playername="AIR" helpurl="flash.data:SQLConnection_flash.events.SQLEvent.ROLLBACK_TO_SAVEPOINT_rollbackToSavepoint"/>
                <string name="rollback" object="[flash.data.SQLConnection]" text=".addEventListener(%type:String=SQLEvent.ROLLBACK{SQLUpdateEvent.UPDATE,SQLEvent.SET_SAVEPOINT,SQLEvent.SCHEMA,SQLEvent.ROLLBACK_TO_SAVEPOINT,SQLEvent.ROLLBACK,SQLEvent.RELEASE_SAVEPOINT,SQLEvent.REENCRYPT,SQLEvent.OPEN,SQLUpdateEvent.INSERT,SQLErrorEvent.ERROR,SQLEvent.DETACH,SQLUpdateEvent.DELETE,SQLEvent.DEANALYZE,SQLEvent.COMMIT,SQLEvent.CLOSE,SQLEvent.COMPACT,SQLEvent.CANCEL,SQLEvent.BEGIN,SQLEvent.ATTACH,SQLEvent.ANALYZE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a rollback() method call&apos;s operation completes successfully." version="" playername="AIR" helpurl="flash.data:SQLConnection_flash.events.SQLEvent.ROLLBACK_rollback"/>
                <string name="releaseSavepoint" object="[flash.data.SQLConnection]" text=".addEventListener(%type:String=SQLEvent.RELEASE_SAVEPOINT{SQLUpdateEvent.UPDATE,SQLEvent.SET_SAVEPOINT,SQLEvent.SCHEMA,SQLEvent.ROLLBACK_TO_SAVEPOINT,SQLEvent.ROLLBACK,SQLEvent.RELEASE_SAVEPOINT,SQLEvent.REENCRYPT,SQLEvent.OPEN,SQLUpdateEvent.INSERT,SQLErrorEvent.ERROR,SQLEvent.DETACH,SQLUpdateEvent.DELETE,SQLEvent.DEANALYZE,SQLEvent.COMMIT,SQLEvent.CLOSE,SQLEvent.COMPACT,SQLEvent.CANCEL,SQLEvent.BEGIN,SQLEvent.ATTACH,SQLEvent.ANALYZE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a releaseSavepoint() method call&apos;s operation completes successfully." version="" playername="AIR" helpurl="flash.data:SQLConnection_flash.events.SQLEvent.RELEASE_SAVEPOINT_releaseSavepoint"/>
                <string name="reencrypt" object="[flash.data.SQLConnection]" text=".addEventListener(%type:String=SQLEvent.REENCRYPT{SQLUpdateEvent.UPDATE,SQLEvent.SET_SAVEPOINT,SQLEvent.SCHEMA,SQLEvent.ROLLBACK_TO_SAVEPOINT,SQLEvent.ROLLBACK,SQLEvent.RELEASE_SAVEPOINT,SQLEvent.REENCRYPT,SQLEvent.OPEN,SQLUpdateEvent.INSERT,SQLErrorEvent.ERROR,SQLEvent.DETACH,SQLUpdateEvent.DELETE,SQLEvent.DEANALYZE,SQLEvent.COMMIT,SQLEvent.CLOSE,SQLEvent.COMPACT,SQLEvent.CANCEL,SQLEvent.BEGIN,SQLEvent.ATTACH,SQLEvent.ANALYZE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a reencrypt() method call&apos;s operation completes successfully." version="" playername="AIR" helpurl="flash.data:SQLConnection_flash.events.SQLEvent.REENCRYPT_reencrypt"/>
                <string name="open" object="[flash.data.SQLConnection]" text=".addEventListener(%type:String=SQLEvent.OPEN{SQLUpdateEvent.UPDATE,SQLEvent.SET_SAVEPOINT,SQLEvent.SCHEMA,SQLEvent.ROLLBACK_TO_SAVEPOINT,SQLEvent.ROLLBACK,SQLEvent.RELEASE_SAVEPOINT,SQLEvent.REENCRYPT,SQLEvent.OPEN,SQLUpdateEvent.INSERT,SQLErrorEvent.ERROR,SQLEvent.DETACH,SQLUpdateEvent.DELETE,SQLEvent.DEANALYZE,SQLEvent.COMMIT,SQLEvent.CLOSE,SQLEvent.COMPACT,SQLEvent.CANCEL,SQLEvent.BEGIN,SQLEvent.ATTACH,SQLEvent.ANALYZE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when an openAsync() method call&apos;s operation completes successfully." version="" playername="AIR" helpurl="flash.data:SQLConnection_flash.events.SQLEvent.OPEN_open"/>
                <string name="insert" object="[flash.data.SQLConnection]" text=".addEventListener(%type:String=SQLUpdateEvent.INSERT{SQLUpdateEvent.UPDATE,SQLEvent.SET_SAVEPOINT,SQLEvent.SCHEMA,SQLEvent.ROLLBACK_TO_SAVEPOINT,SQLEvent.ROLLBACK,SQLEvent.RELEASE_SAVEPOINT,SQLEvent.REENCRYPT,SQLEvent.OPEN,SQLUpdateEvent.INSERT,SQLErrorEvent.ERROR,SQLEvent.DETACH,SQLUpdateEvent.DELETE,SQLEvent.DEANALYZE,SQLEvent.COMMIT,SQLEvent.CLOSE,SQLEvent.COMPACT,SQLEvent.CANCEL,SQLEvent.BEGIN,SQLEvent.ATTACH,SQLEvent.ANALYZE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when data in any table in any of the connected databases changes as a result of a SQL INSERT command." version="" playername="AIR" helpurl="flash.data:SQLConnection_flash.events.SQLUpdateEvent.INSERT_insert"/>
                <string name="error" object="[flash.data.SQLConnection]" text=".addEventListener(%type:String=SQLErrorEvent.ERROR{SQLUpdateEvent.UPDATE,SQLEvent.SET_SAVEPOINT,SQLEvent.SCHEMA,SQLEvent.ROLLBACK_TO_SAVEPOINT,SQLEvent.ROLLBACK,SQLEvent.RELEASE_SAVEPOINT,SQLEvent.REENCRYPT,SQLEvent.OPEN,SQLUpdateEvent.INSERT,SQLErrorEvent.ERROR,SQLEvent.DETACH,SQLUpdateEvent.DELETE,SQLEvent.DEANALYZE,SQLEvent.COMMIT,SQLEvent.CLOSE,SQLEvent.COMPACT,SQLEvent.CANCEL,SQLEvent.BEGIN,SQLEvent.ATTACH,SQLEvent.ANALYZE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when any of the SQLConnection object&apos;s asynchronous operations results in an error." version="" playername="AIR" helpurl="flash.data:SQLConnection_flash.events.SQLErrorEvent.ERROR_error"/>
                <string name="detach" object="[flash.data.SQLConnection]" text=".addEventListener(%type:String=SQLEvent.DETACH{SQLUpdateEvent.UPDATE,SQLEvent.SET_SAVEPOINT,SQLEvent.SCHEMA,SQLEvent.ROLLBACK_TO_SAVEPOINT,SQLEvent.ROLLBACK,SQLEvent.RELEASE_SAVEPOINT,SQLEvent.REENCRYPT,SQLEvent.OPEN,SQLUpdateEvent.INSERT,SQLErrorEvent.ERROR,SQLEvent.DETACH,SQLUpdateEvent.DELETE,SQLEvent.DEANALYZE,SQLEvent.COMMIT,SQLEvent.CLOSE,SQLEvent.COMPACT,SQLEvent.CANCEL,SQLEvent.BEGIN,SQLEvent.ATTACH,SQLEvent.ANALYZE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a detach() method call&apos;s operation completes successfully." version="" playername="AIR" helpurl="flash.data:SQLConnection_flash.events.SQLEvent.DETACH_detach"/>
                <string name="delete" object="[flash.data.SQLConnection]" text=".addEventListener(%type:String=SQLUpdateEvent.DELETE{SQLUpdateEvent.UPDATE,SQLEvent.SET_SAVEPOINT,SQLEvent.SCHEMA,SQLEvent.ROLLBACK_TO_SAVEPOINT,SQLEvent.ROLLBACK,SQLEvent.RELEASE_SAVEPOINT,SQLEvent.REENCRYPT,SQLEvent.OPEN,SQLUpdateEvent.INSERT,SQLErrorEvent.ERROR,SQLEvent.DETACH,SQLUpdateEvent.DELETE,SQLEvent.DEANALYZE,SQLEvent.COMMIT,SQLEvent.CLOSE,SQLEvent.COMPACT,SQLEvent.CANCEL,SQLEvent.BEGIN,SQLEvent.ATTACH,SQLEvent.ANALYZE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when data in any table in any of the connected databases changes as a result of a SQL DELETE command." version="" playername="AIR" helpurl="flash.data:SQLConnection_flash.events.SQLUpdateEvent.DELETE_delete"/>
                <string name="deanalyze" object="[flash.data.SQLConnection]" text=".addEventListener(%type:String=SQLEvent.DEANALYZE{SQLUpdateEvent.UPDATE,SQLEvent.SET_SAVEPOINT,SQLEvent.SCHEMA,SQLEvent.ROLLBACK_TO_SAVEPOINT,SQLEvent.ROLLBACK,SQLEvent.RELEASE_SAVEPOINT,SQLEvent.REENCRYPT,SQLEvent.OPEN,SQLUpdateEvent.INSERT,SQLErrorEvent.ERROR,SQLEvent.DETACH,SQLUpdateEvent.DELETE,SQLEvent.DEANALYZE,SQLEvent.COMMIT,SQLEvent.CLOSE,SQLEvent.COMPACT,SQLEvent.CANCEL,SQLEvent.BEGIN,SQLEvent.ATTACH,SQLEvent.ANALYZE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a deanalyze() method call&apos;s operation completes successfully." version="" playername="AIR" helpurl="flash.data:SQLConnection_flash.events.SQLEvent.DEANALYZE_deanalyze"/>
                <string name="commit" object="[flash.data.SQLConnection]" text=".addEventListener(%type:String=SQLEvent.COMMIT{SQLUpdateEvent.UPDATE,SQLEvent.SET_SAVEPOINT,SQLEvent.SCHEMA,SQLEvent.ROLLBACK_TO_SAVEPOINT,SQLEvent.ROLLBACK,SQLEvent.RELEASE_SAVEPOINT,SQLEvent.REENCRYPT,SQLEvent.OPEN,SQLUpdateEvent.INSERT,SQLErrorEvent.ERROR,SQLEvent.DETACH,SQLUpdateEvent.DELETE,SQLEvent.DEANALYZE,SQLEvent.COMMIT,SQLEvent.CLOSE,SQLEvent.COMPACT,SQLEvent.CANCEL,SQLEvent.BEGIN,SQLEvent.ATTACH,SQLEvent.ANALYZE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a commit() method call&apos;s operation completes successfully." version="" playername="AIR" helpurl="flash.data:SQLConnection_flash.events.SQLEvent.COMMIT_commit"/>
                <string name="close" object="[flash.data.SQLConnection]" text=".addEventListener(%type:String=SQLEvent.CLOSE{SQLUpdateEvent.UPDATE,SQLEvent.SET_SAVEPOINT,SQLEvent.SCHEMA,SQLEvent.ROLLBACK_TO_SAVEPOINT,SQLEvent.ROLLBACK,SQLEvent.RELEASE_SAVEPOINT,SQLEvent.REENCRYPT,SQLEvent.OPEN,SQLUpdateEvent.INSERT,SQLErrorEvent.ERROR,SQLEvent.DETACH,SQLUpdateEvent.DELETE,SQLEvent.DEANALYZE,SQLEvent.COMMIT,SQLEvent.CLOSE,SQLEvent.COMPACT,SQLEvent.CANCEL,SQLEvent.BEGIN,SQLEvent.ATTACH,SQLEvent.ANALYZE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a close() method call&apos;s operation completes successfully." version="" playername="AIR" helpurl="flash.data:SQLConnection_flash.events.SQLEvent.CLOSE_close"/>
                <string name="compact" object="[flash.data.SQLConnection]" text=".addEventListener(%type:String=SQLEvent.COMPACT{SQLUpdateEvent.UPDATE,SQLEvent.SET_SAVEPOINT,SQLEvent.SCHEMA,SQLEvent.ROLLBACK_TO_SAVEPOINT,SQLEvent.ROLLBACK,SQLEvent.RELEASE_SAVEPOINT,SQLEvent.REENCRYPT,SQLEvent.OPEN,SQLUpdateEvent.INSERT,SQLErrorEvent.ERROR,SQLEvent.DETACH,SQLUpdateEvent.DELETE,SQLEvent.DEANALYZE,SQLEvent.COMMIT,SQLEvent.CLOSE,SQLEvent.COMPACT,SQLEvent.CANCEL,SQLEvent.BEGIN,SQLEvent.ATTACH,SQLEvent.ANALYZE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a compact() method call&apos;s operation completes successfully." version="" playername="AIR" helpurl="flash.data:SQLConnection_flash.events.SQLEvent.COMPACT_compact"/>
                <string name="cancel" object="[flash.data.SQLConnection]" text=".addEventListener(%type:String=SQLEvent.CANCEL{SQLUpdateEvent.UPDATE,SQLEvent.SET_SAVEPOINT,SQLEvent.SCHEMA,SQLEvent.ROLLBACK_TO_SAVEPOINT,SQLEvent.ROLLBACK,SQLEvent.RELEASE_SAVEPOINT,SQLEvent.REENCRYPT,SQLEvent.OPEN,SQLUpdateEvent.INSERT,SQLErrorEvent.ERROR,SQLEvent.DETACH,SQLUpdateEvent.DELETE,SQLEvent.DEANALYZE,SQLEvent.COMMIT,SQLEvent.CLOSE,SQLEvent.COMPACT,SQLEvent.CANCEL,SQLEvent.BEGIN,SQLEvent.ATTACH,SQLEvent.ANALYZE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a cancel() method call&apos;s operation completes successfully." version="" playername="AIR" helpurl="flash.data:SQLConnection_flash.events.SQLEvent.CANCEL_cancel"/>
                <string name="begin" object="[flash.data.SQLConnection]" text=".addEventListener(%type:String=SQLEvent.BEGIN{SQLUpdateEvent.UPDATE,SQLEvent.SET_SAVEPOINT,SQLEvent.SCHEMA,SQLEvent.ROLLBACK_TO_SAVEPOINT,SQLEvent.ROLLBACK,SQLEvent.RELEASE_SAVEPOINT,SQLEvent.REENCRYPT,SQLEvent.OPEN,SQLUpdateEvent.INSERT,SQLErrorEvent.ERROR,SQLEvent.DETACH,SQLUpdateEvent.DELETE,SQLEvent.DEANALYZE,SQLEvent.COMMIT,SQLEvent.CLOSE,SQLEvent.COMPACT,SQLEvent.CANCEL,SQLEvent.BEGIN,SQLEvent.ATTACH,SQLEvent.ANALYZE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a begin() method call&apos;s operation completes successfully." version="" playername="AIR" helpurl="flash.data:SQLConnection_flash.events.SQLEvent.BEGIN_begin"/>
                <string name="attach" object="[flash.data.SQLConnection]" text=".addEventListener(%type:String=SQLEvent.ATTACH{SQLUpdateEvent.UPDATE,SQLEvent.SET_SAVEPOINT,SQLEvent.SCHEMA,SQLEvent.ROLLBACK_TO_SAVEPOINT,SQLEvent.ROLLBACK,SQLEvent.RELEASE_SAVEPOINT,SQLEvent.REENCRYPT,SQLEvent.OPEN,SQLUpdateEvent.INSERT,SQLErrorEvent.ERROR,SQLEvent.DETACH,SQLUpdateEvent.DELETE,SQLEvent.DEANALYZE,SQLEvent.COMMIT,SQLEvent.CLOSE,SQLEvent.COMPACT,SQLEvent.CANCEL,SQLEvent.BEGIN,SQLEvent.ATTACH,SQLEvent.ANALYZE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when an attach() method call&apos;s operation completes successfully." version="" playername="AIR" helpurl="flash.data:SQLConnection_flash.events.SQLEvent.ATTACH_attach"/>
                <string name="analyze" object="[flash.data.SQLConnection]" text=".addEventListener(%type:String=SQLEvent.ANALYZE{SQLUpdateEvent.UPDATE,SQLEvent.SET_SAVEPOINT,SQLEvent.SCHEMA,SQLEvent.ROLLBACK_TO_SAVEPOINT,SQLEvent.ROLLBACK,SQLEvent.RELEASE_SAVEPOINT,SQLEvent.REENCRYPT,SQLEvent.OPEN,SQLUpdateEvent.INSERT,SQLErrorEvent.ERROR,SQLEvent.DETACH,SQLUpdateEvent.DELETE,SQLEvent.DEANALYZE,SQLEvent.COMMIT,SQLEvent.CLOSE,SQLEvent.COMPACT,SQLEvent.CANCEL,SQLEvent.BEGIN,SQLEvent.ATTACH,SQLEvent.ANALYZE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when an analyze() operation completes successfully." version="" playername="AIR" helpurl="flash.data:SQLConnection_flash.events.SQLEvent.ANALYZE_analyze"/>
            </folder>
        </folder>
        <folder name="SQLIndexSchema" id="[flash.data.SQLIndexSchema]" sort="true" index="true" asAncestors="flash.data:SQLSchema,Object" tiptext="A SQLIndexSchema instance provides information describing a specific index in a database." helpurl="flash.data:SQLIndexSchema">
            <folder name="Methods" id="Methods" tiptext="Methods for class SQLIndexSchema" helpurl="flash.data:SQLIndexSchema">
                <string name="SQLIndexSchema" object="[flash.data.SQLIndexSchema]" text="new SQLIndexSchema(%database:String,name:String,sql:String,table:String%)" constructor="true" tiptext="Creates a SQLIndexSchema instance." version="1.0" playername="AIR" helpurl="flash.data:SQLIndexSchema:SQLIndexSchema"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class SQLIndexSchema" helpurl="flash.data:SQLIndexSchema">
                <string name="table" object="[flash.data.SQLIndexSchema]" text=".table" tiptext="The name of the table to which this index is attached." version="" playername="AIR" helpurl="flash.data:SQLIndexSchema:table:get"/>
            </folder>
        </folder>
        <folder name="SQLMode" id="[flash.data.SQLMode]" sort="true" index="true" asAncestors="Object" tiptext="This class contains the constants that represent the possible values for the openMode parameter of the SQLConnection.open() and SQLConnection.openAsync() methods." helpurl="flash.data:SQLMode">
            <folder name="Properties" id="Properties" tiptext="Properties for class SQLMode" helpurl="flash.data:SQLMode">
                <string name="CREATE" object="[flash.data.SQLMode]" text="SQLMode.CREATE" constant="true" tiptext="Indicates that the connection is opened for updates, and a database file is created if the specified file doesn&apos;t exist." version="" playername="AIR" helpurl="flash.data:SQLMode:CREATE"/>
                <string name="READ" object="[flash.data.SQLMode]" text="SQLMode.READ" constant="true" tiptext="Indicates that the connection is opened in read-only mode." version="" playername="AIR" helpurl="flash.data:SQLMode:READ"/>
                <string name="UPDATE" object="[flash.data.SQLMode]" text="SQLMode.UPDATE" constant="true" tiptext="Indicates that the connection is opened for updates but a new database file is not created if the specified file doesn&apos;t exist." version="" playername="AIR" helpurl="flash.data:SQLMode:UPDATE"/>
            </folder>
        </folder>
        <folder name="SQLResult" id="[flash.data.SQLResult]" sort="true" index="true" asAncestors="Object" tiptext="The SQLResult class provides access to data returned in response to the execution of a SQL statement (a SQLStatement instance)." helpurl="flash.data:SQLResult">
            <folder name="Methods" id="Methods" tiptext="Methods for class SQLResult" helpurl="flash.data:SQLResult">
                <string name="SQLResult" object="[flash.data.SQLResult]" text="new SQLResult(%[data:Array=null,rowsAffected:Number=0,complete:Boolean=true,rowID:Number=0]%)" constructor="true" tiptext="Creates a SQLResult instance." version="1.0" playername="AIR" helpurl="flash.data:SQLResult:SQLResult"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class SQLResult" helpurl="flash.data:SQLResult">
                <string name="complete" object="[flash.data.SQLResult]" text=".complete" tiptext="Indicates whether all the resulting data from a statement execution has been returned." version="" playername="AIR" helpurl="flash.data:SQLResult:complete:get"/>
                <string name="data" object="[flash.data.SQLResult]" text=".data" tiptext="The data returned as a result of the statement execution, specifically when a SQL SELECT statement is executed." version="" playername="AIR" helpurl="flash.data:SQLResult:data:get"/>
                <string name="lastInsertRowID" object="[flash.data.SQLResult]" text=".lastInsertRowID" tiptext="The last generated row identifier generated by a SQL INSERT statement." version="" playername="AIR" helpurl="flash.data:SQLResult:lastInsertRowID:get"/>
                <string name="rowsAffected" object="[flash.data.SQLResult]" text=".rowsAffected" tiptext="Indicates how many rows were affected by the operation." version="" playername="AIR" helpurl="flash.data:SQLResult:rowsAffected:get"/>
            </folder>
        </folder>
        <folder name="SQLSchema" id="[flash.data.SQLSchema]" sort="true" index="true" asAncestors="Object" tiptext="The SQLSchema class is the base class for schema information for database objects such as tables, views, and indices." helpurl="flash.data:SQLSchema">
            <folder name="Methods" id="Methods" tiptext="Methods for class SQLSchema" helpurl="flash.data:SQLSchema">
                <string name="SQLSchema" object="[flash.data.SQLSchema]" text="new SQLSchema(%database:String,name:String,sql:String%)" constructor="true" tiptext="Creates a SQLSchema instance." version="1.0" playername="AIR" helpurl="flash.data:SQLSchema:SQLSchema"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class SQLSchema" helpurl="flash.data:SQLSchema">
                <string name="database" object="[flash.data.SQLSchema]" text=".database" tiptext="The name of the database to which this schema object belongs." version="" playername="AIR" helpurl="flash.data:SQLSchema:database:get"/>
                <string name="name" object="[flash.data.SQLSchema]" text=".name" tiptext="The name of this schema object." version="" playername="AIR" helpurl="flash.data:SQLSchema:name:get"/>
                <string name="sql" object="[flash.data.SQLSchema]" text=".sql" tiptext="Returns the entire text of the SQL statement that was used to create this schema object." version="" playername="AIR" helpurl="flash.data:SQLSchema:sql:get"/>
            </folder>
        </folder>
        <folder name="SQLSchemaResult" id="[flash.data.SQLSchemaResult]" sort="true" index="true" asAncestors="Object" tiptext="A SQLSchemaResult instance contains the information resulting from a call to the SQLConnection.loadSchema() method." helpurl="flash.data:SQLSchemaResult">
            <folder name="Methods" id="Methods" tiptext="Methods for class SQLSchemaResult" helpurl="flash.data:SQLSchemaResult">
                <string name="SQLSchemaResult" object="[flash.data.SQLSchemaResult]" text="new SQLSchemaResult(%tables:Array,views:Array,indices:Array,triggers:Array%)" constructor="true" tiptext="Creates a SQLSchemaResult instance." version="1.0" playername="AIR" helpurl="flash.data:SQLSchemaResult:SQLSchemaResult"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class SQLSchemaResult" helpurl="flash.data:SQLSchemaResult">
                <string name="indices" object="[flash.data.SQLSchemaResult]" text=".indices" tiptext="An array of SQLIndexSchema instances requested in a call to SQLConnection.loadSchema()." version="" playername="AIR" helpurl="flash.data:SQLSchemaResult:indices:get"/>
                <string name="tables" object="[flash.data.SQLSchemaResult]" text=".tables" tiptext="An array of SQLTableSchema instances requested in a call to SQLConnection.loadSchema()." version="" playername="AIR" helpurl="flash.data:SQLSchemaResult:tables:get"/>
                <string name="triggers" object="[flash.data.SQLSchemaResult]" text=".triggers" tiptext="An array of SQLTriggerSchema instances requested in a call to SQLConnection.loadSchema()." version="" playername="AIR" helpurl="flash.data:SQLSchemaResult:triggers:get"/>
                <string name="views" object="[flash.data.SQLSchemaResult]" text=".views" tiptext="An array of SQLViewSchema instances requested in a call to SQLConnection.loadSchema()." version="" playername="AIR" helpurl="flash.data:SQLSchemaResult:views:get"/>
            </folder>
        </folder>
        <folder name="SQLStatement" id="[flash.data.SQLStatement]" sort="true" index="true" asAncestors="flash.events:EventDispatcher,Object" tiptext="A SQLStatement instance is used to execute a SQL statement against a local SQL database that is open through a SQLConnection instance." helpurl="flash.data:SQLStatement">
            <folder name="Methods" id="Methods" tiptext="Methods for class SQLStatement" helpurl="flash.data:SQLStatement">
                <string name="SQLStatement" object="[flash.data.SQLStatement]" text="new SQLStatement(%%)" constructor="true" tiptext="Creates a SQLStatement instance." version="1.0" playername="AIR" helpurl="flash.data:SQLStatement:SQLStatement"/>
                <string name="cancel" object="[flash.data.SQLStatement]" text=".cancel(%%):void" tiptext="Cancels execution of this statement." version="1.0" playername="AIR" helpurl="flash.data:SQLStatement:cancel"/>
                <string name="clearParameters" object="[flash.data.SQLStatement]" text=".clearParameters(%%):void" tiptext="Clears all current parameter settings." version="1.0" playername="AIR" helpurl="flash.data:SQLStatement:clearParameters"/>
                <string name="execute" object="[flash.data.SQLStatement]" text=".execute(%[prefetch:int=-1,responder:flash.net:Responder=null]%):void" tiptext="Executes the SQL in the text property against the database that is connected to the SQLConnection object in the sqlConnection property." version="1.0" playername="AIR" helpurl="flash.data:SQLStatement:execute"/>
                <string name="getResult" object="[flash.data.SQLStatement]" text=".getResult(%%):flash.data:SQLResult" tiptext="Provides access to a SQLResult object containing the results of the statement execution, including any result rows from a SELECT statement, and other information about the statement execution for all executed statements." version="1.0" playername="AIR" helpurl="flash.data:SQLStatement:getResult"/>
                <string name="next" object="[flash.data.SQLStatement]" text=".next(%[prefetch:int=-1,responder:flash.net:Responder=null]%):void" tiptext="Retrieves the next portion of a SELECT statement&apos;s result set." version="1.0" playername="AIR" helpurl="flash.data:SQLStatement:next"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class SQLStatement" helpurl="flash.data:SQLStatement">
                <string name="executing" object="[flash.data.SQLStatement]" text=".executing" tiptext="Indicates whether the statement is currently executing." version="" playername="AIR" helpurl="flash.data:SQLStatement:executing:get"/>
                <string name="itemClass" object="[flash.data.SQLStatement]" text=".itemClass" tiptext="Indicates a class (data type) that is used for each row returned as a result of the statement&apos;s execution." version="" playername="AIR" helpurl="flash.data:SQLStatement:itemClass:get"/>
                <string name="parameters" object="[flash.data.SQLStatement]" text=".parameters" tiptext="Serves as an associative array to which you add values for the parameters specified in the SQL statement&apos;s text property." version="" playername="AIR" helpurl="flash.data:SQLStatement:parameters:get"/>
                <string name="sqlConnection" object="[flash.data.SQLStatement]" text=".sqlConnection" tiptext="The SQLConnection object that manages the connection to the database or databases on which the statement is executed." version="" playername="AIR" helpurl="flash.data:SQLStatement:sqlConnection:get"/>
                <string name="text" object="[flash.data.SQLStatement]" text=".text" tiptext="The actual SQL text of the statement." version="" playername="AIR" helpurl="flash.data:SQLStatement:text:get"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class SQLStatement" helpurl="flash.data:SQLStatement">
                <string name="error" object="[flash.data.SQLStatement]" text=".addEventListener(%type:String=SQLErrorEvent.ERROR{SQLErrorEvent.ERROR,SQLEvent.RESULT},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when an error occurs during an operation." version="" playername="AIR" helpurl="flash.data:SQLStatement_flash.events.SQLErrorEvent.ERROR_error"/>
                <string name="result" object="[flash.data.SQLStatement]" text=".addEventListener(%type:String=SQLEvent.RESULT{SQLErrorEvent.ERROR,SQLEvent.RESULT},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when an execute() or next() method call&apos;s operation completes successfully." version="" playername="AIR" helpurl="flash.data:SQLStatement_flash.events.SQLEvent.RESULT_result"/>
            </folder>
        </folder>
        <folder name="SQLTableSchema" id="[flash.data.SQLTableSchema]" sort="true" index="true" asAncestors="flash.data:SQLSchema,Object" tiptext="A SQLTableSchema instance provides information describing a specific table in a database." helpurl="flash.data:SQLTableSchema">
            <folder name="Methods" id="Methods" tiptext="Methods for class SQLTableSchema" helpurl="flash.data:SQLTableSchema">
                <string name="SQLTableSchema" object="[flash.data.SQLTableSchema]" text="new SQLTableSchema(%database:String,name:String,sql:String,columns:Array%)" constructor="true" tiptext="Creates a SQLTableSchema instance." version="1.0" playername="AIR" helpurl="flash.data:SQLTableSchema:SQLTableSchema"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class SQLTableSchema" helpurl="flash.data:SQLTableSchema">
                <string name="columns" object="[flash.data.SQLTableSchema]" text=".columns" tiptext="An array of SQLColumnSchema instances containing schema information for this table&apos;s columns." version="" playername="AIR" helpurl="flash.data:SQLTableSchema:columns:get"/>
            </folder>
        </folder>
        <folder name="SQLTransactionLockType" id="[flash.data.SQLTransactionLockType]" sort="true" index="true" asAncestors="Object" tiptext="This class contains the constants that represent the possible values for the option parameter of the SQLConnection.begin() method." helpurl="flash.data:SQLTransactionLockType">
            <folder name="Properties" id="Properties" tiptext="Properties for class SQLTransactionLockType" helpurl="flash.data:SQLTransactionLockType">
                <string name="DEFERRED" object="[flash.data.SQLTransactionLockType]" text="SQLTransactionLockType.DEFERRED" constant="true" tiptext="Specifies the deferred locking transaction option." version="" playername="AIR" helpurl="flash.data:SQLTransactionLockType:DEFERRED"/>
                <string name="EXCLUSIVE" object="[flash.data.SQLTransactionLockType]" text="SQLTransactionLockType.EXCLUSIVE" constant="true" tiptext="Specifies the exclusive locking transaction option." version="" playername="AIR" helpurl="flash.data:SQLTransactionLockType:EXCLUSIVE"/>
                <string name="IMMEDIATE" object="[flash.data.SQLTransactionLockType]" text="SQLTransactionLockType.IMMEDIATE" constant="true" tiptext="Specifies the immediate locking transaction option." version="" playername="AIR" helpurl="flash.data:SQLTransactionLockType:IMMEDIATE"/>
            </folder>
        </folder>
        <folder name="SQLTriggerSchema" id="[flash.data.SQLTriggerSchema]" sort="true" index="true" asAncestors="flash.data:SQLSchema,Object" tiptext="A SQLTriggerSchema instance provides information describing a specific trigger in a database." helpurl="flash.data:SQLTriggerSchema">
            <folder name="Methods" id="Methods" tiptext="Methods for class SQLTriggerSchema" helpurl="flash.data:SQLTriggerSchema">
                <string name="SQLTriggerSchema" object="[flash.data.SQLTriggerSchema]" text="new SQLTriggerSchema(%database:String,name:String,sql:String,table:String%)" constructor="true" tiptext="Creates a SQLTriggerSchema instance." version="1.0" playername="AIR" helpurl="flash.data:SQLTriggerSchema:SQLTriggerSchema"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class SQLTriggerSchema" helpurl="flash.data:SQLTriggerSchema">
                <string name="table" object="[flash.data.SQLTriggerSchema]" text=".table" tiptext="The name of the table on which this trigger is defined, or the name of the view if the trigger is defined on a view." version="" playername="AIR" helpurl="flash.data:SQLTriggerSchema:table:get"/>
            </folder>
        </folder>
        <folder name="SQLViewSchema" id="[flash.data.SQLViewSchema]" sort="true" index="true" asAncestors="flash.data:SQLTableSchema,flash.data:SQLSchema,Object" tiptext="A SQLViewSchema instance provides information describing a specific view in a database." helpurl="flash.data:SQLViewSchema">
            <folder name="Methods" id="Methods" tiptext="Methods for class SQLViewSchema" helpurl="flash.data:SQLViewSchema">
                <string name="SQLViewSchema" object="[flash.data.SQLViewSchema]" text="new SQLViewSchema(%database:String,name:String,sql:String,columns:Array%)" constructor="true" tiptext="Creates a SQLViewSchema instance." version="1.0" playername="AIR" helpurl="flash.data:SQLViewSchema:SQLViewSchema"/>
            </folder>
        </folder>
    </folder>
        <folder name="flash.desktop" id="flash.desktop" sort="true" tiptext="Classes for package flash.desktop" helpurl="flash.desktop">
        <folder name="Clipboard" id="[flash.desktop.Clipboard]" sort="true" index="true" asAncestors="Object" tiptext="The Clipboard class provides a container for transferring data and objects through the clipboard." helpurl="flash.desktop:Clipboard">
            <folder name="Methods" id="Methods" tiptext="Methods for class Clipboard" helpurl="flash.desktop:Clipboard">
                <string name="Clipboard" object="[flash.desktop.Clipboard]" text="new Clipboard(%%)" constructor="true" tiptext="Creates an empty Clipboard object." version="1.0" playername="" helpurl="flash.desktop:Clipboard:Clipboard"/>
                <string name="clearData" object="[flash.desktop.Clipboard]" text=".clearData(%format:String%):void" tiptext="Deletes the data representation for the specified format." version="1.0" playername="" helpurl="flash.desktop:Clipboard:clearData"/>
                <string name="clear" object="[flash.desktop.Clipboard]" text=".clear(%%):void" tiptext="Deletes all data representations from this Clipboard object." version="1.0" playername="" helpurl="flash.desktop:Clipboard:clear"/>
                <string name="getData" object="[flash.desktop.Clipboard]" text=".getData(%format:String[,transferMode:String=originalPreferred]%):Object" tiptext="Gets the clipboard data if data in the specified format is present." version="1.0" playername="" helpurl="flash.desktop:Clipboard:getData"/>
                <string name="hasFormat" object="[flash.desktop.Clipboard]" text=".hasFormat(%format:String%):Boolean" tiptext="Checks whether data in the specified format exists in this Clipboard object." version="1.5" playername="" helpurl="flash.desktop:Clipboard:hasFormat"/>
                <string name="setDataHandler" object="[flash.desktop.Clipboard]" text=".setDataHandler(%format:String,handler:Function[,serializable:Boolean=true]%):Boolean" tiptext="Adds a reference to a handler function that produces the data to be transfered." version="1.0" playername="" helpurl="flash.desktop:Clipboard:setDataHandler"/>
                <string name="setData" object="[flash.desktop.Clipboard]" text=".setData(%format:String,data:Object[,serializable:Boolean=true]%):Boolean" tiptext="Adds a representation of the information to be transferred in the specified data format." version="1.0" playername="" helpurl="flash.desktop:Clipboard:setData"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class Clipboard" helpurl="flash.desktop:Clipboard">
                <string name="formats" object="[flash.desktop.Clipboard]" text=".formats" tiptext="An array of strings containing the names of the data formats availablein this Clipboard object." version="" playername="" helpurl="flash.desktop:Clipboard:formats:get"/>
                <string name="generalClipboard" object="[flash.desktop.Clipboard]" text=".generalClipboard" tiptext="The operating system clipboard." version="" playername="" helpurl="flash.desktop:Clipboard:generalClipboard:get"/>
                <string name="supportsFilePromise" object="[flash.desktop.Clipboard]" text=".supportsFilePromise" tiptext="Indicates whether the file promise clipboard format is supported on the client system." version="" playername="AIR" helpurl="flash.desktop:Clipboard:supportsFilePromise:get"/>
            </folder>
        </folder>
        <folder name="ClipboardFormats" id="[flash.desktop.ClipboardFormats]" sort="true" index="true" asAncestors="Object" tiptext="The ClipboardFormats class defines constants for the names of the standard data formats used with the Clipboard class." helpurl="flash.desktop:ClipboardFormats">
            <folder name="Properties" id="Properties" tiptext="Properties for class ClipboardFormats" helpurl="flash.desktop:ClipboardFormats">
                <string name="BITMAP_FORMAT" object="[flash.desktop.ClipboardFormats]" text="ClipboardFormats.BITMAP_FORMAT" constant="true" tiptext="Image data (AIR only)." version="" playername="AIR" helpurl="flash.desktop:ClipboardFormats:BITMAP_FORMAT"/>
                <string name="FILE_LIST_FORMAT" object="[flash.desktop.ClipboardFormats]" text="ClipboardFormats.FILE_LIST_FORMAT" constant="true" tiptext="An array of files (AIR only)." version="" playername="AIR" helpurl="flash.desktop:ClipboardFormats:FILE_LIST_FORMAT"/>
                <string name="FILE_PROMISE_LIST_FORMAT" object="[flash.desktop.ClipboardFormats]" text="ClipboardFormats.FILE_PROMISE_LIST_FORMAT" constant="true" tiptext="File promise list (AIR only)." version="" playername="AIR" helpurl="flash.desktop:ClipboardFormats:FILE_PROMISE_LIST_FORMAT"/>
                <string name="HTML_FORMAT" object="[flash.desktop.ClipboardFormats]" text="ClipboardFormats.HTML_FORMAT" constant="true" tiptext="HTML data." version="" playername="" helpurl="flash.desktop:ClipboardFormats:HTML_FORMAT"/>
                <string name="RICH_TEXT_FORMAT" object="[flash.desktop.ClipboardFormats]" text="ClipboardFormats.RICH_TEXT_FORMAT" constant="true" tiptext="Rich Text Format data." version="" playername="" helpurl="flash.desktop:ClipboardFormats:RICH_TEXT_FORMAT"/>
                <string name="TEXT_FORMAT" object="[flash.desktop.ClipboardFormats]" text="ClipboardFormats.TEXT_FORMAT" constant="true" tiptext="String data." version="" playername="" helpurl="flash.desktop:ClipboardFormats:TEXT_FORMAT"/>
                <string name="URL_FORMAT" object="[flash.desktop.ClipboardFormats]" text="ClipboardFormats.URL_FORMAT" constant="true" tiptext="A URL string (AIR only)." version="" playername="AIR" helpurl="flash.desktop:ClipboardFormats:URL_FORMAT"/>
            </folder>
        </folder>
        <folder name="ClipboardTransferMode" id="[flash.desktop.ClipboardTransferMode]" sort="true" index="true" asAncestors="Object" tiptext="The ClipboardTransferMode class defines constants for the modes used as values of the transferMode parameter of the Clipboard.getData() method." helpurl="flash.desktop:ClipboardTransferMode">
            <folder name="Properties" id="Properties" tiptext="Properties for class ClipboardTransferMode" helpurl="flash.desktop:ClipboardTransferMode">
                <string name="CLONE_ONLY" object="[flash.desktop.ClipboardTransferMode]" text="ClipboardTransferMode.CLONE_ONLY" constant="true" tiptext="The Clipboard object should only return a copy." version="" playername="" helpurl="flash.desktop:ClipboardTransferMode:CLONE_ONLY"/>
                <string name="CLONE_PREFERRED" object="[flash.desktop.ClipboardTransferMode]" text="ClipboardTransferMode.CLONE_PREFERRED" constant="true" tiptext="The Clipboard object should return a copy if available and a reference if not." version="" playername="" helpurl="flash.desktop:ClipboardTransferMode:CLONE_PREFERRED"/>
                <string name="ORIGINAL_ONLY" object="[flash.desktop.ClipboardTransferMode]" text="ClipboardTransferMode.ORIGINAL_ONLY" constant="true" tiptext="The Clipboard object should only return a reference." version="" playername="" helpurl="flash.desktop:ClipboardTransferMode:ORIGINAL_ONLY"/>
                <string name="ORIGINAL_PREFERRED" object="[flash.desktop.ClipboardTransferMode]" text="ClipboardTransferMode.ORIGINAL_PREFERRED" constant="true" tiptext="The Clipboard object should return a reference if available and a copy if not." version="" playername="" helpurl="flash.desktop:ClipboardTransferMode:ORIGINAL_PREFERRED"/>
            </folder>
        </folder>
        <folder name="DockIcon" id="[flash.desktop.DockIcon]" sort="true" index="true" asAncestors="flash.desktop:InteractiveIcon,flash.desktop:Icon,flash.events:EventDispatcher,Object" tiptext="The DockIcon class represents the Mac OS X&amp;#xAE;-style dock icon." helpurl="flash.desktop:DockIcon">
            <folder name="Methods" id="Methods" tiptext="Methods for class DockIcon" helpurl="flash.desktop:DockIcon">
                <string name="bounce" object="[flash.desktop.DockIcon]" text=".bounce(%[priority:String=informational]%):void" tiptext="Notifies the user that an event has occurred that may require attention." version="1.0" playername="AIR" helpurl="flash.desktop:DockIcon:bounce"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class DockIcon" helpurl="flash.desktop:DockIcon">
                <string name="bitmaps" object="[flash.desktop.DockIcon]" text=".bitmaps" tiptext="The icon image as an array of BitmapData objects of different sizes." version="" playername="AIR" helpurl="flash.desktop:DockIcon:bitmaps:get"/>
                <string name="height" object="[flash.desktop.DockIcon]" text=".height" tiptext="The current display height of the icon in pixels." version="" playername="AIR" helpurl="flash.desktop:DockIcon:height:get"/>
                <string name="menu" object="[flash.desktop.DockIcon]" text=".menu" tiptext="The system-supplied menu of this dock icon." version="" playername="AIR" helpurl="flash.desktop:DockIcon:menu:get"/>
                <string name="width" object="[flash.desktop.DockIcon]" text=".width" tiptext="The current display width of the icon in pixels." version="" playername="AIR" helpurl="flash.desktop:DockIcon:width:get"/>
            </folder>
        </folder>
        <folder name="Icon" id="[flash.desktop.Icon]" sort="true" index="true" asAncestors="flash.events:EventDispatcher,Object" tiptext="The Icon class represents an operating system icon." helpurl="flash.desktop:Icon">
            <folder name="Properties" id="Properties" tiptext="Properties for class Icon" helpurl="flash.desktop:Icon">
                <string name="bitmaps" object="[flash.desktop.Icon]" text=".bitmaps" tiptext="The icon image as an array of BitmapData objects of different sizes." version="" playername="AIR" helpurl="flash.desktop:Icon:bitmaps:get"/>
            </folder>
        </folder>
        <folder name="IFilePromise" id="[flash.desktop.IFilePromise]" sort="true" index="true" tiptext="The IFilePromise interface defines the interface used by the AIR runtime to read data for a file promise." helpurl="flash.desktop:IFilePromise">
            <folder name="Methods" id="Methods" tiptext="Methods for class IFilePromise" helpurl="flash.desktop:IFilePromise">
                <string name="close" object="[flash.desktop.IFilePromise]" text=".close(%%):void" tiptext="Called by the AIR runtime when it has finished reading all data." version="2" playername="AIR" helpurl="flash.desktop:IFilePromise:close"/>
                <string name="open" object="[flash.desktop.IFilePromise]" text=".open(%%):flash.utils:IDataInput" tiptext="Returns the data provider object." version="2" playername="AIR" helpurl="flash.desktop:IFilePromise:open"/>
                <string name="reportError" object="[flash.desktop.IFilePromise]" text=".reportError(%e:flash.events:ErrorEvent%):void" tiptext="Called by the AIR runtime to inform the IFilePromise implementation of errors that occur when reading data from the data provider object." version="2" playername="AIR" helpurl="flash.desktop:IFilePromise:reportError"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class IFilePromise" helpurl="flash.desktop:IFilePromise">
                <string name="isAsync" object="[flash.desktop.IFilePromise]" text=".isAsync" tiptext="Indicates whether asynchronous data transfer is supported." version="" playername="AIR" helpurl="flash.desktop:IFilePromise:isAsync:get"/>
                <string name="relativePath" object="[flash.desktop.IFilePromise]" text=".relativePath" tiptext="The relative path and file name of the file that will be created by this file promise." version="" playername="AIR" helpurl="flash.desktop:IFilePromise:relativePath:get"/>
            </folder>
        </folder>
        <folder name="InteractiveIcon" id="[flash.desktop.InteractiveIcon]" sort="true" index="true" asAncestors="flash.desktop:Icon,flash.events:EventDispatcher,Object" tiptext="The InteractiveIcon class is the base class for the operating system icons associated with applications." helpurl="flash.desktop:InteractiveIcon">
            <folder name="Properties" id="Properties" tiptext="Properties for class InteractiveIcon" helpurl="flash.desktop:InteractiveIcon">
                <string name="bitmaps" object="[flash.desktop.InteractiveIcon]" text=".bitmaps" tiptext="The icon image as an array of BitmapData objects of different sizes." version="" playername="AIR" helpurl="flash.desktop:InteractiveIcon:bitmaps:get"/>
                <string name="height" object="[flash.desktop.InteractiveIcon]" text=".height" tiptext="The current display height of the icon in pixels." version="" playername="AIR" helpurl="flash.desktop:InteractiveIcon:height:get"/>
                <string name="width" object="[flash.desktop.InteractiveIcon]" text=".width" tiptext="The current display width of the icon in pixels." version="" playername="AIR" helpurl="flash.desktop:InteractiveIcon:width:get"/>
            </folder>
        </folder>
        <folder name="InvokeEventReason" id="[flash.desktop.InvokeEventReason]" sort="true" index="true" asAncestors="Object" tiptext="The InvokeEventReason class enumerates values returned by the reason property of an InvokeEvent object." helpurl="flash.desktop:InvokeEventReason">
            <folder name="Properties" id="Properties" tiptext="Properties for class InvokeEventReason" helpurl="flash.desktop:InvokeEventReason">
                <string name="LOGIN" object="[flash.desktop.InvokeEventReason]" text="InvokeEventReason.LOGIN" constant="true" tiptext="Indicates that the InvokeEvent event occurred due to the user logging in." version="" playername="AIR" helpurl="flash.desktop:InvokeEventReason:LOGIN"/>
                <string name="STANDARD" object="[flash.desktop.InvokeEventReason]" text="InvokeEventReason.STANDARD" constant="true" tiptext="Indicates that the InvokeEvent occured for any reason other than login." version="" playername="AIR" helpurl="flash.desktop:InvokeEventReason:STANDARD"/>
            </folder>
        </folder>
        <folder name="NativeApplication" id="[flash.desktop.NativeApplication]" sort="true" index="true" asAncestors="flash.events:EventDispatcher,Object" tiptext="The NativeApplication class represents this AIR application." helpurl="flash.desktop:NativeApplication">
            <folder name="Methods" id="Methods" tiptext="Methods for class NativeApplication" helpurl="flash.desktop:NativeApplication">
                <string name="activate" object="[flash.desktop.NativeApplication]" text=".activate(%[window:flash.display:NativeWindow=null]%):void" tiptext="Activates this application." version="1.0" playername="AIR" helpurl="flash.desktop:NativeApplication:activate"/>
                <string name="addEventListener" object="[flash.desktop.NativeApplication]" text=".addEventListener(%type:String,listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Registers an event listener object with an EventDispatcher object so that the listener receives notification of an event." version="1.0" playername="AIR" helpurl="flash.desktop:NativeApplication:addEventListener"/>
                <string name="clear" object="[flash.desktop.NativeApplication]" text=".clear(%%):Boolean" tiptext="Invokes an internal delete command on the focused display object." version="1.0" playername="AIR" helpurl="flash.desktop:NativeApplication:clear"/>
                <string name="copy" object="[flash.desktop.NativeApplication]" text=".copy(%%):Boolean" tiptext="Invokes an internal copy command on the focused display object." version="1.0" playername="AIR" helpurl="flash.desktop:NativeApplication:copy"/>
                <string name="cut" object="[flash.desktop.NativeApplication]" text=".cut(%%):Boolean" tiptext="Invokes an internal cut command on the focused display object." version="1.0" playername="AIR" helpurl="flash.desktop:NativeApplication:cut"/>
                <string name="dispatchEvent" object="[flash.desktop.NativeApplication]" text=".dispatchEvent(%event:flash.events:Event%):Boolean" tiptext="Dispatches an event into the event flow." version="1.0" playername="AIR" helpurl="flash.desktop:NativeApplication:dispatchEvent"/>
                <string name="exit" object="[flash.desktop.NativeApplication]" text=".exit(%[errorCode:int=0]%):void" tiptext="Terminates this application." version="1.0" playername="AIR" helpurl="flash.desktop:NativeApplication:exit"/>
                <string name="getDefaultApplication" object="[flash.desktop.NativeApplication]" text=".getDefaultApplication(%extension:String%):String" tiptext="Gets the default application for opening files with the specified extension." version="1.0" playername="AIR" helpurl="flash.desktop:NativeApplication:getDefaultApplication"/>
                <string name="isSetAsDefaultApplication" object="[flash.desktop.NativeApplication]" text=".isSetAsDefaultApplication(%extension:String%):Boolean" tiptext="Specifies whether this application is currently the default application for opening files with the specified extension." version="1.0" playername="AIR" helpurl="flash.desktop:NativeApplication:isSetAsDefaultApplication"/>
                <string name="paste" object="[flash.desktop.NativeApplication]" text=".paste(%%):Boolean" tiptext="Invokes an internal paste command on the focused display object." version="1.0" playername="AIR" helpurl="flash.desktop:NativeApplication:paste"/>
                <string name="removeAsDefaultApplication" object="[flash.desktop.NativeApplication]" text=".removeAsDefaultApplication(%extension:String%):void" tiptext="Removes this application as the default for opening files with the specified extension." version="1.0" playername="AIR" helpurl="flash.desktop:NativeApplication:removeAsDefaultApplication"/>
                <string name="removeEventListener" object="[flash.desktop.NativeApplication]" text=".removeEventListener(%type:String,listener:Function[,useCapture:Boolean=false]%):void" tiptext="Removes a listener from the EventDispatcher object." version="1.0" playername="AIR" helpurl="flash.desktop:NativeApplication:removeEventListener"/>
                <string name="selectAll" object="[flash.desktop.NativeApplication]" text=".selectAll(%%):Boolean" tiptext="Invokes an internal selectAll command on the focused display object." version="1.0" playername="AIR" helpurl="flash.desktop:NativeApplication:selectAll"/>
                <string name="setAsDefaultApplication" object="[flash.desktop.NativeApplication]" text=".setAsDefaultApplication(%extension:String%):void" tiptext="Sets this application as the default application for opening files with the specified extension." version="1.0" playername="AIR" helpurl="flash.desktop:NativeApplication:setAsDefaultApplication"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class NativeApplication" helpurl="flash.desktop:NativeApplication">
                <string name="activeWindow" object="[flash.desktop.NativeApplication]" text=".activeWindow" tiptext="The active application window." version="" playername="AIR" helpurl="flash.desktop:NativeApplication:activeWindow:get"/>
                <string name="applicationDescriptor" object="[flash.desktop.NativeApplication]" text=".applicationDescriptor" tiptext="The contents of the application descriptor file for this AIR application." version="" playername="AIR" helpurl="flash.desktop:NativeApplication:applicationDescriptor:get"/>
                <string name="applicationID" object="[flash.desktop.NativeApplication]" text=".applicationID" tiptext="The application ID of this application." version="" playername="AIR" helpurl="flash.desktop:NativeApplication:applicationID:get"/>
                <string name="autoExit" object="[flash.desktop.NativeApplication]" text=".autoExit" tiptext="Specifies whether the application should automatically terminate when all windows have been closed." version="" playername="AIR" helpurl="flash.desktop:NativeApplication:autoExit:get"/>
                <string name="icon" object="[flash.desktop.NativeApplication]" text=".icon" tiptext="The application icon." version="" playername="AIR" helpurl="flash.desktop:NativeApplication:icon:get"/>
                <string name="idleThreshold" object="[flash.desktop.NativeApplication]" text=".idleThreshold" tiptext="The number of seconds that must elapse without user input before a userIdle event is dispatched." version="" playername="AIR" helpurl="flash.desktop:NativeApplication:idleThreshold:get"/>
                <string name="menu" object="[flash.desktop.NativeApplication]" text=".menu" tiptext="The application menu." version="" playername="AIR" helpurl="flash.desktop:NativeApplication:menu:get"/>
                <string name="nativeApplication" object="[flash.desktop.NativeApplication]" text=".nativeApplication" tiptext="The singleton instance of the NativeApplication object." version="" playername="AIR" helpurl="flash.desktop:NativeApplication:nativeApplication:get"/>
                <string name="openedWindows" object="[flash.desktop.NativeApplication]" text=".openedWindows" tiptext="An array containing all the open native windows of this application." version="" playername="AIR" helpurl="flash.desktop:NativeApplication:openedWindows:get"/>
                <string name="publisherID" object="[flash.desktop.NativeApplication]" text=".publisherID" tiptext="The publisher ID of this application." version="" playername="AIR" helpurl="flash.desktop:NativeApplication:publisherID:get"/>
                <string name="runtimePatchLevel" object="[flash.desktop.NativeApplication]" text=".runtimePatchLevel" tiptext="The patch level of the runtime hosting this application." version="" playername="AIR" helpurl="flash.desktop:NativeApplication:runtimePatchLevel:get"/>
                <string name="runtimeVersion" object="[flash.desktop.NativeApplication]" text=".runtimeVersion" tiptext="The version number of the runtime hosting this application." version="" playername="AIR" helpurl="flash.desktop:NativeApplication:runtimeVersion:get"/>
                <string name="startAtLogin" object="[flash.desktop.NativeApplication]" text=".startAtLogin" tiptext="Specifies whether this application is automatically launched whenever the current user logs in." version="" playername="AIR" helpurl="flash.desktop:NativeApplication:startAtLogin:get"/>
                <string name="supportsDefaultApplication" object="[flash.desktop.NativeApplication]" text=".supportsDefaultApplication" tiptext="Indicates whether setAsDefaultApplication(), removeAsDefaultApplication(), and isSetAsDefaultApplication() are supported on the current platform." version="" playername="AIR" helpurl="flash.desktop:NativeApplication:supportsDefaultApplication:get"/>
                <string name="supportsDockIcon" object="[flash.desktop.NativeApplication]" text=".supportsDockIcon" tiptext="Indicates whether AIR supports dock-style application icons on the current operating system." version="" playername="AIR" helpurl="flash.desktop:NativeApplication:supportsDockIcon:get"/>
                <string name="supportsMenu" object="[flash.desktop.NativeApplication]" text=".supportsMenu" tiptext="Specifies whether the current operating system supports a global application menu bar." version="" playername="AIR" helpurl="flash.desktop:NativeApplication:supportsMenu:get"/>
                <string name="supportsStartAtLogin" object="[flash.desktop.NativeApplication]" text=".supportsStartAtLogin" tiptext="Indicates whether startAtLogin is supported on the current platform." version="" playername="AIR" helpurl="flash.desktop:NativeApplication:supportsStartAtLogin:get"/>
                <string name="supportsSystemTrayIcon" object="[flash.desktop.NativeApplication]" text=".supportsSystemTrayIcon" tiptext="Specifies whether AIR supports system tray icons on the current operating system." version="" playername="AIR" helpurl="flash.desktop:NativeApplication:supportsSystemTrayIcon:get"/>
                <string name="systemIdleMode" object="[flash.desktop.NativeApplication]" text=".systemIdleMode" tiptext="Provides a way for applications to prevent the user interface from going into &quot;idle&quot; mode." version="" playername="AIR" helpurl="flash.desktop:NativeApplication:systemIdleMode:get"/>
                <string name="timeSinceLastUserInput" object="[flash.desktop.NativeApplication]" text=".timeSinceLastUserInput" tiptext="The time, in seconds, since the last user input." version="" playername="AIR" helpurl="flash.desktop:NativeApplication:timeSinceLastUserInput:get"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class NativeApplication" helpurl="flash.desktop:NativeApplication">
                <string name="keyUp" object="[flash.desktop.NativeApplication]" text=".addEventListener(%type:String=KeyboardEvent.KEY_UP{KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,Event.USER_PRESENT,Event.USER_IDLE,Event.NETWORK_CHANGE,Event.EXITING,Event.DEACTIVATE,Event.ACTIVATE,BrowserInvokeEvent.Browser_INVOKE,InvokeEvent.INVOKE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user releases a key." version="" playername="AIR" helpurl="flash.desktop:NativeApplication_flash.events.KeyboardEvent.KEY_UP_keyUp"/>
                <string name="keyDown" object="[flash.desktop.NativeApplication]" text=".addEventListener(%type:String=KeyboardEvent.KEY_DOWN{KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,Event.USER_PRESENT,Event.USER_IDLE,Event.NETWORK_CHANGE,Event.EXITING,Event.DEACTIVATE,Event.ACTIVATE,BrowserInvokeEvent.Browser_INVOKE,InvokeEvent.INVOKE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user presses a key." version="" playername="AIR" helpurl="flash.desktop:NativeApplication_flash.events.KeyboardEvent.KEY_DOWN_keyDown"/>
                <string name="userPresent" object="[flash.desktop.NativeApplication]" text=".addEventListener(%type:String=Event.USER_PRESENT{KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,Event.USER_PRESENT,Event.USER_IDLE,Event.NETWORK_CHANGE,Event.EXITING,Event.DEACTIVATE,Event.ACTIVATE,BrowserInvokeEvent.Browser_INVOKE,InvokeEvent.INVOKE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the operating system detects mouse or keyboard activity after an idle period." version="" playername="AIR" helpurl="flash.desktop:NativeApplication_flash.events.Event.USER_PRESENT_userPresent"/>
                <string name="userIdle" object="[flash.desktop.NativeApplication]" text=".addEventListener(%type:String=Event.USER_IDLE{KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,Event.USER_PRESENT,Event.USER_IDLE,Event.NETWORK_CHANGE,Event.EXITING,Event.DEACTIVATE,Event.ACTIVATE,BrowserInvokeEvent.Browser_INVOKE,InvokeEvent.INVOKE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user has been idle." version="" playername="AIR" helpurl="flash.desktop:NativeApplication_flash.events.Event.USER_IDLE_userIdle"/>
                <string name="networkChange" object="[flash.desktop.NativeApplication]" text=".addEventListener(%type:String=Event.NETWORK_CHANGE{KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,Event.USER_PRESENT,Event.USER_IDLE,Event.NETWORK_CHANGE,Event.EXITING,Event.DEACTIVATE,Event.ACTIVATE,BrowserInvokeEvent.Browser_INVOKE,InvokeEvent.INVOKE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when either a new network connection becomes available or an existing network connection is lost." version="" playername="AIR" helpurl="flash.desktop:NativeApplication_flash.events.Event.NETWORK_CHANGE_networkChange"/>
                <string name="exiting" object="[flash.desktop.NativeApplication]" text=".addEventListener(%type:String=Event.EXITING{KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,Event.USER_PRESENT,Event.USER_IDLE,Event.NETWORK_CHANGE,Event.EXITING,Event.DEACTIVATE,Event.ACTIVATE,BrowserInvokeEvent.Browser_INVOKE,InvokeEvent.INVOKE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the application exit sequence is started." version="" playername="AIR" helpurl="flash.desktop:NativeApplication_flash.events.Event.EXITING_exiting"/>
                <string name="deactivate" object="[flash.desktop.NativeApplication]" text=".addEventListener(%type:String=Event.DEACTIVATE{KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,Event.USER_PRESENT,Event.USER_IDLE,Event.NETWORK_CHANGE,Event.EXITING,Event.DEACTIVATE,Event.ACTIVATE,BrowserInvokeEvent.Browser_INVOKE,InvokeEvent.INVOKE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the desktop focus is switched to a different application." version="" playername="AIR" helpurl="flash.desktop:NativeApplication_flash.events.Event.DEACTIVATE_deactivate"/>
                <string name="activate" object="[flash.desktop.NativeApplication]" text=".addEventListener(%type:String=Event.ACTIVATE{KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,Event.USER_PRESENT,Event.USER_IDLE,Event.NETWORK_CHANGE,Event.EXITING,Event.DEACTIVATE,Event.ACTIVATE,BrowserInvokeEvent.Browser_INVOKE,InvokeEvent.INVOKE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when this application becomes the active desktop application." version="" playername="AIR" helpurl="flash.desktop:NativeApplication_flash.events.Event.ACTIVATE_activate"/>
                <string name="browserInvoke" object="[flash.desktop.NativeApplication]" text=".addEventListener(%type:String=BrowserInvokeEvent.Browser_INVOKE{KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,Event.USER_PRESENT,Event.USER_IDLE,Event.NETWORK_CHANGE,Event.EXITING,Event.DEACTIVATE,Event.ACTIVATE,BrowserInvokeEvent.Browser_INVOKE,InvokeEvent.INVOKE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when an application is invoked by a SWF file running in the user&apos;s browser." version="" playername="AIR" helpurl="flash.desktop:NativeApplication__browserInvoke"/>
                <string name="invoke" object="[flash.desktop.NativeApplication]" text=".addEventListener(%type:String=InvokeEvent.INVOKE{KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,Event.USER_PRESENT,Event.USER_IDLE,Event.NETWORK_CHANGE,Event.EXITING,Event.DEACTIVATE,Event.ACTIVATE,BrowserInvokeEvent.Browser_INVOKE,InvokeEvent.INVOKE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when an application is invoked." version="" playername="AIR" helpurl="flash.desktop:NativeApplication_flash.events.InvokeEvent.INVOKE_invoke"/>
            </folder>
        </folder>
        <folder name="NativeDragActions" id="[flash.desktop.NativeDragActions]" sort="true" index="true" asAncestors="Object" tiptext="The NativeDragActions class defines string constants for the names of the drag-and-drop actions." helpurl="flash.desktop:NativeDragActions">
            <folder name="Properties" id="Properties" tiptext="Properties for class NativeDragActions" helpurl="flash.desktop:NativeDragActions">
                <string name="COPY" object="[flash.desktop.NativeDragActions]" text="NativeDragActions.COPY" constant="true" tiptext="Defines the string to use for the copy action." version="" playername="AIR" helpurl="flash.desktop:NativeDragActions:COPY"/>
                <string name="LINK" object="[flash.desktop.NativeDragActions]" text="NativeDragActions.LINK" constant="true" tiptext="Defines the string to use for the link action." version="" playername="AIR" helpurl="flash.desktop:NativeDragActions:LINK"/>
                <string name="MOVE" object="[flash.desktop.NativeDragActions]" text="NativeDragActions.MOVE" constant="true" tiptext="Defines the string to use for the move action." version="" playername="AIR" helpurl="flash.desktop:NativeDragActions:MOVE"/>
                <string name="NONE" object="[flash.desktop.NativeDragActions]" text="NativeDragActions.NONE" constant="true" tiptext="Defines the string to use when no action is specified." version="" playername="AIR" helpurl="flash.desktop:NativeDragActions:NONE"/>
            </folder>
        </folder>
        <folder name="NativeDragManager" id="[flash.desktop.NativeDragManager]" sort="true" index="true" asAncestors="Object" tiptext="The NativeDragManager class coordinates drag-and-drop operations." helpurl="flash.desktop:NativeDragManager">
            <folder name="Methods" id="Methods" tiptext="Methods for class NativeDragManager" helpurl="flash.desktop:NativeDragManager">
                <string name="acceptDragDrop" object="[flash.desktop.NativeDragManager]" text="NativeDragManager.acceptDragDrop(%target:flash.display:InteractiveObject%):void" static="true" tiptext="Informs the NativeDragManager object that the specified target interactive object can accept a drop corresponding to the current drag event." version="1.0" playername="AIR" helpurl="flash.desktop:NativeDragManager:acceptDragDrop"/>
                <string name="doDrag" object="[flash.desktop.NativeDragManager]" text="NativeDragManager.doDrag(%dragInitiator:flash.display:InteractiveObject,clipboard:flash.desktop:Clipboard[,dragImage:flash.display:BitmapData=null,offset:flash.geom:Point=null,allowedActions:flash.desktop:NativeDragOptions=null]%):void" static="true" tiptext="Starts a drag-and-drop operation." version="1.0" playername="AIR" helpurl="flash.desktop:NativeDragManager:doDrag"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class NativeDragManager" helpurl="flash.desktop:NativeDragManager">
                <string name="dragInitiator" object="[flash.desktop.NativeDragManager]" text=".dragInitiator" tiptext="The interactive object passed to the NativeDragManager.doDrag() call that initiated the drag operation." version="" playername="AIR" helpurl="flash.desktop:NativeDragManager:dragInitiator:get"/>
                <string name="dropAction" object="[flash.desktop.NativeDragManager]" text=".dropAction" tiptext="The drag action specified by the drop target." version="" playername="AIR" helpurl="flash.desktop:NativeDragManager:dropAction:get"/>
                <string name="isDragging" object="[flash.desktop.NativeDragManager]" text=".isDragging" tiptext="Reports whether a drag operation is currently in progress." version="" playername="AIR" helpurl="flash.desktop:NativeDragManager:isDragging:get"/>
                <string name="isSupported" object="[flash.desktop.NativeDragManager]" text=".isSupported" tiptext="The isSupported property is set to true if the NativeDragManager class is supported on the current platform, otherwise it is set to false." version="" playername="AIR" helpurl="flash.desktop:NativeDragManager:isSupported:get"/>
            </folder>
        </folder>
        <folder name="NativeDragOptions" id="[flash.desktop.NativeDragOptions]" sort="true" index="true" asAncestors="Object" tiptext="The NativeDragOptions class defines constants for the names of drag-and-drop actions allowed in a drag-and-drop operation." helpurl="flash.desktop:NativeDragOptions">
            <folder name="Methods" id="Methods" tiptext="Methods for class NativeDragOptions" helpurl="flash.desktop:NativeDragOptions">
                <string name="toString" object="[flash.desktop.NativeDragOptions]" text=".toString(%%):String" tiptext="Constructs a string containing the current settings of this NativeDragOptions object." version="1.0" playername="AIR" helpurl="flash.desktop:NativeDragOptions:toString"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class NativeDragOptions" helpurl="flash.desktop:NativeDragOptions">
                <string name="allowCopy" object="[flash.desktop.NativeDragOptions]" text=".allowCopy" tiptext="A drop target is allowed to copy the dragged data." version="" playername="AIR" helpurl="flash.desktop:NativeDragOptions:allowCopy"/>
                <string name="allowLink" object="[flash.desktop.NativeDragOptions]" text=".allowLink" tiptext="A drop target is allowed to create a link to the dragged data." version="" playername="AIR" helpurl="flash.desktop:NativeDragOptions:allowLink"/>
                <string name="allowMove" object="[flash.desktop.NativeDragOptions]" text=".allowMove" tiptext="A drop target is allowed to move the dragged data." version="" playername="AIR" helpurl="flash.desktop:NativeDragOptions:allowMove"/>
            </folder>
        </folder>
        <folder name="NativeProcess" id="[flash.desktop.NativeProcess]" sort="true" index="true" asAncestors="flash.events:EventDispatcher,Object" tiptext="The NativeProcess class provides command line integration and general launching capabilities." helpurl="flash.desktop:NativeProcess">
            <folder name="Methods" id="Methods" tiptext="Methods for class NativeProcess" helpurl="flash.desktop:NativeProcess">
                <string name="NativeProcess" object="[flash.desktop.NativeProcess]" text="new NativeProcess(%%)" constructor="true" tiptext="Constructs an uninitialized NativeProcess object." version="2" playername="AIR" helpurl="flash.desktop:NativeProcess:NativeProcess"/>
                <string name="closeInput" object="[flash.desktop.NativeProcess]" text=".closeInput(%%):void" tiptext="Closes the input stream on this process." version="2" playername="AIR" helpurl="flash.desktop:NativeProcess:closeInput"/>
                <string name="exit" object="[flash.desktop.NativeProcess]" text=".exit(%[force:Boolean=false]%):void" tiptext="Attempts to exit the native process." version="2" playername="AIR" helpurl="flash.desktop:NativeProcess:exit"/>
                <string name="start" object="[flash.desktop.NativeProcess]" text=".start(%info:flash.desktop:NativeProcessStartupInfo%):void" tiptext="Starts the native process identified by the start up info specified." version="2" playername="AIR" helpurl="flash.desktop:NativeProcess:start"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class NativeProcess" helpurl="flash.desktop:NativeProcess">
                <string name="isSupported" object="[flash.desktop.NativeProcess]" text=".isSupported" tiptext="Indicates if running native processes is supported in the current profile." version="" playername="AIR" helpurl="flash.desktop:NativeProcess:isSupported:get"/>
                <string name="running" object="[flash.desktop.NativeProcess]" text=".running" tiptext="Indicates if this native process is currently running." version="" playername="AIR" helpurl="flash.desktop:NativeProcess:running:get"/>
                <string name="standardError" object="[flash.desktop.NativeProcess]" text=".standardError" tiptext="Provides access to the standard error output from this native process." version="" playername="AIR" helpurl="flash.desktop:NativeProcess:standardError:get"/>
                <string name="standardInput" object="[flash.desktop.NativeProcess]" text=".standardInput" tiptext="Provides access to the standard input of this native process." version="" playername="AIR" helpurl="flash.desktop:NativeProcess:standardInput:get"/>
                <string name="standardOutput" object="[flash.desktop.NativeProcess]" text=".standardOutput" tiptext="Provides access to the standard output pipe of this native process." version="" playername="AIR" helpurl="flash.desktop:NativeProcess:standardOutput:get"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class NativeProcess" helpurl="flash.desktop:NativeProcess">
                <string name="exit" object="[flash.desktop.NativeProcess]" text=".addEventListener(%type:String=NativeProcessExitEvent.NativeProcessExitEvent{NativeProcessExitEvent.NativeProcessExitEvent,IOErrorEvent.IOErrorEvent,IOErrorEvent.IOErrorEvent,IOErrorEvent.IOErrorEvent,Event.Event,ProgressEvent.ProgressEvent,Event.Event,ProgressEvent.ProgressEvent,Event.Event,ProgressEvent.ProgressEvent},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Signals the native process has exited." version="" playername="AIR" helpurl="flash.desktop:NativeProcess__exit"/>
                <string name="standardInputIoError" object="[flash.desktop.NativeProcess]" text=".addEventListener(%type:String=IOErrorEvent.IOErrorEvent{NativeProcessExitEvent.NativeProcessExitEvent,IOErrorEvent.IOErrorEvent,IOErrorEvent.IOErrorEvent,IOErrorEvent.IOErrorEvent,Event.Event,ProgressEvent.ProgressEvent,Event.Event,ProgressEvent.ProgressEvent,Event.Event,ProgressEvent.ProgressEvent},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Signals that writing to the standard input (stdin) stream has failed." version="" playername="AIR" helpurl="flash.desktop:NativeProcess__standardInputIoError"/>
                <string name="standardOutputIoError" object="[flash.desktop.NativeProcess]" text=".addEventListener(%type:String=IOErrorEvent.IOErrorEvent{NativeProcessExitEvent.NativeProcessExitEvent,IOErrorEvent.IOErrorEvent,IOErrorEvent.IOErrorEvent,IOErrorEvent.IOErrorEvent,Event.Event,ProgressEvent.ProgressEvent,Event.Event,ProgressEvent.ProgressEvent,Event.Event,ProgressEvent.ProgressEvent},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Signals that reading from the stdout stream has failed." version="" playername="AIR" helpurl="flash.desktop:NativeProcess__standardOutputIoError"/>
                <string name="standardErrorIoError" object="[flash.desktop.NativeProcess]" text=".addEventListener(%type:String=IOErrorEvent.IOErrorEvent{NativeProcessExitEvent.NativeProcessExitEvent,IOErrorEvent.IOErrorEvent,IOErrorEvent.IOErrorEvent,IOErrorEvent.IOErrorEvent,Event.Event,ProgressEvent.ProgressEvent,Event.Event,ProgressEvent.ProgressEvent,Event.Event,ProgressEvent.ProgressEvent},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Signals that reading from the standard error (stderror) stream has failed." version="" playername="AIR" helpurl="flash.desktop:NativeProcess__standardErrorIoError"/>
                <string name="standardInputClose" object="[flash.desktop.NativeProcess]" text=".addEventListener(%type:String=Event.Event{NativeProcessExitEvent.NativeProcessExitEvent,IOErrorEvent.IOErrorEvent,IOErrorEvent.IOErrorEvent,IOErrorEvent.IOErrorEvent,Event.Event,ProgressEvent.ProgressEvent,Event.Event,ProgressEvent.ProgressEvent,Event.Event,ProgressEvent.ProgressEvent},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Signals that the NativeProcess object has closed its input stream by calling the closeInput() method." version="" playername="AIR" helpurl="flash.desktop:NativeProcess__standardInputClose"/>
                <string name="standardInputProgress" object="[flash.desktop.NativeProcess]" text=".addEventListener(%type:String=ProgressEvent.ProgressEvent{NativeProcessExitEvent.NativeProcessExitEvent,IOErrorEvent.IOErrorEvent,IOErrorEvent.IOErrorEvent,IOErrorEvent.IOErrorEvent,Event.Event,ProgressEvent.ProgressEvent,Event.Event,ProgressEvent.ProgressEvent,Event.Event,ProgressEvent.ProgressEvent},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Signals that the NativeProcess has written data to the input stream for the child process." version="" playername="AIR" helpurl="flash.desktop:NativeProcess__standardInputProgress"/>
                <string name="standardErrorClose" object="[flash.desktop.NativeProcess]" text=".addEventListener(%type:String=Event.Event{NativeProcessExitEvent.NativeProcessExitEvent,IOErrorEvent.IOErrorEvent,IOErrorEvent.IOErrorEvent,IOErrorEvent.IOErrorEvent,Event.Event,ProgressEvent.ProgressEvent,Event.Event,ProgressEvent.ProgressEvent,Event.Event,ProgressEvent.ProgressEvent},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Signals that the NativeProcess has closed its error stream." version="" playername="AIR" helpurl="flash.desktop:NativeProcess__standardErrorClose"/>
                <string name="standardErrorData" object="[flash.desktop.NativeProcess]" text=".addEventListener(%type:String=ProgressEvent.ProgressEvent{NativeProcessExitEvent.NativeProcessExitEvent,IOErrorEvent.IOErrorEvent,IOErrorEvent.IOErrorEvent,IOErrorEvent.IOErrorEvent,Event.Event,ProgressEvent.ProgressEvent,Event.Event,ProgressEvent.ProgressEvent,Event.Event,ProgressEvent.ProgressEvent},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Signals that the native process has data available to read on the standard error (stderror) stream." version="" playername="AIR" helpurl="flash.desktop:NativeProcess__standardErrorData"/>
                <string name="standardOutputClose" object="[flash.desktop.NativeProcess]" text=".addEventListener(%type:String=Event.Event{NativeProcessExitEvent.NativeProcessExitEvent,IOErrorEvent.IOErrorEvent,IOErrorEvent.IOErrorEvent,IOErrorEvent.IOErrorEvent,Event.Event,ProgressEvent.ProgressEvent,Event.Event,ProgressEvent.ProgressEvent,Event.Event,ProgressEvent.ProgressEvent},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Signals that the NativeProcess has closed its output stream." version="" playername="AIR" helpurl="flash.desktop:NativeProcess__standardOutputClose"/>
                <string name="standardOutputData" object="[flash.desktop.NativeProcess]" text=".addEventListener(%type:String=ProgressEvent.ProgressEvent{NativeProcessExitEvent.NativeProcessExitEvent,IOErrorEvent.IOErrorEvent,IOErrorEvent.IOErrorEvent,IOErrorEvent.IOErrorEvent,Event.Event,ProgressEvent.ProgressEvent,Event.Event,ProgressEvent.ProgressEvent,Event.Event,ProgressEvent.ProgressEvent},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Signals that the native process has data available to read on the output stream." version="" playername="AIR" helpurl="flash.desktop:NativeProcess__standardOutputData"/>
            </folder>
        </folder>
        <folder name="NativeProcessStartupInfo" id="[flash.desktop.NativeProcessStartupInfo]" sort="true" index="true" asAncestors="Object" tiptext="This class provides the basic information used to start a process on the host operating system." helpurl="flash.desktop:NativeProcessStartupInfo">
            <folder name="Methods" id="Methods" tiptext="Methods for class NativeProcessStartupInfo" helpurl="flash.desktop:NativeProcessStartupInfo">
                <string name="NativeProcessStartupInfo" object="[flash.desktop.NativeProcessStartupInfo]" text="new NativeProcessStartupInfo(%%)" constructor="true" tiptext="Constructs an empty NativeProcessStartupInfo object." version="2" playername="AIR" helpurl="flash.desktop:NativeProcessStartupInfo:NativeProcessStartupInfo"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class NativeProcessStartupInfo" helpurl="flash.desktop:NativeProcessStartupInfo">
                <string name="arguments" object="[flash.desktop.NativeProcessStartupInfo]" text=".arguments" tiptext="The command line arguments that will be passed to the process on startup." version="" playername="AIR" helpurl="flash.desktop:NativeProcessStartupInfo:arguments:get"/>
                <string name="executable" object="[flash.desktop.NativeProcessStartupInfo]" text=".executable" tiptext="The File object that references an executable on the host operating system." version="" playername="AIR" helpurl="flash.desktop:NativeProcessStartupInfo:executable:get"/>
                <string name="workingDirectory" object="[flash.desktop.NativeProcessStartupInfo]" text=".workingDirectory" tiptext="The File object that references the initial working directory for thenew native process." version="" playername="AIR" helpurl="flash.desktop:NativeProcessStartupInfo:workingDirectory:get"/>
            </folder>
        </folder>
        <folder name="NotificationType" id="[flash.desktop.NotificationType]" sort="true" index="true" asAncestors="Object" tiptext="The NotificationType class defines constants for use in the priority parameter of the DockIcon bounce() method and the type parameter of the NativeWindow notifyUser() method." helpurl="flash.desktop:NotificationType">
            <folder name="Properties" id="Properties" tiptext="Properties for class NotificationType" helpurl="flash.desktop:NotificationType">
                <string name="CRITICAL" object="[flash.desktop.NotificationType]" text="NotificationType.CRITICAL" constant="true" tiptext="Specifies that a notification alert is critical in nature and the user should attend to it promptly." version="" playername="AIR" helpurl="flash.desktop:NotificationType:CRITICAL"/>
                <string name="INFORMATIONAL" object="[flash.desktop.NotificationType]" text="NotificationType.INFORMATIONAL" constant="true" tiptext="Specifies that a notification alert is informational in nature and the user can safely ignore it." version="" playername="AIR" helpurl="flash.desktop:NotificationType:INFORMATIONAL"/>
            </folder>
        </folder>
        <folder name="SystemIdleMode" id="[flash.desktop.SystemIdleMode]" sort="true" index="true" asAncestors="Object" tiptext="The SystemIdleMode class provides constant values for system idle behaviors." helpurl="flash.desktop:SystemIdleMode">
            <folder name="Properties" id="Properties" tiptext="Properties for class SystemIdleMode" helpurl="flash.desktop:SystemIdleMode">
                <string name="KEEP_AWAKE" object="[flash.desktop.SystemIdleMode]" text="SystemIdleMode.KEEP_AWAKE" constant="true" tiptext="Prevents the system from dropping into an idle mode." version="" playername="AIR" helpurl="flash.desktop:SystemIdleMode:KEEP_AWAKE"/>
                <string name="NORMAL" object="[flash.desktop.SystemIdleMode]" text="SystemIdleMode.NORMAL" constant="true" tiptext="The system follows the normal &quot;idle user&quot; behavior." version="" playername="AIR" helpurl="flash.desktop:SystemIdleMode:NORMAL"/>
            </folder>
        </folder>
        <folder name="SystemTrayIcon" id="[flash.desktop.SystemTrayIcon]" sort="true" index="true" asAncestors="flash.desktop:InteractiveIcon,flash.desktop:Icon,flash.events:EventDispatcher,Object" tiptext="The SystemTrayIcon class represents the Windows taskbar&amp;#xAE; notification area (system tray)-style icon." helpurl="flash.desktop:SystemTrayIcon">
            <folder name="Properties" id="Properties" tiptext="Properties for class SystemTrayIcon" helpurl="flash.desktop:SystemTrayIcon">
                <string name="MAX_TIP_LENGTH" object="[flash.desktop.SystemTrayIcon]" text="SystemTrayIcon.MAX_TIP_LENGTH" constant="true" tiptext="The permitted length of the system tray icon tooltip." version="" playername="AIR" helpurl="flash.desktop:SystemTrayIcon:MAX_TIP_LENGTH"/>
                <string name="bitmaps" object="[flash.desktop.SystemTrayIcon]" text=".bitmaps" tiptext="The icon image as an array of BitmapData objects of different sizes." version="" playername="AIR" helpurl="flash.desktop:SystemTrayIcon:bitmaps:get"/>
                <string name="height" object="[flash.desktop.SystemTrayIcon]" text=".height" tiptext="The current display height of the icon in pixels." version="" playername="AIR" helpurl="flash.desktop:SystemTrayIcon:height:get"/>
                <string name="menu" object="[flash.desktop.SystemTrayIcon]" text=".menu" tiptext="The system tray icon menu." version="" playername="AIR" helpurl="flash.desktop:SystemTrayIcon:menu:get"/>
                <string name="tooltip" object="[flash.desktop.SystemTrayIcon]" text=".tooltip" tiptext="The tooltip that pops up for the system tray icon." version="" playername="AIR" helpurl="flash.desktop:SystemTrayIcon:tooltip:get"/>
                <string name="width" object="[flash.desktop.SystemTrayIcon]" text=".width" tiptext="The current display width of the icon in pixels." version="" playername="AIR" helpurl="flash.desktop:SystemTrayIcon:width:get"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class SystemTrayIcon" helpurl="flash.desktop:SystemTrayIcon">
                <string name="rightClick" object="[flash.desktop.SystemTrayIcon]" text=".addEventListener(%type:String=ScreenMouseEvent.RIGHT_CLICK{ScreenMouseEvent.RIGHT_CLICK,ScreenMouseEvent.RIGHT_MOUSE_UP,ScreenMouseEvent.RIGHT_MOUSE_DOWN,ScreenMouseEvent.CLICK,ScreenMouseEvent.MOUSE_UP,ScreenMouseEvent.MOUSE_DOWN},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched by this SystemTrayIcon object on right mouse click." version="" playername="AIR" helpurl="flash.desktop:SystemTrayIcon_flash.events.ScreenMouseEvent.RIGHT_CLICK_rightClick"/>
                <string name="rightMouseUp" object="[flash.desktop.SystemTrayIcon]" text=".addEventListener(%type:String=ScreenMouseEvent.RIGHT_MOUSE_UP{ScreenMouseEvent.RIGHT_CLICK,ScreenMouseEvent.RIGHT_MOUSE_UP,ScreenMouseEvent.RIGHT_MOUSE_DOWN,ScreenMouseEvent.CLICK,ScreenMouseEvent.MOUSE_UP,ScreenMouseEvent.MOUSE_DOWN},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched by this SystemTrayIcon object on right mouse up." version="" playername="AIR" helpurl="flash.desktop:SystemTrayIcon_flash.events.ScreenMouseEvent.RIGHT_MOUSE_UP_rightMouseUp"/>
                <string name="rightMouseDown" object="[flash.desktop.SystemTrayIcon]" text=".addEventListener(%type:String=ScreenMouseEvent.RIGHT_MOUSE_DOWN{ScreenMouseEvent.RIGHT_CLICK,ScreenMouseEvent.RIGHT_MOUSE_UP,ScreenMouseEvent.RIGHT_MOUSE_DOWN,ScreenMouseEvent.CLICK,ScreenMouseEvent.MOUSE_UP,ScreenMouseEvent.MOUSE_DOWN},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched by this SystemTrayIcon object on right mouse down." version="" playername="AIR" helpurl="flash.desktop:SystemTrayIcon_flash.events.ScreenMouseEvent.RIGHT_MOUSE_DOWN_rightMouseDown"/>
                <string name="click" object="[flash.desktop.SystemTrayIcon]" text=".addEventListener(%type:String=ScreenMouseEvent.CLICK{ScreenMouseEvent.RIGHT_CLICK,ScreenMouseEvent.RIGHT_MOUSE_UP,ScreenMouseEvent.RIGHT_MOUSE_DOWN,ScreenMouseEvent.CLICK,ScreenMouseEvent.MOUSE_UP,ScreenMouseEvent.MOUSE_DOWN},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched by this SystemTrayIcon object on mouse click." version="" playername="AIR" helpurl="flash.desktop:SystemTrayIcon_flash.events.ScreenMouseEvent.CLICK_click"/>
                <string name="mouseUp" object="[flash.desktop.SystemTrayIcon]" text=".addEventListener(%type:String=ScreenMouseEvent.MOUSE_UP{ScreenMouseEvent.RIGHT_CLICK,ScreenMouseEvent.RIGHT_MOUSE_UP,ScreenMouseEvent.RIGHT_MOUSE_DOWN,ScreenMouseEvent.CLICK,ScreenMouseEvent.MOUSE_UP,ScreenMouseEvent.MOUSE_DOWN},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched by this SystemTrayIcon object on mouse up." version="" playername="AIR" helpurl="flash.desktop:SystemTrayIcon_flash.events.ScreenMouseEvent.MOUSE_UP_mouseUp"/>
                <string name="mouseDown" object="[flash.desktop.SystemTrayIcon]" text=".addEventListener(%type:String=ScreenMouseEvent.MOUSE_DOWN{ScreenMouseEvent.RIGHT_CLICK,ScreenMouseEvent.RIGHT_MOUSE_UP,ScreenMouseEvent.RIGHT_MOUSE_DOWN,ScreenMouseEvent.CLICK,ScreenMouseEvent.MOUSE_UP,ScreenMouseEvent.MOUSE_DOWN},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched by this SystemTrayIcon object on mouse down." version="" playername="AIR" helpurl="flash.desktop:SystemTrayIcon_flash.events.ScreenMouseEvent.MOUSE_DOWN_mouseDown"/>
            </folder>
        </folder>
        <folder name="Updater" id="[flash.desktop.Updater]" sort="true" index="true" asAncestors="Object" tiptext="The Updater class is used to update the currently running application with a different version." helpurl="flash.desktop:Updater">
            <folder name="Methods" id="Methods" tiptext="Methods for class Updater" helpurl="flash.desktop:Updater">
                <string name="Updater" object="[flash.desktop.Updater]" text="new Updater(%%)" constructor="true" tiptext="The constructor function for the Updater class." version="1.0" playername="AIR" helpurl="flash.desktop:Updater:Updater"/>
                <string name="update" object="[flash.desktop.Updater]" text=".update(%airFile:flash.filesystem:File,version:String%):void" tiptext="Updates the currently running application with the version of the application contained in the specified AIR file." version="1.0" playername="AIR" helpurl="flash.desktop:Updater:update"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class Updater" helpurl="flash.desktop:Updater">
                <string name="isSupported" object="[flash.desktop.Updater]" text=".isSupported" tiptext="The isSupported property is set to true if the Updater class is available on the current platform, otherwise it is set to false." version="" playername="AIR" helpurl="flash.desktop:Updater:isSupported:get"/>
            </folder>
        </folder>
    </folder>
        <folder name="flash.display" id="flash.display" sort="true" tiptext="Classes for package flash.display" helpurl="flash.display">
        <folder name="ActionScriptVersion" id="[flash.display.ActionScriptVersion]" sort="true" index="true" asAncestors="Object" tiptext="The ActionScriptVersion class is an enumeration of constant values thatindicate the language version of a loaded SWF file." helpurl="flash.display:ActionScriptVersion">
            <folder name="Properties" id="Properties" tiptext="Properties for class ActionScriptVersion" helpurl="flash.display:ActionScriptVersion">
                <string name="ACTIONSCRIPT2" object="[flash.display.ActionScriptVersion]" text="ActionScriptVersion.ACTIONSCRIPT2" constant="true" tiptext="ActionScript language version 2.0 and earlier." version="" playername="" helpurl="flash.display:ActionScriptVersion:ACTIONSCRIPT2"/>
                <string name="ACTIONSCRIPT3" object="[flash.display.ActionScriptVersion]" text="ActionScriptVersion.ACTIONSCRIPT3" constant="true" tiptext="ActionScript language version 3.0." version="" playername="" helpurl="flash.display:ActionScriptVersion:ACTIONSCRIPT3"/>
            </folder>
        </folder>
        <folder name="Bitmap" id="[flash.display.Bitmap]" sort="true" index="true" asAncestors="flash.display:DisplayObject,flash.events:EventDispatcher,Object" tiptext="The Bitmap class represents display objects that represent bitmap images." helpurl="flash.display:Bitmap">
            <folder name="Methods" id="Methods" tiptext="Methods for class Bitmap" helpurl="flash.display:Bitmap">
                <string name="Bitmap" object="[flash.display.Bitmap]" text="new Bitmap(%[bitmapData:flash.display:BitmapData=null,pixelSnapping:String=auto,smoothing:Boolean=false]%)" constructor="true" tiptext="Initializes a Bitmap object to refer to the specified BitmapData object." version="4" playername="" helpurl="flash.display:Bitmap:Bitmap"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class Bitmap" helpurl="flash.display:Bitmap">
                <string name="bitmapData" object="[flash.display.Bitmap]" text=".bitmapData" tiptext="The BitmapData object being referenced." version="" playername="" helpurl="flash.display:Bitmap:bitmapData:get"/>
                <string name="pixelSnapping" object="[flash.display.Bitmap]" text=".pixelSnapping" tiptext="Controls whether or not the Bitmap object is snapped to the nearest pixel." version="" playername="" helpurl="flash.display:Bitmap:pixelSnapping:get"/>
                <string name="smoothing" object="[flash.display.Bitmap]" text=".smoothing" tiptext="Controls whether or not the bitmap is smoothed when scaled." version="" playername="" helpurl="flash.display:Bitmap:smoothing:get"/>
            </folder>
        </folder>
        <folder name="BitmapData" id="[flash.display.BitmapData]" sort="true" index="true" asAncestors="Object" tiptext="The BitmapData class lets you work with the data (pixels) of a Bitmap object bitmap image." helpurl="flash.display:BitmapData">
            <folder name="Methods" id="Methods" tiptext="Methods for class BitmapData" helpurl="flash.display:BitmapData">
                <string name="BitmapData" object="[flash.display.BitmapData]" text="new BitmapData(%width:int,height:int[,transparent:Boolean=true,fillColor:uint=0xFFFFFFFF]%)" constructor="true" tiptext="Creates a BitmapData object with a specified width and height." version="4" playername="" helpurl="flash.display:BitmapData:BitmapData"/>
                <string name="applyFilter" object="[flash.display.BitmapData]" text=".applyFilter(%sourceBitmapData:flash.display:BitmapData,sourceRect:flash.geom:Rectangle,destPoint:flash.geom:Point,filter:flash.filters:BitmapFilter%):void" tiptext="Takes a source image and a filter object and generates the filtered image." version="1.0" playername="" helpurl="flash.display:BitmapData:applyFilter"/>
                <string name="clone" object="[flash.display.BitmapData]" text=".clone(%%):flash.display:BitmapData" tiptext="Returns a new BitmapData object with an exact copy of the original bitmap." version="4" playername="" helpurl="flash.display:BitmapData:clone"/>
                <string name="colorTransform" object="[flash.display.BitmapData]" text=".colorTransform(%rect:flash.geom:Rectangle,colorTransform:flash.geom:ColorTransform%):void" tiptext="Adjusts the color values in a specified area of a bitmap image by using a ColorTransform object." version="4" playername="" helpurl="flash.display:BitmapData:colorTransform"/>
                <string name="compare" object="[flash.display.BitmapData]" text=".compare(%otherBitmapData:flash.display:BitmapData%):Object" tiptext="Compares two BitmapData objects." version="4" playername="" helpurl="flash.display:BitmapData:compare"/>
                <string name="copyChannel" object="[flash.display.BitmapData]" text=".copyChannel(%sourceBitmapData:flash.display:BitmapData,sourceRect:flash.geom:Rectangle,destPoint:flash.geom:Point,sourceChannel:uint,destChannel:uint%):void" tiptext="Transfers data from one channel of another BitmapData object or the current BitmapData object into a channel of the current BitmapData object." version="4" playername="" helpurl="flash.display:BitmapData:copyChannel"/>
                <string name="copyPixels" object="[flash.display.BitmapData]" text=".copyPixels(%sourceBitmapData:flash.display:BitmapData,sourceRect:flash.geom:Rectangle,destPoint:flash.geom:Point[,alphaBitmapData:flash.display:BitmapData=null,alphaPoint:flash.geom:Point=null,mergeAlpha:Boolean=false]%):void" tiptext="Provides a fast routine to perform pixel manipulation between images with no stretching, rotation, or color effects." version="4" playername="" helpurl="flash.display:BitmapData:copyPixels"/>
                <string name="dispose" object="[flash.display.BitmapData]" text=".dispose(%%):void" tiptext="Frees memory that is used to store the BitmapData object." version="4" playername="" helpurl="flash.display:BitmapData:dispose"/>
                <string name="draw" object="[flash.display.BitmapData]" text=".draw(%source:flash.display:IBitmapDrawable[,matrix:flash.geom:Matrix=null,colorTransform:flash.geom:ColorTransform=null,blendMode:String=null,clipRect:flash.geom:Rectangle=null,smoothing:Boolean=false]%):void" tiptext="Draws the source display object onto the bitmap image, using the Flash runtime vector renderer." version="4" playername="" helpurl="flash.display:BitmapData:draw"/>
                <string name="fillRect" object="[flash.display.BitmapData]" text=".fillRect(%rect:flash.geom:Rectangle,color:uint%):void" tiptext="Fills a rectangular area of pixels with a specified ARGB color." version="4" playername="" helpurl="flash.display:BitmapData:fillRect"/>
                <string name="floodFill" object="[flash.display.BitmapData]" text=".floodFill(%x:int,y:int,color:uint%):void" tiptext="Performs a flood fill operation on an image starting at a (x, y) coordinate." version="4" playername="" helpurl="flash.display:BitmapData:floodFill"/>
                <string name="generateFilterRect" object="[flash.display.BitmapData]" text=".generateFilterRect(%sourceRect:flash.geom:Rectangle,filter:flash.filters:BitmapFilter%):flash.geom:Rectangle" tiptext="Determines the destination rectangle that will be affected by the applyFilter() call." version="1.0" playername="" helpurl="flash.display:BitmapData:generateFilterRect"/>
                <string name="getColorBoundsRect" object="[flash.display.BitmapData]" text=".getColorBoundsRect(%mask:uint,color:uint[,findColor:Boolean=true]%):flash.geom:Rectangle" tiptext="Determines a rectangular region that either fully encloses all pixels of a specified color within the bitmap image (if the findColor parameter is set to true) or fully encloses all pixels that do not include the specified color (if the findColor parameter is set to false)." version="4" playername="" helpurl="flash.display:BitmapData:getColorBoundsRect"/>
                <string name="getPixel32" object="[flash.display.BitmapData]" text=".getPixel32(%x:int,y:int%):uint" tiptext="Returns an ARGB color value that contains alpha channel data and RGB data." version="4" playername="" helpurl="flash.display:BitmapData:getPixel32"/>
                <string name="getPixel" object="[flash.display.BitmapData]" text=".getPixel(%x:int,y:int%):uint" tiptext="Returns an integer representing a RGB pixel value from a BitmapData object at a specific point." version="4" playername="" helpurl="flash.display:BitmapData:getPixel"/>
                <string name="getPixels" object="[flash.display.BitmapData]" text=".getPixels(%rect:flash.geom:Rectangle%):flash.utils:ByteArray" tiptext="Generates a byte array from a rectangular region of pixel data." version="4" playername="" helpurl="flash.display:BitmapData:getPixels"/>
                <string name="getVector" object="[flash.display.BitmapData]" text=".getVector(%rect:flash.geom:Rectangle%):Vector$uint" tiptext="Generates a vector array from a rectangular region of pixel data." version="4" playername="" helpurl="flash.display:BitmapData:getVector"/>
                <string name="histogram" object="[flash.display.BitmapData]" text=".histogram(%[hRect:flash.geom:Rectangle=null]%):Vector$Vector$Number" tiptext="Computes a 256-value binary number histogram of a BitmapData object." version="4" playername="" helpurl="flash.display:BitmapData:histogram"/>
                <string name="hitTest" object="[flash.display.BitmapData]" text=".hitTest(%firstPoint:flash.geom:Point,firstAlphaThreshold:uint,secondObject:Object[,secondBitmapDataPoint:flash.geom:Point=null,secondAlphaThreshold:uint=1]%):Boolean" tiptext="Performs pixel-level hit detection between one bitmap image and a point, rectangle, or other bitmap image." version="4" playername="" helpurl="flash.display:BitmapData:hitTest"/>
                <string name="lock" object="[flash.display.BitmapData]" text=".lock(%%):void" tiptext="Locks an image so that any objects that reference the BitmapData object, such as Bitmap objects, are not updated when this BitmapData object changes." version="1.0" playername="" helpurl="flash.display:BitmapData:lock"/>
                <string name="merge" object="[flash.display.BitmapData]" text=".merge(%sourceBitmapData:flash.display:BitmapData,sourceRect:flash.geom:Rectangle,destPoint:flash.geom:Point,redMultiplier:uint,greenMultiplier:uint,blueMultiplier:uint,alphaMultiplier:uint%):void" tiptext="Performs per-channel blending from a source image to a destination image." version="4" playername="" helpurl="flash.display:BitmapData:merge"/>
                <string name="noise" object="[flash.display.BitmapData]" text=".noise(%randomSeed:int[,low:uint=0,high:uint=255,channelOptions:uint=7,grayScale:Boolean=false]%):void" tiptext="Fills an image with pixels representing random noise." version="1.0" playername="" helpurl="flash.display:BitmapData:noise"/>
                <string name="paletteMap" object="[flash.display.BitmapData]" text=".paletteMap(%sourceBitmapData:flash.display:BitmapData,sourceRect:flash.geom:Rectangle,destPoint:flash.geom:Point[,redArray:Array=null,greenArray:Array=null,blueArray:Array=null,alphaArray:Array=null]%):void" tiptext="Remaps the color channel values in an image that has up to four arrays of color palette data, one for each channel." version="4" playername="" helpurl="flash.display:BitmapData:paletteMap"/>
                <string name="perlinNoise" object="[flash.display.BitmapData]" text=".perlinNoise(%baseX:Number,baseY:Number,numOctaves:uint,randomSeed:int,stitch:Boolean,fractalNoise:Boolean[,channelOptions:uint=7,grayScale:Boolean=false,offsets:Array=null]%):void" tiptext="Generates a Perlin noise image." version="1.0" playername="" helpurl="flash.display:BitmapData:perlinNoise"/>
                <string name="pixelDissolve" object="[flash.display.BitmapData]" text=".pixelDissolve(%sourceBitmapData:flash.display:BitmapData,sourceRect:flash.geom:Rectangle,destPoint:flash.geom:Point[,randomSeed:int=0,numPixels:int=0,fillColor:uint=0]%):int" tiptext="Performs a pixel dissolve either from a source image to a destination image or by using the same image." version="1.0" playername="" helpurl="flash.display:BitmapData:pixelDissolve"/>
                <string name="scroll" object="[flash.display.BitmapData]" text=".scroll(%x:int,y:int%):void" tiptext="Scrolls an image by a certain (x, y) pixel amount." version="1.0" playername="" helpurl="flash.display:BitmapData:scroll"/>
                <string name="setPixel32" object="[flash.display.BitmapData]" text=".setPixel32(%x:int,y:int,color:uint%):void" tiptext="Sets the color and alpha transparency values of a single pixel of a BitmapData object." version="4" playername="" helpurl="flash.display:BitmapData:setPixel32"/>
                <string name="setPixel" object="[flash.display.BitmapData]" text=".setPixel(%x:int,y:int,color:uint%):void" tiptext="Sets a single pixel of a BitmapData object." version="4" playername="" helpurl="flash.display:BitmapData:setPixel"/>
                <string name="setPixels" object="[flash.display.BitmapData]" text=".setPixels(%rect:flash.geom:Rectangle,inputByteArray:flash.utils:ByteArray%):void" tiptext="Converts a byte array into a rectangular region of pixel data." version="4" playername="" helpurl="flash.display:BitmapData:setPixels"/>
                <string name="setVector" object="[flash.display.BitmapData]" text=".setVector(%rect:flash.geom:Rectangle,inputVector:Vector$uint%):void" tiptext="Converts a Vector into a rectangular region of pixel data." version="4" playername="" helpurl="flash.display:BitmapData:setVector"/>
                <string name="threshold" object="[flash.display.BitmapData]" text=".threshold(%sourceBitmapData:flash.display:BitmapData,sourceRect:flash.geom:Rectangle,destPoint:flash.geom:Point,operation:String,threshold:uint[,color:uint=0,mask:uint=0xFFFFFFFF,copySource:Boolean=false]%):uint" tiptext="Tests pixel values in an image against a specified threshold and sets pixels that pass the test to new color values." version="1.0" playername="" helpurl="flash.display:BitmapData:threshold"/>
                <string name="unlock" object="[flash.display.BitmapData]" text=".unlock(%[changeRect:flash.geom:Rectangle=null]%):void" tiptext="Unlocks an image so that any objects that reference the BitmapData object, such as Bitmap objects, are updated when this BitmapData object changes." version="1.0" playername="" helpurl="flash.display:BitmapData:unlock"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class BitmapData" helpurl="flash.display:BitmapData">
                <string name="height" object="[flash.display.BitmapData]" text=".height" tiptext="The height of the bitmap image in pixels." version="" playername="" helpurl="flash.display:BitmapData:height:get"/>
                <string name="rect" object="[flash.display.BitmapData]" text=".rect" tiptext="The rectangle that defines the size and location of the bitmap image." version="" playername="" helpurl="flash.display:BitmapData:rect:get"/>
                <string name="transparent" object="[flash.display.BitmapData]" text=".transparent" tiptext="Defines whether the bitmap image supports per-pixel transparency." version="" playername="" helpurl="flash.display:BitmapData:transparent:get"/>
                <string name="width" object="[flash.display.BitmapData]" text=".width" tiptext="The width of the bitmap image in pixels." version="" playername="" helpurl="flash.display:BitmapData:width:get"/>
            </folder>
        </folder>
        <folder name="BitmapDataChannel" id="[flash.display.BitmapDataChannel]" sort="true" index="true" asAncestors="Object" tiptext="The BitmapDataChannel class is an enumeration of constant values that indicate which channel to use: red, blue, green, or alpha transparency." helpurl="flash.display:BitmapDataChannel">
            <folder name="Properties" id="Properties" tiptext="Properties for class BitmapDataChannel" helpurl="flash.display:BitmapDataChannel">
                <string name="ALPHA" object="[flash.display.BitmapDataChannel]" text="BitmapDataChannel.ALPHA" constant="true" tiptext="The alpha channel." version="" playername="" helpurl="flash.display:BitmapDataChannel:ALPHA"/>
                <string name="BLUE" object="[flash.display.BitmapDataChannel]" text="BitmapDataChannel.BLUE" constant="true" tiptext="The blue channel." version="" playername="" helpurl="flash.display:BitmapDataChannel:BLUE"/>
                <string name="GREEN" object="[flash.display.BitmapDataChannel]" text="BitmapDataChannel.GREEN" constant="true" tiptext="The green channel." version="" playername="" helpurl="flash.display:BitmapDataChannel:GREEN"/>
                <string name="RED" object="[flash.display.BitmapDataChannel]" text="BitmapDataChannel.RED" constant="true" tiptext="The red channel." version="" playername="" helpurl="flash.display:BitmapDataChannel:RED"/>
            </folder>
        </folder>
        <folder name="BlendMode" id="[flash.display.BlendMode]" sort="true" index="true" asAncestors="Object" tiptext="A class that provides constant values for visual blend mode effects." helpurl="flash.display:BlendMode">
            <folder name="Properties" id="Properties" tiptext="Properties for class BlendMode" helpurl="flash.display:BlendMode">
                <string name="ADD" object="[flash.display.BlendMode]" text="BlendMode.ADD" constant="true" tiptext="Adds the values of the constituent colors of the display object to the colors of its background, applying a ceiling of 0xFF." version="" playername="" helpurl="flash.display:BlendMode:ADD"/>
                <string name="ALPHA" object="[flash.display.BlendMode]" text="BlendMode.ALPHA" constant="true" tiptext="Applies the alpha value of each pixel of the display object to the background." version="" playername="" helpurl="flash.display:BlendMode:ALPHA"/>
                <string name="DARKEN" object="[flash.display.BlendMode]" text="BlendMode.DARKEN" constant="true" tiptext="Selects the darker of the constituent colors of the display object and the colors of the background (the colors with the smaller values)." version="" playername="" helpurl="flash.display:BlendMode:DARKEN"/>
                <string name="DIFFERENCE" object="[flash.display.BlendMode]" text="BlendMode.DIFFERENCE" constant="true" tiptext="Compares the constituent colors of the display object with the colors of its background, and subtracts the darker of the values of the two constituent colors from the lighter value." version="" playername="" helpurl="flash.display:BlendMode:DIFFERENCE"/>
                <string name="ERASE" object="[flash.display.BlendMode]" text="BlendMode.ERASE" constant="true" tiptext="Erases the background based on the alpha value of the display object." version="" playername="" helpurl="flash.display:BlendMode:ERASE"/>
                <string name="HARDLIGHT" object="[flash.display.BlendMode]" text="BlendMode.HARDLIGHT" constant="true" tiptext="Adjusts the color of each pixel based on the darkness of the display object." version="" playername="" helpurl="flash.display:BlendMode:HARDLIGHT"/>
                <string name="INVERT" object="[flash.display.BlendMode]" text="BlendMode.INVERT" constant="true" tiptext="Inverts the background." version="" playername="" helpurl="flash.display:BlendMode:INVERT"/>
                <string name="LAYER" object="[flash.display.BlendMode]" text="BlendMode.LAYER" constant="true" tiptext="Forces the creation of a transparency group for the display object." version="" playername="" helpurl="flash.display:BlendMode:LAYER"/>
                <string name="LIGHTEN" object="[flash.display.BlendMode]" text="BlendMode.LIGHTEN" constant="true" tiptext="Selects the lighter of the constituent colors of the display object and the colors of the background (the colors with the larger values)." version="" playername="" helpurl="flash.display:BlendMode:LIGHTEN"/>
                <string name="MULTIPLY" object="[flash.display.BlendMode]" text="BlendMode.MULTIPLY" constant="true" tiptext="Multiplies the values of the display object constituent colors by the constituent colors of the background color, and normalizes by dividing by 0xFF, resulting in darker colors." version="" playername="" helpurl="flash.display:BlendMode:MULTIPLY"/>
                <string name="NORMAL" object="[flash.display.BlendMode]" text="BlendMode.NORMAL" constant="true" tiptext="The display object appears in front of the background." version="" playername="" helpurl="flash.display:BlendMode:NORMAL"/>
                <string name="OVERLAY" object="[flash.display.BlendMode]" text="BlendMode.OVERLAY" constant="true" tiptext="Adjusts the color of each pixel based on the darkness of the background." version="" playername="" helpurl="flash.display:BlendMode:OVERLAY"/>
                <string name="SCREEN" object="[flash.display.BlendMode]" text="BlendMode.SCREEN" constant="true" tiptext="Multiplies the complement (inverse) of the display object color by the complement of the background color, resulting in a bleaching effect." version="" playername="" helpurl="flash.display:BlendMode:SCREEN"/>
                <string name="SHADER" object="[flash.display.BlendMode]" text="BlendMode.SHADER" constant="true" tiptext="Uses a shader to define the blend between objects." version="" playername="" helpurl="flash.display:BlendMode:SHADER"/>
                <string name="SUBTRACT" object="[flash.display.BlendMode]" text="BlendMode.SUBTRACT" constant="true" tiptext="Subtracts the values of the constituent colors in the display object from the values of the backgroundcolor, applying a floor of 0." version="" playername="" helpurl="flash.display:BlendMode:SUBTRACT"/>
            </folder>
        </folder>
        <folder name="CapsStyle" id="[flash.display.CapsStyle]" sort="true" index="true" asAncestors="Object" tiptext="The CapsStyle class is an enumeration of constant values that specify the caps style to use in drawing lines." helpurl="flash.display:CapsStyle">
            <folder name="Properties" id="Properties" tiptext="Properties for class CapsStyle" helpurl="flash.display:CapsStyle">
                <string name="NONE" object="[flash.display.CapsStyle]" text="CapsStyle.NONE" constant="true" tiptext="Used to specify no caps in the caps parameter of the flash.display.Graphics.lineStyle() method." version="" playername="" helpurl="flash.display:CapsStyle:NONE"/>
                <string name="ROUND" object="[flash.display.CapsStyle]" text="CapsStyle.ROUND" constant="true" tiptext="Used to specify round caps in the caps parameter of the flash.display.Graphics.lineStyle() method." version="" playername="" helpurl="flash.display:CapsStyle:ROUND"/>
                <string name="SQUARE" object="[flash.display.CapsStyle]" text="CapsStyle.SQUARE" constant="true" tiptext="Used to specify square caps in the caps parameter of the flash.display.Graphics.lineStyle() method." version="" playername="" helpurl="flash.display:CapsStyle:SQUARE"/>
            </folder>
        </folder>
        <folder name="ColorCorrection" id="[flash.display.ColorCorrection]" sort="true" index="true" asAncestors="Object" tiptext="The ColorCorrection class provides values for the flash.display.Stage.colorCorrection property." helpurl="flash.display:ColorCorrection">
            <folder name="Properties" id="Properties" tiptext="Properties for class ColorCorrection" helpurl="flash.display:ColorCorrection">
                <string name="DEFAULT" object="[flash.display.ColorCorrection]" text="ColorCorrection.DEFAULT" constant="true" tiptext="Uses the host&apos;s default color correction." version="" playername="" helpurl="flash.display:ColorCorrection:DEFAULT"/>
                <string name="OFF" object="[flash.display.ColorCorrection]" text="ColorCorrection.OFF" constant="true" tiptext="Turns off color correction regardless of the player host environment." version="" playername="" helpurl="flash.display:ColorCorrection:OFF"/>
                <string name="ON" object="[flash.display.ColorCorrection]" text="ColorCorrection.ON" constant="true" tiptext="Turns on color correction regardless of the player host environment, if available." version="" playername="" helpurl="flash.display:ColorCorrection:ON"/>
            </folder>
        </folder>
        <folder name="ColorCorrectionSupport" id="[flash.display.ColorCorrectionSupport]" sort="true" index="true" asAncestors="Object" tiptext="The ColorCorrectionSupport class provides values for the flash.display.Stage.colorCorrectionSupport property." helpurl="flash.display:ColorCorrectionSupport">
            <folder name="Properties" id="Properties" tiptext="Properties for class ColorCorrectionSupport" helpurl="flash.display:ColorCorrectionSupport">
                <string name="DEFAULT_OFF" object="[flash.display.ColorCorrectionSupport]" text="ColorCorrectionSupport.DEFAULT_OFF" constant="true" tiptext="Color correction is supported, but off by default." version="" playername="" helpurl="flash.display:ColorCorrectionSupport:DEFAULT_OFF"/>
                <string name="DEFAULT_ON" object="[flash.display.ColorCorrectionSupport]" text="ColorCorrectionSupport.DEFAULT_ON" constant="true" tiptext="Color correction is supported, and on by default." version="" playername="" helpurl="flash.display:ColorCorrectionSupport:DEFAULT_ON"/>
                <string name="UNSUPPORTED" object="[flash.display.ColorCorrectionSupport]" text="ColorCorrectionSupport.UNSUPPORTED" constant="true" tiptext="Color correction is not supported by the host environment." version="" playername="" helpurl="flash.display:ColorCorrectionSupport:UNSUPPORTED"/>
            </folder>
        </folder>
        <folder name="DisplayObject" id="[flash.display.DisplayObject]" sort="true" index="true" asAncestors="flash.events:EventDispatcher,Object" tiptext="The DisplayObject class is the base class for all objects that can be placed on the display list." helpurl="flash.display:DisplayObject">
            <folder name="Methods" id="Methods" tiptext="Methods for class DisplayObject" helpurl="flash.display:DisplayObject">
                <string name="getBounds" object="[flash.display.DisplayObject]" text=".getBounds(%targetCoordinateSpace:flash.display:DisplayObject%):flash.geom:Rectangle" tiptext="Returns a rectangle that defines the area of the display object relative to the coordinate system of the targetCoordinateSpace object." version="4" playername="" helpurl="flash.display:DisplayObject:getBounds"/>
                <string name="getRect" object="[flash.display.DisplayObject]" text=".getRect(%targetCoordinateSpace:flash.display:DisplayObject%):flash.geom:Rectangle" tiptext="Returns a rectangle that defines the boundary of the display object, based on the coordinate system defined by the targetCoordinateSpace parameter, excluding any strokes on shapes." version="4" playername="" helpurl="flash.display:DisplayObject:getRect"/>
                <string name="globalToLocal3D" object="[flash.display.DisplayObject]" text=".globalToLocal3D(%point:flash.geom:Point%):flash.geom:Vector3D" tiptext="Converts a two-dimensional point from the Stage (global) coordinates to a three-dimensional display object&apos;s (local) coordinates." version="4" playername="" helpurl="flash.display:DisplayObject:globalToLocal3D"/>
                <string name="globalToLocal" object="[flash.display.DisplayObject]" text=".globalToLocal(%point:flash.geom:Point%):flash.geom:Point" tiptext="Converts the point object from Stage (global) coordinates to the display object&apos;s (local) coordinates." version="4" playername="" helpurl="flash.display:DisplayObject:globalToLocal"/>
                <string name="hitTestObject" object="[flash.display.DisplayObject]" text=".hitTestObject(%obj:flash.display:DisplayObject%):Boolean" tiptext="Evaluates the bounding box of the display object to see if it overlaps or intersects with the bounding box of the display object passed as a parameter." version="4" playername="" helpurl="flash.display:DisplayObject:hitTestObject"/>
                <string name="hitTestPoint" object="[flash.display.DisplayObject]" text=".hitTestPoint(%x:Number,y:Number[,shapeFlag:Boolean=false]%):Boolean" tiptext="Evaluates the display object to see if it overlaps or intersects with a point specified by x and y." version="4" playername="" helpurl="flash.display:DisplayObject:hitTestPoint"/>
                <string name="local3DToGlobal" object="[flash.display.DisplayObject]" text=".local3DToGlobal(%point3d:flash.geom:Vector3D%):flash.geom:Point" tiptext="Converts a three-dimensional point of the three-dimensional display object&apos;s (local) coordinates to a two-dimensional point in the Stage (global) coordinates." version="4" playername="" helpurl="flash.display:DisplayObject:local3DToGlobal"/>
                <string name="localToGlobal" object="[flash.display.DisplayObject]" text=".localToGlobal(%point:flash.geom:Point%):flash.geom:Point" tiptext="Converts the point object from the display object&apos;s (local) coordinates to the Stage (global) coordinates." version="4" playername="" helpurl="flash.display:DisplayObject:localToGlobal"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class DisplayObject" helpurl="flash.display:DisplayObject">
                <string name="accessibilityProperties" object="[flash.display.DisplayObject]" text=".accessibilityProperties" tiptext="The current accessibility options for this display object." version="" playername="" helpurl="flash.display:DisplayObject:accessibilityProperties:get"/>
                <string name="alpha" object="[flash.display.DisplayObject]" text=".alpha" tiptext="Indicates the alpha transparency value of the object specified." version="" playername="" helpurl="flash.display:DisplayObject:alpha:get"/>
                <string name="blendMode" object="[flash.display.DisplayObject]" text=".blendMode" tiptext="A value from the BlendMode class that specifies which blend mode to use." version="" playername="" helpurl="flash.display:DisplayObject:blendMode:get"/>
                <string name="cacheAsBitmapMatrix" object="[flash.display.DisplayObject]" text=".cacheAsBitmapMatrix" tiptext="If non-null, this Matrix object defines how a display object is rendered when cacheAsBitmap is set to true." version="" playername="AIR" helpurl="flash.display:DisplayObject:cacheAsBitmapMatrix:get"/>
                <string name="cacheAsBitmap" object="[flash.display.DisplayObject]" text=".cacheAsBitmap" tiptext="If set to true, Flash runtimes cache an internal bitmap representation of the display object." version="" playername="" helpurl="flash.display:DisplayObject:cacheAsBitmap:get"/>
                <string name="filters" object="[flash.display.DisplayObject]" text=".filters" tiptext="An indexed array that contains each filter object currently associated with the display object." version="" playername="" helpurl="flash.display:DisplayObject:filters:get"/>
                <string name="height" object="[flash.display.DisplayObject]" text=".height" tiptext="Indicates the height of the display object, in pixels." version="" playername="" helpurl="flash.display:DisplayObject:height:get"/>
                <string name="loaderInfo" object="[flash.display.DisplayObject]" text=".loaderInfo" tiptext="Returns a LoaderInfo object containing information about loading the file to which this display object belongs." version="" playername="" helpurl="flash.display:DisplayObject:loaderInfo:get"/>
                <string name="mask" object="[flash.display.DisplayObject]" text=".mask" tiptext="The calling display object is masked by the specified mask object." version="" playername="" helpurl="flash.display:DisplayObject:mask:get"/>
                <string name="mouseX" object="[flash.display.DisplayObject]" text=".mouseX" tiptext="Indicates the x coordinate of the mouse or user input device position, in pixels." version="" playername="" helpurl="flash.display:DisplayObject:mouseX:get"/>
                <string name="mouseY" object="[flash.display.DisplayObject]" text=".mouseY" tiptext="Indicates the y coordinate of the mouse or user input device position, in pixels." version="" playername="" helpurl="flash.display:DisplayObject:mouseY:get"/>
                <string name="name" object="[flash.display.DisplayObject]" text=".name" tiptext="Indicates the instance name of the DisplayObject." version="" playername="" helpurl="flash.display:DisplayObject:name:get"/>
                <string name="opaqueBackground" object="[flash.display.DisplayObject]" text=".opaqueBackground" tiptext="Specifies whether the display object is opaque with a certain background color." version="" playername="" helpurl="flash.display:DisplayObject:opaqueBackground:get"/>
                <string name="parent" object="[flash.display.DisplayObject]" text=".parent" tiptext="Indicates the DisplayObjectContainer object that contains this display object." version="" playername="" helpurl="flash.display:DisplayObject:parent:get"/>
                <string name="root" object="[flash.display.DisplayObject]" text=".root" tiptext="For a display object in a loaded SWF file, the root property is the top-most display object in the portion of the display list&apos;s tree structure represented by that SWF file." version="" playername="" helpurl="flash.display:DisplayObject:root:get"/>
                <string name="rotationX" object="[flash.display.DisplayObject]" text=".rotationX" tiptext="Indicates the x-axis rotation of the DisplayObject instance, in degrees, from its original orientation relative to the 3D parent container." version="" playername="" helpurl="flash.display:DisplayObject:rotationX:get"/>
                <string name="rotationY" object="[flash.display.DisplayObject]" text=".rotationY" tiptext="Indicates the y-axis rotation of the DisplayObject instance, in degrees, from its original orientation relative to the 3D parent container." version="" playername="" helpurl="flash.display:DisplayObject:rotationY:get"/>
                <string name="rotationZ" object="[flash.display.DisplayObject]" text=".rotationZ" tiptext="Indicates the z-axis rotation of the DisplayObject instance, in degrees, from its original orientation relative to the 3D parent container." version="" playername="" helpurl="flash.display:DisplayObject:rotationZ:get"/>
                <string name="rotation" object="[flash.display.DisplayObject]" text=".rotation" tiptext="Indicates the rotation of the DisplayObject instance, in degrees, from its original orientation." version="" playername="" helpurl="flash.display:DisplayObject:rotation:get"/>
                <string name="scale9Grid" object="[flash.display.DisplayObject]" text=".scale9Grid" tiptext="The current scaling grid that is in effect." version="" playername="" helpurl="flash.display:DisplayObject:scale9Grid:get"/>
                <string name="scaleX" object="[flash.display.DisplayObject]" text=".scaleX" tiptext="Indicates the horizontal scale (percentage) of the object as applied from the registration point." version="" playername="" helpurl="flash.display:DisplayObject:scaleX:get"/>
                <string name="scaleY" object="[flash.display.DisplayObject]" text=".scaleY" tiptext="Indicates the vertical scale (percentage) of an object as applied from the registration point of the object." version="" playername="" helpurl="flash.display:DisplayObject:scaleY:get"/>
                <string name="scaleZ" object="[flash.display.DisplayObject]" text=".scaleZ" tiptext="Indicates the depth scale (percentage) of an object as applied from the registration point of the object." version="" playername="" helpurl="flash.display:DisplayObject:scaleZ:get"/>
                <string name="scrollRect" object="[flash.display.DisplayObject]" text=".scrollRect" tiptext="The scroll rectangle bounds of the display object." version="" playername="" helpurl="flash.display:DisplayObject:scrollRect:get"/>
                <string name="stage" object="[flash.display.DisplayObject]" text=".stage" tiptext="The Stage of the display object." version="" playername="" helpurl="flash.display:DisplayObject:stage:get"/>
                <string name="transform" object="[flash.display.DisplayObject]" text=".transform" tiptext="An object with properties pertaining to a display object&apos;s matrix, color transform, and pixel bounds." version="" playername="" helpurl="flash.display:DisplayObject:transform:get"/>
                <string name="visible" object="[flash.display.DisplayObject]" text=".visible" tiptext="Whether or not the display object is visible." version="" playername="" helpurl="flash.display:DisplayObject:visible:get"/>
                <string name="width" object="[flash.display.DisplayObject]" text=".width" tiptext="Indicates the width of the display object, in pixels." version="" playername="" helpurl="flash.display:DisplayObject:width:get"/>
                <string name="x" object="[flash.display.DisplayObject]" text=".x" tiptext="Indicates the x coordinate of the DisplayObject instance relative to the local coordinates of the parent DisplayObjectContainer." version="" playername="" helpurl="flash.display:DisplayObject:x:get"/>
                <string name="y" object="[flash.display.DisplayObject]" text=".y" tiptext="Indicates the y coordinate of the DisplayObject instance relative to the local coordinates of the parent DisplayObjectContainer." version="" playername="" helpurl="flash.display:DisplayObject:y:get"/>
                <string name="z" object="[flash.display.DisplayObject]" text=".z" tiptext="Indicates the z coordinate position along the z-axis of the DisplayObject instance relative to the 3D parent container." version="" playername="" helpurl="flash.display:DisplayObject:z:get"/>
                <string name="blendShader" object="[flash.display.DisplayObject]" text=".blendShader" tiptext="Sets a shader that is used for blending the foreground and background." version="" playername="" helpurl="flash.display:DisplayObject:blendShader:set"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class DisplayObject" helpurl="flash.display:DisplayObject">
                <string name="render" object="[flash.display.DisplayObject]" text=".addEventListener(%type:String=Event.RENDER{Event.RENDER,Event.REMOVED_FROM_STAGE,Event.REMOVED,Event.EXIT_FRAME,Event.FRAME_CONSTRUCTED,Event.ENTER_FRAME,Event.ADDED_TO_STAGE,Event.ADDED},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="[broadcast event] Dispatched when the display list is about to be updated and rendered." version="" playername="" helpurl="flash.display:DisplayObject_flash.events.Event.RENDER_render"/>
                <string name="removedFromStage" object="[flash.display.DisplayObject]" text=".addEventListener(%type:String=Event.REMOVED_FROM_STAGE{Event.RENDER,Event.REMOVED_FROM_STAGE,Event.REMOVED,Event.EXIT_FRAME,Event.FRAME_CONSTRUCTED,Event.ENTER_FRAME,Event.ADDED_TO_STAGE,Event.ADDED},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a display object is about to be removed from the display list, either directly or through the removal of a sub tree in which the display object is contained." version="" playername="" helpurl="flash.display:DisplayObject_flash.events.Event.REMOVED_FROM_STAGE_removedFromStage"/>
                <string name="removed" object="[flash.display.DisplayObject]" text=".addEventListener(%type:String=Event.REMOVED{Event.RENDER,Event.REMOVED_FROM_STAGE,Event.REMOVED,Event.EXIT_FRAME,Event.FRAME_CONSTRUCTED,Event.ENTER_FRAME,Event.ADDED_TO_STAGE,Event.ADDED},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a display object is about to be removed from the display list." version="" playername="" helpurl="flash.display:DisplayObject_flash.events.Event.REMOVED_removed"/>
                <string name="exitFrame" object="[flash.display.DisplayObject]" text=".addEventListener(%type:String=Event.EXIT_FRAME{Event.RENDER,Event.REMOVED_FROM_STAGE,Event.REMOVED,Event.EXIT_FRAME,Event.FRAME_CONSTRUCTED,Event.ENTER_FRAME,Event.ADDED_TO_STAGE,Event.ADDED},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="[broadcast event] Dispatched when the playhead is exiting the current frame." version="" playername="" helpurl="flash.display:DisplayObject_flash.events.Event.EXIT_FRAME_exitFrame"/>
                <string name="frameConstructed" object="[flash.display.DisplayObject]" text=".addEventListener(%type:String=Event.FRAME_CONSTRUCTED{Event.RENDER,Event.REMOVED_FROM_STAGE,Event.REMOVED,Event.EXIT_FRAME,Event.FRAME_CONSTRUCTED,Event.ENTER_FRAME,Event.ADDED_TO_STAGE,Event.ADDED},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="[broadcast event] Dispatched after the constructors of frame display objects have run but before frame scripts have run." version="" playername="" helpurl="flash.display:DisplayObject_flash.events.Event.FRAME_CONSTRUCTED_frameConstructed"/>
                <string name="enterFrame" object="[flash.display.DisplayObject]" text=".addEventListener(%type:String=Event.ENTER_FRAME{Event.RENDER,Event.REMOVED_FROM_STAGE,Event.REMOVED,Event.EXIT_FRAME,Event.FRAME_CONSTRUCTED,Event.ENTER_FRAME,Event.ADDED_TO_STAGE,Event.ADDED},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="[broadcast event] Dispatched when the playhead is entering a new frame." version="" playername="" helpurl="flash.display:DisplayObject_flash.events.Event.ENTER_FRAME_enterFrame"/>
                <string name="addedToStage" object="[flash.display.DisplayObject]" text=".addEventListener(%type:String=Event.ADDED_TO_STAGE{Event.RENDER,Event.REMOVED_FROM_STAGE,Event.REMOVED,Event.EXIT_FRAME,Event.FRAME_CONSTRUCTED,Event.ENTER_FRAME,Event.ADDED_TO_STAGE,Event.ADDED},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a display object is added to the on stage display list, either directly or through the addition of a sub tree in which the display object is contained." version="" playername="" helpurl="flash.display:DisplayObject_flash.events.Event.ADDED_TO_STAGE_addedToStage"/>
                <string name="added" object="[flash.display.DisplayObject]" text=".addEventListener(%type:String=Event.ADDED{Event.RENDER,Event.REMOVED_FROM_STAGE,Event.REMOVED,Event.EXIT_FRAME,Event.FRAME_CONSTRUCTED,Event.ENTER_FRAME,Event.ADDED_TO_STAGE,Event.ADDED},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a display object is added to the display list." version="" playername="" helpurl="flash.display:DisplayObject_flash.events.Event.ADDED_added"/>
            </folder>
        </folder>
        <folder name="DisplayObjectContainer" id="[flash.display.DisplayObjectContainer]" sort="true" index="true" asAncestors="flash.display:InteractiveObject,flash.display:DisplayObject,flash.events:EventDispatcher,Object" tiptext="The DisplayObjectContainer class is the base class for all objects that can serve as display object containers on the display list." helpurl="flash.display:DisplayObjectContainer">
            <folder name="Methods" id="Methods" tiptext="Methods for class DisplayObjectContainer" helpurl="flash.display:DisplayObjectContainer">
                <string name="DisplayObjectContainer" object="[flash.display.DisplayObjectContainer]" text="new DisplayObjectContainer(%%)" constructor="true" tiptext="Calling the new DisplayObjectContainer() constructor throws an ArgumentError exception." version="4" playername="" helpurl="flash.display:DisplayObjectContainer:DisplayObjectContainer"/>
                <string name="addChildAt" object="[flash.display.DisplayObjectContainer]" text=".addChildAt(%child:flash.display:DisplayObject,index:int%):flash.display:DisplayObject" tiptext="Adds a child object to this DisplayObjectContainer instance." version="4" playername="" helpurl="flash.display:DisplayObjectContainer:addChildAt"/>
                <string name="addChild" object="[flash.display.DisplayObjectContainer]" text=".addChild(%child:flash.display:DisplayObject%):flash.display:DisplayObject" tiptext="Adds a child object to this DisplayObjectContainer instance." version="4" playername="" helpurl="flash.display:DisplayObjectContainer:addChild"/>
                <string name="areInaccessibleObjectsUnderPoint" object="[flash.display.DisplayObjectContainer]" text=".areInaccessibleObjectsUnderPoint(%point:flash.geom:Point%):Boolean" tiptext="Indicates whether the security restrictions would cause any display objects to be omitted from the list returned by calling the DisplayObjectContainer.getObjectsUnderPoint() method with the specified point point." version="4" playername="" helpurl="flash.display:DisplayObjectContainer:areInaccessibleObjectsUnderPoint"/>
                <string name="contains" object="[flash.display.DisplayObjectContainer]" text=".contains(%child:flash.display:DisplayObject%):Boolean" tiptext="Determines whether the specified display object is a child of the DisplayObjectContainer instance or the instance itself." version="4" playername="" helpurl="flash.display:DisplayObjectContainer:contains"/>
                <string name="getChildAt" object="[flash.display.DisplayObjectContainer]" text=".getChildAt(%index:int%):flash.display:DisplayObject" tiptext="Returns the child display object instance that exists at the specified index." version="4" playername="" helpurl="flash.display:DisplayObjectContainer:getChildAt"/>
                <string name="getChildByName" object="[flash.display.DisplayObjectContainer]" text=".getChildByName(%name:String%):flash.display:DisplayObject" tiptext="Returns the child display object that exists with the specified name." version="4" playername="" helpurl="flash.display:DisplayObjectContainer:getChildByName"/>
                <string name="getChildIndex" object="[flash.display.DisplayObjectContainer]" text=".getChildIndex(%child:flash.display:DisplayObject%):int" tiptext="Returns the index number of a child DisplayObject instance." version="4" playername="" helpurl="flash.display:DisplayObjectContainer:getChildIndex"/>
                <string name="getObjectsUnderPoint" object="[flash.display.DisplayObjectContainer]" text=".getObjectsUnderPoint(%point:flash.geom:Point%):Array" tiptext="Returns an array of objects that lie under the specified point and are children (or grandchildren, and so on) of this DisplayObjectContainer instance." version="4" playername="" helpurl="flash.display:DisplayObjectContainer:getObjectsUnderPoint"/>
                <string name="removeChildAt" object="[flash.display.DisplayObjectContainer]" text=".removeChildAt(%index:int%):flash.display:DisplayObject" tiptext="Removes a child display object, at the specified index position, from the DisplayObjectContainer instance." version="4" playername="" helpurl="flash.display:DisplayObjectContainer:removeChildAt"/>
                <string name="removeChild" object="[flash.display.DisplayObjectContainer]" text=".removeChild(%child:flash.display:DisplayObject%):flash.display:DisplayObject" tiptext="Removes a child display object from the DisplayObjectContainer instance." version="4" playername="" helpurl="flash.display:DisplayObjectContainer:removeChild"/>
                <string name="setChildIndex" object="[flash.display.DisplayObjectContainer]" text=".setChildIndex(%child:flash.display:DisplayObject,index:int%):void" tiptext="Changes the index number of an existing child." version="4" playername="" helpurl="flash.display:DisplayObjectContainer:setChildIndex"/>
                <string name="swapChildrenAt" object="[flash.display.DisplayObjectContainer]" text=".swapChildrenAt(%index1:int,index2:int%):void" tiptext="Swaps the z-order (front-to-back order) of the child objects at the two specified index positions in the child list." version="4" playername="" helpurl="flash.display:DisplayObjectContainer:swapChildrenAt"/>
                <string name="swapChildren" object="[flash.display.DisplayObjectContainer]" text=".swapChildren(%child1:flash.display:DisplayObject,child2:flash.display:DisplayObject%):void" tiptext="Swaps the z-order (front-to-back order) of the two specified child objects." version="4" playername="" helpurl="flash.display:DisplayObjectContainer:swapChildren"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class DisplayObjectContainer" helpurl="flash.display:DisplayObjectContainer">
                <string name="mouseChildren" object="[flash.display.DisplayObjectContainer]" text=".mouseChildren" tiptext="Determines whether or not the children of the object are mouse, or user input device, enabled." version="" playername="" helpurl="flash.display:DisplayObjectContainer:mouseChildren:get"/>
                <string name="numChildren" object="[flash.display.DisplayObjectContainer]" text=".numChildren" tiptext="Returns the number of children of this object." version="" playername="" helpurl="flash.display:DisplayObjectContainer:numChildren:get"/>
                <string name="tabChildren" object="[flash.display.DisplayObjectContainer]" text=".tabChildren" tiptext="Determines whether the children of the object are tab enabled." version="" playername="" helpurl="flash.display:DisplayObjectContainer:tabChildren:get"/>
                <string name="textSnapshot" object="[flash.display.DisplayObjectContainer]" text=".textSnapshot" tiptext="Returns a TextSnapshot object for this DisplayObjectContainer instance." version="" playername="" helpurl="flash.display:DisplayObjectContainer:textSnapshot:get"/>
            </folder>
        </folder>
        <folder name="FocusDirection" id="[flash.display.FocusDirection]" sort="true" index="true" asAncestors="Object" tiptext="The FocusDirection class enumerates values to be used for the direction parameter of the assignFocus() method of a Stage object and for the direction property of a FocusEvent object." helpurl="flash.display:FocusDirection">
            <folder name="Properties" id="Properties" tiptext="Properties for class FocusDirection" helpurl="flash.display:FocusDirection">
                <string name="BOTTOM" object="[flash.display.FocusDirection]" text="FocusDirection.BOTTOM" constant="true" tiptext="Indicates that focus should be given to the object at the end of the reading order." version="" playername="AIR" helpurl="flash.display:FocusDirection:BOTTOM"/>
                <string name="NONE" object="[flash.display.FocusDirection]" text="FocusDirection.NONE" constant="true" tiptext="Indicates that focus object within the interactive object should not change." version="" playername="AIR" helpurl="flash.display:FocusDirection:NONE"/>
                <string name="TOP" object="[flash.display.FocusDirection]" text="FocusDirection.TOP" constant="true" tiptext="Indicates that focus should be given to the object at the beginning of the reading order." version="" playername="AIR" helpurl="flash.display:FocusDirection:TOP"/>
            </folder>
        </folder>
        <folder name="FrameLabel" id="[flash.display.FrameLabel]" sort="true" index="true" asAncestors="Object" tiptext="The FrameLabel object contains properties that specify a frame number and the corresponding label name." helpurl="flash.display:FrameLabel">
            <folder name="Properties" id="Properties" tiptext="Properties for class FrameLabel" helpurl="flash.display:FrameLabel">
                <string name="frame" object="[flash.display.FrameLabel]" text=".frame" tiptext="The frame number containing the label." version="" playername="" helpurl="flash.display:FrameLabel:frame:get"/>
                <string name="name" object="[flash.display.FrameLabel]" text=".name" tiptext="The name of the label." version="" playername="" helpurl="flash.display:FrameLabel:name:get"/>
            </folder>
        </folder>
        <folder name="GradientType" id="[flash.display.GradientType]" sort="true" index="true" asAncestors="Object" tiptext="The GradientType class provides values for the type parameter in the beginGradientFill() and lineGradientStyle() methods of the flash.display.Graphics class." helpurl="flash.display:GradientType">
            <folder name="Properties" id="Properties" tiptext="Properties for class GradientType" helpurl="flash.display:GradientType">
                <string name="LINEAR" object="[flash.display.GradientType]" text="GradientType.LINEAR" constant="true" tiptext="Value used to specify a linear gradient fill." version="" playername="" helpurl="flash.display:GradientType:LINEAR"/>
                <string name="RADIAL" object="[flash.display.GradientType]" text="GradientType.RADIAL" constant="true" tiptext="Value used to specify a radial gradient fill." version="" playername="" helpurl="flash.display:GradientType:RADIAL"/>
            </folder>
        </folder>
        <folder name="Graphics" id="[flash.display.Graphics]" sort="true" index="true" asAncestors="Object" tiptext="The Graphics class contains a set of methods that you can use to create a vector shape." helpurl="flash.display:Graphics">
            <folder name="Methods" id="Methods" tiptext="Methods for class Graphics" helpurl="flash.display:Graphics">
                <string name="beginBitmapFill" object="[flash.display.Graphics]" text=".beginBitmapFill(%bitmap:flash.display:BitmapData[,matrix:flash.geom:Matrix=null,repeat:Boolean=true,smooth:Boolean=false]%):void" tiptext="Begins a bitmap filled shape." version="4" playername="" helpurl="flash.display:Graphics:beginBitmapFill"/>
                <string name="beginFill" object="[flash.display.Graphics]" text=".beginFill(%color:uint[,alpha:Number=1.0]%):void" tiptext="Specifies a single-color fill." version="4" playername="" helpurl="flash.display:Graphics:beginFill"/>
                <string name="beginGradientFill" object="[flash.display.Graphics]" text=".beginGradientFill(%type:String,colors:Array,alphas:Array,ratios:Array[,matrix:flash.geom:Matrix=null,spreadMethod:String=pad,interpolationMethod:String=rgb,focalPointRatio:Number=0]%):void" tiptext="Specifies a gradient fill." version="4" playername="" helpurl="flash.display:Graphics:beginGradientFill"/>
                <string name="beginShaderFill" object="[flash.display.Graphics]" text=".beginShaderFill(%shader:flash.display:Shader[,matrix:flash.geom:Matrix=null]%):void" tiptext="Specifies a shader fill." version="1.5" playername="" helpurl="flash.display:Graphics:beginShaderFill"/>
                <string name="clear" object="[flash.display.Graphics]" text=".clear(%%):void" tiptext="Clears the graphics that were drawn to this Graphics object, and resets fill and line style settings." version="4" playername="" helpurl="flash.display:Graphics:clear"/>
                <string name="copyFrom" object="[flash.display.Graphics]" text=".copyFrom(%sourceGraphics:flash.display:Graphics%):void" tiptext="Copies all of drawing commands from the source Graphics object into the calling Graphics object." version="4" playername="" helpurl="flash.display:Graphics:copyFrom"/>
                <string name="curveTo" object="[flash.display.Graphics]" text=".curveTo(%controlX:Number,controlY:Number,anchorX:Number,anchorY:Number%):void" tiptext="Draws a curve from the current drawing position to (anchorX, anchorY) using the control point specified by (controlX, controlY)." version="4" playername="" helpurl="flash.display:Graphics:curveTo"/>
                <string name="drawCircle" object="[flash.display.Graphics]" text=".drawCircle(%x:Number,y:Number,radius:Number%):void" tiptext="Draws a circle." version="4" playername="" helpurl="flash.display:Graphics:drawCircle"/>
                <string name="drawEllipse" object="[flash.display.Graphics]" text=".drawEllipse(%x:Number,y:Number,width:Number,height:Number%):void" tiptext="Draws an ellipse." version="4" playername="" helpurl="flash.display:Graphics:drawEllipse"/>
                <string name="drawGraphicsData" object="[flash.display.Graphics]" text=".drawGraphicsData(%graphicsData:Vector$flash.display:IGraphicsData%):void" tiptext="Submits a series of IGraphicsData instances for drawing." version="1.5" playername="" helpurl="flash.display:Graphics:drawGraphicsData"/>
                <string name="drawPath" object="[flash.display.Graphics]" text=".drawPath(%commands:Vector$int,data:Vector$Number[,winding:String=evenOdd]%):void" tiptext="Submits a series of commands for drawing." version="1.5" playername="" helpurl="flash.display:Graphics:drawPath"/>
                <string name="drawRect" object="[flash.display.Graphics]" text=".drawRect(%x:Number,y:Number,width:Number,height:Number%):void" tiptext="Draws a round rectangle." version="4" playername="" helpurl="flash.display:Graphics:drawRect"/>
                <string name="drawRoundRect" object="[flash.display.Graphics]" text=".drawRoundRect(%x:Number,y:Number,width:Number,height:Number,ellipseWidth:Number[,ellipseHeight:Number=unknown]%):void" tiptext="Draws a round rectangle." version="4" playername="" helpurl="flash.display:Graphics:drawRoundRect"/>
                <string name="drawTriangles" object="[flash.display.Graphics]" text=".drawTriangles(%vertices:Vector$Number[,indices:Vector$int=null,uvtData:Vector$Number=null,culling:String=none]%):void" tiptext="Renders a set of triangles, typically to distort bitmaps and give them a three-dimensional appearance." version="1.5" playername="" helpurl="flash.display:Graphics:drawTriangles"/>
                <string name="endFill" object="[flash.display.Graphics]" text=".endFill(%%):void" tiptext="Applies a fill to the lines and curves." version="4" playername="" helpurl="flash.display:Graphics:endFill"/>
                <string name="lineBitmapStyle" object="[flash.display.Graphics]" text=".lineBitmapStyle(%bitmap:flash.display:BitmapData[,matrix:flash.geom:Matrix=null,repeat:Boolean=true,smooth:Boolean=false]%):void" tiptext="Specifies a bitmap to use for the line stroke when drawing lines." version="1.5" playername="" helpurl="flash.display:Graphics:lineBitmapStyle"/>
                <string name="lineGradientStyle" object="[flash.display.Graphics]" text=".lineGradientStyle(%type:String,colors:Array,alphas:Array,ratios:Array[,matrix:flash.geom:Matrix=null,spreadMethod:String=pad,interpolationMethod:String=rgb,focalPointRatio:Number=0]%):void" tiptext="Specifies a gradient to use for the stroke when drawing lines." version="9" playername="" helpurl="flash.display:Graphics:lineGradientStyle"/>
                <string name="lineShaderStyle" object="[flash.display.Graphics]" text=".lineShaderStyle(%shader:flash.display:Shader[,matrix:flash.geom:Matrix=null]%):void" tiptext="Specifies a shader to use for the line stroke when drawing lines." version="1.5" playername="" helpurl="flash.display:Graphics:lineShaderStyle"/>
                <string name="lineStyle" object="[flash.display.Graphics]" text=".lineStyle(%[thickness:Number=unknown,color:uint=0,alpha:Number=1.0,pixelHinting:Boolean=false,scaleMode:String=normal,caps:String=null,joints:String=null,miterLimit:Number=3]%):void" tiptext="Specifies a line style that Flash uses for drawing lines." version="4" playername="" helpurl="flash.display:Graphics:lineStyle"/>
                <string name="lineTo" object="[flash.display.Graphics]" text=".lineTo(%x:Number,y:Number%):void" tiptext="Draws a line from the current drawing position to (x, y)." version="4" playername="" helpurl="flash.display:Graphics:lineTo"/>
                <string name="moveTo" object="[flash.display.Graphics]" text=".moveTo(%x:Number,y:Number%):void" tiptext="Moves the current drawing position to (x, y)." version="4" playername="" helpurl="flash.display:Graphics:moveTo"/>
            </folder>
        </folder>
        <folder name="GraphicsBitmapFill" id="[flash.display.GraphicsBitmapFill]" sort="true" index="true" asAncestors="Object" tiptext="Defines a bitmap fill." helpurl="flash.display:GraphicsBitmapFill">
            <folder name="Methods" id="Methods" tiptext="Methods for class GraphicsBitmapFill" helpurl="flash.display:GraphicsBitmapFill">
                <string name="GraphicsBitmapFill" object="[flash.display.GraphicsBitmapFill]" text="new GraphicsBitmapFill(%[bitmapData:flash.display:BitmapData=null,matrix:flash.geom:Matrix=null,repeat:Boolean=true,smooth:Boolean=false]%)" constructor="true" tiptext="Creates a new GraphicsBitmapFill object." version="1.5" playername="" helpurl="flash.display:GraphicsBitmapFill:GraphicsBitmapFill"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class GraphicsBitmapFill" helpurl="flash.display:GraphicsBitmapFill">
                <string name="bitmapData" object="[flash.display.GraphicsBitmapFill]" text=".bitmapData" tiptext="A transparent or opaque bitmap image." version="" playername="" helpurl="flash.display:GraphicsBitmapFill:bitmapData"/>
                <string name="matrix" object="[flash.display.GraphicsBitmapFill]" text=".matrix" tiptext="A matrix object (of the flash.geom.Matrix class) that defines transformations on the bitmap." version="" playername="" helpurl="flash.display:GraphicsBitmapFill:matrix"/>
                <string name="repeat" object="[flash.display.GraphicsBitmapFill]" text=".repeat" tiptext="Specifies whether to repeat the bitmap image in a tiled pattern." version="" playername="" helpurl="flash.display:GraphicsBitmapFill:repeat"/>
                <string name="smooth" object="[flash.display.GraphicsBitmapFill]" text=".smooth" tiptext="Specifies whether to apply a smoothing algorithm to the bitmap image." version="" playername="" helpurl="flash.display:GraphicsBitmapFill:smooth"/>
            </folder>
        </folder>
        <folder name="GraphicsEndFill" id="[flash.display.GraphicsEndFill]" sort="true" index="true" asAncestors="Object" tiptext="Indicates the end of a graphics fill." helpurl="flash.display:GraphicsEndFill">
            <folder name="Methods" id="Methods" tiptext="Methods for class GraphicsEndFill" helpurl="flash.display:GraphicsEndFill">
                <string name="GraphicsEndFill" object="[flash.display.GraphicsEndFill]" text="new GraphicsEndFill(%%)" constructor="true" tiptext="Creates an object to use with the Graphics.drawGraphicsData() method to end the fill, explicitly." version="1.5" playername="" helpurl="flash.display:GraphicsEndFill:GraphicsEndFill"/>
            </folder>
        </folder>
        <folder name="GraphicsGradientFill" id="[flash.display.GraphicsGradientFill]" sort="true" index="true" asAncestors="Object" tiptext="Defines a gradient fill." helpurl="flash.display:GraphicsGradientFill">
            <folder name="Methods" id="Methods" tiptext="Methods for class GraphicsGradientFill" helpurl="flash.display:GraphicsGradientFill">
                <string name="GraphicsGradientFill" object="[flash.display.GraphicsGradientFill]" text="new GraphicsGradientFill(%[type:String=linear,colors:Array=null,alphas:Array=null,ratios:Array=null,matrix:*=null,spreadMethod:*=pad,interpolationMethod:String=rgb,focalPointRatio:Number=0.0]%)" constructor="true" tiptext="Creates a new GraphicsGradientFill object." version="1.5" playername="" helpurl="flash.display:GraphicsGradientFill:GraphicsGradientFill"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class GraphicsGradientFill" helpurl="flash.display:GraphicsGradientFill">
                <string name="alphas" object="[flash.display.GraphicsGradientFill]" text=".alphas" tiptext="An array of alpha values for the corresponding colors in the colors array." version="" playername="" helpurl="flash.display:GraphicsGradientFill:alphas"/>
                <string name="colors" object="[flash.display.GraphicsGradientFill]" text=".colors" tiptext="An array of RGB hexadecimal color values to use in the gradient." version="" playername="" helpurl="flash.display:GraphicsGradientFill:colors"/>
                <string name="focalPointRatio" object="[flash.display.GraphicsGradientFill]" text=".focalPointRatio" tiptext="A number that controls the location of the focal point of the gradient." version="" playername="" helpurl="flash.display:GraphicsGradientFill:focalPointRatio"/>
                <string name="matrix" object="[flash.display.GraphicsGradientFill]" text=".matrix" tiptext="A transformation matrix as defined by the Matrix class." version="" playername="" helpurl="flash.display:GraphicsGradientFill:matrix"/>
                <string name="ratios" object="[flash.display.GraphicsGradientFill]" text=".ratios" tiptext="An array of color distribution ratios." version="" playername="" helpurl="flash.display:GraphicsGradientFill:ratios"/>
                <string name="interpolationMethod" object="[flash.display.GraphicsGradientFill]" text=".interpolationMethod" tiptext="A value from the InterpolationMethod class that specifies which value to use." version="" playername="" helpurl="flash.display:GraphicsGradientFill:interpolationMethod:get"/>
                <string name="spreadMethod" object="[flash.display.GraphicsGradientFill]" text=".spreadMethod" tiptext="A value from the SpreadMethod class that specifies which spread method to use." version="" playername="" helpurl="flash.display:GraphicsGradientFill:spreadMethod:get"/>
                <string name="type" object="[flash.display.GraphicsGradientFill]" text=".type" tiptext="A value from the GradientType class that specifies which gradient type to use." version="" playername="" helpurl="flash.display:GraphicsGradientFill:type:get"/>
            </folder>
        </folder>
        <folder name="GraphicsPath" id="[flash.display.GraphicsPath]" sort="true" index="true" asAncestors="Object" tiptext="A collection of drawing commands and the coordinate parameters for those commands." helpurl="flash.display:GraphicsPath">
            <folder name="Methods" id="Methods" tiptext="Methods for class GraphicsPath" helpurl="flash.display:GraphicsPath">
                <string name="GraphicsPath" object="[flash.display.GraphicsPath]" text="new GraphicsPath(%[commands:Vector$int=null,data:Vector$Number=null,winding:String=evenOdd]%)" constructor="true" tiptext="Creates a new GraphicsPath object." version="1.5" playername="" helpurl="flash.display:GraphicsPath:GraphicsPath"/>
                <string name="curveTo" object="[flash.display.GraphicsPath]" text=".curveTo(%controlX:Number,controlY:Number,anchorX:Number,anchorY:Number%):void" tiptext="Adds a new &quot;curveTo&quot; command to the commands vector and new coordinates to the data vector." version="1.5" playername="" helpurl="flash.display:GraphicsPath:curveTo"/>
                <string name="lineTo" object="[flash.display.GraphicsPath]" text=".lineTo(%x:Number,y:Number%):void" tiptext="Adds a new &quot;lineTo&quot; command to the commands vector and new coordinates to the data vector." version="1.5" playername="" helpurl="flash.display:GraphicsPath:lineTo"/>
                <string name="moveTo" object="[flash.display.GraphicsPath]" text=".moveTo(%x:Number,y:Number%):void" tiptext="Adds a new &quot;moveTo&quot; command to the commands vector and new coordinates to the data vector." version="1.5" playername="" helpurl="flash.display:GraphicsPath:moveTo"/>
                <string name="wideLineTo" object="[flash.display.GraphicsPath]" text=".wideLineTo(%x:Number,y:Number%):void" tiptext="Adds a new &quot;wideLineTo&quot; command to the commands vector and new coordinates to the data vector." version="1.5" playername="" helpurl="flash.display:GraphicsPath:wideLineTo"/>
                <string name="wideMoveTo" object="[flash.display.GraphicsPath]" text=".wideMoveTo(%x:Number,y:Number%):void" tiptext="Adds a new &quot;wideMoveTo&quot; command to the commands vector and new coordinates to the data vector." version="1.5" playername="" helpurl="flash.display:GraphicsPath:wideMoveTo"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class GraphicsPath" helpurl="flash.display:GraphicsPath">
                <string name="commands" object="[flash.display.GraphicsPath]" text=".commands" tiptext="The Vector of drawing commands as integers representing the path." version="" playername="" helpurl="flash.display:GraphicsPath:commands"/>
                <string name="data" object="[flash.display.GraphicsPath]" text=".data" tiptext="The Vector of Numbers containing the parameters used with the drawing commands." version="" playername="" helpurl="flash.display:GraphicsPath:data"/>
                <string name="winding" object="[flash.display.GraphicsPath]" text=".winding" tiptext="Specifies the winding rule using a value defined in the GraphicsPathWinding class." version="" playername="" helpurl="flash.display:GraphicsPath:winding:get"/>
            </folder>
        </folder>
        <folder name="GraphicsPathCommand" id="[flash.display.GraphicsPathCommand]" sort="true" index="true" asAncestors="Object" tiptext="Defines the values to use for specifying path-drawing commands." helpurl="flash.display:GraphicsPathCommand">
            <folder name="Properties" id="Properties" tiptext="Properties for class GraphicsPathCommand" helpurl="flash.display:GraphicsPathCommand">
                <string name="CURVE_TO" object="[flash.display.GraphicsPathCommand]" text="GraphicsPathCommand.CURVE_TO" constant="true" tiptext="Specifies a drawing command that draws a curve from the current drawing position to the x- and y-coordinates specified in the data vector, using a control point." version="" playername="" helpurl="flash.display:GraphicsPathCommand:CURVE_TO"/>
                <string name="LINE_TO" object="[flash.display.GraphicsPathCommand]" text="GraphicsPathCommand.LINE_TO" constant="true" tiptext="Specifies a drawing command that draws a line from the current drawing position to the x- and y-coordinates specified in the data vector." version="" playername="" helpurl="flash.display:GraphicsPathCommand:LINE_TO"/>
                <string name="MOVE_TO" object="[flash.display.GraphicsPathCommand]" text="GraphicsPathCommand.MOVE_TO" constant="true" tiptext="Specifies a drawing command that moves the current drawing position to the x- and y-coordinates specified in the data vector." version="" playername="" helpurl="flash.display:GraphicsPathCommand:MOVE_TO"/>
                <string name="NO_OP" object="[flash.display.GraphicsPathCommand]" text="GraphicsPathCommand.NO_OP" constant="true" tiptext="Represents the default &quot;do nothing&quot; command." version="" playername="" helpurl="flash.display:GraphicsPathCommand:NO_OP"/>
                <string name="WIDE_LINE_TO" object="[flash.display.GraphicsPathCommand]" text="GraphicsPathCommand.WIDE_LINE_TO" constant="true" tiptext="Specifies a &quot;line to&quot; drawing command, but uses two sets of coordinates (four values) instead of one set." version="" playername="" helpurl="flash.display:GraphicsPathCommand:WIDE_LINE_TO"/>
                <string name="WIDE_MOVE_TO" object="[flash.display.GraphicsPathCommand]" text="GraphicsPathCommand.WIDE_MOVE_TO" constant="true" tiptext="Specifies a &quot;move to&quot; drawing command, but uses two sets of coordinates (four values) instead of one set." version="" playername="" helpurl="flash.display:GraphicsPathCommand:WIDE_MOVE_TO"/>
            </folder>
        </folder>
        <folder name="GraphicsPathWinding" id="[flash.display.GraphicsPathWinding]" sort="true" index="true" asAncestors="Object" tiptext="The GraphicsPathWinding class provides values for the flash.display.GraphicsPath.winding property and the flash.display.Graphics.drawPath() methodto determine the direction to draw a path." helpurl="flash.display:GraphicsPathWinding">
            <folder name="Properties" id="Properties" tiptext="Properties for class GraphicsPathWinding" helpurl="flash.display:GraphicsPathWinding">
                <string name="EVEN_ODD" object="[flash.display.GraphicsPathWinding]" text="GraphicsPathWinding.EVEN_ODD" constant="true" tiptext="Establishes the even-odd winding type." version="" playername="" helpurl="flash.display:GraphicsPathWinding:EVEN_ODD"/>
                <string name="NON_ZERO" object="[flash.display.GraphicsPathWinding]" text="GraphicsPathWinding.NON_ZERO" constant="true" tiptext="Establishes the non-zero winding type." version="" playername="" helpurl="flash.display:GraphicsPathWinding:NON_ZERO"/>
            </folder>
        </folder>
        <folder name="GraphicsShaderFill" id="[flash.display.GraphicsShaderFill]" sort="true" index="true" asAncestors="Object" tiptext="Defines a shader fill." helpurl="flash.display:GraphicsShaderFill">
            <folder name="Methods" id="Methods" tiptext="Methods for class GraphicsShaderFill" helpurl="flash.display:GraphicsShaderFill">
                <string name="GraphicsShaderFill" object="[flash.display.GraphicsShaderFill]" text="new GraphicsShaderFill(%[shader:flash.display:Shader=null,matrix:flash.geom:Matrix=null]%)" constructor="true" tiptext="Creates a new GraphicsShaderFill object." version="1.5" playername="" helpurl="flash.display:GraphicsShaderFill:GraphicsShaderFill"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class GraphicsShaderFill" helpurl="flash.display:GraphicsShaderFill">
                <string name="matrix" object="[flash.display.GraphicsShaderFill]" text=".matrix" tiptext="A matrix object (of the flash.geom.Matrix class), which you can use to define transformations on the shader." version="" playername="" helpurl="flash.display:GraphicsShaderFill:matrix"/>
                <string name="shader" object="[flash.display.GraphicsShaderFill]" text=".shader" tiptext="The shader to use for the fill." version="" playername="" helpurl="flash.display:GraphicsShaderFill:shader"/>
            </folder>
        </folder>
        <folder name="GraphicsSolidFill" id="[flash.display.GraphicsSolidFill]" sort="true" index="true" asAncestors="Object" tiptext="Defines a solid fill." helpurl="flash.display:GraphicsSolidFill">
            <folder name="Methods" id="Methods" tiptext="Methods for class GraphicsSolidFill" helpurl="flash.display:GraphicsSolidFill">
                <string name="GraphicsSolidFill" object="[flash.display.GraphicsSolidFill]" text="new GraphicsSolidFill(%[color:uint=0,alpha:Number=1.0]%)" constructor="true" tiptext="Creates a new GraphicsSolidFill object." version="1.5" playername="" helpurl="flash.display:GraphicsSolidFill:GraphicsSolidFill"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class GraphicsSolidFill" helpurl="flash.display:GraphicsSolidFill">
                <string name="alpha" object="[flash.display.GraphicsSolidFill]" text=".alpha" tiptext="Indicates the alpha transparency value of the fill." version="" playername="" helpurl="flash.display:GraphicsSolidFill:alpha"/>
                <string name="color" object="[flash.display.GraphicsSolidFill]" text=".color" tiptext="The color of the fill." version="" playername="" helpurl="flash.display:GraphicsSolidFill:color"/>
            </folder>
        </folder>
        <folder name="GraphicsStroke" id="[flash.display.GraphicsStroke]" sort="true" index="true" asAncestors="Object" tiptext="Defines a line style or stroke." helpurl="flash.display:GraphicsStroke">
            <folder name="Methods" id="Methods" tiptext="Methods for class GraphicsStroke" helpurl="flash.display:GraphicsStroke">
                <string name="GraphicsStroke" object="[flash.display.GraphicsStroke]" text="new GraphicsStroke(%[thickness:Number=unknown,pixelHinting:Boolean=false,scaleMode:String=normal,caps:String=none,joints:String=round,miterLimit:Number=3.0,fill:flash.display:IGraphicsFill=null]%)" constructor="true" tiptext="Creates a new GraphicsStroke object." version="1.5" playername="" helpurl="flash.display:GraphicsStroke:GraphicsStroke"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class GraphicsStroke" helpurl="flash.display:GraphicsStroke">
                <string name="fill" object="[flash.display.GraphicsStroke]" text=".fill" tiptext="Specifies the instance containing data for filling a stroke." version="" playername="" helpurl="flash.display:GraphicsStroke:fill"/>
                <string name="miterLimit" object="[flash.display.GraphicsStroke]" text=".miterLimit" tiptext="Indicates the limit at which a miter is cut off." version="" playername="" helpurl="flash.display:GraphicsStroke:miterLimit"/>
                <string name="pixelHinting" object="[flash.display.GraphicsStroke]" text=".pixelHinting" tiptext="Specifies whether to hint strokes to full pixels." version="" playername="" helpurl="flash.display:GraphicsStroke:pixelHinting"/>
                <string name="thickness" object="[flash.display.GraphicsStroke]" text=".thickness" tiptext="Indicates the thickness of the line in points; valid values are 0-255." version="" playername="" helpurl="flash.display:GraphicsStroke:thickness"/>
                <string name="caps" object="[flash.display.GraphicsStroke]" text=".caps" tiptext="Specifies the type of caps at the end of lines." version="" playername="" helpurl="flash.display:GraphicsStroke:caps:get"/>
                <string name="joints" object="[flash.display.GraphicsStroke]" text=".joints" tiptext="Specifies the type of joint appearance used at angles." version="" playername="" helpurl="flash.display:GraphicsStroke:joints:get"/>
                <string name="scaleMode" object="[flash.display.GraphicsStroke]" text=".scaleMode" tiptext="Specifies the stroke thickness scaling." version="" playername="" helpurl="flash.display:GraphicsStroke:scaleMode:get"/>
            </folder>
        </folder>
        <folder name="GraphicsTrianglePath" id="[flash.display.GraphicsTrianglePath]" sort="true" index="true" asAncestors="Object" tiptext="Defines an ordered set of triangles that can be rendered using either (u,v) fill coordinates or a normal fill." helpurl="flash.display:GraphicsTrianglePath">
            <folder name="Methods" id="Methods" tiptext="Methods for class GraphicsTrianglePath" helpurl="flash.display:GraphicsTrianglePath">
                <string name="GraphicsTrianglePath" object="[flash.display.GraphicsTrianglePath]" text="new GraphicsTrianglePath(%[vertices:Vector$Number=null,indices:Vector$int=null,uvtData:Vector$Number=null,culling:String=none]%)" constructor="true" tiptext="Creates a new GraphicsTrianglePath object." version="1.5" playername="" helpurl="flash.display:GraphicsTrianglePath:GraphicsTrianglePath"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class GraphicsTrianglePath" helpurl="flash.display:GraphicsTrianglePath">
                <string name="indices" object="[flash.display.GraphicsTrianglePath]" text=".indices" tiptext="A Vector of integers or indexes, where every three indexes define a triangle." version="" playername="" helpurl="flash.display:GraphicsTrianglePath:indices"/>
                <string name="uvtData" object="[flash.display.GraphicsTrianglePath]" text=".uvtData" tiptext="A Vector of normalized coordinates used to apply texture mapping." version="" playername="" helpurl="flash.display:GraphicsTrianglePath:uvtData"/>
                <string name="vertices" object="[flash.display.GraphicsTrianglePath]" text=".vertices" tiptext="A Vector of Numbers where each pair of numbers is treated as a point (an x, y pair)." version="" playername="" helpurl="flash.display:GraphicsTrianglePath:vertices"/>
                <string name="culling" object="[flash.display.GraphicsTrianglePath]" text=".culling" tiptext="Specifies whether to render triangles that face in a given direction." version="" playername="" helpurl="flash.display:GraphicsTrianglePath:culling:get"/>
            </folder>
        </folder>
        <folder name="InteractiveObject" id="[flash.display.InteractiveObject]" sort="true" index="true" asAncestors="flash.display:DisplayObject,flash.events:EventDispatcher,Object" tiptext="The InteractiveObject class is the abstract base class for all display objects with which the user can interact, using the mouse, keyboard, or other user input device." helpurl="flash.display:InteractiveObject">
            <folder name="Methods" id="Methods" tiptext="Methods for class InteractiveObject" helpurl="flash.display:InteractiveObject">
                <string name="InteractiveObject" object="[flash.display.InteractiveObject]" text="new InteractiveObject(%%)" constructor="true" tiptext="Calling the new InteractiveObject() constructor throws an ArgumentError exception." version="4" playername="" helpurl="flash.display:InteractiveObject:InteractiveObject"/>
                <string name="requestSoftKeyboard" object="[flash.display.InteractiveObject]" text=".requestSoftKeyboard(%%):Boolean" tiptext="If the current context supports it, show the keyboard." version="2.6" playername="" helpurl="flash.display:InteractiveObject:requestSoftKeyboard"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class InteractiveObject" helpurl="flash.display:InteractiveObject">
                <string name="accessibilityImplementation" object="[flash.display.InteractiveObject]" text=".accessibilityImplementation" tiptext="The current accessibility implementation (AccessibilityImplementation) for this InteractiveObject instance." version="" playername="" helpurl="flash.display:InteractiveObject:accessibilityImplementation:get"/>
                <string name="contextMenu" object="[flash.display.InteractiveObject]" text=".contextMenu" tiptext="Specifies the context menu associated with this object." version="" playername="" helpurl="flash.display:InteractiveObject:contextMenu:get"/>
                <string name="doubleClickEnabled" object="[flash.display.InteractiveObject]" text=".doubleClickEnabled" tiptext="Specifies whether the object receives doubleClick events." version="" playername="" helpurl="flash.display:InteractiveObject:doubleClickEnabled:get"/>
                <string name="focusRect" object="[flash.display.InteractiveObject]" text=".focusRect" tiptext="Specifies whether this object displays a focus rectangle." version="" playername="" helpurl="flash.display:InteractiveObject:focusRect:get"/>
                <string name="mouseEnabled" object="[flash.display.InteractiveObject]" text=".mouseEnabled" tiptext="Specifies whether this object receives mouse, or other user input, messages." version="" playername="" helpurl="flash.display:InteractiveObject:mouseEnabled:get"/>
                <string name="needsSoftKeyboard" object="[flash.display.InteractiveObject]" text=".needsSoftKeyboard" tiptext="Specifies whether a soft keyboard (an on-screen keyboard) displays when the curent InteractiveObject instance is &quot;input active&quot; (ready to accept user input)." version="" playername="" helpurl="flash.display:InteractiveObject:needsSoftKeyboard:get"/>
                <string name="softKeyboardInputAreaOfInterest" object="[flash.display.InteractiveObject]" text=".softKeyboardInputAreaOfInterest" tiptext="Defines a rectangle of content to remain on-screen when the soft keyboard displays." version="" playername="" helpurl="flash.display:InteractiveObject:softKeyboardInputAreaOfInterest:get"/>
                <string name="tabEnabled" object="[flash.display.InteractiveObject]" text=".tabEnabled" tiptext="Specifies whether this object is in the tab order." version="" playername="" helpurl="flash.display:InteractiveObject:tabEnabled:get"/>
                <string name="tabIndex" object="[flash.display.InteractiveObject]" text=".tabIndex" tiptext="Specifies the tab ordering of objects in a SWF file." version="" playername="" helpurl="flash.display:InteractiveObject:tabIndex:get"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class InteractiveObject" helpurl="flash.display:InteractiveObject">
                <string name="softKeyboardDeactivate" object="[flash.display.InteractiveObject]" text=".addEventListener(%type:String=SoftKeyboardEvent.SOFT_KEYBOARD_DEACTIVATE{SoftKeyboardEvent.SOFT_KEYBOARD_DEACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATING,TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched immediately after the soft keyboard is lowered." version="" playername="" helpurl="flash.display:InteractiveObject__softKeyboardDeactivate"/>
                <string name="softKeyboardActivate" object="[flash.display.InteractiveObject]" text=".addEventListener(%type:String=SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATE{SoftKeyboardEvent.SOFT_KEYBOARD_DEACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATING,TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched immediately after the soft keyboard is raised." version="" playername="" helpurl="flash.display:InteractiveObject__softKeyboardActivate"/>
                <string name="softKeyboardActivating" object="[flash.display.InteractiveObject]" text=".addEventListener(%type:String=SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATING{SoftKeyboardEvent.SOFT_KEYBOARD_DEACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATING,TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched immediately before the soft keyboard is raised." version="" playername="" helpurl="flash.display:InteractiveObject__softKeyboardActivating"/>
                <string name="textInput" object="[flash.display.InteractiveObject]" text=".addEventListener(%type:String=TextEvent.TEXT_INPUT{SoftKeyboardEvent.SOFT_KEYBOARD_DEACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATING,TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a user enters one or more characters of text." version="" playername="" helpurl="flash.display:InteractiveObject_flash.events.TextEvent.TEXT_INPUT_textInput"/>
                <string name="imeStartComposition" object="[flash.display.InteractiveObject]" text=".addEventListener(%type:String=IMEEvent.{SoftKeyboardEvent.SOFT_KEYBOARD_DEACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATING,TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="This event is dispatched to any client app that supports inline input with an IME" version="" playername="" helpurl="flash.display:InteractiveObject__imeStartComposition"/>
                <string name="contextMenu" object="[flash.display.InteractiveObject]" text=".addEventListener(%type:String=MouseEvent.CONTEXT_MENU{SoftKeyboardEvent.SOFT_KEYBOARD_DEACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATING,TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a user gesture triggers the context menu associated with this interactive object in an AIR application." version="" playername="AIR" helpurl="flash.display:InteractiveObject_flash.events.MouseEvent.CONTEXT_MENU_contextMenu"/>
                <string name="nativeDragComplete" object="[flash.display.InteractiveObject]" text=".addEventListener(%type:String=NativeDragEvent.NATIVE_DRAG_COMPLETE{SoftKeyboardEvent.SOFT_KEYBOARD_DEACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATING,TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched by the drag initiator InteractiveObject when the user releases the drag gesture." version="" playername="" helpurl="flash.display:InteractiveObject_flash.events.NativeDragEvent.NATIVE_DRAG_COMPLETE_nativeDragComplete"/>
                <string name="nativeDragUpdate" object="[flash.display.InteractiveObject]" text=".addEventListener(%type:String=NativeDragEvent.NATIVE_DRAG_UPDATE{SoftKeyboardEvent.SOFT_KEYBOARD_DEACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATING,TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched during a drag operation by the InteractiveObject that is specified as the drag initiator in the DragManager.doDrag() call." version="" playername="" helpurl="flash.display:InteractiveObject_flash.events.NativeDragEvent.NATIVE_DRAG_UPDATE_nativeDragUpdate"/>
                <string name="nativeDragStart" object="[flash.display.InteractiveObject]" text=".addEventListener(%type:String=NativeDragEvent.NATIVE_DRAG_START{SoftKeyboardEvent.SOFT_KEYBOARD_DEACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATING,TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched at the beginning of a drag operation by the InteractiveObject that is specified as the drag initiator in the DragManager.doDrag() call." version="" playername="" helpurl="flash.display:InteractiveObject_flash.events.NativeDragEvent.NATIVE_DRAG_START_nativeDragStart"/>
                <string name="nativeDragExit" object="[flash.display.InteractiveObject]" text=".addEventListener(%type:String=NativeDragEvent.NATIVE_DRAG_EXIT{SoftKeyboardEvent.SOFT_KEYBOARD_DEACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATING,TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched by an InteractiveObject when a drag gesture leaves its boundary." version="" playername="" helpurl="flash.display:InteractiveObject_flash.events.NativeDragEvent.NATIVE_DRAG_EXIT_nativeDragExit"/>
                <string name="nativeDragDrop" object="[flash.display.InteractiveObject]" text=".addEventListener(%type:String=NativeDragEvent.NATIVE_DRAG_DROP{SoftKeyboardEvent.SOFT_KEYBOARD_DEACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATING,TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched by the target InteractiveObject when a dragged object is dropped on it and the drop has been accepted with a call to DragManager.acceptDragDrop()." version="" playername="" helpurl="flash.display:InteractiveObject_flash.events.NativeDragEvent.NATIVE_DRAG_DROP_nativeDragDrop"/>
                <string name="nativeDragOver" object="[flash.display.InteractiveObject]" text=".addEventListener(%type:String=NativeDragEvent.NATIVE_DRAG_OVER{SoftKeyboardEvent.SOFT_KEYBOARD_DEACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATING,TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched by an InteractiveObject continually while a drag gesture remains within its boundary." version="" playername="" helpurl="flash.display:InteractiveObject_flash.events.NativeDragEvent.NATIVE_DRAG_OVER_nativeDragOver"/>
                <string name="nativeDragEnter" object="[flash.display.InteractiveObject]" text=".addEventListener(%type:String=NativeDragEvent.NATIVE_DRAG_ENTER{SoftKeyboardEvent.SOFT_KEYBOARD_DEACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATING,TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched by an InteractiveObject when a drag gesture enters its boundary." version="" playername="" helpurl="flash.display:InteractiveObject_flash.events.NativeDragEvent.NATIVE_DRAG_ENTER_nativeDragEnter"/>
                <string name="tabIndexChange" object="[flash.display.InteractiveObject]" text=".addEventListener(%type:String=Event.TAB_INDEX_CHANGE{SoftKeyboardEvent.SOFT_KEYBOARD_DEACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATING,TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the value of the object&apos;s tabIndex property changes." version="" playername="" helpurl="flash.display:InteractiveObject_flash.events.Event.TAB_INDEX_CHANGE_tabIndexChange"/>
                <string name="tabEnabledChange" object="[flash.display.InteractiveObject]" text=".addEventListener(%type:String=Event.TAB_ENABLED_CHANGE{SoftKeyboardEvent.SOFT_KEYBOARD_DEACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATING,TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the object&apos;s tabEnabled flag changes." version="" playername="" helpurl="flash.display:InteractiveObject_flash.events.Event.TAB_ENABLED_CHANGE_tabEnabledChange"/>
                <string name="tabChildrenChange" object="[flash.display.InteractiveObject]" text=".addEventListener(%type:String=Event.TAB_CHILDREN_CHANGE{SoftKeyboardEvent.SOFT_KEYBOARD_DEACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATING,TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the value of the object&apos;s tabChildren flag changes." version="" playername="" helpurl="flash.display:InteractiveObject_flash.events.Event.TAB_CHILDREN_CHANGE_tabChildrenChange"/>
                <string name="keyUp" object="[flash.display.InteractiveObject]" text=".addEventListener(%type:String=KeyboardEvent.KEY_UP{SoftKeyboardEvent.SOFT_KEYBOARD_DEACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATING,TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user releases a key." version="" playername="" helpurl="flash.display:InteractiveObject_flash.events.KeyboardEvent.KEY_UP_keyUp"/>
                <string name="keyDown" object="[flash.display.InteractiveObject]" text=".addEventListener(%type:String=KeyboardEvent.KEY_DOWN{SoftKeyboardEvent.SOFT_KEYBOARD_DEACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATING,TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user presses a key." version="" playername="" helpurl="flash.display:InteractiveObject_flash.events.KeyboardEvent.KEY_DOWN_keyDown"/>
                <string name="rightMouseUp" object="[flash.display.InteractiveObject]" text=".addEventListener(%type:String=MouseEvent.RIGHT_MOUSE_UP{SoftKeyboardEvent.SOFT_KEYBOARD_DEACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATING,TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a user releases the pointing device button over an InteractiveObject instance." version="" playername="" helpurl="flash.display:InteractiveObject_flash.events.MouseEvent.RIGHT_MOUSE_UP_rightMouseUp"/>
                <string name="rightMouseDown" object="[flash.display.InteractiveObject]" text=".addEventListener(%type:String=MouseEvent.RIGHT_MOUSE_DOWN{SoftKeyboardEvent.SOFT_KEYBOARD_DEACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATING,TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a user presses the pointing device button over an InteractiveObject instance." version="" playername="" helpurl="flash.display:InteractiveObject_flash.events.MouseEvent.RIGHT_MOUSE_DOWN_rightMouseDown"/>
                <string name="rightClick" object="[flash.display.InteractiveObject]" text=".addEventListener(%type:String=MouseEvent.RIGHT_CLICK{SoftKeyboardEvent.SOFT_KEYBOARD_DEACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATING,TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a user presses and releases the right button of the user&apos;s pointing device over the same InteractiveObject." version="" playername="" helpurl="flash.display:InteractiveObject_flash.events.MouseEvent.RIGHT_CLICK_rightClick"/>
                <string name="middleMouseUp" object="[flash.display.InteractiveObject]" text=".addEventListener(%type:String=MouseEvent.MIDDLE_MOUSE_UP{SoftKeyboardEvent.SOFT_KEYBOARD_DEACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATING,TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a user releases the pointing device button over an InteractiveObject instance." version="" playername="" helpurl="flash.display:InteractiveObject_flash.events.MouseEvent.MIDDLE_MOUSE_UP_middleMouseUp"/>
                <string name="middleMouseDown" object="[flash.display.InteractiveObject]" text=".addEventListener(%type:String=MouseEvent.MIDDLE_MOUSE_DOWN{SoftKeyboardEvent.SOFT_KEYBOARD_DEACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATING,TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a user presses the middle pointing device button over an InteractiveObject instance." version="" playername="" helpurl="flash.display:InteractiveObject_flash.events.MouseEvent.MIDDLE_MOUSE_DOWN_middleMouseDown"/>
                <string name="middleClick" object="[flash.display.InteractiveObject]" text=".addEventListener(%type:String=MouseEvent.MIDDLE_CLICK{SoftKeyboardEvent.SOFT_KEYBOARD_DEACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATING,TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a user presses and releases the middle button of the user&apos;s pointing device over the same InteractiveObject." version="" playername="" helpurl="flash.display:InteractiveObject_flash.events.MouseEvent.MIDDLE_CLICK_middleClick"/>
                <string name="gestureSwipe" object="[flash.display.InteractiveObject]" text=".addEventListener(%type:String=TransformGestureEvent.GESTURE_SWIPE{SoftKeyboardEvent.SOFT_KEYBOARD_DEACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATING,TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user performs a swipe gesture at a point of contact with an InteractiveObject instance (such as touching three fingers to a screen and then moving them in parallel over a display object on a mobile phone or tablet with a touch screen)." version="" playername="" helpurl="flash.display:InteractiveObject_flash.events.TransformGestureEvent.GESTURE_SWIPE_gestureSwipe"/>
                <string name="gestureZoom" object="[flash.display.InteractiveObject]" text=".addEventListener(%type:String=TransformGestureEvent.GESTURE_ZOOM{SoftKeyboardEvent.SOFT_KEYBOARD_DEACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATING,TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user performs a zoom gesture at a point of contact with an InteractiveObject instance (such as touching two fingers to a screen and then quickly spreading the fingers apart over a display object on a mobile phone or tablet with a touch screen)." version="" playername="" helpurl="flash.display:InteractiveObject_flash.events.TransformGestureEvent.GESTURE_ZOOM_gestureZoom"/>
                <string name="gestureRotate" object="[flash.display.InteractiveObject]" text=".addEventListener(%type:String=TransformGestureEvent.GESTURE_ROTATE{SoftKeyboardEvent.SOFT_KEYBOARD_DEACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATING,TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user performs a rotation gesture at a point of contact with an InteractiveObject instance (such as touching two fingers and rotating them over a display object on a mobile phone or tablet with a touch screen)." version="" playername="" helpurl="flash.display:InteractiveObject_flash.events.TransformGestureEvent.GESTURE_ROTATE_gestureRotate"/>
                <string name="gesturePressAndTap" object="[flash.display.InteractiveObject]" text=".addEventListener(%type:String=PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP{SoftKeyboardEvent.SOFT_KEYBOARD_DEACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATING,TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user creates a point of contact with an InteractiveObject instance, then taps on a touch-enabled device (such as placing several fingers over a display object to open a menu and then taps one finger to select a menu item on a mobile phone or tablet with a touch screen)." version="" playername="" helpurl="flash.display:InteractiveObject_flash.events.PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP_gesturePressAndTap"/>
                <string name="gesturePan" object="[flash.display.InteractiveObject]" text=".addEventListener(%type:String=TransformGestureEvent.GESTURE_PAN{SoftKeyboardEvent.SOFT_KEYBOARD_DEACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATING,TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user moves a point of contact over the InteractiveObject instance on a touch-enabled device (such as moving a fingers from left to right over a display object on a mobile phone or tablet with a touch screen)." version="" playername="" helpurl="flash.display:InteractiveObject_flash.events.TransformGestureEvent.GESTURE_PAN_gesturePan"/>
                <string name="gestureTwoFingerTap" object="[flash.display.InteractiveObject]" text=".addEventListener(%type:String=GestureEvent.GESTURE_TWO_FINGER_TAP{SoftKeyboardEvent.SOFT_KEYBOARD_DEACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATING,TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user presses two points of contact over the same InteractiveObject instance on a touch-enabled device (such as presses and releases two fingers over a display object on a mobile phone or tablet with a touch screen)." version="" playername="" helpurl="flash.display:InteractiveObject_flash.events.GestureEvent.GESTURE_TWO_FINGER_TAP_gestureTwoFingerTap"/>
                <string name="touchTap" object="[flash.display.InteractiveObject]" text=".addEventListener(%type:String=TouchEvent.TOUCH_TAP{SoftKeyboardEvent.SOFT_KEYBOARD_DEACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATING,TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user lifts the point of contact over the same InteractiveObject instance on which the contact was initiated on a touch-enabled device (such as presses and releases a finger from a single point over a display object on a mobile phone or tablet with a touch screen)." version="" playername="" helpurl="flash.display:InteractiveObject_flash.events.TouchEvent.TOUCH_TAP_touchTap"/>
                <string name="touchRollOver" object="[flash.display.InteractiveObject]" text=".addEventListener(%type:String=TouchEvent.TOUCH_ROLL_OVER{SoftKeyboardEvent.SOFT_KEYBOARD_DEACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATING,TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user moves the point of contact over an InteractiveObject instance on a touch-enabled device (such as drags a finger from a point outside a display object to a point over a display object on a mobile phone or tablet with a touch screen)." version="" playername="" helpurl="flash.display:InteractiveObject_flash.events.TouchEvent.TOUCH_ROLL_OVER_touchRollOver"/>
                <string name="touchRollOut" object="[flash.display.InteractiveObject]" text=".addEventListener(%type:String=TouchEvent.TOUCH_ROLL_OUT{SoftKeyboardEvent.SOFT_KEYBOARD_DEACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATING,TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user moves the point of contact away from an InteractiveObject instance on a touch-enabled device (such as drags a finger from over a display object to a point outisde the display object on a mobile phone or tablet with a touch screen)." version="" playername="" helpurl="flash.display:InteractiveObject_flash.events.TouchEvent.TOUCH_ROLL_OUT_touchRollOut"/>
                <string name="touchOver" object="[flash.display.InteractiveObject]" text=".addEventListener(%type:String=TouchEvent.TOUCH_OVER{SoftKeyboardEvent.SOFT_KEYBOARD_DEACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATING,TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user moves the point of contact over an InteractiveObject instance on a touch-enabled device (such as drags a finger from a point outside a display object to a point over a display object on a mobile phone or tablet with a touch screen)." version="" playername="" helpurl="flash.display:InteractiveObject_flash.events.TouchEvent.TOUCH_OVER_touchOver"/>
                <string name="touchOut" object="[flash.display.InteractiveObject]" text=".addEventListener(%type:String=TouchEvent.TOUCH_OUT{SoftKeyboardEvent.SOFT_KEYBOARD_DEACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATING,TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user moves the point of contact away from InteractiveObject instance on a touch-enabled device (such as drags a finger from one display object to another on a mobile phone or tablet with a touch screen)." version="" playername="" helpurl="flash.display:InteractiveObject_flash.events.TouchEvent.TOUCH_OUT_touchOut"/>
                <string name="touchMove" object="[flash.display.InteractiveObject]" text=".addEventListener(%type:String=TouchEvent.TOUCH_MOVE{SoftKeyboardEvent.SOFT_KEYBOARD_DEACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATING,TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user moves the point of contact with a touch-enabled device (such as drags a finger across a mobile phone or tablet with a touch screen)." version="" playername="" helpurl="flash.display:InteractiveObject_flash.events.TouchEvent.TOUCH_MOVE_touchMove"/>
                <string name="touchEnd" object="[flash.display.InteractiveObject]" text=".addEventListener(%type:String=TouchEvent.TOUCH_END{SoftKeyboardEvent.SOFT_KEYBOARD_DEACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATING,TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user removes contact with a touch-enabled device (such as lifts a finger off a mobile phone or tablet with a touch screen)." version="" playername="" helpurl="flash.display:InteractiveObject_flash.events.TouchEvent.TOUCH_END_touchEnd"/>
                <string name="touchBegin" object="[flash.display.InteractiveObject]" text=".addEventListener(%type:String=TouchEvent.TOUCH_BEGIN{SoftKeyboardEvent.SOFT_KEYBOARD_DEACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATING,TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user first contacts a touch-enabled device (such as touches a finger to a mobile phone or tablet with a touch screen)." version="" playername="" helpurl="flash.display:InteractiveObject_flash.events.TouchEvent.TOUCH_BEGIN_touchBegin"/>
                <string name="rollOver" object="[flash.display.InteractiveObject]" text=".addEventListener(%type:String=MouseEvent.ROLL_OVER{SoftKeyboardEvent.SOFT_KEYBOARD_DEACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATING,TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user moves a pointing device over an InteractiveObject instance." version="" playername="" helpurl="flash.display:InteractiveObject_flash.events.MouseEvent.ROLL_OVER_rollOver"/>
                <string name="rollOut" object="[flash.display.InteractiveObject]" text=".addEventListener(%type:String=MouseEvent.ROLL_OUT{SoftKeyboardEvent.SOFT_KEYBOARD_DEACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATING,TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user moves a pointing device away from an InteractiveObject instance." version="" playername="" helpurl="flash.display:InteractiveObject_flash.events.MouseEvent.ROLL_OUT_rollOut"/>
                <string name="mouseWheel" object="[flash.display.InteractiveObject]" text=".addEventListener(%type:String=MouseEvent.MOUSE_WHEEL{SoftKeyboardEvent.SOFT_KEYBOARD_DEACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATING,TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a mouse wheel is spun over an InteractiveObject instance." version="" playername="" helpurl="flash.display:InteractiveObject_flash.events.MouseEvent.MOUSE_WHEEL_mouseWheel"/>
                <string name="mouseUp" object="[flash.display.InteractiveObject]" text=".addEventListener(%type:String=MouseEvent.MOUSE_UP{SoftKeyboardEvent.SOFT_KEYBOARD_DEACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATING,TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a user releases the pointing device button over an InteractiveObject instance." version="" playername="" helpurl="flash.display:InteractiveObject_flash.events.MouseEvent.MOUSE_UP_mouseUp"/>
                <string name="mouseOver" object="[flash.display.InteractiveObject]" text=".addEventListener(%type:String=MouseEvent.MOUSE_OVER{SoftKeyboardEvent.SOFT_KEYBOARD_DEACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATING,TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user moves a pointing device over an InteractiveObject instance." version="" playername="" helpurl="flash.display:InteractiveObject_flash.events.MouseEvent.MOUSE_OVER_mouseOver"/>
                <string name="mouseOut" object="[flash.display.InteractiveObject]" text=".addEventListener(%type:String=MouseEvent.MOUSE_OUT{SoftKeyboardEvent.SOFT_KEYBOARD_DEACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATING,TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user moves a pointing device away from an InteractiveObject instance." version="" playername="" helpurl="flash.display:InteractiveObject_flash.events.MouseEvent.MOUSE_OUT_mouseOut"/>
                <string name="mouseMove" object="[flash.display.InteractiveObject]" text=".addEventListener(%type:String=MouseEvent.MOUSE_MOVE{SoftKeyboardEvent.SOFT_KEYBOARD_DEACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATING,TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a user moves the pointing device while it is over an InteractiveObject." version="" playername="" helpurl="flash.display:InteractiveObject_flash.events.MouseEvent.MOUSE_MOVE_mouseMove"/>
                <string name="mouseDown" object="[flash.display.InteractiveObject]" text=".addEventListener(%type:String=MouseEvent.MOUSE_DOWN{SoftKeyboardEvent.SOFT_KEYBOARD_DEACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATING,TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a user presses the pointing device button over an InteractiveObject instance." version="" playername="" helpurl="flash.display:InteractiveObject_flash.events.MouseEvent.MOUSE_DOWN_mouseDown"/>
                <string name="doubleClick" object="[flash.display.InteractiveObject]" text=".addEventListener(%type:String=MouseEvent.DOUBLE_CLICK{SoftKeyboardEvent.SOFT_KEYBOARD_DEACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATING,TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a user presses and releases the main button of a pointing device twice in rapid succession over the same InteractiveObject when that object&apos;s doubleClickEnabled flag is set to true." version="" playername="" helpurl="flash.display:InteractiveObject_flash.events.MouseEvent.DOUBLE_CLICK_doubleClick"/>
                <string name="click" object="[flash.display.InteractiveObject]" text=".addEventListener(%type:String=MouseEvent.CLICK{SoftKeyboardEvent.SOFT_KEYBOARD_DEACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATING,TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a user presses and releases the main button of the user&apos;s pointing device over the same InteractiveObject." version="" playername="" helpurl="flash.display:InteractiveObject_flash.events.MouseEvent.CLICK_click"/>
                <string name="mouseFocusChange" object="[flash.display.InteractiveObject]" text=".addEventListener(%type:String=FocusEvent.MOUSE_FOCUS_CHANGE{SoftKeyboardEvent.SOFT_KEYBOARD_DEACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATING,TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user attempts to change focus by using a pointer device." version="" playername="" helpurl="flash.display:InteractiveObject_flash.events.FocusEvent.MOUSE_FOCUS_CHANGE_mouseFocusChange"/>
                <string name="keyFocusChange" object="[flash.display.InteractiveObject]" text=".addEventListener(%type:String=FocusEvent.KEY_FOCUS_CHANGE{SoftKeyboardEvent.SOFT_KEYBOARD_DEACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATING,TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user attempts to change focus by using keyboard navigation." version="" playername="" helpurl="flash.display:InteractiveObject_flash.events.FocusEvent.KEY_FOCUS_CHANGE_keyFocusChange"/>
                <string name="focusOut" object="[flash.display.InteractiveObject]" text=".addEventListener(%type:String=FocusEvent.FOCUS_OUT{SoftKeyboardEvent.SOFT_KEYBOARD_DEACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATING,TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched after a display object loses focus." version="" playername="" helpurl="flash.display:InteractiveObject_flash.events.FocusEvent.FOCUS_OUT_focusOut"/>
                <string name="focusIn" object="[flash.display.InteractiveObject]" text=".addEventListener(%type:String=FocusEvent.FOCUS_IN{SoftKeyboardEvent.SOFT_KEYBOARD_DEACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATING,TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched after a display object gains focus." version="" playername="" helpurl="flash.display:InteractiveObject_flash.events.FocusEvent.FOCUS_IN_focusIn"/>
                <string name="selectAll" object="[flash.display.InteractiveObject]" text=".addEventListener(%type:String=Event.SELECT_ALL{SoftKeyboardEvent.SOFT_KEYBOARD_DEACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATING,TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user activates the platform specific accelerator key combination for a select all operation or selects &apos;Select All&apos; from the text context menu." version="" playername="" helpurl="flash.display:InteractiveObject_flash.events.Event.SELECT_ALL_selectAll"/>
                <string name="paste" object="[flash.display.InteractiveObject]" text=".addEventListener(%type:String=Event.PASTE{SoftKeyboardEvent.SOFT_KEYBOARD_DEACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATING,TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user activates the platform specific accelerator key combination for a paste operation or selects &apos;Paste&apos; from the text context menu." version="" playername="" helpurl="flash.display:InteractiveObject_flash.events.Event.PASTE_paste"/>
                <string name="cut" object="[flash.display.InteractiveObject]" text=".addEventListener(%type:String=Event.CUT{SoftKeyboardEvent.SOFT_KEYBOARD_DEACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATING,TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user activates the platform specific accelerator key combination for a cut operation or selects &apos;Cut&apos; from the text context menu." version="" playername="" helpurl="flash.display:InteractiveObject_flash.events.Event.CUT_cut"/>
                <string name="copy" object="[flash.display.InteractiveObject]" text=".addEventListener(%type:String=Event.COPY{SoftKeyboardEvent.SOFT_KEYBOARD_DEACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATING,TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user activates the platform specific accelerator key combination for a copy operation or selects &apos;Copy&apos; from the text context menu." version="" playername="" helpurl="flash.display:InteractiveObject_flash.events.Event.COPY_copy"/>
                <string name="clear" object="[flash.display.InteractiveObject]" text=".addEventListener(%type:String=Event.CLEAR{SoftKeyboardEvent.SOFT_KEYBOARD_DEACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATE,SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATING,TextEvent.TEXT_INPUT,IMEEvent.,MouseEvent.CONTEXT_MENU,NativeDragEvent.NATIVE_DRAG_COMPLETE,NativeDragEvent.NATIVE_DRAG_UPDATE,NativeDragEvent.NATIVE_DRAG_START,NativeDragEvent.NATIVE_DRAG_EXIT,NativeDragEvent.NATIVE_DRAG_DROP,NativeDragEvent.NATIVE_DRAG_OVER,NativeDragEvent.NATIVE_DRAG_ENTER,Event.TAB_INDEX_CHANGE,Event.TAB_ENABLED_CHANGE,Event.TAB_CHILDREN_CHANGE,KeyboardEvent.KEY_UP,KeyboardEvent.KEY_DOWN,MouseEvent.RIGHT_MOUSE_UP,MouseEvent.RIGHT_MOUSE_DOWN,MouseEvent.RIGHT_CLICK,MouseEvent.MIDDLE_MOUSE_UP,MouseEvent.MIDDLE_MOUSE_DOWN,MouseEvent.MIDDLE_CLICK,TransformGestureEvent.GESTURE_SWIPE,TransformGestureEvent.GESTURE_ZOOM,TransformGestureEvent.GESTURE_ROTATE,PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP,TransformGestureEvent.GESTURE_PAN,GestureEvent.GESTURE_TWO_FINGER_TAP,TouchEvent.TOUCH_TAP,TouchEvent.TOUCH_ROLL_OVER,TouchEvent.TOUCH_ROLL_OUT,TouchEvent.TOUCH_OVER,TouchEvent.TOUCH_OUT,TouchEvent.TOUCH_MOVE,TouchEvent.TOUCH_END,TouchEvent.TOUCH_BEGIN,MouseEvent.ROLL_OVER,MouseEvent.ROLL_OUT,MouseEvent.MOUSE_WHEEL,MouseEvent.MOUSE_UP,MouseEvent.MOUSE_OVER,MouseEvent.MOUSE_OUT,MouseEvent.MOUSE_MOVE,MouseEvent.MOUSE_DOWN,MouseEvent.DOUBLE_CLICK,MouseEvent.CLICK,FocusEvent.MOUSE_FOCUS_CHANGE,FocusEvent.KEY_FOCUS_CHANGE,FocusEvent.FOCUS_OUT,FocusEvent.FOCUS_IN,Event.SELECT_ALL,Event.PASTE,Event.CUT,Event.COPY,Event.CLEAR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user selects &apos;Clear&apos; (or &apos;Delete&apos;) from the text context menu." version="" playername="" helpurl="flash.display:InteractiveObject_flash.events.Event.CLEAR_clear"/>
            </folder>
        </folder>
        <folder name="InterpolationMethod" id="[flash.display.InterpolationMethod]" sort="true" index="true" asAncestors="Object" tiptext="The InterpolationMethod class provides values for the interpolationMethod parameter in the Graphics.beginGradientFill() and Graphics.lineGradientStyle() methods." helpurl="flash.display:InterpolationMethod">
            <folder name="Properties" id="Properties" tiptext="Properties for class InterpolationMethod" helpurl="flash.display:InterpolationMethod">
                <string name="LINEAR_RGB" object="[flash.display.InterpolationMethod]" text="InterpolationMethod.LINEAR_RGB" constant="true" tiptext="Specifies that the linear RGB interpolation method should be used." version="" playername="" helpurl="flash.display:InterpolationMethod:LINEAR_RGB"/>
                <string name="RGB" object="[flash.display.InterpolationMethod]" text="InterpolationMethod.RGB" constant="true" tiptext="Specifies that the RGB interpolation method should be used." version="" playername="" helpurl="flash.display:InterpolationMethod:RGB"/>
            </folder>
        </folder>
        <folder name="JointStyle" id="[flash.display.JointStyle]" sort="true" index="true" asAncestors="Object" tiptext="The JointStyle class is an enumeration of constant values that specify the joint style to use in drawing lines." helpurl="flash.display:JointStyle">
            <folder name="Properties" id="Properties" tiptext="Properties for class JointStyle" helpurl="flash.display:JointStyle">
                <string name="BEVEL" object="[flash.display.JointStyle]" text="JointStyle.BEVEL" constant="true" tiptext="Specifies beveled joints in the joints parameter of theflash.display.Graphics.lineStyle() method." version="" playername="" helpurl="flash.display:JointStyle:BEVEL"/>
                <string name="MITER" object="[flash.display.JointStyle]" text="JointStyle.MITER" constant="true" tiptext="Specifies mitered joints in the joints parameter of theflash.display.Graphics.lineStyle() method." version="" playername="" helpurl="flash.display:JointStyle:MITER"/>
                <string name="ROUND" object="[flash.display.JointStyle]" text="JointStyle.ROUND" constant="true" tiptext="Specifies round joints in the joints parameter of theflash.display.Graphics.lineStyle() method." version="" playername="" helpurl="flash.display:JointStyle:ROUND"/>
            </folder>
        </folder>
        <folder name="LineScaleMode" id="[flash.display.LineScaleMode]" sort="true" index="true" asAncestors="Object" tiptext="The LineScaleMode class provides values for the scaleMode parameter in the Graphics.lineStyle() method." helpurl="flash.display:LineScaleMode">
            <folder name="Properties" id="Properties" tiptext="Properties for class LineScaleMode" helpurl="flash.display:LineScaleMode">
                <string name="HORIZONTAL" object="[flash.display.LineScaleMode]" text="LineScaleMode.HORIZONTAL" constant="true" tiptext="With this setting used as the scaleMode parameter of the lineStyle()method, the thickness of the line scales only vertically." version="" playername="" helpurl="flash.display:LineScaleMode:HORIZONTAL"/>
                <string name="NONE" object="[flash.display.LineScaleMode]" text="LineScaleMode.NONE" constant="true" tiptext="With this setting used as the scaleMode parameter of the lineStyle()method, the thickness of the line never scales." version="" playername="" helpurl="flash.display:LineScaleMode:NONE"/>
                <string name="NORMAL" object="[flash.display.LineScaleMode]" text="LineScaleMode.NORMAL" constant="true" tiptext="With this setting used as the scaleMode parameter of the lineStyle()method, the thickness of the line always scales when the object is scaled (the default)." version="" playername="" helpurl="flash.display:LineScaleMode:NORMAL"/>
                <string name="VERTICAL" object="[flash.display.LineScaleMode]" text="LineScaleMode.VERTICAL" constant="true" tiptext="With this setting used as the scaleMode parameter of the lineStyle()method, the thickness of the line scales only horizontally." version="" playername="" helpurl="flash.display:LineScaleMode:VERTICAL"/>
            </folder>
        </folder>
        <folder name="Loader" id="[flash.display.Loader]" sort="true" index="true" asAncestors="flash.display:DisplayObjectContainer,flash.display:InteractiveObject,flash.display:DisplayObject,flash.events:EventDispatcher,Object" tiptext="The Loader class is used to load SWF files or image (JPG, PNG, or GIF) files." helpurl="flash.display:Loader">
            <folder name="Methods" id="Methods" tiptext="Methods for class Loader" helpurl="flash.display:Loader">
                <string name="Loader" object="[flash.display.Loader]" text="new Loader(%%)" constructor="true" tiptext="Creates a Loader object that you can use to load files, such as SWF, JPEG, GIF, or PNG files." version="4" playername="" helpurl="flash.display:Loader:Loader"/>
                <string name="close" object="[flash.display.Loader]" text=".close(%%):void" tiptext="Cancels a load() method operation that is currently in progress for the Loader instance." version="4" playername="" helpurl="flash.display:Loader:close"/>
                <string name="loadBytes" object="[flash.display.Loader]" text=".loadBytes(%bytes:flash.utils:ByteArray[,context:flash.system:LoaderContext=null]%):void" tiptext="Loads from binary data stored in a ByteArray object." version="4" playername="" helpurl="flash.display:Loader:loadBytes"/>
                <string name="loadFilePromise" object="[flash.display.Loader]" text=".loadFilePromise(%promise:flash.desktop:IFilePromise[,context:flash.system:LoaderContext=null]%):void" tiptext="Loads an IFilePromise instance." version="2.5" playername="AIR" helpurl="flash.display:Loader:loadFilePromise"/>
                <string name="load" object="[flash.display.Loader]" text=".load(%request:flash.net:URLRequest[,context:flash.system:LoaderContext=null]%):void" tiptext="Loads a SWF file or image file into a DisplayObject that is a child of this Loader instance." version="4" playername="" helpurl="flash.display:Loader:load"/>
                <string name="unloadAndStop" object="[flash.display.Loader]" text=".unloadAndStop(%[gc:Boolean=true]%):void" tiptext="Attempts to unload child SWF file contents and stops the execution of commands from loaded SWF files." version="4" playername="" helpurl="flash.display:Loader:unloadAndStop"/>
                <string name="unload" object="[flash.display.Loader]" text=".unload(%%):void" tiptext="Removes a child of this Loader object that was loaded by using the load() method." version="4" playername="" helpurl="flash.display:Loader:unload"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class Loader" helpurl="flash.display:Loader">
                <string name="contentLoaderInfo" object="[flash.display.Loader]" text=".contentLoaderInfo" tiptext="Returns a LoaderInfo object corresponding to the object being loaded." version="" playername="" helpurl="flash.display:Loader:contentLoaderInfo:get"/>
                <string name="content" object="[flash.display.Loader]" text=".content" tiptext="Contains the root display object of the SWF file or image (JPG, PNG, or GIF) file that was loaded by using the load() or loadBytes() methods." version="" playername="" helpurl="flash.display:Loader:content:get"/>
                <string name="uncaughtErrorEvents" object="[flash.display.Loader]" text=".uncaughtErrorEvents" tiptext="An object that dispatches an uncaughtError event when an unhandled error occurs in the SWF that&apos;s loaded by this Loader object." version="" playername="" helpurl="flash.display:Loader:uncaughtErrorEvents:get"/>
            </folder>
        </folder>
        <folder name="LoaderInfo" id="[flash.display.LoaderInfo]" sort="true" index="true" asAncestors="flash.events:EventDispatcher,Object" tiptext="The LoaderInfo class provides information about a loaded SWF file or a loaded image file (JPEG, GIF, or PNG)." helpurl="flash.display:LoaderInfo">
            <folder name="Methods" id="Methods" tiptext="Methods for class LoaderInfo" helpurl="flash.display:LoaderInfo">
                <string name="getLoaderInfoByDefinition" object="[flash.display.LoaderInfo]" text="LoaderInfo.getLoaderInfoByDefinition(%object:Object%):flash.display:LoaderInfo" static="true" tiptext="Returns the LoaderInfo object associated with a SWF file defined as an object." version="4" playername="" helpurl="flash.display:LoaderInfo:getLoaderInfoByDefinition"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class LoaderInfo" helpurl="flash.display:LoaderInfo">
                <string name="actionScriptVersion" object="[flash.display.LoaderInfo]" text=".actionScriptVersion" tiptext="The ActionScript version of the loaded SWF file." version="" playername="" helpurl="flash.display:LoaderInfo:actionScriptVersion:get"/>
                <string name="applicationDomain" object="[flash.display.LoaderInfo]" text=".applicationDomain" tiptext="When an external SWF file is loaded, all ActionScript 3.0 definitions contained in the loaded class are stored in the applicationDomain property." version="" playername="" helpurl="flash.display:LoaderInfo:applicationDomain:get"/>
                <string name="bytesLoaded" object="[flash.display.LoaderInfo]" text=".bytesLoaded" tiptext="The number of bytes that are loaded for the media." version="" playername="" helpurl="flash.display:LoaderInfo:bytesLoaded:get"/>
                <string name="bytesTotal" object="[flash.display.LoaderInfo]" text=".bytesTotal" tiptext="The number of compressed bytes in the entire media file." version="" playername="" helpurl="flash.display:LoaderInfo:bytesTotal:get"/>
                <string name="bytes" object="[flash.display.LoaderInfo]" text=".bytes" tiptext="The bytes associated with a LoaderInfo object." version="" playername="" helpurl="flash.display:LoaderInfo:bytes:get"/>
                <string name="childAllowsParent" object="[flash.display.LoaderInfo]" text=".childAllowsParent" tiptext="Expresses the trust relationship from content (child) to the Loader (parent)." version="" playername="" helpurl="flash.display:LoaderInfo:childAllowsParent:get"/>
                <string name="childSandboxBridge" object="[flash.display.LoaderInfo]" text=".childSandboxBridge" tiptext="A object that can be set by the loaded content&apos;s code to expose properties and methods that can be accessed by code in the Loader object&apos;s sandbox." version="" playername="" helpurl="flash.display:LoaderInfo:childSandboxBridge:get"/>
                <string name="contentType" object="[flash.display.LoaderInfo]" text=".contentType" tiptext="The MIME type of the loaded file." version="" playername="" helpurl="flash.display:LoaderInfo:contentType:get"/>
                <string name="content" object="[flash.display.LoaderInfo]" text=".content" tiptext="The loaded object associated with this LoaderInfo object." version="" playername="" helpurl="flash.display:LoaderInfo:content:get"/>
                <string name="frameRate" object="[flash.display.LoaderInfo]" text=".frameRate" tiptext="The nominal frame rate, in frames per second, of the loaded SWF file." version="" playername="" helpurl="flash.display:LoaderInfo:frameRate:get"/>
                <string name="height" object="[flash.display.LoaderInfo]" text=".height" tiptext="The nominal height of the loaded file." version="" playername="" helpurl="flash.display:LoaderInfo:height:get"/>
                <string name="isURLInaccessible" object="[flash.display.LoaderInfo]" text=".isURLInaccessible" tiptext="Indicates if the LoaderInfo.url property has been truncated." version="" playername="" helpurl="flash.display:LoaderInfo:isURLInaccessible:get"/>
                <string name="loaderURL" object="[flash.display.LoaderInfo]" text=".loaderURL" tiptext="The URL of the SWF file that initiated the loading of the media described by this LoaderInfo object." version="" playername="" helpurl="flash.display:LoaderInfo:loaderURL:get"/>
                <string name="loader" object="[flash.display.LoaderInfo]" text=".loader" tiptext="The Loader object associated with this LoaderInfo object." version="" playername="" helpurl="flash.display:LoaderInfo:loader:get"/>
                <string name="parameters" object="[flash.display.LoaderInfo]" text=".parameters" tiptext="An object that contains name-value pairs that represent the parameters provided to the loaded SWF file." version="" playername="" helpurl="flash.display:LoaderInfo:parameters:get"/>
                <string name="parentAllowsChild" object="[flash.display.LoaderInfo]" text=".parentAllowsChild" tiptext="Expresses the trust relationship from Loader (parent) to the content (child)." version="" playername="" helpurl="flash.display:LoaderInfo:parentAllowsChild:get"/>
                <string name="parentSandboxBridge" object="[flash.display.LoaderInfo]" text=".parentSandboxBridge" tiptext="A object that can be set by code in the Loader object&apos;s sandbox to expose properties and methods that can be accessed by the loaded content&apos;s code." version="" playername="" helpurl="flash.display:LoaderInfo:parentSandboxBridge:get"/>
                <string name="sameDomain" object="[flash.display.LoaderInfo]" text=".sameDomain" tiptext="Expresses the domain relationship between the loader and the content: true if they have the same origin domain; false otherwise." version="" playername="" helpurl="flash.display:LoaderInfo:sameDomain:get"/>
                <string name="sharedEvents" object="[flash.display.LoaderInfo]" text=".sharedEvents" tiptext="An EventDispatcher instance that can be used to exchange events across security boundaries." version="" playername="" helpurl="flash.display:LoaderInfo:sharedEvents:get"/>
                <string name="swfVersion" object="[flash.display.LoaderInfo]" text=".swfVersion" tiptext="The file format version of the loaded SWF file." version="" playername="" helpurl="flash.display:LoaderInfo:swfVersion:get"/>
                <string name="uncaughtErrorEvents" object="[flash.display.LoaderInfo]" text=".uncaughtErrorEvents" tiptext="An object that dispatches an uncaughtError event when an unhandled error occurs in code in this LoaderInfo object&apos;s SWF file." version="" playername="" helpurl="flash.display:LoaderInfo:uncaughtErrorEvents:get"/>
                <string name="url" object="[flash.display.LoaderInfo]" text=".url" tiptext="The URL of the media being loaded." version="" playername="" helpurl="flash.display:LoaderInfo:url:get"/>
                <string name="width" object="[flash.display.LoaderInfo]" text=".width" tiptext="The nominal width of the loaded content." version="" playername="" helpurl="flash.display:LoaderInfo:width:get"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class LoaderInfo" helpurl="flash.display:LoaderInfo">
                <string name="httpStatus" object="[flash.display.LoaderInfo]" text=".addEventListener(%type:String=HTTPStatusEvent.HTTP_STATUS{HTTPStatusEvent.HTTP_STATUS,Event.UNLOAD,ProgressEvent.PROGRESS,Event.OPEN,IOErrorEvent.IO_ERROR,Event.INIT,Event.COMPLETE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a network request is made over HTTP and an HTTP status code can be detected." version="" playername="" helpurl="flash.display:LoaderInfo_flash.events.HTTPStatusEvent.HTTP_STATUS_httpStatus"/>
                <string name="unload" object="[flash.display.LoaderInfo]" text=".addEventListener(%type:String=Event.UNLOAD{HTTPStatusEvent.HTTP_STATUS,Event.UNLOAD,ProgressEvent.PROGRESS,Event.OPEN,IOErrorEvent.IO_ERROR,Event.INIT,Event.COMPLETE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched by a LoaderInfo object whenever a loaded object is removed by using the unload() method of the Loader object, or when a second load is performed by the same Loader object and the original content is removed prior to the load beginning." version="" playername="" helpurl="flash.display:LoaderInfo_flash.events.Event.UNLOAD_unload"/>
                <string name="progress" object="[flash.display.LoaderInfo]" text=".addEventListener(%type:String=ProgressEvent.PROGRESS{HTTPStatusEvent.HTTP_STATUS,Event.UNLOAD,ProgressEvent.PROGRESS,Event.OPEN,IOErrorEvent.IO_ERROR,Event.INIT,Event.COMPLETE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when data is received as the download operation progresses." version="" playername="" helpurl="flash.display:LoaderInfo_flash.events.ProgressEvent.PROGRESS_progress"/>
                <string name="open" object="[flash.display.LoaderInfo]" text=".addEventListener(%type:String=Event.OPEN{HTTPStatusEvent.HTTP_STATUS,Event.UNLOAD,ProgressEvent.PROGRESS,Event.OPEN,IOErrorEvent.IO_ERROR,Event.INIT,Event.COMPLETE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a load operation starts." version="" playername="" helpurl="flash.display:LoaderInfo_flash.events.Event.OPEN_open"/>
                <string name="ioError" object="[flash.display.LoaderInfo]" text=".addEventListener(%type:String=IOErrorEvent.IO_ERROR{HTTPStatusEvent.HTTP_STATUS,Event.UNLOAD,ProgressEvent.PROGRESS,Event.OPEN,IOErrorEvent.IO_ERROR,Event.INIT,Event.COMPLETE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when an input or output error occurs that causes a load operation to fail." version="" playername="" helpurl="flash.display:LoaderInfo_flash.events.IOErrorEvent.IO_ERROR_ioError"/>
                <string name="init" object="[flash.display.LoaderInfo]" text=".addEventListener(%type:String=Event.INIT{HTTPStatusEvent.HTTP_STATUS,Event.UNLOAD,ProgressEvent.PROGRESS,Event.OPEN,IOErrorEvent.IO_ERROR,Event.INIT,Event.COMPLETE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the properties and methods of a loaded SWF file are accessible and ready for use." version="" playername="" helpurl="flash.display:LoaderInfo_flash.events.Event.INIT_init"/>
                <string name="complete" object="[flash.display.LoaderInfo]" text=".addEventListener(%type:String=Event.COMPLETE{HTTPStatusEvent.HTTP_STATUS,Event.UNLOAD,ProgressEvent.PROGRESS,Event.OPEN,IOErrorEvent.IO_ERROR,Event.INIT,Event.COMPLETE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when data has loaded successfully." version="" playername="" helpurl="flash.display:LoaderInfo_flash.events.Event.COMPLETE_complete"/>
            </folder>
        </folder>
        <folder name="MovieClip" id="[flash.display.MovieClip]" sort="true" index="true" asAncestors="flash.display:Sprite,flash.display:DisplayObjectContainer,flash.display:InteractiveObject,flash.display:DisplayObject,flash.events:EventDispatcher,Object" tiptext="The MovieClip class inherits from the following classes: Sprite, DisplayObjectContainer, InteractiveObject, DisplayObject, and EventDispatcher." helpurl="flash.display:MovieClip">
            <folder name="Methods" id="Methods" tiptext="Methods for class MovieClip" helpurl="flash.display:MovieClip">
                <string name="MovieClip" object="[flash.display.MovieClip]" text="new MovieClip(%%)" constructor="true" tiptext="Creates a new MovieClip instance." version="4" playername="" helpurl="flash.display:MovieClip:MovieClip"/>
                <string name="gotoAndPlay" object="[flash.display.MovieClip]" text=".gotoAndPlay(%frame:Object[,scene:String=null]%):void" tiptext="Starts playing the SWF file at the specified frame." version="4" playername="" helpurl="flash.display:MovieClip:gotoAndPlay"/>
                <string name="gotoAndStop" object="[flash.display.MovieClip]" text=".gotoAndStop(%frame:Object[,scene:String=null]%):void" tiptext="Brings the playhead to the specified frame of the movie clip and stops it there." version="4" playername="" helpurl="flash.display:MovieClip:gotoAndStop"/>
                <string name="nextFrame" object="[flash.display.MovieClip]" text=".nextFrame(%%):void" tiptext="Sends the playhead to the next frame and stops it." version="4" playername="" helpurl="flash.display:MovieClip:nextFrame"/>
                <string name="nextScene" object="[flash.display.MovieClip]" text=".nextScene(%%):void" tiptext="Moves the playhead to the next scene of the MovieClip instance." version="4" playername="" helpurl="flash.display:MovieClip:nextScene"/>
                <string name="play" object="[flash.display.MovieClip]" text=".play(%%):void" tiptext="Moves the playhead in the timeline of the movie clip." version="4" playername="" helpurl="flash.display:MovieClip:play"/>
                <string name="prevFrame" object="[flash.display.MovieClip]" text=".prevFrame(%%):void" tiptext="Sends the playhead to the previous frame and stops it." version="4" playername="" helpurl="flash.display:MovieClip:prevFrame"/>
                <string name="prevScene" object="[flash.display.MovieClip]" text=".prevScene(%%):void" tiptext="Moves the playhead to the previous scene of the MovieClip instance." version="4" playername="" helpurl="flash.display:MovieClip:prevScene"/>
                <string name="stop" object="[flash.display.MovieClip]" text=".stop(%%):void" tiptext="Stops the playhead in the movie clip." version="4" playername="" helpurl="flash.display:MovieClip:stop"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class MovieClip" helpurl="flash.display:MovieClip">
                <string name="currentFrameLabel" object="[flash.display.MovieClip]" text=".currentFrameLabel" tiptext="The label at the current frame in the timeline of the MovieClip instance." version="" playername="" helpurl="flash.display:MovieClip:currentFrameLabel:get"/>
                <string name="currentFrame" object="[flash.display.MovieClip]" text=".currentFrame" tiptext="Specifies the number of the frame in which the playhead is located in the timeline of the MovieClip instance." version="" playername="" helpurl="flash.display:MovieClip:currentFrame:get"/>
                <string name="currentLabel" object="[flash.display.MovieClip]" text=".currentLabel" tiptext="The current label in which the playhead is located in the timeline of the MovieClip instance." version="" playername="" helpurl="flash.display:MovieClip:currentLabel:get"/>
                <string name="currentLabels" object="[flash.display.MovieClip]" text=".currentLabels" tiptext="Returns an array of FrameLabel objects from the current scene." version="" playername="" helpurl="flash.display:MovieClip:currentLabels:get"/>
                <string name="currentScene" object="[flash.display.MovieClip]" text=".currentScene" tiptext="The current scene in which the playhead is located in the timeline of the MovieClip instance." version="" playername="" helpurl="flash.display:MovieClip:currentScene:get"/>
                <string name="enabled" object="[flash.display.MovieClip]" text=".enabled" tiptext="A Boolean value that indicates whether a movie clip is enabled." version="" playername="" helpurl="flash.display:MovieClip:enabled:get"/>
                <string name="framesLoaded" object="[flash.display.MovieClip]" text=".framesLoaded" tiptext="The number of frames that are loaded from a streaming SWF file." version="" playername="" helpurl="flash.display:MovieClip:framesLoaded:get"/>
                <string name="scenes" object="[flash.display.MovieClip]" text=".scenes" tiptext="An array of Scene objects, each listing the name, the number of frames, and the frame labels for a scene in the MovieClip instance." version="" playername="" helpurl="flash.display:MovieClip:scenes:get"/>
                <string name="totalFrames" object="[flash.display.MovieClip]" text=".totalFrames" tiptext="The total number of frames in the MovieClip instance." version="" playername="" helpurl="flash.display:MovieClip:totalFrames:get"/>
                <string name="trackAsMenu" object="[flash.display.MovieClip]" text=".trackAsMenu" tiptext="Indicates whether other display objects that are SimpleButton or MovieClip objects can receive mouse release events or other user input release events." version="" playername="" helpurl="flash.display:MovieClip:trackAsMenu:get"/>
            </folder>
        </folder>
        <folder name="NativeMenu" id="[flash.display.NativeMenu]" sort="true" index="true" asAncestors="flash.events:EventDispatcher,Object" tiptext="The NativeMenu class contains methods and properties for defining native menus." helpurl="flash.display:NativeMenu">
            <folder name="Methods" id="Methods" tiptext="Methods for class NativeMenu" helpurl="flash.display:NativeMenu">
                <string name="NativeMenu" object="[flash.display.NativeMenu]" text="new NativeMenu(%%)" constructor="true" tiptext="Creates a new NativeMenu object." version="1.0" playername="AIR" helpurl="flash.display:NativeMenu:NativeMenu"/>
                <string name="addItemAt" object="[flash.display.NativeMenu]" text=".addItemAt(%item:flash.display:NativeMenuItem,index:int%):flash.display:NativeMenuItem" tiptext="Inserts a menu item at the specified position." version="1.0" playername="AIR" helpurl="flash.display:NativeMenu:addItemAt"/>
                <string name="addItem" object="[flash.display.NativeMenu]" text=".addItem(%item:flash.display:NativeMenuItem%):flash.display:NativeMenuItem" tiptext="Adds a menu item at the bottom of the menu." version="1.0" playername="AIR" helpurl="flash.display:NativeMenu:addItem"/>
                <string name="addSubmenuAt" object="[flash.display.NativeMenu]" text=".addSubmenuAt(%submenu:flash.display:NativeMenu,index:int,label:String%):flash.display:NativeMenuItem" tiptext="Adds a submenu to the menu by inserting a new menu item at the specified position." version="1.0" playername="AIR" helpurl="flash.display:NativeMenu:addSubmenuAt"/>
                <string name="addSubmenu" object="[flash.display.NativeMenu]" text=".addSubmenu(%submenu:flash.display:NativeMenu,label:String%):flash.display:NativeMenuItem" tiptext="Adds a submenu to the menu by inserting a new menu item." version="1.0" playername="AIR" helpurl="flash.display:NativeMenu:addSubmenu"/>
                <string name="clone" object="[flash.display.NativeMenu]" text=".clone(%%):flash.display:NativeMenu" tiptext="Creates a copy of the menu and all items." version="1.0" playername="AIR" helpurl="flash.display:NativeMenu:clone"/>
                <string name="containsItem" object="[flash.display.NativeMenu]" text=".containsItem(%item:flash.display:NativeMenuItem%):Boolean" tiptext="Reports whether this menu contains the specified menu item." version="1.0" playername="AIR" helpurl="flash.display:NativeMenu:containsItem"/>
                <string name="display" object="[flash.display.NativeMenu]" text=".display(%stage:flash.display:Stage,stageX:Number,stageY:Number%):void" tiptext="Pops up this menu at the specified location." version="1.0" playername="AIR" helpurl="flash.display:NativeMenu:display"/>
                <string name="getItemAt" object="[flash.display.NativeMenu]" text=".getItemAt(%index:int%):flash.display:NativeMenuItem" tiptext="Gets the menu item at the specified index." version="1.0" playername="AIR" helpurl="flash.display:NativeMenu:getItemAt"/>
                <string name="getItemByName" object="[flash.display.NativeMenu]" text=".getItemByName(%name:String%):flash.display:NativeMenuItem" tiptext="Gets the menu item with the specified name." version="1.0" playername="AIR" helpurl="flash.display:NativeMenu:getItemByName"/>
                <string name="getItemIndex" object="[flash.display.NativeMenu]" text=".getItemIndex(%item:flash.display:NativeMenuItem%):int" tiptext="Gets the position of the specified item." version="1.0" playername="AIR" helpurl="flash.display:NativeMenu:getItemIndex"/>
                <string name="removeAllItems" object="[flash.display.NativeMenu]" text=".removeAllItems(%%):void" tiptext="Removes all items from the menu." version="1.0" playername="AIR" helpurl="flash.display:NativeMenu:removeAllItems"/>
                <string name="removeItemAt" object="[flash.display.NativeMenu]" text=".removeItemAt(%index:int%):flash.display:NativeMenuItem" tiptext="Removes and returns the menu item at the specified index." version="1.0" playername="AIR" helpurl="flash.display:NativeMenu:removeItemAt"/>
                <string name="removeItem" object="[flash.display.NativeMenu]" text=".removeItem(%item:flash.display:NativeMenuItem%):flash.display:NativeMenuItem" tiptext="Removes the specified menu item." version="1.0" playername="AIR" helpurl="flash.display:NativeMenu:removeItem"/>
                <string name="setItemIndex" object="[flash.display.NativeMenu]" text=".setItemIndex(%item:flash.display:NativeMenuItem,index:int%):void" tiptext="Moves a menu item to the specified position." version="1.0" playername="AIR" helpurl="flash.display:NativeMenu:setItemIndex"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class NativeMenu" helpurl="flash.display:NativeMenu">
                <string name="isSupported" object="[flash.display.NativeMenu]" text=".isSupported" tiptext="Indicates whether any form of native menu is supported on the client system." version="" playername="AIR" helpurl="flash.display:NativeMenu:isSupported:get"/>
                <string name="items" object="[flash.display.NativeMenu]" text=".items" tiptext="The array of NativeMenuItem objects in this menu." version="" playername="AIR" helpurl="flash.display:NativeMenu:items:get"/>
                <string name="numItems" object="[flash.display.NativeMenu]" text=".numItems" tiptext="The number of NativeMenuItem objects in this menu." version="" playername="AIR" helpurl="flash.display:NativeMenu:numItems:get"/>
                <string name="parent" object="[flash.display.NativeMenu]" text=".parent" tiptext="The parent menu." version="" playername="AIR" helpurl="flash.display:NativeMenu:parent:get"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class NativeMenu" helpurl="flash.display:NativeMenu">
                <string name="preparing" object="[flash.display.NativeMenu]" text=".addEventListener(%type:String=Event.PREPARING{Event.PREPARING,Event.DISPLAYING,Event.SELECT},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched by the NativeMenu object whenever the object is about to begin a user interaction." version="" playername="AIR" helpurl="flash.display:NativeMenu_flash.events.Event.PREPARING_preparing"/>
                <string name="displaying" object="[flash.display.NativeMenu]" text=".addEventListener(%type:String=Event.DISPLAYING{Event.PREPARING,Event.DISPLAYING,Event.SELECT},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched by this NativeMenu object immediately before the menu is displayed." version="" playername="AIR" helpurl="flash.display:NativeMenu_flash.events.Event.DISPLAYING_displaying"/>
                <string name="select" object="[flash.display.NativeMenu]" text=".addEventListener(%type:String=Event.SELECT{Event.PREPARING,Event.DISPLAYING,Event.SELECT},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched by this NativeMenu object when one of its menu items or an item in one of its descendant submenus is selected." version="" playername="AIR" helpurl="flash.display:NativeMenu_flash.events.Event.SELECT_select"/>
            </folder>
        </folder>
        <folder name="NativeMenuItem" id="[flash.display.NativeMenuItem]" sort="true" index="true" asAncestors="flash.events:EventDispatcher,Object" tiptext="The NativeMenuItem class represents a single item in a menu." helpurl="flash.display:NativeMenuItem">
            <folder name="Methods" id="Methods" tiptext="Methods for class NativeMenuItem" helpurl="flash.display:NativeMenuItem">
                <string name="NativeMenuItem" object="[flash.display.NativeMenuItem]" text="new NativeMenuItem(%label:String[,isSeparator:Boolean=false]%)" constructor="true" tiptext="Creates a new NativeMenuItem object." version="1.0" playername="AIR" helpurl="flash.display:NativeMenuItem:NativeMenuItem"/>
                <string name="clone" object="[flash.display.NativeMenuItem]" text=".clone(%%):flash.display:NativeMenuItem" tiptext="Creates a copy of the NativeMenuItem object." version="1.0" playername="AIR" helpurl="flash.display:NativeMenuItem:clone"/>
                <string name="toString" object="[flash.display.NativeMenuItem]" text=".toString(%%):String" tiptext="Returns a string containing all the properties of the NativeMenuItem object." version="1.0" playername="AIR" helpurl="flash.display:NativeMenuItem:toString"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class NativeMenuItem" helpurl="flash.display:NativeMenuItem">
                <string name="checked" object="[flash.display.NativeMenuItem]" text=".checked" tiptext="Controls whether this menu item displays a checkmark." version="" playername="AIR" helpurl="flash.display:NativeMenuItem:checked:get"/>
                <string name="data" object="[flash.display.NativeMenuItem]" text=".data" tiptext="An arbitrary data object associated with this menu item." version="" playername="AIR" helpurl="flash.display:NativeMenuItem:data:get"/>
                <string name="enabled" object="[flash.display.NativeMenuItem]" text=".enabled" tiptext="Controls whether this menu item is enabled." version="" playername="AIR" helpurl="flash.display:NativeMenuItem:enabled:get"/>
                <string name="isSeparator" object="[flash.display.NativeMenuItem]" text=".isSeparator" tiptext="Reports whether this item is a menu separator line." version="" playername="AIR" helpurl="flash.display:NativeMenuItem:isSeparator:get"/>
                <string name="keyEquivalentModifiers" object="[flash.display.NativeMenuItem]" text=".keyEquivalentModifiers" tiptext="The array of key codes for the key equivalent modifiers." version="" playername="AIR" helpurl="flash.display:NativeMenuItem:keyEquivalentModifiers:get"/>
                <string name="keyEquivalent" object="[flash.display.NativeMenuItem]" text=".keyEquivalent" tiptext="The key equivalent for this menu item." version="" playername="AIR" helpurl="flash.display:NativeMenuItem:keyEquivalent:get"/>
                <string name="label" object="[flash.display.NativeMenuItem]" text=".label" tiptext="The display string of this menu item." version="" playername="AIR" helpurl="flash.display:NativeMenuItem:label:get"/>
                <string name="menu" object="[flash.display.NativeMenuItem]" text=".menu" tiptext="The menu that contains this item." version="" playername="AIR" helpurl="flash.display:NativeMenuItem:menu:get"/>
                <string name="mnemonicIndex" object="[flash.display.NativeMenuItem]" text=".mnemonicIndex" tiptext="The position of the mnemonic character in the menu item label." version="" playername="AIR" helpurl="flash.display:NativeMenuItem:mnemonicIndex:get"/>
                <string name="name" object="[flash.display.NativeMenuItem]" text=".name" tiptext="The name of this menu item." version="" playername="AIR" helpurl="flash.display:NativeMenuItem:name:get"/>
                <string name="submenu" object="[flash.display.NativeMenuItem]" text=".submenu" tiptext="The submenu associated with this menu item." version="" playername="AIR" helpurl="flash.display:NativeMenuItem:submenu:get"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class NativeMenuItem" helpurl="flash.display:NativeMenuItem">
                <string name="preparing" object="[flash.display.NativeMenuItem]" text=".addEventListener(%type:String=Event.PREPARING{Event.PREPARING,Event.DISPLAYING,Event.SELECT},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched by this NativeMenuItem object immediately before the menu containing the item begins an interaction." version="" playername="AIR" helpurl="flash.display:NativeMenuItem_flash.events.Event.PREPARING_preparing"/>
                <string name="displaying" object="[flash.display.NativeMenuItem]" text=".addEventListener(%type:String=Event.DISPLAYING{Event.PREPARING,Event.DISPLAYING,Event.SELECT},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched by this NativeMenuItem object immediately before the menu containing the item is displayed." version="" playername="AIR" helpurl="flash.display:NativeMenuItem_flash.events.Event.DISPLAYING_displaying"/>
                <string name="select" object="[flash.display.NativeMenuItem]" text=".addEventListener(%type:String=Event.SELECT{Event.PREPARING,Event.DISPLAYING,Event.SELECT},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched whenever a menu item is selected by the user." version="" playername="AIR" helpurl="flash.display:NativeMenuItem_flash.events.Event.SELECT_select"/>
            </folder>
        </folder>
        <folder name="NativeWindow" id="[flash.display.NativeWindow]" sort="true" index="true" asAncestors="flash.events:EventDispatcher,Object" tiptext="The NativeWindow class provides an interface for creating and controlling native desktop windows." helpurl="flash.display:NativeWindow">
            <folder name="Methods" id="Methods" tiptext="Methods for class NativeWindow" helpurl="flash.display:NativeWindow">
                <string name="NativeWindow" object="[flash.display.NativeWindow]" text="new NativeWindow(%initOptions:flash.display:NativeWindowInitOptions%)" constructor="true" tiptext="Creates a new NativeWindow instance and a corresponding operating system window." version="1.0" playername="AIR" helpurl="flash.display:NativeWindow:NativeWindow"/>
                <string name="activate" object="[flash.display.NativeWindow]" text=".activate(%%):void" tiptext="Activates this window." version="1.0" playername="AIR" helpurl="flash.display:NativeWindow:activate"/>
                <string name="close" object="[flash.display.NativeWindow]" text=".close(%%):void" tiptext="Closes this window." version="1.0" playername="AIR" helpurl="flash.display:NativeWindow:close"/>
                <string name="globalToScreen" object="[flash.display.NativeWindow]" text=".globalToScreen(%globalPoint:flash.geom:Point%):flash.geom:Point" tiptext="Converts a point in pixel coordinates relative to the origin of the window stage (a global point in terms of the display list), to a point on the virtual desktop." version="1.0" playername="AIR" helpurl="flash.display:NativeWindow:globalToScreen"/>
                <string name="listOwnedWindows" object="[flash.display.NativeWindow]" text=".listOwnedWindows(%%):Vector$flash.display:NativeWindow" tiptext="Returns a list of the NativeWindow objects that are owned by this window." version="2.6" playername="AIR" helpurl="flash.display:NativeWindow:listOwnedWindows"/>
                <string name="maximize" object="[flash.display.NativeWindow]" text=".maximize(%%):void" tiptext="Maximizes this window." version="1.0" playername="AIR" helpurl="flash.display:NativeWindow:maximize"/>
                <string name="minimize" object="[flash.display.NativeWindow]" text=".minimize(%%):void" tiptext="Minimizes this window." version="1.0" playername="AIR" helpurl="flash.display:NativeWindow:minimize"/>
                <string name="notifyUser" object="[flash.display.NativeWindow]" text=".notifyUser(%type:String%):void" tiptext="Triggers a visual cue through the operating system that an event of interest has occurred." version="1.0" playername="AIR" helpurl="flash.display:NativeWindow:notifyUser"/>
                <string name="orderInBackOf" object="[flash.display.NativeWindow]" text=".orderInBackOf(%window:flash.display:NativeWindow%):Boolean" tiptext="Sends this window directly behind the specified window." version="1.0" playername="AIR" helpurl="flash.display:NativeWindow:orderInBackOf"/>
                <string name="orderInFrontOf" object="[flash.display.NativeWindow]" text=".orderInFrontOf(%window:flash.display:NativeWindow%):Boolean" tiptext="Brings this window directly in front of the specified window." version="1.0" playername="AIR" helpurl="flash.display:NativeWindow:orderInFrontOf"/>
                <string name="orderToBack" object="[flash.display.NativeWindow]" text=".orderToBack(%%):Boolean" tiptext="Sends this window behind any other visible windows." version="1.0" playername="AIR" helpurl="flash.display:NativeWindow:orderToBack"/>
                <string name="orderToFront" object="[flash.display.NativeWindow]" text=".orderToFront(%%):Boolean" tiptext="Brings this window in front of any other visible windows." version="1.0" playername="AIR" helpurl="flash.display:NativeWindow:orderToFront"/>
                <string name="restore" object="[flash.display.NativeWindow]" text=".restore(%%):void" tiptext="Restores this window from either a minimized or a maximized state." version="1.0" playername="AIR" helpurl="flash.display:NativeWindow:restore"/>
                <string name="startMove" object="[flash.display.NativeWindow]" text=".startMove(%%):Boolean" tiptext="Starts a system-controlled move of this window." version="1.0" playername="AIR" helpurl="flash.display:NativeWindow:startMove"/>
                <string name="startResize" object="[flash.display.NativeWindow]" text=".startResize(%[edgeOrCorner:String=BR]%):Boolean" tiptext="Starts a system-controlled resize operation of this window." version="1.0" playername="AIR" helpurl="flash.display:NativeWindow:startResize"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class NativeWindow" helpurl="flash.display:NativeWindow">
                <string name="active" object="[flash.display.NativeWindow]" text=".active" tiptext="Indicates whether this window is the active application window." version="" playername="AIR" helpurl="flash.display:NativeWindow:active:get"/>
                <string name="alwaysInFront" object="[flash.display.NativeWindow]" text=".alwaysInFront" tiptext="Specifies whether this window will always be in front of other windows (including those of other applications)." version="" playername="AIR" helpurl="flash.display:NativeWindow:alwaysInFront:get"/>
                <string name="bounds" object="[flash.display.NativeWindow]" text=".bounds" tiptext="The size and location of this window." version="" playername="AIR" helpurl="flash.display:NativeWindow:bounds:get"/>
                <string name="closed" object="[flash.display.NativeWindow]" text=".closed" tiptext="Indicates whether this window has been closed." version="" playername="AIR" helpurl="flash.display:NativeWindow:closed:get"/>
                <string name="displayState" object="[flash.display.NativeWindow]" text=".displayState" tiptext="The display state of this window." version="" playername="AIR" helpurl="flash.display:NativeWindow:displayState:get"/>
                <string name="height" object="[flash.display.NativeWindow]" text=".height" tiptext="The height of this window in pixels." version="" playername="AIR" helpurl="flash.display:NativeWindow:height:get"/>
                <string name="isSupported" object="[flash.display.NativeWindow]" text=".isSupported" tiptext="Indicates whether native windows are supported on the client system." version="" playername="AIR" helpurl="flash.display:NativeWindow:isSupported:get"/>
                <string name="maxSize" object="[flash.display.NativeWindow]" text=".maxSize" tiptext="The maximum size for this window." version="" playername="AIR" helpurl="flash.display:NativeWindow:maxSize:get"/>
                <string name="maximizable" object="[flash.display.NativeWindow]" text=".maximizable" tiptext="Reports the maximizable setting used to create this window." version="" playername="AIR" helpurl="flash.display:NativeWindow:maximizable:get"/>
                <string name="menu" object="[flash.display.NativeWindow]" text=".menu" tiptext="The native menu for this window." version="" playername="AIR" helpurl="flash.display:NativeWindow:menu:get"/>
                <string name="minSize" object="[flash.display.NativeWindow]" text=".minSize" tiptext="The minimum size for this window." version="" playername="AIR" helpurl="flash.display:NativeWindow:minSize:get"/>
                <string name="minimizable" object="[flash.display.NativeWindow]" text=".minimizable" tiptext="Reports the minimizable setting used to create this window." version="" playername="AIR" helpurl="flash.display:NativeWindow:minimizable:get"/>
                <string name="owner" object="[flash.display.NativeWindow]" text=".owner" tiptext="The NativeWindow object that owns this window." version="" playername="AIR" helpurl="flash.display:NativeWindow:owner:get"/>
                <string name="resizable" object="[flash.display.NativeWindow]" text=".resizable" tiptext="Reports the resizable setting used to create this window." version="" playername="AIR" helpurl="flash.display:NativeWindow:resizable:get"/>
                <string name="stage" object="[flash.display.NativeWindow]" text=".stage" tiptext="The Stage object for this window." version="" playername="AIR" helpurl="flash.display:NativeWindow:stage:get"/>
                <string name="supportsMenu" object="[flash.display.NativeWindow]" text=".supportsMenu" tiptext="Indicates whether AIR supports native window menus on the current computer system." version="" playername="AIR" helpurl="flash.display:NativeWindow:supportsMenu:get"/>
                <string name="supportsNotification" object="[flash.display.NativeWindow]" text=".supportsNotification" tiptext="Indicates whether AIR supports window notification cueing on the current computer system." version="" playername="AIR" helpurl="flash.display:NativeWindow:supportsNotification:get"/>
                <string name="supportsTransparency" object="[flash.display.NativeWindow]" text=".supportsTransparency" tiptext="Indicates whether AIR supports native windows with transparent pixels." version="" playername="AIR" helpurl="flash.display:NativeWindow:supportsTransparency:get"/>
                <string name="systemChrome" object="[flash.display.NativeWindow]" text=".systemChrome" tiptext="Reports the system chrome setting used to create this window." version="" playername="AIR" helpurl="flash.display:NativeWindow:systemChrome:get"/>
                <string name="systemMaxSize" object="[flash.display.NativeWindow]" text=".systemMaxSize" tiptext="The largest window size allowed by the operating system." version="" playername="AIR" helpurl="flash.display:NativeWindow:systemMaxSize:get"/>
                <string name="systemMinSize" object="[flash.display.NativeWindow]" text=".systemMinSize" tiptext="The smallest window size allowed by the operating system." version="" playername="AIR" helpurl="flash.display:NativeWindow:systemMinSize:get"/>
                <string name="title" object="[flash.display.NativeWindow]" text=".title" tiptext="The window title." version="" playername="AIR" helpurl="flash.display:NativeWindow:title:get"/>
                <string name="transparent" object="[flash.display.NativeWindow]" text=".transparent" tiptext="Reports the transparency setting used to create this window." version="" playername="AIR" helpurl="flash.display:NativeWindow:transparent:get"/>
                <string name="type" object="[flash.display.NativeWindow]" text=".type" tiptext="Reports the window type setting used to create this window." version="" playername="AIR" helpurl="flash.display:NativeWindow:type:get"/>
                <string name="visible" object="[flash.display.NativeWindow]" text=".visible" tiptext="" version="" playername="" helpurl="flash.display:NativeWindow:visible:get"/>
                <string name="width" object="[flash.display.NativeWindow]" text=".width" tiptext="The width of this window in pixels." version="" playername="AIR" helpurl="flash.display:NativeWindow:width:get"/>
                <string name="x" object="[flash.display.NativeWindow]" text=".x" tiptext="The horizontal axis coordinate of this window&apos;s top left corner relative to the origin of the operating system desktop." version="" playername="AIR" helpurl="flash.display:NativeWindow:x:get"/>
                <string name="y" object="[flash.display.NativeWindow]" text=".y" tiptext="The vertical axis coordinate of this window&apos;s top left corner relative to the upper left corner of the operating system&apos;s desktop." version="" playername="AIR" helpurl="flash.display:NativeWindow:y:get"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class NativeWindow" helpurl="flash.display:NativeWindow">
                <string name="deactivate" object="[flash.display.NativeWindow]" text=".addEventListener(%type:String=Event.DEACTIVATE{Event.DEACTIVATE,Event.ACTIVATE,Event.CLOSE,Event.CLOSING,NativeWindowDisplayStateEvent.DISPLAY_STATE_CHANGE,NativeWindowDisplayStateEvent.DISPLAY_STATE_CHANGING,NativeWindowBoundsEvent.RESIZE,NativeWindowBoundsEvent.RESIZING,NativeWindowBoundsEvent.MOVE,NativeWindowBoundsEvent.MOVING},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched by this NativeWindow object after the window has been deactivated." version="" playername="AIR" helpurl="flash.display:NativeWindow_flash.events.Event.DEACTIVATE_deactivate"/>
                <string name="activate" object="[flash.display.NativeWindow]" text=".addEventListener(%type:String=Event.ACTIVATE{Event.DEACTIVATE,Event.ACTIVATE,Event.CLOSE,Event.CLOSING,NativeWindowDisplayStateEvent.DISPLAY_STATE_CHANGE,NativeWindowDisplayStateEvent.DISPLAY_STATE_CHANGING,NativeWindowBoundsEvent.RESIZE,NativeWindowBoundsEvent.RESIZING,NativeWindowBoundsEvent.MOVE,NativeWindowBoundsEvent.MOVING},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched by this NativeWindow object after the window has been activated." version="" playername="AIR" helpurl="flash.display:NativeWindow_flash.events.Event.ACTIVATE_activate"/>
                <string name="close" object="[flash.display.NativeWindow]" text=".addEventListener(%type:String=Event.CLOSE{Event.DEACTIVATE,Event.ACTIVATE,Event.CLOSE,Event.CLOSING,NativeWindowDisplayStateEvent.DISPLAY_STATE_CHANGE,NativeWindowDisplayStateEvent.DISPLAY_STATE_CHANGING,NativeWindowBoundsEvent.RESIZE,NativeWindowBoundsEvent.RESIZING,NativeWindowBoundsEvent.MOVE,NativeWindowBoundsEvent.MOVING},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched by this NativeWindow object after the window has been closed." version="" playername="AIR" helpurl="flash.display:NativeWindow_flash.events.Event.CLOSE_close"/>
                <string name="closing" object="[flash.display.NativeWindow]" text=".addEventListener(%type:String=Event.CLOSING{Event.DEACTIVATE,Event.ACTIVATE,Event.CLOSE,Event.CLOSING,NativeWindowDisplayStateEvent.DISPLAY_STATE_CHANGE,NativeWindowDisplayStateEvent.DISPLAY_STATE_CHANGING,NativeWindowBoundsEvent.RESIZE,NativeWindowBoundsEvent.RESIZING,NativeWindowBoundsEvent.MOVE,NativeWindowBoundsEvent.MOVING},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched by this NativeWindow object immediately before the window is to be closed." version="" playername="AIR" helpurl="flash.display:NativeWindow_flash.events.Event.CLOSING_closing"/>
                <string name="displayStateChange" object="[flash.display.NativeWindow]" text=".addEventListener(%type:String=NativeWindowDisplayStateEvent.DISPLAY_STATE_CHANGE{Event.DEACTIVATE,Event.ACTIVATE,Event.CLOSE,Event.CLOSING,NativeWindowDisplayStateEvent.DISPLAY_STATE_CHANGE,NativeWindowDisplayStateEvent.DISPLAY_STATE_CHANGING,NativeWindowBoundsEvent.RESIZE,NativeWindowBoundsEvent.RESIZING,NativeWindowBoundsEvent.MOVE,NativeWindowBoundsEvent.MOVING},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched by this NativeWindow object after the window&apos;s displayState property has changed." version="" playername="AIR" helpurl="flash.display:NativeWindow_flash.events.NativeWindowDisplayStateEvent.DISPLAY_STATE_CHANGE_displayStateChange"/>
                <string name="displayStateChanging" object="[flash.display.NativeWindow]" text=".addEventListener(%type:String=NativeWindowDisplayStateEvent.DISPLAY_STATE_CHANGING{Event.DEACTIVATE,Event.ACTIVATE,Event.CLOSE,Event.CLOSING,NativeWindowDisplayStateEvent.DISPLAY_STATE_CHANGE,NativeWindowDisplayStateEvent.DISPLAY_STATE_CHANGING,NativeWindowBoundsEvent.RESIZE,NativeWindowBoundsEvent.RESIZING,NativeWindowBoundsEvent.MOVE,NativeWindowBoundsEvent.MOVING},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched by this NativeWindow object immediately before the window changes its display state." version="" playername="AIR" helpurl="flash.display:NativeWindow_flash.events.NativeWindowDisplayStateEvent.DISPLAY_STATE_CHANGING_displayStateChanging"/>
                <string name="resize" object="[flash.display.NativeWindow]" text=".addEventListener(%type:String=NativeWindowBoundsEvent.RESIZE{Event.DEACTIVATE,Event.ACTIVATE,Event.CLOSE,Event.CLOSING,NativeWindowDisplayStateEvent.DISPLAY_STATE_CHANGE,NativeWindowDisplayStateEvent.DISPLAY_STATE_CHANGING,NativeWindowBoundsEvent.RESIZE,NativeWindowBoundsEvent.RESIZING,NativeWindowBoundsEvent.MOVE,NativeWindowBoundsEvent.MOVING},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched by this NativeWindow object after the window has been resized." version="" playername="AIR" helpurl="flash.display:NativeWindow_flash.events.NativeWindowBoundsEvent.RESIZE_resize"/>
                <string name="resizing" object="[flash.display.NativeWindow]" text=".addEventListener(%type:String=NativeWindowBoundsEvent.RESIZING{Event.DEACTIVATE,Event.ACTIVATE,Event.CLOSE,Event.CLOSING,NativeWindowDisplayStateEvent.DISPLAY_STATE_CHANGE,NativeWindowDisplayStateEvent.DISPLAY_STATE_CHANGING,NativeWindowBoundsEvent.RESIZE,NativeWindowBoundsEvent.RESIZING,NativeWindowBoundsEvent.MOVE,NativeWindowBoundsEvent.MOVING},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched by this NativeWindow object immediately before the window is to be resized on the desktop." version="" playername="AIR" helpurl="flash.display:NativeWindow_flash.events.NativeWindowBoundsEvent.RESIZING_resizing"/>
                <string name="move" object="[flash.display.NativeWindow]" text=".addEventListener(%type:String=NativeWindowBoundsEvent.MOVE{Event.DEACTIVATE,Event.ACTIVATE,Event.CLOSE,Event.CLOSING,NativeWindowDisplayStateEvent.DISPLAY_STATE_CHANGE,NativeWindowDisplayStateEvent.DISPLAY_STATE_CHANGING,NativeWindowBoundsEvent.RESIZE,NativeWindowBoundsEvent.RESIZING,NativeWindowBoundsEvent.MOVE,NativeWindowBoundsEvent.MOVING},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched by this NativeWindow object after the window has been moved on the desktop." version="" playername="AIR" helpurl="flash.display:NativeWindow_flash.events.NativeWindowBoundsEvent.MOVE_move"/>
                <string name="moving" object="[flash.display.NativeWindow]" text=".addEventListener(%type:String=NativeWindowBoundsEvent.MOVING{Event.DEACTIVATE,Event.ACTIVATE,Event.CLOSE,Event.CLOSING,NativeWindowDisplayStateEvent.DISPLAY_STATE_CHANGE,NativeWindowDisplayStateEvent.DISPLAY_STATE_CHANGING,NativeWindowBoundsEvent.RESIZE,NativeWindowBoundsEvent.RESIZING,NativeWindowBoundsEvent.MOVE,NativeWindowBoundsEvent.MOVING},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched by the NativeWindow object immediately before the window is to be moved on the desktop." version="" playername="AIR" helpurl="flash.display:NativeWindow_flash.events.NativeWindowBoundsEvent.MOVING_moving"/>
            </folder>
        </folder>
        <folder name="NativeWindowDisplayState" id="[flash.display.NativeWindowDisplayState]" sort="true" index="true" asAncestors="Object" tiptext="The NativeWindowDisplayState class defines constants for the names of the window display states." helpurl="flash.display:NativeWindowDisplayState">
            <folder name="Properties" id="Properties" tiptext="Properties for class NativeWindowDisplayState" helpurl="flash.display:NativeWindowDisplayState">
                <string name="MAXIMIZED" object="[flash.display.NativeWindowDisplayState]" text="NativeWindowDisplayState.MAXIMIZED" constant="true" tiptext="The maximized display state." version="" playername="AIR" helpurl="flash.display:NativeWindowDisplayState:MAXIMIZED"/>
                <string name="MINIMIZED" object="[flash.display.NativeWindowDisplayState]" text="NativeWindowDisplayState.MINIMIZED" constant="true" tiptext="The minimized display state." version="" playername="AIR" helpurl="flash.display:NativeWindowDisplayState:MINIMIZED"/>
                <string name="NORMAL" object="[flash.display.NativeWindowDisplayState]" text="NativeWindowDisplayState.NORMAL" constant="true" tiptext="The normal display state." version="" playername="AIR" helpurl="flash.display:NativeWindowDisplayState:NORMAL"/>
            </folder>
        </folder>
        <folder name="NativeWindowInitOptions" id="[flash.display.NativeWindowInitOptions]" sort="true" index="true" asAncestors="Object" tiptext="The NativeWindowInitOptions class defines the initialization options used to construct a new NativeWindow instance." helpurl="flash.display:NativeWindowInitOptions">
            <folder name="Methods" id="Methods" tiptext="Methods for class NativeWindowInitOptions" helpurl="flash.display:NativeWindowInitOptions">
                <string name="NativeWindowInitOptions" object="[flash.display.NativeWindowInitOptions]" text="new NativeWindowInitOptions(%%)" constructor="true" tiptext="Creates a new NativeWindowInitOptions object." version="1.0" playername="AIR" helpurl="flash.display:NativeWindowInitOptions:NativeWindowInitOptions"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class NativeWindowInitOptions" helpurl="flash.display:NativeWindowInitOptions">
                <string name="maximizable" object="[flash.display.NativeWindowInitOptions]" text=".maximizable" tiptext="Specifies whether the window can be maximized by the user." version="" playername="AIR" helpurl="flash.display:NativeWindowInitOptions:maximizable:get"/>
                <string name="minimizable" object="[flash.display.NativeWindowInitOptions]" text=".minimizable" tiptext="Specifies whether the window can be minimized by the user." version="" playername="AIR" helpurl="flash.display:NativeWindowInitOptions:minimizable:get"/>
                <string name="owner" object="[flash.display.NativeWindowInitOptions]" text=".owner" tiptext="Specifies the NativeWindow object that should own any windows created with this NativeWindowIntiOptions." version="" playername="AIR" helpurl="flash.display:NativeWindowInitOptions:owner:get"/>
                <string name="resizable" object="[flash.display.NativeWindowInitOptions]" text=".resizable" tiptext="Specifies whether the window can be resized by the user." version="" playername="AIR" helpurl="flash.display:NativeWindowInitOptions:resizable:get"/>
                <string name="systemChrome" object="[flash.display.NativeWindowInitOptions]" text=".systemChrome" tiptext="Specifies whether system chrome is provided for the window." version="" playername="AIR" helpurl="flash.display:NativeWindowInitOptions:systemChrome:get"/>
                <string name="transparent" object="[flash.display.NativeWindowInitOptions]" text=".transparent" tiptext="Specifies whether the window supports transparency and alpha blending against the desktop." version="" playername="AIR" helpurl="flash.display:NativeWindowInitOptions:transparent:get"/>
                <string name="type" object="[flash.display.NativeWindowInitOptions]" text=".type" tiptext="Specifies the type of the window to be created." version="" playername="AIR" helpurl="flash.display:NativeWindowInitOptions:type:get"/>
            </folder>
        </folder>
        <folder name="NativeWindowResize" id="[flash.display.NativeWindowResize]" sort="true" index="true" asAncestors="Object" tiptext="The NativeWindowResize class defines constants for the possible values of the edgeOrCorner parameter of the NativeWindow startResize() method." helpurl="flash.display:NativeWindowResize">
            <folder name="Properties" id="Properties" tiptext="Properties for class NativeWindowResize" helpurl="flash.display:NativeWindowResize">
                <string name="BOTTOM_LEFT" object="[flash.display.NativeWindowResize]" text="NativeWindowResize.BOTTOM_LEFT" constant="true" tiptext="The bottom-left corner of the window." version="" playername="AIR" helpurl="flash.display:NativeWindowResize:BOTTOM_LEFT"/>
                <string name="BOTTOM_RIGHT" object="[flash.display.NativeWindowResize]" text="NativeWindowResize.BOTTOM_RIGHT" constant="true" tiptext="The bottom-right corner of the window." version="" playername="AIR" helpurl="flash.display:NativeWindowResize:BOTTOM_RIGHT"/>
                <string name="BOTTOM" object="[flash.display.NativeWindowResize]" text="NativeWindowResize.BOTTOM" constant="true" tiptext="The bottom edge of the window." version="" playername="AIR" helpurl="flash.display:NativeWindowResize:BOTTOM"/>
                <string name="LEFT" object="[flash.display.NativeWindowResize]" text="NativeWindowResize.LEFT" constant="true" tiptext="The left edge of the window." version="" playername="AIR" helpurl="flash.display:NativeWindowResize:LEFT"/>
                <string name="NONE" object="[flash.display.NativeWindowResize]" text="NativeWindowResize.NONE" constant="true" tiptext="Used for keyboard resizing on systems (such as Windows) that support keyboard resizing." version="" playername="AIR" helpurl="flash.display:NativeWindowResize:NONE"/>
                <string name="RIGHT" object="[flash.display.NativeWindowResize]" text="NativeWindowResize.RIGHT" constant="true" tiptext="The right edge of the window." version="" playername="AIR" helpurl="flash.display:NativeWindowResize:RIGHT"/>
                <string name="TOP_LEFT" object="[flash.display.NativeWindowResize]" text="NativeWindowResize.TOP_LEFT" constant="true" tiptext="The top-left corner of the window." version="" playername="AIR" helpurl="flash.display:NativeWindowResize:TOP_LEFT"/>
                <string name="TOP_RIGHT" object="[flash.display.NativeWindowResize]" text="NativeWindowResize.TOP_RIGHT" constant="true" tiptext="The top-right corner of the window." version="" playername="AIR" helpurl="flash.display:NativeWindowResize:TOP_RIGHT"/>
                <string name="TOP" object="[flash.display.NativeWindowResize]" text="NativeWindowResize.TOP" constant="true" tiptext="The top edge of the window." version="" playername="AIR" helpurl="flash.display:NativeWindowResize:TOP"/>
            </folder>
        </folder>
        <folder name="NativeWindowSystemChrome" id="[flash.display.NativeWindowSystemChrome]" sort="true" index="true" asAncestors="Object" tiptext="The NativeWindowSystemChrome class defines constants for the systemChrome property of the NativeWindowInitOptions object used to create a native window." helpurl="flash.display:NativeWindowSystemChrome">
            <folder name="Properties" id="Properties" tiptext="Properties for class NativeWindowSystemChrome" helpurl="flash.display:NativeWindowSystemChrome">
                <string name="ALTERNATE" object="[flash.display.NativeWindowSystemChrome]" text="NativeWindowSystemChrome.ALTERNATE" constant="true" tiptext="Reserved for future use." version="" playername="AIR" helpurl="flash.display:NativeWindowSystemChrome:ALTERNATE"/>
                <string name="NONE" object="[flash.display.NativeWindowSystemChrome]" text="NativeWindowSystemChrome.NONE" constant="true" tiptext="No system chrome." version="" playername="AIR" helpurl="flash.display:NativeWindowSystemChrome:NONE"/>
                <string name="STANDARD" object="[flash.display.NativeWindowSystemChrome]" text="NativeWindowSystemChrome.STANDARD" constant="true" tiptext="The standard chrome for the host operating system." version="" playername="AIR" helpurl="flash.display:NativeWindowSystemChrome:STANDARD"/>
            </folder>
        </folder>
        <folder name="NativeWindowType" id="[flash.display.NativeWindowType]" sort="true" index="true" asAncestors="Object" tiptext="The NativeWindowType class defines constants for the type property of the NativeWindowInitOptions object used to create a native window." helpurl="flash.display:NativeWindowType">
            <folder name="Properties" id="Properties" tiptext="Properties for class NativeWindowType" helpurl="flash.display:NativeWindowType">
                <string name="LIGHTWEIGHT" object="[flash.display.NativeWindowType]" text="NativeWindowType.LIGHTWEIGHT" constant="true" tiptext="A minimal window." version="" playername="AIR" helpurl="flash.display:NativeWindowType:LIGHTWEIGHT"/>
                <string name="NORMAL" object="[flash.display.NativeWindowType]" text="NativeWindowType.NORMAL" constant="true" tiptext="A typical window." version="" playername="AIR" helpurl="flash.display:NativeWindowType:NORMAL"/>
                <string name="UTILITY" object="[flash.display.NativeWindowType]" text="NativeWindowType.UTILITY" constant="true" tiptext="A utility window." version="" playername="AIR" helpurl="flash.display:NativeWindowType:UTILITY"/>
            </folder>
        </folder>
        <folder name="PixelSnapping" id="[flash.display.PixelSnapping]" sort="true" index="true" asAncestors="Object" tiptext="The PixelSnapping class is an enumeration of constant values for setting the pixel snapping options by using the pixelSnapping property of a Bitmap object." helpurl="flash.display:PixelSnapping">
            <folder name="Properties" id="Properties" tiptext="Properties for class PixelSnapping" helpurl="flash.display:PixelSnapping">
                <string name="ALWAYS" object="[flash.display.PixelSnapping]" text="PixelSnapping.ALWAYS" constant="true" tiptext="A constant value used in the pixelSnapping property of a Bitmap object to specify that the bitmap image is always snapped to the nearest pixel, independent of any transformation." version="" playername="" helpurl="flash.display:PixelSnapping:ALWAYS"/>
                <string name="AUTO" object="[flash.display.PixelSnapping]" text="PixelSnapping.AUTO" constant="true" tiptext="A constant value used in the pixelSnapping property of a Bitmap object to specify that the bitmap image is snapped to the nearest pixel if it is drawn with no rotationor skew and it is drawn at a scale factor of 99.9% to 100.1%." version="" playername="" helpurl="flash.display:PixelSnapping:AUTO"/>
                <string name="NEVER" object="[flash.display.PixelSnapping]" text="PixelSnapping.NEVER" constant="true" tiptext="A constant value used in the pixelSnapping property of a Bitmap object to specify that no pixel snapping occurs." version="" playername="" helpurl="flash.display:PixelSnapping:NEVER"/>
            </folder>
        </folder>
        <folder name="Scene" id="[flash.display.Scene]" sort="true" index="true" asAncestors="Object" tiptext="The Scene class includes properties for identifying the name, labels, and number of frames in a scene." helpurl="flash.display:Scene">
            <folder name="Properties" id="Properties" tiptext="Properties for class Scene" helpurl="flash.display:Scene">
                <string name="labels" object="[flash.display.Scene]" text=".labels" tiptext="An array of FrameLabel objects for the scene." version="" playername="" helpurl="flash.display:Scene:labels:get"/>
                <string name="name" object="[flash.display.Scene]" text=".name" tiptext="The name of the scene." version="" playername="" helpurl="flash.display:Scene:name:get"/>
                <string name="numFrames" object="[flash.display.Scene]" text=".numFrames" tiptext="The number of frames in the scene." version="" playername="" helpurl="flash.display:Scene:numFrames:get"/>
            </folder>
        </folder>
        <folder name="Screen" id="[flash.display.Screen]" sort="true" index="true" asAncestors="flash.events:EventDispatcher,Object" tiptext="The Screen class provides information about the display screens available to this application." helpurl="flash.display:Screen">
            <folder name="Methods" id="Methods" tiptext="Methods for class Screen" helpurl="flash.display:Screen">
                <string name="getScreensForRectangle" object="[flash.display.Screen]" text="Screen.getScreensForRectangle(%rect:flash.geom:Rectangle%):Array" static="true" tiptext="Returns the (possibly empty) set of screens that intersect the provided rectangle." version="1.0" playername="AIR" helpurl="flash.display:Screen:getScreensForRectangle"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class Screen" helpurl="flash.display:Screen">
                <string name="bounds" object="[flash.display.Screen]" text=".bounds" tiptext="The bounds of this screen." version="" playername="AIR" helpurl="flash.display:Screen:bounds:get"/>
                <string name="colorDepth" object="[flash.display.Screen]" text=".colorDepth" tiptext="The color depth of this screen (expressed in number of bits)." version="" playername="AIR" helpurl="flash.display:Screen:colorDepth:get"/>
                <string name="mainScreen" object="[flash.display.Screen]" text=".mainScreen" tiptext="The primary display." version="" playername="AIR" helpurl="flash.display:Screen:mainScreen:get"/>
                <string name="screens" object="[flash.display.Screen]" text=".screens" tiptext="The array of the currently available screens." version="" playername="AIR" helpurl="flash.display:Screen:screens:get"/>
                <string name="visibleBounds" object="[flash.display.Screen]" text=".visibleBounds" tiptext="The bounds of the area on this screen in which windows can be visible." version="" playername="AIR" helpurl="flash.display:Screen:visibleBounds:get"/>
            </folder>
        </folder>
        <folder name="Shader" id="[flash.display.Shader]" sort="true" index="true" asAncestors="Object" tiptext="A Shader instance represents a Pixel Bender shader kernel in ActionScript." helpurl="flash.display:Shader">
            <folder name="Methods" id="Methods" tiptext="Methods for class Shader" helpurl="flash.display:Shader">
                <string name="Shader" object="[flash.display.Shader]" text="new Shader(%[code:flash.utils:ByteArray=null]%)" constructor="true" tiptext="Creates a new Shader instance." version="1.5" playername="" helpurl="flash.display:Shader:Shader"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class Shader" helpurl="flash.display:Shader">
                <string name="data" object="[flash.display.Shader]" text=".data" tiptext="Provides access to parameters, input images, and metadata for the Shader instance." version="" playername="" helpurl="flash.display:Shader:data:get"/>
                <string name="precisionHint" object="[flash.display.Shader]" text=".precisionHint" tiptext="The precision of math operations performed by the shader." version="" playername="" helpurl="flash.display:Shader:precisionHint:get"/>
                <string name="byteCode" object="[flash.display.Shader]" text=".byteCode" tiptext="The raw shader bytecode for this Shader instance." version="" playername="" helpurl="flash.display:Shader:byteCode:set"/>
            </folder>
        </folder>
        <folder name="ShaderData" id="[flash.display.ShaderData]" sort="true" index="true" asAncestors="Object" tiptext="A ShaderData object contains properties representing any parameters and inputs for a shader kernel, as well as properties containing any metadata specified for the shader." helpurl="flash.display:ShaderData">
            <folder name="Methods" id="Methods" tiptext="Methods for class ShaderData" helpurl="flash.display:ShaderData">
                <string name="ShaderData" object="[flash.display.ShaderData]" text="new ShaderData(%byteCode:flash.utils:ByteArray%)" constructor="true" tiptext="Creates a ShaderData instance." version="1.5" playername="" helpurl="flash.display:ShaderData:ShaderData"/>
            </folder>
        </folder>
        <folder name="ShaderInput" id="[flash.display.ShaderInput]" sort="true" index="true" asAncestors="Object" tiptext="A ShaderInput instance represents a single input image for a shader kernel." helpurl="flash.display:ShaderInput">
            <folder name="Methods" id="Methods" tiptext="Methods for class ShaderInput" helpurl="flash.display:ShaderInput">
                <string name="ShaderInput" object="[flash.display.ShaderInput]" text="new ShaderInput(%%)" constructor="true" tiptext="Creates a ShaderInput instance." version="1.5" playername="" helpurl="flash.display:ShaderInput:ShaderInput"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class ShaderInput" helpurl="flash.display:ShaderInput">
                <string name="channels" object="[flash.display.ShaderInput]" text=".channels" tiptext="The number of channels that a shader input expects." version="" playername="" helpurl="flash.display:ShaderInput:channels:get"/>
                <string name="height" object="[flash.display.ShaderInput]" text=".height" tiptext="The height of the shader input." version="" playername="" helpurl="flash.display:ShaderInput:height:get"/>
                <string name="index" object="[flash.display.ShaderInput]" text=".index" tiptext="The zero-based index of the input in the shader, indicating the order of the input definitions in the shader." version="" playername="" helpurl="flash.display:ShaderInput:index:get"/>
                <string name="input" object="[flash.display.ShaderInput]" text=".input" tiptext="The input data that is used when the shader executes." version="" playername="" helpurl="flash.display:ShaderInput:input:get"/>
                <string name="width" object="[flash.display.ShaderInput]" text=".width" tiptext="The width of the shader input." version="" playername="" helpurl="flash.display:ShaderInput:width:get"/>
            </folder>
        </folder>
        <folder name="ShaderJob" id="[flash.display.ShaderJob]" sort="true" index="true" asAncestors="flash.events:EventDispatcher,Object" tiptext="A ShaderJob instance is used to execute a shader operation in stand-alone mode." helpurl="flash.display:ShaderJob">
            <folder name="Methods" id="Methods" tiptext="Methods for class ShaderJob" helpurl="flash.display:ShaderJob">
                <string name="ShaderJob" object="[flash.display.ShaderJob]" text="new ShaderJob(%[shader:flash.display:Shader=null,target:Object=null,width:int=0,height:int=0]%)" constructor="true" tiptext="A ShaderJob instance is used to execute a shader operation in stand-alone mode." version="1.5" playername="" helpurl="flash.display:ShaderJob:ShaderJob"/>
                <string name="cancel" object="[flash.display.ShaderJob]" text=".cancel(%%):void" tiptext="Cancels the currently running shader operation." version="1.5" playername="" helpurl="flash.display:ShaderJob:cancel"/>
                <string name="start" object="[flash.display.ShaderJob]" text=".start(%[waitForCompletion:Boolean=false]%):void" tiptext="Starts a shader operation in synchronous or asynchronous mode, according to the value of the waitForCompletion parameter." version="1.5" playername="" helpurl="flash.display:ShaderJob:start"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class ShaderJob" helpurl="flash.display:ShaderJob">
                <string name="height" object="[flash.display.ShaderJob]" text=".height" tiptext="The height of the result data in the target if it is a ByteArray or Vector.&amp;lt;Number&amp;gt; instance." version="" playername="" helpurl="flash.display:ShaderJob:height:get"/>
                <string name="progress" object="[flash.display.ShaderJob]" text=".progress" tiptext="The progress of a running shader." version="" playername="" helpurl="flash.display:ShaderJob:progress:get"/>
                <string name="shader" object="[flash.display.ShaderJob]" text=".shader" tiptext="The shader that&apos;s used for the operation." version="" playername="" helpurl="flash.display:ShaderJob:shader:get"/>
                <string name="target" object="[flash.display.ShaderJob]" text=".target" tiptext="The object into which the result of the shader operation is written." version="" playername="" helpurl="flash.display:ShaderJob:target:get"/>
                <string name="width" object="[flash.display.ShaderJob]" text=".width" tiptext="The width of the result data in the target if it is a ByteArray or Vector.&amp;lt;Number&amp;gt; instance." version="" playername="" helpurl="flash.display:ShaderJob:width:get"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class ShaderJob" helpurl="flash.display:ShaderJob">
                <string name="complete" object="[flash.display.ShaderJob]" text=".addEventListener(%type:String=ShaderEvent.COMPLETE{ShaderEvent.COMPLETE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a ShaderJob that executes asynchronously finishes processing the data using the shader." version="" playername="" helpurl="flash.display:ShaderJob_flash.events.ShaderEvent.COMPLETE_complete"/>
            </folder>
        </folder>
        <folder name="ShaderParameter" id="[flash.display.ShaderParameter]" sort="true" index="true" asAncestors="Object" tiptext="A ShaderParameter instance represents a single input parameter of a shader kernel." helpurl="flash.display:ShaderParameter">
            <folder name="Methods" id="Methods" tiptext="Methods for class ShaderParameter" helpurl="flash.display:ShaderParameter">
                <string name="ShaderParameter" object="[flash.display.ShaderParameter]" text="new ShaderParameter(%%)" constructor="true" tiptext="Creates a ShaderParameter instance." version="1.5" playername="" helpurl="flash.display:ShaderParameter:ShaderParameter"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class ShaderParameter" helpurl="flash.display:ShaderParameter">
                <string name="index" object="[flash.display.ShaderParameter]" text=".index" tiptext="The zero-based index of the parameter." version="" playername="" helpurl="flash.display:ShaderParameter:index:get"/>
                <string name="type" object="[flash.display.ShaderParameter]" text=".type" tiptext="The data type of the parameter as defined in the shader." version="" playername="" helpurl="flash.display:ShaderParameter:type:get"/>
                <string name="value" object="[flash.display.ShaderParameter]" text=".value" tiptext="The value or values that are passed in as the parameter value to the shader." version="" playername="" helpurl="flash.display:ShaderParameter:value:get"/>
            </folder>
        </folder>
        <folder name="ShaderParameterType" id="[flash.display.ShaderParameterType]" sort="true" index="true" asAncestors="Object" tiptext="This class defines the constants that represent the possible values for the ShaderParameter class&apos;s type property." helpurl="flash.display:ShaderParameterType">
            <folder name="Properties" id="Properties" tiptext="Properties for class ShaderParameterType" helpurl="flash.display:ShaderParameterType">
                <string name="BOOL2" object="[flash.display.ShaderParameterType]" text="ShaderParameterType.BOOL2" constant="true" tiptext="Indicates that the shader parameter is defined as a bool2 value, equivalent to an Array of two Boolean instances in ActionScript." version="" playername="" helpurl="flash.display:ShaderParameterType:BOOL2"/>
                <string name="BOOL3" object="[flash.display.ShaderParameterType]" text="ShaderParameterType.BOOL3" constant="true" tiptext="Indicates that the shader parameter is defined as a bool3 value, equivalent to an Array of three Boolean instances in ActionScript." version="" playername="" helpurl="flash.display:ShaderParameterType:BOOL3"/>
                <string name="BOOL4" object="[flash.display.ShaderParameterType]" text="ShaderParameterType.BOOL4" constant="true" tiptext="Indicates that the shader parameter is defined as a bool4 value, equivalent to an Array of four Boolean instances in ActionScript." version="" playername="" helpurl="flash.display:ShaderParameterType:BOOL4"/>
                <string name="BOOL" object="[flash.display.ShaderParameterType]" text="ShaderParameterType.BOOL" constant="true" tiptext="Indicates that the shader parameter is defined as a bool value, equivalent to a single Boolean instance in ActionScript." version="" playername="" helpurl="flash.display:ShaderParameterType:BOOL"/>
                <string name="FLOAT2" object="[flash.display.ShaderParameterType]" text="ShaderParameterType.FLOAT2" constant="true" tiptext="Indicates that the shader parameter is defined as a float2 value, equivalent to an Array of two Number instances in ActionScript." version="" playername="" helpurl="flash.display:ShaderParameterType:FLOAT2"/>
                <string name="FLOAT3" object="[flash.display.ShaderParameterType]" text="ShaderParameterType.FLOAT3" constant="true" tiptext="Indicates that the shader parameter is defined as a float3 value, equivalent to an Array of three Number instances in ActionScript." version="" playername="" helpurl="flash.display:ShaderParameterType:FLOAT3"/>
                <string name="FLOAT4" object="[flash.display.ShaderParameterType]" text="ShaderParameterType.FLOAT4" constant="true" tiptext="Indicates that the shader parameter is defined as a float4 value, equivalent to an Array of four Number instances in ActionScript." version="" playername="" helpurl="flash.display:ShaderParameterType:FLOAT4"/>
                <string name="FLOAT" object="[flash.display.ShaderParameterType]" text="ShaderParameterType.FLOAT" constant="true" tiptext="Indicates that the shader parameter is defined as a float value, equivalent to a single Number instance in ActionScript." version="" playername="" helpurl="flash.display:ShaderParameterType:FLOAT"/>
                <string name="INT2" object="[flash.display.ShaderParameterType]" text="ShaderParameterType.INT2" constant="true" tiptext="Indicates that the shader parameter is defined as an int2 value, equivalent to an Array of two int or uint instances in ActionScript." version="" playername="" helpurl="flash.display:ShaderParameterType:INT2"/>
                <string name="INT3" object="[flash.display.ShaderParameterType]" text="ShaderParameterType.INT3" constant="true" tiptext="Indicates that the shader parameter is defined as an int3 value, equivalent to an Array of three int or uint instances in ActionScript." version="" playername="" helpurl="flash.display:ShaderParameterType:INT3"/>
                <string name="INT4" object="[flash.display.ShaderParameterType]" text="ShaderParameterType.INT4" constant="true" tiptext="Indicates that the shader parameter is defined as an int4 value, equivalent to an Array of four int or uint instances in ActionScript." version="" playername="" helpurl="flash.display:ShaderParameterType:INT4"/>
                <string name="INT" object="[flash.display.ShaderParameterType]" text="ShaderParameterType.INT" constant="true" tiptext="Indicates that the shader parameter is defined as an int value, equivalent to a single int or uint instance in ActionScript." version="" playername="" helpurl="flash.display:ShaderParameterType:INT"/>
                <string name="MATRIX2X2" object="[flash.display.ShaderParameterType]" text="ShaderParameterType.MATRIX2X2" constant="true" tiptext="Indicates that the shader parameter is defined as a float2x2 value, equivalent to a 2-by-2 matrix." version="" playername="" helpurl="flash.display:ShaderParameterType:MATRIX2X2"/>
                <string name="MATRIX3X3" object="[flash.display.ShaderParameterType]" text="ShaderParameterType.MATRIX3X3" constant="true" tiptext="Indicates that the shader parameter is defined as a float3x3 value, equivalent to a 3-by-3 matrix." version="" playername="" helpurl="flash.display:ShaderParameterType:MATRIX3X3"/>
                <string name="MATRIX4X4" object="[flash.display.ShaderParameterType]" text="ShaderParameterType.MATRIX4X4" constant="true" tiptext="Indicates that the shader parameter is defined as a float4x4 value, equivalent to a 4-by-4 matrix." version="" playername="" helpurl="flash.display:ShaderParameterType:MATRIX4X4"/>
            </folder>
        </folder>
        <folder name="ShaderPrecision" id="[flash.display.ShaderPrecision]" sort="true" index="true" asAncestors="Object" tiptext="This class defines the constants that represent the possible values for the Shader class&apos;s precisionHint property." helpurl="flash.display:ShaderPrecision">
            <folder name="Properties" id="Properties" tiptext="Properties for class ShaderPrecision" helpurl="flash.display:ShaderPrecision">
                <string name="FAST" object="[flash.display.ShaderPrecision]" text="ShaderPrecision.FAST" constant="true" tiptext="Represents fast precision mode." version="" playername="" helpurl="flash.display:ShaderPrecision:FAST"/>
                <string name="FULL" object="[flash.display.ShaderPrecision]" text="ShaderPrecision.FULL" constant="true" tiptext="Represents full precision mode." version="" playername="" helpurl="flash.display:ShaderPrecision:FULL"/>
            </folder>
        </folder>
        <folder name="Shape" id="[flash.display.Shape]" sort="true" index="true" asAncestors="flash.display:DisplayObject,flash.events:EventDispatcher,Object" tiptext="This class is used to create lightweight shapes using the ActionScript drawing application program interface (API)." helpurl="flash.display:Shape">
            <folder name="Methods" id="Methods" tiptext="Methods for class Shape" helpurl="flash.display:Shape">
                <string name="Shape" object="[flash.display.Shape]" text="new Shape(%%)" constructor="true" tiptext="Creates a new Shape object." version="4" playername="" helpurl="flash.display:Shape:Shape"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class Shape" helpurl="flash.display:Shape">
                <string name="graphics" object="[flash.display.Shape]" text=".graphics" tiptext="Specifies the Graphics object belonging to this Shape object, where vector drawing commands can occur." version="" playername="" helpurl="flash.display:Shape:graphics:get"/>
            </folder>
        </folder>
        <folder name="SimpleButton" id="[flash.display.SimpleButton]" sort="true" index="true" asAncestors="flash.display:InteractiveObject,flash.display:DisplayObject,flash.events:EventDispatcher,Object" tiptext="The SimpleButton class lets you control all instances of button symbols in a SWF file." helpurl="flash.display:SimpleButton">
            <folder name="Methods" id="Methods" tiptext="Methods for class SimpleButton" helpurl="flash.display:SimpleButton">
                <string name="SimpleButton" object="[flash.display.SimpleButton]" text="new SimpleButton(%[upState:flash.display:DisplayObject=null,overState:flash.display:DisplayObject=null,downState:flash.display:DisplayObject=null,hitTestState:flash.display:DisplayObject=null]%)" constructor="true" tiptext="Creates a new SimpleButton instance." version="4" playername="" helpurl="flash.display:SimpleButton:SimpleButton"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class SimpleButton" helpurl="flash.display:SimpleButton">
                <string name="downState" object="[flash.display.SimpleButton]" text=".downState" tiptext="Specifies a display object that is used as the visual object for the button &quot;Down&quot; state &amp;#8212;the state that the button is in when the user selects the hitTestState object." version="" playername="" helpurl="flash.display:SimpleButton:downState:get"/>
                <string name="enabled" object="[flash.display.SimpleButton]" text=".enabled" tiptext="A Boolean value that specifies whether a button is enabled." version="" playername="" helpurl="flash.display:SimpleButton:enabled:get"/>
                <string name="hitTestState" object="[flash.display.SimpleButton]" text=".hitTestState" tiptext="Specifies a display object that is used as the hit testing object for the button." version="" playername="" helpurl="flash.display:SimpleButton:hitTestState:get"/>
                <string name="overState" object="[flash.display.SimpleButton]" text=".overState" tiptext="Specifies a display object that is used as the visual object for the button over state &amp;#8212; the state that the button is in when the pointer is positioned over the button." version="" playername="" helpurl="flash.display:SimpleButton:overState:get"/>
                <string name="soundTransform" object="[flash.display.SimpleButton]" text=".soundTransform" tiptext="The SoundTransform object assigned to this button." version="" playername="" helpurl="flash.display:SimpleButton:soundTransform:get"/>
                <string name="trackAsMenu" object="[flash.display.SimpleButton]" text=".trackAsMenu" tiptext="Indicates whether other display objects that are SimpleButton or MovieClip objects can receive user input release events." version="" playername="" helpurl="flash.display:SimpleButton:trackAsMenu:get"/>
                <string name="upState" object="[flash.display.SimpleButton]" text=".upState" tiptext="Specifies a display object that is used as the visual object for the button up state &amp;#8212; the state that the button is in when the pointer is not positioned over the button." version="" playername="" helpurl="flash.display:SimpleButton:upState:get"/>
                <string name="useHandCursor" object="[flash.display.SimpleButton]" text=".useHandCursor" tiptext="A Boolean value that, when set to true, indicates whether the hand cursor is shown when the pointer rolls over a button." version="" playername="" helpurl="flash.display:SimpleButton:useHandCursor:get"/>
            </folder>
        </folder>
        <folder name="SpreadMethod" id="[flash.display.SpreadMethod]" sort="true" index="true" asAncestors="Object" tiptext="The SpreadMethod class provides values for the spreadMethod parameter in the beginGradientFill() and lineGradientStyle() methods of the Graphics class." helpurl="flash.display:SpreadMethod">
            <folder name="Properties" id="Properties" tiptext="Properties for class SpreadMethod" helpurl="flash.display:SpreadMethod">
                <string name="PAD" object="[flash.display.SpreadMethod]" text="SpreadMethod.PAD" constant="true" tiptext="Specifies that the gradient use the pad spread method." version="" playername="" helpurl="flash.display:SpreadMethod:PAD"/>
                <string name="REFLECT" object="[flash.display.SpreadMethod]" text="SpreadMethod.REFLECT" constant="true" tiptext="Specifies that the gradient use the reflect spread method." version="" playername="" helpurl="flash.display:SpreadMethod:REFLECT"/>
                <string name="REPEAT" object="[flash.display.SpreadMethod]" text="SpreadMethod.REPEAT" constant="true" tiptext="Specifies that the gradient use the repeat spread method." version="" playername="" helpurl="flash.display:SpreadMethod:REPEAT"/>
            </folder>
        </folder>
        <folder name="Sprite" id="[flash.display.Sprite]" sort="true" index="true" asAncestors="flash.display:DisplayObjectContainer,flash.display:InteractiveObject,flash.display:DisplayObject,flash.events:EventDispatcher,Object" tiptext="The Sprite class is a basic display list building block: a display list node that can display graphics and can also contain children." helpurl="flash.display:Sprite">
            <folder name="Methods" id="Methods" tiptext="Methods for class Sprite" helpurl="flash.display:Sprite">
                <string name="Sprite" object="[flash.display.Sprite]" text="new Sprite(%%)" constructor="true" tiptext="Creates a new Sprite instance." version="4" playername="" helpurl="flash.display:Sprite:Sprite"/>
                <string name="startDrag" object="[flash.display.Sprite]" text=".startDrag(%[lockCenter:Boolean=false,bounds:flash.geom:Rectangle=null]%):void" tiptext="Lets the user drag the specified sprite." version="4" playername="" helpurl="flash.display:Sprite:startDrag"/>
                <string name="startTouchDrag" object="[flash.display.Sprite]" text=".startTouchDrag(%touchPointID:int[,lockCenter:Boolean=false,bounds:flash.geom:Rectangle=null]%):void" tiptext="Lets the user drag the specified sprite on a touch-enabled device." version="4" playername="" helpurl="flash.display:Sprite:startTouchDrag"/>
                <string name="stopDrag" object="[flash.display.Sprite]" text=".stopDrag(%%):void" tiptext="Ends the startDrag() method." version="4" playername="" helpurl="flash.display:Sprite:stopDrag"/>
                <string name="stopTouchDrag" object="[flash.display.Sprite]" text=".stopTouchDrag(%touchPointID:int%):void" tiptext="Ends the startTouchDrag() method, for use with touch-enabled devices." version="4" playername="" helpurl="flash.display:Sprite:stopTouchDrag"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class Sprite" helpurl="flash.display:Sprite">
                <string name="buttonMode" object="[flash.display.Sprite]" text=".buttonMode" tiptext="Specifies the button mode of this sprite." version="" playername="" helpurl="flash.display:Sprite:buttonMode:get"/>
                <string name="dropTarget" object="[flash.display.Sprite]" text=".dropTarget" tiptext="Specifies the display object over which the sprite is being dragged, or on which the sprite was dropped." version="" playername="" helpurl="flash.display:Sprite:dropTarget:get"/>
                <string name="graphics" object="[flash.display.Sprite]" text=".graphics" tiptext="Specifies the Graphics object that belongs to this sprite where vector drawing commands can occur." version="" playername="" helpurl="flash.display:Sprite:graphics:get"/>
                <string name="hitArea" object="[flash.display.Sprite]" text=".hitArea" tiptext="Designates another sprite to serve as the hit area for a sprite." version="" playername="" helpurl="flash.display:Sprite:hitArea:get"/>
                <string name="soundTransform" object="[flash.display.Sprite]" text=".soundTransform" tiptext="Controls sound within this sprite." version="" playername="" helpurl="flash.display:Sprite:soundTransform:get"/>
                <string name="useHandCursor" object="[flash.display.Sprite]" text=".useHandCursor" tiptext="A Boolean value that indicates whether the pointing hand (hand cursor) appears when the pointer rolls over a sprite in which the buttonMode property is set to true." version="" playername="" helpurl="flash.display:Sprite:useHandCursor:get"/>
            </folder>
        </folder>
        <folder name="Stage" id="[flash.display.Stage]" sort="true" index="true" asAncestors="flash.display:DisplayObjectContainer,flash.display:InteractiveObject,flash.display:DisplayObject,flash.events:EventDispatcher,Object" tiptext="The Stage class represents the main drawing area." helpurl="flash.display:Stage">
            <folder name="Methods" id="Methods" tiptext="Methods for class Stage" helpurl="flash.display:Stage">
                <string name="addChildAt" object="[flash.display.Stage]" text=".addChildAt(%child:flash.display:DisplayObject,index:int%):flash.display:DisplayObject" tiptext="Adds a child DisplayObject instance to this DisplayObjectContainer instance." version="4" playername="" helpurl="flash.display:Stage:addChildAt"/>
                <string name="addChild" object="[flash.display.Stage]" text=".addChild(%child:flash.display:DisplayObject%):flash.display:DisplayObject" tiptext="Adds a child DisplayObject instance to this DisplayObjectContainer instance." version="4" playername="" helpurl="flash.display:Stage:addChild"/>
                <string name="addEventListener" object="[flash.display.Stage]" text=".addEventListener(%type:String,listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Registers an event listener object with an EventDispatcher object so that the listener receives notification of an event." version="4" playername="" helpurl="flash.display:Stage:addEventListener"/>
                <string name="assignFocus" object="[flash.display.Stage]" text=".assignFocus(%objectToFocus:flash.display:InteractiveObject,direction:String%):void" tiptext="Assigns keyboard focus to an interactive object and specifies the direction focus is coming from." version="1.0" playername="AIR" helpurl="flash.display:Stage:assignFocus"/>
                <string name="dispatchEvent" object="[flash.display.Stage]" text=".dispatchEvent(%event:flash.events:Event%):Boolean" tiptext="Dispatches an event into the event flow." version="4" playername="" helpurl="flash.display:Stage:dispatchEvent"/>
                <string name="getChildAt" object="[flash.display.Stage]" text=".getChildAt(%index:int%):flash.display:DisplayObject" tiptext="" version="" playername="" helpurl="flash.display:Stage:getChildAt"/>
                <string name="hasEventListener" object="[flash.display.Stage]" text=".hasEventListener(%type:String%):Boolean" tiptext="Checks whether the EventDispatcher object has any listeners registered for a specific type of event." version="4" playername="" helpurl="flash.display:Stage:hasEventListener"/>
                <string name="invalidate" object="[flash.display.Stage]" text=".invalidate(%%):void" tiptext="Signals Flash runtimes to update properties of display objects on the next opportunity it has to refresh the Stage." version="4" playername="" helpurl="flash.display:Stage:invalidate"/>
                <string name="isFocusInaccessible" object="[flash.display.Stage]" text=".isFocusInaccessible(%%):Boolean" tiptext="Determines whether the Stage.focus property would return null for security reasons." version="4" playername="" helpurl="flash.display:Stage:isFocusInaccessible"/>
                <string name="removeChildAt" object="[flash.display.Stage]" text=".removeChildAt(%index:int%):flash.display:DisplayObject" tiptext="Removes a child DisplayObject from the specified index position in the child list of the DisplayObjectContainer." version="4" playername="" helpurl="flash.display:Stage:removeChildAt"/>
                <string name="removeChild" object="[flash.display.Stage]" text=".removeChild(%child:flash.display:DisplayObject%):flash.display:DisplayObject" tiptext="" version="" playername="" helpurl="flash.display:Stage:removeChild"/>
                <string name="setAspectRatio" object="[flash.display.Stage]" text=".setAspectRatio(%newAspectRatio:String%):void" tiptext="Sets the stage to an orientation with the specified aspect ratio." version="2" playername="AIR" helpurl="flash.display:Stage:setAspectRatio"/>
                <string name="setChildIndex" object="[flash.display.Stage]" text=".setChildIndex(%child:flash.display:DisplayObject,index:int%):void" tiptext="Changes the position of an existing child in the display object container." version="4" playername="" helpurl="flash.display:Stage:setChildIndex"/>
                <string name="setOrientation" object="[flash.display.Stage]" text=".setOrientation(%newOrientation:String%):void" tiptext="Sets the stage to the specified orientation." version="2" playername="AIR" helpurl="flash.display:Stage:setOrientation"/>
                <string name="swapChildrenAt" object="[flash.display.Stage]" text=".swapChildrenAt(%index1:int,index2:int%):void" tiptext="" version="" playername="" helpurl="flash.display:Stage:swapChildrenAt"/>
                <string name="swapChildren" object="[flash.display.Stage]" text=".swapChildren(%child1:flash.display:DisplayObject,child2:flash.display:DisplayObject%):void" tiptext="Swaps the z-order (front-to-back order) of the two specified child objects." version="4" playername="" helpurl="flash.display:Stage:swapChildren"/>
                <string name="willTrigger" object="[flash.display.Stage]" text=".willTrigger(%type:String%):Boolean" tiptext="Checks whether an event listener is registered with this EventDispatcher object or any of its ancestors for the specified event type." version="9" playername="" helpurl="flash.display:Stage:willTrigger"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class Stage" helpurl="flash.display:Stage">
                <string name="align" object="[flash.display.Stage]" text=".align" tiptext="A value from the StageAlign class that specifies the alignment of the stage in Flash Player or the browser." version="" playername="" helpurl="flash.display:Stage:align:get"/>
                <string name="allowsFullScreen" object="[flash.display.Stage]" text=".allowsFullScreen" tiptext="Specifies whether this stage allows the use of the full screen mode" version="" playername="" helpurl="flash.display:Stage:allowsFullScreen:get"/>
                <string name="autoOrients" object="[flash.display.Stage]" text=".autoOrients" tiptext="Specifies whether the stage automatically changes orientation when the computing device is physically rotated." version="" playername="AIR" helpurl="flash.display:Stage:autoOrients:get"/>
                <string name="colorCorrectionSupport" object="[flash.display.Stage]" text=".colorCorrectionSupport" tiptext="Specifies whether the Flash runtime is running on an operating system that supports color correction and whether the color profile of the main (primary) monitor can be read and understood by the Flash runtime." version="" playername="" helpurl="flash.display:Stage:colorCorrectionSupport:get"/>
                <string name="colorCorrection" object="[flash.display.Stage]" text=".colorCorrection" tiptext="Controls Flash runtime color correction for displays." version="" playername="" helpurl="flash.display:Stage:colorCorrection:get"/>
                <string name="deviceOrientation" object="[flash.display.Stage]" text=".deviceOrientation" tiptext="The physical orientation of the device." version="" playername="AIR" helpurl="flash.display:Stage:deviceOrientation:get"/>
                <string name="displayState" object="[flash.display.Stage]" text=".displayState" tiptext="A value from the StageDisplayState class that specifies which display state to use." version="" playername="" helpurl="flash.display:Stage:displayState:get"/>
                <string name="focus" object="[flash.display.Stage]" text=".focus" tiptext="The interactive object with keyboard focus; or null if focus is not set or if the focused object belongs to a security sandbox to which the calling object does not have access." version="" playername="" helpurl="flash.display:Stage:focus:get"/>
                <string name="frameRate" object="[flash.display.Stage]" text=".frameRate" tiptext="Gets and sets the frame rate of the stage." version="" playername="" helpurl="flash.display:Stage:frameRate:get"/>
                <string name="fullScreenHeight" object="[flash.display.Stage]" text=".fullScreenHeight" tiptext="Returns the height of the monitor that will be used when going to full screen size, if that state is entered immediately." version="" playername="" helpurl="flash.display:Stage:fullScreenHeight:get"/>
                <string name="fullScreenSourceRect" object="[flash.display.Stage]" text=".fullScreenSourceRect" tiptext="Sets the Flash runtime to scale a specific region of the stage to full-screen mode." version="" playername="" helpurl="flash.display:Stage:fullScreenSourceRect:get"/>
                <string name="fullScreenWidth" object="[flash.display.Stage]" text=".fullScreenWidth" tiptext="Returns the width of the monitor that will be used when going to full screen size, if that state is entered immediately." version="" playername="" helpurl="flash.display:Stage:fullScreenWidth:get"/>
                <string name="height" object="[flash.display.Stage]" text=".height" tiptext="Indicates the height of the display object, in pixels." version="" playername="" helpurl="flash.display:Stage:height:get"/>
                <string name="mouseChildren" object="[flash.display.Stage]" text=".mouseChildren" tiptext="Determines whether or not the children of the object are mouse, or user input device, enabled." version="" playername="" helpurl="flash.display:Stage:mouseChildren:get"/>
                <string name="nativeWindow" object="[flash.display.Stage]" text=".nativeWindow" tiptext="A reference to the NativeWindow object containing this Stage." version="" playername="" helpurl="flash.display:Stage:nativeWindow:get"/>
                <string name="numChildren" object="[flash.display.Stage]" text=".numChildren" tiptext="Returns the number of children of this object." version="" playername="" helpurl="flash.display:Stage:numChildren:get"/>
                <string name="orientation" object="[flash.display.Stage]" text=".orientation" tiptext="The current orientation of the stage." version="" playername="AIR" helpurl="flash.display:Stage:orientation:get"/>
                <string name="quality" object="[flash.display.Stage]" text=".quality" tiptext="A value from the StageQuality class that specifies which rendering quality is used." version="" playername="" helpurl="flash.display:Stage:quality:get"/>
                <string name="scaleMode" object="[flash.display.Stage]" text=".scaleMode" tiptext="A value from the StageScaleMode class that specifies which scale mode to use." version="" playername="" helpurl="flash.display:Stage:scaleMode:get"/>
                <string name="showDefaultContextMenu" object="[flash.display.Stage]" text=".showDefaultContextMenu" tiptext="Specifies whether to show or hide the default items in the Flash runtime context menu." version="" playername="" helpurl="flash.display:Stage:showDefaultContextMenu:get"/>
                <string name="softKeyboardRect" object="[flash.display.Stage]" text=".softKeyboardRect" tiptext="A Rectangle specifying the area of the stage that is currently covered by a soft keyboard." version="" playername="" helpurl="flash.display:Stage:softKeyboardRect:get"/>
                <string name="stageFocusRect" object="[flash.display.Stage]" text=".stageFocusRect" tiptext="Specifies whether or not objects display a glowing border when they have focus." version="" playername="" helpurl="flash.display:Stage:stageFocusRect:get"/>
                <string name="stageHeight" object="[flash.display.Stage]" text=".stageHeight" tiptext="The current height, in pixels, of the Stage." version="" playername="" helpurl="flash.display:Stage:stageHeight:get"/>
                <string name="stageVideos" object="[flash.display.Stage]" text=".stageVideos" tiptext="A list of StageVideo objects available for playing external videos." version="" playername="AIR" helpurl="flash.display:Stage:stageVideos:get"/>
                <string name="stageWidth" object="[flash.display.Stage]" text=".stageWidth" tiptext="Specifies the current width, in pixels, of the Stage." version="" playername="" helpurl="flash.display:Stage:stageWidth:get"/>
                <string name="supportedOrientations" object="[flash.display.Stage]" text=".supportedOrientations" tiptext="The orientations supported by the current device." version="" playername="AIR" helpurl="flash.display:Stage:supportedOrientations:get"/>
                <string name="supportsOrientationChange" object="[flash.display.Stage]" text=".supportsOrientationChange" tiptext="Whether the application supports changes in the stage orientation (and device rotation)." version="" playername="AIR" helpurl="flash.display:Stage:supportsOrientationChange:get"/>
                <string name="tabChildren" object="[flash.display.Stage]" text=".tabChildren" tiptext="Determines whether the children of the object are tab enabled." version="" playername="" helpurl="flash.display:Stage:tabChildren:get"/>
                <string name="textSnapshot" object="[flash.display.Stage]" text=".textSnapshot" tiptext="Returns a TextSnapshot object for this DisplayObjectContainer instance." version="" playername="" helpurl="flash.display:Stage:textSnapshot:get"/>
                <string name="width" object="[flash.display.Stage]" text=".width" tiptext="Indicates the width of the display object, in pixels." version="" playername="" helpurl="flash.display:Stage:width:get"/>
                <string name="wmodeGPU" object="[flash.display.Stage]" text=".wmodeGPU" tiptext="Indicates whether GPU compositing is available and in use." version="" playername="" helpurl="flash.display:Stage:wmodeGPU:get"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class Stage" helpurl="flash.display:Stage">
                <string name="stageVideoAvailability" object="[flash.display.Stage]" text=".addEventListener(%type:String=StageVideoAvailabilityEvent.STAGE_VIDEO_AVAILABILITY{StageVideoAvailabilityEvent.STAGE_VIDEO_AVAILABILITY,StageOrientationEvent.ORIENTATION_CHANGE,StageOrientationEvent.ORIENTATION_CHANGING,FullScreenEvent.FULL_SCREEN,Event.RESIZE,Event.MOUSE_LEAVE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched by the Stage object when the state of the stageVideos property changes." version="" playername="" helpurl="flash.display:Stage__stageVideoAvailability"/>
                <string name="orientationChange" object="[flash.display.Stage]" text=".addEventListener(%type:String=StageOrientationEvent.ORIENTATION_CHANGE{StageVideoAvailabilityEvent.STAGE_VIDEO_AVAILABILITY,StageOrientationEvent.ORIENTATION_CHANGE,StageOrientationEvent.ORIENTATION_CHANGING,FullScreenEvent.FULL_SCREEN,Event.RESIZE,Event.MOUSE_LEAVE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched by the Stage object when the stage orientation changes." version="" playername="AIR" helpurl="flash.display:Stage_flash.events.StageOrientationEvent.ORIENTATION_CHANGE_orientationChange"/>
                <string name="orientationChanging" object="[flash.display.Stage]" text=".addEventListener(%type:String=StageOrientationEvent.ORIENTATION_CHANGING{StageVideoAvailabilityEvent.STAGE_VIDEO_AVAILABILITY,StageOrientationEvent.ORIENTATION_CHANGE,StageOrientationEvent.ORIENTATION_CHANGING,FullScreenEvent.FULL_SCREEN,Event.RESIZE,Event.MOUSE_LEAVE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched by the Stage object when the stage orientation begins changing." version="" playername="AIR" helpurl="flash.display:Stage__orientationChanging"/>
                <string name="fullScreen" object="[flash.display.Stage]" text=".addEventListener(%type:String=FullScreenEvent.FULL_SCREEN{StageVideoAvailabilityEvent.STAGE_VIDEO_AVAILABILITY,StageOrientationEvent.ORIENTATION_CHANGE,StageOrientationEvent.ORIENTATION_CHANGING,FullScreenEvent.FULL_SCREEN,Event.RESIZE,Event.MOUSE_LEAVE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the Stage object enters, or leaves, full-screen mode." version="" playername="" helpurl="flash.display:Stage_flash.events.FullScreenEvent.FULL_SCREEN_fullScreen"/>
                <string name="resize" object="[flash.display.Stage]" text=".addEventListener(%type:String=Event.RESIZE{StageVideoAvailabilityEvent.STAGE_VIDEO_AVAILABILITY,StageOrientationEvent.ORIENTATION_CHANGE,StageOrientationEvent.ORIENTATION_CHANGING,FullScreenEvent.FULL_SCREEN,Event.RESIZE,Event.MOUSE_LEAVE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the scaleMode property of the Stage object is set to StageScaleMode.NO_SCALE and the SWF file is resized." version="" playername="" helpurl="flash.display:Stage_flash.events.Event.RESIZE_resize"/>
                <string name="mouseLeave" object="[flash.display.Stage]" text=".addEventListener(%type:String=Event.MOUSE_LEAVE{StageVideoAvailabilityEvent.STAGE_VIDEO_AVAILABILITY,StageOrientationEvent.ORIENTATION_CHANGE,StageOrientationEvent.ORIENTATION_CHANGING,FullScreenEvent.FULL_SCREEN,Event.RESIZE,Event.MOUSE_LEAVE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched by the Stage object when the pointer moves out of the stage area." version="" playername="" helpurl="flash.display:Stage_flash.events.Event.MOUSE_LEAVE_mouseLeave"/>
            </folder>
        </folder>
        <folder name="StageAlign" id="[flash.display.StageAlign]" sort="true" index="true" asAncestors="Object" tiptext="The StageAlign class provides constant values to use for the Stage.align property." helpurl="flash.display:StageAlign">
            <folder name="Properties" id="Properties" tiptext="Properties for class StageAlign" helpurl="flash.display:StageAlign">
                <string name="BOTTOM_LEFT" object="[flash.display.StageAlign]" text="StageAlign.BOTTOM_LEFT" constant="true" tiptext="Specifies that the Stage is aligned in the bottom-left corner." version="" playername="" helpurl="flash.display:StageAlign:BOTTOM_LEFT"/>
                <string name="BOTTOM_RIGHT" object="[flash.display.StageAlign]" text="StageAlign.BOTTOM_RIGHT" constant="true" tiptext="Specifies that the Stage is aligned in the bottom-right corner." version="" playername="" helpurl="flash.display:StageAlign:BOTTOM_RIGHT"/>
                <string name="BOTTOM" object="[flash.display.StageAlign]" text="StageAlign.BOTTOM" constant="true" tiptext="Specifies that the Stage is aligned at the bottom." version="" playername="" helpurl="flash.display:StageAlign:BOTTOM"/>
                <string name="LEFT" object="[flash.display.StageAlign]" text="StageAlign.LEFT" constant="true" tiptext="Specifies that the Stage is aligned on the left." version="" playername="" helpurl="flash.display:StageAlign:LEFT"/>
                <string name="RIGHT" object="[flash.display.StageAlign]" text="StageAlign.RIGHT" constant="true" tiptext="Specifies that the Stage is aligned to the right." version="" playername="" helpurl="flash.display:StageAlign:RIGHT"/>
                <string name="TOP_LEFT" object="[flash.display.StageAlign]" text="StageAlign.TOP_LEFT" constant="true" tiptext="Specifies that the Stage is aligned in the top-left corner." version="" playername="" helpurl="flash.display:StageAlign:TOP_LEFT"/>
                <string name="TOP_RIGHT" object="[flash.display.StageAlign]" text="StageAlign.TOP_RIGHT" constant="true" tiptext="Specifies that the Stage is aligned in the top-right corner." version="" playername="" helpurl="flash.display:StageAlign:TOP_RIGHT"/>
                <string name="TOP" object="[flash.display.StageAlign]" text="StageAlign.TOP" constant="true" tiptext="Specifies that the Stage is aligned at the top." version="" playername="" helpurl="flash.display:StageAlign:TOP"/>
            </folder>
        </folder>
        <folder name="StageAspectRatio" id="[flash.display.StageAspectRatio]" sort="true" index="true" asAncestors="Object" tiptext="The StageAspectRatio class provides values for the Stage.setAspectRatio() method." helpurl="flash.display:StageAspectRatio">
            <folder name="Properties" id="Properties" tiptext="Properties for class StageAspectRatio" helpurl="flash.display:StageAspectRatio">
                <string name="LANDSCAPE" object="[flash.display.StageAspectRatio]" text="StageAspectRatio.LANDSCAPE" constant="true" tiptext="Specifies a device orientation that presents a landscape UI" version="" playername="" helpurl="flash.display:StageAspectRatio:LANDSCAPE"/>
                <string name="PORTRAIT" object="[flash.display.StageAspectRatio]" text="StageAspectRatio.PORTRAIT" constant="true" tiptext="Specifies a device orientation that presents a portrait UI" version="" playername="" helpurl="flash.display:StageAspectRatio:PORTRAIT"/>
            </folder>
        </folder>
        <folder name="StageDisplayState" id="[flash.display.StageDisplayState]" sort="true" index="true" asAncestors="Object" tiptext="The StageDisplayState class provides values for the Stage.displayState property." helpurl="flash.display:StageDisplayState">
            <folder name="Properties" id="Properties" tiptext="Properties for class StageDisplayState" helpurl="flash.display:StageDisplayState">
                <string name="FULL_SCREEN_INTERACTIVE" object="[flash.display.StageDisplayState]" text="StageDisplayState.FULL_SCREEN_INTERACTIVE" constant="true" tiptext="Specifies that the Stage is in full-screen mode with keyboard interactivity enabled." version="" playername="" helpurl="flash.display:StageDisplayState:FULL_SCREEN_INTERACTIVE"/>
                <string name="FULL_SCREEN" object="[flash.display.StageDisplayState]" text="StageDisplayState.FULL_SCREEN" constant="true" tiptext="Specifies that the Stage is in full-screen mode." version="" playername="" helpurl="flash.display:StageDisplayState:FULL_SCREEN"/>
                <string name="NORMAL" object="[flash.display.StageDisplayState]" text="StageDisplayState.NORMAL" constant="true" tiptext="Specifies that the Stage is in normal mode." version="" playername="" helpurl="flash.display:StageDisplayState:NORMAL"/>
            </folder>
        </folder>
        <folder name="StageOrientation" id="[flash.display.StageOrientation]" sort="true" index="true" asAncestors="Object" tiptext="The StageOrientation class defines constants enumerating the possible orientations of the stage and the device." helpurl="flash.display:StageOrientation">
            <folder name="Properties" id="Properties" tiptext="Properties for class StageOrientation" helpurl="flash.display:StageOrientation">
                <string name="DEFAULT" object="[flash.display.StageOrientation]" text="StageOrientation.DEFAULT" constant="true" tiptext="Specifies that the stage is currently in the default orientation of the device (right-side up)." version="" playername="AIR" helpurl="flash.display:StageOrientation:DEFAULT"/>
                <string name="ROTATED_LEFT" object="[flash.display.StageOrientation]" text="StageOrientation.ROTATED_LEFT" constant="true" tiptext="Specifies that the stage is currently rotated left relative to the default orientation." version="" playername="AIR" helpurl="flash.display:StageOrientation:ROTATED_LEFT"/>
                <string name="ROTATED_RIGHT" object="[flash.display.StageOrientation]" text="StageOrientation.ROTATED_RIGHT" constant="true" tiptext="Specifies that the stage is currently rotated right relative to the default orientation." version="" playername="AIR" helpurl="flash.display:StageOrientation:ROTATED_RIGHT"/>
                <string name="UNKNOWN" object="[flash.display.StageOrientation]" text="StageOrientation.UNKNOWN" constant="true" tiptext="Specifies that the device has not determined an orientation." version="" playername="AIR" helpurl="flash.display:StageOrientation:UNKNOWN"/>
                <string name="UPSIDE_DOWN" object="[flash.display.StageOrientation]" text="StageOrientation.UPSIDE_DOWN" constant="true" tiptext="Specifies that the stage is currently upside down relative to the default orientation." version="" playername="AIR" helpurl="flash.display:StageOrientation:UPSIDE_DOWN"/>
            </folder>
        </folder>
        <folder name="StageQuality" id="[flash.display.StageQuality]" sort="true" index="true" asAncestors="Object" tiptext="The StageQuality class provides values for the Stage.quality property." helpurl="flash.display:StageQuality">
            <folder name="Properties" id="Properties" tiptext="Properties for class StageQuality" helpurl="flash.display:StageQuality">
                <string name="BEST" object="[flash.display.StageQuality]" text="StageQuality.BEST" constant="true" tiptext="Specifies very high rendering quality: graphics are anti-aliased using a 4 x 4 pixel grid and bitmaps are always smoothed." version="" playername="" helpurl="flash.display:StageQuality:BEST"/>
                <string name="HIGH" object="[flash.display.StageQuality]" text="StageQuality.HIGH" constant="true" tiptext="Specifies high rendering quality: graphics are anti-aliased using a 4 x 4 pixel grid, and bitmaps are smoothed if the movie is static." version="" playername="" helpurl="flash.display:StageQuality:HIGH"/>
                <string name="LOW" object="[flash.display.StageQuality]" text="StageQuality.LOW" constant="true" tiptext="Specifies low rendering quality: graphics are not anti-aliased, and bitmaps are not smoothed." version="" playername="" helpurl="flash.display:StageQuality:LOW"/>
                <string name="MEDIUM" object="[flash.display.StageQuality]" text="StageQuality.MEDIUM" constant="true" tiptext="Specifies medium rendering quality: graphics are anti-aliased using a 2 x 2 pixel grid, but bitmaps are not smoothed." version="" playername="" helpurl="flash.display:StageQuality:MEDIUM"/>
            </folder>
        </folder>
        <folder name="StageScaleMode" id="[flash.display.StageScaleMode]" sort="true" index="true" asAncestors="Object" tiptext="The StageScaleMode class provides values for the Stage.scaleMode property." helpurl="flash.display:StageScaleMode">
            <folder name="Properties" id="Properties" tiptext="Properties for class StageScaleMode" helpurl="flash.display:StageScaleMode">
                <string name="EXACT_FIT" object="[flash.display.StageScaleMode]" text="StageScaleMode.EXACT_FIT" constant="true" tiptext="Specifies that the entire application be visible in the specified area without trying to preserve the original aspect ratio." version="" playername="" helpurl="flash.display:StageScaleMode:EXACT_FIT"/>
                <string name="NO_BORDER" object="[flash.display.StageScaleMode]" text="StageScaleMode.NO_BORDER" constant="true" tiptext="Specifies that the entire application fill the specified area, without distortion but possibly with some cropping, while maintaining the original aspect ratio of the application." version="" playername="" helpurl="flash.display:StageScaleMode:NO_BORDER"/>
                <string name="NO_SCALE" object="[flash.display.StageScaleMode]" text="StageScaleMode.NO_SCALE" constant="true" tiptext="Specifies that the size of the application be fixed, so that it remains unchanged even as the size of the player window changes." version="" playername="" helpurl="flash.display:StageScaleMode:NO_SCALE"/>
                <string name="SHOW_ALL" object="[flash.display.StageScaleMode]" text="StageScaleMode.SHOW_ALL" constant="true" tiptext="Specifies that the entire application be visible in the specified area without distortion while maintaining the original aspect ratio of the application." version="" playername="" helpurl="flash.display:StageScaleMode:SHOW_ALL"/>
            </folder>
        </folder>
        <folder name="SWFVersion" id="[flash.display.SWFVersion]" sort="true" index="true" asAncestors="Object" tiptext="The SWFVersion class is an enumeration of constant values that indicate the file format version of a loaded SWF file." helpurl="flash.display:SWFVersion">
            <folder name="Properties" id="Properties" tiptext="Properties for class SWFVersion" helpurl="flash.display:SWFVersion">
                <string name="FLASH10" object="[flash.display.SWFVersion]" text="SWFVersion.FLASH10" constant="true" tiptext="SWF file format version 10.0." version="" playername="" helpurl="flash.display:SWFVersion:FLASH10"/>
                <string name="FLASH11" object="[flash.display.SWFVersion]" text="SWFVersion.FLASH11" constant="true" tiptext="SWF file format version 11.0." version="" playername="" helpurl="flash.display:SWFVersion:FLASH11"/>
                <string name="FLASH1" object="[flash.display.SWFVersion]" text="SWFVersion.FLASH1" constant="true" tiptext="SWF file format version 1.0." version="" playername="" helpurl="flash.display:SWFVersion:FLASH1"/>
                <string name="FLASH2" object="[flash.display.SWFVersion]" text="SWFVersion.FLASH2" constant="true" tiptext="SWF file format version 2.0." version="" playername="" helpurl="flash.display:SWFVersion:FLASH2"/>
                <string name="FLASH3" object="[flash.display.SWFVersion]" text="SWFVersion.FLASH3" constant="true" tiptext="SWF file format version 3.0." version="" playername="" helpurl="flash.display:SWFVersion:FLASH3"/>
                <string name="FLASH4" object="[flash.display.SWFVersion]" text="SWFVersion.FLASH4" constant="true" tiptext="SWF file format version 4.0." version="" playername="" helpurl="flash.display:SWFVersion:FLASH4"/>
                <string name="FLASH5" object="[flash.display.SWFVersion]" text="SWFVersion.FLASH5" constant="true" tiptext="SWF file format version 5.0." version="" playername="" helpurl="flash.display:SWFVersion:FLASH5"/>
                <string name="FLASH6" object="[flash.display.SWFVersion]" text="SWFVersion.FLASH6" constant="true" tiptext="SWF file format version 6.0." version="" playername="" helpurl="flash.display:SWFVersion:FLASH6"/>
                <string name="FLASH7" object="[flash.display.SWFVersion]" text="SWFVersion.FLASH7" constant="true" tiptext="SWF file format version 7.0." version="" playername="" helpurl="flash.display:SWFVersion:FLASH7"/>
                <string name="FLASH8" object="[flash.display.SWFVersion]" text="SWFVersion.FLASH8" constant="true" tiptext="SWF file format version 8.0." version="" playername="" helpurl="flash.display:SWFVersion:FLASH8"/>
                <string name="FLASH9" object="[flash.display.SWFVersion]" text="SWFVersion.FLASH9" constant="true" tiptext="SWF file format version 9.0." version="" playername="" helpurl="flash.display:SWFVersion:FLASH9"/>
            </folder>
        </folder>
        <folder name="TriangleCulling" id="[flash.display.TriangleCulling]" sort="true" index="true" asAncestors="Object" tiptext="Defines codes for culling algorithms that determine which triangles not to render when drawing triangle paths." helpurl="flash.display:TriangleCulling">
            <folder name="Properties" id="Properties" tiptext="Properties for class TriangleCulling" helpurl="flash.display:TriangleCulling">
                <string name="NEGATIVE" object="[flash.display.TriangleCulling]" text="TriangleCulling.NEGATIVE" constant="true" tiptext="Specifies culling of all triangles facing toward the current view point." version="" playername="" helpurl="flash.display:TriangleCulling:NEGATIVE"/>
                <string name="NONE" object="[flash.display.TriangleCulling]" text="TriangleCulling.NONE" constant="true" tiptext="Specifies no culling." version="" playername="" helpurl="flash.display:TriangleCulling:NONE"/>
                <string name="POSITIVE" object="[flash.display.TriangleCulling]" text="TriangleCulling.POSITIVE" constant="true" tiptext="Specifies culling of all triangles facing away from the current view point." version="" playername="" helpurl="flash.display:TriangleCulling:POSITIVE"/>
            </folder>
        </folder>
    </folder>
        <folder name="flash.errors" id="flash.errors" sort="true" tiptext="Classes for package flash.errors" helpurl="flash.errors">
        <folder name="DRMManagerError" id="[flash.errors.DRMManagerError]" sort="true" index="true" asAncestors="Error,Object" tiptext="The DRMManager dispatches a DRMManagerError event to report errors." helpurl="flash.errors:DRMManagerError">
            <folder name="Methods" id="Methods" tiptext="Methods for class DRMManagerError" helpurl="flash.errors:DRMManagerError">
                <string name="DRMManagerError" object="[flash.errors.DRMManagerError]" text="new DRMManagerError(%message:String,id:int,subErrorID:int%)" constructor="true" tiptext="Creates a new instance of the DRMManagerError class." version="1.5" playername="AIR" helpurl="flash.errors:DRMManagerError:DRMManagerError"/>
                <string name="toString" object="[flash.errors.DRMManagerError]" text=".toString(%%):String" tiptext="Returns the string &quot;Error&quot; by default or the value contained in the Error.message property, if defined." version="" playername="" helpurl="flash.errors:DRMManagerError:toString"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class DRMManagerError" helpurl="flash.errors:DRMManagerError">
                <string name="subErrorID" object="[flash.errors.DRMManagerError]" text=".subErrorID" tiptext="The specific error number." version="" playername="AIR" helpurl="flash.errors:DRMManagerError:subErrorID:get"/>
            </folder>
        </folder>
        <folder name="EOFError" id="[flash.errors.EOFError]" sort="true" index="true" asAncestors="flash.errors:IOError,Error,Object" tiptext="An EOFError exception is thrown when you attempt to read past the end of the available data." helpurl="flash.errors:EOFError">
            <folder name="Methods" id="Methods" tiptext="Methods for class EOFError" helpurl="flash.errors:EOFError">
                <string name="EOFError" object="[flash.errors.EOFError]" text="new EOFError(%message:String%)" constructor="true" tiptext="Creates a new EOFError object." version="9" playername="" helpurl="flash.errors:EOFError:EOFError"/>
            </folder>
        </folder>
        <folder name="IllegalOperationError" id="[flash.errors.IllegalOperationError]" sort="true" index="true" asAncestors="Error,Object" tiptext="The IllegalOperationError exception is thrown when a method is not implemented or the implementation doesn&apos;t cover the current usage." helpurl="flash.errors:IllegalOperationError">
            <folder name="Methods" id="Methods" tiptext="Methods for class IllegalOperationError" helpurl="flash.errors:IllegalOperationError">
                <string name="IllegalOperationError" object="[flash.errors.IllegalOperationError]" text="new IllegalOperationError(%message:String%)" constructor="true" tiptext="Creates a new IllegalOperationError object." version="9" playername="" helpurl="flash.errors:IllegalOperationError:IllegalOperationError"/>
            </folder>
        </folder>
        <folder name="InvalidSWFError" id="[flash.errors.InvalidSWFError]" sort="true" index="true" asAncestors="Error,Object" tiptext="The Flash runtimes throw this exception when they encounter a corrupted SWF file." helpurl="flash.errors:InvalidSWFError">
            <folder name="Methods" id="Methods" tiptext="Methods for class InvalidSWFError" helpurl="flash.errors:InvalidSWFError">
                <string name="InvalidSWFError" object="[flash.errors.InvalidSWFError]" text="new InvalidSWFError(%message:String[,id:int=0]%)" constructor="true" tiptext="Creates a new InvalidSWFError object." version="4" playername="" helpurl="flash.errors:InvalidSWFError:InvalidSWFError"/>
            </folder>
        </folder>
        <folder name="IOError" id="[flash.errors.IOError]" sort="true" index="true" asAncestors="Error,Object" tiptext="The IOError exception is thrown when some type of input or output failure occurs." helpurl="flash.errors:IOError">
            <folder name="Methods" id="Methods" tiptext="Methods for class IOError" helpurl="flash.errors:IOError">
                <string name="IOError" object="[flash.errors.IOError]" text="new IOError(%message:String%)" constructor="true" tiptext="Creates a new IOError object." version="9" playername="" helpurl="flash.errors:IOError:IOError"/>
            </folder>
        </folder>
        <folder name="MemoryError" id="[flash.errors.MemoryError]" sort="true" index="true" asAncestors="Error,Object" tiptext="The MemoryError exception is thrown when a memory allocation request fails." helpurl="flash.errors:MemoryError">
            <folder name="Methods" id="Methods" tiptext="Methods for class MemoryError" helpurl="flash.errors:MemoryError">
                <string name="MemoryError" object="[flash.errors.MemoryError]" text="new MemoryError(%message:String%)" constructor="true" tiptext="Creates a new MemoryError object." version="9" playername="" helpurl="flash.errors:MemoryError:MemoryError"/>
            </folder>
        </folder>
        <folder name="ScriptTimeoutError" id="[flash.errors.ScriptTimeoutError]" sort="true" index="true" asAncestors="Error,Object" tiptext="The ScriptTimeoutError exception is thrown when the script timeout interval is reached." helpurl="flash.errors:ScriptTimeoutError">
            <folder name="Methods" id="Methods" tiptext="Methods for class ScriptTimeoutError" helpurl="flash.errors:ScriptTimeoutError">
                <string name="ScriptTimeoutError" object="[flash.errors.ScriptTimeoutError]" text="new ScriptTimeoutError(%message:String%)" constructor="true" tiptext="Creates a new ScriptTimeoutError object." version="9" playername="" helpurl="flash.errors:ScriptTimeoutError:ScriptTimeoutError"/>
            </folder>
        </folder>
        <folder name="SQLError" id="[flash.errors.SQLError]" sort="true" index="true" asAncestors="Error,Object" tiptext="A SQLError instance provides detailed information about a failed operation." helpurl="flash.errors:SQLError">
            <folder name="Methods" id="Methods" tiptext="Methods for class SQLError" helpurl="flash.errors:SQLError">
                <string name="SQLError" object="[flash.errors.SQLError]" text="new SQLError(%operation:String,details:String,message:String[,id:int=0,detailID:int=-1,detailArgs:Array=null]%)" constructor="true" tiptext="Creates a SQLError instance that can be thrown or used with a SQLErrorEvent instance&apos;s error property." version="1.0" playername="AIR" helpurl="flash.errors:SQLError:SQLError"/>
                <string name="toString" object="[flash.errors.SQLError]" text=".toString(%%):String" tiptext="Returns the string &quot;Error&quot; by default or the value contained in the Error.message property, if defined." version="1.0" playername="AIR" helpurl="flash.errors:SQLError:toString"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class SQLError" helpurl="flash.errors:SQLError">
                <string name="detailArguments" object="[flash.errors.SQLError]" text=".detailArguments" tiptext="An array of String values that can be used to construct a locale specific detail error message." version="" playername="AIR" helpurl="flash.errors:SQLError:detailArguments:get"/>
                <string name="detailID" object="[flash.errors.SQLError]" text=".detailID" tiptext="A reference number associated with the specific detail message." version="" playername="AIR" helpurl="flash.errors:SQLError:detailID:get"/>
                <string name="details" object="[flash.errors.SQLError]" text=".details" tiptext="Details of the current error." version="" playername="AIR" helpurl="flash.errors:SQLError:details:get"/>
                <string name="operation" object="[flash.errors.SQLError]" text=".operation" tiptext="A value indicating the operation that was being attempted when the error occurred." version="" playername="AIR" helpurl="flash.errors:SQLError:operation:get"/>
            </folder>
        </folder>
        <folder name="SQLErrorOperation" id="[flash.errors.SQLErrorOperation]" sort="true" index="true" asAncestors="Object" tiptext="This class contains the constants that represent the possible values for the SQLError.operation property." helpurl="flash.errors:SQLErrorOperation">
            <folder name="Properties" id="Properties" tiptext="Properties for class SQLErrorOperation" helpurl="flash.errors:SQLErrorOperation">
                <string name="ANALYZE" object="[flash.errors.SQLErrorOperation]" text="SQLErrorOperation.ANALYZE" constant="true" tiptext="Indicates that the SQLConnection.analyze() method was called." version="" playername="AIR" helpurl="flash.errors:SQLErrorOperation:ANALYZE"/>
                <string name="ATTACH" object="[flash.errors.SQLErrorOperation]" text="SQLErrorOperation.ATTACH" constant="true" tiptext="Indicates that the SQLConnection.attach() method was called." version="" playername="AIR" helpurl="flash.errors:SQLErrorOperation:ATTACH"/>
                <string name="BEGIN" object="[flash.errors.SQLErrorOperation]" text="SQLErrorOperation.BEGIN" constant="true" tiptext="Indicates that the SQLConnection.begin() method was called." version="" playername="AIR" helpurl="flash.errors:SQLErrorOperation:BEGIN"/>
                <string name="CLOSE" object="[flash.errors.SQLErrorOperation]" text="SQLErrorOperation.CLOSE" constant="true" tiptext="Indicates that the SQLConnection.close() method was called." version="" playername="AIR" helpurl="flash.errors:SQLErrorOperation:CLOSE"/>
                <string name="COMMIT" object="[flash.errors.SQLErrorOperation]" text="SQLErrorOperation.COMMIT" constant="true" tiptext="Indicates that the SQLConnection.commit() method was called." version="" playername="AIR" helpurl="flash.errors:SQLErrorOperation:COMMIT"/>
                <string name="COMPACT" object="[flash.errors.SQLErrorOperation]" text="SQLErrorOperation.COMPACT" constant="true" tiptext="Indicates that the SQLConnection.compact() method was called." version="" playername="AIR" helpurl="flash.errors:SQLErrorOperation:COMPACT"/>
                <string name="DEANALYZE" object="[flash.errors.SQLErrorOperation]" text="SQLErrorOperation.DEANALYZE" constant="true" tiptext="Indicates that the SQLConnection.deanalyze() method was called." version="" playername="AIR" helpurl="flash.errors:SQLErrorOperation:DEANALYZE"/>
                <string name="DETACH" object="[flash.errors.SQLErrorOperation]" text="SQLErrorOperation.DETACH" constant="true" tiptext="Indicates that the SQLConnection.detach() method was called." version="" playername="AIR" helpurl="flash.errors:SQLErrorOperation:DETACH"/>
                <string name="EXECUTE" object="[flash.errors.SQLErrorOperation]" text="SQLErrorOperation.EXECUTE" constant="true" tiptext="Indicates that either the SQLStatement.execute() method or the SQLStatement.next() method was called." version="" playername="AIR" helpurl="flash.errors:SQLErrorOperation:EXECUTE"/>
                <string name="OPEN" object="[flash.errors.SQLErrorOperation]" text="SQLErrorOperation.OPEN" constant="true" tiptext="Indicates that either the SQLConnection.open() method or the SQLConnection.openAsync() method was called." version="" playername="AIR" helpurl="flash.errors:SQLErrorOperation:OPEN"/>
                <string name="REENCRYPT" object="[flash.errors.SQLErrorOperation]" text="SQLErrorOperation.REENCRYPT" constant="true" tiptext="Indicates that the SQLConnection.reencrypt() method was called." version="" playername="AIR" helpurl="flash.errors:SQLErrorOperation:REENCRYPT"/>
                <string name="RELEASE_SAVEPOINT" object="[flash.errors.SQLErrorOperation]" text="SQLErrorOperation.RELEASE_SAVEPOINT" constant="true" tiptext="Indicates that the SQLConnection.releaseSavepoint() method was called." version="" playername="AIR" helpurl="flash.errors:SQLErrorOperation:RELEASE_SAVEPOINT"/>
                <string name="ROLLBACK_TO_SAVEPOINT" object="[flash.errors.SQLErrorOperation]" text="SQLErrorOperation.ROLLBACK_TO_SAVEPOINT" constant="true" tiptext="Indicates that the SQLConnection.rollbackToSavepoint() method was called." version="" playername="AIR" helpurl="flash.errors:SQLErrorOperation:ROLLBACK_TO_SAVEPOINT"/>
                <string name="ROLLBACK" object="[flash.errors.SQLErrorOperation]" text="SQLErrorOperation.ROLLBACK" constant="true" tiptext="Indicates that the SQLConnection.rollback() method was called." version="" playername="AIR" helpurl="flash.errors:SQLErrorOperation:ROLLBACK"/>
                <string name="SCHEMA" object="[flash.errors.SQLErrorOperation]" text="SQLErrorOperation.SCHEMA" constant="true" tiptext="Indicates that the SQLConnection.loadSchema() method was called." version="" playername="AIR" helpurl="flash.errors:SQLErrorOperation:SCHEMA"/>
                <string name="SET_SAVEPOINT" object="[flash.errors.SQLErrorOperation]" text="SQLErrorOperation.SET_SAVEPOINT" constant="true" tiptext="Indicates that the SQLConnection.setSavepoint() method was called." version="" playername="AIR" helpurl="flash.errors:SQLErrorOperation:SET_SAVEPOINT"/>
            </folder>
        </folder>
        <folder name="StackOverflowError" id="[flash.errors.StackOverflowError]" sort="true" index="true" asAncestors="Error,Object" tiptext="ActionScript throws a StackOverflowError exception when the stack available to the script is exhausted." helpurl="flash.errors:StackOverflowError">
            <folder name="Methods" id="Methods" tiptext="Methods for class StackOverflowError" helpurl="flash.errors:StackOverflowError">
                <string name="StackOverflowError" object="[flash.errors.StackOverflowError]" text="new StackOverflowError(%message:String%)" constructor="true" tiptext="Creates a new StackOverflowError object." version="9" playername="" helpurl="flash.errors:StackOverflowError:StackOverflowError"/>
            </folder>
        </folder>
    </folder>
        <folder name="flash.events" id="flash.events" sort="true" tiptext="Classes for package flash.events" helpurl="flash.events">
        <folder name="AccelerometerEvent" id="[flash.events.AccelerometerEvent]" sort="true" index="true" asAncestors="flash.events:Event,Object" tiptext="The Accelerometer class dispatches AccelerometerEvent objects when acceleration updates are obtained from the Accelerometer sensor installed on the device." helpurl="flash.events:AccelerometerEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class AccelerometerEvent" helpurl="flash.events:AccelerometerEvent">
                <string name="AccelerometerEvent" object="[flash.events.AccelerometerEvent]" text="new AccelerometerEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,timestamp:Number=0,accelerationX:Number=0,accelerationY:Number=0,accelerationZ:Number=0]%)" constructor="true" tiptext="Constructor for AccelerometerEvent objects." version="4" playername="" helpurl="flash.events:AccelerometerEvent:AccelerometerEvent"/>
                <string name="clone" object="[flash.events.AccelerometerEvent]" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of an AccelerometerEvent object and sets the value of each property to match that of the original." version="10.1" playername="" helpurl="flash.events:AccelerometerEvent:clone"/>
                <string name="toString" object="[flash.events.AccelerometerEvent]" text=".toString(%%):String" tiptext="Returns a string that contains all the properties of the AccelerometerEvent object." version="10.1" playername="" helpurl="flash.events:AccelerometerEvent:toString"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class AccelerometerEvent" helpurl="flash.events:AccelerometerEvent">
                <string name="UPDATE" object="[flash.events.AccelerometerEvent]" text="AccelerometerEvent.UPDATE" constant="true" tiptext="Defines the value of the type property of a AccelerometerEvent event object." version="" playername="" helpurl="flash.events:AccelerometerEvent:UPDATE"/>
                <string name="accelerationX" object="[flash.events.AccelerometerEvent]" text=".accelerationX" tiptext="Acceleration along the x-axis, measured in Gs." version="" playername="" helpurl="flash.events:AccelerometerEvent:accelerationX:get"/>
                <string name="accelerationY" object="[flash.events.AccelerometerEvent]" text=".accelerationY" tiptext="Acceleration along the y-axis, measured in Gs." version="" playername="" helpurl="flash.events:AccelerometerEvent:accelerationY:get"/>
                <string name="accelerationZ" object="[flash.events.AccelerometerEvent]" text=".accelerationZ" tiptext="Acceleration along the z-axis, measured in Gs." version="" playername="" helpurl="flash.events:AccelerometerEvent:accelerationZ:get"/>
                <string name="timestamp" object="[flash.events.AccelerometerEvent]" text=".timestamp" tiptext="The number of milliseconds at the time of the event since the runtime was initialized." version="" playername="" helpurl="flash.events:AccelerometerEvent:timestamp:get"/>
            </folder>
        </folder>
        <folder name="ActivityEvent" id="[flash.events.ActivityEvent]" sort="true" index="true" asAncestors="flash.events:Event,Object" tiptext="A Camera or Microphone object dispatches an ActivityEvent object whenever a camera or microphone reports that it has become active or inactive." helpurl="flash.events:ActivityEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class ActivityEvent" helpurl="flash.events:ActivityEvent">
                <string name="ActivityEvent" object="[flash.events.ActivityEvent]" text="new ActivityEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,activating:Boolean=false]%)" constructor="true" tiptext="Constructor for ActivityEvent objects." version="9" playername="" helpurl="flash.events:ActivityEvent:ActivityEvent"/>
                <string name="clone" object="[flash.events.ActivityEvent]" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of an ActivityEvent object and sets the value of each property to match that of the original." version="9" playername="" helpurl="flash.events:ActivityEvent:clone"/>
                <string name="toString" object="[flash.events.ActivityEvent]" text=".toString(%%):String" tiptext="Returns a string that contains all the properties of the ActivityEvent object." version="9" playername="" helpurl="flash.events:ActivityEvent:toString"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class ActivityEvent" helpurl="flash.events:ActivityEvent">
                <string name="ACTIVITY" object="[flash.events.ActivityEvent]" text="ActivityEvent.ACTIVITY" constant="true" tiptext="The ActivityEvent.ACTIVITY constant defines the value of the type property of an activity event object." version="" playername="" helpurl="flash.events:ActivityEvent:ACTIVITY"/>
                <string name="activating" object="[flash.events.ActivityEvent]" text=".activating" tiptext="Indicates whether the device is activating (true) or deactivating (false)." version="" playername="" helpurl="flash.events:ActivityEvent:activating:get"/>
            </folder>
        </folder>
        <folder name="AsyncErrorEvent" id="[flash.events.AsyncErrorEvent]" sort="true" index="true" asAncestors="flash.events:ErrorEvent,flash.events:TextEvent,flash.events:Event,Object" tiptext="An object dispatches an AsyncErrorEvent when an exception is thrown from nativeasynchronous code, which could be from, for example, LocalConnection, NetConnection,SharedObject, or NetStream." helpurl="flash.events:AsyncErrorEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class AsyncErrorEvent" helpurl="flash.events:AsyncErrorEvent">
                <string name="AsyncErrorEvent" object="[flash.events.AsyncErrorEvent]" text="new AsyncErrorEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,text:String,error:Error=null]%)" constructor="true" tiptext="Constructor for AsyncErrorEvent objects." version="4" playername="" helpurl="flash.events:AsyncErrorEvent:AsyncErrorEvent"/>
                <string name="clone" object="[flash.events.AsyncErrorEvent]" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of the AsyncErrorEvent object and sets the value of each property to matchthat of the original." version="4" playername="" helpurl="flash.events:AsyncErrorEvent:clone"/>
                <string name="toString" object="[flash.events.AsyncErrorEvent]" text=".toString(%%):String" tiptext="Returns a string that contains all the properties of the AsyncErrorEvent object." version="4" playername="" helpurl="flash.events:AsyncErrorEvent:toString"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class AsyncErrorEvent" helpurl="flash.events:AsyncErrorEvent">
                <string name="ASYNC_ERROR" object="[flash.events.AsyncErrorEvent]" text="AsyncErrorEvent.ASYNC_ERROR" constant="true" tiptext="The AsyncErrorEvent.ASYNC_ERROR constant defines the value of the type property of an asyncError event object." version="" playername="" helpurl="flash.events:AsyncErrorEvent:ASYNC_ERROR"/>
                <string name="error" object="[flash.events.AsyncErrorEvent]" text=".error" tiptext="The exception that was thrown." version="" playername="" helpurl="flash.events:AsyncErrorEvent:error"/>
            </folder>
        </folder>
        <folder name="BrowserInvokeEvent" id="[flash.events.BrowserInvokeEvent]" sort="true" index="true" asAncestors="flash.events:Event,Object" tiptext="The NativeApplication object of an AIR application dispatches a browserInvoke event when the application is invoked as the result of a SWF file in the browser using the browser invocation feature." helpurl="flash.events:BrowserInvokeEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class BrowserInvokeEvent" helpurl="flash.events:BrowserInvokeEvent">
                <string name="BrowserInvokeEvent" object="[flash.events.BrowserInvokeEvent]" text="new BrowserInvokeEvent(%type:String,bubbles:Boolean,cancelable:Boolean,arguments:Array,sandboxType:String,securityDomain:String,isHTTPS:Boolean,isUserEvent:Boolean%)" constructor="true" tiptext="The constructor function for the BrowserInvokeEvent class." version="1.0" playername="AIR" helpurl="flash.events:BrowserInvokeEvent:BrowserInvokeEvent"/>
                <string name="clone" object="[flash.events.BrowserInvokeEvent]" text=".clone(%%):flash.events:Event" tiptext="Creates a new copy of this event." version="1.0" playername="AIR" helpurl="flash.events:BrowserInvokeEvent:clone"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class BrowserInvokeEvent" helpurl="flash.events:BrowserInvokeEvent">
                <string name="BROWSER_INVOKE" object="[flash.events.BrowserInvokeEvent]" text="BrowserInvokeEvent.BROWSER_INVOKE" constant="true" tiptext="The BrowserInvokeEvent.BROWSER_INVOKE constant defines the value of the type property of a BrowserInvokeEvent object." version="" playername="AIR" helpurl="flash.events:BrowserInvokeEvent:BROWSER_INVOKE"/>
                <string name="arguments" object="[flash.events.BrowserInvokeEvent]" text=".arguments" tiptext="An array of arguments (strings) to pass to the application." version="" playername="AIR" helpurl="flash.events:BrowserInvokeEvent:arguments:get"/>
                <string name="isHTTPS" object="[flash.events.BrowserInvokeEvent]" text=".isHTTPS" tiptext="Whether the content in the browser uses the HTTPS URL scheme (true) or not (false)." version="" playername="AIR" helpurl="flash.events:BrowserInvokeEvent:isHTTPS:get"/>
                <string name="isUserEvent" object="[flash.events.BrowserInvokeEvent]" text=".isUserEvent" tiptext="Whether the browser invocation resulted in a user event (such as a mouse click)." version="" playername="AIR" helpurl="flash.events:BrowserInvokeEvent:isUserEvent:get"/>
                <string name="sandboxType" object="[flash.events.BrowserInvokeEvent]" text=".sandboxType" tiptext="The sandbox type for the content in the browser." version="" playername="AIR" helpurl="flash.events:BrowserInvokeEvent:sandboxType:get"/>
                <string name="securityDomain" object="[flash.events.BrowserInvokeEvent]" text=".securityDomain" tiptext="The security domain for the content in the browser, such as &quot;www.adobe.com&quot; or &quot;www.example.org&quot;." version="" playername="AIR" helpurl="flash.events:BrowserInvokeEvent:securityDomain:get"/>
            </folder>
        </folder>
        <folder name="ContextMenuEvent" id="[flash.events.ContextMenuEvent]" sort="true" index="true" asAncestors="flash.events:Event,Object" tiptext="An InteractiveObject dispatches a ContextMenuEvent object when the user opens or interacts with the context menu." helpurl="flash.events:ContextMenuEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class ContextMenuEvent" helpurl="flash.events:ContextMenuEvent">
                <string name="ContextMenuEvent" object="[flash.events.ContextMenuEvent]" text="new ContextMenuEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,mouseTarget:flash.display:InteractiveObject=null,contextMenuOwner:flash.display:InteractiveObject=null]%)" constructor="true" tiptext="Constructor for ContextMenuEvent objects." version="9" playername="" helpurl="flash.events:ContextMenuEvent:ContextMenuEvent"/>
                <string name="clone" object="[flash.events.ContextMenuEvent]" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of the ContextMenuEvent object and sets the value of each property to match that of the original." version="9" playername="" helpurl="flash.events:ContextMenuEvent:clone"/>
                <string name="toString" object="[flash.events.ContextMenuEvent]" text=".toString(%%):String" tiptext="Returns a string that contains all the properties of the ContextMenuEvent object." version="9" playername="" helpurl="flash.events:ContextMenuEvent:toString"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class ContextMenuEvent" helpurl="flash.events:ContextMenuEvent">
                <string name="MENU_ITEM_SELECT" object="[flash.events.ContextMenuEvent]" text="ContextMenuEvent.MENU_ITEM_SELECT" constant="true" tiptext="Defines the value of the type property of a menuItemSelect event object." version="" playername="" helpurl="flash.events:ContextMenuEvent:MENU_ITEM_SELECT"/>
                <string name="MENU_SELECT" object="[flash.events.ContextMenuEvent]" text="ContextMenuEvent.MENU_SELECT" constant="true" tiptext="Defines the value of the type property of a menuSelect event object." version="" playername="" helpurl="flash.events:ContextMenuEvent:MENU_SELECT"/>
                <string name="contextMenuOwner" object="[flash.events.ContextMenuEvent]" text=".contextMenuOwner" tiptext="The display list object to which the menu is attached." version="" playername="" helpurl="flash.events:ContextMenuEvent:contextMenuOwner:get"/>
                <string name="isMouseTargetInaccessible" object="[flash.events.ContextMenuEvent]" text=".isMouseTargetInaccessible" tiptext="Indicates whether the mouseTarget property was set to null for security reasons." version="" playername="" helpurl="flash.events:ContextMenuEvent:isMouseTargetInaccessible:get"/>
                <string name="mouseTarget" object="[flash.events.ContextMenuEvent]" text=".mouseTarget" tiptext="The display list object on which the user right-clicked to display the context menu." version="" playername="" helpurl="flash.events:ContextMenuEvent:mouseTarget:get"/>
            </folder>
        </folder>
        <folder name="DataEvent" id="[flash.events.DataEvent]" sort="true" index="true" asAncestors="flash.events:TextEvent,flash.events:Event,Object" tiptext="An object dispatches a DataEvent object when raw data has completed loading." helpurl="flash.events:DataEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class DataEvent" helpurl="flash.events:DataEvent">
                <string name="DataEvent" object="[flash.events.DataEvent]" text="new DataEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,data:String]%)" constructor="true" tiptext="Constructor for DataEvent objects." version="4" playername="" helpurl="flash.events:DataEvent:DataEvent"/>
                <string name="clone" object="[flash.events.DataEvent]" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of the DataEvent object and sets the value of each property to match that of theoriginal." version="4" playername="" helpurl="flash.events:DataEvent:clone"/>
                <string name="toString" object="[flash.events.DataEvent]" text=".toString(%%):String" tiptext="Returns a string that contains all the properties of the DataEvent object." version="4" playername="" helpurl="flash.events:DataEvent:toString"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class DataEvent" helpurl="flash.events:DataEvent">
                <string name="DATA" object="[flash.events.DataEvent]" text="DataEvent.DATA" constant="true" tiptext="Defines the value of the type property of a data event object." version="" playername="" helpurl="flash.events:DataEvent:DATA"/>
                <string name="UPLOAD_COMPLETE_DATA" object="[flash.events.DataEvent]" text="DataEvent.UPLOAD_COMPLETE_DATA" constant="true" tiptext="Defines the value of the type property of an uploadCompleteData event object." version="" playername="" helpurl="flash.events:DataEvent:UPLOAD_COMPLETE_DATA"/>
                <string name="data" object="[flash.events.DataEvent]" text=".data" tiptext="The raw data loaded into Flash Player or Adobe AIR." version="" playername="" helpurl="flash.events:DataEvent:data:get"/>
            </folder>
        </folder>
        <folder name="DatagramSocketDataEvent" id="[flash.events.DatagramSocketDataEvent]" sort="true" index="true" asAncestors="flash.events:Event,Object" tiptext="A DatagramSocketDataEvent object is dispatched when Datagram socket has received data." helpurl="flash.events:DatagramSocketDataEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class DatagramSocketDataEvent" helpurl="flash.events:DatagramSocketDataEvent">
                <string name="DatagramSocketDataEvent" object="[flash.events.DatagramSocketDataEvent]" text="new DatagramSocketDataEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,srcAddress:String,srcPort:int=0,dstAddress:String,dstPort:int=0,data:flash.utils:ByteArray=null]%)" constructor="true" tiptext="Creates an Event object that contains information about datagram events." version="2" playername="AIR" helpurl="flash.events:DatagramSocketDataEvent:DatagramSocketDataEvent"/>
                <string name="clone" object="[flash.events.DatagramSocketDataEvent]" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of the DatagramSocketDataEvent object and sets each property&apos;s value to match that of the original." version="2" playername="AIR" helpurl="flash.events:DatagramSocketDataEvent:clone"/>
                <string name="toString" object="[flash.events.DatagramSocketDataEvent]" text=".toString(%%):String" tiptext="Returns a string that contains all the properties of the DatagramSocketDataEvent object." version="2" playername="AIR" helpurl="flash.events:DatagramSocketDataEvent:toString"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class DatagramSocketDataEvent" helpurl="flash.events:DatagramSocketDataEvent">
                <string name="DATA" object="[flash.events.DatagramSocketDataEvent]" text="DatagramSocketDataEvent.DATA" constant="true" tiptext="Defines the value of the type property of a data event object." version="" playername="AIR" helpurl="flash.events:DatagramSocketDataEvent:DATA"/>
                <string name="data" object="[flash.events.DatagramSocketDataEvent]" text=".data" tiptext="The datagram packet data." version="" playername="AIR" helpurl="flash.events:DatagramSocketDataEvent:data:get"/>
                <string name="dstAddress" object="[flash.events.DatagramSocketDataEvent]" text=".dstAddress" tiptext="The IP address of the DatagramSocket object that dispatched this event." version="" playername="AIR" helpurl="flash.events:DatagramSocketDataEvent:dstAddress:get"/>
                <string name="dstPort" object="[flash.events.DatagramSocketDataEvent]" text=".dstPort" tiptext="The port of the DatagramSocket object that dispatched this event." version="" playername="AIR" helpurl="flash.events:DatagramSocketDataEvent:dstPort:get"/>
                <string name="srcAddress" object="[flash.events.DatagramSocketDataEvent]" text=".srcAddress" tiptext="The IP address of the machine that sent the packet." version="" playername="AIR" helpurl="flash.events:DatagramSocketDataEvent:srcAddress:get"/>
                <string name="srcPort" object="[flash.events.DatagramSocketDataEvent]" text=".srcPort" tiptext="The port on the machine that sent the packet." version="" playername="AIR" helpurl="flash.events:DatagramSocketDataEvent:srcPort:get"/>
            </folder>
        </folder>
        <folder name="DNSResolverEvent" id="[flash.events.DNSResolverEvent]" sort="true" index="true" asAncestors="flash.events:Event,Object" tiptext="The DNSResolverEvent class represents the results of a Domain Name System (DNS) lookup operation." helpurl="flash.events:DNSResolverEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class DNSResolverEvent" helpurl="flash.events:DNSResolverEvent">
                <string name="DNSResolverEvent" object="[flash.events.DNSResolverEvent]" text="new DNSResolverEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,host:String,resourceRecords:Array=null]%)" constructor="true" tiptext="Creates an DNSResolverEvent object that contains the results of a DNS lookup operation." version="2" playername="AIR" helpurl="flash.events:DNSResolverEvent:DNSResolverEvent"/>
                <string name="clone" object="[flash.events.DNSResolverEvent]" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of the DNSResolverEvent object and sets the value of each property to match that of the original." version="2" playername="AIR" helpurl="flash.events:DNSResolverEvent:clone"/>
                <string name="toString" object="[flash.events.DNSResolverEvent]" text=".toString(%%):String" tiptext="Returns a string that contains all the properties of the DNSResolverEvent object." version="2" playername="AIR" helpurl="flash.events:DNSResolverEvent:toString"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class DNSResolverEvent" helpurl="flash.events:DNSResolverEvent">
                <string name="LOOKUP" object="[flash.events.DNSResolverEvent]" text="DNSResolverEvent.LOOKUP" constant="true" tiptext="Defines the value of the type property of a lookup event object." version="" playername="AIR" helpurl="flash.events:DNSResolverEvent:LOOKUP"/>
                <string name="host" object="[flash.events.DNSResolverEvent]" text=".host" tiptext="The query string, such as a host name, IP address, or service locator used in the call to the lookup() method of the DNSResolver class for which this event is a response." version="" playername="AIR" helpurl="flash.events:DNSResolverEvent:host:get"/>
                <string name="resourceRecords" object="[flash.events.DNSResolverEvent]" text=".resourceRecords" tiptext="An array containing the resource records returned by the DNS lookup operation." version="" playername="AIR" helpurl="flash.events:DNSResolverEvent:resourceRecords:get"/>
            </folder>
        </folder>
        <folder name="DRMAuthenticateEvent" id="[flash.events.DRMAuthenticateEvent]" sort="true" index="true" asAncestors="flash.events:Event,Object" tiptext="A NetStream object dispatchs a DRMAuthenticateEvent object when attempting to play digital rights management (DRM) encrypted content that requires a user credential for authentication." helpurl="flash.events:DRMAuthenticateEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class DRMAuthenticateEvent" helpurl="flash.events:DRMAuthenticateEvent">
                <string name="DRMAuthenticateEvent" object="[flash.events.DRMAuthenticateEvent]" text="new DRMAuthenticateEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,header:String,userPrompt:String,passPrompt:String,urlPrompt:String,authenticationType:String,netstream:flash.net:NetStream=null]%)" constructor="true" tiptext="Creates an Event object that contains specific information about DRM authentication events." version="1.0" playername="AIR" helpurl="flash.events:DRMAuthenticateEvent:DRMAuthenticateEvent"/>
                <string name="clone" object="[flash.events.DRMAuthenticateEvent]" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of the DRMAuthenticateEvent object and sets the value of each property to matchthat of the original." version="1.0" playername="AIR" helpurl="flash.events:DRMAuthenticateEvent:clone"/>
                <string name="toString" object="[flash.events.DRMAuthenticateEvent]" text=".toString(%%):String" tiptext="Returns a string that contains all the properties of the DRMAuthenticateEvent object." version="1.0" playername="AIR" helpurl="flash.events:DRMAuthenticateEvent:toString"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class DRMAuthenticateEvent" helpurl="flash.events:DRMAuthenticateEvent">
                <string name="AUTHENTICATION_TYPE_DRM" object="[flash.events.DRMAuthenticateEvent]" text="DRMAuthenticateEvent.AUTHENTICATION_TYPE_DRM" constant="true" tiptext="The DRMAuthenticateEvent.AUTHENTICATION_TYPE_DRM constant defines the value of the authenticationType property of a DRMAuthenticateEvent object." version="" playername="AIR" helpurl="flash.events:DRMAuthenticateEvent:AUTHENTICATION_TYPE_DRM"/>
                <string name="AUTHENTICATION_TYPE_PROXY" object="[flash.events.DRMAuthenticateEvent]" text="DRMAuthenticateEvent.AUTHENTICATION_TYPE_PROXY" constant="true" tiptext="The DRMAuthenticateEvent.AUTHENTICATION_TYPE_PROXY constant defines the value of the authenticationType property of a DRMAuthenticateEvent object." version="" playername="AIR" helpurl="flash.events:DRMAuthenticateEvent:AUTHENTICATION_TYPE_PROXY"/>
                <string name="DRM_AUTHENTICATE" object="[flash.events.DRMAuthenticateEvent]" text="DRMAuthenticateEvent.DRM_AUTHENTICATE" constant="true" tiptext="The DRMAuthenticateEvent.DRM_AUTHENTICATE constant defines the value of the type property of a DRMAuthenticateEvent object." version="" playername="AIR" helpurl="flash.events:DRMAuthenticateEvent:DRM_AUTHENTICATE"/>
                <string name="authenticationType" object="[flash.events.DRMAuthenticateEvent]" text=".authenticationType" tiptext="Indicates whether the supplied credentials are for authenticating against Flash Media Rights Management Server (FMRMS)or a proxy server." version="" playername="AIR" helpurl="flash.events:DRMAuthenticateEvent:authenticationType:get"/>
                <string name="header" object="[flash.events.DRMAuthenticateEvent]" text=".header" tiptext="The encrypted content file header provided by the server." version="" playername="AIR" helpurl="flash.events:DRMAuthenticateEvent:header:get"/>
                <string name="netstream" object="[flash.events.DRMAuthenticateEvent]" text=".netstream" tiptext="The NetStream object that initiated this event." version="" playername="AIR" helpurl="flash.events:DRMAuthenticateEvent:netstream:get"/>
                <string name="passwordPrompt" object="[flash.events.DRMAuthenticateEvent]" text=".passwordPrompt" tiptext="A prompt for a password credential, provided by the server." version="" playername="AIR" helpurl="flash.events:DRMAuthenticateEvent:passwordPrompt:get"/>
                <string name="urlPrompt" object="[flash.events.DRMAuthenticateEvent]" text=".urlPrompt" tiptext="A prompt for a URL string, provided by the server." version="" playername="AIR" helpurl="flash.events:DRMAuthenticateEvent:urlPrompt:get"/>
                <string name="usernamePrompt" object="[flash.events.DRMAuthenticateEvent]" text=".usernamePrompt" tiptext="A prompt for a user name credential, provided by the server." version="" playername="AIR" helpurl="flash.events:DRMAuthenticateEvent:usernamePrompt:get"/>
            </folder>
        </folder>
        <folder name="DRMAuthenticationCompleteEvent" id="[flash.events.DRMAuthenticationCompleteEvent]" sort="true" index="true" asAncestors="flash.events:Event,Object" tiptext="The DRMManager dispatches a DRMAuthenticationCompleteEvent object when a call to the authenticate() method of the DRMManager object succeeds." helpurl="flash.events:DRMAuthenticationCompleteEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class DRMAuthenticationCompleteEvent" helpurl="flash.events:DRMAuthenticationCompleteEvent">
                <string name="DRMAuthenticationCompleteEvent" object="[flash.events.DRMAuthenticationCompleteEvent]" text="new DRMAuthenticationCompleteEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,inServerURL:String=null,inDomain:String=null,inToken:flash.utils:ByteArray=null]%)" constructor="true" tiptext="Creates a new instance of a DRMAuthenticationCompleteEvent object." version="10.1" playername="" helpurl="flash.events:DRMAuthenticationCompleteEvent:DRMAuthenticationCompleteEvent"/>
                <string name="clone" object="[flash.events.DRMAuthenticationCompleteEvent]" text=".clone(%%):flash.events:Event" tiptext="Duplicates an instance of an Event subclass." version="" playername="" helpurl="flash.events:DRMAuthenticationCompleteEvent:clone"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class DRMAuthenticationCompleteEvent" helpurl="flash.events:DRMAuthenticationCompleteEvent">
                <string name="AUTHENTICATION_COMPLETE" object="[flash.events.DRMAuthenticationCompleteEvent]" text="DRMAuthenticationCompleteEvent.AUTHENTICATION_COMPLETE" constant="true" tiptext="The string constant to use for the authentication complete event in the type parameter when adding and removing event listeners." version="" playername="" helpurl="flash.events:DRMAuthenticationCompleteEvent:AUTHENTICATION_COMPLETE"/>
                <string name="domain" object="[flash.events.DRMAuthenticationCompleteEvent]" text=".domain" tiptext="The content domain of the media rights server." version="" playername="" helpurl="flash.events:DRMAuthenticationCompleteEvent:domain:get"/>
                <string name="serverURL" object="[flash.events.DRMAuthenticationCompleteEvent]" text=".serverURL" tiptext="The URL of the media rights server." version="" playername="" helpurl="flash.events:DRMAuthenticationCompleteEvent:serverURL:get"/>
                <string name="token" object="[flash.events.DRMAuthenticationCompleteEvent]" text=".token" tiptext="The authentication token." version="" playername="" helpurl="flash.events:DRMAuthenticationCompleteEvent:token:get"/>
            </folder>
        </folder>
        <folder name="DRMAuthenticationErrorEvent" id="[flash.events.DRMAuthenticationErrorEvent]" sort="true" index="true" asAncestors="flash.events:ErrorEvent,flash.events:TextEvent,flash.events:Event,Object" tiptext="The DRMManager dispatches a DRMAuthenticationErrorEvent object when a call to the authenticate() method of the DRMManager object fails." helpurl="flash.events:DRMAuthenticationErrorEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class DRMAuthenticationErrorEvent" helpurl="flash.events:DRMAuthenticationErrorEvent">
                <string name="DRMAuthenticationErrorEvent" object="[flash.events.DRMAuthenticationErrorEvent]" text="new DRMAuthenticationErrorEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,inDetail:String,inErrorID:int=0,inSubErrorID:int=0,inServerURL:String=null,inDomain:String=null]%)" constructor="true" tiptext="Creates a new instance of a DRMAuthenticationErrorEvent object." version="10.1" playername="" helpurl="flash.events:DRMAuthenticationErrorEvent:DRMAuthenticationErrorEvent"/>
                <string name="clone" object="[flash.events.DRMAuthenticationErrorEvent]" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of the ErrorEvent object and sets the value of each property to match that of the original." version="" playername="" helpurl="flash.events:DRMAuthenticationErrorEvent:clone"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class DRMAuthenticationErrorEvent" helpurl="flash.events:DRMAuthenticationErrorEvent">
                <string name="AUTHENTICATION_ERROR" object="[flash.events.DRMAuthenticationErrorEvent]" text="DRMAuthenticationErrorEvent.AUTHENTICATION_ERROR" constant="true" tiptext="The string constant to use for the authentication error event in the type parameter when adding and removing event listeners." version="" playername="" helpurl="flash.events:DRMAuthenticationErrorEvent:AUTHENTICATION_ERROR"/>
                <string name="domain" object="[flash.events.DRMAuthenticationErrorEvent]" text=".domain" tiptext="The content domain of the media rights server." version="" playername="" helpurl="flash.events:DRMAuthenticationErrorEvent:domain:get"/>
                <string name="serverURL" object="[flash.events.DRMAuthenticationErrorEvent]" text=".serverURL" tiptext="The URL of the media rights server that rejected the authentication attempt." version="" playername="" helpurl="flash.events:DRMAuthenticationErrorEvent:serverURL:get"/>
                <string name="subErrorID" object="[flash.events.DRMAuthenticationErrorEvent]" text=".subErrorID" tiptext="A more detailed error code." version="" playername="" helpurl="flash.events:DRMAuthenticationErrorEvent:subErrorID:get"/>
            </folder>
        </folder>
        <folder name="DRMErrorEvent" id="[flash.events.DRMErrorEvent]" sort="true" index="true" asAncestors="flash.events:ErrorEvent,flash.events:TextEvent,flash.events:Event,Object" tiptext="The DRMErrorEvent class provides information about errors that occur when playing digital rights management (DRM) encrypted files." helpurl="flash.events:DRMErrorEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class DRMErrorEvent" helpurl="flash.events:DRMErrorEvent">
                <string name="DRMErrorEvent" object="[flash.events.DRMErrorEvent]" text="new DRMErrorEvent(%[type:String=unknown,bubbles:Boolean=false,cancelable:Boolean=false,inErrorDetail:String,inErrorCode:int=0,insubErrorID:int=0,inMetadata:flash.net.drm:DRMContentData=null,inSystemUpdateNeeded:Boolean=false,inDrmUpdateNeeded:Boolean=false]%)" constructor="true" tiptext="Creates an Event object that contains specific information about DRM error events." version="10.1" playername="" helpurl="flash.events:DRMErrorEvent:DRMErrorEvent"/>
                <string name="clone" object="[flash.events.DRMErrorEvent]" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of the DRMErrorEvent object and sets the value of each property to matchthat of the original." version="10.1" playername="" helpurl="flash.events:DRMErrorEvent:clone"/>
                <string name="toString" object="[flash.events.DRMErrorEvent]" text=".toString(%%):String" tiptext="Returns a string that contains all the properties of the DRMErrorEvent object." version="10.1" playername="" helpurl="flash.events:DRMErrorEvent:toString"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class DRMErrorEvent" helpurl="flash.events:DRMErrorEvent">
                <string name="DRM_ERROR" object="[flash.events.DRMErrorEvent]" text="DRMErrorEvent.DRM_ERROR" constant="true" tiptext="The DRMErrorEvent.DRM_ERROR constant defines the value of the type property of a drmError event object." version="" playername="" helpurl="flash.events:DRMErrorEvent:DRM_ERROR"/>
                <string name="contentData" object="[flash.events.DRMErrorEvent]" text=".contentData" tiptext="The DRMContentData for the media file." version="" playername="" helpurl="flash.events:DRMErrorEvent:contentData:get"/>
                <string name="drmUpdateNeeded" object="[flash.events.DRMErrorEvent]" text=".drmUpdateNeeded" tiptext="Indicates whether a DRM update is needed to play the DRM-protected content." version="" playername="" helpurl="flash.events:DRMErrorEvent:drmUpdateNeeded:get"/>
                <string name="subErrorID" object="[flash.events.DRMErrorEvent]" text=".subErrorID" tiptext="An error ID that indicates more detailed information about the underlying problem." version="" playername="" helpurl="flash.events:DRMErrorEvent:subErrorID:get"/>
                <string name="systemUpdateNeeded" object="[flash.events.DRMErrorEvent]" text=".systemUpdateNeeded" tiptext="Indicates whether a system update is needed to play the DRM-protected content." version="" playername="" helpurl="flash.events:DRMErrorEvent:systemUpdateNeeded:get"/>
            </folder>
        </folder>
        <folder name="DRMStatusEvent" id="[flash.events.DRMStatusEvent]" sort="true" index="true" asAncestors="flash.events:Event,Object" tiptext="A NetStream object dispatches a DRMStatusEvent object when the content protected using digital rights management (DRM) begins playing successfully (when the voucher isverified, and when the user is authenticated and authorized to view the content)." helpurl="flash.events:DRMStatusEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class DRMStatusEvent" helpurl="flash.events:DRMStatusEvent">
                <string name="DRMStatusEvent" object="[flash.events.DRMStatusEvent]" text="new DRMStatusEvent(%[type:String=unknown,bubbles:Boolean=false,cancelable:Boolean=false,inMetadata:flash.net.drm:DRMContentData=null,inVoucher:flash.net.drm:DRMVoucher=null,inLocal:Boolean=false]%)" constructor="true" tiptext="Creates an Event object that contains specific information about DRM status events." version="10.1" playername="" helpurl="flash.events:DRMStatusEvent:DRMStatusEvent"/>
                <string name="clone" object="[flash.events.DRMStatusEvent]" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of the DRMStatusEvent object and sets the value of each property to matchthat of the original." version="1.0" playername="AIR" helpurl="flash.events:DRMStatusEvent:clone"/>
                <string name="toString" object="[flash.events.DRMStatusEvent]" text=".toString(%%):String" tiptext="Returns a string that contains all the properties of the DRMStatusEvent object." version="1.0" playername="AIR" helpurl="flash.events:DRMStatusEvent:toString"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class DRMStatusEvent" helpurl="flash.events:DRMStatusEvent">
                <string name="DRM_STATUS" object="[flash.events.DRMStatusEvent]" text="DRMStatusEvent.DRM_STATUS" constant="true" tiptext="The DRMStatusEvent.DRM_STATUS constant defines the value of the type property of a drmStatus event object." version="" playername="" helpurl="flash.events:DRMStatusEvent:DRM_STATUS"/>
                <string name="contentData" object="[flash.events.DRMStatusEvent]" text=".contentData" tiptext="A DRMContentData object containing the information necessary to obtain a voucher for viewing the DRM-protected content." version="" playername="" helpurl="flash.events:DRMStatusEvent:contentData:get"/>
                <string name="detail" object="[flash.events.DRMStatusEvent]" text=".detail" tiptext="A string explaining the context of the status event." version="" playername="AIR" helpurl="flash.events:DRMStatusEvent:detail:get"/>
                <string name="isAnonymous" object="[flash.events.DRMStatusEvent]" text=".isAnonymous" tiptext="Indicates whether the content, protected with digital rights management (DRM) encryption, is availablewithout requiring a user to provide authentication credentials." version="" playername="AIR" helpurl="flash.events:DRMStatusEvent:isAnonymous:get"/>
                <string name="isAvailableOffline" object="[flash.events.DRMStatusEvent]" text=".isAvailableOffline" tiptext="Indicates whether the content, protected with digital rights management (DRM) encryption, is availableoffline." version="" playername="AIR" helpurl="flash.events:DRMStatusEvent:isAvailableOffline:get"/>
                <string name="isLocal" object="[flash.events.DRMStatusEvent]" text=".isLocal" tiptext="Indicates whether the voucher is cached in the local voucher store." version="" playername="" helpurl="flash.events:DRMStatusEvent:isLocal:get"/>
                <string name="offlineLeasePeriod" object="[flash.events.DRMStatusEvent]" text=".offlineLeasePeriod" tiptext="The remaining number of days that content can be viewed offline." version="" playername="AIR" helpurl="flash.events:DRMStatusEvent:offlineLeasePeriod:get"/>
                <string name="policies" object="[flash.events.DRMStatusEvent]" text=".policies" tiptext="A custom object of the DRM status event." version="" playername="AIR" helpurl="flash.events:DRMStatusEvent:policies:get"/>
                <string name="voucherEndDate" object="[flash.events.DRMStatusEvent]" text=".voucherEndDate" tiptext="The absolute date on which the voucher expires and the content can no longer be viewed by users." version="" playername="AIR" helpurl="flash.events:DRMStatusEvent:voucherEndDate:get"/>
                <string name="voucher" object="[flash.events.DRMStatusEvent]" text=".voucher" tiptext="A DRMVoucher object for the content." version="" playername="" helpurl="flash.events:DRMStatusEvent:voucher:get"/>
            </folder>
        </folder>
        <folder name="ErrorEvent" id="[flash.events.ErrorEvent]" sort="true" index="true" asAncestors="flash.events:TextEvent,flash.events:Event,Object" tiptext="An object dispatches an ErrorEvent object when an error causes an asynchronous operation to fail." helpurl="flash.events:ErrorEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class ErrorEvent" helpurl="flash.events:ErrorEvent">
                <string name="ErrorEvent" object="[flash.events.ErrorEvent]" text="new ErrorEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,text:String,id:int=0]%)" constructor="true" tiptext="Constructor for ErrorEvent objects." version="4" playername="" helpurl="flash.events:ErrorEvent:ErrorEvent"/>
                <string name="clone" object="[flash.events.ErrorEvent]" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of the ErrorEvent object and sets the value of each property to match that of the original." version="4" playername="" helpurl="flash.events:ErrorEvent:clone"/>
                <string name="toString" object="[flash.events.ErrorEvent]" text=".toString(%%):String" tiptext="Returns a string that contains all the properties of the ErrorEvent object." version="4" playername="" helpurl="flash.events:ErrorEvent:toString"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class ErrorEvent" helpurl="flash.events:ErrorEvent">
                <string name="ERROR" object="[flash.events.ErrorEvent]" text="ErrorEvent.ERROR" constant="true" tiptext="Defines the value of the type property of an error event object." version="" playername="" helpurl="flash.events:ErrorEvent:ERROR"/>
                <string name="errorID" object="[flash.events.ErrorEvent]" text=".errorID" tiptext="Contains the reference number associated with the specific error." version="" playername="" helpurl="flash.events:ErrorEvent:errorID:get"/>
            </folder>
        </folder>
        <folder name="Event" id="[flash.events.Event]" sort="true" index="true" asAncestors="Object" tiptext="The Event class is used as the base class for the creation of Event objects, which are passed as parameters to event listeners when an event occurs." helpurl="flash.events:Event">
            <folder name="Methods" id="Methods" tiptext="Methods for class Event" helpurl="flash.events:Event">
                <string name="Event" object="[flash.events.Event]" text="new Event(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false]%)" constructor="true" tiptext="Used to create new Event object." version="4" playername="" helpurl="flash.events:Event:Event"/>
                <string name="clone" object="[flash.events.Event]" text=".clone(%%):flash.events:Event" tiptext="Duplicates an instance of an Event subclass." version="4" playername="" helpurl="flash.events:Event:clone"/>
                <string name="formatToString" object="[flash.events.Event]" text=".formatToString(%className:String,arguments:restParam%):String" tiptext="A utility function for implementing the toString() method in custom ActionScript 3.0 Event classes." version="4" playername="" helpurl="flash.events:Event:formatToString"/>
                <string name="isDefaultPrevented" object="[flash.events.Event]" text=".isDefaultPrevented(%%):Boolean" tiptext="Checks whether the preventDefault() method has been called on the event." version="4" playername="" helpurl="flash.events:Event:isDefaultPrevented"/>
                <string name="preventDefault" object="[flash.events.Event]" text=".preventDefault(%%):void" tiptext="Cancels an event&apos;s default behavior if that behavior can be canceled." version="4" playername="" helpurl="flash.events:Event:preventDefault"/>
                <string name="stopImmediatePropagation" object="[flash.events.Event]" text=".stopImmediatePropagation(%%):void" tiptext="Prevents processing of any event listeners in the current node and any subsequent nodes in the event flow." version="4" playername="" helpurl="flash.events:Event:stopImmediatePropagation"/>
                <string name="stopPropagation" object="[flash.events.Event]" text=".stopPropagation(%%):void" tiptext="Prevents processing of any event listeners in nodes subsequent to the current node in the event flow." version="4" playername="" helpurl="flash.events:Event:stopPropagation"/>
                <string name="toString" object="[flash.events.Event]" text=".toString(%%):String" tiptext="Returns a string containing all the properties of the Event object." version="4" playername="" helpurl="flash.events:Event:toString"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class Event" helpurl="flash.events:Event">
                <string name="ACTIVATE" object="[flash.events.Event]" text="Event.ACTIVATE" constant="true" tiptext="The ACTIVATE constant defines the value of the type property of an activate event object." version="" playername="" helpurl="flash.events:Event:ACTIVATE"/>
                <string name="ADDED_TO_STAGE" object="[flash.events.Event]" text="Event.ADDED_TO_STAGE" constant="true" tiptext="The Event.ADDED_TO_STAGE constant defines the value of the type property of an addedToStage event object." version="" playername="" helpurl="flash.events:Event:ADDED_TO_STAGE"/>
                <string name="ADDED" object="[flash.events.Event]" text="Event.ADDED" constant="true" tiptext="The Event.ADDED constant defines the value of the type property of an added event object." version="" playername="" helpurl="flash.events:Event:ADDED"/>
                <string name="CANCEL" object="[flash.events.Event]" text="Event.CANCEL" constant="true" tiptext="The Event.CANCEL constant defines the value of the type property of a cancel event object." version="" playername="" helpurl="flash.events:Event:CANCEL"/>
                <string name="CHANGE" object="[flash.events.Event]" text="Event.CHANGE" constant="true" tiptext="The Event.CHANGE constant defines the value of the type property of a change event object." version="" playername="" helpurl="flash.events:Event:CHANGE"/>
                <string name="CLEAR" object="[flash.events.Event]" text="Event.CLEAR" constant="true" tiptext="The Event.CLEAR constant efines the value of the type property of a clear event object." version="" playername="" helpurl="flash.events:Event:CLEAR"/>
                <string name="CLOSE" object="[flash.events.Event]" text="Event.CLOSE" constant="true" tiptext="The Event.CLOSE constant defines the value of the type property of a close event object." version="" playername="" helpurl="flash.events:Event:CLOSE"/>
                <string name="CLOSING" object="[flash.events.Event]" text="Event.CLOSING" constant="true" tiptext="The Event.CLOSING constant defines the value of the type property of a closing event object." version="" playername="" helpurl="flash.events:Event:CLOSING"/>
                <string name="COMPLETE" object="[flash.events.Event]" text="Event.COMPLETE" constant="true" tiptext="The Event.COMPLETE constant defines the value of the type property of a complete event object." version="" playername="" helpurl="flash.events:Event:COMPLETE"/>
                <string name="CONNECT" object="[flash.events.Event]" text="Event.CONNECT" constant="true" tiptext="The Event.CONNECT constant defines the value of the type property of a connect event object." version="" playername="" helpurl="flash.events:Event:CONNECT"/>
                <string name="COPY" object="[flash.events.Event]" text="Event.COPY" constant="true" tiptext="Defines the value of the type property of a copy event object." version="" playername="" helpurl="flash.events:Event:COPY"/>
                <string name="CUT" object="[flash.events.Event]" text="Event.CUT" constant="true" tiptext="Defines the value of the type property of a cut event object." version="" playername="" helpurl="flash.events:Event:CUT"/>
                <string name="DEACTIVATE" object="[flash.events.Event]" text="Event.DEACTIVATE" constant="true" tiptext="The Event.DEACTIVATE constant defines the value of the type property of a deactivate event object." version="" playername="" helpurl="flash.events:Event:DEACTIVATE"/>
                <string name="DISPLAYING" object="[flash.events.Event]" text="Event.DISPLAYING" constant="true" tiptext="The Event.DISPLAYING constant defines the value of the type property of a displaying event object." version="" playername="" helpurl="flash.events:Event:DISPLAYING"/>
                <string name="ENTER_FRAME" object="[flash.events.Event]" text="Event.ENTER_FRAME" constant="true" tiptext="The Event.ENTER_FRAME constant defines the value of the type property of an enterFrame event object." version="" playername="" helpurl="flash.events:Event:ENTER_FRAME"/>
                <string name="EXITING" object="[flash.events.Event]" text="Event.EXITING" constant="true" tiptext="The Event.EXITING constant defines the value of the type property of an exiting event object." version="" playername="" helpurl="flash.events:Event:EXITING"/>
                <string name="EXIT_FRAME" object="[flash.events.Event]" text="Event.EXIT_FRAME" constant="true" tiptext="The Event.EXIT_FRAME constant defines the value of the type property of an exitFrame event object." version="" playername="" helpurl="flash.events:Event:EXIT_FRAME"/>
                <string name="FRAME_CONSTRUCTED" object="[flash.events.Event]" text="Event.FRAME_CONSTRUCTED" constant="true" tiptext="The Event.FRAME_CONSTRUCTED constant defines the value of the type property of an frameConstructed event object." version="" playername="" helpurl="flash.events:Event:FRAME_CONSTRUCTED"/>
                <string name="FULLSCREEN" object="[flash.events.Event]" text="Event.FULLSCREEN" constant="true" tiptext="The Event.FULL_SCREEN constant defines the value of the type property of a fullScreen event object." version="" playername="" helpurl="flash.events:Event:FULLSCREEN"/>
                <string name="HTML_BOUNDS_CHANGE" object="[flash.events.Event]" text="Event.HTML_BOUNDS_CHANGE" constant="true" tiptext="The Event.HTML_BOUNDS_CHANGE constant defines the value of the type property of an htmlBoundsChange event object." version="" playername="" helpurl="flash.events:Event:HTML_BOUNDS_CHANGE"/>
                <string name="HTML_DOM_INITIALIZE" object="[flash.events.Event]" text="Event.HTML_DOM_INITIALIZE" constant="true" tiptext="The Event.HTML_DOM_INITIALIZE constant defines the value of the type property of an htmlDOMInitialize event object." version="" playername="" helpurl="flash.events:Event:HTML_DOM_INITIALIZE"/>
                <string name="HTML_RENDER" object="[flash.events.Event]" text="Event.HTML_RENDER" constant="true" tiptext="The Event.HTML_RENDER constant defines the value of the type property of an htmlRender event object." version="" playername="" helpurl="flash.events:Event:HTML_RENDER"/>
                <string name="ID3" object="[flash.events.Event]" text="Event.ID3" constant="true" tiptext="The Event.ID3 constant defines the value of the type property of an id3 event object." version="" playername="" helpurl="flash.events:Event:ID3"/>
                <string name="INIT" object="[flash.events.Event]" text="Event.INIT" constant="true" tiptext="The Event.INIT constant defines the value of the type property of an init event object." version="" playername="" helpurl="flash.events:Event:INIT"/>
                <string name="LOCATION_CHANGE" object="[flash.events.Event]" text="Event.LOCATION_CHANGE" constant="true" tiptext="The Event.LOCATION_CHANGE constant defines the value of the type property of a locationChange event object." version="" playername="" helpurl="flash.events:Event:LOCATION_CHANGE"/>
                <string name="MOUSE_LEAVE" object="[flash.events.Event]" text="Event.MOUSE_LEAVE" constant="true" tiptext="The Event.MOUSE_LEAVE constant defines the value of the type property of a mouseLeave event object." version="" playername="" helpurl="flash.events:Event:MOUSE_LEAVE"/>
                <string name="NETWORK_CHANGE" object="[flash.events.Event]" text="Event.NETWORK_CHANGE" constant="true" tiptext="The Event.NETWORK_CHANGE constant defines the value of the type property of a networkChange event object." version="" playername="" helpurl="flash.events:Event:NETWORK_CHANGE"/>
                <string name="OPEN" object="[flash.events.Event]" text="Event.OPEN" constant="true" tiptext="The Event.OPEN constant defines the value of the type property of an open event object." version="" playername="" helpurl="flash.events:Event:OPEN"/>
                <string name="PASTE" object="[flash.events.Event]" text="Event.PASTE" constant="true" tiptext="The Event.PASTE constant defines the value of the type property of a paste event object." version="" playername="" helpurl="flash.events:Event:PASTE"/>
                <string name="PREPARING" object="[flash.events.Event]" text="Event.PREPARING" constant="true" tiptext="The Event.PREPARING constant defines the value of the type property of a preparing event object." version="" playername="AIR" helpurl="flash.events:Event:PREPARING"/>
                <string name="REMOVED_FROM_STAGE" object="[flash.events.Event]" text="Event.REMOVED_FROM_STAGE" constant="true" tiptext="The Event.REMOVED_FROM_STAGE constant defines the value of the type property of a removedFromStage event object." version="" playername="" helpurl="flash.events:Event:REMOVED_FROM_STAGE"/>
                <string name="REMOVED" object="[flash.events.Event]" text="Event.REMOVED" constant="true" tiptext="The Event.REMOVED constant defines the value of the type property ofa removed event object." version="" playername="" helpurl="flash.events:Event:REMOVED"/>
                <string name="RENDER" object="[flash.events.Event]" text="Event.RENDER" constant="true" tiptext="The Event.RENDER constant defines the value of the type property of a render event object." version="" playername="" helpurl="flash.events:Event:RENDER"/>
                <string name="RESIZE" object="[flash.events.Event]" text="Event.RESIZE" constant="true" tiptext="The Event.RESIZE constant defines the value of the type property of a resize event object." version="" playername="" helpurl="flash.events:Event:RESIZE"/>
                <string name="SCROLL" object="[flash.events.Event]" text="Event.SCROLL" constant="true" tiptext="The Event.SCROLL constant defines the value of the type property of a scroll event object." version="" playername="" helpurl="flash.events:Event:SCROLL"/>
                <string name="SELECT_ALL" object="[flash.events.Event]" text="Event.SELECT_ALL" constant="true" tiptext="The Event.SELECT_ALL constant defines the value of the type property of a selectAll event object." version="" playername="" helpurl="flash.events:Event:SELECT_ALL"/>
                <string name="SELECT" object="[flash.events.Event]" text="Event.SELECT" constant="true" tiptext="The Event.SELECT constant defines the value of the type property of a select event object." version="" playername="" helpurl="flash.events:Event:SELECT"/>
                <string name="SOUND_COMPLETE" object="[flash.events.Event]" text="Event.SOUND_COMPLETE" constant="true" tiptext="The Event.SOUND_COMPLETE constant defines the value of the type property of a soundComplete event object." version="" playername="" helpurl="flash.events:Event:SOUND_COMPLETE"/>
                <string name="STANDARD_ERROR_CLOSE" object="[flash.events.Event]" text="Event.STANDARD_ERROR_CLOSE" constant="true" tiptext="The Event.STANDARD_ERROR_CLOSE constant defines the value of the type property of a standardErrorClose event object." version="" playername="" helpurl="flash.events:Event:STANDARD_ERROR_CLOSE"/>
                <string name="STANDARD_INPUT_CLOSE" object="[flash.events.Event]" text="Event.STANDARD_INPUT_CLOSE" constant="true" tiptext="The Event.STANDARD_INPUT_CLOSE constant defines the value of the type property of a standardInputClose event object." version="" playername="" helpurl="flash.events:Event:STANDARD_INPUT_CLOSE"/>
                <string name="STANDARD_OUTPUT_CLOSE" object="[flash.events.Event]" text="Event.STANDARD_OUTPUT_CLOSE" constant="true" tiptext="The Event.STANDARD_OUTPUT_CLOSE constant defines the value of the type property of a standardOutputClose event object." version="" playername="" helpurl="flash.events:Event:STANDARD_OUTPUT_CLOSE"/>
                <string name="TAB_CHILDREN_CHANGE" object="[flash.events.Event]" text="Event.TAB_CHILDREN_CHANGE" constant="true" tiptext="The Event.TAB_CHILDREN_CHANGE constant defines the value of the type property of a tabChildrenChange event object." version="" playername="" helpurl="flash.events:Event:TAB_CHILDREN_CHANGE"/>
                <string name="TAB_ENABLED_CHANGE" object="[flash.events.Event]" text="Event.TAB_ENABLED_CHANGE" constant="true" tiptext="The Event.TAB_ENABLED_CHANGE constant defines the value of the type property of a tabEnabledChange event object." version="" playername="" helpurl="flash.events:Event:TAB_ENABLED_CHANGE"/>
                <string name="TAB_INDEX_CHANGE" object="[flash.events.Event]" text="Event.TAB_INDEX_CHANGE" constant="true" tiptext="The Event.TAB_INDEX_CHANGE constant defines the value of the type property of a tabIndexChange event object." version="" playername="" helpurl="flash.events:Event:TAB_INDEX_CHANGE"/>
                <string name="TEXT_INTERACTION_MODE_CHANGE" object="[flash.events.Event]" text="Event.TEXT_INTERACTION_MODE_CHANGE" constant="true" tiptext="The Event.TEXT_INTERACTION_MODE_CHANGE constant defines the value of the type property of a interaction mode event object." version="" playername="" helpurl="flash.events:Event:TEXT_INTERACTION_MODE_CHANGE"/>
                <string name="UNLOAD" object="[flash.events.Event]" text="Event.UNLOAD" constant="true" tiptext="The Event.UNLOAD constant defines the value of the type property of an unload event object." version="" playername="" helpurl="flash.events:Event:UNLOAD"/>
                <string name="USER_IDLE" object="[flash.events.Event]" text="Event.USER_IDLE" constant="true" tiptext="The Event.USER_IDLE constant defines the value of the type property of a userIdle event object." version="" playername="" helpurl="flash.events:Event:USER_IDLE"/>
                <string name="USER_PRESENT" object="[flash.events.Event]" text="Event.USER_PRESENT" constant="true" tiptext="The Event.USER_PRESENT constant defines the value of the type property of a userPresent event object." version="" playername="" helpurl="flash.events:Event:USER_PRESENT"/>
                <string name="bubbles" object="[flash.events.Event]" text=".bubbles" tiptext="Indicates whether an event is a bubbling event." version="" playername="" helpurl="flash.events:Event:bubbles:get"/>
                <string name="cancelable" object="[flash.events.Event]" text=".cancelable" tiptext="Indicates whether the behavior associated with the event can be prevented." version="" playername="" helpurl="flash.events:Event:cancelable:get"/>
                <string name="currentTarget" object="[flash.events.Event]" text=".currentTarget" tiptext="The object that is actively processing the Event object with an event listener." version="" playername="" helpurl="flash.events:Event:currentTarget:get"/>
                <string name="eventPhase" object="[flash.events.Event]" text=".eventPhase" tiptext="The current phase in the event flow." version="" playername="" helpurl="flash.events:Event:eventPhase:get"/>
                <string name="target" object="[flash.events.Event]" text=".target" tiptext="The event target." version="" playername="" helpurl="flash.events:Event:target:get"/>
                <string name="type" object="[flash.events.Event]" text=".type" tiptext="The type of event." version="" playername="" helpurl="flash.events:Event:type:get"/>
            </folder>
        </folder>
        <folder name="EventDispatcher" id="[flash.events.EventDispatcher]" sort="true" index="true" asAncestors="Object" tiptext="The EventDispatcher class is the base class for all runtime classes that dispatch events." helpurl="flash.events:EventDispatcher">
            <folder name="Methods" id="Methods" tiptext="Methods for class EventDispatcher" helpurl="flash.events:EventDispatcher">
                <string name="EventDispatcher" object="[flash.events.EventDispatcher]" text="new EventDispatcher(%[target:flash.events:IEventDispatcher=null]%)" constructor="true" tiptext="Aggregates an instance of the EventDispatcher class." version="4" playername="" helpurl="flash.events:EventDispatcher:EventDispatcher"/>
                <string name="addEventListener" object="[flash.events.EventDispatcher]" text=".addEventListener(%type:String,listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Registers an event listener object with an EventDispatcher object so that the listener receives notification of an event." version="4" playername="" helpurl="flash.events:EventDispatcher:addEventListener"/>
                <string name="dispatchEvent" object="[flash.events.EventDispatcher]" text=".dispatchEvent(%event:flash.events:Event%):Boolean" tiptext="Dispatches an event into the event flow." version="4" playername="" helpurl="flash.events:EventDispatcher:dispatchEvent"/>
                <string name="hasEventListener" object="[flash.events.EventDispatcher]" text=".hasEventListener(%type:String%):Boolean" tiptext="Checks whether the EventDispatcher object has any listeners registered for a specific type of event." version="4" playername="" helpurl="flash.events:EventDispatcher:hasEventListener"/>
                <string name="removeEventListener" object="[flash.events.EventDispatcher]" text=".removeEventListener(%type:String,listener:Function[,useCapture:Boolean=false]%):void" tiptext="Removes a listener from the EventDispatcher object." version="4" playername="" helpurl="flash.events:EventDispatcher:removeEventListener"/>
                <string name="willTrigger" object="[flash.events.EventDispatcher]" text=".willTrigger(%type:String%):Boolean" tiptext="Checks whether an event listener is registered with this EventDispatcher object or any of its ancestors for the specified event type." version="4" playername="" helpurl="flash.events:EventDispatcher:willTrigger"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class EventDispatcher" helpurl="flash.events:EventDispatcher">
                <string name="deactivate" object="[flash.events.EventDispatcher]" text=".addEventListener(%type:String=Event.DEACTIVATE{Event.DEACTIVATE,Event.ACTIVATE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="[broadcast event] Dispatched when the Flash Player or AIR application operating loses system focus and is becoming inactive." version="" playername="" helpurl="flash.events:EventDispatcher_flash.events.Event.DEACTIVATE_deactivate"/>
                <string name="activate" object="[flash.events.EventDispatcher]" text=".addEventListener(%type:String=Event.ACTIVATE{Event.DEACTIVATE,Event.ACTIVATE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="[broadcast event] Dispatched when the Flash Player or AIR application gains operating system focus and becomes active." version="" playername="" helpurl="flash.events:EventDispatcher_flash.events.Event.ACTIVATE_activate"/>
            </folder>
        </folder>
        <folder name="EventPhase" id="[flash.events.EventPhase]" sort="true" index="true" asAncestors="Object" tiptext="The EventPhase class provides values for the eventPhase property of the Event class." helpurl="flash.events:EventPhase">
            <folder name="Properties" id="Properties" tiptext="Properties for class EventPhase" helpurl="flash.events:EventPhase">
                <string name="AT_TARGET" object="[flash.events.EventPhase]" text="EventPhase.AT_TARGET" constant="true" tiptext="The target phase, which is the second phase of the event flow." version="" playername="" helpurl="flash.events:EventPhase:AT_TARGET"/>
                <string name="BUBBLING_PHASE" object="[flash.events.EventPhase]" text="EventPhase.BUBBLING_PHASE" constant="true" tiptext="The bubbling phase, which is the third phase of the event flow." version="" playername="" helpurl="flash.events:EventPhase:BUBBLING_PHASE"/>
                <string name="CAPTURING_PHASE" object="[flash.events.EventPhase]" text="EventPhase.CAPTURING_PHASE" constant="true" tiptext="The capturing phase, which is the first phase of the event flow." version="" playername="" helpurl="flash.events:EventPhase:CAPTURING_PHASE"/>
            </folder>
        </folder>
        <folder name="FileListEvent" id="[flash.events.FileListEvent]" sort="true" index="true" asAncestors="flash.events:Event,Object" tiptext="A File object dispatches a FileListEvent object when a call to the getDirectoryListingAsync() method of a File object successfully enumerates a set of files and directories or when a user selects files after a call to the browseForOpenMultiple() method." helpurl="flash.events:FileListEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class FileListEvent" helpurl="flash.events:FileListEvent">
                <string name="FileListEvent" object="[flash.events.FileListEvent]" text="new FileListEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,files:Array=null]%)" constructor="true" tiptext="The constructor function for a FileListEvent object." version="1.0" playername="AIR" helpurl="flash.events:FileListEvent:FileListEvent"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class FileListEvent" helpurl="flash.events:FileListEvent">
                <string name="DIRECTORY_LISTING" object="[flash.events.FileListEvent]" text="FileListEvent.DIRECTORY_LISTING" constant="true" tiptext="The FileListEvent.DIRECTORY_LISTING constant defines the value of the type property of the event object for a directoryListing event." version="" playername="AIR" helpurl="flash.events:FileListEvent:DIRECTORY_LISTING"/>
                <string name="SELECT_MULTIPLE" object="[flash.events.FileListEvent]" text="FileListEvent.SELECT_MULTIPLE" constant="true" tiptext="The FileListEvent.SELECT_MULTIPLE constant defines the value of the type property of the event object for a selectMultiple event." version="" playername="AIR" helpurl="flash.events:FileListEvent:SELECT_MULTIPLE"/>
                <string name="files" object="[flash.events.FileListEvent]" text=".files" tiptext="An array of File objects representing the files and directories found or selected." version="" playername="AIR" helpurl="flash.events:FileListEvent:files"/>
            </folder>
        </folder>
        <folder name="FocusEvent" id="[flash.events.FocusEvent]" sort="true" index="true" asAncestors="flash.events:Event,Object" tiptext="An object dispatches a FocusEvent object when the user changes the focus from one object in the display list to another." helpurl="flash.events:FocusEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class FocusEvent" helpurl="flash.events:FocusEvent">
                <string name="FocusEvent" object="[flash.events.FocusEvent]" text="new FocusEvent(%type:String[,bubbles:Boolean=true,cancelable:Boolean=false,relatedObject:flash.display:InteractiveObject=null,shiftKey:Boolean=false,keyCode:uint=0,direction:String=none]%)" constructor="true" tiptext="Constructor for FocusEvent objects." version="4" playername="" helpurl="flash.events:FocusEvent:FocusEvent"/>
                <string name="clone" object="[flash.events.FocusEvent]" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of the FocusEvent object and sets the value of each property to match that of the original." version="4" playername="" helpurl="flash.events:FocusEvent:clone"/>
                <string name="toString" object="[flash.events.FocusEvent]" text=".toString(%%):String" tiptext="Returns a string that contains all the properties of the FocusEvent object." version="4" playername="" helpurl="flash.events:FocusEvent:toString"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class FocusEvent" helpurl="flash.events:FocusEvent">
                <string name="FOCUS_IN" object="[flash.events.FocusEvent]" text="FocusEvent.FOCUS_IN" constant="true" tiptext="Defines the value of the type property of a focusIn event object." version="" playername="" helpurl="flash.events:FocusEvent:FOCUS_IN"/>
                <string name="FOCUS_OUT" object="[flash.events.FocusEvent]" text="FocusEvent.FOCUS_OUT" constant="true" tiptext="Defines the value of the type property of a focusOut event object." version="" playername="" helpurl="flash.events:FocusEvent:FOCUS_OUT"/>
                <string name="KEY_FOCUS_CHANGE" object="[flash.events.FocusEvent]" text="FocusEvent.KEY_FOCUS_CHANGE" constant="true" tiptext="Defines the value of the type property of a keyFocusChange event object." version="" playername="" helpurl="flash.events:FocusEvent:KEY_FOCUS_CHANGE"/>
                <string name="MOUSE_FOCUS_CHANGE" object="[flash.events.FocusEvent]" text="FocusEvent.MOUSE_FOCUS_CHANGE" constant="true" tiptext="Defines the value of the type property of a mouseFocusChange event object." version="" playername="" helpurl="flash.events:FocusEvent:MOUSE_FOCUS_CHANGE"/>
                <string name="direction" object="[flash.events.FocusEvent]" text=".direction" tiptext="Specifies direction of focus for a focusIn event." version="" playername="" helpurl="flash.events:FocusEvent:direction:get"/>
                <string name="isRelatedObjectInaccessible" object="[flash.events.FocusEvent]" text=".isRelatedObjectInaccessible" tiptext="If true, the relatedObject property is set to null for reasons related to security sandboxes." version="" playername="" helpurl="flash.events:FocusEvent:isRelatedObjectInaccessible:get"/>
                <string name="keyCode" object="[flash.events.FocusEvent]" text=".keyCode" tiptext="The key code value of the key pressed to trigger a keyFocusChange event." version="" playername="" helpurl="flash.events:FocusEvent:keyCode:get"/>
                <string name="relatedObject" object="[flash.events.FocusEvent]" text=".relatedObject" tiptext="A reference to the complementary InteractiveObject instance that is affected by thechange in focus." version="" playername="" helpurl="flash.events:FocusEvent:relatedObject:get"/>
                <string name="shiftKey" object="[flash.events.FocusEvent]" text=".shiftKey" tiptext="Indicates whether the Shift key modifier is activated, in which case the value is true." version="" playername="" helpurl="flash.events:FocusEvent:shiftKey:get"/>
            </folder>
        </folder>
        <folder name="FullScreenEvent" id="[flash.events.FullScreenEvent]" sort="true" index="true" asAncestors="flash.events:ActivityEvent,flash.events:Event,Object" tiptext="The Stage object dispatches a FullScreenEvent object whenever the Stage enters or leaves full-screen display mode." helpurl="flash.events:FullScreenEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class FullScreenEvent" helpurl="flash.events:FullScreenEvent">
                <string name="FullScreenEvent" object="[flash.events.FullScreenEvent]" text="new FullScreenEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,fullScreen:Boolean=false]%)" constructor="true" tiptext="Constructor for FullScreenEvent objects." version="4" playername="" helpurl="flash.events:FullScreenEvent:FullScreenEvent"/>
                <string name="clone" object="[flash.events.FullScreenEvent]" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of a FullScreenEvent object and sets the value of each property to match that of the original." version="4" playername="" helpurl="flash.events:FullScreenEvent:clone"/>
                <string name="toString" object="[flash.events.FullScreenEvent]" text=".toString(%%):String" tiptext="Returns a string that contains all the properties of the FullScreenEvent object." version="4" playername="" helpurl="flash.events:FullScreenEvent:toString"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class FullScreenEvent" helpurl="flash.events:FullScreenEvent">
                <string name="FULL_SCREEN" object="[flash.events.FullScreenEvent]" text="FullScreenEvent.FULL_SCREEN" constant="true" tiptext="The FullScreenEvent.FULL_SCREEN constant defines the value of the type property of a fullScreen event object." version="" playername="" helpurl="flash.events:FullScreenEvent:FULL_SCREEN"/>
                <string name="fullScreen" object="[flash.events.FullScreenEvent]" text=".fullScreen" tiptext="Indicates whether the Stage object is in full-screen mode (true) or not (false)." version="" playername="" helpurl="flash.events:FullScreenEvent:fullScreen:get"/>
            </folder>
        </folder>
        <folder name="GeolocationEvent" id="[flash.events.GeolocationEvent]" sort="true" index="true" asAncestors="flash.events:Event,Object" tiptext="A Geolocation object dispatches GeolocationEvent objects when it receives updates from the location sensor installed on the device." helpurl="flash.events:GeolocationEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class GeolocationEvent" helpurl="flash.events:GeolocationEvent">
                <string name="GeolocationEvent" object="[flash.events.GeolocationEvent]" text="new GeolocationEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,latitude:Number=0,longitude:Number=0,altitude:Number=0,hAccuracy:Number=0,vAccuracy:Number=0,speed:Number=0,heading:Number=0,timestamp:Number=0]%)" constructor="true" tiptext="Constructor for GeolocationEvent objects." version="4" playername="" helpurl="flash.events:GeolocationEvent:GeolocationEvent"/>
                <string name="clone" object="[flash.events.GeolocationEvent]" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of the GeolocationEvent object and sets the value of each property to match that of the original." version="2" playername="AIR" helpurl="flash.events:GeolocationEvent:clone"/>
                <string name="toString" object="[flash.events.GeolocationEvent]" text=".toString(%%):String" tiptext="Returns a string that contains all the properties of the GeolocationEvent object." version="2" playername="AIR" helpurl="flash.events:GeolocationEvent:toString"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class GeolocationEvent" helpurl="flash.events:GeolocationEvent">
                <string name="UPDATE" object="[flash.events.GeolocationEvent]" text="GeolocationEvent.UPDATE" constant="true" tiptext="Defines the value of the type property of a GeolocationEvent event object." version="" playername="" helpurl="flash.events:GeolocationEvent:UPDATE"/>
                <string name="altitude" object="[flash.events.GeolocationEvent]" text=".altitude" tiptext="The altitude in meters." version="" playername="" helpurl="flash.events:GeolocationEvent:altitude:get"/>
                <string name="heading" object="[flash.events.GeolocationEvent]" text=".heading" tiptext="The direction of movement (with respect to true north) in integer degrees." version="" playername="" helpurl="flash.events:GeolocationEvent:heading:get"/>
                <string name="horizontalAccuracy" object="[flash.events.GeolocationEvent]" text=".horizontalAccuracy" tiptext="The horizontal accuracy in meters." version="" playername="" helpurl="flash.events:GeolocationEvent:horizontalAccuracy:get"/>
                <string name="latitude" object="[flash.events.GeolocationEvent]" text=".latitude" tiptext="The latitude in degrees." version="" playername="" helpurl="flash.events:GeolocationEvent:latitude:get"/>
                <string name="longitude" object="[flash.events.GeolocationEvent]" text=".longitude" tiptext="The longitude in degrees." version="" playername="" helpurl="flash.events:GeolocationEvent:longitude:get"/>
                <string name="speed" object="[flash.events.GeolocationEvent]" text=".speed" tiptext="The speed in meters/second." version="" playername="" helpurl="flash.events:GeolocationEvent:speed:get"/>
                <string name="timestamp" object="[flash.events.GeolocationEvent]" text=".timestamp" tiptext="The number of milliseconds at the time of the event since the runtime was initialized." version="" playername="" helpurl="flash.events:GeolocationEvent:timestamp:get"/>
                <string name="verticalAccuracy" object="[flash.events.GeolocationEvent]" text=".verticalAccuracy" tiptext="The vertical accuracy in meters." version="" playername="" helpurl="flash.events:GeolocationEvent:verticalAccuracy:get"/>
            </folder>
        </folder>
        <folder name="GestureEvent" id="[flash.events.GestureEvent]" sort="true" index="true" asAncestors="flash.events:Event,Object" tiptext="The GestureEvent class lets you handle multi-touch events on devices that detect complex user contact with the device (such as pressing two fingers on a touch screen at the same time)." helpurl="flash.events:GestureEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class GestureEvent" helpurl="flash.events:GestureEvent">
                <string name="GestureEvent" object="[flash.events.GestureEvent]" text="new GestureEvent(%type:String[,bubbles:Boolean=true,cancelable:Boolean=false,phase:String=null,localX:Number=0,localY:Number=0,ctrlKey:Boolean=false,altKey:Boolean=false,shiftKey:Boolean=false,commandKey:Boolean=false,controlKey:Boolean=false]%)" constructor="true" tiptext="Constructor for GestureEvent objects." version="4" playername="" helpurl="flash.events:GestureEvent:GestureEvent"/>
                <string name="clone" object="[flash.events.GestureEvent]" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of the GestureEvent object and sets the value of each property to match that of the original." version="4" playername="" helpurl="flash.events:GestureEvent:clone"/>
                <string name="toString" object="[flash.events.GestureEvent]" text=".toString(%%):String" tiptext="Returns a string that contains all the properties of the GestureEvent object." version="4" playername="" helpurl="flash.events:GestureEvent:toString"/>
                <string name="updateAfterEvent" object="[flash.events.GestureEvent]" text=".updateAfterEvent(%%):void" tiptext="Refreshes the Flash runtime display after processing the gesture event, in case the display list has been modified by the event handler." version="4" playername="" helpurl="flash.events:GestureEvent:updateAfterEvent"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class GestureEvent" helpurl="flash.events:GestureEvent">
                <string name="GESTURE_TWO_FINGER_TAP" object="[flash.events.GestureEvent]" text="GestureEvent.GESTURE_TWO_FINGER_TAP" constant="true" tiptext="Defines the value of the type property of a GESTURE_TWO_FINGER_TAP gesture event object." version="" playername="" helpurl="flash.events:GestureEvent:GESTURE_TWO_FINGER_TAP"/>
                <string name="altKey" object="[flash.events.GestureEvent]" text=".altKey" tiptext="Indicates whether the Alt key is active (true) or inactive (false)." version="" playername="" helpurl="flash.events:GestureEvent:altKey:get"/>
                <string name="commandKey" object="[flash.events.GestureEvent]" text=".commandKey" tiptext="Indicates whether the command key is activated (Mac only)." version="" playername="AIR" helpurl="flash.events:GestureEvent:commandKey:get"/>
                <string name="controlKey" object="[flash.events.GestureEvent]" text=".controlKey" tiptext="Indicates whether the Control key is activated on Mac and whether the Ctrl key is activated on Windows or Linux." version="" playername="" helpurl="flash.events:GestureEvent:controlKey:get"/>
                <string name="ctrlKey" object="[flash.events.GestureEvent]" text=".ctrlKey" tiptext="On Windows or Linux, indicates whether the Ctrl key is active (true) or inactive (false)." version="" playername="" helpurl="flash.events:GestureEvent:ctrlKey:get"/>
                <string name="localX" object="[flash.events.GestureEvent]" text=".localX" tiptext="The horizontal coordinate at which the event occurred relative to the containing sprite." version="" playername="" helpurl="flash.events:GestureEvent:localX:get"/>
                <string name="localY" object="[flash.events.GestureEvent]" text=".localY" tiptext="The vertical coordinate at which the event occurred relative to the containing sprite." version="" playername="" helpurl="flash.events:GestureEvent:localY:get"/>
                <string name="phase" object="[flash.events.GestureEvent]" text=".phase" tiptext="A value from the GesturePhase class indicating the progress of the touch gesture." version="" playername="" helpurl="flash.events:GestureEvent:phase:get"/>
                <string name="shiftKey" object="[flash.events.GestureEvent]" text=".shiftKey" tiptext="Indicates whether the Shift key is active (true) or inactive (false)." version="" playername="" helpurl="flash.events:GestureEvent:shiftKey:get"/>
                <string name="stageX" object="[flash.events.GestureEvent]" text=".stageX" tiptext="The horizontal coordinate at which the event occurred in global Stage coordinates." version="" playername="" helpurl="flash.events:GestureEvent:stageX:get"/>
                <string name="stageY" object="[flash.events.GestureEvent]" text=".stageY" tiptext="The vertical coordinate at which the event occurred in global Stage coordinates." version="" playername="" helpurl="flash.events:GestureEvent:stageY:get"/>
            </folder>
        </folder>
        <folder name="GesturePhase" id="[flash.events.GesturePhase]" sort="true" index="true" asAncestors="Object" tiptext="The GesturePhase class is an enumeration class of constant values for use with the GestureEvent, PressAndTapGestureEvent, and TransformGestureEvent classes." helpurl="flash.events:GesturePhase">
            <folder name="Properties" id="Properties" tiptext="Properties for class GesturePhase" helpurl="flash.events:GesturePhase">
                <string name="ALL" object="[flash.events.GesturePhase]" text="GesturePhase.ALL" constant="true" tiptext="A single value that encompasses all phases of simple gestures like two-finger-tap or swipe." version="" playername="" helpurl="flash.events:GesturePhase:ALL"/>
                <string name="BEGIN" object="[flash.events.GesturePhase]" text="GesturePhase.BEGIN" constant="true" tiptext="The beginning of a new gesture (such as touching a finger to a touch enabled screen)." version="" playername="" helpurl="flash.events:GesturePhase:BEGIN"/>
                <string name="END" object="[flash.events.GesturePhase]" text="GesturePhase.END" constant="true" tiptext="The completion of a gesture (such as lifting a finger off a touch enabled screen)." version="" playername="" helpurl="flash.events:GesturePhase:END"/>
                <string name="UPDATE" object="[flash.events.GesturePhase]" text="GesturePhase.UPDATE" constant="true" tiptext="The progress of a gesture (such as moving a finger across a touch enabled screen)." version="" playername="" helpurl="flash.events:GesturePhase:UPDATE"/>
            </folder>
        </folder>
        <folder name="HTMLUncaughtScriptExceptionEvent" id="[flash.events.HTMLUncaughtScriptExceptionEvent]" sort="true" index="true" asAncestors="flash.events:Event,Object" tiptext="An HTMLLoader object dispatches an HTMLUncaughtScriptExceptionEvent object whenever a JavaScript exceptionis thrown and not handled with a catch statement." helpurl="flash.events:HTMLUncaughtScriptExceptionEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class HTMLUncaughtScriptExceptionEvent" helpurl="flash.events:HTMLUncaughtScriptExceptionEvent">
                <string name="HTMLUncaughtScriptExceptionEvent" object="[flash.events.HTMLUncaughtScriptExceptionEvent]" text="new HTMLUncaughtScriptExceptionEvent(%exceptionValue:*%)" constructor="true" tiptext="Creates an HTMLUncaughtScriptExceptionEvent object to pass as a parameter to event listeners." version="1.0" playername="AIR" helpurl="flash.events:HTMLUncaughtScriptExceptionEvent:HTMLUncaughtScriptExceptionEvent"/>
                <string name="clone" object="[flash.events.HTMLUncaughtScriptExceptionEvent]" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of the HTMLUncaughtScriptExceptionEvent object and sets the value of each property to match that of the original." version="1.0" playername="AIR" helpurl="flash.events:HTMLUncaughtScriptExceptionEvent:clone"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class HTMLUncaughtScriptExceptionEvent" helpurl="flash.events:HTMLUncaughtScriptExceptionEvent">
                <string name="UNCAUGHT_SCRIPT_EXCEPTION" object="[flash.events.HTMLUncaughtScriptExceptionEvent]" text="HTMLUncaughtScriptExceptionEvent.UNCAUGHT_SCRIPT_EXCEPTION" constant="true" tiptext="The HTMLUncaughtScriptExceptionEvent.UNCAUGHT_SCRIPT_EXCEPTION constant defines the value of the type property of an uncaughtScriptException event object." version="" playername="AIR" helpurl="flash.events:HTMLUncaughtScriptExceptionEvent:UNCAUGHT_SCRIPT_EXCEPTION"/>
                <string name="exceptionValue" object="[flash.events.HTMLUncaughtScriptExceptionEvent]" text=".exceptionValue" tiptext="The result of evaluating the expression in the throw statement that resulted in theuncaught exception." version="" playername="AIR" helpurl="flash.events:HTMLUncaughtScriptExceptionEvent:exceptionValue"/>
                <string name="stackTrace" object="[flash.events.HTMLUncaughtScriptExceptionEvent]" text=".stackTrace" tiptext="An array of objects that represent the stack trace at the time the throw statement that resulted in the uncaught exception was executed." version="" playername="AIR" helpurl="flash.events:HTMLUncaughtScriptExceptionEvent:stackTrace:get"/>
            </folder>
        </folder>
        <folder name="HTTPStatusEvent" id="[flash.events.HTTPStatusEvent]" sort="true" index="true" asAncestors="flash.events:Event,Object" tiptext="The application dispatches HTTPStatusEvent objects when a network request returns an HTTPstatus code." helpurl="flash.events:HTTPStatusEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class HTTPStatusEvent" helpurl="flash.events:HTTPStatusEvent">
                <string name="HTTPStatusEvent" object="[flash.events.HTTPStatusEvent]" text="new HTTPStatusEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,status:int=0]%)" constructor="true" tiptext="Constructor for HTTPStatusEvent objects." version="4" playername="" helpurl="flash.events:HTTPStatusEvent:HTTPStatusEvent"/>
                <string name="clone" object="[flash.events.HTTPStatusEvent]" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of the HTTPStatusEvent object and sets the value of each property to match that of the original." version="4" playername="" helpurl="flash.events:HTTPStatusEvent:clone"/>
                <string name="toString" object="[flash.events.HTTPStatusEvent]" text=".toString(%%):String" tiptext="Returns a string that contains all the properties of the HTTPStatusEvent object." version="4" playername="" helpurl="flash.events:HTTPStatusEvent:toString"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class HTTPStatusEvent" helpurl="flash.events:HTTPStatusEvent">
                <string name="HTTP_RESPONSE_STATUS" object="[flash.events.HTTPStatusEvent]" text="HTTPStatusEvent.HTTP_RESPONSE_STATUS" constant="true" tiptext="Unlike the httpStatus event, the httpResponseStatus event is delivered before any response data." version="" playername="" helpurl="flash.events:HTTPStatusEvent:HTTP_RESPONSE_STATUS"/>
                <string name="HTTP_STATUS" object="[flash.events.HTTPStatusEvent]" text="HTTPStatusEvent.HTTP_STATUS" constant="true" tiptext="The HTTPStatusEvent.HTTP_STATUS constant defines the value of the type property of a httpStatus event object." version="" playername="" helpurl="flash.events:HTTPStatusEvent:HTTP_STATUS"/>
                <string name="responseHeaders" object="[flash.events.HTTPStatusEvent]" text=".responseHeaders" tiptext="The response headers that the response returned, as an array of URLRequestHeader objects." version="" playername="" helpurl="flash.events:HTTPStatusEvent:responseHeaders:get"/>
                <string name="responseURL" object="[flash.events.HTTPStatusEvent]" text=".responseURL" tiptext="The URL that the response was returned from." version="" playername="" helpurl="flash.events:HTTPStatusEvent:responseURL:get"/>
                <string name="status" object="[flash.events.HTTPStatusEvent]" text=".status" tiptext="The HTTP status code returned by the server." version="" playername="" helpurl="flash.events:HTTPStatusEvent:status:get"/>
            </folder>
        </folder>
        <folder name="IEventDispatcher" id="[flash.events.IEventDispatcher]" sort="true" index="true" tiptext="The IEventDispatcher interface defines methods for adding or removing event listeners, checks whether specific types of event listeners are registered, and dispatches events." helpurl="flash.events:IEventDispatcher">
            <folder name="Methods" id="Methods" tiptext="Methods for class IEventDispatcher" helpurl="flash.events:IEventDispatcher">
                <string name="addEventListener" object="[flash.events.IEventDispatcher]" text=".addEventListener(%type:String,listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Registers an event listener object with an EventDispatcher object so that the listenerreceives notification of an event." version="4" playername="" helpurl="flash.events:IEventDispatcher:addEventListener"/>
                <string name="dispatchEvent" object="[flash.events.IEventDispatcher]" text=".dispatchEvent(%event:flash.events:Event%):Boolean" tiptext="Dispatches an event into the event flow." version="4" playername="" helpurl="flash.events:IEventDispatcher:dispatchEvent"/>
                <string name="hasEventListener" object="[flash.events.IEventDispatcher]" text=".hasEventListener(%type:String%):Boolean" tiptext="Checks whether the EventDispatcher object has any listeners registered for a specific type of event." version="4" playername="" helpurl="flash.events:IEventDispatcher:hasEventListener"/>
                <string name="removeEventListener" object="[flash.events.IEventDispatcher]" text=".removeEventListener(%type:String,listener:Function[,useCapture:Boolean=false]%):void" tiptext="Removes a listener from the EventDispatcher object." version="4" playername="" helpurl="flash.events:IEventDispatcher:removeEventListener"/>
                <string name="willTrigger" object="[flash.events.IEventDispatcher]" text=".willTrigger(%type:String%):Boolean" tiptext="Checks whether an event listener is registered with this EventDispatcher object or any of its ancestors for the specified event type." version="4" playername="" helpurl="flash.events:IEventDispatcher:willTrigger"/>
            </folder>
        </folder>
        <folder name="IMEEvent" id="[flash.events.IMEEvent]" sort="true" index="true" asAncestors="flash.events:TextEvent,flash.events:Event,Object" tiptext="An IMEEvent object is dispatched when the user enters text using an input method editor (IME)." helpurl="flash.events:IMEEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class IMEEvent" helpurl="flash.events:IMEEvent">
                <string name="IMEEvent" object="[flash.events.IMEEvent]" text="new IMEEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,text:String,imeClient:flash.text.ime:IIMEClient=null]%)" constructor="true" tiptext="Constructor for IMEEvent objects." version="4" playername="" helpurl="flash.events:IMEEvent:IMEEvent"/>
                <string name="clone" object="[flash.events.IMEEvent]" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of the IMEEvent object and sets the value of each property to match that of the original." version="4" playername="" helpurl="flash.events:IMEEvent:clone"/>
                <string name="toString" object="[flash.events.IMEEvent]" text=".toString(%%):String" tiptext="Returns a string that contains all the properties of the IMEEvent object." version="4" playername="" helpurl="flash.events:IMEEvent:toString"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class IMEEvent" helpurl="flash.events:IMEEvent">
                <string name="IME_COMPOSITION" object="[flash.events.IMEEvent]" text="IMEEvent.IME_COMPOSITION" constant="true" tiptext="Defines the value of the type property of an imeComposition event object." version="" playername="" helpurl="flash.events:IMEEvent:IME_COMPOSITION"/>
                <string name="IME_START_COMPOSITION" object="[flash.events.IMEEvent]" text="IMEEvent.IME_START_COMPOSITION" constant="true" tiptext="To handle IME text input, the receiver must set the imeClient field of the event to an object that implements the IIMEClient interface." version="" playername="" helpurl="flash.events:IMEEvent:IME_START_COMPOSITION"/>
                <string name="imeClient" object="[flash.events.IMEEvent]" text=".imeClient" tiptext="Specifies an object that implements the IMEClient interface." version="" playername="" helpurl="flash.events:IMEEvent:imeClient:get"/>
            </folder>
        </folder>
        <folder name="InvokeEvent" id="[flash.events.InvokeEvent]" sort="true" index="true" asAncestors="flash.events:Event,Object" tiptext="The NativeApplication object of an AIR application dispatches an invoke event when the application is invoked." helpurl="flash.events:InvokeEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class InvokeEvent" helpurl="flash.events:InvokeEvent">
                <string name="InvokeEvent" object="[flash.events.InvokeEvent]" text="new InvokeEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,dir:flash.filesystem:File=null,argv:Array=null,reason:String=standard]%)" constructor="true" tiptext="The constructor function for the InvokeEvent class." version="1.0" playername="AIR" helpurl="flash.events:InvokeEvent:InvokeEvent"/>
                <string name="clone" object="[flash.events.InvokeEvent]" text=".clone(%%):flash.events:Event" tiptext="Creates a new copy of this event." version="1.0" playername="AIR" helpurl="flash.events:InvokeEvent:clone"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class InvokeEvent" helpurl="flash.events:InvokeEvent">
                <string name="INVOKE" object="[flash.events.InvokeEvent]" text="InvokeEvent.INVOKE" constant="true" tiptext="The InvokeEvent.INVOKE constant defines the value of the type property of an InvokeEvent object." version="" playername="AIR" helpurl="flash.events:InvokeEvent:INVOKE"/>
                <string name="arguments" object="[flash.events.InvokeEvent]" text=".arguments" tiptext="The array of string arguments passed during this invocation." version="" playername="AIR" helpurl="flash.events:InvokeEvent:arguments:get"/>
                <string name="currentDirectory" object="[flash.events.InvokeEvent]" text=".currentDirectory" tiptext="The directory that should be used to resolve any relative paths in the arguments array." version="" playername="AIR" helpurl="flash.events:InvokeEvent:currentDirectory:get"/>
                <string name="reason" object="[flash.events.InvokeEvent]" text=".reason" tiptext="The reason for this InvokeEvent." version="" playername="AIR" helpurl="flash.events:InvokeEvent:reason:get"/>
            </folder>
        </folder>
        <folder name="IOErrorEvent" id="[flash.events.IOErrorEvent]" sort="true" index="true" asAncestors="flash.events:ErrorEvent,flash.events:TextEvent,flash.events:Event,Object" tiptext="An IOErrorEvent object is dispatched when an error causes input or output operations to fail." helpurl="flash.events:IOErrorEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class IOErrorEvent" helpurl="flash.events:IOErrorEvent">
                <string name="IOErrorEvent" object="[flash.events.IOErrorEvent]" text="new IOErrorEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,text:String,id:int=0]%)" constructor="true" tiptext="Constructor for IOErrorEvent objects." version="4" playername="" helpurl="flash.events:IOErrorEvent:IOErrorEvent"/>
                <string name="clone" object="[flash.events.IOErrorEvent]" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of the IOErrorEvent object and sets the value of each property to match that of the original." version="4" playername="" helpurl="flash.events:IOErrorEvent:clone"/>
                <string name="toString" object="[flash.events.IOErrorEvent]" text=".toString(%%):String" tiptext="Returns a string that contains all the properties of the IOErrorEvent object." version="4" playername="" helpurl="flash.events:IOErrorEvent:toString"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class IOErrorEvent" helpurl="flash.events:IOErrorEvent">
                <string name="IO_ERROR" object="[flash.events.IOErrorEvent]" text="IOErrorEvent.IO_ERROR" constant="true" tiptext="Defines the value of the type property of an ioError event object." version="" playername="" helpurl="flash.events:IOErrorEvent:IO_ERROR"/>
                <string name="STANDARD_ERROR_IO_ERROR" object="[flash.events.IOErrorEvent]" text="IOErrorEvent.STANDARD_ERROR_IO_ERROR" constant="true" tiptext="The standardErrorIoError event is dispatched when an error occurs while reading data from the standardError stream of a NativeProcess object." version="" playername="" helpurl="flash.events:IOErrorEvent:STANDARD_ERROR_IO_ERROR"/>
                <string name="STANDARD_INPUT_IO_ERROR" object="[flash.events.IOErrorEvent]" text="IOErrorEvent.STANDARD_INPUT_IO_ERROR" constant="true" tiptext="The standardInputIoError event is dispatched when an error occurs while writing data to the standardInput of a NativeProcess object." version="" playername="" helpurl="flash.events:IOErrorEvent:STANDARD_INPUT_IO_ERROR"/>
                <string name="STANDARD_OUTPUT_IO_ERROR" object="[flash.events.IOErrorEvent]" text="IOErrorEvent.STANDARD_OUTPUT_IO_ERROR" constant="true" tiptext="The standardOutputIoError event is dispatched when an error occurs while reading data from the standardOutput stream of a NativeProcess object." version="" playername="" helpurl="flash.events:IOErrorEvent:STANDARD_OUTPUT_IO_ERROR"/>
            </folder>
        </folder>
        <folder name="KeyboardEvent" id="[flash.events.KeyboardEvent]" sort="true" index="true" asAncestors="flash.events:Event,Object" tiptext="A KeyboardEvent object id dispatched in response to user input through a keyboard." helpurl="flash.events:KeyboardEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class KeyboardEvent" helpurl="flash.events:KeyboardEvent">
                <string name="KeyboardEvent" object="[flash.events.KeyboardEvent]" text="new KeyboardEvent(%type:String[,bubbles:Boolean=true,cancelable:Boolean=false,charCodeValue:uint=0,keyCodeValue:uint=0,keyLocationValue:uint=0,ctrlKeyValue:Boolean=false,altKeyValue:Boolean=false,shiftKeyValue:Boolean=false,controlKeyValue:Boolean=false,commandKeyValue:Boolean=false]%)" constructor="true" tiptext="Constructor for KeyboardEvent objects." version="4" playername="" helpurl="flash.events:KeyboardEvent:KeyboardEvent"/>
                <string name="clone" object="[flash.events.KeyboardEvent]" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of the KeyboardEvent object and sets the value of each property to match that of the original." version="4" playername="" helpurl="flash.events:KeyboardEvent:clone"/>
                <string name="toString" object="[flash.events.KeyboardEvent]" text=".toString(%%):String" tiptext="Returns a string that contains all the properties of the KeyboardEvent object." version="4" playername="" helpurl="flash.events:KeyboardEvent:toString"/>
                <string name="updateAfterEvent" object="[flash.events.KeyboardEvent]" text=".updateAfterEvent(%%):void" tiptext="Indicates that the display should be rendered after processing of this event completes, if the display list has been modified" version="9" playername="" helpurl="flash.events:KeyboardEvent:updateAfterEvent"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class KeyboardEvent" helpurl="flash.events:KeyboardEvent">
                <string name="KEY_DOWN" object="[flash.events.KeyboardEvent]" text="KeyboardEvent.KEY_DOWN" constant="true" tiptext="The KeyboardEvent.KEY_DOWN constant defines the value of the type property of a keyDown event object." version="" playername="" helpurl="flash.events:KeyboardEvent:KEY_DOWN"/>
                <string name="KEY_UP" object="[flash.events.KeyboardEvent]" text="KeyboardEvent.KEY_UP" constant="true" tiptext="The KeyboardEvent.KEY_UP constant defines the value of the type property of a keyUp event object." version="" playername="" helpurl="flash.events:KeyboardEvent:KEY_UP"/>
                <string name="altKey" object="[flash.events.KeyboardEvent]" text=".altKey" tiptext="Indicates whether the Alt key is active (true) or inactive (false) on Windows; indicates whether the Option key is active on Mac OS." version="" playername="" helpurl="flash.events:KeyboardEvent:altKey:get"/>
                <string name="charCode" object="[flash.events.KeyboardEvent]" text=".charCode" tiptext="Contains the character code value of the key pressed or released." version="" playername="" helpurl="flash.events:KeyboardEvent:charCode:get"/>
                <string name="commandKey" object="[flash.events.KeyboardEvent]" text=".commandKey" tiptext="Indicates whether the Command key is active (true) or inactive (false)." version="" playername="" helpurl="flash.events:KeyboardEvent:commandKey:get"/>
                <string name="controlKey" object="[flash.events.KeyboardEvent]" text=".controlKey" tiptext="Indicates whether the Control key is active (true) or inactive (false)." version="" playername="" helpurl="flash.events:KeyboardEvent:controlKey:get"/>
                <string name="ctrlKey" object="[flash.events.KeyboardEvent]" text=".ctrlKey" tiptext="On Windows and Linux, indicates whether the Ctrl key is active (true) or inactive (false);On Mac OS, indicates whether either the Ctrl key or the Command key is active." version="" playername="" helpurl="flash.events:KeyboardEvent:ctrlKey:get"/>
                <string name="keyCode" object="[flash.events.KeyboardEvent]" text=".keyCode" tiptext="The key code value of the key pressed or released." version="" playername="" helpurl="flash.events:KeyboardEvent:keyCode:get"/>
                <string name="keyLocation" object="[flash.events.KeyboardEvent]" text=".keyLocation" tiptext="Indicates the location of the key on the keyboard." version="" playername="" helpurl="flash.events:KeyboardEvent:keyLocation:get"/>
                <string name="shiftKey" object="[flash.events.KeyboardEvent]" text=".shiftKey" tiptext="Indicates whether the Shift key modifier is active (true) or inactive (false)." version="" playername="" helpurl="flash.events:KeyboardEvent:shiftKey:get"/>
            </folder>
        </folder>
        <folder name="LocationChangeEvent" id="[flash.events.LocationChangeEvent]" sort="true" index="true" asAncestors="flash.events:Event,Object" tiptext="A StageWebView object dispatches a LocationChangeEvent object when a new page loads." helpurl="flash.events:LocationChangeEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class LocationChangeEvent" helpurl="flash.events:LocationChangeEvent">
                <string name="LocationChangeEvent" object="[flash.events.LocationChangeEvent]" text="new LocationChangeEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,location:String=null]%)" constructor="true" tiptext="Creates a LocationChangeEvent object." version="2.5" playername="AIR" helpurl="flash.events:LocationChangeEvent:LocationChangeEvent"/>
                <string name="clone" object="[flash.events.LocationChangeEvent]" text=".clone(%%):flash.events:Event" tiptext="" version="2.5" playername="AIR" helpurl="flash.events:LocationChangeEvent:clone"/>
                <string name="toString" object="[flash.events.LocationChangeEvent]" text=".toString(%%):String" tiptext="Returns a string that contains all the properties of the LocationChangeEvent object." version="2.5" playername="AIR" helpurl="flash.events:LocationChangeEvent:toString"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class LocationChangeEvent" helpurl="flash.events:LocationChangeEvent">
                <string name="LOCATION_CHANGE" object="[flash.events.LocationChangeEvent]" text="LocationChangeEvent.LOCATION_CHANGE" constant="true" tiptext="Dispatched after every location change." version="" playername="AIR" helpurl="flash.events:LocationChangeEvent:LOCATION_CHANGE"/>
                <string name="LOCATION_CHANGING" object="[flash.events.LocationChangeEvent]" text="LocationChangeEvent.LOCATION_CHANGING" constant="true" tiptext="Dispatched before a location change that is initiated via the content displayedin a StageWebView object." version="" playername="AIR" helpurl="flash.events:LocationChangeEvent:LOCATION_CHANGING"/>
                <string name="location" object="[flash.events.LocationChangeEvent]" text=".location" tiptext="The destination URL of the change." version="" playername="AIR" helpurl="flash.events:LocationChangeEvent:location:get"/>
            </folder>
        </folder>
        <folder name="MediaEvent" id="[flash.events.MediaEvent]" sort="true" index="true" asAncestors="flash.events:Event,Object" tiptext="CameraRoll and CameraUI classes dispatch MediaEvent objects when a media stream is available." helpurl="flash.events:MediaEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class MediaEvent" helpurl="flash.events:MediaEvent">
                <string name="MediaEvent" object="[flash.events.MediaEvent]" text="new MediaEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,data:flash.media:MediaPromise=null]%)" constructor="true" tiptext="Constructor for MediaEvent objects." version="2.5" playername="AIR" helpurl="flash.events:MediaEvent:MediaEvent"/>
                <string name="clone" object="[flash.events.MediaEvent]" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of an MediaEvent object and sets the value of each property to match that of the original." version="2.5" playername="AIR" helpurl="flash.events:MediaEvent:clone"/>
                <string name="toString" object="[flash.events.MediaEvent]" text=".toString(%%):String" tiptext="Returns a string that contains all the properties of MediaEvent object." version="2.5" playername="AIR" helpurl="flash.events:MediaEvent:toString"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class MediaEvent" helpurl="flash.events:MediaEvent">
                <string name="COMPLETE" object="[flash.events.MediaEvent]" text="MediaEvent.COMPLETE" constant="true" tiptext="A constant for the complete MediaEvent." version="" playername="AIR" helpurl="flash.events:MediaEvent:COMPLETE"/>
                <string name="SELECT" object="[flash.events.MediaEvent]" text="MediaEvent.SELECT" constant="true" tiptext="A constant for the select MediaEvent." version="" playername="AIR" helpurl="flash.events:MediaEvent:SELECT"/>
                <string name="data" object="[flash.events.MediaEvent]" text=".data" tiptext="The MediaPromise object for the available media file." version="" playername="AIR" helpurl="flash.events:MediaEvent:data:get"/>
            </folder>
        </folder>
        <folder name="MouseEvent" id="[flash.events.MouseEvent]" sort="true" index="true" asAncestors="flash.events:Event,Object" tiptext="A MouseEvent object is dispatched into the event flow whenever mouse events occur." helpurl="flash.events:MouseEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class MouseEvent" helpurl="flash.events:MouseEvent">
                <string name="MouseEvent" object="[flash.events.MouseEvent]" text="new MouseEvent(%type:String[,bubbles:Boolean=true,cancelable:Boolean=false,localX:Number=unknown,localY:Number=unknown,relatedObject:flash.display:InteractiveObject=null,ctrlKey:Boolean=false,altKey:Boolean=false,shiftKey:Boolean=false,buttonDown:Boolean=false,delta:int=0,commandKey:Boolean=false,controlKey:Boolean=false,clickCount:int=0]%)" constructor="true" tiptext="Constructor for MouseEvent objects." version="4" playername="" helpurl="flash.events:MouseEvent:MouseEvent"/>
                <string name="clone" object="[flash.events.MouseEvent]" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of the MouseEvent object and sets the value of each property to match that of the original." version="4" playername="" helpurl="flash.events:MouseEvent:clone"/>
                <string name="toString" object="[flash.events.MouseEvent]" text=".toString(%%):String" tiptext="Returns a string that contains all the properties of the MouseEvent object." version="4" playername="" helpurl="flash.events:MouseEvent:toString"/>
                <string name="updateAfterEvent" object="[flash.events.MouseEvent]" text=".updateAfterEvent(%%):void" tiptext="Instructs Flash Player or Adobe AIR to render after processing of this event completes, if the display list has been modified." version="9" playername="" helpurl="flash.events:MouseEvent:updateAfterEvent"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class MouseEvent" helpurl="flash.events:MouseEvent">
                <string name="CLICK" object="[flash.events.MouseEvent]" text="MouseEvent.CLICK" constant="true" tiptext="Defines the value of the type property of a click event object." version="" playername="" helpurl="flash.events:MouseEvent:CLICK"/>
                <string name="CONTEXT_MENU" object="[flash.events.MouseEvent]" text="MouseEvent.CONTEXT_MENU" constant="true" tiptext="The MouseEvent.CONTEXT_MENU constant defines the value of the type property of a contextMenu event object." version="" playername="" helpurl="flash.events:MouseEvent:CONTEXT_MENU"/>
                <string name="DOUBLE_CLICK" object="[flash.events.MouseEvent]" text="MouseEvent.DOUBLE_CLICK" constant="true" tiptext="Defines the value of the type property of a doubleClick event object." version="" playername="" helpurl="flash.events:MouseEvent:DOUBLE_CLICK"/>
                <string name="MIDDLE_CLICK" object="[flash.events.MouseEvent]" text="MouseEvent.MIDDLE_CLICK" constant="true" tiptext="Defines the value of the type property of a middleClick event object." version="" playername="" helpurl="flash.events:MouseEvent:MIDDLE_CLICK"/>
                <string name="MIDDLE_MOUSE_DOWN" object="[flash.events.MouseEvent]" text="MouseEvent.MIDDLE_MOUSE_DOWN" constant="true" tiptext="Defines the value of the type property of a middleMouseDown event object." version="" playername="" helpurl="flash.events:MouseEvent:MIDDLE_MOUSE_DOWN"/>
                <string name="MIDDLE_MOUSE_UP" object="[flash.events.MouseEvent]" text="MouseEvent.MIDDLE_MOUSE_UP" constant="true" tiptext="Defines the value of the type property of a middleMouseUp event object." version="" playername="" helpurl="flash.events:MouseEvent:MIDDLE_MOUSE_UP"/>
                <string name="MOUSE_DOWN" object="[flash.events.MouseEvent]" text="MouseEvent.MOUSE_DOWN" constant="true" tiptext="Defines the value of the type property of a mouseDown event object." version="" playername="" helpurl="flash.events:MouseEvent:MOUSE_DOWN"/>
                <string name="MOUSE_MOVE" object="[flash.events.MouseEvent]" text="MouseEvent.MOUSE_MOVE" constant="true" tiptext="Defines the value of the type property of a mouseMove event object." version="" playername="" helpurl="flash.events:MouseEvent:MOUSE_MOVE"/>
                <string name="MOUSE_OUT" object="[flash.events.MouseEvent]" text="MouseEvent.MOUSE_OUT" constant="true" tiptext="Defines the value of the type property of a mouseOut event object." version="" playername="" helpurl="flash.events:MouseEvent:MOUSE_OUT"/>
                <string name="MOUSE_OVER" object="[flash.events.MouseEvent]" text="MouseEvent.MOUSE_OVER" constant="true" tiptext="Defines the value of the type property of a mouseOver event object." version="" playername="" helpurl="flash.events:MouseEvent:MOUSE_OVER"/>
                <string name="MOUSE_UP" object="[flash.events.MouseEvent]" text="MouseEvent.MOUSE_UP" constant="true" tiptext="Defines the value of the type property of a mouseUp event object." version="" playername="" helpurl="flash.events:MouseEvent:MOUSE_UP"/>
                <string name="MOUSE_WHEEL" object="[flash.events.MouseEvent]" text="MouseEvent.MOUSE_WHEEL" constant="true" tiptext="Defines the value of the type property of a mouseWheel event object." version="" playername="" helpurl="flash.events:MouseEvent:MOUSE_WHEEL"/>
                <string name="RIGHT_CLICK" object="[flash.events.MouseEvent]" text="MouseEvent.RIGHT_CLICK" constant="true" tiptext="Defines the value of the type property of a rightClick event object." version="" playername="" helpurl="flash.events:MouseEvent:RIGHT_CLICK"/>
                <string name="RIGHT_MOUSE_DOWN" object="[flash.events.MouseEvent]" text="MouseEvent.RIGHT_MOUSE_DOWN" constant="true" tiptext="Defines the value of the type property of a rightMouseDown event object." version="" playername="" helpurl="flash.events:MouseEvent:RIGHT_MOUSE_DOWN"/>
                <string name="RIGHT_MOUSE_UP" object="[flash.events.MouseEvent]" text="MouseEvent.RIGHT_MOUSE_UP" constant="true" tiptext="Defines the value of the type property of a rightMouseUp event object." version="" playername="" helpurl="flash.events:MouseEvent:RIGHT_MOUSE_UP"/>
                <string name="ROLL_OUT" object="[flash.events.MouseEvent]" text="MouseEvent.ROLL_OUT" constant="true" tiptext="Defines the value of the type property of a rollOut event object." version="" playername="" helpurl="flash.events:MouseEvent:ROLL_OUT"/>
                <string name="ROLL_OVER" object="[flash.events.MouseEvent]" text="MouseEvent.ROLL_OVER" constant="true" tiptext="Defines the value of the type property of a rollOver event object." version="" playername="" helpurl="flash.events:MouseEvent:ROLL_OVER"/>
                <string name="altKey" object="[flash.events.MouseEvent]" text=".altKey" tiptext="Indicates whether the Alt key is active (true) or inactive (false)." version="" playername="" helpurl="flash.events:MouseEvent:altKey:get"/>
                <string name="buttonDown" object="[flash.events.MouseEvent]" text=".buttonDown" tiptext="Indicates whether the primary mouse button is pressed (true) or not (false)." version="" playername="" helpurl="flash.events:MouseEvent:buttonDown:get"/>
                <string name="clickCount" object="[flash.events.MouseEvent]" text=".clickCount" tiptext="Indicates whether or not the mouse down event is part of a multi-click sequence." version="" playername="" helpurl="flash.events:MouseEvent:clickCount:get"/>
                <string name="commandKey" object="[flash.events.MouseEvent]" text=".commandKey" tiptext="Indicates whether the command key is activated (Mac only.) The value of property commandKeywill have the same value as property ctrlKey on the Mac." version="" playername="" helpurl="flash.events:MouseEvent:commandKey:get"/>
                <string name="controlKey" object="[flash.events.MouseEvent]" text=".controlKey" tiptext="Indicates whether the Control key is activated on Mac and whether the Ctrl key is activated on Windows or Linux." version="" playername="" helpurl="flash.events:MouseEvent:controlKey:get"/>
                <string name="ctrlKey" object="[flash.events.MouseEvent]" text=".ctrlKey" tiptext="On Windows or Linux, indicates whether the Ctrl key is active (true) or inactive (false)." version="" playername="" helpurl="flash.events:MouseEvent:ctrlKey:get"/>
                <string name="delta" object="[flash.events.MouseEvent]" text=".delta" tiptext="Indicates how many lines should be scrolled for each unit the user rotates the mouse wheel." version="" playername="" helpurl="flash.events:MouseEvent:delta:get"/>
                <string name="isRelatedObjectInaccessible" object="[flash.events.MouseEvent]" text=".isRelatedObjectInaccessible" tiptext="If true, the relatedObject property is set to null for reasons related to security sandboxes." version="" playername="" helpurl="flash.events:MouseEvent:isRelatedObjectInaccessible:get"/>
                <string name="localX" object="[flash.events.MouseEvent]" text=".localX" tiptext="The horizontal coordinate at which the event occurred relative to the containing sprite." version="" playername="" helpurl="flash.events:MouseEvent:localX:get"/>
                <string name="localY" object="[flash.events.MouseEvent]" text=".localY" tiptext="The vertical coordinate at which the event occurred relative to the containing sprite." version="" playername="" helpurl="flash.events:MouseEvent:localY:get"/>
                <string name="relatedObject" object="[flash.events.MouseEvent]" text=".relatedObject" tiptext="A reference to a display list object that is related to the event." version="" playername="" helpurl="flash.events:MouseEvent:relatedObject:get"/>
                <string name="shiftKey" object="[flash.events.MouseEvent]" text=".shiftKey" tiptext="Indicates whether the Shift key is active (true) or inactive (false)." version="" playername="" helpurl="flash.events:MouseEvent:shiftKey:get"/>
                <string name="stageX" object="[flash.events.MouseEvent]" text=".stageX" tiptext="The horizontal coordinate at which the event occurred in global Stage coordinates." version="" playername="" helpurl="flash.events:MouseEvent:stageX:get"/>
                <string name="stageY" object="[flash.events.MouseEvent]" text=".stageY" tiptext="The vertical coordinate at which the event occurred in global Stage coordinates." version="" playername="" helpurl="flash.events:MouseEvent:stageY:get"/>
            </folder>
        </folder>
        <folder name="NativeDragEvent" id="[flash.events.NativeDragEvent]" sort="true" index="true" asAncestors="flash.events:MouseEvent,flash.events:Event,Object" tiptext="Native drag events are dispatched by the interactive objects involved in a drag-and-drop operation." helpurl="flash.events:NativeDragEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class NativeDragEvent" helpurl="flash.events:NativeDragEvent">
                <string name="NativeDragEvent" object="[flash.events.NativeDragEvent]" text="new NativeDragEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=true,localX:Number=unknown,localY:Number=unknown,relatedObject:flash.display:InteractiveObject=null,clipboard:flash.desktop:Clipboard=null,allowedActions:flash.desktop:NativeDragOptions=null,dropAction:String=null,controlKey:Boolean=false,altKey:Boolean=false,shiftKey:Boolean=false,commandKey:Boolean=false]%)" constructor="true" tiptext="Creates an Event object with specific information relevant to native drag-and-drop events." version="1.0" playername="AIR" helpurl="flash.events:NativeDragEvent:NativeDragEvent"/>
                <string name="clone" object="[flash.events.NativeDragEvent]" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of this NativeDragEvent object." version="1.0" playername="AIR" helpurl="flash.events:NativeDragEvent:clone"/>
                <string name="toString" object="[flash.events.NativeDragEvent]" text=".toString(%%):String" tiptext="Formats the properties of this NativeDragEvent object as a string." version="1.0" playername="AIR" helpurl="flash.events:NativeDragEvent:toString"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class NativeDragEvent" helpurl="flash.events:NativeDragEvent">
                <string name="NATIVE_DRAG_COMPLETE" object="[flash.events.NativeDragEvent]" text="NativeDragEvent.NATIVE_DRAG_COMPLETE" constant="true" tiptext="NativeDragEvent.NATIVE_DRAG_COMPLETE defines the value of the type property of a nativeDragComplete event object." version="" playername="AIR" helpurl="flash.events:NativeDragEvent:NATIVE_DRAG_COMPLETE"/>
                <string name="NATIVE_DRAG_DROP" object="[flash.events.NativeDragEvent]" text="NativeDragEvent.NATIVE_DRAG_DROP" constant="true" tiptext="NativeDragEvent.NATIVE_DRAG_DROP defines the value of the type property of a nativeDragDrop event object." version="" playername="AIR" helpurl="flash.events:NativeDragEvent:NATIVE_DRAG_DROP"/>
                <string name="NATIVE_DRAG_ENTER" object="[flash.events.NativeDragEvent]" text="NativeDragEvent.NATIVE_DRAG_ENTER" constant="true" tiptext="NativeDragEvent.NATIVE_DRAG_ENTER defines the value of the type property of a nativeDragEnter event object." version="" playername="AIR" helpurl="flash.events:NativeDragEvent:NATIVE_DRAG_ENTER"/>
                <string name="NATIVE_DRAG_EXIT" object="[flash.events.NativeDragEvent]" text="NativeDragEvent.NATIVE_DRAG_EXIT" constant="true" tiptext="NativeDragEvent.NATIVE_DRAG_EXIT defines the value of the type property of a nativeDragExit event object." version="" playername="AIR" helpurl="flash.events:NativeDragEvent:NATIVE_DRAG_EXIT"/>
                <string name="NATIVE_DRAG_OVER" object="[flash.events.NativeDragEvent]" text="NativeDragEvent.NATIVE_DRAG_OVER" constant="true" tiptext="NativeDragEvent.NATIVE_DRAG_OVER defines the value of the type property of a nativeDragOver event object." version="" playername="AIR" helpurl="flash.events:NativeDragEvent:NATIVE_DRAG_OVER"/>
                <string name="NATIVE_DRAG_START" object="[flash.events.NativeDragEvent]" text="NativeDragEvent.NATIVE_DRAG_START" constant="true" tiptext="NativeDragEvent.NATIVE_DRAG_START defines the value of the type property of a nativeDragStart event object." version="" playername="AIR" helpurl="flash.events:NativeDragEvent:NATIVE_DRAG_START"/>
                <string name="NATIVE_DRAG_UPDATE" object="[flash.events.NativeDragEvent]" text="NativeDragEvent.NATIVE_DRAG_UPDATE" constant="true" tiptext="NativeDragEvent.NATIVE_DRAG_UPDATE defines the value of the type property of a nativeDragUpdate event object." version="" playername="AIR" helpurl="flash.events:NativeDragEvent:NATIVE_DRAG_UPDATE"/>
                <string name="allowedActions" object="[flash.events.NativeDragEvent]" text=".allowedActions" tiptext="The NativeDragOptions object specifying the actions that are allowed by the display object that initiated this drag operation." version="" playername="AIR" helpurl="flash.events:NativeDragEvent:allowedActions"/>
                <string name="clipboard" object="[flash.events.NativeDragEvent]" text=".clipboard" tiptext="The Clipboard object containing the data in this drag operation." version="" playername="AIR" helpurl="flash.events:NativeDragEvent:clipboard"/>
                <string name="dropAction" object="[flash.events.NativeDragEvent]" text=".dropAction" tiptext="The current action." version="" playername="AIR" helpurl="flash.events:NativeDragEvent:dropAction"/>
            </folder>
        </folder>
        <folder name="NativeProcessExitEvent" id="[flash.events.NativeProcessExitEvent]" sort="true" index="true" asAncestors="flash.events:Event,Object" tiptext="This event is dispatched by the NativeProcess object when the process exits." helpurl="flash.events:NativeProcessExitEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class NativeProcessExitEvent" helpurl="flash.events:NativeProcessExitEvent">
                <string name="NativeProcessExitEvent" object="[flash.events.NativeProcessExitEvent]" text="new NativeProcessExitEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,exitCode:Number=unknown]%)" constructor="true" tiptext="Creates a NativeProcessExitEvent which contains specific information regarding a NativeProcess&apos;s exit code" version="2" playername="AIR" helpurl="flash.events:NativeProcessExitEvent:NativeProcessExitEvent"/>
                <string name="clone" object="[flash.events.NativeProcessExitEvent]" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of the NativeProcessExitEvent object and sets each property&apos;s value to match that of the original." version="2" playername="AIR" helpurl="flash.events:NativeProcessExitEvent:clone"/>
                <string name="toString" object="[flash.events.NativeProcessExitEvent]" text=".toString(%%):String" tiptext="Returns a string that contains all the properties of the NativeProcessExitEvent object." version="2" playername="AIR" helpurl="flash.events:NativeProcessExitEvent:toString"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class NativeProcessExitEvent" helpurl="flash.events:NativeProcessExitEvent">
                <string name="EXIT" object="[flash.events.NativeProcessExitEvent]" text="NativeProcessExitEvent.EXIT" constant="true" tiptext="Defines the value of the type property of a exit event object." version="" playername="AIR" helpurl="flash.events:NativeProcessExitEvent:EXIT"/>
                <string name="exitCode" object="[flash.events.NativeProcessExitEvent]" text=".exitCode" tiptext="The exit code that the native process returned to the host operating system when exiting." version="" playername="AIR" helpurl="flash.events:NativeProcessExitEvent:exitCode:get"/>
            </folder>
        </folder>
        <folder name="NativeWindowBoundsEvent" id="[flash.events.NativeWindowBoundsEvent]" sort="true" index="true" asAncestors="flash.events:Event,Object" tiptext="A NativeWindow object dispatches a NativeWindowBoundsEvent object when the size or location of the window changes." helpurl="flash.events:NativeWindowBoundsEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class NativeWindowBoundsEvent" helpurl="flash.events:NativeWindowBoundsEvent">
                <string name="NativeWindowBoundsEvent" object="[flash.events.NativeWindowBoundsEvent]" text="new NativeWindowBoundsEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,beforeBounds:flash.geom:Rectangle=null,afterBounds:flash.geom:Rectangle=null]%)" constructor="true" tiptext="Creates an Event object with specific information relevant to window bounds events." version="1.0" playername="AIR" helpurl="flash.events:NativeWindowBoundsEvent:NativeWindowBoundsEvent"/>
                <string name="clone" object="[flash.events.NativeWindowBoundsEvent]" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of the NativeWindowBoundsEvent object and sets the value of each property to match that of the original." version="1.0" playername="AIR" helpurl="flash.events:NativeWindowBoundsEvent:clone"/>
                <string name="toString" object="[flash.events.NativeWindowBoundsEvent]" text=".toString(%%):String" tiptext="Returns a string that contains all the properties of the NativeWindowBoundsEvent object." version="1.0" playername="AIR" helpurl="flash.events:NativeWindowBoundsEvent:toString"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class NativeWindowBoundsEvent" helpurl="flash.events:NativeWindowBoundsEvent">
                <string name="MOVE" object="[flash.events.NativeWindowBoundsEvent]" text="NativeWindowBoundsEvent.MOVE" constant="true" tiptext="Defines the value of the type property of a move event object." version="" playername="AIR" helpurl="flash.events:NativeWindowBoundsEvent:MOVE"/>
                <string name="MOVING" object="[flash.events.NativeWindowBoundsEvent]" text="NativeWindowBoundsEvent.MOVING" constant="true" tiptext="Defines the value of the type property of a moving event object." version="" playername="AIR" helpurl="flash.events:NativeWindowBoundsEvent:MOVING"/>
                <string name="RESIZE" object="[flash.events.NativeWindowBoundsEvent]" text="NativeWindowBoundsEvent.RESIZE" constant="true" tiptext="Defines the value of the type property of a resize event object." version="" playername="AIR" helpurl="flash.events:NativeWindowBoundsEvent:RESIZE"/>
                <string name="RESIZING" object="[flash.events.NativeWindowBoundsEvent]" text="NativeWindowBoundsEvent.RESIZING" constant="true" tiptext="Defines the value of the type property of a resizing event object." version="" playername="AIR" helpurl="flash.events:NativeWindowBoundsEvent:RESIZING"/>
                <string name="afterBounds" object="[flash.events.NativeWindowBoundsEvent]" text=".afterBounds" tiptext="The bounds of the window after the change." version="" playername="AIR" helpurl="flash.events:NativeWindowBoundsEvent:afterBounds:get"/>
                <string name="beforeBounds" object="[flash.events.NativeWindowBoundsEvent]" text=".beforeBounds" tiptext="The bounds of the window before the change." version="" playername="AIR" helpurl="flash.events:NativeWindowBoundsEvent:beforeBounds:get"/>
            </folder>
        </folder>
        <folder name="NativeWindowDisplayStateEvent" id="[flash.events.NativeWindowDisplayStateEvent]" sort="true" index="true" asAncestors="flash.events:Event,Object" tiptext="A NativeWindow object dispatches events of the NativeWindowDisplayStateEvent class when the window display state changes." helpurl="flash.events:NativeWindowDisplayStateEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class NativeWindowDisplayStateEvent" helpurl="flash.events:NativeWindowDisplayStateEvent">
                <string name="NativeWindowDisplayStateEvent" object="[flash.events.NativeWindowDisplayStateEvent]" text="new NativeWindowDisplayStateEvent(%type:String[,bubbles:Boolean=true,cancelable:Boolean=false,beforeDisplayState:String,afterDisplayState:String]%)" constructor="true" tiptext="Creates an Event object with specific information relevant to window display state events." version="1.0" playername="AIR" helpurl="flash.events:NativeWindowDisplayStateEvent:NativeWindowDisplayStateEvent"/>
                <string name="clone" object="[flash.events.NativeWindowDisplayStateEvent]" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of the NativeWindowDisplayStateEvent object and sets the value of each property to match that of the original." version="1.0" playername="AIR" helpurl="flash.events:NativeWindowDisplayStateEvent:clone"/>
                <string name="toString" object="[flash.events.NativeWindowDisplayStateEvent]" text=".toString(%%):String" tiptext="Returns a string that contains all the properties of the NativeWindowDisplayStateEvent object." version="1.0" playername="AIR" helpurl="flash.events:NativeWindowDisplayStateEvent:toString"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class NativeWindowDisplayStateEvent" helpurl="flash.events:NativeWindowDisplayStateEvent">
                <string name="DISPLAY_STATE_CHANGE" object="[flash.events.NativeWindowDisplayStateEvent]" text="NativeWindowDisplayStateEvent.DISPLAY_STATE_CHANGE" constant="true" tiptext="Defines the value of the type property of a displayStateChange event object." version="" playername="AIR" helpurl="flash.events:NativeWindowDisplayStateEvent:DISPLAY_STATE_CHANGE"/>
                <string name="DISPLAY_STATE_CHANGING" object="[flash.events.NativeWindowDisplayStateEvent]" text="NativeWindowDisplayStateEvent.DISPLAY_STATE_CHANGING" constant="true" tiptext="Defines the value of the type property of a displayStateChanging event object." version="" playername="AIR" helpurl="flash.events:NativeWindowDisplayStateEvent:DISPLAY_STATE_CHANGING"/>
                <string name="afterDisplayState" object="[flash.events.NativeWindowDisplayStateEvent]" text=".afterDisplayState" tiptext="The display state of the NativeWindow after the change." version="" playername="AIR" helpurl="flash.events:NativeWindowDisplayStateEvent:afterDisplayState:get"/>
                <string name="beforeDisplayState" object="[flash.events.NativeWindowDisplayStateEvent]" text=".beforeDisplayState" tiptext="The display state of the NativeWindow before the change." version="" playername="AIR" helpurl="flash.events:NativeWindowDisplayStateEvent:beforeDisplayState:get"/>
            </folder>
        </folder>
        <folder name="NetStatusEvent" id="[flash.events.NetStatusEvent]" sort="true" index="true" asAncestors="flash.events:Event,Object" tiptext="A NetConnection, NetStream, or SharedObject object dispatches NetStatusEvent objects when a it reports its status." helpurl="flash.events:NetStatusEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class NetStatusEvent" helpurl="flash.events:NetStatusEvent">
                <string name="NetStatusEvent" object="[flash.events.NetStatusEvent]" text="new NetStatusEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,info:Object=null]%)" constructor="true" tiptext="Constructor for NetStatusEvent objects." version="4" playername="" helpurl="flash.events:NetStatusEvent:NetStatusEvent"/>
                <string name="clone" object="[flash.events.NetStatusEvent]" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of the NetStatusEvent object and sets the value of each property to match that of the original." version="4" playername="" helpurl="flash.events:NetStatusEvent:clone"/>
                <string name="toString" object="[flash.events.NetStatusEvent]" text=".toString(%%):String" tiptext="Returns a string that contains all the properties of the NetStatusEvent object." version="4" playername="" helpurl="flash.events:NetStatusEvent:toString"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class NetStatusEvent" helpurl="flash.events:NetStatusEvent">
                <string name="NET_STATUS" object="[flash.events.NetStatusEvent]" text="NetStatusEvent.NET_STATUS" constant="true" tiptext="Defines the value of the type property of a netStatus event object." version="" playername="" helpurl="flash.events:NetStatusEvent:NET_STATUS"/>
                <string name="info" object="[flash.events.NetStatusEvent]" text=".info" tiptext="An object with properties that describe the object&apos;s status or error condition." version="" playername="" helpurl="flash.events:NetStatusEvent:info:get"/>
            </folder>
        </folder>
        <folder name="OutputProgressEvent" id="[flash.events.OutputProgressEvent]" sort="true" index="true" asAncestors="flash.events:Event,Object" tiptext="A FileStream object dispatches OutputProgressEvent objects as pending asynchronous file write operations are performed." helpurl="flash.events:OutputProgressEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class OutputProgressEvent" helpurl="flash.events:OutputProgressEvent">
                <string name="OutputProgressEvent" object="[flash.events.OutputProgressEvent]" text="new OutputProgressEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,bytesPending:Number=0,bytesTotal:Number=0]%)" constructor="true" tiptext="Constructor for OutputProgressEvent objects." version="1.0" playername="AIR" helpurl="flash.events:OutputProgressEvent:OutputProgressEvent"/>
                <string name="clone" object="[flash.events.OutputProgressEvent]" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of the OutputProgressEvent object and sets each property&apos;s value to match that of the original." version="1.0" playername="AIR" helpurl="flash.events:OutputProgressEvent:clone"/>
                <string name="toString" object="[flash.events.OutputProgressEvent]" text=".toString(%%):String" tiptext="Returns a string that contains all the properties of the OutputProgressEvent object." version="1.0" playername="AIR" helpurl="flash.events:OutputProgressEvent:toString"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class OutputProgressEvent" helpurl="flash.events:OutputProgressEvent">
                <string name="OUTPUT_PROGRESS" object="[flash.events.OutputProgressEvent]" text="OutputProgressEvent.OUTPUT_PROGRESS" constant="true" tiptext="Defines the value of the type property of an outputProgress event object." version="" playername="AIR" helpurl="flash.events:OutputProgressEvent:OUTPUT_PROGRESS"/>
                <string name="bytesPending" object="[flash.events.OutputProgressEvent]" text=".bytesPending" tiptext="The number of bytes not yet written when the listener processes the event." version="" playername="AIR" helpurl="flash.events:OutputProgressEvent:bytesPending:get"/>
                <string name="bytesTotal" object="[flash.events.OutputProgressEvent]" text=".bytesTotal" tiptext="The total number of bytes written so far, plus the number of pending bytes to be written." version="" playername="AIR" helpurl="flash.events:OutputProgressEvent:bytesTotal:get"/>
            </folder>
        </folder>
        <folder name="PressAndTapGestureEvent" id="[flash.events.PressAndTapGestureEvent]" sort="true" index="true" asAncestors="flash.events:GestureEvent,flash.events:Event,Object" tiptext="The PressAndTapGestureEvent class lets you handle press-and-tap gesture on touch-enabled devices." helpurl="flash.events:PressAndTapGestureEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class PressAndTapGestureEvent" helpurl="flash.events:PressAndTapGestureEvent">
                <string name="PressAndTapGestureEvent" object="[flash.events.PressAndTapGestureEvent]" text="new PressAndTapGestureEvent(%type:String[,bubbles:Boolean=true,cancelable:Boolean=false,phase:String=null,localX:Number=0,localY:Number=0,tapLocalX:Number=0,tapLocalY:Number=0,ctrlKey:Boolean=false,altKey:Boolean=false,shiftKey:Boolean=false,commandKey:Boolean=false,controlKey:Boolean=false]%)" constructor="true" tiptext="Constructor for PressAndTapGestureEvent objects." version="4" playername="" helpurl="flash.events:PressAndTapGestureEvent:PressAndTapGestureEvent"/>
                <string name="clone" object="[flash.events.PressAndTapGestureEvent]" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of the PressAndTapGestureEvent object and sets the value of each property to match that of the original." version="4" playername="" helpurl="flash.events:PressAndTapGestureEvent:clone"/>
                <string name="toString" object="[flash.events.PressAndTapGestureEvent]" text=".toString(%%):String" tiptext="Returns a string that contains all the properties of the PressAndTapGestureEvent object." version="4" playername="" helpurl="flash.events:PressAndTapGestureEvent:toString"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class PressAndTapGestureEvent" helpurl="flash.events:PressAndTapGestureEvent">
                <string name="GESTURE_PRESS_AND_TAP" object="[flash.events.PressAndTapGestureEvent]" text="PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP" constant="true" tiptext="Defines the value of the type property of a GESTURE_PRESS_AND_TAP touch event object." version="" playername="" helpurl="flash.events:PressAndTapGestureEvent:GESTURE_PRESS_AND_TAP"/>
                <string name="tapLocalX" object="[flash.events.PressAndTapGestureEvent]" text=".tapLocalX" tiptext="The horizontal coordinate at which the event occurred relative to the containing interactive object." version="" playername="" helpurl="flash.events:PressAndTapGestureEvent:tapLocalX:get"/>
                <string name="tapLocalY" object="[flash.events.PressAndTapGestureEvent]" text=".tapLocalY" tiptext="The vertical coordinate at which the event occurred relative to the containing interactive object." version="" playername="" helpurl="flash.events:PressAndTapGestureEvent:tapLocalY:get"/>
                <string name="tapStageX" object="[flash.events.PressAndTapGestureEvent]" text=".tapStageX" tiptext="The horizontal coordinate at which the tap touch occurred in global Stage coordinates." version="" playername="" helpurl="flash.events:PressAndTapGestureEvent:tapStageX:get"/>
                <string name="tapStageY" object="[flash.events.PressAndTapGestureEvent]" text=".tapStageY" tiptext="The vertical coordinate at which the tap touch occurred in global Stage coordinates." version="" playername="" helpurl="flash.events:PressAndTapGestureEvent:tapStageY:get"/>
            </folder>
        </folder>
        <folder name="ProgressEvent" id="[flash.events.ProgressEvent]" sort="true" index="true" asAncestors="flash.events:Event,Object" tiptext="A ProgressEvent object is dispatched when a load operation has begun or a socket has received data." helpurl="flash.events:ProgressEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class ProgressEvent" helpurl="flash.events:ProgressEvent">
                <string name="ProgressEvent" object="[flash.events.ProgressEvent]" text="new ProgressEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,bytesLoaded:Number=0,bytesTotal:Number=0]%)" constructor="true" tiptext="Constructor for ProgressEvent objects." version="4" playername="" helpurl="flash.events:ProgressEvent:ProgressEvent"/>
                <string name="clone" object="[flash.events.ProgressEvent]" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of the ProgressEvent object and sets each property&apos;s value to match that of the original." version="4" playername="" helpurl="flash.events:ProgressEvent:clone"/>
                <string name="toString" object="[flash.events.ProgressEvent]" text=".toString(%%):String" tiptext="Returns a string that contains all the properties of the ProgressEvent object." version="4" playername="" helpurl="flash.events:ProgressEvent:toString"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class ProgressEvent" helpurl="flash.events:ProgressEvent">
                <string name="PROGRESS" object="[flash.events.ProgressEvent]" text="ProgressEvent.PROGRESS" constant="true" tiptext="Defines the value of the type property of a progress event object." version="" playername="" helpurl="flash.events:ProgressEvent:PROGRESS"/>
                <string name="SOCKET_DATA" object="[flash.events.ProgressEvent]" text="ProgressEvent.SOCKET_DATA" constant="true" tiptext="Defines the value of the type property of a socketData event object." version="" playername="" helpurl="flash.events:ProgressEvent:SOCKET_DATA"/>
                <string name="STANDARD_ERROR_DATA" object="[flash.events.ProgressEvent]" text="ProgressEvent.STANDARD_ERROR_DATA" constant="true" tiptext="Defines the value of the type property of a standardErrorData event object." version="" playername="" helpurl="flash.events:ProgressEvent:STANDARD_ERROR_DATA"/>
                <string name="STANDARD_INPUT_PROGRESS" object="[flash.events.ProgressEvent]" text="ProgressEvent.STANDARD_INPUT_PROGRESS" constant="true" tiptext="Defines the value of the type property of a standardInputProgress event object." version="" playername="" helpurl="flash.events:ProgressEvent:STANDARD_INPUT_PROGRESS"/>
                <string name="STANDARD_OUTPUT_DATA" object="[flash.events.ProgressEvent]" text="ProgressEvent.STANDARD_OUTPUT_DATA" constant="true" tiptext="Defines the value of the type property of a standardOutputData event object." version="" playername="" helpurl="flash.events:ProgressEvent:STANDARD_OUTPUT_DATA"/>
                <string name="bytesLoaded" object="[flash.events.ProgressEvent]" text=".bytesLoaded" tiptext="The number of items or bytes loaded when the listener processes the event." version="" playername="" helpurl="flash.events:ProgressEvent:bytesLoaded:get"/>
                <string name="bytesTotal" object="[flash.events.ProgressEvent]" text=".bytesTotal" tiptext="The total number of items or bytes that will be loaded if the loading process succeeds." version="" playername="" helpurl="flash.events:ProgressEvent:bytesTotal:get"/>
            </folder>
        </folder>
        <folder name="SampleDataEvent" id="[flash.events.SampleDataEvent]" sort="true" index="true" asAncestors="flash.events:Event,Object" tiptext="Dispatched when a Sound object requests new audio data or when a Microphone object has new audio data to provide." helpurl="flash.events:SampleDataEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class SampleDataEvent" helpurl="flash.events:SampleDataEvent">
                <string name="SampleDataEvent" object="[flash.events.SampleDataEvent]" text="new SampleDataEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,theposition:Number=0,thedata:flash.utils:ByteArray=null]%)" constructor="true" tiptext="Creates an event object that contains information about audio data events." version="1.5" playername="" helpurl="flash.events:SampleDataEvent:SampleDataEvent"/>
                <string name="clone" object="[flash.events.SampleDataEvent]" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of the SampleDataEvent object and sets each property&apos;s value to match that of the original." version="1.5" playername="" helpurl="flash.events:SampleDataEvent:clone"/>
                <string name="toString" object="[flash.events.SampleDataEvent]" text=".toString(%%):String" tiptext="Returns a string that contains all the properties of the SampleDataEvent object." version="1.5" playername="" helpurl="flash.events:SampleDataEvent:toString"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class SampleDataEvent" helpurl="flash.events:SampleDataEvent">
                <string name="SAMPLE_DATA" object="[flash.events.SampleDataEvent]" text="SampleDataEvent.SAMPLE_DATA" constant="true" tiptext="Defines the value of the type property of a SampleDataEvent event object." version="" playername="" helpurl="flash.events:SampleDataEvent:SAMPLE_DATA"/>
                <string name="data" object="[flash.events.SampleDataEvent]" text=".data" tiptext="The data in the audio stream." version="" playername="" helpurl="flash.events:SampleDataEvent:data:get"/>
                <string name="position" object="[flash.events.SampleDataEvent]" text=".position" tiptext="The position of the data in the audio stream." version="" playername="" helpurl="flash.events:SampleDataEvent:position:get"/>
            </folder>
        </folder>
        <folder name="ScreenMouseEvent" id="[flash.events.ScreenMouseEvent]" sort="true" index="true" asAncestors="flash.events:MouseEvent,flash.events:Event,Object" tiptext="The SystemTrayIcon object dispatches events of type ScreenMouseEvent in response to mouse interaction." helpurl="flash.events:ScreenMouseEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class ScreenMouseEvent" helpurl="flash.events:ScreenMouseEvent">
                <string name="ScreenMouseEvent" object="[flash.events.ScreenMouseEvent]" text="new ScreenMouseEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,screenX:Number=unknown,screenY:Number=unknown,ctrlKey:Boolean=false,altKey:Boolean=false,shiftKey:Boolean=false,buttonDown:Boolean=false,commandKey:Boolean=false,controlKey:Boolean=false]%)" constructor="true" tiptext="Constructor for ScreenMouseEvent objects." version="1.0" playername="AIR" helpurl="flash.events:ScreenMouseEvent:ScreenMouseEvent"/>
                <string name="clone" object="[flash.events.ScreenMouseEvent]" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of the ScreenMouseEvent object and sets the value of each property to match that of the original." version="1.0" playername="AIR" helpurl="flash.events:ScreenMouseEvent:clone"/>
                <string name="toString" object="[flash.events.ScreenMouseEvent]" text=".toString(%%):String" tiptext="Returns a string that contains all the properties of the ScreenMouseEvent object." version="1.0" playername="AIR" helpurl="flash.events:ScreenMouseEvent:toString"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class ScreenMouseEvent" helpurl="flash.events:ScreenMouseEvent">
                <string name="CLICK" object="[flash.events.ScreenMouseEvent]" text="ScreenMouseEvent.CLICK" constant="true" tiptext="The ScreenMouseEvent.CLICK constant defines the value of the type property of a click event object." version="" playername="AIR" helpurl="flash.events:ScreenMouseEvent:CLICK"/>
                <string name="MOUSE_DOWN" object="[flash.events.ScreenMouseEvent]" text="ScreenMouseEvent.MOUSE_DOWN" constant="true" tiptext="The ScreenMouseEvent.MOUSE_DOWN constant defines the value of the type property of a mouseDown event object." version="" playername="AIR" helpurl="flash.events:ScreenMouseEvent:MOUSE_DOWN"/>
                <string name="MOUSE_UP" object="[flash.events.ScreenMouseEvent]" text="ScreenMouseEvent.MOUSE_UP" constant="true" tiptext="The ScreenMouseEvent.MOUSE_UP constant defines the value of the type property of a mouseUp event object." version="" playername="AIR" helpurl="flash.events:ScreenMouseEvent:MOUSE_UP"/>
                <string name="RIGHT_CLICK" object="[flash.events.ScreenMouseEvent]" text="ScreenMouseEvent.RIGHT_CLICK" constant="true" tiptext="The ScreenMouseEvent.RIGHT_CLICK constant defines the value of the type property of a rightClick event object." version="" playername="AIR" helpurl="flash.events:ScreenMouseEvent:RIGHT_CLICK"/>
                <string name="RIGHT_MOUSE_DOWN" object="[flash.events.ScreenMouseEvent]" text="ScreenMouseEvent.RIGHT_MOUSE_DOWN" constant="true" tiptext="The ScreenMouseEvent.RIGHT_MOUSE_DOWN constant defines the value of the type property of a rightMouseDown event object." version="" playername="AIR" helpurl="flash.events:ScreenMouseEvent:RIGHT_MOUSE_DOWN"/>
                <string name="RIGHT_MOUSE_UP" object="[flash.events.ScreenMouseEvent]" text="ScreenMouseEvent.RIGHT_MOUSE_UP" constant="true" tiptext="The ScreenMouseEvent.RIGHT_MOUSE_UP constant defines the value of the type property of a rightMouseUp event object." version="" playername="AIR" helpurl="flash.events:ScreenMouseEvent:RIGHT_MOUSE_UP"/>
                <string name="screenX" object="[flash.events.ScreenMouseEvent]" text=".screenX" tiptext="The X position of the click in screen coordinates." version="" playername="AIR" helpurl="flash.events:ScreenMouseEvent:screenX:get"/>
                <string name="screenY" object="[flash.events.ScreenMouseEvent]" text=".screenY" tiptext="The Y position of the click in screen coordinates." version="" playername="AIR" helpurl="flash.events:ScreenMouseEvent:screenY:get"/>
            </folder>
        </folder>
        <folder name="SecurityErrorEvent" id="[flash.events.SecurityErrorEvent]" sort="true" index="true" asAncestors="flash.events:ErrorEvent,flash.events:TextEvent,flash.events:Event,Object" tiptext="An object dispatches a SecurityErrorEvent object to report the occurrence of a security error." helpurl="flash.events:SecurityErrorEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class SecurityErrorEvent" helpurl="flash.events:SecurityErrorEvent">
                <string name="SecurityErrorEvent" object="[flash.events.SecurityErrorEvent]" text="new SecurityErrorEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,text:String,id:int=0]%)" constructor="true" tiptext="Constructor for SecurityErrorEvent objects." version="4" playername="" helpurl="flash.events:SecurityErrorEvent:SecurityErrorEvent"/>
                <string name="clone" object="[flash.events.SecurityErrorEvent]" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of the SecurityErrorEvent object and sets the value of each property to match that of the original." version="4" playername="" helpurl="flash.events:SecurityErrorEvent:clone"/>
                <string name="toString" object="[flash.events.SecurityErrorEvent]" text=".toString(%%):String" tiptext="Returns a string that contains all the properties of the SecurityErrorEvent object." version="4" playername="" helpurl="flash.events:SecurityErrorEvent:toString"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class SecurityErrorEvent" helpurl="flash.events:SecurityErrorEvent">
                <string name="SECURITY_ERROR" object="[flash.events.SecurityErrorEvent]" text="SecurityErrorEvent.SECURITY_ERROR" constant="true" tiptext="The SecurityErrorEvent.SECURITY_ERROR constant defines the value of the type property of a securityError event object." version="" playername="" helpurl="flash.events:SecurityErrorEvent:SECURITY_ERROR"/>
            </folder>
        </folder>
        <folder name="ServerSocketConnectEvent" id="[flash.events.ServerSocketConnectEvent]" sort="true" index="true" asAncestors="flash.events:Event,Object" tiptext="A ServerSocket object dispatches a ServerSocketConnectEvent object when a client attempts to connect to the server socket." helpurl="flash.events:ServerSocketConnectEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class ServerSocketConnectEvent" helpurl="flash.events:ServerSocketConnectEvent">
                <string name="ServerSocketConnectEvent" object="[flash.events.ServerSocketConnectEvent]" text="new ServerSocketConnectEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,socket:flash.net:Socket=null]%)" constructor="true" tiptext="Creates a ServerSocketConnectEvent object that contains information about a client connection." version="2" playername="AIR" helpurl="flash.events:ServerSocketConnectEvent:ServerSocketConnectEvent"/>
                <string name="clone" object="[flash.events.ServerSocketConnectEvent]" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of the ServerSocketConnectEvent object and sets each property&apos;s value to match that of the original." version="2" playername="AIR" helpurl="flash.events:ServerSocketConnectEvent:clone"/>
                <string name="toString" object="[flash.events.ServerSocketConnectEvent]" text=".toString(%%):String" tiptext="Returns a string that contains all the properties of the ServerSocketConnectEvent object." version="2" playername="AIR" helpurl="flash.events:ServerSocketConnectEvent:toString"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class ServerSocketConnectEvent" helpurl="flash.events:ServerSocketConnectEvent">
                <string name="CONNECT" object="[flash.events.ServerSocketConnectEvent]" text="ServerSocketConnectEvent.CONNECT" constant="true" tiptext="Defines the value of the type property of a ServerSocketConnectEvent event object." version="" playername="AIR" helpurl="flash.events:ServerSocketConnectEvent:CONNECT"/>
                <string name="socket" object="[flash.events.ServerSocketConnectEvent]" text=".socket" tiptext="The socket for the new connection." version="" playername="AIR" helpurl="flash.events:ServerSocketConnectEvent:socket:get"/>
            </folder>
        </folder>
        <folder name="ShaderEvent" id="[flash.events.ShaderEvent]" sort="true" index="true" asAncestors="flash.events:Event,Object" tiptext="A ShaderEvent is dispatched when a shader operation launched from a ShaderJob finishes." helpurl="flash.events:ShaderEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class ShaderEvent" helpurl="flash.events:ShaderEvent">
                <string name="ShaderEvent" object="[flash.events.ShaderEvent]" text="new ShaderEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,bitmap:flash.display:BitmapData=null,array:flash.utils:ByteArray=null,vector:Vector$Number=null]%)" constructor="true" tiptext="Creates a ShaderEvent object to pass to event listeners." version="1.5" playername="" helpurl="flash.events:ShaderEvent:ShaderEvent"/>
                <string name="clone" object="[flash.events.ShaderEvent]" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of the ShaderEvent object and sets the value of each property to match that of the original." version="1.5" playername="" helpurl="flash.events:ShaderEvent:clone"/>
                <string name="toString" object="[flash.events.ShaderEvent]" text=".toString(%%):String" tiptext="Returns a string that contains all the properties of the ShaderEvent object." version="1.5" playername="" helpurl="flash.events:ShaderEvent:toString"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class ShaderEvent" helpurl="flash.events:ShaderEvent">
                <string name="COMPLETE" object="[flash.events.ShaderEvent]" text="ShaderEvent.COMPLETE" constant="true" tiptext="Defines the value of the type property of a complete event object." version="" playername="" helpurl="flash.events:ShaderEvent:COMPLETE"/>
                <string name="bitmapData" object="[flash.events.ShaderEvent]" text=".bitmapData" tiptext="The BitmapData object that was passed to the ShaderJob.start() method." version="" playername="" helpurl="flash.events:ShaderEvent:bitmapData:get"/>
                <string name="byteArray" object="[flash.events.ShaderEvent]" text=".byteArray" tiptext="The ByteArray object that was passed to the ShaderJob.start() method." version="" playername="" helpurl="flash.events:ShaderEvent:byteArray:get"/>
                <string name="vector" object="[flash.events.ShaderEvent]" text=".vector" tiptext="The Vector.&amp;lt;Number&amp;gt; object that was passed to the ShaderJob.start() method." version="" playername="" helpurl="flash.events:ShaderEvent:vector:get"/>
            </folder>
        </folder>
        <folder name="SoftKeyboardEvent" id="[flash.events.SoftKeyboardEvent]" sort="true" index="true" asAncestors="flash.events:Event,Object" tiptext="A SoftKeyboardEvent object is dispatched when a software-driven keyboard is activated or de-activated on a device or operating system." helpurl="flash.events:SoftKeyboardEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class SoftKeyboardEvent" helpurl="flash.events:SoftKeyboardEvent">
                <string name="SoftKeyboardEvent" object="[flash.events.SoftKeyboardEvent]" text="new SoftKeyboardEvent(%type:String,bubbles:Boolean,cancelable:Boolean,relatedObjectVal:flash.display:InteractiveObject,triggerTypeVal:String%)" constructor="true" tiptext="Constructor for SoftKeyboardEvent objects." version="2.6" playername="" helpurl="flash.events:SoftKeyboardEvent:SoftKeyboardEvent"/>
                <string name="clone" object="[flash.events.SoftKeyboardEvent]" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of a SoftKeyboardEvent object." version="2.6" playername="" helpurl="flash.events:SoftKeyboardEvent:clone"/>
                <string name="toString" object="[flash.events.SoftKeyboardEvent]" text=".toString(%%):String" tiptext="Returns a string that contains all the properties of the SoftKeyboardEvent object." version="2.6" playername="" helpurl="flash.events:SoftKeyboardEvent:toString"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class SoftKeyboardEvent" helpurl="flash.events:SoftKeyboardEvent">
                <string name="SOFT_KEYBOARD_ACTIVATE" object="[flash.events.SoftKeyboardEvent]" text="SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATE" constant="true" tiptext="The SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATE constant defines the value of the type property SoftKeyboardEvent object when a soft keyboard is displayed." version="" playername="" helpurl="flash.events:SoftKeyboardEvent:SOFT_KEYBOARD_ACTIVATE"/>
                <string name="SOFT_KEYBOARD_ACTIVATING" object="[flash.events.SoftKeyboardEvent]" text="SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATING" constant="true" tiptext="The SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATING constant defines the value of the type property SoftKeyboardEvent object immediately before a soft keyboard is displayed." version="" playername="" helpurl="flash.events:SoftKeyboardEvent:SOFT_KEYBOARD_ACTIVATING"/>
                <string name="SOFT_KEYBOARD_DEACTIVATE" object="[flash.events.SoftKeyboardEvent]" text="SoftKeyboardEvent.SOFT_KEYBOARD_DEACTIVATE" constant="true" tiptext="The SoftKeyboardEvent.SOFT_KEYBOARD_DEACTIVATE constant defines the value of the type property SoftKeyboardEvent object when a soft keyboard is lowered or hidden." version="" playername="" helpurl="flash.events:SoftKeyboardEvent:SOFT_KEYBOARD_DEACTIVATE"/>
                <string name="relatedObject" object="[flash.events.SoftKeyboardEvent]" text=".relatedObject" tiptext="A reference to a display list object that is related to the event." version="" playername="" helpurl="flash.events:SoftKeyboardEvent:relatedObject:get"/>
                <string name="triggerType" object="[flash.events.SoftKeyboardEvent]" text=".triggerType" tiptext="Indicates whether the change in keyboard status has been triggered by an application (such as programmatic use of requestSoftKeyboard()) or by the user (such as selecting a text field)." version="" playername="" helpurl="flash.events:SoftKeyboardEvent:triggerType:get"/>
            </folder>
        </folder>
        <folder name="SoftKeyboardTrigger" id="[flash.events.SoftKeyboardTrigger]" sort="true" index="true" asAncestors="Object" tiptext="The SoftKeyboardTrigger class provides enumerator values for the triggerType property of the SoftKeyboardEvent class." helpurl="flash.events:SoftKeyboardTrigger">
            <folder name="Properties" id="Properties" tiptext="Properties for class SoftKeyboardTrigger" helpurl="flash.events:SoftKeyboardTrigger">
                <string name="CONTENT_TRIGGERED" object="[flash.events.SoftKeyboardTrigger]" text="SoftKeyboardTrigger.CONTENT_TRIGGERED" constant="true" tiptext="Indicates that ActionScript invoked the event." version="" playername="" helpurl="flash.events:SoftKeyboardTrigger:CONTENT_TRIGGERED"/>
                <string name="USER_TRIGGERED" object="[flash.events.SoftKeyboardTrigger]" text="SoftKeyboardTrigger.USER_TRIGGERED" constant="true" tiptext="Indicates that user action invoked the event." version="" playername="" helpurl="flash.events:SoftKeyboardTrigger:USER_TRIGGERED"/>
            </folder>
        </folder>
        <folder name="SQLErrorEvent" id="[flash.events.SQLErrorEvent]" sort="true" index="true" asAncestors="flash.events:ErrorEvent,flash.events:TextEvent,flash.events:Event,Object" tiptext="A SQLErrorEvent instance is dispatched by a SQLConnection instance or SQLStatement instance when an error occurs while performing a database operation in asynchronous execution mode." helpurl="flash.events:SQLErrorEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class SQLErrorEvent" helpurl="flash.events:SQLErrorEvent">
                <string name="SQLErrorEvent" object="[flash.events.SQLErrorEvent]" text="new SQLErrorEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,error:flash.errors:SQLError=null]%)" constructor="true" tiptext="Used to create new SQLErrorEvent object." version="1.0" playername="AIR" helpurl="flash.events:SQLErrorEvent:SQLErrorEvent"/>
                <string name="clone" object="[flash.events.SQLErrorEvent]" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of the SQLErrorEvent object and sets the value of each property to match that of the original." version="1.0" playername="AIR" helpurl="flash.events:SQLErrorEvent:clone"/>
                <string name="toString" object="[flash.events.SQLErrorEvent]" text=".toString(%%):String" tiptext="Returns a string that contains all the properties of the SQLErrorEvent object." version="1.0" playername="AIR" helpurl="flash.events:SQLErrorEvent:toString"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class SQLErrorEvent" helpurl="flash.events:SQLErrorEvent">
                <string name="ERROR" object="[flash.events.SQLErrorEvent]" text="SQLErrorEvent.ERROR" constant="true" tiptext="The SQLErrorEvent.ERROR constant defines the value of the type property of an error event dispatched when a call to a method of a SQLConnection or SQLStatement instance completes with an error." version="" playername="AIR" helpurl="flash.events:SQLErrorEvent:ERROR"/>
                <string name="error" object="[flash.events.SQLErrorEvent]" text=".error" tiptext="A SQLError object containing detailed information about the cause of the error." version="" playername="AIR" helpurl="flash.events:SQLErrorEvent:error:get"/>
            </folder>
        </folder>
        <folder name="SQLEvent" id="[flash.events.SQLEvent]" sort="true" index="true" asAncestors="flash.events:Event,Object" tiptext="Adobe AIR dispatches SQLEvent objects when one of the operations performed by a SQLConnection or SQLStatement instance completes successfully." helpurl="flash.events:SQLEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class SQLEvent" helpurl="flash.events:SQLEvent">
                <string name="SQLEvent" object="[flash.events.SQLEvent]" text="new SQLEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false]%)" constructor="true" tiptext="Used to create new SQLEvent object." version="1.0" playername="AIR" helpurl="flash.events:SQLEvent:SQLEvent"/>
                <string name="clone" object="[flash.events.SQLEvent]" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of the SQLEvent object and sets the value of each property to match that of the original." version="1.0" playername="AIR" helpurl="flash.events:SQLEvent:clone"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class SQLEvent" helpurl="flash.events:SQLEvent">
                <string name="ANALYZE" object="[flash.events.SQLEvent]" text="SQLEvent.ANALYZE" constant="true" tiptext="The SQLEvent.ANALYZE constant defines the value of the type property of an analyze event object." version="" playername="AIR" helpurl="flash.events:SQLEvent:ANALYZE"/>
                <string name="ATTACH" object="[flash.events.SQLEvent]" text="SQLEvent.ATTACH" constant="true" tiptext="The SQLEvent.ATTACH constant defines the value of the type property of an attach event object." version="" playername="AIR" helpurl="flash.events:SQLEvent:ATTACH"/>
                <string name="BEGIN" object="[flash.events.SQLEvent]" text="SQLEvent.BEGIN" constant="true" tiptext="The SQLEvent.BEGIN constant defines the value of the type property of a begin event object." version="" playername="AIR" helpurl="flash.events:SQLEvent:BEGIN"/>
                <string name="CANCEL" object="[flash.events.SQLEvent]" text="SQLEvent.CANCEL" constant="true" tiptext="The SQLEvent.CANCEL constant defines the value of the type property of a cancel event object." version="" playername="AIR" helpurl="flash.events:SQLEvent:CANCEL"/>
                <string name="CLOSE" object="[flash.events.SQLEvent]" text="SQLEvent.CLOSE" constant="true" tiptext="The SQLEvent.CLOSE constant defines the value of the type property of a close event object." version="" playername="AIR" helpurl="flash.events:SQLEvent:CLOSE"/>
                <string name="COMMIT" object="[flash.events.SQLEvent]" text="SQLEvent.COMMIT" constant="true" tiptext="The SQLEvent.COMMIT constant defines the value of the type property of a commit event object." version="" playername="AIR" helpurl="flash.events:SQLEvent:COMMIT"/>
                <string name="COMPACT" object="[flash.events.SQLEvent]" text="SQLEvent.COMPACT" constant="true" tiptext="The SQLEvent.COMPACT constant defines the value of the type property of a compact event object." version="" playername="AIR" helpurl="flash.events:SQLEvent:COMPACT"/>
                <string name="DEANALYZE" object="[flash.events.SQLEvent]" text="SQLEvent.DEANALYZE" constant="true" tiptext="The SQLEvent.DEANALYZE constant defines the value of the type property of a deanalyze event object." version="" playername="AIR" helpurl="flash.events:SQLEvent:DEANALYZE"/>
                <string name="DETACH" object="[flash.events.SQLEvent]" text="SQLEvent.DETACH" constant="true" tiptext="The SQLEvent.DETACH constant defines the value of the type property of a detach event object." version="" playername="AIR" helpurl="flash.events:SQLEvent:DETACH"/>
                <string name="OPEN" object="[flash.events.SQLEvent]" text="SQLEvent.OPEN" constant="true" tiptext="The SQLEvent.OPEN constant defines the value of the type property of a open event object." version="" playername="AIR" helpurl="flash.events:SQLEvent:OPEN"/>
                <string name="REENCRYPT" object="[flash.events.SQLEvent]" text="SQLEvent.REENCRYPT" constant="true" tiptext="The SQLEvent.REENCRYPT constant defines the value of the type property of a reencrypt event object." version="" playername="AIR" helpurl="flash.events:SQLEvent:REENCRYPT"/>
                <string name="RELEASE_SAVEPOINT" object="[flash.events.SQLEvent]" text="SQLEvent.RELEASE_SAVEPOINT" constant="true" tiptext="The SQLEvent.RELEASE_SAVEPOINT constant defines the value of the type property of a releaseSavepoint event object." version="" playername="AIR" helpurl="flash.events:SQLEvent:RELEASE_SAVEPOINT"/>
                <string name="RESULT" object="[flash.events.SQLEvent]" text="SQLEvent.RESULT" constant="true" tiptext="The SQLEvent.RESULT constant defines the value of the type property of a result event object." version="" playername="AIR" helpurl="flash.events:SQLEvent:RESULT"/>
                <string name="ROLLBACK_TO_SAVEPOINT" object="[flash.events.SQLEvent]" text="SQLEvent.ROLLBACK_TO_SAVEPOINT" constant="true" tiptext="The SQLEvent.ROLLBACK_TO_SAVEPOINT constant defines the value of the type property of a rollbackToSavepoint event object." version="" playername="AIR" helpurl="flash.events:SQLEvent:ROLLBACK_TO_SAVEPOINT"/>
                <string name="ROLLBACK" object="[flash.events.SQLEvent]" text="SQLEvent.ROLLBACK" constant="true" tiptext="The SQLEvent.ROLLBACK constant defines the value of the type property of a rollback event object." version="" playername="AIR" helpurl="flash.events:SQLEvent:ROLLBACK"/>
                <string name="SCHEMA" object="[flash.events.SQLEvent]" text="SQLEvent.SCHEMA" constant="true" tiptext="The SQLEvent.SCHEMA constant defines the value of the type property of a schema event object." version="" playername="AIR" helpurl="flash.events:SQLEvent:SCHEMA"/>
                <string name="SET_SAVEPOINT" object="[flash.events.SQLEvent]" text="SQLEvent.SET_SAVEPOINT" constant="true" tiptext="The SQLEvent.SET_SAVEPOINT constant defines the value of the type property of a setSavepoint event object." version="" playername="AIR" helpurl="flash.events:SQLEvent:SET_SAVEPOINT"/>
            </folder>
        </folder>
        <folder name="SQLUpdateEvent" id="[flash.events.SQLUpdateEvent]" sort="true" index="true" asAncestors="flash.events:Event,Object" tiptext="A SQLUpdateEvent object is dispatched by a SQLConnection object when a data change occurs on any table associated with the SQLConnection instance." helpurl="flash.events:SQLUpdateEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class SQLUpdateEvent" helpurl="flash.events:SQLUpdateEvent">
                <string name="SQLUpdateEvent" object="[flash.events.SQLUpdateEvent]" text="new SQLUpdateEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,table:String=null,rowID:Number=0]%)" constructor="true" tiptext="Used to create new SQLUpdateEvent object." version="1.0" playername="AIR" helpurl="flash.events:SQLUpdateEvent:SQLUpdateEvent"/>
                <string name="clone" object="[flash.events.SQLUpdateEvent]" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of the SQLUpdateEvent object and sets the value of each property to match that of the original." version="1.0" playername="AIR" helpurl="flash.events:SQLUpdateEvent:clone"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class SQLUpdateEvent" helpurl="flash.events:SQLUpdateEvent">
                <string name="DELETE" object="[flash.events.SQLUpdateEvent]" text="SQLUpdateEvent.DELETE" constant="true" tiptext="The SQLUpdateEvent.DELETE constant defines the value of the type property of a SQLConnection delete event." version="" playername="AIR" helpurl="flash.events:SQLUpdateEvent:DELETE"/>
                <string name="INSERT" object="[flash.events.SQLUpdateEvent]" text="SQLUpdateEvent.INSERT" constant="true" tiptext="The SQLUpdateEvent.INSERT constant defines the value of the type property of a SQLConnection insert event." version="" playername="AIR" helpurl="flash.events:SQLUpdateEvent:INSERT"/>
                <string name="UPDATE" object="[flash.events.SQLUpdateEvent]" text="SQLUpdateEvent.UPDATE" constant="true" tiptext="The SQLUpdateEvent.UPDATE constant defines the value of the type property of a SQLConnection update event." version="" playername="AIR" helpurl="flash.events:SQLUpdateEvent:UPDATE"/>
                <string name="rowID" object="[flash.events.SQLUpdateEvent]" text=".rowID" tiptext="The unique row identifier of the row that was inserted, deleted, or updated." version="" playername="AIR" helpurl="flash.events:SQLUpdateEvent:rowID:get"/>
                <string name="table" object="[flash.events.SQLUpdateEvent]" text=".table" tiptext="The name of the table whose data change caused the event to be dispatched." version="" playername="AIR" helpurl="flash.events:SQLUpdateEvent:table:get"/>
            </folder>
        </folder>
        <folder name="StageOrientationEvent" id="[flash.events.StageOrientationEvent]" sort="true" index="true" asAncestors="flash.events:Event,Object" tiptext="A Stage object dispatches a StageOrientationEvent object when the orientation of the screen containing the stage changes." helpurl="flash.events:StageOrientationEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class StageOrientationEvent" helpurl="flash.events:StageOrientationEvent">
                <string name="StageOrientationEvent" object="[flash.events.StageOrientationEvent]" text="new StageOrientationEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,beforeOrientation:String=null,afterOrientation:String=null]%)" constructor="true" tiptext="Creates a StageOrientationEvent object with specific information relevant to stage orientation events." version="2" playername="AIR" helpurl="flash.events:StageOrientationEvent:StageOrientationEvent"/>
                <string name="clone" object="[flash.events.StageOrientationEvent]" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of the StageOrientationEvent object and sets the value of each property to match that of the original." version="2" playername="AIR" helpurl="flash.events:StageOrientationEvent:clone"/>
                <string name="toString" object="[flash.events.StageOrientationEvent]" text=".toString(%%):String" tiptext="Returns a string that contains all the properties of the StageOrientationEvent object." version="2" playername="AIR" helpurl="flash.events:StageOrientationEvent:toString"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class StageOrientationEvent" helpurl="flash.events:StageOrientationEvent">
                <string name="ORIENTATION_CHANGE" object="[flash.events.StageOrientationEvent]" text="StageOrientationEvent.ORIENTATION_CHANGE" constant="true" tiptext="The ORIENTATION_CHANGE constant defines the value of the type property of a orientationChange event object." version="" playername="AIR" helpurl="flash.events:StageOrientationEvent:ORIENTATION_CHANGE"/>
                <string name="ORIENTATION_CHANGING" object="[flash.events.StageOrientationEvent]" text="StageOrientationEvent.ORIENTATION_CHANGING" constant="true" tiptext="The ORIENTATION_CHANGING constant defines the value of the type property of a orientationChanging event object." version="" playername="AIR" helpurl="flash.events:StageOrientationEvent:ORIENTATION_CHANGING"/>
                <string name="afterOrientation" object="[flash.events.StageOrientationEvent]" text=".afterOrientation" tiptext="The orientation of the stage after the change." version="" playername="AIR" helpurl="flash.events:StageOrientationEvent:afterOrientation:get"/>
                <string name="beforeOrientation" object="[flash.events.StageOrientationEvent]" text=".beforeOrientation" tiptext="The orientation of the stage before the change." version="" playername="AIR" helpurl="flash.events:StageOrientationEvent:beforeOrientation:get"/>
            </folder>
        </folder>
        <folder name="StageVideoAvailabilityEvent" id="[flash.events.StageVideoAvailabilityEvent]" sort="true" index="true" asAncestors="flash.events:Event,Object" tiptext="This event class reports on the availability of stage video." helpurl="flash.events:StageVideoAvailabilityEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class StageVideoAvailabilityEvent" helpurl="flash.events:StageVideoAvailabilityEvent">
                <string name="StageVideoAvailabilityEvent" object="[flash.events.StageVideoAvailabilityEvent]" text="new StageVideoAvailabilityEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,availability:String=null]%)" constructor="true" tiptext="Constructor." version="10.2" playername="" helpurl="flash.events:StageVideoAvailabilityEvent:StageVideoAvailabilityEvent"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class StageVideoAvailabilityEvent" helpurl="flash.events:StageVideoAvailabilityEvent">
                <string name="STAGE_VIDEO_AVAILABILITY" object="[flash.events.StageVideoAvailabilityEvent]" text="StageVideoAvailabilityEvent.STAGE_VIDEO_AVAILABILITY" constant="true" tiptext="The identifier for the StageVideoAvailability event." version="" playername="" helpurl="flash.events:StageVideoAvailabilityEvent:STAGE_VIDEO_AVAILABILITY"/>
                <string name="availability" object="[flash.events.StageVideoAvailabilityEvent]" text=".availability" tiptext="Reports the current availability of stage video." version="" playername="" helpurl="flash.events:StageVideoAvailabilityEvent:availability:get"/>
            </folder>
        </folder>
        <folder name="StageVideoEvent" id="[flash.events.StageVideoEvent]" sort="true" index="true" asAncestors="flash.events:Event,Object" tiptext="A StageVideo object dispatches a StageVideoEvent object after a call to the play() method of the attached NetStream object." helpurl="flash.events:StageVideoEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class StageVideoEvent" helpurl="flash.events:StageVideoEvent">
                <string name="StageVideoEvent" object="[flash.events.StageVideoEvent]" text="new StageVideoEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,status:String=null,colorSpace:String=null]%)" constructor="true" tiptext="Constructor for StageVideoEvent objects." version="10.2" playername="" helpurl="flash.events:StageVideoEvent:StageVideoEvent"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class StageVideoEvent" helpurl="flash.events:StageVideoEvent">
                <string name="RENDER_STATE" object="[flash.events.StageVideoEvent]" text="StageVideoEvent.RENDER_STATE" constant="true" tiptext="The StageVideoEvent.RENDER_STATE constant defines the value of the type property of a renderState event object." version="" playername="" helpurl="flash.events:StageVideoEvent:RENDER_STATE"/>
                <string name="colorSpace" object="[flash.events.StageVideoEvent]" text=".colorSpace" tiptext="The color spaces available for displaying video in the StageVideo object." version="" playername="" helpurl="flash.events:StageVideoEvent:colorSpace:get"/>
                <string name="status" object="[flash.events.StageVideoEvent]" text=".status" tiptext="The status of the StageVideo object." version="" playername="" helpurl="flash.events:StageVideoEvent:status:get"/>
            </folder>
        </folder>
        <folder name="StatusEvent" id="[flash.events.StatusEvent]" sort="true" index="true" asAncestors="flash.events:Event,Object" tiptext="An object dispatches a StatusEvent object when a device, such as a camera or microphone, or an object such as a LocalConnection object reports its status." helpurl="flash.events:StatusEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class StatusEvent" helpurl="flash.events:StatusEvent">
                <string name="StatusEvent" object="[flash.events.StatusEvent]" text="new StatusEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,code:String,level:String]%)" constructor="true" tiptext="Constructor for StatusEvent objects." version="4" playername="" helpurl="flash.events:StatusEvent:StatusEvent"/>
                <string name="clone" object="[flash.events.StatusEvent]" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of the StatusEvent object and sets the value of each property to match that of the original." version="4" playername="" helpurl="flash.events:StatusEvent:clone"/>
                <string name="toString" object="[flash.events.StatusEvent]" text=".toString(%%):String" tiptext="Returns a string that contains all the properties of the StatusEvent object." version="4" playername="" helpurl="flash.events:StatusEvent:toString"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class StatusEvent" helpurl="flash.events:StatusEvent">
                <string name="STATUS" object="[flash.events.StatusEvent]" text="StatusEvent.STATUS" constant="true" tiptext="Defines the value of the type property of a status event object." version="" playername="" helpurl="flash.events:StatusEvent:STATUS"/>
                <string name="code" object="[flash.events.StatusEvent]" text=".code" tiptext="A description of the object&apos;s status." version="" playername="" helpurl="flash.events:StatusEvent:code:get"/>
                <string name="level" object="[flash.events.StatusEvent]" text=".level" tiptext="The category of the message, such as &quot;status&quot;, &quot;warning&quot; or &quot;error&quot;." version="" playername="" helpurl="flash.events:StatusEvent:level:get"/>
            </folder>
        </folder>
        <folder name="StorageVolumeChangeEvent" id="[flash.events.StorageVolumeChangeEvent]" sort="true" index="true" asAncestors="flash.events:Event,Object" tiptext="The StorageVolumeInfo.storageVolumeInfo object dispatches a StorageVolumeChangeEvent event object when a storage volume is mounted or unmounted." helpurl="flash.events:StorageVolumeChangeEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class StorageVolumeChangeEvent" helpurl="flash.events:StorageVolumeChangeEvent">
                <string name="StorageVolumeChangeEvent" object="[flash.events.StorageVolumeChangeEvent]" text="new StorageVolumeChangeEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,path:flash.filesystem:File=null,volume:flash.filesystem:StorageVolume=null]%)" constructor="true" tiptext="Used to create new StorageVolumeChangeEvent object." version="2" playername="AIR" helpurl="flash.events:StorageVolumeChangeEvent:StorageVolumeChangeEvent"/>
                <string name="clone" object="[flash.events.StorageVolumeChangeEvent]" text=".clone(%%):flash.events:Event" tiptext="Duplicates an instance of an Event subclass." version="2" playername="AIR" helpurl="flash.events:StorageVolumeChangeEvent:clone"/>
                <string name="toString" object="[flash.events.StorageVolumeChangeEvent]" text=".toString(%%):String" tiptext="Returns a string containing all the properties of the Event object." version="2" playername="AIR" helpurl="flash.events:StorageVolumeChangeEvent:toString"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class StorageVolumeChangeEvent" helpurl="flash.events:StorageVolumeChangeEvent">
                <string name="STORAGE_VOLUME_MOUNT" object="[flash.events.StorageVolumeChangeEvent]" text="StorageVolumeChangeEvent.STORAGE_VOLUME_MOUNT" constant="true" tiptext="The StorageVolumeChangeEvent.VOLUME_MOUNT constant defines the value of thetype property of a StorageVolumeChangeEvent when a volume is mounted." version="" playername="AIR" helpurl="flash.events:StorageVolumeChangeEvent:STORAGE_VOLUME_MOUNT"/>
                <string name="STORAGE_VOLUME_UNMOUNT" object="[flash.events.StorageVolumeChangeEvent]" text="StorageVolumeChangeEvent.STORAGE_VOLUME_UNMOUNT" constant="true" tiptext="The StorageVolumeChangeEvent.VOLUME_MOUNT constant defines the value of thetype property of a StorageVolumeChangeEvent when a volume is unmounted." version="" playername="AIR" helpurl="flash.events:StorageVolumeChangeEvent:STORAGE_VOLUME_UNMOUNT"/>
                <string name="rootDirectory" object="[flash.events.StorageVolumeChangeEvent]" text=".rootDirectory" tiptext="A File object corresponding to the root directory of the mounted volume." version="" playername="AIR" helpurl="flash.events:StorageVolumeChangeEvent:rootDirectory:get"/>
                <string name="storageVolume" object="[flash.events.StorageVolumeChangeEvent]" text=".storageVolume" tiptext="A StorageVolume object containing information about a mounted volume." version="" playername="AIR" helpurl="flash.events:StorageVolumeChangeEvent:storageVolume:get"/>
            </folder>
        </folder>
        <folder name="SyncEvent" id="[flash.events.SyncEvent]" sort="true" index="true" asAncestors="flash.events:Event,Object" tiptext="An SharedObject object representing a remote shared object dispatches a SyncEvent object when the remote shared object has been updated by the server." helpurl="flash.events:SyncEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class SyncEvent" helpurl="flash.events:SyncEvent">
                <string name="SyncEvent" object="[flash.events.SyncEvent]" text="new SyncEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,changeList:Array=null]%)" constructor="true" tiptext="Constructor for SyncEvent objects." version="4" playername="" helpurl="flash.events:SyncEvent:SyncEvent"/>
                <string name="clone" object="[flash.events.SyncEvent]" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of the SyncEvent object and sets the value of each property to match that of the original." version="4" playername="" helpurl="flash.events:SyncEvent:clone"/>
                <string name="toString" object="[flash.events.SyncEvent]" text=".toString(%%):String" tiptext="Returns a string that contains all the properties of the SyncEvent object." version="4" playername="" helpurl="flash.events:SyncEvent:toString"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class SyncEvent" helpurl="flash.events:SyncEvent">
                <string name="SYNC" object="[flash.events.SyncEvent]" text="SyncEvent.SYNC" constant="true" tiptext="Defines the value of the type property of a sync event object." version="" playername="" helpurl="flash.events:SyncEvent:SYNC"/>
                <string name="changeList" object="[flash.events.SyncEvent]" text=".changeList" tiptext="An array of objects; each object contains properties that describe the changed members of a remote shared object." version="" playername="" helpurl="flash.events:SyncEvent:changeList:get"/>
            </folder>
        </folder>
        <folder name="TextEvent" id="[flash.events.TextEvent]" sort="true" index="true" asAncestors="flash.events:Event,Object" tiptext="An object dispatches a TextEvent object when a user enters text in a text field or clicks a hyperlink in an HTML-enabled text field." helpurl="flash.events:TextEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class TextEvent" helpurl="flash.events:TextEvent">
                <string name="TextEvent" object="[flash.events.TextEvent]" text="new TextEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,text:String]%)" constructor="true" tiptext="Constructor for TextEvent objects." version="4" playername="" helpurl="flash.events:TextEvent:TextEvent"/>
                <string name="clone" object="[flash.events.TextEvent]" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of the TextEvent object and sets the value of each property to match that of the original." version="4" playername="" helpurl="flash.events:TextEvent:clone"/>
                <string name="toString" object="[flash.events.TextEvent]" text=".toString(%%):String" tiptext="Returns a string that contains all the properties of the TextEvent object." version="4" playername="" helpurl="flash.events:TextEvent:toString"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class TextEvent" helpurl="flash.events:TextEvent">
                <string name="LINK" object="[flash.events.TextEvent]" text="TextEvent.LINK" constant="true" tiptext="Defines the value of the type property of a link event object." version="" playername="" helpurl="flash.events:TextEvent:LINK"/>
                <string name="TEXT_INPUT" object="[flash.events.TextEvent]" text="TextEvent.TEXT_INPUT" constant="true" tiptext="Defines the value of the type property of a textInput event object." version="" playername="" helpurl="flash.events:TextEvent:TEXT_INPUT"/>
                <string name="text" object="[flash.events.TextEvent]" text=".text" tiptext="For a textInput event, the character or sequence of characters entered by the user." version="" playername="" helpurl="flash.events:TextEvent:text:get"/>
            </folder>
        </folder>
        <folder name="TimerEvent" id="[flash.events.TimerEvent]" sort="true" index="true" asAncestors="flash.events:Event,Object" tiptext="A Timer object dispatches a TimerEvent objects whenever the Timer object reaches the interval specified by the Timer.delay property." helpurl="flash.events:TimerEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class TimerEvent" helpurl="flash.events:TimerEvent">
                <string name="TimerEvent" object="[flash.events.TimerEvent]" text="new TimerEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false]%)" constructor="true" tiptext="Constructor for TimerEvent objects." version="4" playername="" helpurl="flash.events:TimerEvent:TimerEvent"/>
                <string name="clone" object="[flash.events.TimerEvent]" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of the TimerEvent object and sets each property&apos;s value to match that of the original." version="4" playername="" helpurl="flash.events:TimerEvent:clone"/>
                <string name="toString" object="[flash.events.TimerEvent]" text=".toString(%%):String" tiptext="Returns a string that contains all the properties of the TimerEvent object." version="4" playername="" helpurl="flash.events:TimerEvent:toString"/>
                <string name="updateAfterEvent" object="[flash.events.TimerEvent]" text=".updateAfterEvent(%%):void" tiptext="Instructs Flash Player or the AIR runtime to render after processing of this event completes, if the display list has been modified." version="4" playername="" helpurl="flash.events:TimerEvent:updateAfterEvent"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class TimerEvent" helpurl="flash.events:TimerEvent">
                <string name="TIMER_COMPLETE" object="[flash.events.TimerEvent]" text="TimerEvent.TIMER_COMPLETE" constant="true" tiptext="Defines the value of the type property of a timerComplete event object." version="" playername="" helpurl="flash.events:TimerEvent:TIMER_COMPLETE"/>
                <string name="TIMER" object="[flash.events.TimerEvent]" text="TimerEvent.TIMER" constant="true" tiptext="Defines the value of the type property of a timer event object." version="" playername="" helpurl="flash.events:TimerEvent:TIMER"/>
            </folder>
        </folder>
        <folder name="TouchEvent" id="[flash.events.TouchEvent]" sort="true" index="true" asAncestors="flash.events:Event,Object" tiptext="The TouchEvent class lets you handle events on devices that detect user contact with the device (such as a finger on a touch screen)." helpurl="flash.events:TouchEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class TouchEvent" helpurl="flash.events:TouchEvent">
                <string name="TouchEvent" object="[flash.events.TouchEvent]" text="new TouchEvent(%type:String[,bubbles:Boolean=true,cancelable:Boolean=false,touchPointID:int=0,isPrimaryTouchPoint:Boolean=false,localX:Number=unknown,localY:Number=unknown,sizeX:Number=unknown,sizeY:Number=unknown,pressure:Number=unknown,relatedObject:flash.display:InteractiveObject=null,ctrlKey:Boolean=false,altKey:Boolean=false,shiftKey:Boolean=false,commandKey:Boolean=false,controlKey:Boolean=false]%)" constructor="true" tiptext="Constructor for TouchEvent objects." version="4" playername="" helpurl="flash.events:TouchEvent:TouchEvent"/>
                <string name="clone" object="[flash.events.TouchEvent]" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of the TouchEvent object and sets the value of each property to match that of the original." version="4" playername="" helpurl="flash.events:TouchEvent:clone"/>
                <string name="toString" object="[flash.events.TouchEvent]" text=".toString(%%):String" tiptext="Returns a string that contains all the properties of the TouchEvent object." version="4" playername="" helpurl="flash.events:TouchEvent:toString"/>
                <string name="updateAfterEvent" object="[flash.events.TouchEvent]" text=".updateAfterEvent(%%):void" tiptext="Instructs Flash Player or Adobe AIR to render after processing of this event completes, if the display list has been modified." version="4" playername="" helpurl="flash.events:TouchEvent:updateAfterEvent"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class TouchEvent" helpurl="flash.events:TouchEvent">
                <string name="TOUCH_BEGIN" object="[flash.events.TouchEvent]" text="TouchEvent.TOUCH_BEGIN" constant="true" tiptext="Defines the value of the type property of a TOUCH_BEGIN touch event object." version="" playername="" helpurl="flash.events:TouchEvent:TOUCH_BEGIN"/>
                <string name="TOUCH_END" object="[flash.events.TouchEvent]" text="TouchEvent.TOUCH_END" constant="true" tiptext="Defines the value of the type property of a TOUCH_END touch event object." version="" playername="" helpurl="flash.events:TouchEvent:TOUCH_END"/>
                <string name="TOUCH_MOVE" object="[flash.events.TouchEvent]" text="TouchEvent.TOUCH_MOVE" constant="true" tiptext="Defines the value of the type property of a TOUCH_MOVE touch event object." version="" playername="" helpurl="flash.events:TouchEvent:TOUCH_MOVE"/>
                <string name="TOUCH_OUT" object="[flash.events.TouchEvent]" text="TouchEvent.TOUCH_OUT" constant="true" tiptext="Defines the value of the type property of a TOUCH_OUT touch event object." version="" playername="" helpurl="flash.events:TouchEvent:TOUCH_OUT"/>
                <string name="TOUCH_OVER" object="[flash.events.TouchEvent]" text="TouchEvent.TOUCH_OVER" constant="true" tiptext="Defines the value of the type property of a TOUCH_OVER touch event object." version="" playername="" helpurl="flash.events:TouchEvent:TOUCH_OVER"/>
                <string name="TOUCH_ROLL_OUT" object="[flash.events.TouchEvent]" text="TouchEvent.TOUCH_ROLL_OUT" constant="true" tiptext="Defines the value of the type property of a TOUCH_ROLL_OUT touch event object." version="" playername="" helpurl="flash.events:TouchEvent:TOUCH_ROLL_OUT"/>
                <string name="TOUCH_ROLL_OVER" object="[flash.events.TouchEvent]" text="TouchEvent.TOUCH_ROLL_OVER" constant="true" tiptext="Defines the value of the type property of a TOUCH_ROLL_OVER touch event object." version="" playername="" helpurl="flash.events:TouchEvent:TOUCH_ROLL_OVER"/>
                <string name="TOUCH_TAP" object="[flash.events.TouchEvent]" text="TouchEvent.TOUCH_TAP" constant="true" tiptext="Defines the value of the type property of a TOUCH_TAP touch event object." version="" playername="" helpurl="flash.events:TouchEvent:TOUCH_TAP"/>
                <string name="altKey" object="[flash.events.TouchEvent]" text=".altKey" tiptext="Indicates whether the Alt key is active (true) or inactive (false)." version="" playername="" helpurl="flash.events:TouchEvent:altKey:get"/>
                <string name="commandKey" object="[flash.events.TouchEvent]" text=".commandKey" tiptext="Indicates whether the command key is activated (Mac only)." version="" playername="" helpurl="flash.events:TouchEvent:commandKey:get"/>
                <string name="controlKey" object="[flash.events.TouchEvent]" text=".controlKey" tiptext="Indicates whether the Control key is activated on Mac and whether the Ctrl key is activated on Windows or Linux." version="" playername="" helpurl="flash.events:TouchEvent:controlKey:get"/>
                <string name="ctrlKey" object="[flash.events.TouchEvent]" text=".ctrlKey" tiptext="On Windows or Linux, indicates whether the Ctrl key is active (true) or inactive (false)." version="" playername="" helpurl="flash.events:TouchEvent:ctrlKey:get"/>
                <string name="isPrimaryTouchPoint" object="[flash.events.TouchEvent]" text=".isPrimaryTouchPoint" tiptext="Indicates whether the first point of contact is mapped to mouse events." version="" playername="" helpurl="flash.events:TouchEvent:isPrimaryTouchPoint:get"/>
                <string name="isRelatedObjectInaccessible" object="[flash.events.TouchEvent]" text=".isRelatedObjectInaccessible" tiptext="If true, the relatedObject property is set to null for reasons related to security sandboxes." version="" playername="" helpurl="flash.events:TouchEvent:isRelatedObjectInaccessible:get"/>
                <string name="localX" object="[flash.events.TouchEvent]" text=".localX" tiptext="The horizontal coordinate at which the event occurred relative to the containing sprite." version="" playername="" helpurl="flash.events:TouchEvent:localX:get"/>
                <string name="localY" object="[flash.events.TouchEvent]" text=".localY" tiptext="The vertical coordinate at which the event occurred relative to the containing sprite." version="" playername="" helpurl="flash.events:TouchEvent:localY:get"/>
                <string name="pressure" object="[flash.events.TouchEvent]" text=".pressure" tiptext="A value between 0.0 and 1.0 indicating force of the contact with the device." version="" playername="" helpurl="flash.events:TouchEvent:pressure:get"/>
                <string name="relatedObject" object="[flash.events.TouchEvent]" text=".relatedObject" tiptext="A reference to a display list object that is related to the event." version="" playername="" helpurl="flash.events:TouchEvent:relatedObject:get"/>
                <string name="shiftKey" object="[flash.events.TouchEvent]" text=".shiftKey" tiptext="Indicates whether the Shift key is active (true) or inactive (false)." version="" playername="" helpurl="flash.events:TouchEvent:shiftKey:get"/>
                <string name="sizeX" object="[flash.events.TouchEvent]" text=".sizeX" tiptext="Width of the contact area." version="" playername="" helpurl="flash.events:TouchEvent:sizeX:get"/>
                <string name="sizeY" object="[flash.events.TouchEvent]" text=".sizeY" tiptext="Height of the contact area." version="" playername="" helpurl="flash.events:TouchEvent:sizeY:get"/>
                <string name="stageX" object="[flash.events.TouchEvent]" text=".stageX" tiptext="The horizontal coordinate at which the event occurred in global Stage coordinates." version="" playername="" helpurl="flash.events:TouchEvent:stageX:get"/>
                <string name="stageY" object="[flash.events.TouchEvent]" text=".stageY" tiptext="The vertical coordinate at which the event occurred in global Stage coordinates." version="" playername="" helpurl="flash.events:TouchEvent:stageY:get"/>
                <string name="touchPointID" object="[flash.events.TouchEvent]" text=".touchPointID" tiptext="A unique identification number (as an int) assigned to the touch point." version="" playername="" helpurl="flash.events:TouchEvent:touchPointID:get"/>
            </folder>
        </folder>
        <folder name="TransformGestureEvent" id="[flash.events.TransformGestureEvent]" sort="true" index="true" asAncestors="flash.events:GestureEvent,flash.events:Event,Object" tiptext="The TransformGestureEvent class lets you handle complex movement input events (such as moving fingers across a touch screen) that the device or operating system interprets as a gesture." helpurl="flash.events:TransformGestureEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class TransformGestureEvent" helpurl="flash.events:TransformGestureEvent">
                <string name="TransformGestureEvent" object="[flash.events.TransformGestureEvent]" text="new TransformGestureEvent(%type:String[,bubbles:Boolean=true,cancelable:Boolean=false,phase:String=null,localX:Number=0,localY:Number=0,scaleX:Number=1.0,scaleY:Number=1.0,rotation:Number=0,offsetX:Number=0,offsetY:Number=0,ctrlKey:Boolean=false,altKey:Boolean=false,shiftKey:Boolean=false,commandKey:Boolean=false,controlKey:Boolean=false]%)" constructor="true" tiptext="Constructor for TransformGestureEvent objects." version="4" playername="" helpurl="flash.events:TransformGestureEvent:TransformGestureEvent"/>
                <string name="clone" object="[flash.events.TransformGestureEvent]" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of the TransformGestureEvent object and sets the value of each property to match that of the original." version="4" playername="" helpurl="flash.events:TransformGestureEvent:clone"/>
                <string name="toString" object="[flash.events.TransformGestureEvent]" text=".toString(%%):String" tiptext="Returns a string that contains all the properties of the TransformGestureEvent object." version="4" playername="" helpurl="flash.events:TransformGestureEvent:toString"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class TransformGestureEvent" helpurl="flash.events:TransformGestureEvent">
                <string name="GESTURE_PAN" object="[flash.events.TransformGestureEvent]" text="TransformGestureEvent.GESTURE_PAN" constant="true" tiptext="Defines the value of the type property of a GESTURE_PAN touch event object." version="" playername="" helpurl="flash.events:TransformGestureEvent:GESTURE_PAN"/>
                <string name="GESTURE_ROTATE" object="[flash.events.TransformGestureEvent]" text="TransformGestureEvent.GESTURE_ROTATE" constant="true" tiptext="Defines the value of the type property of a GESTURE_ROTATE touch event object." version="" playername="" helpurl="flash.events:TransformGestureEvent:GESTURE_ROTATE"/>
                <string name="GESTURE_SWIPE" object="[flash.events.TransformGestureEvent]" text="TransformGestureEvent.GESTURE_SWIPE" constant="true" tiptext="Defines the value of the type property of a GESTURE_SWIPE touch event object." version="" playername="" helpurl="flash.events:TransformGestureEvent:GESTURE_SWIPE"/>
                <string name="GESTURE_ZOOM" object="[flash.events.TransformGestureEvent]" text="TransformGestureEvent.GESTURE_ZOOM" constant="true" tiptext="Defines the value of the type property of a GESTURE_ZOOM touch event object." version="" playername="" helpurl="flash.events:TransformGestureEvent:GESTURE_ZOOM"/>
                <string name="offsetX" object="[flash.events.TransformGestureEvent]" text=".offsetX" tiptext="The horizontal translation of the display object, since the previous gesture event." version="" playername="" helpurl="flash.events:TransformGestureEvent:offsetX:get"/>
                <string name="offsetY" object="[flash.events.TransformGestureEvent]" text=".offsetY" tiptext="The vertical translation of the display object, since the previous gesture event." version="" playername="" helpurl="flash.events:TransformGestureEvent:offsetY:get"/>
                <string name="rotation" object="[flash.events.TransformGestureEvent]" text=".rotation" tiptext="The current rotation angle, in degrees, of the display object along the z-axis, since the previous gesture event." version="" playername="" helpurl="flash.events:TransformGestureEvent:rotation:get"/>
                <string name="scaleX" object="[flash.events.TransformGestureEvent]" text=".scaleX" tiptext="The horizontal scale of the display object, since the previous gesture event." version="" playername="" helpurl="flash.events:TransformGestureEvent:scaleX:get"/>
                <string name="scaleY" object="[flash.events.TransformGestureEvent]" text=".scaleY" tiptext="The vertical scale of the display object, since the previous gesture event." version="" playername="" helpurl="flash.events:TransformGestureEvent:scaleY:get"/>
            </folder>
        </folder>
        <folder name="UncaughtErrorEvent" id="[flash.events.UncaughtErrorEvent]" sort="true" index="true" asAncestors="flash.events:ErrorEvent,flash.events:TextEvent,flash.events:Event,Object" tiptext="An UncaughtErrorEvent object is dispatched by an instance of the UncaughtErrorEvents class when an uncaught error occurs." helpurl="flash.events:UncaughtErrorEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class UncaughtErrorEvent" helpurl="flash.events:UncaughtErrorEvent">
                <string name="UncaughtErrorEvent" object="[flash.events.UncaughtErrorEvent]" text="new UncaughtErrorEvent(%[type:String=unknown,bubbles:Boolean=true,cancelable:Boolean=true,error_in:*=null]%)" constructor="true" tiptext="Constructor for UncaughtErrorEvent objects." version="2" playername="" helpurl="flash.events:UncaughtErrorEvent:UncaughtErrorEvent"/>
                <string name="clone" object="[flash.events.UncaughtErrorEvent]" text=".clone(%%):flash.events:Event" tiptext="Creates a copy of the UncaughtErrorEvent object and sets the value of each property to match that of the original." version="2" playername="" helpurl="flash.events:UncaughtErrorEvent:clone"/>
                <string name="toString" object="[flash.events.UncaughtErrorEvent]" text=".toString(%%):String" tiptext="Returns a string that contains all the properties of the UncaughtErrorEvent object." version="2" playername="" helpurl="flash.events:UncaughtErrorEvent:toString"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class UncaughtErrorEvent" helpurl="flash.events:UncaughtErrorEvent">
                <string name="UNCAUGHT_ERROR" object="[flash.events.UncaughtErrorEvent]" text="UncaughtErrorEvent.UNCAUGHT_ERROR" constant="true" tiptext="Defines the value of the type property of an uncaughtError event object." version="" playername="" helpurl="flash.events:UncaughtErrorEvent:UNCAUGHT_ERROR"/>
                <string name="error" object="[flash.events.UncaughtErrorEvent]" text=".error" tiptext="The error object associated with the uncaught error." version="" playername="" helpurl="flash.events:UncaughtErrorEvent:error:get"/>
            </folder>
        </folder>
        <folder name="UncaughtErrorEvents" id="[flash.events.UncaughtErrorEvents]" sort="true" index="true" asAncestors="flash.events:EventDispatcher,Object" tiptext="The UncaughtErrorEvents class provides a way to receive uncaught error events." helpurl="flash.events:UncaughtErrorEvents">
            <folder name="Methods" id="Methods" tiptext="Methods for class UncaughtErrorEvents" helpurl="flash.events:UncaughtErrorEvents">
                <string name="UncaughtErrorEvents" object="[flash.events.UncaughtErrorEvents]" text="new UncaughtErrorEvents(%%)" constructor="true" tiptext="Creates an UncaughtErrorEvents instance." version="2" playername="" helpurl="flash.events:UncaughtErrorEvents:UncaughtErrorEvents"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class UncaughtErrorEvents" helpurl="flash.events:UncaughtErrorEvents">
                <string name="uncaughtError" object="[flash.events.UncaughtErrorEvents]" text=".addEventListener(%type:String=UncaughtErrorEvent.UNCAUGHT_ERROR{UncaughtErrorEvent.UNCAUGHT_ERROR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when an error occurs and developer code doesn&apos;t detect and handle the error." version="" playername="" helpurl="flash.events:UncaughtErrorEvents_flash.events.UncaughtErrorEvent.UNCAUGHT_ERROR_uncaughtError"/>
            </folder>
        </folder>
        <folder name="VideoEvent" id="[flash.events.VideoEvent]" sort="true" index="true" asAncestors="flash.events:Event,Object" tiptext="This event class reports the current video rendering status." helpurl="flash.events:VideoEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class VideoEvent" helpurl="flash.events:VideoEvent">
                <string name="VideoEvent" object="[flash.events.VideoEvent]" text="new VideoEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,status:String=null]%)" constructor="true" tiptext="Constructor." version="10.2" playername="" helpurl="flash.events:VideoEvent:VideoEvent"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class VideoEvent" helpurl="flash.events:VideoEvent">
                <string name="RENDER_STATE" object="[flash.events.VideoEvent]" text="VideoEvent.RENDER_STATE" constant="true" tiptext="The identifier for the render status event of the Video object." version="" playername="" helpurl="flash.events:VideoEvent:RENDER_STATE"/>
                <string name="RENDER_STATUS_ACCELERATED" object="[flash.events.VideoEvent]" text="VideoEvent.RENDER_STATUS_ACCELERATED" constant="true" tiptext="Hardware-accelerated rendering is available." version="" playername="" helpurl="flash.events:VideoEvent:RENDER_STATUS_ACCELERATED"/>
                <string name="RENDER_STATUS_SOFTWARE" object="[flash.events.VideoEvent]" text="VideoEvent.RENDER_STATUS_SOFTWARE" constant="true" tiptext="Software rendering is available." version="" playername="" helpurl="flash.events:VideoEvent:RENDER_STATUS_SOFTWARE"/>
                <string name="RENDER_STATUS_UNAVAILABLE" object="[flash.events.VideoEvent]" text="VideoEvent.RENDER_STATUS_UNAVAILABLE" constant="true" tiptext="Rendering is not available." version="" playername="" helpurl="flash.events:VideoEvent:RENDER_STATUS_UNAVAILABLE"/>
                <string name="status" object="[flash.events.VideoEvent]" text=".status" tiptext="Returns the rendering status of the VideoEvent object." version="" playername="" helpurl="flash.events:VideoEvent:status:get"/>
            </folder>
        </folder>
    </folder>
        <folder name="flash.external" id="flash.external" sort="true" tiptext="Classes for package flash.external" helpurl="flash.external">
        <folder name="ExtensionContext" id="[flash.external.ExtensionContext]" sort="true" index="true" asAncestors="flash.events:EventDispatcher,Object" tiptext="The ExtensionContext class provides an interface for calling functions in the native implementation of an ActionScript extension." helpurl="flash.external:ExtensionContext">
            <folder name="Methods" id="Methods" tiptext="Methods for class ExtensionContext" helpurl="flash.external:ExtensionContext">
                <string name="call" object="[flash.external.ExtensionContext]" text=".call(%functionName:String,args:restParam%):Object" tiptext="Calls the native function specified by functionName." version="2.5" playername="AIR" helpurl="flash.external:ExtensionContext:call"/>
                <string name="createExtensionContext" object="[flash.external.ExtensionContext]" text="ExtensionContext.createExtensionContext(%extensionID:String,contextType:String%):flash.external:ExtensionContext" static="true" tiptext="Creates an ExtensionContext instance for the given extension identifier and context type." version="2.5" playername="AIR" helpurl="flash.external:ExtensionContext:createExtensionContext"/>
                <string name="dispose" object="[flash.external.ExtensionContext]" text=".dispose(%%):void" tiptext="Disposes of this ExtensionContext instance." version="2.5" playername="AIR" helpurl="flash.external:ExtensionContext:dispose"/>
                <string name="getExtensionDirectory" object="[flash.external.ExtensionContext]" text="ExtensionContext.getExtensionDirectory(%extensionID:String%):flash.filesystem:File" static="true" tiptext="Returns the directory in which the extension is installed on the device." version="2.5" playername="AIR" helpurl="flash.external:ExtensionContext:getExtensionDirectory"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class ExtensionContext" helpurl="flash.external:ExtensionContext">
                <string name="actionScriptData" object="[flash.external.ExtensionContext]" text=".actionScriptData" tiptext="The ActionScript object, if any, associated with this context." version="" playername="AIR" helpurl="flash.external:ExtensionContext:actionScriptData:get"/>
            </folder>
        </folder>
        <folder name="ExternalInterface" id="[flash.external.ExternalInterface]" sort="true" index="true" asAncestors="Object" tiptext="The ExternalInterface class is an application programming interface that enables straightforward communication between ActionScript and the SWF container&amp;#8211; for example, an HTML page with JavaScript or a desktop application that uses Flash Player to display a SWF file." helpurl="flash.external:ExternalInterface">
            <folder name="Methods" id="Methods" tiptext="Methods for class ExternalInterface" helpurl="flash.external:ExternalInterface">
                <string name="addCallback" object="[flash.external.ExternalInterface]" text="ExternalInterface.addCallback(%functionName:String,closure:Function%):void" static="true" tiptext="Registers an ActionScript method as callable from the container." version="4" playername="" helpurl="flash.external:ExternalInterface:addCallback"/>
                <string name="call" object="[flash.external.ExternalInterface]" text="ExternalInterface.call(%functionName:String,arguments:restParam%)" static="true" tiptext="Calls a function in the container." version="4" playername="" helpurl="flash.external:ExternalInterface:call"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class ExternalInterface" helpurl="flash.external:ExternalInterface">
                <string name="marshallExceptions" object="[flash.external.ExternalInterface]" text=".marshallExceptions" tiptext="Indicates whether the external interface should attempt to pass ActionScript exceptions to the current browser and JavaScript exceptions to the player." version="" playername="" helpurl="flash.external:ExternalInterface:marshallExceptions"/>
                <string name="available" object="[flash.external.ExternalInterface]" text=".available" tiptext="Indicates whether this player is in a container that offers an external interface." version="" playername="" helpurl="flash.external:ExternalInterface:available:get"/>
                <string name="objectID" object="[flash.external.ExternalInterface]" text=".objectID" tiptext="Returns the id attribute of the object tag in Internet Explorer, or the name attribute of the embed tag in Netscape." version="" playername="" helpurl="flash.external:ExternalInterface:objectID:get"/>
            </folder>
        </folder>
    </folder>
        <folder name="flash.filesystem" id="flash.filesystem" sort="true" tiptext="Classes for package flash.filesystem" helpurl="flash.filesystem">
        <folder name="File" id="[flash.filesystem.File]" sort="true" index="true" asAncestors="flash.net:FileReference,flash.events:EventDispatcher,Object" tiptext="A File object represents a path to a file or directory." helpurl="flash.filesystem:File">
            <folder name="Methods" id="Methods" tiptext="Methods for class File" helpurl="flash.filesystem:File">
                <string name="File" object="[flash.filesystem.File]" text="new File(%[path:String=null]%)" constructor="true" tiptext="The constructor function for the File class." version="1.0" playername="AIR" helpurl="flash.filesystem:File:File"/>
                <string name="browseForDirectory" object="[flash.filesystem.File]" text=".browseForDirectory(%title:String%):void" tiptext="Displays a directory chooser dialog box, in which the user can select a directory." version="1.0" playername="AIR" helpurl="flash.filesystem:File:browseForDirectory"/>
                <string name="browseForOpenMultiple" object="[flash.filesystem.File]" text=".browseForOpenMultiple(%title:String[,typeFilter:Array=null]%):void" tiptext="Displays the Open File dialog box, in which the user can select one or more files to open." version="1.0" playername="AIR" helpurl="flash.filesystem:File:browseForOpenMultiple"/>
                <string name="browseForOpen" object="[flash.filesystem.File]" text=".browseForOpen(%title:String[,typeFilter:Array=null]%):void" tiptext="Displays the Open File dialog box, in which the user can select a file to open." version="1.0" playername="AIR" helpurl="flash.filesystem:File:browseForOpen"/>
                <string name="browseForSave" object="[flash.filesystem.File]" text=".browseForSave(%title:String%):void" tiptext="Displays the Save File dialog box, in which the user can select a file destination." version="1.0" playername="AIR" helpurl="flash.filesystem:File:browseForSave"/>
                <string name="cancel" object="[flash.filesystem.File]" text=".cancel(%%):void" tiptext="Cancels any pending asynchronous operation." version="1.0" playername="AIR" helpurl="flash.filesystem:File:cancel"/>
                <string name="canonicalize" object="[flash.filesystem.File]" text=".canonicalize(%%):void" tiptext="Canonicalizes the File path." version="1.0" playername="AIR" helpurl="flash.filesystem:File:canonicalize"/>
                <string name="clone" object="[flash.filesystem.File]" text=".clone(%%):flash.filesystem:File" tiptext="Returns a copy of this File object." version="1.0" playername="AIR" helpurl="flash.filesystem:File:clone"/>
                <string name="copyToAsync" object="[flash.filesystem.File]" text=".copyToAsync(%newLocation:flash.net:FileReference[,overwrite:Boolean=false]%):void" tiptext="Begins copying the file or directory at the location specified by this File object to the location specified by the destination parameter." version="1.0" playername="AIR" helpurl="flash.filesystem:File:copyToAsync"/>
                <string name="copyTo" object="[flash.filesystem.File]" text=".copyTo(%newLocation:flash.net:FileReference[,overwrite:Boolean=false]%):void" tiptext="Copies the file or directory at the location specified by this File object to the location specified by the newLocation parameter." version="1.0" playername="AIR" helpurl="flash.filesystem:File:copyTo"/>
                <string name="createDirectory" object="[flash.filesystem.File]" text=".createDirectory(%%):void" tiptext="Creates the specified directory and any necessary parent directories." version="1.0" playername="AIR" helpurl="flash.filesystem:File:createDirectory"/>
                <string name="createTempDirectory" object="[flash.filesystem.File]" text="File.createTempDirectory(%%):flash.filesystem:File" static="true" tiptext="Returns a reference to a new temporary directory." version="1.0" playername="AIR" helpurl="flash.filesystem:File:createTempDirectory"/>
                <string name="createTempFile" object="[flash.filesystem.File]" text="File.createTempFile(%%):flash.filesystem:File" static="true" tiptext="Returns a reference to a new temporary file." version="1.0" playername="AIR" helpurl="flash.filesystem:File:createTempFile"/>
                <string name="deleteDirectoryAsync" object="[flash.filesystem.File]" text=".deleteDirectoryAsync(%[deleteDirectoryContents:Boolean=false]%):void" tiptext="Deletes the directory asynchronously." version="1.0" playername="AIR" helpurl="flash.filesystem:File:deleteDirectoryAsync"/>
                <string name="deleteDirectory" object="[flash.filesystem.File]" text=".deleteDirectory(%[deleteDirectoryContents:Boolean=false]%):void" tiptext="Deletes the directory." version="1.0" playername="AIR" helpurl="flash.filesystem:File:deleteDirectory"/>
                <string name="deleteFileAsync" object="[flash.filesystem.File]" text=".deleteFileAsync(%%):void" tiptext="Deletes the file asynchronously." version="1.0" playername="AIR" helpurl="flash.filesystem:File:deleteFileAsync"/>
                <string name="deleteFile" object="[flash.filesystem.File]" text=".deleteFile(%%):void" tiptext="Deletes the file." version="1.0" playername="AIR" helpurl="flash.filesystem:File:deleteFile"/>
                <string name="getDirectoryListingAsync" object="[flash.filesystem.File]" text=".getDirectoryListingAsync(%%):void" tiptext="Asynchronously retrieves an array of File objects corresponding to the contents of the directory represented by this File object." version="1.0" playername="AIR" helpurl="flash.filesystem:File:getDirectoryListingAsync"/>
                <string name="getDirectoryListing" object="[flash.filesystem.File]" text=".getDirectoryListing(%%):Array" tiptext="Returns an array of File objects corresponding to files and directories in the directory represented by this File object." version="1.0" playername="AIR" helpurl="flash.filesystem:File:getDirectoryListing"/>
                <string name="getRelativePath" object="[flash.filesystem.File]" text=".getRelativePath(%ref:flash.net:FileReference[,useDotDot:Boolean=false]%):String" tiptext="Finds the relative path between two File paths." version="1.0" playername="AIR" helpurl="flash.filesystem:File:getRelativePath"/>
                <string name="getRootDirectories" object="[flash.filesystem.File]" text="File.getRootDirectories(%%):Array" static="true" tiptext="Returns an array of File objects, listing the file system root directories." version="1.0" playername="AIR" helpurl="flash.filesystem:File:getRootDirectories"/>
                <string name="moveToAsync" object="[flash.filesystem.File]" text=".moveToAsync(%newLocation:flash.net:FileReference[,overwrite:Boolean=false]%):void" tiptext="Begins moving the file or directory at the location specified by this File object to the location specified by the newLocation parameter." version="1.0" playername="AIR" helpurl="flash.filesystem:File:moveToAsync"/>
                <string name="moveToTrashAsync" object="[flash.filesystem.File]" text=".moveToTrashAsync(%%):void" tiptext="Asynchronously moves a file or directory to the trash." version="1.0" playername="AIR" helpurl="flash.filesystem:File:moveToTrashAsync"/>
                <string name="moveToTrash" object="[flash.filesystem.File]" text=".moveToTrash(%%):void" tiptext="Moves a file or directory to the trash." version="1.0" playername="AIR" helpurl="flash.filesystem:File:moveToTrash"/>
                <string name="moveTo" object="[flash.filesystem.File]" text=".moveTo(%newLocation:flash.net:FileReference[,overwrite:Boolean=false]%):void" tiptext="Moves the file or directory at the location specified by this File object to the location specified by the destination parameter." version="1.0" playername="AIR" helpurl="flash.filesystem:File:moveTo"/>
                <string name="openWithDefaultApplication" object="[flash.filesystem.File]" text=".openWithDefaultApplication(%%):void" tiptext="Opens the file in the application registered by the operating system to open this file type." version="2" playername="AIR" helpurl="flash.filesystem:File:openWithDefaultApplication"/>
                <string name="resolvePath" object="[flash.filesystem.File]" text=".resolvePath(%path:String%):flash.filesystem:File" tiptext="Creates a new File object with a path relative to this File object&apos;s path, based on the path parameter (a string)." version="1.0" playername="AIR" helpurl="flash.filesystem:File:resolvePath"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class File" helpurl="flash.filesystem:File">
                <string name="applicationDirectory" object="[flash.filesystem.File]" text=".applicationDirectory" tiptext="The folder containing the application&apos;s installed files." version="" playername="AIR" helpurl="flash.filesystem:File:applicationDirectory:get"/>
                <string name="applicationStorageDirectory" object="[flash.filesystem.File]" text=".applicationStorageDirectory" tiptext="The application&apos;s private storage directory." version="" playername="AIR" helpurl="flash.filesystem:File:applicationStorageDirectory:get"/>
                <string name="desktopDirectory" object="[flash.filesystem.File]" text=".desktopDirectory" tiptext="The user&apos;s desktop directory." version="" playername="AIR" helpurl="flash.filesystem:File:desktopDirectory:get"/>
                <string name="documentsDirectory" object="[flash.filesystem.File]" text=".documentsDirectory" tiptext="The user&apos;s documents directory." version="" playername="AIR" helpurl="flash.filesystem:File:documentsDirectory:get"/>
                <string name="downloaded" object="[flash.filesystem.File]" text=".downloaded" tiptext="Indicates whether the referenced file or directory was downloaded (from the internet) or not." version="" playername="AIR" helpurl="flash.filesystem:File:downloaded:get"/>
                <string name="exists" object="[flash.filesystem.File]" text=".exists" tiptext="Indicates whether the referenced file or directory exists." version="" playername="AIR" helpurl="flash.filesystem:File:exists:get"/>
                <string name="icon" object="[flash.filesystem.File]" text=".icon" tiptext="An Icon object containing the icons defined for the file." version="" playername="AIR" helpurl="flash.filesystem:File:icon:get"/>
                <string name="isDirectory" object="[flash.filesystem.File]" text=".isDirectory" tiptext="Indicates whether the reference is to a directory." version="" playername="AIR" helpurl="flash.filesystem:File:isDirectory:get"/>
                <string name="isHidden" object="[flash.filesystem.File]" text=".isHidden" tiptext="Indicates whether the referenced file or directory is &quot;hidden.&quot; The value is true if the referenced file or directory is hidden, false otherwise." version="" playername="AIR" helpurl="flash.filesystem:File:isHidden:get"/>
                <string name="isPackage" object="[flash.filesystem.File]" text=".isPackage" tiptext="Indicates whether the referenced directory is a package." version="" playername="AIR" helpurl="flash.filesystem:File:isPackage:get"/>
                <string name="isSymbolicLink" object="[flash.filesystem.File]" text=".isSymbolicLink" tiptext="Indicates whether the reference is a symbolic link." version="" playername="AIR" helpurl="flash.filesystem:File:isSymbolicLink:get"/>
                <string name="lineEnding" object="[flash.filesystem.File]" text=".lineEnding" tiptext="The line-ending character sequence used by the host operating system." version="" playername="AIR" helpurl="flash.filesystem:File:lineEnding:get"/>
                <string name="nativePath" object="[flash.filesystem.File]" text=".nativePath" tiptext="The full path in the host operating system representation." version="" playername="AIR" helpurl="flash.filesystem:File:nativePath:get"/>
                <string name="parent" object="[flash.filesystem.File]" text=".parent" tiptext="The directory that contains the file or directory referenced by this File object." version="" playername="AIR" helpurl="flash.filesystem:File:parent:get"/>
                <string name="separator" object="[flash.filesystem.File]" text=".separator" tiptext="The host operating system&apos;s path component separator character." version="" playername="AIR" helpurl="flash.filesystem:File:separator:get"/>
                <string name="spaceAvailable" object="[flash.filesystem.File]" text=".spaceAvailable" tiptext="The space available for use at this File location, in bytes." version="" playername="AIR" helpurl="flash.filesystem:File:spaceAvailable:get"/>
                <string name="systemCharset" object="[flash.filesystem.File]" text=".systemCharset" tiptext="The default encoding used by the host operating system." version="" playername="AIR" helpurl="flash.filesystem:File:systemCharset:get"/>
                <string name="url" object="[flash.filesystem.File]" text=".url" tiptext="The URL for this file path." version="" playername="AIR" helpurl="flash.filesystem:File:url:get"/>
                <string name="userDirectory" object="[flash.filesystem.File]" text=".userDirectory" tiptext="The user&apos;s directory." version="" playername="AIR" helpurl="flash.filesystem:File:userDirectory:get"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class File" helpurl="flash.filesystem:File">
                <string name="directoryListing" object="[flash.filesystem.File]" text=".addEventListener(%type:String=FileListEvent.DIRECTORY_LISTING{FileListEvent.DIRECTORY_LISTING,FileListEvent.SELECT_MULTIPLE,Event.SELECT,SecurityErrorEvent.SECURITY_ERROR,IOErrorEvent.IO_ERROR,Event.COMPLETE,Event.CANCEL},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a directory list is available as a result of a call to the getDirectoryListingAsync() method." version="" playername="AIR" helpurl="flash.filesystem:File_flash.events.FileListEvent.DIRECTORY_LISTING_directoryListing"/>
                <string name="selectMultiple" object="[flash.filesystem.File]" text=".addEventListener(%type:String=FileListEvent.SELECT_MULTIPLE{FileListEvent.DIRECTORY_LISTING,FileListEvent.SELECT_MULTIPLE,Event.SELECT,SecurityErrorEvent.SECURITY_ERROR,IOErrorEvent.IO_ERROR,Event.COMPLETE,Event.CANCEL},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user selects files from the dialog box opened by a call to the browseForOpenMultiple() method." version="" playername="AIR" helpurl="flash.filesystem:File_flash.events.FileListEvent.SELECT_MULTIPLE_selectMultiple"/>
                <string name="select" object="[flash.filesystem.File]" text=".addEventListener(%type:String=Event.SELECT{FileListEvent.DIRECTORY_LISTING,FileListEvent.SELECT_MULTIPLE,Event.SELECT,SecurityErrorEvent.SECURITY_ERROR,IOErrorEvent.IO_ERROR,Event.COMPLETE,Event.CANCEL},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user selects a file or directory from a file- or directory-browsing dialog box." version="" playername="AIR" helpurl="flash.filesystem:File_flash.events.Event.SELECT_select"/>
                <string name="securityError" object="[flash.filesystem.File]" text=".addEventListener(%type:String=SecurityErrorEvent.SECURITY_ERROR{FileListEvent.DIRECTORY_LISTING,FileListEvent.SELECT_MULTIPLE,Event.SELECT,SecurityErrorEvent.SECURITY_ERROR,IOErrorEvent.IO_ERROR,Event.COMPLETE,Event.CANCEL},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when an operation violates a security constraint." version="" playername="AIR" helpurl="flash.filesystem:File_flash.events.SecurityErrorEvent.SECURITY_ERROR_securityError"/>
                <string name="ioError" object="[flash.filesystem.File]" text=".addEventListener(%type:String=IOErrorEvent.IO_ERROR{FileListEvent.DIRECTORY_LISTING,FileListEvent.SELECT_MULTIPLE,Event.SELECT,SecurityErrorEvent.SECURITY_ERROR,IOErrorEvent.IO_ERROR,Event.COMPLETE,Event.CANCEL},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when an error occurs during an asynchronous file operation." version="" playername="AIR" helpurl="flash.filesystem:File_flash.events.IOErrorEvent.IO_ERROR_ioError"/>
                <string name="complete" object="[flash.filesystem.File]" text=".addEventListener(%type:String=Event.COMPLETE{FileListEvent.DIRECTORY_LISTING,FileListEvent.SELECT_MULTIPLE,Event.SELECT,SecurityErrorEvent.SECURITY_ERROR,IOErrorEvent.IO_ERROR,Event.COMPLETE,Event.CANCEL},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when an asynchronous operation is complete." version="" playername="AIR" helpurl="flash.filesystem:File_flash.events.Event.COMPLETE_complete"/>
                <string name="cancel" object="[flash.filesystem.File]" text=".addEventListener(%type:String=Event.CANCEL{FileListEvent.DIRECTORY_LISTING,FileListEvent.SELECT_MULTIPLE,Event.SELECT,SecurityErrorEvent.SECURITY_ERROR,IOErrorEvent.IO_ERROR,Event.COMPLETE,Event.CANCEL},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a pending asynchronous operation is canceled." version="" playername="AIR" helpurl="flash.filesystem:File_flash.events.Event.CANCEL_cancel"/>
            </folder>
        </folder>
        <folder name="FileMode" id="[flash.filesystem.FileMode]" sort="true" index="true" asAncestors="Object" tiptext="The FileMode class defines string constants used in the fileMode parameter of the open() and openAsync() methods of the FileStream class." helpurl="flash.filesystem:FileMode">
            <folder name="Properties" id="Properties" tiptext="Properties for class FileMode" helpurl="flash.filesystem:FileMode">
                <string name="APPEND" object="[flash.filesystem.FileMode]" text="FileMode.APPEND" constant="true" tiptext="Used for a file to be opened in write mode, with all written data appended to the end of the file." version="" playername="AIR" helpurl="flash.filesystem:FileMode:APPEND"/>
                <string name="READ" object="[flash.filesystem.FileMode]" text="FileMode.READ" constant="true" tiptext="Used for a file to be opened in read-only mode." version="" playername="AIR" helpurl="flash.filesystem:FileMode:READ"/>
                <string name="UPDATE" object="[flash.filesystem.FileMode]" text="FileMode.UPDATE" constant="true" tiptext="Used for a file to be opened in read/write mode." version="" playername="AIR" helpurl="flash.filesystem:FileMode:UPDATE"/>
                <string name="WRITE" object="[flash.filesystem.FileMode]" text="FileMode.WRITE" constant="true" tiptext="Used for a file to be opened in write-only mode." version="" playername="AIR" helpurl="flash.filesystem:FileMode:WRITE"/>
            </folder>
        </folder>
        <folder name="FileStream" id="[flash.filesystem.FileStream]" sort="true" index="true" asAncestors="flash.events:EventDispatcher,Object" tiptext="A FileStream object is used to read and write files." helpurl="flash.filesystem:FileStream">
            <folder name="Methods" id="Methods" tiptext="Methods for class FileStream" helpurl="flash.filesystem:FileStream">
                <string name="FileStream" object="[flash.filesystem.FileStream]" text="new FileStream(%%)" constructor="true" tiptext="Creates a FileStream object." version="1.0" playername="AIR" helpurl="flash.filesystem:FileStream:FileStream"/>
                <string name="close" object="[flash.filesystem.FileStream]" text=".close(%%):void" tiptext="Closes the FileStream object." version="1.0" playername="AIR" helpurl="flash.filesystem:FileStream:close"/>
                <string name="openAsync" object="[flash.filesystem.FileStream]" text=".openAsync(%file:flash.filesystem:File,fileMode:String%):void" tiptext="Opens the FileStream object asynchronously, pointing to the file specified by the file parameter." version="1.0" playername="AIR" helpurl="flash.filesystem:FileStream:openAsync"/>
                <string name="open" object="[flash.filesystem.FileStream]" text=".open(%file:flash.filesystem:File,fileMode:String%):void" tiptext="Opens the FileStream object synchronously, pointing to the file specified by the file parameter." version="1.0" playername="AIR" helpurl="flash.filesystem:FileStream:open"/>
                <string name="readBoolean" object="[flash.filesystem.FileStream]" text=".readBoolean(%%):Boolean" tiptext="Reads a Boolean value from the file stream, byte stream, or byte array." version="1.0" playername="AIR" helpurl="flash.filesystem:FileStream:readBoolean"/>
                <string name="readByte" object="[flash.filesystem.FileStream]" text=".readByte(%%):int" tiptext="Reads a signed byte from the file stream, byte stream, or byte array." version="1.0" playername="AIR" helpurl="flash.filesystem:FileStream:readByte"/>
                <string name="readBytes" object="[flash.filesystem.FileStream]" text=".readBytes(%bytes:flash.utils:ByteArray[,offset:uint=0,length:uint=0]%):void" tiptext="Reads the number of data bytes, specified by the length parameter, from the file stream, byte stream, or byte array." version="1.0" playername="AIR" helpurl="flash.filesystem:FileStream:readBytes"/>
                <string name="readDouble" object="[flash.filesystem.FileStream]" text=".readDouble(%%):Number" tiptext="Reads an IEEE 754 double-precision floating point number from the file stream, byte stream, or byte array." version="1.0" playername="AIR" helpurl="flash.filesystem:FileStream:readDouble"/>
                <string name="readFloat" object="[flash.filesystem.FileStream]" text=".readFloat(%%):Number" tiptext="Reads an IEEE 754 single-precision floating point number from the file stream, byte stream, or byte array." version="1.0" playername="AIR" helpurl="flash.filesystem:FileStream:readFloat"/>
                <string name="readInt" object="[flash.filesystem.FileStream]" text=".readInt(%%):int" tiptext="Reads a signed 32-bit integer from the file stream, byte stream, or byte array." version="1.0" playername="AIR" helpurl="flash.filesystem:FileStream:readInt"/>
                <string name="readMultiByte" object="[flash.filesystem.FileStream]" text=".readMultiByte(%length:uint,charSet:String%):String" tiptext="Reads a multibyte string of specified length from the file stream, byte stream, or byte array using the specified character set." version="1.0" playername="AIR" helpurl="flash.filesystem:FileStream:readMultiByte"/>
                <string name="readObject" object="[flash.filesystem.FileStream]" text=".readObject(%%)" tiptext="Reads an object from the file stream, byte stream, or byte array, encoded in AMF serialized format." version="1.0" playername="AIR" helpurl="flash.filesystem:FileStream:readObject"/>
                <string name="readShort" object="[flash.filesystem.FileStream]" text=".readShort(%%):int" tiptext="Reads a signed 16-bit integer from the file stream, byte stream, or byte array." version="1.0" playername="AIR" helpurl="flash.filesystem:FileStream:readShort"/>
                <string name="readUTFBytes" object="[flash.filesystem.FileStream]" text=".readUTFBytes(%length:uint%):String" tiptext="Reads a sequence of UTF-8 bytes from the byte stream or byte array and returns a string." version="1.0" playername="AIR" helpurl="flash.filesystem:FileStream:readUTFBytes"/>
                <string name="readUTF" object="[flash.filesystem.FileStream]" text=".readUTF(%%):String" tiptext="Reads a UTF-8 string from the file stream, byte stream, or byte array." version="1.0" playername="AIR" helpurl="flash.filesystem:FileStream:readUTF"/>
                <string name="readUnsignedByte" object="[flash.filesystem.FileStream]" text=".readUnsignedByte(%%):uint" tiptext="Reads an unsigned byte from the file stream, byte stream, or byte array." version="1.0" playername="AIR" helpurl="flash.filesystem:FileStream:readUnsignedByte"/>
                <string name="readUnsignedInt" object="[flash.filesystem.FileStream]" text=".readUnsignedInt(%%):uint" tiptext="Reads an unsigned 32-bit integer from the file stream, byte stream, or byte array." version="1.0" playername="AIR" helpurl="flash.filesystem:FileStream:readUnsignedInt"/>
                <string name="readUnsignedShort" object="[flash.filesystem.FileStream]" text=".readUnsignedShort(%%):uint" tiptext="Reads an unsigned 16-bit integer from the file stream, byte stream, or byte array." version="1.0" playername="AIR" helpurl="flash.filesystem:FileStream:readUnsignedShort"/>
                <string name="truncate" object="[flash.filesystem.FileStream]" text=".truncate(%%):void" tiptext="Truncates the file at the position specified by the position property of the FileStream object." version="1.0" playername="AIR" helpurl="flash.filesystem:FileStream:truncate"/>
                <string name="writeBoolean" object="[flash.filesystem.FileStream]" text=".writeBoolean(%value:Boolean%):void" tiptext="Writes a Boolean value." version="1.0" playername="AIR" helpurl="flash.filesystem:FileStream:writeBoolean"/>
                <string name="writeByte" object="[flash.filesystem.FileStream]" text=".writeByte(%value:int%):void" tiptext="Writes a byte." version="1.0" playername="AIR" helpurl="flash.filesystem:FileStream:writeByte"/>
                <string name="writeBytes" object="[flash.filesystem.FileStream]" text=".writeBytes(%bytes:flash.utils:ByteArray[,offset:uint=0,length:uint=0]%):void" tiptext="Writes a sequence of bytes from the specified byte array, bytes, starting at the byte specified by offset (using a zero-based index) with a length specified by length, into the file stream, byte stream, or byte array." version="1.0" playername="AIR" helpurl="flash.filesystem:FileStream:writeBytes"/>
                <string name="writeDouble" object="[flash.filesystem.FileStream]" text=".writeDouble(%value:Number%):void" tiptext="Writes an IEEE 754 double-precision (64-bit) floating point number." version="1.0" playername="AIR" helpurl="flash.filesystem:FileStream:writeDouble"/>
                <string name="writeFloat" object="[flash.filesystem.FileStream]" text=".writeFloat(%value:Number%):void" tiptext="Writes an IEEE 754 single-precision (32-bit) floating point number." version="1.0" playername="AIR" helpurl="flash.filesystem:FileStream:writeFloat"/>
                <string name="writeInt" object="[flash.filesystem.FileStream]" text=".writeInt(%value:int%):void" tiptext="Writes a 32-bit signed integer." version="1.0" playername="AIR" helpurl="flash.filesystem:FileStream:writeInt"/>
                <string name="writeMultiByte" object="[flash.filesystem.FileStream]" text=".writeMultiByte(%value:String,charSet:String%):void" tiptext="Writes a multibyte string to the file stream, byte stream, or byte array, using the specified character set." version="1.0" playername="AIR" helpurl="flash.filesystem:FileStream:writeMultiByte"/>
                <string name="writeObject" object="[flash.filesystem.FileStream]" text=".writeObject(%object:*%):void" tiptext="Writes an object to the file stream, byte stream, or byte array, in AMF serialized format." version="1.0" playername="AIR" helpurl="flash.filesystem:FileStream:writeObject"/>
                <string name="writeShort" object="[flash.filesystem.FileStream]" text=".writeShort(%value:int%):void" tiptext="Writes a 16-bit integer." version="1.0" playername="AIR" helpurl="flash.filesystem:FileStream:writeShort"/>
                <string name="writeUTFBytes" object="[flash.filesystem.FileStream]" text=".writeUTFBytes(%value:String%):void" tiptext="Writes a UTF-8 string." version="1.0" playername="AIR" helpurl="flash.filesystem:FileStream:writeUTFBytes"/>
                <string name="writeUTF" object="[flash.filesystem.FileStream]" text=".writeUTF(%value:String%):void" tiptext="Writes a UTF-8 string to the file stream, byte stream, or byte array." version="1.0" playername="AIR" helpurl="flash.filesystem:FileStream:writeUTF"/>
                <string name="writeUnsignedInt" object="[flash.filesystem.FileStream]" text=".writeUnsignedInt(%value:uint%):void" tiptext="Writes a 32-bit unsigned integer." version="1.0" playername="AIR" helpurl="flash.filesystem:FileStream:writeUnsignedInt"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class FileStream" helpurl="flash.filesystem:FileStream">
                <string name="bytesAvailable" object="[flash.filesystem.FileStream]" text=".bytesAvailable" tiptext="Returns the number of bytes of data available for reading in the input buffer." version="" playername="AIR" helpurl="flash.filesystem:FileStream:bytesAvailable:get"/>
                <string name="endian" object="[flash.filesystem.FileStream]" text=".endian" tiptext="The byte order for the data, either the BIG_ENDIAN or LITTLE_ENDIAN constant from the Endian class." version="" playername="AIR" helpurl="flash.filesystem:FileStream:endian:get"/>
                <string name="objectEncoding" object="[flash.filesystem.FileStream]" text=".objectEncoding" tiptext="Specifies whether the AMF3 or AMF0 format is used when writing or reading binary data by using the readObject() or writeObject() method." version="" playername="AIR" helpurl="flash.filesystem:FileStream:objectEncoding:get"/>
                <string name="position" object="[flash.filesystem.FileStream]" text=".position" tiptext="The current position in the file." version="" playername="AIR" helpurl="flash.filesystem:FileStream:position:get"/>
                <string name="readAhead" object="[flash.filesystem.FileStream]" text=".readAhead" tiptext="The minimum amount of data to read from disk when reading files asynchronously." version="" playername="AIR" helpurl="flash.filesystem:FileStream:readAhead:get"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class FileStream" helpurl="flash.filesystem:FileStream">
                <string name="complete" object="[flash.filesystem.FileStream]" text=".addEventListener(%type:String=Event.COMPLETE{Event.COMPLETE,OutputProgressEvent.OUTPUT_PROGRESS,ProgressEvent.PROGRESS,IOErrorEvent.IO_ERROR,Event.CLOSE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Signals that the end of the stream has been reached." version="" playername="AIR" helpurl="flash.filesystem:FileStream_flash.events.Event.COMPLETE_complete"/>
                <string name="outputProgress" object="[flash.filesystem.FileStream]" text=".addEventListener(%type:String=OutputProgressEvent.OUTPUT_PROGRESS{Event.COMPLETE,OutputProgressEvent.OUTPUT_PROGRESS,ProgressEvent.PROGRESS,IOErrorEvent.IO_ERROR,Event.CLOSE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Signals that buffered data has been written to the file." version="" playername="AIR" helpurl="flash.filesystem:FileStream_flash.events.OutputProgressEvent.OUTPUT_PROGRESS_outputProgress"/>
                <string name="progress" object="[flash.filesystem.FileStream]" text=".addEventListener(%type:String=ProgressEvent.PROGRESS{Event.COMPLETE,OutputProgressEvent.OUTPUT_PROGRESS,ProgressEvent.PROGRESS,IOErrorEvent.IO_ERROR,Event.CLOSE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Signals the availability of new data on the stream." version="" playername="AIR" helpurl="flash.filesystem:FileStream_flash.events.ProgressEvent.PROGRESS_progress"/>
                <string name="ioError" object="[flash.filesystem.FileStream]" text=".addEventListener(%type:String=IOErrorEvent.IO_ERROR{Event.COMPLETE,OutputProgressEvent.OUTPUT_PROGRESS,ProgressEvent.PROGRESS,IOErrorEvent.IO_ERROR,Event.CLOSE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Indicates that an error occurred during an asynchronous file I/O operation." version="" playername="AIR" helpurl="flash.filesystem:FileStream_flash.events.IOErrorEvent.IO_ERROR_ioError"/>
                <string name="close" object="[flash.filesystem.FileStream]" text=".addEventListener(%type:String=Event.CLOSE{Event.COMPLETE,OutputProgressEvent.OUTPUT_PROGRESS,ProgressEvent.PROGRESS,IOErrorEvent.IO_ERROR,Event.CLOSE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Indicates that the stream has been closed by an explicit call to the close() method." version="" playername="AIR" helpurl="flash.filesystem:FileStream_flash.events.Event.CLOSE_close"/>
            </folder>
        </folder>
        <folder name="StorageVolume" id="[flash.filesystem.StorageVolume]" sort="true" index="true" asAncestors="Object" tiptext="A StorageVolume object includes properties defining a mass storage volume." helpurl="flash.filesystem:StorageVolume">
            <folder name="Methods" id="Methods" tiptext="Methods for class StorageVolume" helpurl="flash.filesystem:StorageVolume">
                <string name="StorageVolume" object="[flash.filesystem.StorageVolume]" text="new StorageVolume(%rootDirPath:flash.filesystem:File,name:String,writable:Boolean,removable:Boolean,fileSysType:String,drive:String%):void" constructor="true" tiptext="The constructor function." version="2" playername="AIR" helpurl="flash.filesystem:StorageVolume:StorageVolume"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class StorageVolume" helpurl="flash.filesystem:StorageVolume">
                <string name="drive" object="[flash.filesystem.StorageVolume]" text=".drive" tiptext="The volume drive letter on Windows." version="" playername="AIR" helpurl="flash.filesystem:StorageVolume:drive:get"/>
                <string name="fileSystemType" object="[flash.filesystem.StorageVolume]" text=".fileSystemType" tiptext="The type of file system on the storage volume (such as &quot;FAT&quot;, &quot;NTFS&quot;,  &quot;HFS&quot;, or &quot;UFS&quot;)." version="" playername="AIR" helpurl="flash.filesystem:StorageVolume:fileSystemType:get"/>
                <string name="isRemovable" object="[flash.filesystem.StorageVolume]" text=".isRemovable" tiptext="Whether the operating system considers the storage volume to be removable (true)  or not (false)." version="" playername="AIR" helpurl="flash.filesystem:StorageVolume:isRemovable:get"/>
                <string name="isWritable" object="[flash.filesystem.StorageVolume]" text=".isWritable" tiptext="Whether a volume is writable (true) or not (false)." version="" playername="AIR" helpurl="flash.filesystem:StorageVolume:isWritable:get"/>
                <string name="name" object="[flash.filesystem.StorageVolume]" text=".name" tiptext="The name of the volume." version="" playername="AIR" helpurl="flash.filesystem:StorageVolume:name:get"/>
                <string name="rootDirectory" object="[flash.filesystem.StorageVolume]" text=".rootDirectory" tiptext="A File object corresponding to the root directory of the volume." version="" playername="AIR" helpurl="flash.filesystem:StorageVolume:rootDirectory:get"/>
            </folder>
        </folder>
        <folder name="StorageVolumeInfo" id="[flash.filesystem.StorageVolumeInfo]" sort="true" index="true" asAncestors="flash.events:EventDispatcher,Object" tiptext="The StorageVolumeInfo object dispatches a StorageVolumeChangeEvent object when a storage volume is mounted or unmounted." helpurl="flash.filesystem:StorageVolumeInfo">
            <folder name="Methods" id="Methods" tiptext="Methods for class StorageVolumeInfo" helpurl="flash.filesystem:StorageVolumeInfo">
                <string name="getStorageVolumes" object="[flash.filesystem.StorageVolumeInfo]" text=".getStorageVolumes(%%):Vector$flash.filesystem:StorageVolume" tiptext="Returns vector of StorageVolume objects corresponding to the currently mounted storage volumes." version="2" playername="AIR" helpurl="flash.filesystem:StorageVolumeInfo:getStorageVolumes"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class StorageVolumeInfo" helpurl="flash.filesystem:StorageVolumeInfo">
                <string name="isSupported" object="[flash.filesystem.StorageVolumeInfo]" text=".isSupported" tiptext="The isSupported property is set to true if the StorageVolumeInfo class is supported on the current platform, otherwise it is set to false." version="" playername="AIR" helpurl="flash.filesystem:StorageVolumeInfo:isSupported:get"/>
                <string name="storageVolumeInfo" object="[flash.filesystem.StorageVolumeInfo]" text=".storageVolumeInfo" tiptext="The singleton instance of the StorageVolumeInfo object." version="" playername="AIR" helpurl="flash.filesystem:StorageVolumeInfo:storageVolumeInfo:get"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class StorageVolumeInfo" helpurl="flash.filesystem:StorageVolumeInfo">
                <string name="storageVolumeUnmount" object="[flash.filesystem.StorageVolumeInfo]" text=".addEventListener(%type:String=StorageVolumeChangeEvent.STORAGE_VOLUME_UNMOUNT{StorageVolumeChangeEvent.STORAGE_VOLUME_UNMOUNT,StorageVolumeChangeEvent.STORAGE_VOLUME_MOUNT},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a storage volume has been unmounted." version="" playername="AIR" helpurl="flash.filesystem:StorageVolumeInfo_flash.events.StorageVolumeChangeEvent.STORAGE_VOLUME_UNMOUNT_storageVolumeUnmount"/>
                <string name="storageVolumeMount" object="[flash.filesystem.StorageVolumeInfo]" text=".addEventListener(%type:String=StorageVolumeChangeEvent.STORAGE_VOLUME_MOUNT{StorageVolumeChangeEvent.STORAGE_VOLUME_UNMOUNT,StorageVolumeChangeEvent.STORAGE_VOLUME_MOUNT},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a storage volume has been mounted." version="" playername="AIR" helpurl="flash.filesystem:StorageVolumeInfo_flash.events.StorageVolumeChangeEvent.STORAGE_VOLUME_MOUNT_storageVolumeMount"/>
            </folder>
        </folder>
    </folder>
        <folder name="flash.filters" id="flash.filters" sort="true" tiptext="Classes for package flash.filters" helpurl="flash.filters">
        <folder name="BevelFilter" id="[flash.filters.BevelFilter]" sort="true" index="true" asAncestors="flash.filters:BitmapFilter,Object" tiptext="The BevelFilter class lets you add a bevel effect to display objects." helpurl="flash.filters:BevelFilter">
            <folder name="Methods" id="Methods" tiptext="Methods for class BevelFilter" helpurl="flash.filters:BevelFilter">
                <string name="BevelFilter" object="[flash.filters.BevelFilter]" text="new BevelFilter(%[distance:Number=4.0,angle:Number=45,highlightColor:uint=0xFFFFFF,highlightAlpha:Number=1.0,shadowColor:uint=0x000000,shadowAlpha:Number=1.0,blurX:Number=4.0,blurY:Number=4.0,strength:Number=1,quality:int=1,type:String=inner,knockout:Boolean=false]%)" constructor="true" tiptext="Initializes a new BevelFilter instance with the specified parameters." version="9" playername="" helpurl="flash.filters:BevelFilter:BevelFilter"/>
                <string name="clone" object="[flash.filters.BevelFilter]" text=".clone(%%):flash.filters:BitmapFilter" tiptext="Returns a copy of this filter object." version="9" playername="" helpurl="flash.filters:BevelFilter:clone"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class BevelFilter" helpurl="flash.filters:BevelFilter">
                <string name="angle" object="[flash.filters.BevelFilter]" text=".angle" tiptext="The angle of the bevel." version="" playername="" helpurl="flash.filters:BevelFilter:angle:get"/>
                <string name="blurX" object="[flash.filters.BevelFilter]" text=".blurX" tiptext="The amount of horizontal blur, in pixels." version="" playername="" helpurl="flash.filters:BevelFilter:blurX:get"/>
                <string name="blurY" object="[flash.filters.BevelFilter]" text=".blurY" tiptext="The amount of vertical blur, in pixels." version="" playername="" helpurl="flash.filters:BevelFilter:blurY:get"/>
                <string name="distance" object="[flash.filters.BevelFilter]" text=".distance" tiptext="The offset distance of the bevel." version="" playername="" helpurl="flash.filters:BevelFilter:distance:get"/>
                <string name="highlightAlpha" object="[flash.filters.BevelFilter]" text=".highlightAlpha" tiptext="The alpha transparency value of the highlight color." version="" playername="" helpurl="flash.filters:BevelFilter:highlightAlpha:get"/>
                <string name="highlightColor" object="[flash.filters.BevelFilter]" text=".highlightColor" tiptext="The highlight color of the bevel." version="" playername="" helpurl="flash.filters:BevelFilter:highlightColor:get"/>
                <string name="knockout" object="[flash.filters.BevelFilter]" text=".knockout" tiptext="Applies a knockout effect (true), which effectively makes the object&apos;s fill transparent and reveals the background color of the document." version="" playername="" helpurl="flash.filters:BevelFilter:knockout:get"/>
                <string name="quality" object="[flash.filters.BevelFilter]" text=".quality" tiptext="The number of times to apply the filter." version="" playername="" helpurl="flash.filters:BevelFilter:quality:get"/>
                <string name="shadowAlpha" object="[flash.filters.BevelFilter]" text=".shadowAlpha" tiptext="The alpha transparency value of the shadow color." version="" playername="" helpurl="flash.filters:BevelFilter:shadowAlpha:get"/>
                <string name="shadowColor" object="[flash.filters.BevelFilter]" text=".shadowColor" tiptext="The shadow color of the bevel." version="" playername="" helpurl="flash.filters:BevelFilter:shadowColor:get"/>
                <string name="strength" object="[flash.filters.BevelFilter]" text=".strength" tiptext="The strength of the imprint or spread." version="" playername="" helpurl="flash.filters:BevelFilter:strength:get"/>
                <string name="type" object="[flash.filters.BevelFilter]" text=".type" tiptext="The placement of the bevel on the object." version="" playername="" helpurl="flash.filters:BevelFilter:type:get"/>
            </folder>
        </folder>
        <folder name="BitmapFilter" id="[flash.filters.BitmapFilter]" sort="true" index="true" asAncestors="Object" tiptext="The BitmapFilter class is the base class for all image filter effects." helpurl="flash.filters:BitmapFilter">
            <folder name="Methods" id="Methods" tiptext="Methods for class BitmapFilter" helpurl="flash.filters:BitmapFilter">
                <string name="clone" object="[flash.filters.BitmapFilter]" text=".clone(%%):flash.filters:BitmapFilter" tiptext="A copy of the BitmapFilter object." version="9" playername="" helpurl="flash.filters:BitmapFilter:clone"/>
            </folder>
        </folder>
        <folder name="BitmapFilterQuality" id="[flash.filters.BitmapFilterQuality]" sort="true" index="true" asAncestors="Object" tiptext="The BitmapFilterQuality class contains values to set the rendering quality of a BitmapFilter object." helpurl="flash.filters:BitmapFilterQuality">
            <folder name="Properties" id="Properties" tiptext="Properties for class BitmapFilterQuality" helpurl="flash.filters:BitmapFilterQuality">
                <string name="HIGH" object="[flash.filters.BitmapFilterQuality]" text="BitmapFilterQuality.HIGH" constant="true" tiptext="Defines the high quality filter setting." version="" playername="" helpurl="flash.filters:BitmapFilterQuality:HIGH"/>
                <string name="LOW" object="[flash.filters.BitmapFilterQuality]" text="BitmapFilterQuality.LOW" constant="true" tiptext="Defines the low quality filter setting." version="" playername="" helpurl="flash.filters:BitmapFilterQuality:LOW"/>
                <string name="MEDIUM" object="[flash.filters.BitmapFilterQuality]" text="BitmapFilterQuality.MEDIUM" constant="true" tiptext="Defines the medium quality filter setting." version="" playername="" helpurl="flash.filters:BitmapFilterQuality:MEDIUM"/>
            </folder>
        </folder>
        <folder name="BitmapFilterType" id="[flash.filters.BitmapFilterType]" sort="true" index="true" asAncestors="Object" tiptext="The BitmapFilterType class contains values to set the type of a BitmapFilter." helpurl="flash.filters:BitmapFilterType">
            <folder name="Properties" id="Properties" tiptext="Properties for class BitmapFilterType" helpurl="flash.filters:BitmapFilterType">
                <string name="FULL" object="[flash.filters.BitmapFilterType]" text="BitmapFilterType.FULL" constant="true" tiptext="Defines the setting that applies a filter to the entire area of an object." version="" playername="" helpurl="flash.filters:BitmapFilterType:FULL"/>
                <string name="INNER" object="[flash.filters.BitmapFilterType]" text="BitmapFilterType.INNER" constant="true" tiptext="Defines the setting that applies a filter to the inner area of an object." version="" playername="" helpurl="flash.filters:BitmapFilterType:INNER"/>
                <string name="OUTER" object="[flash.filters.BitmapFilterType]" text="BitmapFilterType.OUTER" constant="true" tiptext="Defines the setting that applies a filter to the outer area of an object." version="" playername="" helpurl="flash.filters:BitmapFilterType:OUTER"/>
            </folder>
        </folder>
        <folder name="BlurFilter" id="[flash.filters.BlurFilter]" sort="true" index="true" asAncestors="flash.filters:BitmapFilter,Object" tiptext="The BlurFilter class lets you apply a blur visual effect to display objects." helpurl="flash.filters:BlurFilter">
            <folder name="Methods" id="Methods" tiptext="Methods for class BlurFilter" helpurl="flash.filters:BlurFilter">
                <string name="BlurFilter" object="[flash.filters.BlurFilter]" text="new BlurFilter(%[blurX:Number=4.0,blurY:Number=4.0,quality:int=1]%)" constructor="true" tiptext="Initializes the filter." version="9" playername="" helpurl="flash.filters:BlurFilter:BlurFilter"/>
                <string name="clone" object="[flash.filters.BlurFilter]" text=".clone(%%):flash.filters:BitmapFilter" tiptext="Returns a copy of this filter object." version="9" playername="" helpurl="flash.filters:BlurFilter:clone"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class BlurFilter" helpurl="flash.filters:BlurFilter">
                <string name="blurX" object="[flash.filters.BlurFilter]" text=".blurX" tiptext="The amount of horizontal blur." version="" playername="" helpurl="flash.filters:BlurFilter:blurX:get"/>
                <string name="blurY" object="[flash.filters.BlurFilter]" text=".blurY" tiptext="The amount of vertical blur." version="" playername="" helpurl="flash.filters:BlurFilter:blurY:get"/>
                <string name="quality" object="[flash.filters.BlurFilter]" text=".quality" tiptext="The number of times to perform the blur." version="" playername="" helpurl="flash.filters:BlurFilter:quality:get"/>
            </folder>
        </folder>
        <folder name="ColorMatrixFilter" id="[flash.filters.ColorMatrixFilter]" sort="true" index="true" asAncestors="flash.filters:BitmapFilter,Object" tiptext="The ColorMatrixFilter class lets you apply a 4 x 5 matrix transformation on the RGBA color and alpha valuesof every pixel in the input image to produce a result with a new set of RGBA color and alpha values." helpurl="flash.filters:ColorMatrixFilter">
            <folder name="Methods" id="Methods" tiptext="Methods for class ColorMatrixFilter" helpurl="flash.filters:ColorMatrixFilter">
                <string name="ColorMatrixFilter" object="[flash.filters.ColorMatrixFilter]" text="new ColorMatrixFilter(%[matrix:Array=null]%)" constructor="true" tiptext="Initializes a new ColorMatrixFilter instance." version="9" playername="" helpurl="flash.filters:ColorMatrixFilter:ColorMatrixFilter"/>
                <string name="clone" object="[flash.filters.ColorMatrixFilter]" text=".clone(%%):flash.filters:BitmapFilter" tiptext="Returns a copy of this filter object." version="9" playername="" helpurl="flash.filters:ColorMatrixFilter:clone"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class ColorMatrixFilter" helpurl="flash.filters:ColorMatrixFilter">
                <string name="matrix" object="[flash.filters.ColorMatrixFilter]" text=".matrix" tiptext="An array of 20 items for 4 x 5 color transform." version="" playername="" helpurl="flash.filters:ColorMatrixFilter:matrix:get"/>
            </folder>
        </folder>
        <folder name="ConvolutionFilter" id="[flash.filters.ConvolutionFilter]" sort="true" index="true" asAncestors="flash.filters:BitmapFilter,Object" tiptext="The ConvolutionFilter class applies a matrix convolution filter effect." helpurl="flash.filters:ConvolutionFilter">
            <folder name="Methods" id="Methods" tiptext="Methods for class ConvolutionFilter" helpurl="flash.filters:ConvolutionFilter">
                <string name="ConvolutionFilter" object="[flash.filters.ConvolutionFilter]" text="new ConvolutionFilter(%[matrixX:Number=0,matrixY:Number=0,matrix:Array=null,divisor:Number=1.0,bias:Number=0.0,preserveAlpha:Boolean=true,clamp:Boolean=true,color:uint=0,alpha:Number=0.0]%)" constructor="true" tiptext="Initializes a ConvolutionFilter instance with the specified parameters." version="9" playername="" helpurl="flash.filters:ConvolutionFilter:ConvolutionFilter"/>
                <string name="clone" object="[flash.filters.ConvolutionFilter]" text=".clone(%%):flash.filters:BitmapFilter" tiptext="Returns a copy of this filter object." version="9" playername="" helpurl="flash.filters:ConvolutionFilter:clone"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class ConvolutionFilter" helpurl="flash.filters:ConvolutionFilter">
                <string name="alpha" object="[flash.filters.ConvolutionFilter]" text=".alpha" tiptext="The alpha transparency value of the substitute color." version="" playername="" helpurl="flash.filters:ConvolutionFilter:alpha:get"/>
                <string name="bias" object="[flash.filters.ConvolutionFilter]" text=".bias" tiptext="The amount of bias to add to the result of the matrix transformation." version="" playername="" helpurl="flash.filters:ConvolutionFilter:bias:get"/>
                <string name="clamp" object="[flash.filters.ConvolutionFilter]" text=".clamp" tiptext="Indicates whether the image should be clamped." version="" playername="" helpurl="flash.filters:ConvolutionFilter:clamp:get"/>
                <string name="color" object="[flash.filters.ConvolutionFilter]" text=".color" tiptext="The hexadecimal color to substitute for pixels that are off the source image." version="" playername="" helpurl="flash.filters:ConvolutionFilter:color:get"/>
                <string name="divisor" object="[flash.filters.ConvolutionFilter]" text=".divisor" tiptext="The divisor used during matrix transformation." version="" playername="" helpurl="flash.filters:ConvolutionFilter:divisor:get"/>
                <string name="matrixX" object="[flash.filters.ConvolutionFilter]" text=".matrixX" tiptext="The x dimension of the matrix (the number of columns in the matrix)." version="" playername="" helpurl="flash.filters:ConvolutionFilter:matrixX:get"/>
                <string name="matrixY" object="[flash.filters.ConvolutionFilter]" text=".matrixY" tiptext="The y dimension of the matrix (the number of rows in the matrix)." version="" playername="" helpurl="flash.filters:ConvolutionFilter:matrixY:get"/>
                <string name="matrix" object="[flash.filters.ConvolutionFilter]" text=".matrix" tiptext="An array of values used for matrix transformation." version="" playername="" helpurl="flash.filters:ConvolutionFilter:matrix:get"/>
                <string name="preserveAlpha" object="[flash.filters.ConvolutionFilter]" text=".preserveAlpha" tiptext="Indicates if the alpha channel is preserved without the filter effect or if the convolution filter is appliedto the alpha channel as well as the color channels." version="" playername="" helpurl="flash.filters:ConvolutionFilter:preserveAlpha:get"/>
            </folder>
        </folder>
        <folder name="DisplacementMapFilter" id="[flash.filters.DisplacementMapFilter]" sort="true" index="true" asAncestors="flash.filters:BitmapFilter,Object" tiptext="The DisplacementMapFilter class uses the pixel values from the specified BitmapData object (called the displacement map image) to perform a displacement of an object." helpurl="flash.filters:DisplacementMapFilter">
            <folder name="Methods" id="Methods" tiptext="Methods for class DisplacementMapFilter" helpurl="flash.filters:DisplacementMapFilter">
                <string name="DisplacementMapFilter" object="[flash.filters.DisplacementMapFilter]" text="new DisplacementMapFilter(%[mapBitmap:flash.display:BitmapData=null,mapPoint:flash.geom:Point=null,componentX:uint=0,componentY:uint=0,scaleX:Number=0.0,scaleY:Number=0.0,mode:String=wrap,color:uint=0,alpha:Number=0.0]%)" constructor="true" tiptext="Initializes a DisplacementMapFilter instance." version="9" playername="" helpurl="flash.filters:DisplacementMapFilter:DisplacementMapFilter"/>
                <string name="clone" object="[flash.filters.DisplacementMapFilter]" text=".clone(%%):flash.filters:BitmapFilter" tiptext="Returns a copy of this filter object." version="9" playername="" helpurl="flash.filters:DisplacementMapFilter:clone"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class DisplacementMapFilter" helpurl="flash.filters:DisplacementMapFilter">
                <string name="alpha" object="[flash.filters.DisplacementMapFilter]" text=".alpha" tiptext="Specifies the alpha transparency value to use for out-of-bounds displacements." version="" playername="" helpurl="flash.filters:DisplacementMapFilter:alpha:get"/>
                <string name="color" object="[flash.filters.DisplacementMapFilter]" text=".color" tiptext="Specifies what color to use for out-of-bounds displacements." version="" playername="" helpurl="flash.filters:DisplacementMapFilter:color:get"/>
                <string name="componentX" object="[flash.filters.DisplacementMapFilter]" text=".componentX" tiptext="Describes which color channel to use in the map image to displace the x result." version="" playername="" helpurl="flash.filters:DisplacementMapFilter:componentX:get"/>
                <string name="componentY" object="[flash.filters.DisplacementMapFilter]" text=".componentY" tiptext="Describes which color channel to use in the map image to displace the y result." version="" playername="" helpurl="flash.filters:DisplacementMapFilter:componentY:get"/>
                <string name="mapBitmap" object="[flash.filters.DisplacementMapFilter]" text=".mapBitmap" tiptext="A BitmapData object containing the displacement map data." version="" playername="" helpurl="flash.filters:DisplacementMapFilter:mapBitmap:get"/>
                <string name="mapPoint" object="[flash.filters.DisplacementMapFilter]" text=".mapPoint" tiptext="A value that contains the offset of the upper-left corner of the target display object from the upper-left corner of the map image." version="" playername="" helpurl="flash.filters:DisplacementMapFilter:mapPoint:get"/>
                <string name="mode" object="[flash.filters.DisplacementMapFilter]" text=".mode" tiptext="The mode for the filter." version="" playername="" helpurl="flash.filters:DisplacementMapFilter:mode:get"/>
                <string name="scaleX" object="[flash.filters.DisplacementMapFilter]" text=".scaleX" tiptext="The multiplier to use to scale the x displacement result from the map calculation." version="" playername="" helpurl="flash.filters:DisplacementMapFilter:scaleX:get"/>
                <string name="scaleY" object="[flash.filters.DisplacementMapFilter]" text=".scaleY" tiptext="The multiplier to use to scale the y displacement result from the map calculation." version="" playername="" helpurl="flash.filters:DisplacementMapFilter:scaleY:get"/>
            </folder>
        </folder>
        <folder name="DisplacementMapFilterMode" id="[flash.filters.DisplacementMapFilterMode]" sort="true" index="true" asAncestors="Object" tiptext="The DisplacementMapFilterMode class provides values for the mode propertyof the DisplacementMapFilter class." helpurl="flash.filters:DisplacementMapFilterMode">
            <folder name="Properties" id="Properties" tiptext="Properties for class DisplacementMapFilterMode" helpurl="flash.filters:DisplacementMapFilterMode">
                <string name="CLAMP" object="[flash.filters.DisplacementMapFilterMode]" text="DisplacementMapFilterMode.CLAMP" constant="true" tiptext="Clamps the displacement value to the edge of the source image." version="" playername="" helpurl="flash.filters:DisplacementMapFilterMode:CLAMP"/>
                <string name="COLOR" object="[flash.filters.DisplacementMapFilterMode]" text="DisplacementMapFilterMode.COLOR" constant="true" tiptext="If the displacement value is outside the image, substitutes the values in the color and alpha properties." version="" playername="" helpurl="flash.filters:DisplacementMapFilterMode:COLOR"/>
                <string name="IGNORE" object="[flash.filters.DisplacementMapFilterMode]" text="DisplacementMapFilterMode.IGNORE" constant="true" tiptext="If the displacement value is out of range, ignores the displacement and uses the source pixel." version="" playername="" helpurl="flash.filters:DisplacementMapFilterMode:IGNORE"/>
                <string name="WRAP" object="[flash.filters.DisplacementMapFilterMode]" text="DisplacementMapFilterMode.WRAP" constant="true" tiptext="Wraps the displacement value to the other side of the source image." version="" playername="" helpurl="flash.filters:DisplacementMapFilterMode:WRAP"/>
            </folder>
        </folder>
        <folder name="DropShadowFilter" id="[flash.filters.DropShadowFilter]" sort="true" index="true" asAncestors="flash.filters:BitmapFilter,Object" tiptext="The DropShadowFilter class lets you add a drop shadow to display objects." helpurl="flash.filters:DropShadowFilter">
            <folder name="Methods" id="Methods" tiptext="Methods for class DropShadowFilter" helpurl="flash.filters:DropShadowFilter">
                <string name="DropShadowFilter" object="[flash.filters.DropShadowFilter]" text="new DropShadowFilter(%[distance:Number=4.0,angle:Number=45,color:uint=0,alpha:Number=1.0,blurX:Number=4.0,blurY:Number=4.0,strength:Number=1.0,quality:int=1,inner:Boolean=false,knockout:Boolean=false,hideObject:Boolean=false]%)" constructor="true" tiptext="Creates a new DropShadowFilter instance with the specified parameters." version="9" playername="" helpurl="flash.filters:DropShadowFilter:DropShadowFilter"/>
                <string name="clone" object="[flash.filters.DropShadowFilter]" text=".clone(%%):flash.filters:BitmapFilter" tiptext="Returns a copy of this filter object." version="9" playername="" helpurl="flash.filters:DropShadowFilter:clone"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class DropShadowFilter" helpurl="flash.filters:DropShadowFilter">
                <string name="alpha" object="[flash.filters.DropShadowFilter]" text=".alpha" tiptext="The alpha transparency value for the shadow color." version="" playername="" helpurl="flash.filters:DropShadowFilter:alpha:get"/>
                <string name="angle" object="[flash.filters.DropShadowFilter]" text=".angle" tiptext="The angle of the shadow." version="" playername="" helpurl="flash.filters:DropShadowFilter:angle:get"/>
                <string name="blurX" object="[flash.filters.DropShadowFilter]" text=".blurX" tiptext="The amount of horizontal blur." version="" playername="" helpurl="flash.filters:DropShadowFilter:blurX:get"/>
                <string name="blurY" object="[flash.filters.DropShadowFilter]" text=".blurY" tiptext="The amount of vertical blur." version="" playername="" helpurl="flash.filters:DropShadowFilter:blurY:get"/>
                <string name="color" object="[flash.filters.DropShadowFilter]" text=".color" tiptext="The color of the shadow." version="" playername="" helpurl="flash.filters:DropShadowFilter:color:get"/>
                <string name="distance" object="[flash.filters.DropShadowFilter]" text=".distance" tiptext="The offset distance for the shadow, in pixels." version="" playername="" helpurl="flash.filters:DropShadowFilter:distance:get"/>
                <string name="hideObject" object="[flash.filters.DropShadowFilter]" text=".hideObject" tiptext="Indicates whether or not the object is hidden." version="" playername="" helpurl="flash.filters:DropShadowFilter:hideObject:get"/>
                <string name="inner" object="[flash.filters.DropShadowFilter]" text=".inner" tiptext="Indicates whether or not the shadow is an inner shadow." version="" playername="" helpurl="flash.filters:DropShadowFilter:inner:get"/>
                <string name="knockout" object="[flash.filters.DropShadowFilter]" text=".knockout" tiptext="Applies a knockout effect (true), which effectively makes the object&apos;s fill transparent and reveals the background color of the document." version="" playername="" helpurl="flash.filters:DropShadowFilter:knockout:get"/>
                <string name="quality" object="[flash.filters.DropShadowFilter]" text=".quality" tiptext="The number of times to apply the filter." version="" playername="" helpurl="flash.filters:DropShadowFilter:quality:get"/>
                <string name="strength" object="[flash.filters.DropShadowFilter]" text=".strength" tiptext="The strength of the imprint or spread." version="" playername="" helpurl="flash.filters:DropShadowFilter:strength:get"/>
            </folder>
        </folder>
        <folder name="GlowFilter" id="[flash.filters.GlowFilter]" sort="true" index="true" asAncestors="flash.filters:BitmapFilter,Object" tiptext="The GlowFilter class lets you apply a glow effect to display objects." helpurl="flash.filters:GlowFilter">
            <folder name="Methods" id="Methods" tiptext="Methods for class GlowFilter" helpurl="flash.filters:GlowFilter">
                <string name="GlowFilter" object="[flash.filters.GlowFilter]" text="new GlowFilter(%[color:uint=0xFF0000,alpha:Number=1.0,blurX:Number=6.0,blurY:Number=6.0,strength:Number=2,quality:int=1,inner:Boolean=false,knockout:Boolean=false]%)" constructor="true" tiptext="Initializes a new GlowFilter instance with the specified parameters." version="9" playername="" helpurl="flash.filters:GlowFilter:GlowFilter"/>
                <string name="clone" object="[flash.filters.GlowFilter]" text=".clone(%%):flash.filters:BitmapFilter" tiptext="Returns a copy of this filter object." version="9" playername="" helpurl="flash.filters:GlowFilter:clone"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class GlowFilter" helpurl="flash.filters:GlowFilter">
                <string name="alpha" object="[flash.filters.GlowFilter]" text=".alpha" tiptext="The alpha transparency value for the color." version="" playername="" helpurl="flash.filters:GlowFilter:alpha:get"/>
                <string name="blurX" object="[flash.filters.GlowFilter]" text=".blurX" tiptext="The amount of horizontal blur." version="" playername="" helpurl="flash.filters:GlowFilter:blurX:get"/>
                <string name="blurY" object="[flash.filters.GlowFilter]" text=".blurY" tiptext="The amount of vertical blur." version="" playername="" helpurl="flash.filters:GlowFilter:blurY:get"/>
                <string name="color" object="[flash.filters.GlowFilter]" text=".color" tiptext="The color of the glow." version="" playername="" helpurl="flash.filters:GlowFilter:color:get"/>
                <string name="inner" object="[flash.filters.GlowFilter]" text=".inner" tiptext="Specifies whether the glow is an inner glow." version="" playername="" helpurl="flash.filters:GlowFilter:inner:get"/>
                <string name="knockout" object="[flash.filters.GlowFilter]" text=".knockout" tiptext="Specifies whether the object has a knockout effect." version="" playername="" helpurl="flash.filters:GlowFilter:knockout:get"/>
                <string name="quality" object="[flash.filters.GlowFilter]" text=".quality" tiptext="The number of times to apply the filter." version="" playername="" helpurl="flash.filters:GlowFilter:quality:get"/>
                <string name="strength" object="[flash.filters.GlowFilter]" text=".strength" tiptext="The strength of the imprint or spread." version="" playername="" helpurl="flash.filters:GlowFilter:strength:get"/>
            </folder>
        </folder>
        <folder name="GradientBevelFilter" id="[flash.filters.GradientBevelFilter]" sort="true" index="true" asAncestors="flash.filters:BitmapFilter,Object" tiptext="The GradientBevelFilter class lets you apply a gradient bevel effect to display objects." helpurl="flash.filters:GradientBevelFilter">
            <folder name="Methods" id="Methods" tiptext="Methods for class GradientBevelFilter" helpurl="flash.filters:GradientBevelFilter">
                <string name="GradientBevelFilter" object="[flash.filters.GradientBevelFilter]" text="new GradientBevelFilter(%[distance:Number=4.0,angle:Number=45,colors:Array=null,alphas:Array=null,ratios:Array=null,blurX:Number=4.0,blurY:Number=4.0,strength:Number=1,quality:int=1,type:String=inner,knockout:Boolean=false]%)" constructor="true" tiptext="Initializes the filter with the specified parameters." version="9" playername="" helpurl="flash.filters:GradientBevelFilter:GradientBevelFilter"/>
                <string name="clone" object="[flash.filters.GradientBevelFilter]" text=".clone(%%):flash.filters:BitmapFilter" tiptext="Returns a copy of this filter object." version="9" playername="" helpurl="flash.filters:GradientBevelFilter:clone"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class GradientBevelFilter" helpurl="flash.filters:GradientBevelFilter">
                <string name="alphas" object="[flash.filters.GradientBevelFilter]" text=".alphas" tiptext="An array of alpha transparency values for the corresponding colors in the colors array." version="" playername="" helpurl="flash.filters:GradientBevelFilter:alphas:get"/>
                <string name="angle" object="[flash.filters.GradientBevelFilter]" text=".angle" tiptext="The angle, in degrees." version="" playername="" helpurl="flash.filters:GradientBevelFilter:angle:get"/>
                <string name="blurX" object="[flash.filters.GradientBevelFilter]" text=".blurX" tiptext="The amount of horizontal blur." version="" playername="" helpurl="flash.filters:GradientBevelFilter:blurX:get"/>
                <string name="blurY" object="[flash.filters.GradientBevelFilter]" text=".blurY" tiptext="The amount of vertical blur." version="" playername="" helpurl="flash.filters:GradientBevelFilter:blurY:get"/>
                <string name="colors" object="[flash.filters.GradientBevelFilter]" text=".colors" tiptext="An array of RGB hexadecimal color values to use in the gradient." version="" playername="" helpurl="flash.filters:GradientBevelFilter:colors:get"/>
                <string name="distance" object="[flash.filters.GradientBevelFilter]" text=".distance" tiptext="The offset distance." version="" playername="" helpurl="flash.filters:GradientBevelFilter:distance:get"/>
                <string name="knockout" object="[flash.filters.GradientBevelFilter]" text=".knockout" tiptext="Specifies whether the object has a knockout effect." version="" playername="" helpurl="flash.filters:GradientBevelFilter:knockout:get"/>
                <string name="quality" object="[flash.filters.GradientBevelFilter]" text=".quality" tiptext="The number of times to apply the filter." version="" playername="" helpurl="flash.filters:GradientBevelFilter:quality:get"/>
                <string name="ratios" object="[flash.filters.GradientBevelFilter]" text=".ratios" tiptext="An array of color distribution ratios for the corresponding colors in thecolors array." version="" playername="" helpurl="flash.filters:GradientBevelFilter:ratios:get"/>
                <string name="strength" object="[flash.filters.GradientBevelFilter]" text=".strength" tiptext="The strength of the imprint or spread." version="" playername="" helpurl="flash.filters:GradientBevelFilter:strength:get"/>
                <string name="type" object="[flash.filters.GradientBevelFilter]" text=".type" tiptext="The placement of the bevel effect." version="" playername="" helpurl="flash.filters:GradientBevelFilter:type:get"/>
            </folder>
        </folder>
        <folder name="GradientGlowFilter" id="[flash.filters.GradientGlowFilter]" sort="true" index="true" asAncestors="flash.filters:BitmapFilter,Object" tiptext="The GradientGlowFilter class lets you apply a gradient glow effect to display objects." helpurl="flash.filters:GradientGlowFilter">
            <folder name="Methods" id="Methods" tiptext="Methods for class GradientGlowFilter" helpurl="flash.filters:GradientGlowFilter">
                <string name="GradientGlowFilter" object="[flash.filters.GradientGlowFilter]" text="new GradientGlowFilter(%[distance:Number=4.0,angle:Number=45,colors:Array=null,alphas:Array=null,ratios:Array=null,blurX:Number=4.0,blurY:Number=4.0,strength:Number=1,quality:int=1,type:String=inner,knockout:Boolean=false]%)" constructor="true" tiptext="Initializes the filter with the specified parameters." version="9" playername="" helpurl="flash.filters:GradientGlowFilter:GradientGlowFilter"/>
                <string name="clone" object="[flash.filters.GradientGlowFilter]" text=".clone(%%):flash.filters:BitmapFilter" tiptext="Returns a copy of this filter object." version="9" playername="" helpurl="flash.filters:GradientGlowFilter:clone"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class GradientGlowFilter" helpurl="flash.filters:GradientGlowFilter">
                <string name="alphas" object="[flash.filters.GradientGlowFilter]" text=".alphas" tiptext="An array of alpha transparency values for the corresponding colors inthe colors array." version="" playername="" helpurl="flash.filters:GradientGlowFilter:alphas:get"/>
                <string name="angle" object="[flash.filters.GradientGlowFilter]" text=".angle" tiptext="The angle, in degrees." version="" playername="" helpurl="flash.filters:GradientGlowFilter:angle:get"/>
                <string name="blurX" object="[flash.filters.GradientGlowFilter]" text=".blurX" tiptext="The amount of horizontal blur." version="" playername="" helpurl="flash.filters:GradientGlowFilter:blurX:get"/>
                <string name="blurY" object="[flash.filters.GradientGlowFilter]" text=".blurY" tiptext="The amount of vertical blur." version="" playername="" helpurl="flash.filters:GradientGlowFilter:blurY:get"/>
                <string name="colors" object="[flash.filters.GradientGlowFilter]" text=".colors" tiptext="An array of colors that defines a gradient." version="" playername="" helpurl="flash.filters:GradientGlowFilter:colors:get"/>
                <string name="distance" object="[flash.filters.GradientGlowFilter]" text=".distance" tiptext="The offset distance of the glow." version="" playername="" helpurl="flash.filters:GradientGlowFilter:distance:get"/>
                <string name="knockout" object="[flash.filters.GradientGlowFilter]" text=".knockout" tiptext="Specifies whether the object has a knockout effect." version="" playername="" helpurl="flash.filters:GradientGlowFilter:knockout:get"/>
                <string name="quality" object="[flash.filters.GradientGlowFilter]" text=".quality" tiptext="The number of times to apply the filter." version="" playername="" helpurl="flash.filters:GradientGlowFilter:quality:get"/>
                <string name="ratios" object="[flash.filters.GradientGlowFilter]" text=".ratios" tiptext="An array of color distribution ratios for the corresponding colors in the colors array." version="" playername="" helpurl="flash.filters:GradientGlowFilter:ratios:get"/>
                <string name="strength" object="[flash.filters.GradientGlowFilter]" text=".strength" tiptext="The strength of the imprint or spread." version="" playername="" helpurl="flash.filters:GradientGlowFilter:strength:get"/>
                <string name="type" object="[flash.filters.GradientGlowFilter]" text=".type" tiptext="The placement of the filter effect." version="" playername="" helpurl="flash.filters:GradientGlowFilter:type:get"/>
            </folder>
        </folder>
        <folder name="ShaderFilter" id="[flash.filters.ShaderFilter]" sort="true" index="true" asAncestors="flash.filters:BitmapFilter,Object" tiptext="The ShaderFilter class applies a filter by executing a shader on the object being filtered." helpurl="flash.filters:ShaderFilter">
            <folder name="Methods" id="Methods" tiptext="Methods for class ShaderFilter" helpurl="flash.filters:ShaderFilter">
                <string name="ShaderFilter" object="[flash.filters.ShaderFilter]" text="new ShaderFilter(%[shader:flash.display:Shader=null]%)" constructor="true" tiptext="Creates a new shader filter." version="1.5" playername="" helpurl="flash.filters:ShaderFilter:ShaderFilter"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class ShaderFilter" helpurl="flash.filters:ShaderFilter">
                <string name="bottomExtension" object="[flash.filters.ShaderFilter]" text=".bottomExtension" tiptext="The growth in pixels on the bottom side of the target object." version="" playername="" helpurl="flash.filters:ShaderFilter:bottomExtension:get"/>
                <string name="leftExtension" object="[flash.filters.ShaderFilter]" text=".leftExtension" tiptext="The growth in pixels on the left side of the target object." version="" playername="" helpurl="flash.filters:ShaderFilter:leftExtension:get"/>
                <string name="rightExtension" object="[flash.filters.ShaderFilter]" text=".rightExtension" tiptext="The growth in pixels on the right side of the target object." version="" playername="" helpurl="flash.filters:ShaderFilter:rightExtension:get"/>
                <string name="shader" object="[flash.filters.ShaderFilter]" text=".shader" tiptext="The shader to use for this filter." version="" playername="" helpurl="flash.filters:ShaderFilter:shader:get"/>
                <string name="topExtension" object="[flash.filters.ShaderFilter]" text=".topExtension" tiptext="The growth in pixels on the top side of the target object." version="" playername="" helpurl="flash.filters:ShaderFilter:topExtension:get"/>
            </folder>
        </folder>
    </folder>
        <folder name="flash.geom" id="flash.geom" sort="true" tiptext="Classes for package flash.geom" helpurl="flash.geom">
        <folder name="ColorTransform" id="[flash.geom.ColorTransform]" sort="true" index="true" asAncestors="Object" tiptext="The ColorTransform class lets you adjust the color values in a display object." helpurl="flash.geom:ColorTransform">
            <folder name="Methods" id="Methods" tiptext="Methods for class ColorTransform" helpurl="flash.geom:ColorTransform">
                <string name="ColorTransform" object="[flash.geom.ColorTransform]" text="new ColorTransform(%[redMultiplier:Number=1.0,greenMultiplier:Number=1.0,blueMultiplier:Number=1.0,alphaMultiplier:Number=1.0,redOffset:Number=0,greenOffset:Number=0,blueOffset:Number=0,alphaOffset:Number=0]%)" constructor="true" tiptext="Creates a ColorTransform object for a display object." version="4" playername="" helpurl="flash.geom:ColorTransform:ColorTransform"/>
                <string name="concat" object="[flash.geom.ColorTransform]" text=".concat(%second:flash.geom:ColorTransform%):void" tiptext="Concatenates the ColorTranform object specified by the second parameter with the current ColorTransform object and sets the current object as the result, which is an additive combination of the two color transformations." version="4" playername="" helpurl="flash.geom:ColorTransform:concat"/>
                <string name="toString" object="[flash.geom.ColorTransform]" text=".toString(%%):String" tiptext="Formats and returns a string that describes all of the properties of the ColorTransform object." version="4" playername="" helpurl="flash.geom:ColorTransform:toString"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class ColorTransform" helpurl="flash.geom:ColorTransform">
                <string name="alphaMultiplier" object="[flash.geom.ColorTransform]" text=".alphaMultiplier" tiptext="A decimal value that is multiplied with the alpha transparency channel value." version="" playername="" helpurl="flash.geom:ColorTransform:alphaMultiplier"/>
                <string name="alphaOffset" object="[flash.geom.ColorTransform]" text=".alphaOffset" tiptext="A number from -255 to 255 that is added to the alpha transparency channel value after it has been multiplied by the alphaMultiplier value." version="" playername="" helpurl="flash.geom:ColorTransform:alphaOffset"/>
                <string name="blueMultiplier" object="[flash.geom.ColorTransform]" text=".blueMultiplier" tiptext="A decimal value that is multiplied with the blue channel value." version="" playername="" helpurl="flash.geom:ColorTransform:blueMultiplier"/>
                <string name="blueOffset" object="[flash.geom.ColorTransform]" text=".blueOffset" tiptext="A number from -255 to 255 that is added to the blue channel value after it has been multiplied by the blueMultiplier value." version="" playername="" helpurl="flash.geom:ColorTransform:blueOffset"/>
                <string name="greenMultiplier" object="[flash.geom.ColorTransform]" text=".greenMultiplier" tiptext="A decimal value that is multiplied with the green channel value." version="" playername="" helpurl="flash.geom:ColorTransform:greenMultiplier"/>
                <string name="greenOffset" object="[flash.geom.ColorTransform]" text=".greenOffset" tiptext="A number from -255 to 255 that is added to the green channel value after it has been multiplied by the greenMultiplier value." version="" playername="" helpurl="flash.geom:ColorTransform:greenOffset"/>
                <string name="redMultiplier" object="[flash.geom.ColorTransform]" text=".redMultiplier" tiptext="A decimal value that is multiplied with the red channel value." version="" playername="" helpurl="flash.geom:ColorTransform:redMultiplier"/>
                <string name="redOffset" object="[flash.geom.ColorTransform]" text=".redOffset" tiptext="A number from -255 to 255 that is added to the red channel value after it has been multiplied by the redMultiplier value." version="" playername="" helpurl="flash.geom:ColorTransform:redOffset"/>
                <string name="color" object="[flash.geom.ColorTransform]" text=".color" tiptext="The RGB color value for a ColorTransform object." version="" playername="" helpurl="flash.geom:ColorTransform:color:get"/>
            </folder>
        </folder>
        <folder name="Matrix" id="[flash.geom.Matrix]" sort="true" index="true" asAncestors="Object" tiptext="The Matrix class represents a transformation matrix that determines how to map points from one coordinate space to another." helpurl="flash.geom:Matrix">
            <folder name="Methods" id="Methods" tiptext="Methods for class Matrix" helpurl="flash.geom:Matrix">
                <string name="Matrix" object="[flash.geom.Matrix]" text="new Matrix(%[a:Number=1,b:Number=0,c:Number=0,d:Number=1,tx:Number=0,ty:Number=0]%)" constructor="true" tiptext="Creates a new two-dimensional Matrix object." version="4" playername="" helpurl="flash.geom:Matrix:Matrix"/>
                <string name="clone" object="[flash.geom.Matrix]" text=".clone(%%):flash.geom:Matrix" tiptext="Returns a new Matrix object that is a copy of the current matrix." version="4" playername="" helpurl="flash.geom:Matrix:clone"/>
                <string name="concat" object="[flash.geom.Matrix]" text=".concat(%m:flash.geom:Matrix%):void" tiptext="Concatenates a matrix with the current matrix, effectively combining the geometric effects of the two." version="4" playername="" helpurl="flash.geom:Matrix:concat"/>
                <string name="createBox" object="[flash.geom.Matrix]" text=".createBox(%scaleX:Number,scaleY:Number[,rotation:Number=0,tx:Number=0,ty:Number=0]%):void" tiptext="Creates a Matrix with scaling, rotation, and translation values." version="4" playername="" helpurl="flash.geom:Matrix:createBox"/>
                <string name="createGradientBox" object="[flash.geom.Matrix]" text=".createGradientBox(%width:Number,height:Number[,rotation:Number=0,tx:Number=0,ty:Number=0]%):void" tiptext="Creates the specific style of matrix expected by the beginGradientFill() method of the Graphics class." version="4" playername="" helpurl="flash.geom:Matrix:createGradientBox"/>
                <string name="deltaTransformPoint" object="[flash.geom.Matrix]" text=".deltaTransformPoint(%point:flash.geom:Point%):flash.geom:Point" tiptext="Given a point in the pretransform coordinate space, returns the coordinates of that point after the transformation occurs." version="4" playername="" helpurl="flash.geom:Matrix:deltaTransformPoint"/>
                <string name="identity" object="[flash.geom.Matrix]" text=".identity(%%):void" tiptext="Sets each matrix property to a value that causes a null transformation." version="4" playername="" helpurl="flash.geom:Matrix:identity"/>
                <string name="invert" object="[flash.geom.Matrix]" text=".invert(%%):void" tiptext="Performs the opposite transformation of the original matrix." version="4" playername="" helpurl="flash.geom:Matrix:invert"/>
                <string name="rotate" object="[flash.geom.Matrix]" text=".rotate(%angle:Number%):void" tiptext="Applies a rotation transformation to the Matrix object." version="4" playername="" helpurl="flash.geom:Matrix:rotate"/>
                <string name="scale" object="[flash.geom.Matrix]" text=".scale(%sx:Number,sy:Number%):void" tiptext="Applies a scaling transformation to the matrix." version="4" playername="" helpurl="flash.geom:Matrix:scale"/>
                <string name="toString" object="[flash.geom.Matrix]" text=".toString(%%):String" tiptext="Returns a text value listing the properties of this Matrix object." version="4" playername="" helpurl="flash.geom:Matrix:toString"/>
                <string name="transformPoint" object="[flash.geom.Matrix]" text=".transformPoint(%point:flash.geom:Point%):flash.geom:Point" tiptext="Returns the result of a geometric transformation to a Point object." version="4" playername="" helpurl="flash.geom:Matrix:transformPoint"/>
                <string name="translate" object="[flash.geom.Matrix]" text=".translate(%dx:Number,dy:Number%):void" tiptext="Translates the matrix along the x and y axes." version="4" playername="" helpurl="flash.geom:Matrix:translate"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class Matrix" helpurl="flash.geom:Matrix">
                <string name="a" object="[flash.geom.Matrix]" text=".a" tiptext="The value that affects the positioning of pixels along the x axis when scaling or rotating an image." version="" playername="" helpurl="flash.geom:Matrix:a"/>
                <string name="b" object="[flash.geom.Matrix]" text=".b" tiptext="The value that affects the positioning of pixels along the y axis when rotating or skewing an image." version="" playername="" helpurl="flash.geom:Matrix:b"/>
                <string name="c" object="[flash.geom.Matrix]" text=".c" tiptext="The value that affects the positioning of pixels along the x axis when rotating or skewing an image." version="" playername="" helpurl="flash.geom:Matrix:c"/>
                <string name="d" object="[flash.geom.Matrix]" text=".d" tiptext="The value that affects the positioning of pixels along the y axis when scaling or rotating an image." version="" playername="" helpurl="flash.geom:Matrix:d"/>
                <string name="tx" object="[flash.geom.Matrix]" text=".tx" tiptext="The distance by which to translate each point along the x axis." version="" playername="" helpurl="flash.geom:Matrix:tx"/>
                <string name="ty" object="[flash.geom.Matrix]" text=".ty" tiptext="The distance by which to translate each point along the y axis." version="" playername="" helpurl="flash.geom:Matrix:ty"/>
            </folder>
        </folder>
        <folder name="Matrix3D" id="[flash.geom.Matrix3D]" sort="true" index="true" asAncestors="Object" tiptext="The Matrix3D class represents a transformation matrix that determines the position and orientation of a three-dimensional (3D) display object." helpurl="flash.geom:Matrix3D">
            <folder name="Methods" id="Methods" tiptext="Methods for class Matrix3D" helpurl="flash.geom:Matrix3D">
                <string name="Matrix3D" object="[flash.geom.Matrix3D]" text="new Matrix3D(%[v:Vector$Number=null]%)" constructor="true" tiptext="Creates a Matrix3D object." version="1.5" playername="" helpurl="flash.geom:Matrix3D:Matrix3D"/>
                <string name="appendRotation" object="[flash.geom.Matrix3D]" text=".appendRotation(%degrees:Number,axis:flash.geom:Vector3D[,pivotPoint:flash.geom:Vector3D=null]%):void" tiptext="Appends an incremental rotation to a Matrix3D object." version="1.5" playername="" helpurl="flash.geom:Matrix3D:appendRotation"/>
                <string name="appendScale" object="[flash.geom.Matrix3D]" text=".appendScale(%xScale:Number,yScale:Number,zScale:Number%):void" tiptext="Appends an incremental scale change along the x, y, and z axes to a Matrix3D object." version="1.5" playername="" helpurl="flash.geom:Matrix3D:appendScale"/>
                <string name="appendTranslation" object="[flash.geom.Matrix3D]" text=".appendTranslation(%x:Number,y:Number,z:Number%):void" tiptext="Appends an incremental translation, a repositioning along the x, y, and z axes, to a Matrix3D object." version="1.5" playername="" helpurl="flash.geom:Matrix3D:appendTranslation"/>
                <string name="append" object="[flash.geom.Matrix3D]" text=".append(%lhs:flash.geom:Matrix3D%):void" tiptext="Appends the matrix by multiplying another Matrix3D object by the current Matrix3D object." version="1.5" playername="" helpurl="flash.geom:Matrix3D:append"/>
                <string name="clone" object="[flash.geom.Matrix3D]" text=".clone(%%):flash.geom:Matrix3D" tiptext="Returns a new Matrix3D object that is an exact copy of the current Matrix3D object." version="1.5" playername="" helpurl="flash.geom:Matrix3D:clone"/>
                <string name="decompose" object="[flash.geom.Matrix3D]" text=".decompose(%[orientationStyle:String=eulerAngles]%):Vector$flash.geom:Vector3D" tiptext="Returns the transformation matrix&apos;s translation, rotation, and scale settings as a Vector of three Vector3D objects." version="1.5" playername="" helpurl="flash.geom:Matrix3D:decompose"/>
                <string name="deltaTransformVector" object="[flash.geom.Matrix3D]" text=".deltaTransformVector(%v:flash.geom:Vector3D%):flash.geom:Vector3D" tiptext="Uses the transformation matrix without its translation elements to transform a Vector3D object from one space coordinate to another." version="1.5" playername="" helpurl="flash.geom:Matrix3D:deltaTransformVector"/>
                <string name="identity" object="[flash.geom.Matrix3D]" text=".identity(%%):void" tiptext="Converts the current matrix to an identity or unit matrix." version="1.5" playername="" helpurl="flash.geom:Matrix3D:identity"/>
                <string name="interpolateTo" object="[flash.geom.Matrix3D]" text=".interpolateTo(%toMat:flash.geom:Matrix3D,percent:Number%):void" tiptext="Interpolates the display object&apos;s matrix a percent closer to a target&apos;s matrix." version="1.5" playername="" helpurl="flash.geom:Matrix3D:interpolateTo"/>
                <string name="interpolate" object="[flash.geom.Matrix3D]" text="Matrix3D.interpolate(%thisMat:flash.geom:Matrix3D,toMat:flash.geom:Matrix3D,percent:Number%):flash.geom:Matrix3D" static="true" tiptext="Interpolates a display object a percent point closer to a target display object." version="1.5" playername="" helpurl="flash.geom:Matrix3D:interpolate"/>
                <string name="invert" object="[flash.geom.Matrix3D]" text=".invert(%%):Boolean" tiptext="Inverts the current matrix." version="1.5" playername="" helpurl="flash.geom:Matrix3D:invert"/>
                <string name="pointAt" object="[flash.geom.Matrix3D]" text=".pointAt(%pos:flash.geom:Vector3D[,at:flash.geom:Vector3D=null,up:flash.geom:Vector3D=null]%):void" tiptext="Rotates the display object so that it faces a specified position." version="1.5" playername="" helpurl="flash.geom:Matrix3D:pointAt"/>
                <string name="prependRotation" object="[flash.geom.Matrix3D]" text=".prependRotation(%degrees:Number,axis:flash.geom:Vector3D[,pivotPoint:flash.geom:Vector3D=null]%):void" tiptext="Prepends an incremental rotation to a Matrix3D object." version="1.5" playername="" helpurl="flash.geom:Matrix3D:prependRotation"/>
                <string name="prependScale" object="[flash.geom.Matrix3D]" text=".prependScale(%xScale:Number,yScale:Number,zScale:Number%):void" tiptext="Prepends an incremental scale change along the x, y, and z axes to a Matrix3D object." version="1.5" playername="" helpurl="flash.geom:Matrix3D:prependScale"/>
                <string name="prependTranslation" object="[flash.geom.Matrix3D]" text=".prependTranslation(%x:Number,y:Number,z:Number%):void" tiptext="Prepends an incremental translation, a repositioning along the x, y, and z axes, to a Matrix3D object." version="1.5" playername="" helpurl="flash.geom:Matrix3D:prependTranslation"/>
                <string name="prepend" object="[flash.geom.Matrix3D]" text=".prepend(%rhs:flash.geom:Matrix3D%):void" tiptext="Prepends a matrix by multiplying the current Matrix3D object by another Matrix3D object." version="1.5" playername="" helpurl="flash.geom:Matrix3D:prepend"/>
                <string name="recompose" object="[flash.geom.Matrix3D]" text=".recompose(%components:Vector$flash.geom:Vector3D[,orientationStyle:String=eulerAngles]%):Boolean" tiptext="Sets the transformation matrix&apos;s translation, rotation, and scale settings." version="1.5" playername="" helpurl="flash.geom:Matrix3D:recompose"/>
                <string name="transformVector" object="[flash.geom.Matrix3D]" text=".transformVector(%v:flash.geom:Vector3D%):flash.geom:Vector3D" tiptext="Uses the transformation matrix to transform a Vector3D object from one space coordinate to another." version="1.5" playername="" helpurl="flash.geom:Matrix3D:transformVector"/>
                <string name="transformVectors" object="[flash.geom.Matrix3D]" text=".transformVectors(%vin:Vector$Number,vout:Vector$Number%):void" tiptext="Uses the transformation matrix to transform a Vector of Numbers from one coordinate space to another." version="1.5" playername="" helpurl="flash.geom:Matrix3D:transformVectors"/>
                <string name="transpose" object="[flash.geom.Matrix3D]" text=".transpose(%%):void" tiptext="Converts the current Matrix3D object to a matrix where the rows and columns are swapped." version="1.5" playername="" helpurl="flash.geom:Matrix3D:transpose"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class Matrix3D" helpurl="flash.geom:Matrix3D">
                <string name="determinant" object="[flash.geom.Matrix3D]" text=".determinant" tiptext="A Number that determines whether a matrix is invertible." version="" playername="" helpurl="flash.geom:Matrix3D:determinant:get"/>
                <string name="position" object="[flash.geom.Matrix3D]" text=".position" tiptext="A Vector3D object that holds the position, the 3D coordinate (x,y,z) of a display object within the transformation&apos;s frame of reference." version="" playername="" helpurl="flash.geom:Matrix3D:position:get"/>
                <string name="rawData" object="[flash.geom.Matrix3D]" text=".rawData" tiptext="A Vector of 16 Numbers, where every four elements can be a row or a column of a 4x4 matrix." version="" playername="" helpurl="flash.geom:Matrix3D:rawData:get"/>
            </folder>
        </folder>
        <folder name="Orientation3D" id="[flash.geom.Orientation3D]" sort="true" index="true" asAncestors="Object" tiptext="The Orientation3D class is an enumeration of constant values for representing the orientation styleof a Matrix3D object." helpurl="flash.geom:Orientation3D">
            <folder name="Properties" id="Properties" tiptext="Properties for class Orientation3D" helpurl="flash.geom:Orientation3D">
                <string name="AXIS_ANGLE" object="[flash.geom.Orientation3D]" text="Orientation3D.AXIS_ANGLE" constant="true" tiptext="The axis angle orientation uses a combination of an axis and an angle to determine the orientation." version="" playername="" helpurl="flash.geom:Orientation3D:AXIS_ANGLE"/>
                <string name="EULER_ANGLES" object="[flash.geom.Orientation3D]" text="Orientation3D.EULER_ANGLES" constant="true" tiptext="Euler angles, the default orientation for decompose() and recompose() methods, defines the orientation with three separate angles of rotation for each axis." version="" playername="" helpurl="flash.geom:Orientation3D:EULER_ANGLES"/>
                <string name="QUATERNION" object="[flash.geom.Orientation3D]" text="Orientation3D.QUATERNION" constant="true" tiptext="The quaternion orientation uses complex numbers." version="" playername="" helpurl="flash.geom:Orientation3D:QUATERNION"/>
            </folder>
        </folder>
        <folder name="PerspectiveProjection" id="[flash.geom.PerspectiveProjection]" sort="true" index="true" asAncestors="Object" tiptext="The PerspectiveProjection class provides an easy way to assign or modify the perspective transformations of a display object and all of its children." helpurl="flash.geom:PerspectiveProjection">
            <folder name="Methods" id="Methods" tiptext="Methods for class PerspectiveProjection" helpurl="flash.geom:PerspectiveProjection">
                <string name="PerspectiveProjection" object="[flash.geom.PerspectiveProjection]" text="new PerspectiveProjection(%%)" constructor="true" tiptext="Creates an instance of a PerspectiveProjection object." version="1.5" playername="" helpurl="flash.geom:PerspectiveProjection:PerspectiveProjection"/>
                <string name="toMatrix3D" object="[flash.geom.PerspectiveProjection]" text=".toMatrix3D(%%):flash.geom:Matrix3D" tiptext="Returns the underlying Matrix3D object of the display object." version="1.5" playername="" helpurl="flash.geom:PerspectiveProjection:toMatrix3D"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class PerspectiveProjection" helpurl="flash.geom:PerspectiveProjection">
                <string name="fieldOfView" object="[flash.geom.PerspectiveProjection]" text=".fieldOfView" tiptext="Specifies an angle, as a degree between 0 and 180, for the field of view in three dimensions." version="" playername="" helpurl="flash.geom:PerspectiveProjection:fieldOfView:get"/>
                <string name="focalLength" object="[flash.geom.PerspectiveProjection]" text=".focalLength" tiptext="The distance between the eye or the viewpoint&apos;s origin (0,0,0) and the display object located in the z axis." version="" playername="" helpurl="flash.geom:PerspectiveProjection:focalLength:get"/>
                <string name="projectionCenter" object="[flash.geom.PerspectiveProjection]" text=".projectionCenter" tiptext="A two-dimensional point representing the center of the projection, the vanishing point for the display object." version="" playername="" helpurl="flash.geom:PerspectiveProjection:projectionCenter:get"/>
            </folder>
        </folder>
        <folder name="Point" id="[flash.geom.Point]" sort="true" index="true" asAncestors="Object" tiptext="The Point object represents a location in a two-dimensional coordinate system, where x represents the horizontal axis and y represents the vertical axis." helpurl="flash.geom:Point">
            <folder name="Methods" id="Methods" tiptext="Methods for class Point" helpurl="flash.geom:Point">
                <string name="Point" object="[flash.geom.Point]" text="new Point(%[x:Number=0,y:Number=0]%)" constructor="true" tiptext="Creates a new point." version="4" playername="" helpurl="flash.geom:Point:Point"/>
                <string name="add" object="[flash.geom.Point]" text=".add(%v:flash.geom:Point%):flash.geom:Point" tiptext="Adds the coordinates of another point to the coordinates of this point to create a new point." version="4" playername="" helpurl="flash.geom:Point:add"/>
                <string name="clone" object="[flash.geom.Point]" text=".clone(%%):flash.geom:Point" tiptext="Creates a copy of the Point object." version="4" playername="" helpurl="flash.geom:Point:clone"/>
                <string name="distance" object="[flash.geom.Point]" text="Point.distance(%pt1:flash.geom:Point,pt2:flash.geom:Point%):Number" static="true" tiptext="Returns the distance between pt1 and pt2." version="4" playername="" helpurl="flash.geom:Point:distance"/>
                <string name="equals" object="[flash.geom.Point]" text=".equals(%toCompare:flash.geom:Point%):Boolean" tiptext="Determines whether two points are equal." version="4" playername="" helpurl="flash.geom:Point:equals"/>
                <string name="interpolate" object="[flash.geom.Point]" text="Point.interpolate(%pt1:flash.geom:Point,pt2:flash.geom:Point,f:Number%):flash.geom:Point" static="true" tiptext="Determines a point between two specified points." version="4" playername="" helpurl="flash.geom:Point:interpolate"/>
                <string name="normalize" object="[flash.geom.Point]" text=".normalize(%thickness:Number%):void" tiptext="Scales the line segment between (0,0) and the current point to a set length." version="4" playername="" helpurl="flash.geom:Point:normalize"/>
                <string name="offset" object="[flash.geom.Point]" text=".offset(%dx:Number,dy:Number%):void" tiptext="Offsets the Point object by the specified amount." version="4" playername="" helpurl="flash.geom:Point:offset"/>
                <string name="polar" object="[flash.geom.Point]" text="Point.polar(%len:Number,angle:Number%):flash.geom:Point" static="true" tiptext="Converts a pair of polar coordinates to a Cartesian point coordinate." version="4" playername="" helpurl="flash.geom:Point:polar"/>
                <string name="subtract" object="[flash.geom.Point]" text=".subtract(%v:flash.geom:Point%):flash.geom:Point" tiptext="Subtracts the coordinates of another point from the coordinates of this point to create a new point." version="4" playername="" helpurl="flash.geom:Point:subtract"/>
                <string name="toString" object="[flash.geom.Point]" text=".toString(%%):String" tiptext="Returns a string that contains the values of the x and y coordinates." version="4" playername="" helpurl="flash.geom:Point:toString"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class Point" helpurl="flash.geom:Point">
                <string name="x" object="[flash.geom.Point]" text=".x" tiptext="The horizontal coordinate of the point." version="" playername="" helpurl="flash.geom:Point:x"/>
                <string name="y" object="[flash.geom.Point]" text=".y" tiptext="The vertical coordinate of the point." version="" playername="" helpurl="flash.geom:Point:y"/>
                <string name="length" object="[flash.geom.Point]" text=".length" tiptext="The length of the line segment from (0,0) to this point." version="" playername="" helpurl="flash.geom:Point:length:get"/>
            </folder>
        </folder>
        <folder name="Rectangle" id="[flash.geom.Rectangle]" sort="true" index="true" asAncestors="Object" tiptext="A Rectangle object is an area defined by its position, as indicated by its top-left corner point (x, y) and by its width and its height." helpurl="flash.geom:Rectangle">
            <folder name="Methods" id="Methods" tiptext="Methods for class Rectangle" helpurl="flash.geom:Rectangle">
                <string name="Rectangle" object="[flash.geom.Rectangle]" text="new Rectangle(%[x:Number=0,y:Number=0,width:Number=0,height:Number=0]%)" constructor="true" tiptext="Creates a new Rectangle object with the top-left corner specified by the x and y parameters and with the specified width and height." version="4" playername="" helpurl="flash.geom:Rectangle:Rectangle"/>
                <string name="clone" object="[flash.geom.Rectangle]" text=".clone(%%):flash.geom:Rectangle" tiptext="Returns a copy of this Rectangle object." version="4" playername="" helpurl="flash.geom:Rectangle:clone"/>
                <string name="containsPoint" object="[flash.geom.Rectangle]" text=".containsPoint(%point:flash.geom:Point%):Boolean" tiptext="Determines if the specified point is contained within the rectangular region defined by this Rectangle object using a Point object as a parameter." version="4" playername="" helpurl="flash.geom:Rectangle:containsPoint"/>
                <string name="containsRect" object="[flash.geom.Rectangle]" text=".containsRect(%rect:flash.geom:Rectangle%):Boolean" tiptext="Determines if the Rectangle object specified by the rect parameter is containedwithin this Rectangle object." version="4" playername="" helpurl="flash.geom:Rectangle:containsRect"/>
                <string name="contains" object="[flash.geom.Rectangle]" text=".contains(%x:Number,y:Number%):Boolean" tiptext="Determines if the specified point is contained within the rectangular region." version="4" playername="" helpurl="flash.geom:Rectangle:contains"/>
                <string name="equals" object="[flash.geom.Rectangle]" text=".equals(%toCompare:flash.geom:Rectangle%):Boolean" tiptext="Determines if the object specified in the toCompare parameter is equal to this Rectangle object." version="4" playername="" helpurl="flash.geom:Rectangle:equals"/>
                <string name="inflatePoint" object="[flash.geom.Rectangle]" text=".inflatePoint(%point:flash.geom:Point%):void" tiptext="Increases the size of the Rectangle object using a Point object as a parameter." version="4" playername="" helpurl="flash.geom:Rectangle:inflatePoint"/>
                <string name="inflate" object="[flash.geom.Rectangle]" text=".inflate(%dx:Number,dy:Number%):void" tiptext="Increases the size of the Rectangle object by the specified amounts, in pixels." version="4" playername="" helpurl="flash.geom:Rectangle:inflate"/>
                <string name="intersection" object="[flash.geom.Rectangle]" text=".intersection(%toIntersect:flash.geom:Rectangle%):flash.geom:Rectangle" tiptext="Returns the area of intersection." version="4" playername="" helpurl="flash.geom:Rectangle:intersection"/>
                <string name="intersects" object="[flash.geom.Rectangle]" text=".intersects(%toIntersect:flash.geom:Rectangle%):Boolean" tiptext="Determines if the object specified in the toIntersect parameter intersectswith this Rectangle object." version="4" playername="" helpurl="flash.geom:Rectangle:intersects"/>
                <string name="isEmpty" object="[flash.geom.Rectangle]" text=".isEmpty(%%):Boolean" tiptext="Determines whether or not this Rectangle object is empty." version="4" playername="" helpurl="flash.geom:Rectangle:isEmpty"/>
                <string name="offsetPoint" object="[flash.geom.Rectangle]" text=".offsetPoint(%point:flash.geom:Point%):void" tiptext="Adjusts the location of the Rectangle object using a Point object as a parameter." version="4" playername="" helpurl="flash.geom:Rectangle:offsetPoint"/>
                <string name="offset" object="[flash.geom.Rectangle]" text=".offset(%dx:Number,dy:Number%):void" tiptext="Adjusts the location of the Rectangle object." version="4" playername="" helpurl="flash.geom:Rectangle:offset"/>
                <string name="setEmpty" object="[flash.geom.Rectangle]" text=".setEmpty(%%):void" tiptext="Sets all properties to 0." version="4" playername="" helpurl="flash.geom:Rectangle:setEmpty"/>
                <string name="toString" object="[flash.geom.Rectangle]" text=".toString(%%):String" tiptext="Builds and returns a string that lists the horizontal and vertical positionsand the width and height of the Rectangle object." version="4" playername="" helpurl="flash.geom:Rectangle:toString"/>
                <string name="union" object="[flash.geom.Rectangle]" text=".union(%toUnion:flash.geom:Rectangle%):flash.geom:Rectangle" tiptext="Adds two rectangles together to create a new Rectangle object." version="4" playername="" helpurl="flash.geom:Rectangle:union"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class Rectangle" helpurl="flash.geom:Rectangle">
                <string name="height" object="[flash.geom.Rectangle]" text=".height" tiptext="The height of the rectangle, in pixels." version="" playername="" helpurl="flash.geom:Rectangle:height"/>
                <string name="width" object="[flash.geom.Rectangle]" text=".width" tiptext="The width of the rectangle, in pixels." version="" playername="" helpurl="flash.geom:Rectangle:width"/>
                <string name="x" object="[flash.geom.Rectangle]" text=".x" tiptext="The x coordinate of the top-left corner of the rectangle." version="" playername="" helpurl="flash.geom:Rectangle:x"/>
                <string name="y" object="[flash.geom.Rectangle]" text=".y" tiptext="The y coordinate of the top-left corner of the rectangle." version="" playername="" helpurl="flash.geom:Rectangle:y"/>
                <string name="bottomRight" object="[flash.geom.Rectangle]" text=".bottomRight" tiptext="The location of the Rectangle object&apos;s bottom-right corner, determined by the values of the right and bottom properties." version="" playername="" helpurl="flash.geom:Rectangle:bottomRight:get"/>
                <string name="bottom" object="[flash.geom.Rectangle]" text=".bottom" tiptext="The sum of the y and height properties." version="" playername="" helpurl="flash.geom:Rectangle:bottom:get"/>
                <string name="left" object="[flash.geom.Rectangle]" text=".left" tiptext="The x coordinate of the top-left corner of the rectangle." version="" playername="" helpurl="flash.geom:Rectangle:left:get"/>
                <string name="right" object="[flash.geom.Rectangle]" text=".right" tiptext="The sum of the x and width properties." version="" playername="" helpurl="flash.geom:Rectangle:right:get"/>
                <string name="size" object="[flash.geom.Rectangle]" text=".size" tiptext="The size of the Rectangle object, expressed as a Point object with the values of the width and height properties." version="" playername="" helpurl="flash.geom:Rectangle:size:get"/>
                <string name="topLeft" object="[flash.geom.Rectangle]" text=".topLeft" tiptext="The location of the Rectangle object&apos;s top-left corner, determined by the x and y coordinates of the point." version="" playername="" helpurl="flash.geom:Rectangle:topLeft:get"/>
                <string name="top" object="[flash.geom.Rectangle]" text=".top" tiptext="The y coordinate of the top-left corner of the rectangle." version="" playername="" helpurl="flash.geom:Rectangle:top:get"/>
            </folder>
        </folder>
        <folder name="Transform" id="[flash.geom.Transform]" sort="true" index="true" asAncestors="Object" tiptext="The Transform class provides access to color adjustment properties and two- or three-dimensional transformation objects that can be applied to a display object." helpurl="flash.geom:Transform">
            <folder name="Methods" id="Methods" tiptext="Methods for class Transform" helpurl="flash.geom:Transform">
                <string name="getRelativeMatrix3D" object="[flash.geom.Transform]" text=".getRelativeMatrix3D(%relativeTo:flash.display:DisplayObject%):flash.geom:Matrix3D" tiptext="Returns a Matrix3D object, which can transform the space of a specified display object in relation to the current display object&apos;s space." version="1.5" playername="" helpurl="flash.geom:Transform:getRelativeMatrix3D"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class Transform" helpurl="flash.geom:Transform">
                <string name="colorTransform" object="[flash.geom.Transform]" text=".colorTransform" tiptext="A ColorTransform object containing values that universally adjust the colors in the display object." version="" playername="" helpurl="flash.geom:Transform:colorTransform:get"/>
                <string name="concatenatedColorTransform" object="[flash.geom.Transform]" text=".concatenatedColorTransform" tiptext="A ColorTransform object representing the combined color transformations applied to the display object and all of its parent objects, back to the root level." version="" playername="" helpurl="flash.geom:Transform:concatenatedColorTransform:get"/>
                <string name="concatenatedMatrix" object="[flash.geom.Transform]" text=".concatenatedMatrix" tiptext="A Matrix object representing the combined transformation matrixes of the display object and all of its parent objects, back to the root level." version="" playername="" helpurl="flash.geom:Transform:concatenatedMatrix:get"/>
                <string name="matrix3D" object="[flash.geom.Transform]" text=".matrix3D" tiptext="Provides access to the Matrix3D object of a three-dimensional display object." version="" playername="" helpurl="flash.geom:Transform:matrix3D:get"/>
                <string name="matrix" object="[flash.geom.Transform]" text=".matrix" tiptext="A Matrix object containing values that alter the scaling, rotation, and translation of the display object." version="" playername="" helpurl="flash.geom:Transform:matrix:get"/>
                <string name="perspectiveProjection" object="[flash.geom.Transform]" text=".perspectiveProjection" tiptext="Provides access to the PerspectiveProjection object of a three-dimensional display object." version="" playername="" helpurl="flash.geom:Transform:perspectiveProjection:get"/>
                <string name="pixelBounds" object="[flash.geom.Transform]" text=".pixelBounds" tiptext="A Rectangle object that defines the bounding rectangle of the display object on the stage." version="" playername="" helpurl="flash.geom:Transform:pixelBounds:get"/>
            </folder>
        </folder>
        <folder name="Utils3D" id="[flash.geom.Utils3D]" sort="true" index="true" asAncestors="Object" tiptext="The Utils3D class contains static methods that simplify the implementation of certain three-dimensional matrix operations." helpurl="flash.geom:Utils3D">
            <folder name="Methods" id="Methods" tiptext="Methods for class Utils3D" helpurl="flash.geom:Utils3D">
                <string name="pointTowards" object="[flash.geom.Utils3D]" text="Utils3D.pointTowards(%percent:Number,mat:flash.geom:Matrix3D,pos:flash.geom:Vector3D[,at:flash.geom:Vector3D=null,up:flash.geom:Vector3D=null]%):flash.geom:Matrix3D" static="true" tiptext="Interpolates the orientation of an object toward a position." version="1.5" playername="" helpurl="flash.geom:Utils3D:pointTowards"/>
                <string name="projectVectors" object="[flash.geom.Utils3D]" text="Utils3D.projectVectors(%m:flash.geom:Matrix3D,verts:Vector$Number,projectedVerts:Vector$Number,uvts:Vector$Number%):void" static="true" tiptext="Projects a Vector of three-dimensional space coordinates to a Vector of two-dimensional space coordinates." version="1.5" playername="" helpurl="flash.geom:Utils3D:projectVectors"/>
                <string name="projectVector" object="[flash.geom.Utils3D]" text="Utils3D.projectVector(%m:flash.geom:Matrix3D,v:flash.geom:Vector3D%):flash.geom:Vector3D" static="true" tiptext="Using a projection Matrix3D object, projects a Vector3D object from one space coordinate to another." version="1.5" playername="" helpurl="flash.geom:Utils3D:projectVector"/>
            </folder>
        </folder>
        <folder name="Vector3D" id="[flash.geom.Vector3D]" sort="true" index="true" asAncestors="Object" tiptext="The Vector3D class represents a point or a location in the three-dimensional space using the Cartesian coordinates x, y, and z." helpurl="flash.geom:Vector3D">
            <folder name="Methods" id="Methods" tiptext="Methods for class Vector3D" helpurl="flash.geom:Vector3D">
                <string name="Vector3D" object="[flash.geom.Vector3D]" text="new Vector3D(%[x:Number=0.,y:Number=0.,z:Number=0.,w:Number=0.]%)" constructor="true" tiptext="Creates an instance of a Vector3D object." version="1.5" playername="" helpurl="flash.geom:Vector3D:Vector3D"/>
                <string name="add" object="[flash.geom.Vector3D]" text=".add(%a:flash.geom:Vector3D%):flash.geom:Vector3D" tiptext="Adds the current Vector3D object to another in order to create a new Vector3D object." version="1.5" playername="" helpurl="flash.geom:Vector3D:add"/>
                <string name="angleBetween" object="[flash.geom.Vector3D]" text="Vector3D.angleBetween(%a:flash.geom:Vector3D,b:flash.geom:Vector3D%):Number" static="true" tiptext="Returns the angle in radians between two vectors." version="1.5" playername="" helpurl="flash.geom:Vector3D:angleBetween"/>
                <string name="clone" object="[flash.geom.Vector3D]" text=".clone(%%):flash.geom:Vector3D" tiptext="Returns a new Vector3D object that is an exact copy of the current Vector3D object." version="1.5" playername="" helpurl="flash.geom:Vector3D:clone"/>
                <string name="crossProduct" object="[flash.geom.Vector3D]" text=".crossProduct(%a:flash.geom:Vector3D%):flash.geom:Vector3D" tiptext="Returns a new Vector3D object that is perpendicular (at a right angle) to the current Vector3D and another Vector3D object." version="1.5" playername="" helpurl="flash.geom:Vector3D:crossProduct"/>
                <string name="decrementBy" object="[flash.geom.Vector3D]" text=".decrementBy(%a:flash.geom:Vector3D%):void" tiptext="Decrements the current Vector3D object by another Vector3D object." version="1.5" playername="" helpurl="flash.geom:Vector3D:decrementBy"/>
                <string name="distance" object="[flash.geom.Vector3D]" text="Vector3D.distance(%pt1:flash.geom:Vector3D,pt2:flash.geom:Vector3D%):Number" static="true" tiptext="Returns the distance between two Vector3D objects." version="1.5" playername="" helpurl="flash.geom:Vector3D:distance"/>
                <string name="dotProduct" object="[flash.geom.Vector3D]" text=".dotProduct(%a:flash.geom:Vector3D%):Number" tiptext="Returns the dot product of current and another Vector3D object." version="1.5" playername="" helpurl="flash.geom:Vector3D:dotProduct"/>
                <string name="equals" object="[flash.geom.Vector3D]" text=".equals(%toCompare:flash.geom:Vector3D[,allFour:Boolean=false]%):Boolean" tiptext="Determines whether two Vector3D objects are equal by comparing the x, y, and z elements of the current Vector3D object with a specified Vector3D object." version="1.5" playername="" helpurl="flash.geom:Vector3D:equals"/>
                <string name="incrementBy" object="[flash.geom.Vector3D]" text=".incrementBy(%a:flash.geom:Vector3D%):void" tiptext="Increments the current Vector3D object by another Vector3D object." version="1.5" playername="" helpurl="flash.geom:Vector3D:incrementBy"/>
                <string name="nearEquals" object="[flash.geom.Vector3D]" text=".nearEquals(%toCompare:flash.geom:Vector3D,tolerance:Number[,allFour:Boolean=false]%):Boolean" tiptext="Compares the elements of the current Vector3D object with the elements of a specified Vector3D object to determine whether they are nearly equal." version="1.5" playername="" helpurl="flash.geom:Vector3D:nearEquals"/>
                <string name="negate" object="[flash.geom.Vector3D]" text=".negate(%%):void" tiptext="Sets the current Vector3D object to its inverse." version="1.5" playername="" helpurl="flash.geom:Vector3D:negate"/>
                <string name="normalize" object="[flash.geom.Vector3D]" text=".normalize(%%):Number" tiptext="Converts a Vector3D object to a unit vector by dividing the first three elements (x, y, z) by the length of the vector." version="1.5" playername="" helpurl="flash.geom:Vector3D:normalize"/>
                <string name="project" object="[flash.geom.Vector3D]" text=".project(%%):void" tiptext="Divides the value of the x, y, and z properties of the current Vector3D object by the value of its w property." version="1.5" playername="" helpurl="flash.geom:Vector3D:project"/>
                <string name="scaleBy" object="[flash.geom.Vector3D]" text=".scaleBy(%s:Number%):void" tiptext="Scales the current Vector3D object by a scalar, a magnitude." version="1.5" playername="" helpurl="flash.geom:Vector3D:scaleBy"/>
                <string name="subtract" object="[flash.geom.Vector3D]" text=".subtract(%a:flash.geom:Vector3D%):flash.geom:Vector3D" tiptext="Subtracts the current Vector3D from another Vector3D object in order to create a new Vector3D object." version="1.5" playername="" helpurl="flash.geom:Vector3D:subtract"/>
                <string name="toString" object="[flash.geom.Vector3D]" text=".toString(%%):String" tiptext="Returns a string representation of the current Vector3D object." version="1.5" playername="" helpurl="flash.geom:Vector3D:toString"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class Vector3D" helpurl="flash.geom:Vector3D">
                <string name="X_AXIS" object="[flash.geom.Vector3D]" text="Vector3D.X_AXIS" constant="true" tiptext="The x axis defined as a Vector3D object with coordinates (1,0,0)." version="" playername="" helpurl="flash.geom:Vector3D:X_AXIS"/>
                <string name="Y_AXIS" object="[flash.geom.Vector3D]" text="Vector3D.Y_AXIS" constant="true" tiptext="The y axis defined as a Vector3D object with coordinates (0,1,0)." version="" playername="" helpurl="flash.geom:Vector3D:Y_AXIS"/>
                <string name="Z_AXIS" object="[flash.geom.Vector3D]" text="Vector3D.Z_AXIS" constant="true" tiptext="The z axis defined as a Vector3D object with coordinates (0,0,1)." version="" playername="" helpurl="flash.geom:Vector3D:Z_AXIS"/>
                <string name="w" object="[flash.geom.Vector3D]" text=".w" tiptext="The fourth element of a Vector3D object (in addition to the x, y, and z properties) can hold data such as the angle of rotation." version="" playername="" helpurl="flash.geom:Vector3D:w"/>
                <string name="x" object="[flash.geom.Vector3D]" text=".x" tiptext="The first element of a Vector3D object, such as the x coordinate of a point in the three-dimensional space." version="" playername="" helpurl="flash.geom:Vector3D:x"/>
                <string name="y" object="[flash.geom.Vector3D]" text=".y" tiptext="The second element of a Vector3D object, such as the y coordinate of a point in the three-dimensional space." version="" playername="" helpurl="flash.geom:Vector3D:y"/>
                <string name="z" object="[flash.geom.Vector3D]" text=".z" tiptext="The third element of a Vector3D object, such as the z coordinate of a point in three-dimensional space." version="" playername="" helpurl="flash.geom:Vector3D:z"/>
                <string name="lengthSquared" object="[flash.geom.Vector3D]" text=".lengthSquared" tiptext="The square of the length of the current Vector3D object, calculated using the x, y, and z properties." version="" playername="" helpurl="flash.geom:Vector3D:lengthSquared:get"/>
                <string name="length" object="[flash.geom.Vector3D]" text=".length" tiptext="The length, magnitude, of the current Vector3D object from the origin (0,0,0) to the object&apos;s x, y, and z coordinates." version="" playername="" helpurl="flash.geom:Vector3D:length:get"/>
            </folder>
        </folder>
    </folder>
        <folder name="flash.globalization" id="flash.globalization" sort="true" tiptext="Classes for package flash.globalization" helpurl="flash.globalization">
        <folder name="Collator" id="[flash.globalization.Collator]" sort="true" index="true" asAncestors="Object" tiptext="The Collator class provides locale-sensitive string comparison capabilities." helpurl="flash.globalization:Collator">
            <folder name="Methods" id="Methods" tiptext="Methods for class Collator" helpurl="flash.globalization:Collator">
                <string name="Collator" object="[flash.globalization.Collator]" text="new Collator(%requestedLocaleIDName:String[,initialMode:String=sorting]%)" constructor="true" tiptext="Constructs a new Collator object to provide string comparisons according to the conventions of a specified locale." version="2" playername="" helpurl="flash.globalization:Collator:Collator"/>
                <string name="compare" object="[flash.globalization.Collator]" text=".compare(%string1:String,string2:String%):int" tiptext="Compares two strings and returns an integer value indicating whether the first string is less than, equal to, or greater than the second string." version="2" playername="" helpurl="flash.globalization:Collator:compare"/>
                <string name="equals" object="[flash.globalization.Collator]" text=".equals(%string1:String,string2:String%):Boolean" tiptext="Compares two strings and returns a Boolean value indicating whether the strings are equal." version="2" playername="" helpurl="flash.globalization:Collator:equals"/>
                <string name="getAvailableLocaleIDNames" object="[flash.globalization.Collator]" text="Collator.getAvailableLocaleIDNames(%%):Vector$String" static="true" tiptext="Lists all of the locale ID names supported by this class." version="2" playername="" helpurl="flash.globalization:Collator:getAvailableLocaleIDNames"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class Collator" helpurl="flash.globalization:Collator">
                <string name="actualLocaleIDName" object="[flash.globalization.Collator]" text=".actualLocaleIDName" tiptext="The name of the actual locale ID used by this Collator object." version="" playername="" helpurl="flash.globalization:Collator:actualLocaleIDName:get"/>
                <string name="ignoreCase" object="[flash.globalization.Collator]" text=".ignoreCase" tiptext="When this property is set to true, identical strings and strings that differ only in the case of the letters are evaluated as equal." version="" playername="" helpurl="flash.globalization:Collator:ignoreCase:get"/>
                <string name="ignoreCharacterWidth" object="[flash.globalization.Collator]" text=".ignoreCharacterWidth" tiptext="When this property is true, full-width and half-width forms of some Chinese and Japanese characters are evaluated as equal." version="" playername="" helpurl="flash.globalization:Collator:ignoreCharacterWidth:get"/>
                <string name="ignoreDiacritics" object="[flash.globalization.Collator]" text=".ignoreDiacritics" tiptext="When this property is set to true, strings that use the same base characters but different accents or other diacritic marks are evaluated as equal." version="" playername="" helpurl="flash.globalization:Collator:ignoreDiacritics:get"/>
                <string name="ignoreKanaType" object="[flash.globalization.Collator]" text=".ignoreKanaType" tiptext="When this property is set to true, strings that differ only by the type of kana character being used are treated as equal." version="" playername="" helpurl="flash.globalization:Collator:ignoreKanaType:get"/>
                <string name="ignoreSymbols" object="[flash.globalization.Collator]" text=".ignoreSymbols" tiptext="When this property is set to is true, symbol characters such as spaces, currency symbols, math symbols, and other types of symbols are ignored when sorting or matching." version="" playername="" helpurl="flash.globalization:Collator:ignoreSymbols:get"/>
                <string name="lastOperationStatus" object="[flash.globalization.Collator]" text=".lastOperationStatus" tiptext="The status of the most recent operation that this Collator object performed." version="" playername="" helpurl="flash.globalization:Collator:lastOperationStatus:get"/>
                <string name="numericComparison" object="[flash.globalization.Collator]" text=".numericComparison" tiptext="Controls how numeric values embedded in strings are handled during string comparison." version="" playername="" helpurl="flash.globalization:Collator:numericComparison:get"/>
                <string name="requestedLocaleIDName" object="[flash.globalization.Collator]" text=".requestedLocaleIDName" tiptext="The name of the requested locale ID that was passed to the constructor of this Collator object." version="" playername="" helpurl="flash.globalization:Collator:requestedLocaleIDName:get"/>
            </folder>
        </folder>
        <folder name="CollatorMode" id="[flash.globalization.CollatorMode]" sort="true" index="true" asAncestors="Object" tiptext="The CollatorMode class enumerates constant values that govern the behavior of string comparisonsperformed by a Collator object." helpurl="flash.globalization:CollatorMode">
            <folder name="Properties" id="Properties" tiptext="Properties for class CollatorMode" helpurl="flash.globalization:CollatorMode">
                <string name="MATCHING" object="[flash.globalization.CollatorMode]" text="CollatorMode.MATCHING" constant="true" tiptext="Initializes a Collator object so that the compare method is optimized fordetermining whether two strings are equivalent." version="" playername="" helpurl="flash.globalization:CollatorMode:MATCHING"/>
                <string name="SORTING" object="[flash.globalization.CollatorMode]" text="CollatorMode.SORTING" constant="true" tiptext="Initializes a Collator object so that the compare method is optimized forsorting a list of text strings to be displayed to an end user." version="" playername="" helpurl="flash.globalization:CollatorMode:SORTING"/>
            </folder>
        </folder>
        <folder name="CurrencyFormatter" id="[flash.globalization.CurrencyFormatter]" sort="true" index="true" asAncestors="Object" tiptext="The CurrencyFormatter class provides locale-sensitive formatting and parsing of currency values." helpurl="flash.globalization:CurrencyFormatter">
            <folder name="Methods" id="Methods" tiptext="Methods for class CurrencyFormatter" helpurl="flash.globalization:CurrencyFormatter">
                <string name="CurrencyFormatter" object="[flash.globalization.CurrencyFormatter]" text="new CurrencyFormatter(%requestedLocaleIDName:String%)" constructor="true" tiptext="Constructs a new CurrencyFormatter object to format numbers representing currency amounts according to the conventions of a given locale." version="2" playername="" helpurl="flash.globalization:CurrencyFormatter:CurrencyFormatter"/>
                <string name="format" object="[flash.globalization.CurrencyFormatter]" text=".format(%value:Number[,withCurrencySymbol:Boolean=false]%):String" tiptext="Creates a string representing a currency amount formatted according to the current properties of this CurrencyFormatter object, including the locale, currency symbol, and currency ISO code." version="2" playername="" helpurl="flash.globalization:CurrencyFormatter:format"/>
                <string name="formattingWithCurrencySymbolIsSafe" object="[flash.globalization.CurrencyFormatter]" text=".formattingWithCurrencySymbolIsSafe(%requestedISOCode:String%):Boolean" tiptext="Determines whether the currently specified currency symbol can be used when formatting currency amounts." version="2" playername="" helpurl="flash.globalization:CurrencyFormatter:formattingWithCurrencySymbolIsSafe"/>
                <string name="getAvailableLocaleIDNames" object="[flash.globalization.CurrencyFormatter]" text="CurrencyFormatter.getAvailableLocaleIDNames(%%):Vector$String" static="true" tiptext="Lists all of the locale ID names supported by this class." version="2" playername="" helpurl="flash.globalization:CurrencyFormatter:getAvailableLocaleIDNames"/>
                <string name="parse" object="[flash.globalization.CurrencyFormatter]" text=".parse(%inputString:String%):flash.globalization:CurrencyParseResult" tiptext="Parses a string into a currency amount and a currency symbol." version="2" playername="" helpurl="flash.globalization:CurrencyFormatter:parse"/>
                <string name="setCurrency" object="[flash.globalization.CurrencyFormatter]" text=".setCurrency(%currencyISOCode:String,currencySymbol:String%):void" tiptext="Sets the currencyISOCode and currencySymbol properties of the CurrencyFormatter object." version="2" playername="" helpurl="flash.globalization:CurrencyFormatter:setCurrency"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class CurrencyFormatter" helpurl="flash.globalization:CurrencyFormatter">
                <string name="actualLocaleIDName" object="[flash.globalization.CurrencyFormatter]" text=".actualLocaleIDName" tiptext="The name of the actual locale ID used by this CurrencyFormatter object." version="" playername="" helpurl="flash.globalization:CurrencyFormatter:actualLocaleIDName:get"/>
                <string name="currencyISOCode" object="[flash.globalization.CurrencyFormatter]" text=".currencyISOCode" tiptext="The three letter ISO 4217 currency code for the actual locale being used." version="" playername="" helpurl="flash.globalization:CurrencyFormatter:currencyISOCode:get"/>
                <string name="currencySymbol" object="[flash.globalization.CurrencyFormatter]" text=".currencySymbol" tiptext="The currency symbol or string for the actual locale being used." version="" playername="" helpurl="flash.globalization:CurrencyFormatter:currencySymbol:get"/>
                <string name="decimalSeparator" object="[flash.globalization.CurrencyFormatter]" text=".decimalSeparator" tiptext="The decimal separator character used for formatting or parsing currency amounts that have a decimal part." version="" playername="" helpurl="flash.globalization:CurrencyFormatter:decimalSeparator:get"/>
                <string name="digitsType" object="[flash.globalization.CurrencyFormatter]" text=".digitsType" tiptext="Defines the set of digit characters used when formatting currency amounts." version="" playername="" helpurl="flash.globalization:CurrencyFormatter:digitsType:get"/>
                <string name="fractionalDigits" object="[flash.globalization.CurrencyFormatter]" text=".fractionalDigits" tiptext="The maximum number of digits that can appear after the decimal separator." version="" playername="" helpurl="flash.globalization:CurrencyFormatter:fractionalDigits:get"/>
                <string name="groupingPattern" object="[flash.globalization.CurrencyFormatter]" text=".groupingPattern" tiptext="Describes the placement of grouping separators within the formatted currency amount string." version="" playername="" helpurl="flash.globalization:CurrencyFormatter:groupingPattern:get"/>
                <string name="groupingSeparator" object="[flash.globalization.CurrencyFormatter]" text=".groupingSeparator" tiptext="The character or string used for the grouping separator." version="" playername="" helpurl="flash.globalization:CurrencyFormatter:groupingSeparator:get"/>
                <string name="lastOperationStatus" object="[flash.globalization.CurrencyFormatter]" text=".lastOperationStatus" tiptext="The status of the most recent operation that this CurrencyFormatter object performed." version="" playername="" helpurl="flash.globalization:CurrencyFormatter:lastOperationStatus:get"/>
                <string name="leadingZero" object="[flash.globalization.CurrencyFormatter]" text=".leadingZero" tiptext="Specifies whether a leading zero is included in a formatted currency amount when there are no integer digits to the left of the decimal separator." version="" playername="" helpurl="flash.globalization:CurrencyFormatter:leadingZero:get"/>
                <string name="negativeCurrencyFormat" object="[flash.globalization.CurrencyFormatter]" text=".negativeCurrencyFormat" tiptext="A numeric value that indicates a formatting pattern for negative currency amounts." version="" playername="" helpurl="flash.globalization:CurrencyFormatter:negativeCurrencyFormat:get"/>
                <string name="negativeSymbol" object="[flash.globalization.CurrencyFormatter]" text=".negativeSymbol" tiptext="The negative symbol used when formatting negative currency amounts." version="" playername="" helpurl="flash.globalization:CurrencyFormatter:negativeSymbol:get"/>
                <string name="positiveCurrencyFormat" object="[flash.globalization.CurrencyFormatter]" text=".positiveCurrencyFormat" tiptext="A numeric value that indicates a formatting pattern for positive currency amounts." version="" playername="" helpurl="flash.globalization:CurrencyFormatter:positiveCurrencyFormat:get"/>
                <string name="requestedLocaleIDName" object="[flash.globalization.CurrencyFormatter]" text=".requestedLocaleIDName" tiptext="The name of the requested locale ID that was passed to the constructor of this CurrencyFormatter object." version="" playername="" helpurl="flash.globalization:CurrencyFormatter:requestedLocaleIDName:get"/>
                <string name="trailingZeros" object="[flash.globalization.CurrencyFormatter]" text=".trailingZeros" tiptext="Specifies whether trailing zeros are included in the formatted currency amount." version="" playername="" helpurl="flash.globalization:CurrencyFormatter:trailingZeros:get"/>
                <string name="useGrouping" object="[flash.globalization.CurrencyFormatter]" text=".useGrouping" tiptext="Enables the use of the grouping separator when formatting currency amounts." version="" playername="" helpurl="flash.globalization:CurrencyFormatter:useGrouping:get"/>
            </folder>
        </folder>
        <folder name="CurrencyParseResult" id="[flash.globalization.CurrencyParseResult]" sort="true" index="true" asAncestors="Object" tiptext="A data structure that represents a currency amount and currency symbol or string that were extracted by parsing a currency value." helpurl="flash.globalization:CurrencyParseResult">
            <folder name="Methods" id="Methods" tiptext="Methods for class CurrencyParseResult" helpurl="flash.globalization:CurrencyParseResult">
                <string name="CurrencyParseResult" object="[flash.globalization.CurrencyParseResult]" text="new CurrencyParseResult(%[value:Number=unknown,symbol:String]%)" constructor="true" tiptext="Constructs a currency parse result object." version="2" playername="" helpurl="flash.globalization:CurrencyParseResult:CurrencyParseResult"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class CurrencyParseResult" helpurl="flash.globalization:CurrencyParseResult">
                <string name="currencyString" object="[flash.globalization.CurrencyParseResult]" text=".currencyString" tiptext="The portion of the input string that corresponds to the currency symbol or currency string." version="" playername="" helpurl="flash.globalization:CurrencyParseResult:currencyString:get"/>
                <string name="value" object="[flash.globalization.CurrencyParseResult]" text=".value" tiptext="The currency amount value that was extracted from the input string." version="" playername="" helpurl="flash.globalization:CurrencyParseResult:value:get"/>
            </folder>
        </folder>
        <folder name="DateTimeFormatter" id="[flash.globalization.DateTimeFormatter]" sort="true" index="true" asAncestors="Object" tiptext="The DateTimeFormatter class provides locale-sensitive formatting for Date objects and access to localized date field names." helpurl="flash.globalization:DateTimeFormatter">
            <folder name="Methods" id="Methods" tiptext="Methods for class DateTimeFormatter" helpurl="flash.globalization:DateTimeFormatter">
                <string name="DateTimeFormatter" object="[flash.globalization.DateTimeFormatter]" text="new DateTimeFormatter(%requestedLocaleIDName:String[,dateStyle:String=long,timeStyle:String=long]%)" constructor="true" tiptext="Constructs a new DateTimeFormatter object to format dates and times according to the conventions of the specified locale and the provided date and time formatting styles." version="2" playername="" helpurl="flash.globalization:DateTimeFormatter:DateTimeFormatter"/>
                <string name="formatUTC" object="[flash.globalization.DateTimeFormatter]" text=".formatUTC(%dateTime:Date%):String" tiptext="Formats a display string for a Date object that is interpreted as being in UTC time (using the UTC components of the Date object such as: dateUTC, dayUTC, fullYearUTC, hoursUTC, minutesUTC, monthUTC, and secondsUTC), according to the dateStyle, timeStyle or date time pattern." version="2" playername="" helpurl="flash.globalization:DateTimeFormatter:formatUTC"/>
                <string name="format" object="[flash.globalization.DateTimeFormatter]" text=".format(%dateTime:Date%):String" tiptext="Formats a display string for a Date object that is interpreted as being in the user&apos;s local time (using the local time components of the Date object such as: date, day, fullYear, hours, minutes, month, and seconds)." version="2" playername="" helpurl="flash.globalization:DateTimeFormatter:format"/>
                <string name="getAvailableLocaleIDNames" object="[flash.globalization.DateTimeFormatter]" text="DateTimeFormatter.getAvailableLocaleIDNames(%%):Vector$String" static="true" tiptext="Lists all of the locale ID names supported by this class." version="2" playername="" helpurl="flash.globalization:DateTimeFormatter:getAvailableLocaleIDNames"/>
                <string name="getDateStyle" object="[flash.globalization.DateTimeFormatter]" text=".getDateStyle(%%):String" tiptext="Gets the date style for this instance of the DateTimeFormatter." version="2" playername="" helpurl="flash.globalization:DateTimeFormatter:getDateStyle"/>
                <string name="getDateTimePattern" object="[flash.globalization.DateTimeFormatter]" text=".getDateTimePattern(%%):String" tiptext="Returns the pattern string used by this DateTimeFormatter object to format dates and times." version="2" playername="" helpurl="flash.globalization:DateTimeFormatter:getDateTimePattern"/>
                <string name="getFirstWeekday" object="[flash.globalization.DateTimeFormatter]" text=".getFirstWeekday(%%):int" tiptext="Returns an integer corresponding to the first day of the week for this locale and calendar system." version="2" playername="" helpurl="flash.globalization:DateTimeFormatter:getFirstWeekday"/>
                <string name="getMonthNames" object="[flash.globalization.DateTimeFormatter]" text=".getMonthNames(%[nameStyle:String=full,context:String=standalone]%):Vector$String" tiptext="Retrieves a list of localized strings containing the month names for the current calendar system." version="2" playername="" helpurl="flash.globalization:DateTimeFormatter:getMonthNames"/>
                <string name="getTimeStyle" object="[flash.globalization.DateTimeFormatter]" text=".getTimeStyle(%%):String" tiptext="Gets the time style for this instance of the DateTimeFormatter." version="2" playername="" helpurl="flash.globalization:DateTimeFormatter:getTimeStyle"/>
                <string name="getWeekdayNames" object="[flash.globalization.DateTimeFormatter]" text=".getWeekdayNames(%[nameStyle:String=full,context:String=standalone]%):Vector$String" tiptext="Retrieves a list of localized strings containing the names of weekdays for the current calendar system." version="2" playername="" helpurl="flash.globalization:DateTimeFormatter:getWeekdayNames"/>
                <string name="setDateTimePattern" object="[flash.globalization.DateTimeFormatter]" text=".setDateTimePattern(%pattern:String%):void" tiptext="Sets the pattern string used by this DateTimeFormatter object to format dates and times." version="2" playername="" helpurl="flash.globalization:DateTimeFormatter:setDateTimePattern"/>
                <string name="setDateTimeStyles" object="[flash.globalization.DateTimeFormatter]" text=".setDateTimeStyles(%dateStyle:String,timeStyle:String%):void" tiptext="Sets the date and time styles for this instance of the DateTimeFormatter." version="2" playername="" helpurl="flash.globalization:DateTimeFormatter:setDateTimeStyles"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class DateTimeFormatter" helpurl="flash.globalization:DateTimeFormatter">
                <string name="actualLocaleIDName" object="[flash.globalization.DateTimeFormatter]" text=".actualLocaleIDName" tiptext="The name of the actual locale ID used by this DateTimeFormatter object." version="" playername="" helpurl="flash.globalization:DateTimeFormatter:actualLocaleIDName:get"/>
                <string name="lastOperationStatus" object="[flash.globalization.DateTimeFormatter]" text=".lastOperationStatus" tiptext="The status of previous operation that this DateTimeFormatter object performed." version="" playername="" helpurl="flash.globalization:DateTimeFormatter:lastOperationStatus:get"/>
                <string name="requestedLocaleIDName" object="[flash.globalization.DateTimeFormatter]" text=".requestedLocaleIDName" tiptext="The name of the requested locale ID that was passed to the constructor of this DateTimeFormatter object." version="" playername="" helpurl="flash.globalization:DateTimeFormatter:requestedLocaleIDName:get"/>
            </folder>
        </folder>
        <folder name="DateTimeNameContext" id="[flash.globalization.DateTimeNameContext]" sort="true" index="true" asAncestors="Object" tiptext="The DateTimeNameContext class enumerates constant values representing the formatting context in which a month name or weekday name is used." helpurl="flash.globalization:DateTimeNameContext">
            <folder name="Properties" id="Properties" tiptext="Properties for class DateTimeNameContext" helpurl="flash.globalization:DateTimeNameContext">
                <string name="FORMAT" object="[flash.globalization.DateTimeNameContext]" text="DateTimeNameContext.FORMAT" constant="true" tiptext="Indicates that the date element name is used within a date format." version="" playername="" helpurl="flash.globalization:DateTimeNameContext:FORMAT"/>
                <string name="STANDALONE" object="[flash.globalization.DateTimeNameContext]" text="DateTimeNameContext.STANDALONE" constant="true" tiptext="Indicates that the date element name is used in a &quot;stand alone&quot; context, independent of other formats." version="" playername="" helpurl="flash.globalization:DateTimeNameContext:STANDALONE"/>
            </folder>
        </folder>
        <folder name="DateTimeNameStyle" id="[flash.globalization.DateTimeNameStyle]" sort="true" index="true" asAncestors="Object" tiptext="The DateTimeNameStyle class enumerates constants that control the length of the month names and weekday names that are used when formatting dates." helpurl="flash.globalization:DateTimeNameStyle">
            <folder name="Properties" id="Properties" tiptext="Properties for class DateTimeNameStyle" helpurl="flash.globalization:DateTimeNameStyle">
                <string name="FULL" object="[flash.globalization.DateTimeNameStyle]" text="DateTimeNameStyle.FULL" constant="true" tiptext="Specifies the full form or full name style for month names and weekday names." version="" playername="" helpurl="flash.globalization:DateTimeNameStyle:FULL"/>
                <string name="LONG_ABBREVIATION" object="[flash.globalization.DateTimeNameStyle]" text="DateTimeNameStyle.LONG_ABBREVIATION" constant="true" tiptext="Specifies the long abbreviation style for month names and weekday names." version="" playername="" helpurl="flash.globalization:DateTimeNameStyle:LONG_ABBREVIATION"/>
                <string name="SHORT_ABBREVIATION" object="[flash.globalization.DateTimeNameStyle]" text="DateTimeNameStyle.SHORT_ABBREVIATION" constant="true" tiptext="Specifies the short abbreviation style for month names and weekday names." version="" playername="" helpurl="flash.globalization:DateTimeNameStyle:SHORT_ABBREVIATION"/>
            </folder>
        </folder>
        <folder name="DateTimeStyle" id="[flash.globalization.DateTimeStyle]" sort="true" index="true" asAncestors="Object" tiptext="Enumerates constants that determine a locale-specific date and time formatting pattern." helpurl="flash.globalization:DateTimeStyle">
            <folder name="Properties" id="Properties" tiptext="Properties for class DateTimeStyle" helpurl="flash.globalization:DateTimeStyle">
                <string name="CUSTOM" object="[flash.globalization.DateTimeStyle]" text="DateTimeStyle.CUSTOM" constant="true" tiptext="Specifies that a custom pattern string is used to specify the date or time style." version="" playername="" helpurl="flash.globalization:DateTimeStyle:CUSTOM"/>
                <string name="LONG" object="[flash.globalization.DateTimeStyle]" text="DateTimeStyle.LONG" constant="true" tiptext="Specifies the long style of a date or time." version="" playername="" helpurl="flash.globalization:DateTimeStyle:LONG"/>
                <string name="MEDIUM" object="[flash.globalization.DateTimeStyle]" text="DateTimeStyle.MEDIUM" constant="true" tiptext="Specifies the medium style of a date or time." version="" playername="" helpurl="flash.globalization:DateTimeStyle:MEDIUM"/>
                <string name="NONE" object="[flash.globalization.DateTimeStyle]" text="DateTimeStyle.NONE" constant="true" tiptext="Specifies that the date or time should not be included in the formatted string." version="" playername="" helpurl="flash.globalization:DateTimeStyle:NONE"/>
                <string name="SHORT" object="[flash.globalization.DateTimeStyle]" text="DateTimeStyle.SHORT" constant="true" tiptext="Specifies the short style of a date or time." version="" playername="" helpurl="flash.globalization:DateTimeStyle:SHORT"/>
            </folder>
        </folder>
        <folder name="LastOperationStatus" id="[flash.globalization.LastOperationStatus]" sort="true" index="true" asAncestors="Object" tiptext="The LastOperationStatus class enumerates constant values that represent the status of the most recent globalization service operation." helpurl="flash.globalization:LastOperationStatus">
            <folder name="Properties" id="Properties" tiptext="Properties for class LastOperationStatus" helpurl="flash.globalization:LastOperationStatus">
                <string name="BUFFER_OVERFLOW_ERROR" object="[flash.globalization.LastOperationStatus]" text="LastOperationStatus.BUFFER_OVERFLOW_ERROR" constant="true" tiptext="Indicates that given buffer is not enough to hold the result." version="" playername="" helpurl="flash.globalization:LastOperationStatus:BUFFER_OVERFLOW_ERROR"/>
                <string name="ERROR_CODE_UNKNOWN" object="[flash.globalization.LastOperationStatus]" text="LastOperationStatus.ERROR_CODE_UNKNOWN" constant="true" tiptext="Indicates that the return error code is not known." version="" playername="" helpurl="flash.globalization:LastOperationStatus:ERROR_CODE_UNKNOWN"/>
                <string name="ILLEGAL_ARGUMENT_ERROR" object="[flash.globalization.LastOperationStatus]" text="LastOperationStatus.ILLEGAL_ARGUMENT_ERROR" constant="true" tiptext="Indicates that an argument passed to a method was illegal." version="" playername="" helpurl="flash.globalization:LastOperationStatus:ILLEGAL_ARGUMENT_ERROR"/>
                <string name="INDEX_OUT_OF_BOUNDS_ERROR" object="[flash.globalization.LastOperationStatus]" text="LastOperationStatus.INDEX_OUT_OF_BOUNDS_ERROR" constant="true" tiptext="Indicates that an iterator went out of range or an invalid parameter was specified for month, day, or time." version="" playername="" helpurl="flash.globalization:LastOperationStatus:INDEX_OUT_OF_BOUNDS_ERROR"/>
                <string name="INVALID_ATTR_VALUE" object="[flash.globalization.LastOperationStatus]" text="LastOperationStatus.INVALID_ATTR_VALUE" constant="true" tiptext="Indicates that a given attribute value is out of the expected range." version="" playername="" helpurl="flash.globalization:LastOperationStatus:INVALID_ATTR_VALUE"/>
                <string name="INVALID_CHAR_FOUND" object="[flash.globalization.LastOperationStatus]" text="LastOperationStatus.INVALID_CHAR_FOUND" constant="true" tiptext="Indicates that invalid Unicode value was found." version="" playername="" helpurl="flash.globalization:LastOperationStatus:INVALID_CHAR_FOUND"/>
                <string name="MEMORY_ALLOCATION_ERROR" object="[flash.globalization.LastOperationStatus]" text="LastOperationStatus.MEMORY_ALLOCATION_ERROR" constant="true" tiptext="Indicates that memory allocation has failed." version="" playername="" helpurl="flash.globalization:LastOperationStatus:MEMORY_ALLOCATION_ERROR"/>
                <string name="NO_ERROR" object="[flash.globalization.LastOperationStatus]" text="LastOperationStatus.NO_ERROR" constant="true" tiptext="Indicates that the last operation succeeded without any errors." version="" playername="" helpurl="flash.globalization:LastOperationStatus:NO_ERROR"/>
                <string name="NUMBER_OVERFLOW_ERROR" object="[flash.globalization.LastOperationStatus]" text="LastOperationStatus.NUMBER_OVERFLOW_ERROR" constant="true" tiptext="Indicates that an operation resulted a value that exceeds a specified numeric type." version="" playername="" helpurl="flash.globalization:LastOperationStatus:NUMBER_OVERFLOW_ERROR"/>
                <string name="PARSE_ERROR" object="[flash.globalization.LastOperationStatus]" text="LastOperationStatus.PARSE_ERROR" constant="true" tiptext="Indicates that the parsing of a number failed." version="" playername="" helpurl="flash.globalization:LastOperationStatus:PARSE_ERROR"/>
                <string name="PATTERN_SYNTAX_ERROR" object="[flash.globalization.LastOperationStatus]" text="LastOperationStatus.PATTERN_SYNTAX_ERROR" constant="true" tiptext="Indicates that the pattern for formatting a number, date, or time is invalid." version="" playername="" helpurl="flash.globalization:LastOperationStatus:PATTERN_SYNTAX_ERROR"/>
                <string name="PLATFORM_API_FAILED" object="[flash.globalization.LastOperationStatus]" text="LastOperationStatus.PLATFORM_API_FAILED" constant="true" tiptext="Indicates that an underlying platform API failed for an operation." version="" playername="" helpurl="flash.globalization:LastOperationStatus:PLATFORM_API_FAILED"/>
                <string name="TRUNCATED_CHAR_FOUND" object="[flash.globalization.LastOperationStatus]" text="LastOperationStatus.TRUNCATED_CHAR_FOUND" constant="true" tiptext="Indicates that a truncated Unicode character value was found." version="" playername="" helpurl="flash.globalization:LastOperationStatus:TRUNCATED_CHAR_FOUND"/>
                <string name="UNEXPECTED_TOKEN" object="[flash.globalization.LastOperationStatus]" text="LastOperationStatus.UNEXPECTED_TOKEN" constant="true" tiptext="Indicates that an unexpected token was detected in a Locale ID string." version="" playername="" helpurl="flash.globalization:LastOperationStatus:UNEXPECTED_TOKEN"/>
                <string name="UNSUPPORTED_ERROR" object="[flash.globalization.LastOperationStatus]" text="LastOperationStatus.UNSUPPORTED_ERROR" constant="true" tiptext="Indicates that the requested operation or option is not supported." version="" playername="" helpurl="flash.globalization:LastOperationStatus:UNSUPPORTED_ERROR"/>
                <string name="USING_DEFAULT_WARNING" object="[flash.globalization.LastOperationStatus]" text="LastOperationStatus.USING_DEFAULT_WARNING" constant="true" tiptext="Indicates that an operating system default value was used during the most recent operation." version="" playername="" helpurl="flash.globalization:LastOperationStatus:USING_DEFAULT_WARNING"/>
                <string name="USING_FALLBACK_WARNING" object="[flash.globalization.LastOperationStatus]" text="LastOperationStatus.USING_FALLBACK_WARNING" constant="true" tiptext="Indicates that a fallback value was set during the most recent operation." version="" playername="" helpurl="flash.globalization:LastOperationStatus:USING_FALLBACK_WARNING"/>
            </folder>
        </folder>
        <folder name="LocaleID" id="[flash.globalization.LocaleID]" sort="true" index="true" asAncestors="Object" tiptext="The LocaleID class provides methods for parsing and using locale ID names." helpurl="flash.globalization:LocaleID">
            <folder name="Methods" id="Methods" tiptext="Methods for class LocaleID" helpurl="flash.globalization:LocaleID">
                <string name="LocaleID" object="[flash.globalization.LocaleID]" text="new LocaleID(%name:String%)" constructor="true" tiptext="Constructs a new LocaleID object, given a locale name." version="2" playername="" helpurl="flash.globalization:LocaleID:LocaleID"/>
                <string name="determinePreferredLocales" object="[flash.globalization.LocaleID]" text="LocaleID.determinePreferredLocales(%want:Vector$String,have:Vector$String[,keyword:String=userinterface]%):Vector$String" static="true" tiptext="Returns a list of acceptable locales based on a list of desired locales and a list of the locales that are currently available." version="2" playername="" helpurl="flash.globalization:LocaleID:determinePreferredLocales"/>
                <string name="getKeysAndValues" object="[flash.globalization.LocaleID]" text=".getKeysAndValues(%%):Object" tiptext="Returns an object containing all of the key and value pairs from the LocaleID object." version="2" playername="" helpurl="flash.globalization:LocaleID:getKeysAndValues"/>
                <string name="getLanguage" object="[flash.globalization.LocaleID]" text=".getLanguage(%%):String" tiptext="Returns the language code specified by the locale ID name." version="2" playername="" helpurl="flash.globalization:LocaleID:getLanguage"/>
                <string name="getRegion" object="[flash.globalization.LocaleID]" text=".getRegion(%%):String" tiptext="Returns the region code specified by the locale ID name." version="2" playername="" helpurl="flash.globalization:LocaleID:getRegion"/>
                <string name="getScript" object="[flash.globalization.LocaleID]" text=".getScript(%%):String" tiptext="Returns the script code specified by the locale ID name." version="2" playername="" helpurl="flash.globalization:LocaleID:getScript"/>
                <string name="getVariant" object="[flash.globalization.LocaleID]" text=".getVariant(%%):String" tiptext="Returns the language variant code specified by the locale ID name." version="2" playername="" helpurl="flash.globalization:LocaleID:getVariant"/>
                <string name="isRightToLeft" object="[flash.globalization.LocaleID]" text=".isRightToLeft(%%):Boolean" tiptext="Specifies whtehr the text direction for the specified locale is right to left." version="2" playername="" helpurl="flash.globalization:LocaleID:isRightToLeft"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class LocaleID" helpurl="flash.globalization:LocaleID">
                <string name="DEFAULT" object="[flash.globalization.LocaleID]" text="LocaleID.DEFAULT" constant="true" tiptext="Indicates that the user&apos;s default linguistic preferences should be used, as specified in the user&apos;s operating system settings." version="" playername="" helpurl="flash.globalization:LocaleID:DEFAULT"/>
                <string name="lastOperationStatus" object="[flash.globalization.LocaleID]" text=".lastOperationStatus" tiptext="The status of the most recent operation that this LocaleID object performed." version="" playername="" helpurl="flash.globalization:LocaleID:lastOperationStatus:get"/>
                <string name="name" object="[flash.globalization.LocaleID]" text=".name" tiptext="Returns a slightly more &quot;canonical&quot; locale identifier." version="" playername="" helpurl="flash.globalization:LocaleID:name:get"/>
            </folder>
        </folder>
        <folder name="NationalDigitsType" id="[flash.globalization.NationalDigitsType]" sort="true" index="true" asAncestors="Object" tiptext="The NationalDigitsType class enumerates constants that indicate digit sets used by the NumberFormatter class." helpurl="flash.globalization:NationalDigitsType">
            <folder name="Properties" id="Properties" tiptext="Properties for class NationalDigitsType" helpurl="flash.globalization:NationalDigitsType">
                <string name="ARABIC_INDIC" object="[flash.globalization.NationalDigitsType]" text="NationalDigitsType.ARABIC_INDIC" constant="true" tiptext="Represents the Unicode value for the zero digit of the Arabic-Indic digit set." version="" playername="" helpurl="flash.globalization:NationalDigitsType:ARABIC_INDIC"/>
                <string name="BALINESE" object="[flash.globalization.NationalDigitsType]" text="NationalDigitsType.BALINESE" constant="true" tiptext="Represents the Unicode value for the zero digit of the Balinese digit set." version="" playername="" helpurl="flash.globalization:NationalDigitsType:BALINESE"/>
                <string name="BENGALI" object="[flash.globalization.NationalDigitsType]" text="NationalDigitsType.BENGALI" constant="true" tiptext="Represents the Unicode value for the zero digit of the Bengali digit set." version="" playername="" helpurl="flash.globalization:NationalDigitsType:BENGALI"/>
                <string name="CHAM" object="[flash.globalization.NationalDigitsType]" text="NationalDigitsType.CHAM" constant="true" tiptext="Represents the Unicode value for the zero digit of the Cham digit set." version="" playername="" helpurl="flash.globalization:NationalDigitsType:CHAM"/>
                <string name="DEVANAGARI" object="[flash.globalization.NationalDigitsType]" text="NationalDigitsType.DEVANAGARI" constant="true" tiptext="Represents the Unicode value for the zero digit of the Devanagari digit set." version="" playername="" helpurl="flash.globalization:NationalDigitsType:DEVANAGARI"/>
                <string name="EUROPEAN" object="[flash.globalization.NationalDigitsType]" text="NationalDigitsType.EUROPEAN" constant="true" tiptext="Represents the Unicode value for the zero digit of the Latin-1 (European) digit set." version="" playername="" helpurl="flash.globalization:NationalDigitsType:EUROPEAN"/>
                <string name="EXTENDED_ARABIC_INDIC" object="[flash.globalization.NationalDigitsType]" text="NationalDigitsType.EXTENDED_ARABIC_INDIC" constant="true" tiptext="Represents the Unicode value for the zero digit of the Extended Arabic-Indic digit set." version="" playername="" helpurl="flash.globalization:NationalDigitsType:EXTENDED_ARABIC_INDIC"/>
                <string name="FULL_WIDTH" object="[flash.globalization.NationalDigitsType]" text="NationalDigitsType.FULL_WIDTH" constant="true" tiptext="Represents the Unicode value for the zero digit of the Fullwidth digit set." version="" playername="" helpurl="flash.globalization:NationalDigitsType:FULL_WIDTH"/>
                <string name="GUJARATI" object="[flash.globalization.NationalDigitsType]" text="NationalDigitsType.GUJARATI" constant="true" tiptext="Represents the Unicode value for the zero digit of the Gujarati digit set." version="" playername="" helpurl="flash.globalization:NationalDigitsType:GUJARATI"/>
                <string name="GURMUKHI" object="[flash.globalization.NationalDigitsType]" text="NationalDigitsType.GURMUKHI" constant="true" tiptext="Represents the Unicode value for the zero digit of the Gurmukhi digit set." version="" playername="" helpurl="flash.globalization:NationalDigitsType:GURMUKHI"/>
                <string name="KANNADA" object="[flash.globalization.NationalDigitsType]" text="NationalDigitsType.KANNADA" constant="true" tiptext="Represents the Unicode value for the zero digit of the Kannada digit set." version="" playername="" helpurl="flash.globalization:NationalDigitsType:KANNADA"/>
                <string name="KAYAH_LI" object="[flash.globalization.NationalDigitsType]" text="NationalDigitsType.KAYAH_LI" constant="true" tiptext="Represents the Unicode value for the zero digit of the Kayah Li digit set." version="" playername="" helpurl="flash.globalization:NationalDigitsType:KAYAH_LI"/>
                <string name="KHMER" object="[flash.globalization.NationalDigitsType]" text="NationalDigitsType.KHMER" constant="true" tiptext="Represents the Unicode value for the zero digit of the Khmer digit set." version="" playername="" helpurl="flash.globalization:NationalDigitsType:KHMER"/>
                <string name="LAO" object="[flash.globalization.NationalDigitsType]" text="NationalDigitsType.LAO" constant="true" tiptext="Represents the Unicode value for the zero digit of the Lao digit set." version="" playername="" helpurl="flash.globalization:NationalDigitsType:LAO"/>
                <string name="LEPCHA" object="[flash.globalization.NationalDigitsType]" text="NationalDigitsType.LEPCHA" constant="true" tiptext="Represents the Unicode value for the zero digit of the Lepcha digit set." version="" playername="" helpurl="flash.globalization:NationalDigitsType:LEPCHA"/>
                <string name="LIMBU" object="[flash.globalization.NationalDigitsType]" text="NationalDigitsType.LIMBU" constant="true" tiptext="Represents the Unicode value for the zero digit of the Limbu digit set." version="" playername="" helpurl="flash.globalization:NationalDigitsType:LIMBU"/>
                <string name="MALAYALAM" object="[flash.globalization.NationalDigitsType]" text="NationalDigitsType.MALAYALAM" constant="true" tiptext="Represents the Unicode value for the zero digit of the Malayalam digit set." version="" playername="" helpurl="flash.globalization:NationalDigitsType:MALAYALAM"/>
                <string name="MONGOLIAN" object="[flash.globalization.NationalDigitsType]" text="NationalDigitsType.MONGOLIAN" constant="true" tiptext="Represents the Unicode value for the zero digit of the Mongolian digit set." version="" playername="" helpurl="flash.globalization:NationalDigitsType:MONGOLIAN"/>
                <string name="MYANMAR_SHAN" object="[flash.globalization.NationalDigitsType]" text="NationalDigitsType.MYANMAR_SHAN" constant="true" tiptext="Represents the Unicode value for the zero digit of the Myanmar Shan digit set." version="" playername="" helpurl="flash.globalization:NationalDigitsType:MYANMAR_SHAN"/>
                <string name="MYANMAR" object="[flash.globalization.NationalDigitsType]" text="NationalDigitsType.MYANMAR" constant="true" tiptext="Represents the Unicode value for the zero digit of the Myanmar digit set." version="" playername="" helpurl="flash.globalization:NationalDigitsType:MYANMAR"/>
                <string name="NEW_TAI_LUE" object="[flash.globalization.NationalDigitsType]" text="NationalDigitsType.NEW_TAI_LUE" constant="true" tiptext="Represents the Unicode value for the zero digit of the New Tai Lue digit set." version="" playername="" helpurl="flash.globalization:NationalDigitsType:NEW_TAI_LUE"/>
                <string name="NKO" object="[flash.globalization.NationalDigitsType]" text="NationalDigitsType.NKO" constant="true" tiptext="Represents the Unicode value for the zero digit of the Nko digit set." version="" playername="" helpurl="flash.globalization:NationalDigitsType:NKO"/>
                <string name="OL_CHIKI" object="[flash.globalization.NationalDigitsType]" text="NationalDigitsType.OL_CHIKI" constant="true" tiptext="Represents the Unicode value for the zero digit of the Ol Chiki digit set." version="" playername="" helpurl="flash.globalization:NationalDigitsType:OL_CHIKI"/>
                <string name="ORIYA" object="[flash.globalization.NationalDigitsType]" text="NationalDigitsType.ORIYA" constant="true" tiptext="Represents the Unicode value for the zero digit of the Oriya digit set." version="" playername="" helpurl="flash.globalization:NationalDigitsType:ORIYA"/>
                <string name="OSMANYA" object="[flash.globalization.NationalDigitsType]" text="NationalDigitsType.OSMANYA" constant="true" tiptext="Represents the Unicode value for the zero digit of the Osmanya digit set." version="" playername="" helpurl="flash.globalization:NationalDigitsType:OSMANYA"/>
                <string name="SAURASHTRA" object="[flash.globalization.NationalDigitsType]" text="NationalDigitsType.SAURASHTRA" constant="true" tiptext="Represents the Unicode value for the zero digit of the Saurashtra digit set." version="" playername="" helpurl="flash.globalization:NationalDigitsType:SAURASHTRA"/>
                <string name="SUNDANESE" object="[flash.globalization.NationalDigitsType]" text="NationalDigitsType.SUNDANESE" constant="true" tiptext="Represents the Unicode value for the zero digit of the Sundanese digit set." version="" playername="" helpurl="flash.globalization:NationalDigitsType:SUNDANESE"/>
                <string name="TAMIL" object="[flash.globalization.NationalDigitsType]" text="NationalDigitsType.TAMIL" constant="true" tiptext="Represents the Unicode value for the zero digit of the Tamil digit set." version="" playername="" helpurl="flash.globalization:NationalDigitsType:TAMIL"/>
                <string name="TELUGU" object="[flash.globalization.NationalDigitsType]" text="NationalDigitsType.TELUGU" constant="true" tiptext="Represents the Unicode value for the zero digit of the Telugu digit set." version="" playername="" helpurl="flash.globalization:NationalDigitsType:TELUGU"/>
                <string name="THAI" object="[flash.globalization.NationalDigitsType]" text="NationalDigitsType.THAI" constant="true" tiptext="Represents the Unicode value for the zero digit of the Thai digit set." version="" playername="" helpurl="flash.globalization:NationalDigitsType:THAI"/>
                <string name="TIBETAN" object="[flash.globalization.NationalDigitsType]" text="NationalDigitsType.TIBETAN" constant="true" tiptext="Represents the Unicode value for the zero digit of the Tibetan digit set." version="" playername="" helpurl="flash.globalization:NationalDigitsType:TIBETAN"/>
                <string name="VAI" object="[flash.globalization.NationalDigitsType]" text="NationalDigitsType.VAI" constant="true" tiptext="Represents the Unicode value for the zero digit of the Vai digit set." version="" playername="" helpurl="flash.globalization:NationalDigitsType:VAI"/>
            </folder>
        </folder>
        <folder name="NumberFormatter" id="[flash.globalization.NumberFormatter]" sort="true" index="true" asAncestors="Object" tiptext="The NumberFormatter class provides locale-sensitive formatting and parsing of numeric values." helpurl="flash.globalization:NumberFormatter">
            <folder name="Methods" id="Methods" tiptext="Methods for class NumberFormatter" helpurl="flash.globalization:NumberFormatter">
                <string name="NumberFormatter" object="[flash.globalization.NumberFormatter]" text="new NumberFormatter(%requestedLocaleIDName:String%)" constructor="true" tiptext="Constructs a new NumberFormatter object to format numbers according to the conventions of a given locale." version="2" playername="" helpurl="flash.globalization:NumberFormatter:NumberFormatter"/>
                <string name="formatInt" object="[flash.globalization.NumberFormatter]" text=".formatInt(%value:int%):String" tiptext="Formats an int value." version="2" playername="" helpurl="flash.globalization:NumberFormatter:formatInt"/>
                <string name="formatNumber" object="[flash.globalization.NumberFormatter]" text=".formatNumber(%value:Number%):String" tiptext="Formats a Number value." version="2" playername="" helpurl="flash.globalization:NumberFormatter:formatNumber"/>
                <string name="formatUint" object="[flash.globalization.NumberFormatter]" text=".formatUint(%value:uint%):String" tiptext="Formats a uint value." version="2" playername="" helpurl="flash.globalization:NumberFormatter:formatUint"/>
                <string name="getAvailableLocaleIDNames" object="[flash.globalization.NumberFormatter]" text="NumberFormatter.getAvailableLocaleIDNames(%%):Vector$String" static="true" tiptext="Lists all of the locale ID names supported by this class." version="2" playername="" helpurl="flash.globalization:NumberFormatter:getAvailableLocaleIDNames"/>
                <string name="parseNumber" object="[flash.globalization.NumberFormatter]" text=".parseNumber(%parseString:String%):Number" tiptext="Parses a string that contains only digits and optional whitespace characters and returns a Number." version="2" playername="" helpurl="flash.globalization:NumberFormatter:parseNumber"/>
                <string name="parse" object="[flash.globalization.NumberFormatter]" text=".parse(%parseString:String%):flash.globalization:NumberParseResult" tiptext="Parses a string and returns a NumberParseResult object containing the parsed elements." version="2" playername="" helpurl="flash.globalization:NumberFormatter:parse"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class NumberFormatter" helpurl="flash.globalization:NumberFormatter">
                <string name="actualLocaleIDName" object="[flash.globalization.NumberFormatter]" text=".actualLocaleIDName" tiptext="The name of the actual locale ID used by this NumberFormatter object." version="" playername="" helpurl="flash.globalization:NumberFormatter:actualLocaleIDName:get"/>
                <string name="decimalSeparator" object="[flash.globalization.NumberFormatter]" text=".decimalSeparator" tiptext="The decimal separator character used for formatting or parsing numbers that have a decimal part." version="" playername="" helpurl="flash.globalization:NumberFormatter:decimalSeparator:get"/>
                <string name="digitsType" object="[flash.globalization.NumberFormatter]" text=".digitsType" tiptext="Defines the set of digit characters to be used when formatting numbers." version="" playername="" helpurl="flash.globalization:NumberFormatter:digitsType:get"/>
                <string name="fractionalDigits" object="[flash.globalization.NumberFormatter]" text=".fractionalDigits" tiptext="The maximum number of digits that can appear after the decimal separator." version="" playername="" helpurl="flash.globalization:NumberFormatter:fractionalDigits:get"/>
                <string name="groupingPattern" object="[flash.globalization.NumberFormatter]" text=".groupingPattern" tiptext="Describes the placement of grouping separators within the formatted number string." version="" playername="" helpurl="flash.globalization:NumberFormatter:groupingPattern:get"/>
                <string name="groupingSeparator" object="[flash.globalization.NumberFormatter]" text=".groupingSeparator" tiptext="The character or string used for the grouping separator." version="" playername="" helpurl="flash.globalization:NumberFormatter:groupingSeparator:get"/>
                <string name="lastOperationStatus" object="[flash.globalization.NumberFormatter]" text=".lastOperationStatus" tiptext="The status of previous operation that this NumberFormatter object performed." version="" playername="" helpurl="flash.globalization:NumberFormatter:lastOperationStatus:get"/>
                <string name="leadingZero" object="[flash.globalization.NumberFormatter]" text=".leadingZero" tiptext="Specifies whether a leading zero is included in a formatted number when there are no integer digits to the left of the decimal separator." version="" playername="" helpurl="flash.globalization:NumberFormatter:leadingZero:get"/>
                <string name="negativeNumberFormat" object="[flash.globalization.NumberFormatter]" text=".negativeNumberFormat" tiptext="A numeric value that indicates a formatting pattern for negative numbers." version="" playername="" helpurl="flash.globalization:NumberFormatter:negativeNumberFormat:get"/>
                <string name="negativeSymbol" object="[flash.globalization.NumberFormatter]" text=".negativeSymbol" tiptext="The negative symbol to be used when formatting negative values." version="" playername="" helpurl="flash.globalization:NumberFormatter:negativeSymbol:get"/>
                <string name="requestedLocaleIDName" object="[flash.globalization.NumberFormatter]" text=".requestedLocaleIDName" tiptext="The name of the requested locale ID that was passed to the constructor of this NumberFormatter object." version="" playername="" helpurl="flash.globalization:NumberFormatter:requestedLocaleIDName:get"/>
                <string name="trailingZeros" object="[flash.globalization.NumberFormatter]" text=".trailingZeros" tiptext="Specifies whether trailing zeros are included in a formatted number." version="" playername="" helpurl="flash.globalization:NumberFormatter:trailingZeros:get"/>
                <string name="useGrouping" object="[flash.globalization.NumberFormatter]" text=".useGrouping" tiptext="Enables the use of the grouping separator when formatting numbers." version="" playername="" helpurl="flash.globalization:NumberFormatter:useGrouping:get"/>
            </folder>
        </folder>
        <folder name="NumberParseResult" id="[flash.globalization.NumberParseResult]" sort="true" index="true" asAncestors="Object" tiptext="A data structure that holds information about a number that was extracted by parsing a string." helpurl="flash.globalization:NumberParseResult">
            <folder name="Methods" id="Methods" tiptext="Methods for class NumberParseResult" helpurl="flash.globalization:NumberParseResult">
                <string name="NumberParseResult" object="[flash.globalization.NumberParseResult]" text="new NumberParseResult(%[value:Number=unknown,startIndex:int=0x7fffffff,endIndex:int=0x7fffffff]%)" constructor="true" tiptext="Constructs a number parse result object." version="2" playername="" helpurl="flash.globalization:NumberParseResult:NumberParseResult"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class NumberParseResult" helpurl="flash.globalization:NumberParseResult">
                <string name="endIndex" object="[flash.globalization.NumberParseResult]" text=".endIndex" tiptext="The index of the character after the last character of the numeric portion of the input string." version="" playername="" helpurl="flash.globalization:NumberParseResult:endIndex:get"/>
                <string name="startIndex" object="[flash.globalization.NumberParseResult]" text=".startIndex" tiptext="The index of the first character of the numeric portion of the input string." version="" playername="" helpurl="flash.globalization:NumberParseResult:startIndex:get"/>
                <string name="value" object="[flash.globalization.NumberParseResult]" text=".value" tiptext="The value of the numeric portion of the input string." version="" playername="" helpurl="flash.globalization:NumberParseResult:value:get"/>
            </folder>
        </folder>
        <folder name="StringTools" id="[flash.globalization.StringTools]" sort="true" index="true" asAncestors="Object" tiptext="The StringTools class provides locale-sensitive case conversion methods." helpurl="flash.globalization:StringTools">
            <folder name="Methods" id="Methods" tiptext="Methods for class StringTools" helpurl="flash.globalization:StringTools">
                <string name="StringTools" object="[flash.globalization.StringTools]" text="new StringTools(%requestedLocaleIDName:String%)" constructor="true" tiptext="Constructs a new StringTools object that provides case conversion and other utilities according to the conventions of a given locale." version="2" playername="" helpurl="flash.globalization:StringTools:StringTools"/>
                <string name="getAvailableLocaleIDNames" object="[flash.globalization.StringTools]" text="StringTools.getAvailableLocaleIDNames(%%):Vector$String" static="true" tiptext="Lists all of the locale ID names supported by this class." version="2" playername="" helpurl="flash.globalization:StringTools:getAvailableLocaleIDNames"/>
                <string name="toLowerCase" object="[flash.globalization.StringTools]" text=".toLowerCase(%s:String%):String" tiptext="Converts a string to lowercase according to language conventions." version="2" playername="" helpurl="flash.globalization:StringTools:toLowerCase"/>
                <string name="toUpperCase" object="[flash.globalization.StringTools]" text=".toUpperCase(%s:String%):String" tiptext="Converts a string to uppercase according to language conventions." version="2" playername="" helpurl="flash.globalization:StringTools:toUpperCase"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class StringTools" helpurl="flash.globalization:StringTools">
                <string name="actualLocaleIDName" object="[flash.globalization.StringTools]" text=".actualLocaleIDName" tiptext="The name of the actual locale ID used by this StringTools object." version="" playername="" helpurl="flash.globalization:StringTools:actualLocaleIDName:get"/>
                <string name="lastOperationStatus" object="[flash.globalization.StringTools]" text=".lastOperationStatus" tiptext="The status of the most recent operation that this StringTools object performed." version="" playername="" helpurl="flash.globalization:StringTools:lastOperationStatus:get"/>
                <string name="requestedLocaleIDName" object="[flash.globalization.StringTools]" text=".requestedLocaleIDName" tiptext="The name of the requested locale ID that was passed to the constructor of this StringTools object." version="" playername="" helpurl="flash.globalization:StringTools:requestedLocaleIDName:get"/>
            </folder>
        </folder>
    </folder>
        <folder name="flash.html" id="flash.html" sort="true" tiptext="Classes for package flash.html" helpurl="flash.html">
        <folder name="HTMLHistoryItem" id="[flash.html.HTMLHistoryItem]" sort="true" index="true" asAncestors="Object" tiptext="An HTMLHistoryItem object describes a location in the navigation history of an HTMLLoader object." helpurl="flash.html:HTMLHistoryItem">
            <folder name="Properties" id="Properties" tiptext="Properties for class HTMLHistoryItem" helpurl="flash.html:HTMLHistoryItem">
                <string name="isPost" object="[flash.html.HTMLHistoryItem]" text=".isPost" tiptext="Indicates whether the HTML page includes POST data." version="" playername="AIR" helpurl="flash.html:HTMLHistoryItem:isPost:get"/>
                <string name="originalUrl" object="[flash.html.HTMLHistoryItem]" text=".originalUrl" tiptext="The original URL of the HTML page, before any redirects." version="" playername="AIR" helpurl="flash.html:HTMLHistoryItem:originalUrl:get"/>
                <string name="title" object="[flash.html.HTMLHistoryItem]" text=".title" tiptext="The title of the HTML page." version="" playername="AIR" helpurl="flash.html:HTMLHistoryItem:title:get"/>
                <string name="url" object="[flash.html.HTMLHistoryItem]" text=".url" tiptext="The URL of the HTML page." version="" playername="AIR" helpurl="flash.html:HTMLHistoryItem:url:get"/>
            </folder>
        </folder>
        <folder name="HTMLHost" id="[flash.html.HTMLHost]" sort="true" index="true" asAncestors="Object" tiptext="An HTMLHost object defines behaviors of an HTMLLoader object for user interface elements that can be controlled by setting various properties or by calling various methods of the window object of the HTML page." helpurl="flash.html:HTMLHost">
            <folder name="Methods" id="Methods" tiptext="Methods for class HTMLHost" helpurl="flash.html:HTMLHost">
                <string name="HTMLHost" object="[flash.html.HTMLHost]" text="new HTMLHost(%[defaultBehaviors:Boolean=true]%)" constructor="true" tiptext="Creates an HTMLHost object." version="1.0" playername="AIR" helpurl="flash.html:HTMLHost:HTMLHost"/>
                <string name="createWindow" object="[flash.html.HTMLHost]" text=".createWindow(%windowCreateOptions:flash.html:HTMLWindowCreateOptions%):flash.html:HTMLLoader" tiptext="The function called when JavaScript code in the HTMLLoader object calls the window.open() method." version="1.0" playername="AIR" helpurl="flash.html:HTMLHost:createWindow"/>
                <string name="updateLocation" object="[flash.html.HTMLHost]" text=".updateLocation(%locationURL:String%):void" tiptext="The function called when JavaScript code in the HTMLLoader object sets thewindow.location property." version="1.0" playername="AIR" helpurl="flash.html:HTMLHost:updateLocation"/>
                <string name="updateStatus" object="[flash.html.HTMLHost]" text=".updateStatus(%status:String%):void" tiptext="The function called when JavaScript code in the HTMLLoader object sets thewindow.status property." version="1.0" playername="AIR" helpurl="flash.html:HTMLHost:updateStatus"/>
                <string name="updateTitle" object="[flash.html.HTMLHost]" text=".updateTitle(%title:String%):void" tiptext="The function called when JavaScript code in the HTMLLoader object sets thewindow.document.title property or when the title element changes, either via the DOM or because of a new page load." version="1.0" playername="AIR" helpurl="flash.html:HTMLHost:updateTitle"/>
                <string name="windowBlur" object="[flash.html.HTMLHost]" text=".windowBlur(%%):void" tiptext="The function called when JavaScript code in the HTMLLoader object calls the window.blur() method." version="1.0" playername="AIR" helpurl="flash.html:HTMLHost:windowBlur"/>
                <string name="windowClose" object="[flash.html.HTMLHost]" text=".windowClose(%%):void" tiptext="The function called when JavaScript code in the HTMLLoader object calls the window.close() method." version="1.0" playername="AIR" helpurl="flash.html:HTMLHost:windowClose"/>
                <string name="windowFocus" object="[flash.html.HTMLHost]" text=".windowFocus(%%):void" tiptext="The function called when JavaScript code in the HTMLLoader object calls the window.focus() method." version="1.0" playername="AIR" helpurl="flash.html:HTMLHost:windowFocus"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class HTMLHost" helpurl="flash.html:HTMLHost">
                <string name="htmlLoader" object="[flash.html.HTMLHost]" text=".htmlLoader" tiptext="The HTMLLoader object to which this HostControl object applies." version="" playername="AIR" helpurl="flash.html:HTMLHost:htmlLoader:get"/>
                <string name="windowRect" object="[flash.html.HTMLHost]" text=".windowRect" tiptext="The property that is changed when JavaScript code in the HTMLLoader object calls the window.moveBy(), window.moveTo(), window.resizeBy(), or window.resizeTo() method." version="" playername="AIR" helpurl="flash.html:HTMLHost:windowRect:get"/>
            </folder>
        </folder>
        <folder name="HTMLLoader" id="[flash.html.HTMLLoader]" sort="true" index="true" asAncestors="flash.display:Sprite,flash.display:DisplayObjectContainer,flash.display:InteractiveObject,flash.display:DisplayObject,flash.events:EventDispatcher,Object" tiptext="The HTMLLoader class defines a type of display object that is a container for HTML content." helpurl="flash.html:HTMLLoader">
            <folder name="Methods" id="Methods" tiptext="Methods for class HTMLLoader" helpurl="flash.html:HTMLLoader">
                <string name="HTMLLoader" object="[flash.html.HTMLLoader]" text="new HTMLLoader(%%)" constructor="true" tiptext="Creates an HTMLLoader object." version="1.0" playername="AIR" helpurl="flash.html:HTMLLoader:HTMLLoader"/>
                <string name="cancelLoad" object="[flash.html.HTMLLoader]" text=".cancelLoad(%%):void" tiptext="Cancels any load operation in progress." version="1.0" playername="AIR" helpurl="flash.html:HTMLLoader:cancelLoad"/>
                <string name="createRootWindow" object="[flash.html.HTMLLoader]" text="HTMLLoader.createRootWindow(%[visible:Boolean=true,windowInitOptions:flash.display:NativeWindowInitOptions=null,scrollBarsVisible:Boolean=true,bounds:flash.geom:Rectangle=null]%):flash.html:HTMLLoader" static="true" tiptext="Creates a new NativeWindow object that contains an HTMLLoader object." version="1.0" playername="AIR" helpurl="flash.html:HTMLLoader:createRootWindow"/>
                <string name="getHistoryAt" object="[flash.html.HTMLLoader]" text=".getHistoryAt(%position:uint%):flash.html:HTMLHistoryItem" tiptext="Returns the history entry at the specified position." version="1.0" playername="AIR" helpurl="flash.html:HTMLLoader:getHistoryAt"/>
                <string name="historyBack" object="[flash.html.HTMLLoader]" text=".historyBack(%%):void" tiptext="Navigates back in the browser history, if possible." version="1.0" playername="AIR" helpurl="flash.html:HTMLLoader:historyBack"/>
                <string name="historyForward" object="[flash.html.HTMLLoader]" text=".historyForward(%%):void" tiptext="Navigates forward in the browser history, if possible." version="1.0" playername="AIR" helpurl="flash.html:HTMLLoader:historyForward"/>
                <string name="historyGo" object="[flash.html.HTMLLoader]" text=".historyGo(%steps:int%):void" tiptext="Navigates the specified number of steps in the browser history." version="1.0" playername="AIR" helpurl="flash.html:HTMLLoader:historyGo"/>
                <string name="loadString" object="[flash.html.HTMLLoader]" text=".loadString(%htmlContent:String%):void" tiptext="Loads the HTMLLoader object with the HTML content contained in the HTML string." version="1.0" playername="AIR" helpurl="flash.html:HTMLLoader:loadString"/>
                <string name="load" object="[flash.html.HTMLLoader]" text=".load(%urlRequestToLoad:flash.net:URLRequest%):void" tiptext="Loads the HTMLLoader object with data from the site specified by the urlRequestToLoad parameter." version="1.0" playername="AIR" helpurl="flash.html:HTMLLoader:load"/>
                <string name="reload" object="[flash.html.HTMLLoader]" text=".reload(%%):void" tiptext="Reloads the page from the current location." version="1.0" playername="AIR" helpurl="flash.html:HTMLLoader:reload"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class HTMLLoader" helpurl="flash.html:HTMLLoader">
                <string name="authenticate" object="[flash.html.HTMLLoader]" text=".authenticate" tiptext="Specifies whether authentication requests should be handled (true)or not (false) for HTTP requests issued by this object." version="" playername="AIR" helpurl="flash.html:HTMLLoader:authenticate:get"/>
                <string name="cacheResponse" object="[flash.html.HTMLLoader]" text=".cacheResponse" tiptext="Specifies whether successful response data should be cached for HTTP requests issued by this object." version="" playername="AIR" helpurl="flash.html:HTMLLoader:cacheResponse:get"/>
                <string name="contentHeight" object="[flash.html.HTMLLoader]" text=".contentHeight" tiptext="The height, in pixels, of the HTML content." version="" playername="AIR" helpurl="flash.html:HTMLLoader:contentHeight:get"/>
                <string name="contentWidth" object="[flash.html.HTMLLoader]" text=".contentWidth" tiptext="The width, in pixels, of the HTML content." version="" playername="AIR" helpurl="flash.html:HTMLLoader:contentWidth:get"/>
                <string name="hasFocusableContent" object="[flash.html.HTMLLoader]" text=".hasFocusableContent" tiptext="Indicates whether any content in the HTMLLoader object is focusable." version="" playername="AIR" helpurl="flash.html:HTMLLoader:hasFocusableContent:get"/>
                <string name="height" object="[flash.html.HTMLLoader]" text=".height" tiptext="Specifies the height of the rectangle of the HTML canvas that is being rendered." version="" playername="AIR" helpurl="flash.html:HTMLLoader:height:get"/>
                <string name="historyLength" object="[flash.html.HTMLLoader]" text=".historyLength" tiptext="The overall length of the history list, including back and forward entries." version="" playername="AIR" helpurl="flash.html:HTMLLoader:historyLength:get"/>
                <string name="historyPosition" object="[flash.html.HTMLLoader]" text=".historyPosition" tiptext="The current position in the history list." version="" playername="AIR" helpurl="flash.html:HTMLLoader:historyPosition:get"/>
                <string name="htmlHost" object="[flash.html.HTMLLoader]" text=".htmlHost" tiptext="The HTMLHost object used to handle changes to certain user interface elements, such as the window.document.title property of the HTMLLoader object." version="" playername="AIR" helpurl="flash.html:HTMLLoader:htmlHost:get"/>
                <string name="idleTimeout" object="[flash.html.HTMLLoader]" text=".idleTimeout" tiptext="Specifies the idle timeout value (in milliseconds) for HTTP requests issued by this object." version="" playername="AIR" helpurl="flash.html:HTMLLoader:idleTimeout:get"/>
                <string name="isSupported" object="[flash.html.HTMLLoader]" text=".isSupported" tiptext="Indicates whether the HTMLLoader class is supported on the client system." version="" playername="AIR" helpurl="flash.html:HTMLLoader:isSupported:get"/>
                <string name="loaded" object="[flash.html.HTMLLoader]" text=".loaded" tiptext="Indicates whether the JavaScript load event corresponding to the previous call to the load() or loadString() method has been delivered to the HTML DOM in the HTMLLoader object." version="" playername="AIR" helpurl="flash.html:HTMLLoader:loaded:get"/>
                <string name="location" object="[flash.html.HTMLLoader]" text=".location" tiptext="The URL for the content loaded in the HTMLLoader object." version="" playername="AIR" helpurl="flash.html:HTMLLoader:location:get"/>
                <string name="manageCookies" object="[flash.html.HTMLLoader]" text=".manageCookies" tiptext="Specifies whether the HTTP protocol stack should manage cookies for thisobject." version="" playername="AIR" helpurl="flash.html:HTMLLoader:manageCookies:get"/>
                <string name="navigateInSystemBrowser" object="[flash.html.HTMLLoader]" text=".navigateInSystemBrowser" tiptext="Specifies whether navigation of the root frame of the HTML content (such as when the user clicks a link, when the window.location property is set, or when calling window.open()) results in navigation in the HTMLLoader object (false) or in the default system web browser(true)." version="" playername="AIR" helpurl="flash.html:HTMLLoader:navigateInSystemBrowser:get"/>
                <string name="paintsDefaultBackground" object="[flash.html.HTMLLoader]" text=".paintsDefaultBackground" tiptext="Specifies whether the background of the HTMLLoader document is opaque white (true) or not (false)." version="" playername="AIR" helpurl="flash.html:HTMLLoader:paintsDefaultBackground:get"/>
                <string name="pdfCapability" object="[flash.html.HTMLLoader]" text=".pdfCapability" tiptext="The type of PDF support on the user&apos;s system, defined as an integer code value." version="" playername="AIR" helpurl="flash.html:HTMLLoader:pdfCapability:get"/>
                <string name="placeLoadStringContentInApplicationSandbox" object="[flash.html.HTMLLoader]" text=".placeLoadStringContentInApplicationSandbox" tiptext="Specifies whether content loaded via the loadString() method is put in the application sandbox (true) or in a non-application sandbox (false)." version="" playername="AIR" helpurl="flash.html:HTMLLoader:placeLoadStringContentInApplicationSandbox:get"/>
                <string name="runtimeApplicationDomain" object="[flash.html.HTMLLoader]" text=".runtimeApplicationDomain" tiptext="The application domain to use for the window.runtime object in JavaScript in the HTML page." version="" playername="AIR" helpurl="flash.html:HTMLLoader:runtimeApplicationDomain:get"/>
                <string name="scrollH" object="[flash.html.HTMLLoader]" text=".scrollH" tiptext="The horizontal scroll position of the HTML content in the HTMLLoader object." version="" playername="AIR" helpurl="flash.html:HTMLLoader:scrollH:get"/>
                <string name="scrollV" object="[flash.html.HTMLLoader]" text=".scrollV" tiptext="The vertical scroll position of the HTML content in the HTMLLoader object." version="" playername="AIR" helpurl="flash.html:HTMLLoader:scrollV:get"/>
                <string name="swfCapability" object="[flash.html.HTMLLoader]" text=".swfCapability" tiptext="The type of SWF support on the user&apos;s system, defined as an integer code value." version="" playername="AIR" helpurl="flash.html:HTMLLoader:swfCapability:get"/>
                <string name="textEncodingFallback" object="[flash.html.HTMLLoader]" text=".textEncodingFallback" tiptext="The character encoding used by the HTMLLoader content if an HTML page does not specify a character encoding." version="" playername="AIR" helpurl="flash.html:HTMLLoader:textEncodingFallback:get"/>
                <string name="textEncodingOverride" object="[flash.html.HTMLLoader]" text=".textEncodingOverride" tiptext="The character encoding used by the HTMLLoader content, overriding any setting in the HTML page." version="" playername="AIR" helpurl="flash.html:HTMLLoader:textEncodingOverride:get"/>
                <string name="useCache" object="[flash.html.HTMLLoader]" text=".useCache" tiptext="Specifies whether the local cache should be consulted before HTTP requests issued by this object fetch data." version="" playername="AIR" helpurl="flash.html:HTMLLoader:useCache:get"/>
                <string name="userAgent" object="[flash.html.HTMLLoader]" text=".userAgent" tiptext="The user agent string to be used in any upcoming content requests from this HTMLLoader object." version="" playername="AIR" helpurl="flash.html:HTMLLoader:userAgent:get"/>
                <string name="width" object="[flash.html.HTMLLoader]" text=".width" tiptext="Specifies the width of the rectangle of the HTML canvas that is being rendered." version="" playername="AIR" helpurl="flash.html:HTMLLoader:width:get"/>
                <string name="window" object="[flash.html.HTMLLoader]" text=".window" tiptext="The global JavaScript object for the content loaded into the HTML control." version="" playername="AIR" helpurl="flash.html:HTMLLoader:window:get"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class HTMLLoader" helpurl="flash.html:HTMLLoader">
                <string name="htmlDOMInitialize" object="[flash.html.HTMLLoader]" text=".addEventListener(%type:String=Event.HTML_DOM_INITIALIZE{Event.HTML_DOM_INITIALIZE,HTMLUncaughtScriptExceptionEvent.UNCAUGHT_SCRIPT_EXCEPTION,Event.SCROLL,Event.HTML_BOUNDS_CHANGE,Event.LOCATION_CHANGE,Event.HTML_RENDER,Event.COMPLETE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Signals that the HTML DOM has been created in response to a load operation." version="" playername="AIR" helpurl="flash.html:HTMLLoader_flash.events.Event.HTML_DOM_INITIALIZE_htmlDOMInitialize"/>
                <string name="uncaughtScriptException" object="[flash.html.HTMLLoader]" text=".addEventListener(%type:String=HTMLUncaughtScriptExceptionEvent.UNCAUGHT_SCRIPT_EXCEPTION{Event.HTML_DOM_INITIALIZE,HTMLUncaughtScriptExceptionEvent.UNCAUGHT_SCRIPT_EXCEPTION,Event.SCROLL,Event.HTML_BOUNDS_CHANGE,Event.LOCATION_CHANGE,Event.HTML_RENDER,Event.COMPLETE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Signals that an uncaught JavaScript exception occurred in the HTMLLoader object." version="" playername="AIR" helpurl="flash.html:HTMLLoader_flash.events.HTMLUncaughtScriptExceptionEvent.UNCAUGHT_SCRIPT_EXCEPTION_uncaughtScriptException"/>
                <string name="scroll" object="[flash.html.HTMLLoader]" text=".addEventListener(%type:String=Event.SCROLL{Event.HTML_DOM_INITIALIZE,HTMLUncaughtScriptExceptionEvent.UNCAUGHT_SCRIPT_EXCEPTION,Event.SCROLL,Event.HTML_BOUNDS_CHANGE,Event.LOCATION_CHANGE,Event.HTML_RENDER,Event.COMPLETE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Signals that the scrollH or scrollV property has been changed by the HTMLLoader object." version="" playername="AIR" helpurl="flash.html:HTMLLoader_flash.events.Event.SCROLL_scroll"/>
                <string name="htmlBoundsChange" object="[flash.html.HTMLLoader]" text=".addEventListener(%type:String=Event.HTML_BOUNDS_CHANGE{Event.HTML_DOM_INITIALIZE,HTMLUncaughtScriptExceptionEvent.UNCAUGHT_SCRIPT_EXCEPTION,Event.SCROLL,Event.HTML_BOUNDS_CHANGE,Event.LOCATION_CHANGE,Event.HTML_RENDER,Event.COMPLETE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Signals that one or both of the contentWidth and contentHeight properties of the HTMLLoader object has changed." version="" playername="AIR" helpurl="flash.html:HTMLLoader_flash.events.Event.HTML_BOUNDS_CHANGE_htmlBoundsChange"/>
                <string name="locationChange" object="[flash.html.HTMLLoader]" text=".addEventListener(%type:String=Event.LOCATION_CHANGE{Event.HTML_DOM_INITIALIZE,HTMLUncaughtScriptExceptionEvent.UNCAUGHT_SCRIPT_EXCEPTION,Event.SCROLL,Event.HTML_BOUNDS_CHANGE,Event.LOCATION_CHANGE,Event.HTML_RENDER,Event.COMPLETE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Signals that the location property of the HTMLLoader object has changed." version="" playername="AIR" helpurl="flash.html:HTMLLoader_flash.events.Event.LOCATION_CHANGE_locationChange"/>
                <string name="htmlRender" object="[flash.html.HTMLLoader]" text=".addEventListener(%type:String=Event.HTML_RENDER{Event.HTML_DOM_INITIALIZE,HTMLUncaughtScriptExceptionEvent.UNCAUGHT_SCRIPT_EXCEPTION,Event.SCROLL,Event.HTML_BOUNDS_CHANGE,Event.LOCATION_CHANGE,Event.HTML_RENDER,Event.COMPLETE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Signals that the rendering of content in the HTMLLoader object is fully up to date." version="" playername="AIR" helpurl="flash.html:HTMLLoader_flash.events.Event.HTML_RENDER_htmlRender"/>
                <string name="complete" object="[flash.html.HTMLLoader]" text=".addEventListener(%type:String=Event.COMPLETE{Event.HTML_DOM_INITIALIZE,HTMLUncaughtScriptExceptionEvent.UNCAUGHT_SCRIPT_EXCEPTION,Event.SCROLL,Event.HTML_BOUNDS_CHANGE,Event.LOCATION_CHANGE,Event.HTML_RENDER,Event.COMPLETE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Signals that the last load operation requested by loadString or load method has completed." version="" playername="AIR" helpurl="flash.html:HTMLLoader_flash.events.Event.COMPLETE_complete"/>
            </folder>
        </folder>
        <folder name="HTMLPDFCapability" id="[flash.html.HTMLPDFCapability]" sort="true" index="true" asAncestors="Object" tiptext="The HTMLPDFCapability class contains possible values of the pdfCapability property of an HTMLLoader object." helpurl="flash.html:HTMLPDFCapability">
            <folder name="Properties" id="Properties" tiptext="Properties for class HTMLPDFCapability" helpurl="flash.html:HTMLPDFCapability">
                <string name="ERROR_CANNOT_LOAD_READER" object="[flash.html.HTMLPDFCapability]" text="HTMLPDFCapability.ERROR_CANNOT_LOAD_READER" constant="true" tiptext="An error was returned by the OS when trying to load the Adobe Reader or Acrobatapplication or one of its necessary libraries." version="" playername="AIR" helpurl="flash.html:HTMLPDFCapability:ERROR_CANNOT_LOAD_READER"/>
                <string name="ERROR_INSTALLED_READER_NOT_FOUND" object="[flash.html.HTMLPDFCapability]" text="HTMLPDFCapability.ERROR_INSTALLED_READER_NOT_FOUND" constant="true" tiptext="No version of Adobe Reader is detected." version="" playername="AIR" helpurl="flash.html:HTMLPDFCapability:ERROR_INSTALLED_READER_NOT_FOUND"/>
                <string name="ERROR_INSTALLED_READER_TOO_OLD" object="[flash.html.HTMLPDFCapability]" text="HTMLPDFCapability.ERROR_INSTALLED_READER_TOO_OLD" constant="true" tiptext="Adobe Reader is detected, but the version is too old." version="" playername="AIR" helpurl="flash.html:HTMLPDFCapability:ERROR_INSTALLED_READER_TOO_OLD"/>
                <string name="ERROR_PREFERRED_READER_TOO_OLD" object="[flash.html.HTMLPDFCapability]" text="HTMLPDFCapability.ERROR_PREFERRED_READER_TOO_OLD" constant="true" tiptext="A sufficient version (8.1 or later) of Adobe Reader or Acrobat is detected, but the the versionof Adobe Reader that is set up to handle PDF content is older than Adobe Reader or Acrobat 8.1." version="" playername="AIR" helpurl="flash.html:HTMLPDFCapability:ERROR_PREFERRED_READER_TOO_OLD"/>
            </folder>
        </folder>
        <folder name="HTMLSWFCapability" id="[flash.html.HTMLSWFCapability]" sort="true" index="true" asAncestors="Object" tiptext="The HTMLSWFCapability class contains possible values of the swfCapability property of an HTMLLoader object." helpurl="flash.html:HTMLSWFCapability">
            <folder name="Properties" id="Properties" tiptext="Properties for class HTMLSWFCapability" helpurl="flash.html:HTMLSWFCapability">
                <string name="ERROR_INSTALLED_PLAYER_NOT_FOUND" object="[flash.html.HTMLSWFCapability]" text="HTMLSWFCapability.ERROR_INSTALLED_PLAYER_NOT_FOUND" constant="true" tiptext="No version of Adobe Flash Player is detected." version="" playername="AIR" helpurl="flash.html:HTMLSWFCapability:ERROR_INSTALLED_PLAYER_NOT_FOUND"/>
                <string name="ERROR_INSTALLED_PLAYER_TOO_OLD" object="[flash.html.HTMLSWFCapability]" text="HTMLSWFCapability.ERROR_INSTALLED_PLAYER_TOO_OLD" constant="true" tiptext="Adobe Flash Player is detected, but the version is too old." version="" playername="AIR" helpurl="flash.html:HTMLSWFCapability:ERROR_INSTALLED_PLAYER_TOO_OLD"/>
                <string name="STATUS_OK" object="[flash.html.HTMLSWFCapability]" text="HTMLSWFCapability.STATUS_OK" constant="true" tiptext="A sufficient version of Adobe Flash Player is detected and SWF content can be loaded in a HTMLLoader object." version="" playername="AIR" helpurl="flash.html:HTMLSWFCapability:STATUS_OK"/>
            </folder>
        </folder>
        <folder name="HTMLWindowCreateOptions" id="[flash.html.HTMLWindowCreateOptions]" sort="true" index="true" asAncestors="Object" tiptext="This class defines the options that can be specified when JavaScript running in an HTMLLoader object tries to create a new HTML window by calling the window.open() method." helpurl="flash.html:HTMLWindowCreateOptions">
            <folder name="Properties" id="Properties" tiptext="Properties for class HTMLWindowCreateOptions" helpurl="flash.html:HTMLWindowCreateOptions">
                <string name="fullscreen" object="[flash.html.HTMLWindowCreateOptions]" text=".fullscreen" tiptext="Specifies whether the window should be full screen." version="" playername="AIR" helpurl="flash.html:HTMLWindowCreateOptions:fullscreen"/>
                <string name="height" object="[flash.html.HTMLWindowCreateOptions]" text=".height" tiptext="Specifies the desired initial height of the new window." version="" playername="AIR" helpurl="flash.html:HTMLWindowCreateOptions:height"/>
                <string name="locationBarVisible" object="[flash.html.HTMLWindowCreateOptions]" text=".locationBarVisible" tiptext="Whether a location bar should be displayed." version="" playername="AIR" helpurl="flash.html:HTMLWindowCreateOptions:locationBarVisible"/>
                <string name="menuBarVisible" object="[flash.html.HTMLWindowCreateOptions]" text=".menuBarVisible" tiptext="Specifies whether a menu bar should be displayed." version="" playername="AIR" helpurl="flash.html:HTMLWindowCreateOptions:menuBarVisible"/>
                <string name="resizable" object="[flash.html.HTMLWindowCreateOptions]" text=".resizable" tiptext="Specifies whether the window should be resizable." version="" playername="AIR" helpurl="flash.html:HTMLWindowCreateOptions:resizable"/>
                <string name="scrollBarsVisible" object="[flash.html.HTMLWindowCreateOptions]" text=".scrollBarsVisible" tiptext="Specifies whether scrollbars should be displayed." version="" playername="AIR" helpurl="flash.html:HTMLWindowCreateOptions:scrollBarsVisible"/>
                <string name="statusBarVisible" object="[flash.html.HTMLWindowCreateOptions]" text=".statusBarVisible" tiptext="Specifies whether a status bar should be displayed." version="" playername="AIR" helpurl="flash.html:HTMLWindowCreateOptions:statusBarVisible"/>
                <string name="toolBarVisible" object="[flash.html.HTMLWindowCreateOptions]" text=".toolBarVisible" tiptext="Specifies whether a toolbar bar should be displayed." version="" playername="AIR" helpurl="flash.html:HTMLWindowCreateOptions:toolBarVisible"/>
                <string name="width" object="[flash.html.HTMLWindowCreateOptions]" text=".width" tiptext="Specifies the desired initial width of the new window." version="" playername="AIR" helpurl="flash.html:HTMLWindowCreateOptions:width"/>
                <string name="x" object="[flash.html.HTMLWindowCreateOptions]" text=".x" tiptext="Specifies the desired initial x position of the new window on the screen." version="" playername="AIR" helpurl="flash.html:HTMLWindowCreateOptions:x"/>
                <string name="y" object="[flash.html.HTMLWindowCreateOptions]" text=".y" tiptext="Specifies the desired initial y position of the new window on the screen." version="" playername="AIR" helpurl="flash.html:HTMLWindowCreateOptions:y"/>
            </folder>
        </folder>
    </folder>
        <folder name="flash.media" id="flash.media" sort="true" tiptext="Classes for package flash.media" helpurl="flash.media">
        <folder name="Camera" id="[flash.media.Camera]" sort="true" index="true" asAncestors="flash.events:EventDispatcher,Object" tiptext="Use the Camera class to capture video from the client system&apos;s camera." helpurl="flash.media:Camera">
            <folder name="Methods" id="Methods" tiptext="Methods for class Camera" helpurl="flash.media:Camera">
                <string name="getCamera" object="[flash.media.Camera]" text="Camera.getCamera(%[name:String=null]%):flash.media:Camera" static="true" tiptext="Returns a reference to a Camera object for capturing video." version="9" playername="" helpurl="flash.media:Camera:getCamera"/>
                <string name="setKeyFrameInterval" object="[flash.media.Camera]" text=".setKeyFrameInterval(%keyFrameInterval:int%):void" tiptext="Specifies which video frames are transmitted in full (called keyframes) instead of being interpolated by the video compression algorithm." version="9" playername="" helpurl="flash.media:Camera:setKeyFrameInterval"/>
                <string name="setLoopback" object="[flash.media.Camera]" text=".setLoopback(%[compress:Boolean=false]%):void" tiptext="Specifies whether to use a compressed video stream for a local view of the camera." version="9" playername="" helpurl="flash.media:Camera:setLoopback"/>
                <string name="setMode" object="[flash.media.Camera]" text=".setMode(%width:int,height:int,fps:Number[,favorArea:Boolean=true]%):void" tiptext="Sets the camera capture mode to the native mode that best meets the specified requirements." version="9" playername="" helpurl="flash.media:Camera:setMode"/>
                <string name="setMotionLevel" object="[flash.media.Camera]" text=".setMotionLevel(%motionLevel:int[,timeout:int=2000]%):void" tiptext="Specifies how much motion is required to dispatch the activity event." version="9" playername="" helpurl="flash.media:Camera:setMotionLevel"/>
                <string name="setQuality" object="[flash.media.Camera]" text=".setQuality(%bandwidth:int,quality:int%):void" tiptext="Sets the maximum amount of bandwidth per second or the required picture quality of the current outgoing video feed." version="9" playername="" helpurl="flash.media:Camera:setQuality"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class Camera" helpurl="flash.media:Camera">
                <string name="activityLevel" object="[flash.media.Camera]" text=".activityLevel" tiptext="The amount of motion the camera is detecting." version="" playername="" helpurl="flash.media:Camera:activityLevel:get"/>
                <string name="bandwidth" object="[flash.media.Camera]" text=".bandwidth" tiptext="The maximum amount of bandwidth the current outgoing video feed can use, in bytes." version="" playername="" helpurl="flash.media:Camera:bandwidth:get"/>
                <string name="currentFPS" object="[flash.media.Camera]" text=".currentFPS" tiptext="The rate at which the camera is capturing data, in frames per second." version="" playername="" helpurl="flash.media:Camera:currentFPS:get"/>
                <string name="fps" object="[flash.media.Camera]" text=".fps" tiptext="The maximum rate at which the camera can capture data, in frames per second." version="" playername="" helpurl="flash.media:Camera:fps:get"/>
                <string name="height" object="[flash.media.Camera]" text=".height" tiptext="The current capture height, in pixels." version="" playername="" helpurl="flash.media:Camera:height:get"/>
                <string name="index" object="[flash.media.Camera]" text=".index" tiptext="A zero-based integer that specifies the index of the camera, as reflected in the array returned by the names property." version="" playername="" helpurl="flash.media:Camera:index:get"/>
                <string name="isSupported" object="[flash.media.Camera]" text=".isSupported" tiptext="The isSupported property is set to true if the Camera class is supported on the current platform, otherwise it is set to false." version="" playername="" helpurl="flash.media:Camera:isSupported:get"/>
                <string name="keyFrameInterval" object="[flash.media.Camera]" text=".keyFrameInterval" tiptext="The number of video frames transmitted in full (called keyframes) instead of being interpolated by the video compression algorithm." version="" playername="" helpurl="flash.media:Camera:keyFrameInterval:get"/>
                <string name="loopback" object="[flash.media.Camera]" text=".loopback" tiptext="Indicates whether a local view of what the camera is capturing is compressed and decompressed (true), as it would be for live transmission using Flash Media Server, or uncompressed (false)." version="" playername="" helpurl="flash.media:Camera:loopback:get"/>
                <string name="motionLevel" object="[flash.media.Camera]" text=".motionLevel" tiptext="The amount of motion required to invoke the activity event." version="" playername="" helpurl="flash.media:Camera:motionLevel:get"/>
                <string name="motionTimeout" object="[flash.media.Camera]" text=".motionTimeout" tiptext="The number of milliseconds between the time the camera stops detecting motion and the time the activity event is invoked." version="" playername="" helpurl="flash.media:Camera:motionTimeout:get"/>
                <string name="muted" object="[flash.media.Camera]" text=".muted" tiptext="A Boolean value indicating whether the user has denied access to the camera (true) or allowed access (false) in the Flash Player Privacy dialog box." version="" playername="" helpurl="flash.media:Camera:muted:get"/>
                <string name="name" object="[flash.media.Camera]" text=".name" tiptext="The name of the current camera, as returned by the camera hardware." version="" playername="" helpurl="flash.media:Camera:name:get"/>
                <string name="names" object="[flash.media.Camera]" text=".names" tiptext="An array of strings indicating the names of all available cameras without displaying the Flash Player Privacy dialog box." version="" playername="" helpurl="flash.media:Camera:names:get"/>
                <string name="quality" object="[flash.media.Camera]" text=".quality" tiptext="The required level of picture quality, as determined by the amount of compression being applied to each video frame." version="" playername="" helpurl="flash.media:Camera:quality:get"/>
                <string name="width" object="[flash.media.Camera]" text=".width" tiptext="The current capture width, in pixels." version="" playername="" helpurl="flash.media:Camera:width:get"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class Camera" helpurl="flash.media:Camera">
                <string name="status" object="[flash.media.Camera]" text=".addEventListener(%type:String=StatusEvent.STATUS{StatusEvent.STATUS,ActivityEvent.ACTIVITY},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a camera reports its status." version="" playername="" helpurl="flash.media:Camera_flash.events.StatusEvent.STATUS_status"/>
                <string name="activity" object="[flash.media.Camera]" text=".addEventListener(%type:String=ActivityEvent.ACTIVITY{StatusEvent.STATUS,ActivityEvent.ACTIVITY},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a camera begins or ends a session." version="" playername="" helpurl="flash.media:Camera_flash.events.ActivityEvent.ACTIVITY_activity"/>
            </folder>
        </folder>
        <folder name="CameraRoll" id="[flash.media.CameraRoll]" sort="true" index="true" asAncestors="flash.events:EventDispatcher,Object" tiptext="The CameraRoll class allows you to access image data in the system media library or &quot;camera roll.&quot; &lt;em&gt;AIR profile support: This feature is supported on mobile devices, but it is not supported on desktop operating systems or AIR for TV devices." helpurl="flash.media:CameraRoll">
            <folder name="Methods" id="Methods" tiptext="Methods for class CameraRoll" helpurl="flash.media:CameraRoll">
                <string name="CameraRoll" object="[flash.media.CameraRoll]" text="new CameraRoll(%%)" constructor="true" tiptext="Creates a CameraRoll object." version="2" playername="AIR" helpurl="flash.media:CameraRoll:CameraRoll"/>
                <string name="addBitmapData" object="[flash.media.CameraRoll]" text=".addBitmapData(%bitmapData:flash.display:BitmapData%):void" tiptext="Adds an image to the device camera roll." version="2" playername="AIR" helpurl="flash.media:CameraRoll:addBitmapData"/>
                <string name="browseForImage" object="[flash.media.CameraRoll]" text=".browseForImage(%%):void" tiptext="Opens an image browser dialog to allow the user to select an existing image from the device camera roll." version="2.5" playername="AIR" helpurl="flash.media:CameraRoll:browseForImage"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class CameraRoll" helpurl="flash.media:CameraRoll">
                <string name="supportsAddBitmapData" object="[flash.media.CameraRoll]" text=".supportsAddBitmapData" tiptext="Whether the CameraRoll.addBitmapData() method is supported." version="" playername="AIR" helpurl="flash.media:CameraRoll:supportsAddBitmapData:get"/>
                <string name="supportsBrowseForImage" object="[flash.media.CameraRoll]" text=".supportsBrowseForImage" tiptext="Reports whether the CameraRoll.browseForImage() method is supported." version="" playername="AIR" helpurl="flash.media:CameraRoll:supportsBrowseForImage:get"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class CameraRoll" helpurl="flash.media:CameraRoll">
                <string name="cancel" object="[flash.media.CameraRoll]" text=".addEventListener(%type:String=Event.CANCEL{Event.CANCEL,MediaEvent.SELECT,ErrorEvent.ERROR,Event.COMPLETE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a user cancels a browse-for-image operation without selecting an image." version="" playername="AIR" helpurl="flash.media:CameraRoll_flash.events.Event.CANCEL_cancel"/>
                <string name="select" object="[flash.media.CameraRoll]" text=".addEventListener(%type:String=MediaEvent.SELECT{Event.CANCEL,MediaEvent.SELECT,ErrorEvent.ERROR,Event.COMPLETE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a user selects an image from the device media library." version="" playername="AIR" helpurl="flash.media:CameraRoll_flash.events.MediaEvent.SELECT_select"/>
                <string name="error" object="[flash.media.CameraRoll]" text=".addEventListener(%type:String=ErrorEvent.ERROR{Event.CANCEL,MediaEvent.SELECT,ErrorEvent.ERROR,Event.COMPLETE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="The error event is dispatched when an error occurs." version="" playername="AIR" helpurl="flash.media:CameraRoll_flash.events.ErrorEvent.ERROR_error"/>
                <string name="complete" object="[flash.media.CameraRoll]" text=".addEventListener(%type:String=Event.COMPLETE{Event.CANCEL,MediaEvent.SELECT,ErrorEvent.ERROR,Event.COMPLETE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Signals that an addBitmapData() operation completed successfully." version="" playername="AIR" helpurl="flash.media:CameraRoll_flash.events.Event.COMPLETE_complete"/>
            </folder>
        </folder>
        <folder name="CameraUI" id="[flash.media.CameraUI]" sort="true" index="true" asAncestors="flash.events:EventDispatcher,Object" tiptext="The CameraUI class allows you to capture a still image or video using the default camera application on a device." helpurl="flash.media:CameraUI">
            <folder name="Methods" id="Methods" tiptext="Methods for class CameraUI" helpurl="flash.media:CameraUI">
                <string name="CameraUI" object="[flash.media.CameraUI]" text="new CameraUI(%%)" constructor="true" tiptext="Creates a CameraUI object." version="2.5" playername="AIR" helpurl="flash.media:CameraUI:CameraUI"/>
                <string name="launch" object="[flash.media.CameraUI]" text=".launch(%requestedMediaType:String%):void" tiptext="Launches the default camera application on the device." version="2.5" playername="AIR" helpurl="flash.media:CameraUI:launch"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class CameraUI" helpurl="flash.media:CameraUI">
                <string name="isSupported" object="[flash.media.CameraUI]" text=".isSupported" tiptext="Reports whether the CameraUI class is supported on the current device." version="" playername="AIR" helpurl="flash.media:CameraUI:isSupported:get"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class CameraUI" helpurl="flash.media:CameraUI">
                <string name="cancel" object="[flash.media.CameraUI]" text=".addEventListener(%type:String=Event.CANCEL{Event.CANCEL,ErrorEvent.ERROR,MediaEvent.COMPLETE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="The cancel event is dispatched when the user closes the Camera UI without saving a picture or video." version="" playername="AIR" helpurl="flash.media:CameraUI_flash.events.Event.CANCEL_cancel"/>
                <string name="error" object="[flash.media.CameraUI]" text=".addEventListener(%type:String=ErrorEvent.ERROR{Event.CANCEL,ErrorEvent.ERROR,MediaEvent.COMPLETE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="The error event is dispatched when the default camera cannot be opened." version="" playername="AIR" helpurl="flash.media:CameraUI_flash.events.ErrorEvent.ERROR_error"/>
                <string name="complete" object="[flash.media.CameraUI]" text=".addEventListener(%type:String=MediaEvent.COMPLETE{Event.CANCEL,ErrorEvent.ERROR,MediaEvent.COMPLETE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="The complete event is dispatched when the user either captures a still picture orvideo in the Camera UI." version="" playername="AIR" helpurl="flash.media:CameraUI_flash.events.MediaEvent.COMPLETE_complete"/>
            </folder>
        </folder>
        <folder name="ID3Info" id="[flash.media.ID3Info]" sort="true" index="true" asAncestors="Object" tiptext="The ID3Info class contains properties that reflect ID3 metadata." helpurl="flash.media:ID3Info">
            <folder name="Properties" id="Properties" tiptext="Properties for class ID3Info" helpurl="flash.media:ID3Info">
                <string name="album" object="[flash.media.ID3Info]" text=".album" tiptext="The name of the album; corresponds to the ID3 2.0 tag TALB." version="" playername="" helpurl="flash.media:ID3Info:album"/>
                <string name="artist" object="[flash.media.ID3Info]" text=".artist" tiptext="The name of the artist; corresponds to the ID3 2.0 tag TPE1." version="" playername="" helpurl="flash.media:ID3Info:artist"/>
                <string name="comment" object="[flash.media.ID3Info]" text=".comment" tiptext="A comment about the recording; corresponds to the ID3 2.0 tag COMM." version="" playername="" helpurl="flash.media:ID3Info:comment"/>
                <string name="genre" object="[flash.media.ID3Info]" text=".genre" tiptext="The genre of the song; corresponds to the ID3 2.0 tag TCON." version="" playername="" helpurl="flash.media:ID3Info:genre"/>
                <string name="songName" object="[flash.media.ID3Info]" text=".songName" tiptext="The name of the song; corresponds to the ID3 2.0 tag TIT2." version="" playername="" helpurl="flash.media:ID3Info:songName"/>
                <string name="track" object="[flash.media.ID3Info]" text=".track" tiptext="The track number; corresponds to the ID3 2.0 tag TRCK." version="" playername="" helpurl="flash.media:ID3Info:track"/>
                <string name="year" object="[flash.media.ID3Info]" text=".year" tiptext="The year of the recording; corresponds to the ID3 2.0 tag TYER." version="" playername="" helpurl="flash.media:ID3Info:year"/>
            </folder>
        </folder>
        <folder name="MediaPromise" id="[flash.media.MediaPromise]" sort="true" index="true" asAncestors="flash.events:EventDispatcher,Object" tiptext="The MediaPromise class represents the promise to deliver a media object." helpurl="flash.media:MediaPromise">
            <folder name="Methods" id="Methods" tiptext="Methods for class MediaPromise" helpurl="flash.media:MediaPromise">
                <string name="close" object="[flash.media.MediaPromise]" text=".close(%%):void" tiptext="Closes the data source." version="2.5" playername="AIR" helpurl="flash.media:MediaPromise:close"/>
                <string name="open" object="[flash.media.MediaPromise]" text=".open(%%):flash.utils:IDataInput" tiptext="Opens the underlying data source and returns the IDataInput instance allowing you to read it." version="2.5" playername="AIR" helpurl="flash.media:MediaPromise:open"/>
                <string name="reportError" object="[flash.media.MediaPromise]" text=".reportError(%e:flash.events:ErrorEvent%):void" tiptext="Used by the runtime to report errors." version="2.5" playername="AIR" helpurl="flash.media:MediaPromise:reportError"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class MediaPromise" helpurl="flash.media:MediaPromise">
                <string name="file" object="[flash.media.MediaPromise]" text=".file" tiptext="The File instance representing the media object, if one exists." version="" playername="AIR" helpurl="flash.media:MediaPromise:file:get"/>
                <string name="isAsync" object="[flash.media.MediaPromise]" text=".isAsync" tiptext="Reports whether the underlying data source is asynchronous or synchronous." version="" playername="AIR" helpurl="flash.media:MediaPromise:isAsync:get"/>
                <string name="mediaType" object="[flash.media.MediaPromise]" text=".mediaType" tiptext="The general type of media, either image or video." version="" playername="AIR" helpurl="flash.media:MediaPromise:mediaType:get"/>
                <string name="relativePath" object="[flash.media.MediaPromise]" text=".relativePath" tiptext="The file name of the media object, if one exists." version="" playername="AIR" helpurl="flash.media:MediaPromise:relativePath:get"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class MediaPromise" helpurl="flash.media:MediaPromise">
                <string name="complete" object="[flash.media.MediaPromise]" text=".addEventListener(%type:String=Event.COMPLETE{Event.COMPLETE,ProgressEvent.PROGRESS,IOErrorEvent.IOERROR,Event.CLOSE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="A MediaPromise object dispatches a complete event when all data has been read." version="" playername="AIR" helpurl="flash.media:MediaPromise_flash.events.Event.COMPLETE_complete"/>
                <string name="progress" object="[flash.media.MediaPromise]" text=".addEventListener(%type:String=ProgressEvent.PROGRESS{Event.COMPLETE,ProgressEvent.PROGRESS,IOErrorEvent.IOERROR,Event.CLOSE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="A MediaPromise object dispatches progress events as the data becomes available." version="" playername="AIR" helpurl="flash.media:MediaPromise_flash.events.ProgressEvent.PROGRESS_progress"/>
                <string name="ioError" object="[flash.media.MediaPromise]" text=".addEventListener(%type:String=IOErrorEvent.IOERROR{Event.COMPLETE,ProgressEvent.PROGRESS,IOErrorEvent.IOERROR,Event.CLOSE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="A MediaPromise object dispatches an ioError event when an error is encountered while reading the underlying data stream." version="" playername="AIR" helpurl="flash.media:MediaPromise__ioError"/>
                <string name="close" object="[flash.media.MediaPromise]" text=".addEventListener(%type:String=Event.CLOSE{Event.COMPLETE,ProgressEvent.PROGRESS,IOErrorEvent.IOERROR,Event.CLOSE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="A MediaPromise object dispatches a close event when the underlying data stream has closed." version="" playername="AIR" helpurl="flash.media:MediaPromise_flash.events.Event.CLOSE_close"/>
            </folder>
        </folder>
        <folder name="MediaType" id="[flash.media.MediaType]" sort="true" index="true" asAncestors="Object" tiptext="The MediaType class enumerates the general types of media that can be returned by a camera." helpurl="flash.media:MediaType">
            <folder name="Properties" id="Properties" tiptext="Properties for class MediaType" helpurl="flash.media:MediaType">
                <string name="IMAGE" object="[flash.media.MediaType]" text="MediaType.IMAGE" constant="true" tiptext="A single image." version="" playername="AIR" helpurl="flash.media:MediaType:IMAGE"/>
                <string name="VIDEO" object="[flash.media.MediaType]" text="MediaType.VIDEO" constant="true" tiptext="A video." version="" playername="AIR" helpurl="flash.media:MediaType:VIDEO"/>
            </folder>
        </folder>
        <folder name="Microphone" id="[flash.media.Microphone]" sort="true" index="true" asAncestors="flash.events:EventDispatcher,Object" tiptext="Use the Microphone class to monitor or capture audio from a microphone." helpurl="flash.media:Microphone">
            <folder name="Methods" id="Methods" tiptext="Methods for class Microphone" helpurl="flash.media:Microphone">
                <string name="getMicrophone" object="[flash.media.Microphone]" text="Microphone.getMicrophone(%[index:int=-1]%):flash.media:Microphone" static="true" tiptext="Returns a reference to a Microphone object for capturing audio." version="9" playername="" helpurl="flash.media:Microphone:getMicrophone"/>
                <string name="setLoopBack" object="[flash.media.Microphone]" text=".setLoopBack(%[state:Boolean=true]%):void" tiptext="Routes audio captured by a microphone to the local speakers." version="9" playername="" helpurl="flash.media:Microphone:setLoopBack"/>
                <string name="setSilenceLevel" object="[flash.media.Microphone]" text=".setSilenceLevel(%silenceLevel:Number[,timeout:int=-1]%):void" tiptext="Sets the minimum input level that should be considered sound and (optionally) the amount of silent time signifying that silence has actually begun." version="9" playername="" helpurl="flash.media:Microphone:setSilenceLevel"/>
                <string name="setUseEchoSuppression" object="[flash.media.Microphone]" text=".setUseEchoSuppression(%useEchoSuppression:Boolean%):void" tiptext="Specifies whether to use the echo suppression feature of the audio codec." version="9" playername="" helpurl="flash.media:Microphone:setUseEchoSuppression"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class Microphone" helpurl="flash.media:Microphone">
                <string name="activityLevel" object="[flash.media.Microphone]" text=".activityLevel" tiptext="The amount of sound the microphone is detecting." version="" playername="" helpurl="flash.media:Microphone:activityLevel:get"/>
                <string name="codec" object="[flash.media.Microphone]" text=".codec" tiptext="The codec to use for compressing audio." version="" playername="" helpurl="flash.media:Microphone:codec:get"/>
                <string name="enableVAD" object="[flash.media.Microphone]" text=".enableVAD" tiptext="Enable Speex voice activity detection." version="" playername="" helpurl="flash.media:Microphone:enableVAD:get"/>
                <string name="encodeQuality" object="[flash.media.Microphone]" text=".encodeQuality" tiptext="The encoded speech quality when using the Speex codec." version="" playername="" helpurl="flash.media:Microphone:encodeQuality:get"/>
                <string name="framesPerPacket" object="[flash.media.Microphone]" text=".framesPerPacket" tiptext="Number of Speex speech frames transmitted in a packet (message)." version="" playername="" helpurl="flash.media:Microphone:framesPerPacket:get"/>
                <string name="gain" object="[flash.media.Microphone]" text=".gain" tiptext="The amount by which the microphone boosts the signal." version="" playername="" helpurl="flash.media:Microphone:gain:get"/>
                <string name="index" object="[flash.media.Microphone]" text=".index" tiptext="The index of the microphone, as reflected in the array returned by Microphone.names." version="" playername="" helpurl="flash.media:Microphone:index:get"/>
                <string name="isSupported" object="[flash.media.Microphone]" text=".isSupported" tiptext="The isSupported property is set to true if the Microphone class is supported on the current platform, otherwise it is set to false." version="" playername="" helpurl="flash.media:Microphone:isSupported:get"/>
                <string name="muted" object="[flash.media.Microphone]" text=".muted" tiptext="Specifies whether the user has denied access to the microphone (true) or allowed access (false)." version="" playername="" helpurl="flash.media:Microphone:muted:get"/>
                <string name="name" object="[flash.media.Microphone]" text=".name" tiptext="The name of the current sound capture device, as returned by the sound capture hardware." version="" playername="" helpurl="flash.media:Microphone:name:get"/>
                <string name="names" object="[flash.media.Microphone]" text=".names" tiptext="An array of strings containing the names of all available sound capture devices." version="" playername="" helpurl="flash.media:Microphone:names:get"/>
                <string name="noiseSuppressionLevel" object="[flash.media.Microphone]" text=".noiseSuppressionLevel" tiptext="Maximum attenuation of the noise in dB (negative number) used for Speex encoder." version="" playername="" helpurl="flash.media:Microphone:noiseSuppressionLevel:get"/>
                <string name="rate" object="[flash.media.Microphone]" text=".rate" tiptext="The rate at which the microphone is capturing sound, in kHz." version="" playername="" helpurl="flash.media:Microphone:rate:get"/>
                <string name="silenceLevel" object="[flash.media.Microphone]" text=".silenceLevel" tiptext="The amount of sound required to activate the microphone and dispatch the activity event." version="" playername="" helpurl="flash.media:Microphone:silenceLevel:get"/>
                <string name="silenceTimeout" object="[flash.media.Microphone]" text=".silenceTimeout" tiptext="The number of milliseconds between the time the microphone stops detecting sound and the time the activity event is dispatched." version="" playername="" helpurl="flash.media:Microphone:silenceTimeout:get"/>
                <string name="soundTransform" object="[flash.media.Microphone]" text=".soundTransform" tiptext="Controls the sound of this microphone object when it is in loopback mode." version="" playername="" helpurl="flash.media:Microphone:soundTransform:get"/>
                <string name="useEchoSuppression" object="[flash.media.Microphone]" text=".useEchoSuppression" tiptext="Set to true if echo suppression is enabled; false otherwise." version="" playername="" helpurl="flash.media:Microphone:useEchoSuppression:get"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class Microphone" helpurl="flash.media:Microphone">
                <string name="status" object="[flash.media.Microphone]" text=".addEventListener(%type:String=StatusEvent.STATUS{StatusEvent.STATUS,SampleDataEvent.SAMPLE_DATA,ActivityEvent.ACTIVITY},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a microphone reports its status." version="" playername="" helpurl="flash.media:Microphone_flash.events.StatusEvent.STATUS_status"/>
                <string name="sampleData" object="[flash.media.Microphone]" text=".addEventListener(%type:String=SampleDataEvent.SAMPLE_DATA{StatusEvent.STATUS,SampleDataEvent.SAMPLE_DATA,ActivityEvent.ACTIVITY},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the microphone has sound data in the buffer." version="" playername="" helpurl="flash.media:Microphone_flash.events.SampleDataEvent.SAMPLE_DATA_sampleData"/>
                <string name="activity" object="[flash.media.Microphone]" text=".addEventListener(%type:String=ActivityEvent.ACTIVITY{StatusEvent.STATUS,SampleDataEvent.SAMPLE_DATA,ActivityEvent.ACTIVITY},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a microphone starts or stops recording due to detected silence." version="" playername="" helpurl="flash.media:Microphone_flash.events.ActivityEvent.ACTIVITY_activity"/>
            </folder>
        </folder>
        <folder name="Methods" id="Methods" tiptext="Methods for package flash.media" helpurl="flash.media">
            <string name="scanHardware" text="scanHardware(%%):void" tiptext="Forces a rescan of the microphones and cameras on the system." version="1.0" playername="" helpurl="flash.media:scanHardware"/>
        </folder>
        <folder name="Sound" id="[flash.media.Sound]" sort="true" index="true" asAncestors="flash.events:EventDispatcher,Object" tiptext="The Sound class lets you work with sound in an application." helpurl="flash.media:Sound">
            <folder name="Methods" id="Methods" tiptext="Methods for class Sound" helpurl="flash.media:Sound">
                <string name="Sound" object="[flash.media.Sound]" text="new Sound(%[stream:flash.net:URLRequest=null,context:flash.media:SoundLoaderContext=null]%)" constructor="true" tiptext="Creates a new Sound object." version="4" playername="" helpurl="flash.media:Sound:Sound"/>
                <string name="close" object="[flash.media.Sound]" text=".close(%%):void" tiptext="Closes the stream, causing any download of data to cease." version="4" playername="" helpurl="flash.media:Sound:close"/>
                <string name="extract" object="[flash.media.Sound]" text=".extract(%target:flash.utils:ByteArray,length:Number[,startPosition:Number=-1]%):Number" tiptext="Extracts raw sound data from a Sound object." version="1.5" playername="" helpurl="flash.media:Sound:extract"/>
                <string name="load" object="[flash.media.Sound]" text=".load(%stream:flash.net:URLRequest[,context:flash.media:SoundLoaderContext=null]%):void" tiptext="Initiates loading of an external MP3 file from the specified URL." version="4" playername="" helpurl="flash.media:Sound:load"/>
                <string name="play" object="[flash.media.Sound]" text=".play(%[startTime:Number=0,loops:int=0,sndTransform:flash.media:SoundTransform=null]%):flash.media:SoundChannel" tiptext="Generates a new SoundChannel object to play back the sound." version="4" playername="" helpurl="flash.media:Sound:play"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class Sound" helpurl="flash.media:Sound">
                <string name="bytesLoaded" object="[flash.media.Sound]" text=".bytesLoaded" tiptext="Returns the currently available number of bytes in this sound object." version="" playername="" helpurl="flash.media:Sound:bytesLoaded:get"/>
                <string name="bytesTotal" object="[flash.media.Sound]" text=".bytesTotal" tiptext="Returns the total number of bytes in this sound object." version="" playername="" helpurl="flash.media:Sound:bytesTotal:get"/>
                <string name="id3" object="[flash.media.Sound]" text=".id3" tiptext="Provides access to the metadata that is part of an MP3 file." version="" playername="" helpurl="flash.media:Sound:id3:get"/>
                <string name="isBuffering" object="[flash.media.Sound]" text=".isBuffering" tiptext="Returns the buffering state of external MP3 files." version="" playername="" helpurl="flash.media:Sound:isBuffering:get"/>
                <string name="isURLInaccessible" object="[flash.media.Sound]" text=".isURLInaccessible" tiptext="Indicates if the Sound.url property has been truncated." version="" playername="" helpurl="flash.media:Sound:isURLInaccessible:get"/>
                <string name="length" object="[flash.media.Sound]" text=".length" tiptext="The length of the current sound in milliseconds." version="" playername="" helpurl="flash.media:Sound:length:get"/>
                <string name="url" object="[flash.media.Sound]" text=".url" tiptext="The URL from which this sound was loaded." version="" playername="" helpurl="flash.media:Sound:url:get"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class Sound" helpurl="flash.media:Sound">
                <string name="progress" object="[flash.media.Sound]" text=".addEventListener(%type:String=ProgressEvent.PROGRESS{ProgressEvent.PROGRESS,Event.OPEN,IOErrorEvent.IO_ERROR,Event.ID3,Event.COMPLETE,SampleDataEvent.SAMPLE_DATA},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when data is received as a load operation progresses." version="" playername="" helpurl="flash.media:Sound_flash.events.ProgressEvent.PROGRESS_progress"/>
                <string name="open" object="[flash.media.Sound]" text=".addEventListener(%type:String=Event.OPEN{ProgressEvent.PROGRESS,Event.OPEN,IOErrorEvent.IO_ERROR,Event.ID3,Event.COMPLETE,SampleDataEvent.SAMPLE_DATA},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a load operation starts." version="" playername="" helpurl="flash.media:Sound_flash.events.Event.OPEN_open"/>
                <string name="ioError" object="[flash.media.Sound]" text=".addEventListener(%type:String=IOErrorEvent.IO_ERROR{ProgressEvent.PROGRESS,Event.OPEN,IOErrorEvent.IO_ERROR,Event.ID3,Event.COMPLETE,SampleDataEvent.SAMPLE_DATA},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when an input/output error occurs that causes a load operation to fail." version="" playername="" helpurl="flash.media:Sound_flash.events.IOErrorEvent.IO_ERROR_ioError"/>
                <string name="id3" object="[flash.media.Sound]" text=".addEventListener(%type:String=Event.ID3{ProgressEvent.PROGRESS,Event.OPEN,IOErrorEvent.IO_ERROR,Event.ID3,Event.COMPLETE,SampleDataEvent.SAMPLE_DATA},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched by a Sound object when ID3 data is available for an MP3 sound." version="" playername="" helpurl="flash.media:Sound_flash.events.Event.ID3_id3"/>
                <string name="complete" object="[flash.media.Sound]" text=".addEventListener(%type:String=Event.COMPLETE{ProgressEvent.PROGRESS,Event.OPEN,IOErrorEvent.IO_ERROR,Event.ID3,Event.COMPLETE,SampleDataEvent.SAMPLE_DATA},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when data has loaded successfully." version="" playername="" helpurl="flash.media:Sound_flash.events.Event.COMPLETE_complete"/>
                <string name="sampleData" object="[flash.media.Sound]" text=".addEventListener(%type:String=SampleDataEvent.SAMPLE_DATA{ProgressEvent.PROGRESS,Event.OPEN,IOErrorEvent.IO_ERROR,Event.ID3,Event.COMPLETE,SampleDataEvent.SAMPLE_DATA},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the runtime requests new audio data." version="" playername="" helpurl="flash.media:Sound_flash.events.SampleDataEvent.SAMPLE_DATA_sampleData"/>
            </folder>
        </folder>
        <folder name="SoundChannel" id="[flash.media.SoundChannel]" sort="true" index="true" asAncestors="flash.events:EventDispatcher,Object" tiptext="The SoundChannel class controls a sound in an application." helpurl="flash.media:SoundChannel">
            <folder name="Methods" id="Methods" tiptext="Methods for class SoundChannel" helpurl="flash.media:SoundChannel">
                <string name="stop" object="[flash.media.SoundChannel]" text=".stop(%%):void" tiptext="Stops the sound playing in the channel." version="4" playername="" helpurl="flash.media:SoundChannel:stop"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class SoundChannel" helpurl="flash.media:SoundChannel">
                <string name="leftPeak" object="[flash.media.SoundChannel]" text=".leftPeak" tiptext="The current amplitude (volume) of the left channel, from 0 (silent) to 1 (full amplitude)." version="" playername="" helpurl="flash.media:SoundChannel:leftPeak:get"/>
                <string name="position" object="[flash.media.SoundChannel]" text=".position" tiptext="When the sound is playing, the position property indicates in milliseconds the current point that is being played in the sound file." version="" playername="" helpurl="flash.media:SoundChannel:position:get"/>
                <string name="rightPeak" object="[flash.media.SoundChannel]" text=".rightPeak" tiptext="The current amplitude (volume) of the right channel, from 0 (silent) to 1 (full amplitude)." version="" playername="" helpurl="flash.media:SoundChannel:rightPeak:get"/>
                <string name="soundTransform" object="[flash.media.SoundChannel]" text=".soundTransform" tiptext="The SoundTransform object assigned to the sound channel." version="" playername="" helpurl="flash.media:SoundChannel:soundTransform:get"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class SoundChannel" helpurl="flash.media:SoundChannel">
                <string name="soundComplete" object="[flash.media.SoundChannel]" text=".addEventListener(%type:String=Event.SOUND_COMPLETE{Event.SOUND_COMPLETE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a sound has finished playing." version="" playername="" helpurl="flash.media:SoundChannel_flash.events.Event.SOUND_COMPLETE_soundComplete"/>
            </folder>
        </folder>
        <folder name="SoundCodec" id="[flash.media.SoundCodec]" sort="true" index="true" asAncestors="Object" tiptext="The SoundCodec class is an enumeration of constant values used in setting the codec propertyof the Microphone class." helpurl="flash.media:SoundCodec">
            <folder name="Properties" id="Properties" tiptext="Properties for class SoundCodec" helpurl="flash.media:SoundCodec">
                <string name="NELLYMOSER" object="[flash.media.SoundCodec]" text="SoundCodec.NELLYMOSER" constant="true" tiptext="Specifies that the Nellymoser codec be used for compressing audio." version="" playername="" helpurl="flash.media:SoundCodec:NELLYMOSER"/>
                <string name="SPEEX" object="[flash.media.SoundCodec]" text="SoundCodec.SPEEX" constant="true" tiptext="Specifies that the Speex codec be used for compressing audio." version="" playername="" helpurl="flash.media:SoundCodec:SPEEX"/>
            </folder>
        </folder>
        <folder name="SoundLoaderContext" id="[flash.media.SoundLoaderContext]" sort="true" index="true" asAncestors="Object" tiptext="The SoundLoaderContext class provides security checks for files that load sound." helpurl="flash.media:SoundLoaderContext">
            <folder name="Methods" id="Methods" tiptext="Methods for class SoundLoaderContext" helpurl="flash.media:SoundLoaderContext">
                <string name="SoundLoaderContext" object="[flash.media.SoundLoaderContext]" text="new SoundLoaderContext(%[bufferTime:Number=1000,checkPolicyFile:Boolean=false]%)" constructor="true" tiptext="Creates a new sound loader context object." version="4" playername="" helpurl="flash.media:SoundLoaderContext:SoundLoaderContext"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class SoundLoaderContext" helpurl="flash.media:SoundLoaderContext">
                <string name="bufferTime" object="[flash.media.SoundLoaderContext]" text=".bufferTime" tiptext="The number of milliseconds to preload a streaming sound into a buffer before the sound starts to stream." version="" playername="" helpurl="flash.media:SoundLoaderContext:bufferTime"/>
                <string name="checkPolicyFile" object="[flash.media.SoundLoaderContext]" text=".checkPolicyFile" tiptext="Specifies whether the application should try to download a URL policy file from the loaded sound&apos;s server before beginning to load the sound." version="" playername="" helpurl="flash.media:SoundLoaderContext:checkPolicyFile"/>
            </folder>
        </folder>
        <folder name="SoundMixer" id="[flash.media.SoundMixer]" sort="true" index="true" asAncestors="Object" tiptext="The SoundMixer class contains static properties and methods for global sound controlin the application." helpurl="flash.media:SoundMixer">
            <folder name="Methods" id="Methods" tiptext="Methods for class SoundMixer" helpurl="flash.media:SoundMixer">
                <string name="areSoundsInaccessible" object="[flash.media.SoundMixer]" text="SoundMixer.areSoundsInaccessible(%%):Boolean" static="true" tiptext="Determines whether any sounds are not accessible due to security restrictions." version="9" playername="" helpurl="flash.media:SoundMixer:areSoundsInaccessible"/>
                <string name="computeSpectrum" object="[flash.media.SoundMixer]" text="SoundMixer.computeSpectrum(%outputArray:flash.utils:ByteArray[,FFTMode:Boolean=false,stretchFactor:int=0]%):void" static="true" tiptext="Takes a snapshot of the current sound wave and places it into the specified ByteArray object." version="9" playername="" helpurl="flash.media:SoundMixer:computeSpectrum"/>
                <string name="stopAll" object="[flash.media.SoundMixer]" text="SoundMixer.stopAll(%%):void" static="true" tiptext="Stops all sounds currently playing." version="4" playername="" helpurl="flash.media:SoundMixer:stopAll"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class SoundMixer" helpurl="flash.media:SoundMixer">
                <string name="bufferTime" object="[flash.media.SoundMixer]" text=".bufferTime" tiptext="The number of seconds to preload an embedded streaming sound into a buffer before it starts to stream." version="" playername="" helpurl="flash.media:SoundMixer:bufferTime:get"/>
                <string name="soundTransform" object="[flash.media.SoundMixer]" text=".soundTransform" tiptext="The SoundTransform object that controls global sound properties." version="" playername="" helpurl="flash.media:SoundMixer:soundTransform:get"/>
            </folder>
        </folder>
        <folder name="SoundTransform" id="[flash.media.SoundTransform]" sort="true" index="true" asAncestors="Object" tiptext="The SoundTransform class contains properties for volume and panning." helpurl="flash.media:SoundTransform">
            <folder name="Methods" id="Methods" tiptext="Methods for class SoundTransform" helpurl="flash.media:SoundTransform">
                <string name="SoundTransform" object="[flash.media.SoundTransform]" text="new SoundTransform(%[vol:Number=1,panning:Number=0]%)" constructor="true" tiptext="Creates a SoundTransform object." version="4" playername="" helpurl="flash.media:SoundTransform:SoundTransform"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class SoundTransform" helpurl="flash.media:SoundTransform">
                <string name="leftToLeft" object="[flash.media.SoundTransform]" text=".leftToLeft" tiptext="A value, from 0 (none) to 1 (all), specifying how much of the left input is played in the left speaker." version="" playername="" helpurl="flash.media:SoundTransform:leftToLeft:get"/>
                <string name="leftToRight" object="[flash.media.SoundTransform]" text=".leftToRight" tiptext="A value, from 0 (none) to 1 (all), specifying how much of the left input is played in the right speaker." version="" playername="" helpurl="flash.media:SoundTransform:leftToRight:get"/>
                <string name="pan" object="[flash.media.SoundTransform]" text=".pan" tiptext="The left-to-right panning of the sound, ranging from -1 (full pan left) to 1 (full pan right)." version="" playername="" helpurl="flash.media:SoundTransform:pan:get"/>
                <string name="rightToLeft" object="[flash.media.SoundTransform]" text=".rightToLeft" tiptext="A value, from 0 (none) to 1 (all), specifying how much of the right input is played in the left speaker." version="" playername="" helpurl="flash.media:SoundTransform:rightToLeft:get"/>
                <string name="rightToRight" object="[flash.media.SoundTransform]" text=".rightToRight" tiptext="A value, from 0 (none) to 1 (all), specifying how much of the right input is played in the right speaker." version="" playername="" helpurl="flash.media:SoundTransform:rightToRight:get"/>
                <string name="volume" object="[flash.media.SoundTransform]" text=".volume" tiptext="The volume, ranging from 0 (silent) to 1 (full volume)." version="" playername="" helpurl="flash.media:SoundTransform:volume:get"/>
            </folder>
        </folder>
        <folder name="StageVideo" id="[flash.media.StageVideo]" sort="true" index="true" asAncestors="flash.events:EventDispatcher,Object" tiptext="The StageVideo object uses the device&apos;s hardware acceleration capabilities, if available, to display live or recorded video in an application." helpurl="flash.media:StageVideo">
            <folder name="Methods" id="Methods" tiptext="Methods for class StageVideo" helpurl="flash.media:StageVideo">
                <string name="attachNetStream" object="[flash.media.StageVideo]" text=".attachNetStream(%netStream:flash.net:NetStream%):void" tiptext="Specifies a video stream to be displayed within the boundaries of the StageVideo object in the application." version="10.2" playername="" helpurl="flash.media:StageVideo:attachNetStream"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class StageVideo" helpurl="flash.media:StageVideo">
                <string name="colorSpaces" object="[flash.media.StageVideo]" text=".colorSpaces" tiptext="Returns the names of available color spaces for this video surface." version="" playername="" helpurl="flash.media:StageVideo:colorSpaces:get"/>
                <string name="depth" object="[flash.media.StageVideo]" text=".depth" tiptext="" version="" playername="" helpurl="flash.media:StageVideo:depth:get"/>
                <string name="pan" object="[flash.media.StageVideo]" text=".pan" tiptext="" version="" playername="" helpurl="flash.media:StageVideo:pan:get"/>
                <string name="videoHeight" object="[flash.media.StageVideo]" text=".videoHeight" tiptext="An integer specifying the height of the video stream, in pixels." version="" playername="" helpurl="flash.media:StageVideo:videoHeight:get"/>
                <string name="videoWidth" object="[flash.media.StageVideo]" text=".videoWidth" tiptext="An integer specifying the width of the video stream, in pixels." version="" playername="" helpurl="flash.media:StageVideo:videoWidth:get"/>
                <string name="viewPort" object="[flash.media.StageVideo]" text=".viewPort" tiptext="The absolute position and size of the video surface in pixels." version="" playername="" helpurl="flash.media:StageVideo:viewPort:get"/>
                <string name="zoom" object="[flash.media.StageVideo]" text=".zoom" tiptext="" version="" playername="" helpurl="flash.media:StageVideo:zoom:get"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class StageVideo" helpurl="flash.media:StageVideo">
                <string name="renderState" object="[flash.media.StageVideo]" text=".addEventListener(%type:String=StageVideoEvent.RENDER_STATE{StageVideoEvent.RENDER_STATE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched by the StageVideo object when the render state of the StageVideo object changes." version="" playername="" helpurl="flash.media:StageVideo_flash.events.StageVideoEvent.RENDER_STATE_renderState"/>
            </folder>
        </folder>
        <folder name="StageVideoAvailability" id="[flash.media.StageVideoAvailability]" sort="true" index="true" asAncestors="Object" tiptext="This class defines an enumeration that indicates whether stage video is supported on the current device." helpurl="flash.media:StageVideoAvailability">
            <folder name="Properties" id="Properties" tiptext="Properties for class StageVideoAvailability" helpurl="flash.media:StageVideoAvailability">
                <string name="AVAILABLE" object="[flash.media.StageVideoAvailability]" text="StageVideoAvailability.AVAILABLE" constant="true" tiptext="Stage video is supported on this device." version="" playername="" helpurl="flash.media:StageVideoAvailability:AVAILABLE"/>
                <string name="UNAVAILABLE" object="[flash.media.StageVideoAvailability]" text="StageVideoAvailability.UNAVAILABLE" constant="true" tiptext="Stage video is not supported on this device." version="" playername="" helpurl="flash.media:StageVideoAvailability:UNAVAILABLE"/>
            </folder>
        </folder>
        <folder name="StageWebView" id="[flash.media.StageWebView]" sort="true" index="true" asAncestors="flash.events:EventDispatcher,Object" tiptext="The StageWebView class displays HTML content in a stage view port." helpurl="flash.media:StageWebView">
            <folder name="Methods" id="Methods" tiptext="Methods for class StageWebView" helpurl="flash.media:StageWebView">
                <string name="StageWebView" object="[flash.media.StageWebView]" text="new StageWebView(%%)" constructor="true" tiptext="Creates a StageWebView object." version="2.5" playername="AIR" helpurl="flash.media:StageWebView:StageWebView"/>
                <string name="assignFocus" object="[flash.media.StageWebView]" text=".assignFocus(%[direction:String=none]%):void" tiptext="Assigns focus to the content within this StageWebView object." version="2.5" playername="AIR" helpurl="flash.media:StageWebView:assignFocus"/>
                <string name="dispose" object="[flash.media.StageWebView]" text=".dispose(%%):void" tiptext="Disposes of this StageWebView object." version="2.5" playername="AIR" helpurl="flash.media:StageWebView:dispose"/>
                <string name="drawViewPortToBitmapData" object="[flash.media.StageWebView]" text=".drawViewPortToBitmapData(%bitmap:flash.display:BitmapData%):void" tiptext="Draws the StageWebView&apos;s view port to a bitmap." version="2.6" playername="AIR" helpurl="flash.media:StageWebView:drawViewPortToBitmapData"/>
                <string name="historyBack" object="[flash.media.StageWebView]" text=".historyBack(%%):void" tiptext="Navigates to the previous page in the browsing history." version="2.5" playername="AIR" helpurl="flash.media:StageWebView:historyBack"/>
                <string name="historyForward" object="[flash.media.StageWebView]" text=".historyForward(%%):void" tiptext="Navigates to the next page in the browsing history." version="2.5" playername="AIR" helpurl="flash.media:StageWebView:historyForward"/>
                <string name="loadString" object="[flash.media.StageWebView]" text=".loadString(%text:String[,mimeType:String=text/html]%):void" tiptext="Loads and displays the specified HTML string." version="2.5" playername="AIR" helpurl="flash.media:StageWebView:loadString"/>
                <string name="loadURL" object="[flash.media.StageWebView]" text=".loadURL(%url:String%):void" tiptext="Loads the page at the specified URL." version="2.5" playername="AIR" helpurl="flash.media:StageWebView:loadURL"/>
                <string name="reload" object="[flash.media.StageWebView]" text=".reload(%%):void" tiptext="Reloads the current page." version="2.5" playername="AIR" helpurl="flash.media:StageWebView:reload"/>
                <string name="stop" object="[flash.media.StageWebView]" text=".stop(%%):void" tiptext="Halts the current load operation." version="2.5" playername="AIR" helpurl="flash.media:StageWebView:stop"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class StageWebView" helpurl="flash.media:StageWebView">
                <string name="isHistoryBackEnabled" object="[flash.media.StageWebView]" text=".isHistoryBackEnabled" tiptext="Reports whether there is a previous page in the browsing history." version="" playername="AIR" helpurl="flash.media:StageWebView:isHistoryBackEnabled:get"/>
                <string name="isHistoryForwardEnabled" object="[flash.media.StageWebView]" text=".isHistoryForwardEnabled" tiptext="Reports whether there is a next page in the browsing history." version="" playername="AIR" helpurl="flash.media:StageWebView:isHistoryForwardEnabled:get"/>
                <string name="isSupported" object="[flash.media.StageWebView]" text=".isSupported" tiptext="Reports whether the StageWebView class is supported on the current device." version="" playername="AIR" helpurl="flash.media:StageWebView:isSupported:get"/>
                <string name="location" object="[flash.media.StageWebView]" text=".location" tiptext="The URL of the current location." version="" playername="AIR" helpurl="flash.media:StageWebView:location:get"/>
                <string name="stage" object="[flash.media.StageWebView]" text=".stage" tiptext="The stage on which this StageWebView object is displayed." version="" playername="AIR" helpurl="flash.media:StageWebView:stage:get"/>
                <string name="title" object="[flash.media.StageWebView]" text=".title" tiptext="The HTML title value." version="" playername="AIR" helpurl="flash.media:StageWebView:title:get"/>
                <string name="viewPort" object="[flash.media.StageWebView]" text=".viewPort" tiptext="The area on the stage in which the StageWebView object is displayed." version="" playername="AIR" helpurl="flash.media:StageWebView:viewPort:get"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class StageWebView" helpurl="flash.media:StageWebView">
                <string name="focusOut" object="[flash.media.StageWebView]" text=".addEventListener(%type:String=FocusEvent.{FocusEvent.,FocusEvent.,ErrorEvent.,Event.COMPLETE,LocationChangeEvent.LOCATION_CHANGING,LocationChangeEvent.LOCATION_CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the StageWebView relinquishes focus." version="" playername="AIR" helpurl="flash.media:StageWebView__focusOut"/>
                <string name="focusIn" object="[flash.media.StageWebView]" text=".addEventListener(%type:String=FocusEvent.{FocusEvent.,FocusEvent.,ErrorEvent.,Event.COMPLETE,LocationChangeEvent.LOCATION_CHANGING,LocationChangeEvent.LOCATION_CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when this StageWebView object receives focus." version="" playername="AIR" helpurl="flash.media:StageWebView__focusIn"/>
                <string name="error" object="[flash.media.StageWebView]" text=".addEventListener(%type:String=ErrorEvent.{FocusEvent.,FocusEvent.,ErrorEvent.,Event.COMPLETE,LocationChangeEvent.LOCATION_CHANGING,LocationChangeEvent.LOCATION_CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Signals that an error has occurred." version="" playername="AIR" helpurl="flash.media:StageWebView__error"/>
                <string name="complete" object="[flash.media.StageWebView]" text=".addEventListener(%type:String=Event.COMPLETE{FocusEvent.,FocusEvent.,ErrorEvent.,Event.COMPLETE,LocationChangeEvent.LOCATION_CHANGING,LocationChangeEvent.LOCATION_CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Signals that the last load operation requested by loadString() or loadURL() method has completed." version="" playername="AIR" helpurl="flash.media:StageWebView_flash.events.Event.COMPLETE_complete"/>
                <string name="locationChanging" object="[flash.media.StageWebView]" text=".addEventListener(%type:String=LocationChangeEvent.LOCATION_CHANGING{FocusEvent.,FocusEvent.,ErrorEvent.,Event.COMPLETE,LocationChangeEvent.LOCATION_CHANGING,LocationChangeEvent.LOCATION_CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Signals that the location property of the StageWebView object is about to change." version="" playername="AIR" helpurl="flash.media:StageWebView__locationChanging"/>
                <string name="locationChange" object="[flash.media.StageWebView]" text=".addEventListener(%type:String=LocationChangeEvent.LOCATION_CHANGE{FocusEvent.,FocusEvent.,ErrorEvent.,Event.COMPLETE,LocationChangeEvent.LOCATION_CHANGING,LocationChangeEvent.LOCATION_CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Signals that the location property of the StageWebView object has changed." version="" playername="AIR" helpurl="flash.media:StageWebView__locationChange"/>
            </folder>
        </folder>
        <folder name="Video" id="[flash.media.Video]" sort="true" index="true" asAncestors="flash.display:DisplayObject,flash.events:EventDispatcher,Object" tiptext="The Video class displays live or recorded video in an application without embedding the video in your SWF file." helpurl="flash.media:Video">
            <folder name="Methods" id="Methods" tiptext="Methods for class Video" helpurl="flash.media:Video">
                <string name="Video" object="[flash.media.Video]" text="new Video(%[width:int=320,height:int=240]%)" constructor="true" tiptext="Creates a new Video instance." version="9" playername="" helpurl="flash.media:Video:Video"/>
                <string name="attachCamera" object="[flash.media.Video]" text=".attachCamera(%camera:flash.media:Camera%):void" tiptext="Specifies a video stream from a camera to be displayed within the boundaries of the Video object in the application." version="9" playername="" helpurl="flash.media:Video:attachCamera"/>
                <string name="attachNetStream" object="[flash.media.Video]" text=".attachNetStream(%netStream:flash.net:NetStream%):void" tiptext="Specifies a video stream to be displayed within the boundaries of the Video object in the application." version="4" playername="" helpurl="flash.media:Video:attachNetStream"/>
                <string name="clear" object="[flash.media.Video]" text=".clear(%%):void" tiptext="Clears the image currently displayed in the Video object (not the video stream)." version="4" playername="" helpurl="flash.media:Video:clear"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class Video" helpurl="flash.media:Video">
                <string name="deblocking" object="[flash.media.Video]" text=".deblocking" tiptext="Indicates the type of filter applied to decoded video as part of post-processing." version="" playername="" helpurl="flash.media:Video:deblocking:get"/>
                <string name="smoothing" object="[flash.media.Video]" text=".smoothing" tiptext="Specifies whether the video should be smoothed (interpolated) when it is scaled." version="" playername="" helpurl="flash.media:Video:smoothing:get"/>
                <string name="videoHeight" object="[flash.media.Video]" text=".videoHeight" tiptext="An integer specifying the height of the video stream, in pixels." version="" playername="" helpurl="flash.media:Video:videoHeight:get"/>
                <string name="videoWidth" object="[flash.media.Video]" text=".videoWidth" tiptext="An integer specifying the width of the video stream, in pixels." version="" playername="" helpurl="flash.media:Video:videoWidth:get"/>
            </folder>
        </folder>
        <folder name="VideoStatus" id="[flash.media.VideoStatus]" sort="true" index="true" asAncestors="Object" tiptext="This class defines an enumeration that indicates the level of video support on the device." helpurl="flash.media:VideoStatus">
            <folder name="Properties" id="Properties" tiptext="Properties for class VideoStatus" helpurl="flash.media:VideoStatus">
                <string name="ACCELERATED" object="[flash.media.VideoStatus]" text="VideoStatus.ACCELERATED" constant="true" tiptext="Device supports hardware-accelerated video decoding." version="" playername="" helpurl="flash.media:VideoStatus:ACCELERATED"/>
                <string name="SOFTWARE" object="[flash.media.VideoStatus]" text="VideoStatus.SOFTWARE" constant="true" tiptext="Device supports software video decoding." version="" playername="" helpurl="flash.media:VideoStatus:SOFTWARE"/>
                <string name="UNAVAILABLE" object="[flash.media.VideoStatus]" text="VideoStatus.UNAVAILABLE" constant="true" tiptext="Video is not supported." version="" playername="" helpurl="flash.media:VideoStatus:UNAVAILABLE"/>
            </folder>
        </folder>
    </folder>
        <folder name="flash.net" id="flash.net" sort="true" tiptext="Classes for package flash.net" helpurl="flash.net">
        <folder name="DatagramSocket" id="[flash.net.DatagramSocket]" sort="true" index="true" asAncestors="flash.events:EventDispatcher,Object" tiptext="The DatagramSocket class enables code to send and receive Universal Datagram Protocol (UDP) packets." helpurl="flash.net:DatagramSocket">
            <folder name="Methods" id="Methods" tiptext="Methods for class DatagramSocket" helpurl="flash.net:DatagramSocket">
                <string name="DatagramSocket" object="[flash.net.DatagramSocket]" text="new DatagramSocket(%%)" constructor="true" tiptext="Creates a DatagramSocket object." version="2" playername="AIR" helpurl="flash.net:DatagramSocket:DatagramSocket"/>
                <string name="bind" object="[flash.net.DatagramSocket]" text=".bind(%[localPort:int=0,localAddress:String=0.0.0.0]%):void" tiptext="Binds this socket to the specified local address and port." version="2" playername="AIR" helpurl="flash.net:DatagramSocket:bind"/>
                <string name="close" object="[flash.net.DatagramSocket]" text=".close(%%):void" tiptext="Closes the socket." version="2" playername="AIR" helpurl="flash.net:DatagramSocket:close"/>
                <string name="connect" object="[flash.net.DatagramSocket]" text=".connect(%remoteAddress:String,remotePort:int%):void" tiptext="Connects the socket to a specified remote address and port." version="2" playername="AIR" helpurl="flash.net:DatagramSocket:connect"/>
                <string name="receive" object="[flash.net.DatagramSocket]" text=".receive(%%):void" tiptext="Enables this DatagramSocket object to receive incoming packets on the bound IP address and port." version="2" playername="AIR" helpurl="flash.net:DatagramSocket:receive"/>
                <string name="send" object="[flash.net.DatagramSocket]" text=".send(%bytes:flash.utils:ByteArray[,offset:uint=0,length:uint=0,address:String=null,port:int=0]%):void" tiptext="Sends packet containing the bytes in the ByteArray using UDP." version="2" playername="AIR" helpurl="flash.net:DatagramSocket:send"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class DatagramSocket" helpurl="flash.net:DatagramSocket">
                <string name="bound" object="[flash.net.DatagramSocket]" text=".bound" tiptext="Indicates whether this socket object is currently bound to a local address and port." version="" playername="AIR" helpurl="flash.net:DatagramSocket:bound:get"/>
                <string name="connected" object="[flash.net.DatagramSocket]" text=".connected" tiptext="Indicates whether this socket object is currently connected to a remote address and port." version="" playername="AIR" helpurl="flash.net:DatagramSocket:connected:get"/>
                <string name="isSupported" object="[flash.net.DatagramSocket]" text=".isSupported" tiptext="Indicates whether or not DatagramSocket features are supported in the run-time environment." version="" playername="AIR" helpurl="flash.net:DatagramSocket:isSupported:get"/>
                <string name="localAddress" object="[flash.net.DatagramSocket]" text=".localAddress" tiptext="The IP address this socket is bound to on the local machine." version="" playername="AIR" helpurl="flash.net:DatagramSocket:localAddress:get"/>
                <string name="localPort" object="[flash.net.DatagramSocket]" text=".localPort" tiptext="The port this socket is bound to on the local machine." version="" playername="AIR" helpurl="flash.net:DatagramSocket:localPort:get"/>
                <string name="remoteAddress" object="[flash.net.DatagramSocket]" text=".remoteAddress" tiptext="The IP address of the remote machine to which this socket is connected." version="" playername="AIR" helpurl="flash.net:DatagramSocket:remoteAddress:get"/>
                <string name="remotePort" object="[flash.net.DatagramSocket]" text=".remotePort" tiptext="The port on the remote machine to which this socket is connected." version="" playername="AIR" helpurl="flash.net:DatagramSocket:remotePort:get"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class DatagramSocket" helpurl="flash.net:DatagramSocket">
                <string name="ioError" object="[flash.net.DatagramSocket]" text=".addEventListener(%type:String=IOErrorEvent.IOERROR{IOErrorEvent.IOERROR,DatagramSocketDataEvent.DATA,Event.CLOSE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when this socket receives an I/O error." version="" playername="AIR" helpurl="flash.net:DatagramSocket__ioError"/>
                <string name="data" object="[flash.net.DatagramSocket]" text=".addEventListener(%type:String=DatagramSocketDataEvent.DATA{IOErrorEvent.IOERROR,DatagramSocketDataEvent.DATA,Event.CLOSE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when this socket receives a packet of data." version="" playername="AIR" helpurl="flash.net:DatagramSocket_flash.events.DatagramSocketDataEvent.DATA_data"/>
                <string name="close" object="[flash.net.DatagramSocket]" text=".addEventListener(%type:String=Event.CLOSE{IOErrorEvent.IOERROR,DatagramSocketDataEvent.DATA,Event.CLOSE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the operating system closes this socket." version="" playername="AIR" helpurl="flash.net:DatagramSocket_flash.events.Event.CLOSE_close"/>
            </folder>
        </folder>
        <folder name="FileFilter" id="[flash.net.FileFilter]" sort="true" index="true" asAncestors="Object" tiptext="The FileFilter class is used to indicate what files on the user&apos;s system are shown in the file-browsing dialog box that is displayed when the FileReference.browse() method, the FileReferenceList.browse() method is called or a browse method of a File, FileReference, or FileReferenceList object is called." helpurl="flash.net:FileFilter">
            <folder name="Methods" id="Methods" tiptext="Methods for class FileFilter" helpurl="flash.net:FileFilter">
                <string name="FileFilter" object="[flash.net.FileFilter]" text="new FileFilter(%description:String,extension:String[,macType:String=null]%)" constructor="true" tiptext="Creates a new FileFilter instance." version="9" playername="" helpurl="flash.net:FileFilter:FileFilter"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class FileFilter" helpurl="flash.net:FileFilter">
                <string name="description" object="[flash.net.FileFilter]" text=".description" tiptext="The description string for the filter." version="" playername="" helpurl="flash.net:FileFilter:description:get"/>
                <string name="extension" object="[flash.net.FileFilter]" text=".extension" tiptext="A list of file extensions." version="" playername="" helpurl="flash.net:FileFilter:extension:get"/>
                <string name="macType" object="[flash.net.FileFilter]" text=".macType" tiptext="A list of Macintosh file types." version="" playername="" helpurl="flash.net:FileFilter:macType:get"/>
            </folder>
        </folder>
        <folder name="FileReference" id="[flash.net.FileReference]" sort="true" index="true" asAncestors="flash.events:EventDispatcher,Object" tiptext="The FileReference class provides a means to upload and download files between a user&apos;s computer and a server." helpurl="flash.net:FileReference">
            <folder name="Methods" id="Methods" tiptext="Methods for class FileReference" helpurl="flash.net:FileReference">
                <string name="FileReference" object="[flash.net.FileReference]" text="new FileReference(%%)" constructor="true" tiptext="Creates a new FileReference object." version="9" playername="" helpurl="flash.net:FileReference:FileReference"/>
                <string name="browse" object="[flash.net.FileReference]" text=".browse(%[typeFilter:Array=null]%):Boolean" tiptext="Displays a file-browsing dialog box that lets the user select a file to upload." version="9" playername="" helpurl="flash.net:FileReference:browse"/>
                <string name="cancel" object="[flash.net.FileReference]" text=".cancel(%%):void" tiptext="Cancels any ongoing upload or download." version="9" playername="" helpurl="flash.net:FileReference:cancel"/>
                <string name="download" object="[flash.net.FileReference]" text=".download(%request:flash.net:URLRequest[,defaultFileName:String=null]%):void" tiptext="Opens a dialog box that lets the user download a file from a remote server." version="9" playername="" helpurl="flash.net:FileReference:download"/>
                <string name="load" object="[flash.net.FileReference]" text=".load(%%):void" tiptext="Starts the load of a local file." version="1.5" playername="" helpurl="flash.net:FileReference:load"/>
                <string name="save" object="[flash.net.FileReference]" text=".save(%data:*[,defaultFileName:String=null]%):void" tiptext="Opens a dialog box that lets the user save a file to the local filesystem." version="1.5" playername="" helpurl="flash.net:FileReference:save"/>
                <string name="uploadUnencoded" object="[flash.net.FileReference]" text=".uploadUnencoded(%request:flash.net:URLRequest%):void" tiptext="Starts the upload of a file to a remote server without encoding." version="1.0" playername="AIR" helpurl="flash.net:FileReference:uploadUnencoded"/>
                <string name="upload" object="[flash.net.FileReference]" text=".upload(%request:flash.net:URLRequest[,uploadDataFieldName:String=Filedata,testUpload:Boolean=false]%):void" tiptext="Starts the upload of a file to a remote server." version="9" playername="" helpurl="flash.net:FileReference:upload"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class FileReference" helpurl="flash.net:FileReference">
                <string name="creationDate" object="[flash.net.FileReference]" text=".creationDate" tiptext="The creation date of the file on the local disk." version="" playername="" helpurl="flash.net:FileReference:creationDate:get"/>
                <string name="creator" object="[flash.net.FileReference]" text=".creator" tiptext="The Macintosh creator type of the file, which is only used in Mac OS versions prior to Mac OS X." version="" playername="" helpurl="flash.net:FileReference:creator:get"/>
                <string name="data" object="[flash.net.FileReference]" text=".data" tiptext="The ByteArray object representing the data from the loaded file after a successful call to the load() method." version="" playername="" helpurl="flash.net:FileReference:data:get"/>
                <string name="extension" object="[flash.net.FileReference]" text=".extension" tiptext="The filename extension." version="" playername="AIR" helpurl="flash.net:FileReference:extension:get"/>
                <string name="modificationDate" object="[flash.net.FileReference]" text=".modificationDate" tiptext="The date that the file on the local disk was last modified." version="" playername="" helpurl="flash.net:FileReference:modificationDate:get"/>
                <string name="name" object="[flash.net.FileReference]" text=".name" tiptext="The name of the file on the local disk." version="" playername="" helpurl="flash.net:FileReference:name:get"/>
                <string name="size" object="[flash.net.FileReference]" text=".size" tiptext="The size of the file on the local disk in bytes." version="" playername="" helpurl="flash.net:FileReference:size:get"/>
                <string name="type" object="[flash.net.FileReference]" text=".type" tiptext="The file type." version="" playername="" helpurl="flash.net:FileReference:type:get"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class FileReference" helpurl="flash.net:FileReference">
                <string name="uploadCompleteData" object="[flash.net.FileReference]" text=".addEventListener(%type:String=DataEvent.UPLOAD_COMPLETE_DATA{DataEvent.UPLOAD_COMPLETE_DATA,HTTPStatusEvent.HTTP_RESPONSE_STATUS,HTTPStatusEvent.HTTP_STATUS,Event.SELECT,SecurityErrorEvent.SECURITY_ERROR,ProgressEvent.PROGRESS,Event.OPEN,IOErrorEvent.IO_ERROR,Event.COMPLETE,Event.CANCEL},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched after data is received from the server after a successful upload." version="" playername="" helpurl="flash.net:FileReference_flash.events.DataEvent.UPLOAD_COMPLETE_DATA_uploadCompleteData"/>
                <string name="httpResponseStatus" object="[flash.net.FileReference]" text=".addEventListener(%type:String=HTTPStatusEvent.HTTP_RESPONSE_STATUS{DataEvent.UPLOAD_COMPLETE_DATA,HTTPStatusEvent.HTTP_RESPONSE_STATUS,HTTPStatusEvent.HTTP_STATUS,Event.SELECT,SecurityErrorEvent.SECURITY_ERROR,ProgressEvent.PROGRESS,Event.OPEN,IOErrorEvent.IO_ERROR,Event.COMPLETE,Event.CANCEL},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched if a call to the upload() or uploadUnencoded() method attempts to access data over HTTP and Adobe AIR is able to detect and return the status code for the request." version="" playername="AIR" helpurl="flash.net:FileReference_flash.events.HTTPStatusEvent.HTTP_RESPONSE_STATUS_httpResponseStatus"/>
                <string name="httpStatus" object="[flash.net.FileReference]" text=".addEventListener(%type:String=HTTPStatusEvent.HTTP_STATUS{DataEvent.UPLOAD_COMPLETE_DATA,HTTPStatusEvent.HTTP_RESPONSE_STATUS,HTTPStatusEvent.HTTP_STATUS,Event.SELECT,SecurityErrorEvent.SECURITY_ERROR,ProgressEvent.PROGRESS,Event.OPEN,IOErrorEvent.IO_ERROR,Event.COMPLETE,Event.CANCEL},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when an upload fails and an HTTP status code is available to describe the failure." version="" playername="" helpurl="flash.net:FileReference_flash.events.HTTPStatusEvent.HTTP_STATUS_httpStatus"/>
                <string name="select" object="[flash.net.FileReference]" text=".addEventListener(%type:String=Event.SELECT{DataEvent.UPLOAD_COMPLETE_DATA,HTTPStatusEvent.HTTP_RESPONSE_STATUS,HTTPStatusEvent.HTTP_STATUS,Event.SELECT,SecurityErrorEvent.SECURITY_ERROR,ProgressEvent.PROGRESS,Event.OPEN,IOErrorEvent.IO_ERROR,Event.COMPLETE,Event.CANCEL},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user selects a file for upload or download from the file-browsing dialog box." version="" playername="" helpurl="flash.net:FileReference_flash.events.Event.SELECT_select"/>
                <string name="securityError" object="[flash.net.FileReference]" text=".addEventListener(%type:String=SecurityErrorEvent.SECURITY_ERROR{DataEvent.UPLOAD_COMPLETE_DATA,HTTPStatusEvent.HTTP_RESPONSE_STATUS,HTTPStatusEvent.HTTP_STATUS,Event.SELECT,SecurityErrorEvent.SECURITY_ERROR,ProgressEvent.PROGRESS,Event.OPEN,IOErrorEvent.IO_ERROR,Event.COMPLETE,Event.CANCEL},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a call to the FileReference.upload() or FileReference.download() method tries to upload a file to a server or get a file from a server that is outside the caller&apos;s security sandbox." version="" playername="" helpurl="flash.net:FileReference_flash.events.SecurityErrorEvent.SECURITY_ERROR_securityError"/>
                <string name="progress" object="[flash.net.FileReference]" text=".addEventListener(%type:String=ProgressEvent.PROGRESS{DataEvent.UPLOAD_COMPLETE_DATA,HTTPStatusEvent.HTTP_RESPONSE_STATUS,HTTPStatusEvent.HTTP_STATUS,Event.SELECT,SecurityErrorEvent.SECURITY_ERROR,ProgressEvent.PROGRESS,Event.OPEN,IOErrorEvent.IO_ERROR,Event.COMPLETE,Event.CANCEL},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched periodically during the file upload or download operation." version="" playername="" helpurl="flash.net:FileReference_flash.events.ProgressEvent.PROGRESS_progress"/>
                <string name="open" object="[flash.net.FileReference]" text=".addEventListener(%type:String=Event.OPEN{DataEvent.UPLOAD_COMPLETE_DATA,HTTPStatusEvent.HTTP_RESPONSE_STATUS,HTTPStatusEvent.HTTP_STATUS,Event.SELECT,SecurityErrorEvent.SECURITY_ERROR,ProgressEvent.PROGRESS,Event.OPEN,IOErrorEvent.IO_ERROR,Event.COMPLETE,Event.CANCEL},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when an upload or download operation starts." version="" playername="" helpurl="flash.net:FileReference_flash.events.Event.OPEN_open"/>
                <string name="ioError" object="[flash.net.FileReference]" text=".addEventListener(%type:String=IOErrorEvent.IO_ERROR{DataEvent.UPLOAD_COMPLETE_DATA,HTTPStatusEvent.HTTP_RESPONSE_STATUS,HTTPStatusEvent.HTTP_STATUS,Event.SELECT,SecurityErrorEvent.SECURITY_ERROR,ProgressEvent.PROGRESS,Event.OPEN,IOErrorEvent.IO_ERROR,Event.COMPLETE,Event.CANCEL},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the upload or download fails." version="" playername="" helpurl="flash.net:FileReference_flash.events.IOErrorEvent.IO_ERROR_ioError"/>
                <string name="complete" object="[flash.net.FileReference]" text=".addEventListener(%type:String=Event.COMPLETE{DataEvent.UPLOAD_COMPLETE_DATA,HTTPStatusEvent.HTTP_RESPONSE_STATUS,HTTPStatusEvent.HTTP_STATUS,Event.SELECT,SecurityErrorEvent.SECURITY_ERROR,ProgressEvent.PROGRESS,Event.OPEN,IOErrorEvent.IO_ERROR,Event.COMPLETE,Event.CANCEL},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when download is complete or when upload generates an HTTP status code of 200." version="" playername="" helpurl="flash.net:FileReference_flash.events.Event.COMPLETE_complete"/>
                <string name="cancel" object="[flash.net.FileReference]" text=".addEventListener(%type:String=Event.CANCEL{DataEvent.UPLOAD_COMPLETE_DATA,HTTPStatusEvent.HTTP_RESPONSE_STATUS,HTTPStatusEvent.HTTP_STATUS,Event.SELECT,SecurityErrorEvent.SECURITY_ERROR,ProgressEvent.PROGRESS,Event.OPEN,IOErrorEvent.IO_ERROR,Event.COMPLETE,Event.CANCEL},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a file upload or download is canceled through the file-browsing dialog box by the user." version="" playername="" helpurl="flash.net:FileReference_flash.events.Event.CANCEL_cancel"/>
            </folder>
        </folder>
        <folder name="FileReferenceList" id="[flash.net.FileReferenceList]" sort="true" index="true" asAncestors="flash.events:EventDispatcher,Object" tiptext="The FileReferenceList class provides a means to let users select one or more files for uploading." helpurl="flash.net:FileReferenceList">
            <folder name="Methods" id="Methods" tiptext="Methods for class FileReferenceList" helpurl="flash.net:FileReferenceList">
                <string name="FileReferenceList" object="[flash.net.FileReferenceList]" text="new FileReferenceList(%%)" constructor="true" tiptext="Creates a new FileReferenceList object." version="9" playername="" helpurl="flash.net:FileReferenceList:FileReferenceList"/>
                <string name="browse" object="[flash.net.FileReferenceList]" text=".browse(%[typeFilter:Array=null]%):Boolean" tiptext="Displays a file-browsing dialog box that lets the user select local files to upload." version="9" playername="" helpurl="flash.net:FileReferenceList:browse"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class FileReferenceList" helpurl="flash.net:FileReferenceList">
                <string name="fileList" object="[flash.net.FileReferenceList]" text=".fileList" tiptext="An array of FileReference objects." version="" playername="" helpurl="flash.net:FileReferenceList:fileList:get"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class FileReferenceList" helpurl="flash.net:FileReferenceList">
                <string name="select" object="[flash.net.FileReferenceList]" text=".addEventListener(%type:String=Event.SELECT{Event.SELECT,Event.CANCEL},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user selects one or more files to upload from the file-browsing dialog box." version="" playername="" helpurl="flash.net:FileReferenceList_flash.events.Event.SELECT_select"/>
                <string name="cancel" object="[flash.net.FileReferenceList]" text=".addEventListener(%type:String=Event.CANCEL{Event.SELECT,Event.CANCEL},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user dismisses the file-browsing dialog box." version="" playername="" helpurl="flash.net:FileReferenceList_flash.events.Event.CANCEL_cancel"/>
            </folder>
        </folder>
        <folder name="GroupSpecifier" id="[flash.net.GroupSpecifier]" sort="true" index="true" asAncestors="Object" tiptext="The GroupSpecifier class is used to construct the opaque groupspec strings that can be passed to NetStream and NetGroup constructors." helpurl="flash.net:GroupSpecifier">
            <folder name="Methods" id="Methods" tiptext="Methods for class GroupSpecifier" helpurl="flash.net:GroupSpecifier">
                <string name="GroupSpecifier" object="[flash.net.GroupSpecifier]" text="new GroupSpecifier(%name:String%)" constructor="true" tiptext="Creates a new GroupSpecifier object." version="2" playername="" helpurl="flash.net:GroupSpecifier:GroupSpecifier"/>
                <string name="addBootstrapPeer" object="[flash.net.GroupSpecifier]" text=".addBootstrapPeer(%peerID:String%):void" tiptext="Causes the associated NetStream or NetGroup to make an initial neighbor connection to the specified peerID." version="2" playername="" helpurl="flash.net:GroupSpecifier:addBootstrapPeer"/>
                <string name="addIPMulticastAddress" object="[flash.net.GroupSpecifier]" text=".addIPMulticastAddress(%address:String[,port:*=null,source:String=null]%):void" tiptext="Causes the associated NetStream or NetGroup to join the specified IP multicast group and listen to the specified UDP port." version="2" playername="" helpurl="flash.net:GroupSpecifier:addIPMulticastAddress"/>
                <string name="authorizations" object="[flash.net.GroupSpecifier]" text=".authorizations(%%):String" tiptext="Returns a string that represents passwords for IP multicast publishing and for posting." version="2" playername="" helpurl="flash.net:GroupSpecifier:authorizations"/>
                <string name="encodeBootstrapPeerIDSpec" object="[flash.net.GroupSpecifier]" text="GroupSpecifier.encodeBootstrapPeerIDSpec(%peerID:String%):String" static="true" tiptext="Encodes and returns a string that represents a bootstrap peerID." version="2" playername="" helpurl="flash.net:GroupSpecifier:encodeBootstrapPeerIDSpec"/>
                <string name="encodeIPMulticastAddressSpec" object="[flash.net.GroupSpecifier]" text="GroupSpecifier.encodeIPMulticastAddressSpec(%address:String[,port:*=null,source:String=null]%):String" static="true" tiptext="Encodes and returns a string that represents an IP multicast socket address." version="2" playername="" helpurl="flash.net:GroupSpecifier:encodeIPMulticastAddressSpec"/>
                <string name="encodePostingAuthorization" object="[flash.net.GroupSpecifier]" text="GroupSpecifier.encodePostingAuthorization(%password:String%):String" static="true" tiptext="Encodes and returns a string that represents a posting password." version="2" playername="" helpurl="flash.net:GroupSpecifier:encodePostingAuthorization"/>
                <string name="encodePublishAuthorization" object="[flash.net.GroupSpecifier]" text="GroupSpecifier.encodePublishAuthorization(%password:String%):String" static="true" tiptext="Encodes and returns a string that represents a multicast publishing password." version="2" playername="" helpurl="flash.net:GroupSpecifier:encodePublishAuthorization"/>
                <string name="groupspecWithAuthorizations" object="[flash.net.GroupSpecifier]" text=".groupspecWithAuthorizations(%%):String" tiptext="Returns the opaque groupspec string, including authorizations, that can be passed to NetStream and NetGroup constructors." version="2" playername="" helpurl="flash.net:GroupSpecifier:groupspecWithAuthorizations"/>
                <string name="groupspecWithoutAuthorizations" object="[flash.net.GroupSpecifier]" text=".groupspecWithoutAuthorizations(%%):String" tiptext="Returns the opaque groupspec string, without authorizations, that can be passed to NetStream and NetGroup constructors." version="2" playername="" helpurl="flash.net:GroupSpecifier:groupspecWithoutAuthorizations"/>
                <string name="makeUnique" object="[flash.net.GroupSpecifier]" text=".makeUnique(%%):void" tiptext="Adds a strong pseudorandom tag to the groupspec to make it unique." version="2" playername="" helpurl="flash.net:GroupSpecifier:makeUnique"/>
                <string name="setPostingPassword" object="[flash.net.GroupSpecifier]" text=".setPostingPassword(%[password:String=null,salt:String=null]%):void" tiptext="Specifies whether a password is required to post in the NetGroup." version="2" playername="" helpurl="flash.net:GroupSpecifier:setPostingPassword"/>
                <string name="setPublishPassword" object="[flash.net.GroupSpecifier]" text=".setPublishPassword(%[password:String=null,salt:String=null]%):void" tiptext="Specifies whether a password is required to publish a multicast stream in the NetStream." version="2" playername="" helpurl="flash.net:GroupSpecifier:setPublishPassword"/>
                <string name="toString" object="[flash.net.GroupSpecifier]" text=".toString(%%):String" tiptext="Identical to the groupspecWithAuthorizations() method." version="2" playername="" helpurl="flash.net:GroupSpecifier:toString"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class GroupSpecifier" helpurl="flash.net:GroupSpecifier">
                <string name="ipMulticastMemberUpdatesEnabled" object="[flash.net.GroupSpecifier]" text=".ipMulticastMemberUpdatesEnabled" tiptext="Specifies whether information about group membership can be exchanged on IP multicast sockets." version="" playername="" helpurl="flash.net:GroupSpecifier:ipMulticastMemberUpdatesEnabled:get"/>
                <string name="multicastEnabled" object="[flash.net.GroupSpecifier]" text=".multicastEnabled" tiptext="Specifies whether streaming is enabled for the NetGroup." version="" playername="" helpurl="flash.net:GroupSpecifier:multicastEnabled:get"/>
                <string name="objectReplicationEnabled" object="[flash.net.GroupSpecifier]" text=".objectReplicationEnabled" tiptext="Specifies whether object replication is enabled for the NetGroup." version="" playername="" helpurl="flash.net:GroupSpecifier:objectReplicationEnabled:get"/>
                <string name="peerToPeerDisabled" object="[flash.net.GroupSpecifier]" text=".peerToPeerDisabled" tiptext="Specifies whether peer-to-peer connections are disabled for the NetGroup or NetStream." version="" playername="" helpurl="flash.net:GroupSpecifier:peerToPeerDisabled:get"/>
                <string name="postingEnabled" object="[flash.net.GroupSpecifier]" text=".postingEnabled" tiptext="Specifies whether posting is enabled for the NetGroup." version="" playername="" helpurl="flash.net:GroupSpecifier:postingEnabled:get"/>
                <string name="routingEnabled" object="[flash.net.GroupSpecifier]" text=".routingEnabled" tiptext="Specifies whether directed routing methods are enabled for the NetGroup." version="" playername="" helpurl="flash.net:GroupSpecifier:routingEnabled:get"/>
                <string name="serverChannelEnabled" object="[flash.net.GroupSpecifier]" text=".serverChannelEnabled" tiptext="Specifies whether members of the NetGroup can open a channel to the server." version="" playername="" helpurl="flash.net:GroupSpecifier:serverChannelEnabled:get"/>
            </folder>
        </folder>
        <folder name="IDynamicPropertyOutput" id="[flash.net.IDynamicPropertyOutput]" sort="true" index="true" tiptext="This interface controls the serialization of dynamic properties of dynamic objects." helpurl="flash.net:IDynamicPropertyOutput">
            <folder name="Methods" id="Methods" tiptext="Methods for class IDynamicPropertyOutput" helpurl="flash.net:IDynamicPropertyOutput">
                <string name="writeDynamicProperty" object="[flash.net.IDynamicPropertyOutput]" text=".writeDynamicProperty(%name:String,value:*%):void" tiptext="Adds a dynamic property to the binary output of a serialized object." version="4" playername="" helpurl="flash.net:IDynamicPropertyOutput:writeDynamicProperty"/>
            </folder>
        </folder>
        <folder name="IDynamicPropertyWriter" id="[flash.net.IDynamicPropertyWriter]" sort="true" index="true" tiptext="This interface is used with the IDynamicPropertyOutput interface to control the serialization of dynamic properties of dynamic objects." helpurl="flash.net:IDynamicPropertyWriter">
            <folder name="Methods" id="Methods" tiptext="Methods for class IDynamicPropertyWriter" helpurl="flash.net:IDynamicPropertyWriter">
                <string name="writeDynamicProperties" object="[flash.net.IDynamicPropertyWriter]" text=".writeDynamicProperties(%obj:Object,output:flash.net:IDynamicPropertyOutput%):void" tiptext="Writes the name and value of an IDynamicPropertyOutput object to an object with dynamic properties." version="4" playername="" helpurl="flash.net:IDynamicPropertyWriter:writeDynamicProperties"/>
            </folder>
        </folder>
        <folder name="InterfaceAddress" id="[flash.net.InterfaceAddress]" sort="true" index="true" asAncestors="Object" tiptext="The InterfaceAddress class reports the properties of a network interface address." helpurl="flash.net:InterfaceAddress">
            <folder name="Properties" id="Properties" tiptext="Properties for class InterfaceAddress" helpurl="flash.net:InterfaceAddress">
                <string name="address" object="[flash.net.InterfaceAddress]" text=".address" tiptext="The Internet Protocol (IP) address." version="" playername="AIR" helpurl="flash.net:InterfaceAddress:address:get"/>
                <string name="broadcast" object="[flash.net.InterfaceAddress]" text=".broadcast" tiptext="The broadcast address of the local network segment." version="" playername="AIR" helpurl="flash.net:InterfaceAddress:broadcast:get"/>
                <string name="ipVersion" object="[flash.net.InterfaceAddress]" text=".ipVersion" tiptext="The IP address type (IPv4 or IPv6)." version="" playername="AIR" helpurl="flash.net:InterfaceAddress:ipVersion:get"/>
                <string name="prefixLength" object="[flash.net.InterfaceAddress]" text=".prefixLength" tiptext="The prefix length for this address." version="" playername="AIR" helpurl="flash.net:InterfaceAddress:prefixLength:get"/>
            </folder>
        </folder>
        <folder name="IPVersion" id="[flash.net.IPVersion]" sort="true" index="true" asAncestors="Object" tiptext="The IPVersion class defines constants representing the different families of IP addresses." helpurl="flash.net:IPVersion">
            <folder name="Properties" id="Properties" tiptext="Properties for class IPVersion" helpurl="flash.net:IPVersion">
                <string name="IPV4" object="[flash.net.IPVersion]" text="IPVersion.IPV4" constant="true" tiptext="An Internet Protocol version 4 (IPv4) address." version="" playername="AIR" helpurl="flash.net:IPVersion:IPV4"/>
                <string name="IPV6" object="[flash.net.IPVersion]" text="IPVersion.IPV6" constant="true" tiptext="An Internet Protocol version 6 (IPv6) address." version="" playername="AIR" helpurl="flash.net:IPVersion:IPV6"/>
            </folder>
        </folder>
        <folder name="LocalConnection" id="[flash.net.LocalConnection]" sort="true" index="true" asAncestors="flash.events:EventDispatcher,Object" tiptext="The LocalConnection class lets you create a LocalConnection object that can invoke a method in another LocalConnection object." helpurl="flash.net:LocalConnection">
            <folder name="Methods" id="Methods" tiptext="Methods for class LocalConnection" helpurl="flash.net:LocalConnection">
                <string name="LocalConnection" object="[flash.net.LocalConnection]" text="new LocalConnection(%%)" constructor="true" tiptext="Creates a LocalConnection object." version="4" playername="" helpurl="flash.net:LocalConnection:LocalConnection"/>
                <string name="allowDomain" object="[flash.net.LocalConnection]" text=".allowDomain(%domains:restParam%):void" tiptext="Specifies one or more domains that can send LocalConnection calls to this LocalConnection instance." version="4" playername="" helpurl="flash.net:LocalConnection:allowDomain"/>
                <string name="allowInsecureDomain" object="[flash.net.LocalConnection]" text=".allowInsecureDomain(%domains:restParam%):void" tiptext="Specifies one or more domains that can send LocalConnection calls to this LocalConnection object." version="4" playername="" helpurl="flash.net:LocalConnection:allowInsecureDomain"/>
                <string name="close" object="[flash.net.LocalConnection]" text=".close(%%):void" tiptext="Closes (disconnects) a LocalConnection object." version="4" playername="" helpurl="flash.net:LocalConnection:close"/>
                <string name="connect" object="[flash.net.LocalConnection]" text=".connect(%connectionName:String%):void" tiptext="Prepares a LocalConnection object to receive commands that are sent from a send() command (from the sending LocalConnection object)." version="4" playername="" helpurl="flash.net:LocalConnection:connect"/>
                <string name="send" object="[flash.net.LocalConnection]" text=".send(%connectionName:String,methodName:String,arguments:restParam%):void" tiptext="Invokes the method named methodName on a connection that was opened with the connect(connectionName) method (in the receiving LocalConnection object)." version="4" playername="" helpurl="flash.net:LocalConnection:send"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class LocalConnection" helpurl="flash.net:LocalConnection">
                <string name="client" object="[flash.net.LocalConnection]" text=".client" tiptext="Indicates the object on which callback methods are invoked." version="" playername="" helpurl="flash.net:LocalConnection:client:get"/>
                <string name="domain" object="[flash.net.LocalConnection]" text=".domain" tiptext="A string representing the domain of the location of the current file." version="" playername="" helpurl="flash.net:LocalConnection:domain:get"/>
                <string name="isSupported" object="[flash.net.LocalConnection]" text=".isSupported" tiptext="The isSupported property is set to true if the LocalConnection class is supported on the current platform, otherwise it is set to false." version="" playername="" helpurl="flash.net:LocalConnection:isSupported:get"/>
                <string name="isPerUser" object="[flash.net.LocalConnection]" text=".isPerUser" tiptext="" version="" playername="" helpurl="flash.net:LocalConnection:isPerUser:set"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class LocalConnection" helpurl="flash.net:LocalConnection">
                <string name="status" object="[flash.net.LocalConnection]" text=".addEventListener(%type:String=StatusEvent.STATUS{StatusEvent.STATUS,SecurityErrorEvent.SECURITY_ERROR,AsyncErrorEvent.ASYNC_ERROR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a LocalConnection object reports its status." version="" playername="" helpurl="flash.net:LocalConnection_flash.events.StatusEvent.STATUS_status"/>
                <string name="securityError" object="[flash.net.LocalConnection]" text=".addEventListener(%type:String=SecurityErrorEvent.SECURITY_ERROR{StatusEvent.STATUS,SecurityErrorEvent.SECURITY_ERROR,AsyncErrorEvent.ASYNC_ERROR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched if a call to LocalConnection.send() attempts to send data to a different security sandbox." version="" playername="" helpurl="flash.net:LocalConnection_flash.events.SecurityErrorEvent.SECURITY_ERROR_securityError"/>
                <string name="asyncError" object="[flash.net.LocalConnection]" text=".addEventListener(%type:String=AsyncErrorEvent.ASYNC_ERROR{StatusEvent.STATUS,SecurityErrorEvent.SECURITY_ERROR,AsyncErrorEvent.ASYNC_ERROR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when an exception is thrown asynchronously -- that is, from native asynchronous code." version="" playername="" helpurl="flash.net:LocalConnection_flash.events.AsyncErrorEvent.ASYNC_ERROR_asyncError"/>
            </folder>
        </folder>
        <folder name="NetConnection" id="[flash.net.NetConnection]" sort="true" index="true" asAncestors="flash.events:EventDispatcher,Object" tiptext="The NetConnection class creates a two-way connection between a client and a server." helpurl="flash.net:NetConnection">
            <folder name="Methods" id="Methods" tiptext="Methods for class NetConnection" helpurl="flash.net:NetConnection">
                <string name="NetConnection" object="[flash.net.NetConnection]" text="new NetConnection(%%)" constructor="true" tiptext="Creates a NetConnection object." version="4" playername="" helpurl="flash.net:NetConnection:NetConnection"/>
                <string name="addHeader" object="[flash.net.NetConnection]" text=".addHeader(%operation:String[,mustUnderstand:Boolean=false,param:Object=null]%):void" tiptext="Adds a context header to the Action Message Format (AMF) packet structure." version="4" playername="" helpurl="flash.net:NetConnection:addHeader"/>
                <string name="call" object="[flash.net.NetConnection]" text=".call(%command:String,responder:flash.net:Responder,arguments:restParam%):void" tiptext="Calls a command or method on Flash Media Server or on an application server running Flash Remoting." version="4" playername="" helpurl="flash.net:NetConnection:call"/>
                <string name="close" object="[flash.net.NetConnection]" text=".close(%%):void" tiptext="Closes the connection that was opened locally or to the server and dispatches a netStatus event with a code property of NetConnection.Connect.Closed." version="4" playername="" helpurl="flash.net:NetConnection:close"/>
                <string name="connect" object="[flash.net.NetConnection]" text=".connect(%command:String,arguments:restParam%):void" tiptext="Creates a two-way connection to an application on Flash Media Server or to Flash Remoting, or creates a two-way network endpoint for RTMFP peer-to-peer group communication." version="4" playername="" helpurl="flash.net:NetConnection:connect"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class NetConnection" helpurl="flash.net:NetConnection">
                <string name="client" object="[flash.net.NetConnection]" text=".client" tiptext="Indicates the object on which callback methods are invoked." version="" playername="" helpurl="flash.net:NetConnection:client:get"/>
                <string name="connectedProxyType" object="[flash.net.NetConnection]" text=".connectedProxyType" tiptext="The proxy type used to make a successful connection to Flash Media Server." version="" playername="" helpurl="flash.net:NetConnection:connectedProxyType:get"/>
                <string name="connected" object="[flash.net.NetConnection]" text=".connected" tiptext="Indicates whether the application is connected to a server through a persistent RTMP connection (true) or not (false)." version="" playername="" helpurl="flash.net:NetConnection:connected:get"/>
                <string name="defaultObjectEncoding" object="[flash.net.NetConnection]" text=".defaultObjectEncoding" tiptext="The default object encoding for NetConnection objects." version="" playername="" helpurl="flash.net:NetConnection:defaultObjectEncoding:get"/>
                <string name="farID" object="[flash.net.NetConnection]" text=".farID" tiptext="The identifier of the Flash Media Server instance to which this Flash Player or Adobe AIR instance is connected." version="" playername="" helpurl="flash.net:NetConnection:farID:get"/>
                <string name="farNonce" object="[flash.net.NetConnection]" text=".farNonce" tiptext="A value chosen substantially by Flash Media Server, unique to this connection." version="" playername="" helpurl="flash.net:NetConnection:farNonce:get"/>
                <string name="httpIdleTimeout" object="[flash.net.NetConnection]" text=".httpIdleTimeout" tiptext="The time, in milliseconds, to wait for an HTTP response." version="" playername="" helpurl="flash.net:NetConnection:httpIdleTimeout:get"/>
                <string name="maxPeerConnections" object="[flash.net.NetConnection]" text=".maxPeerConnections" tiptext="The total number of inbound and outbound peer connections that this instance of Flash Player or Adobe AIR allows." version="" playername="" helpurl="flash.net:NetConnection:maxPeerConnections:get"/>
                <string name="nearID" object="[flash.net.NetConnection]" text=".nearID" tiptext="The identifier of this Flash Player or Adobe AIR instance for this NetConnection instance." version="" playername="" helpurl="flash.net:NetConnection:nearID:get"/>
                <string name="nearNonce" object="[flash.net.NetConnection]" text=".nearNonce" tiptext="A value chosen substantially by this Flash Player or Adobe AIR instance, unique to this connection." version="" playername="" helpurl="flash.net:NetConnection:nearNonce:get"/>
                <string name="objectEncoding" object="[flash.net.NetConnection]" text=".objectEncoding" tiptext="The object encoding for this NetConnection instance." version="" playername="" helpurl="flash.net:NetConnection:objectEncoding:get"/>
                <string name="protocol" object="[flash.net.NetConnection]" text=".protocol" tiptext="The protocol used to establish the connection." version="" playername="" helpurl="flash.net:NetConnection:protocol:get"/>
                <string name="proxyType" object="[flash.net.NetConnection]" text=".proxyType" tiptext="Determines which fallback methods are tried if an initial connection attempt to Flash Media Server fails." version="" playername="" helpurl="flash.net:NetConnection:proxyType:get"/>
                <string name="unconnectedPeerStreams" object="[flash.net.NetConnection]" text=".unconnectedPeerStreams" tiptext="An object that holds all of the peer subscriber NetStream objects that are not associated with publishing NetStream objects." version="" playername="" helpurl="flash.net:NetConnection:unconnectedPeerStreams:get"/>
                <string name="uri" object="[flash.net.NetConnection]" text=".uri" tiptext="The URI passed to the NetConnection.connect() method." version="" playername="" helpurl="flash.net:NetConnection:uri:get"/>
                <string name="usingTLS" object="[flash.net.NetConnection]" text=".usingTLS" tiptext="Indicates whether a secure connection was made using native Transport Layer Security (TLS) rather than HTTPS." version="" playername="" helpurl="flash.net:NetConnection:usingTLS:get"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class NetConnection" helpurl="flash.net:NetConnection">
                <string name="netStatus" object="[flash.net.NetConnection]" text=".addEventListener(%type:String=NetStatusEvent.NET_STATUS{NetStatusEvent.NET_STATUS,SecurityErrorEvent.SECURITY_ERROR,IOErrorEvent.IO_ERROR,AsyncErrorEvent.ASYNC_ERROR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a NetConnection object is reporting its status or error condition." version="" playername="" helpurl="flash.net:NetConnection_flash.events.NetStatusEvent.NET_STATUS_netStatus"/>
                <string name="securityError" object="[flash.net.NetConnection]" text=".addEventListener(%type:String=SecurityErrorEvent.SECURITY_ERROR{NetStatusEvent.NET_STATUS,SecurityErrorEvent.SECURITY_ERROR,IOErrorEvent.IO_ERROR,AsyncErrorEvent.ASYNC_ERROR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched if a call to NetConnection.call() attempts to connect to a server outside the caller&apos;s security sandbox." version="" playername="" helpurl="flash.net:NetConnection_flash.events.SecurityErrorEvent.SECURITY_ERROR_securityError"/>
                <string name="ioError" object="[flash.net.NetConnection]" text=".addEventListener(%type:String=IOErrorEvent.IO_ERROR{NetStatusEvent.NET_STATUS,SecurityErrorEvent.SECURITY_ERROR,IOErrorEvent.IO_ERROR,AsyncErrorEvent.ASYNC_ERROR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when an input or output error occurs that causes a network operation to fail." version="" playername="" helpurl="flash.net:NetConnection_flash.events.IOErrorEvent.IO_ERROR_ioError"/>
                <string name="asyncError" object="[flash.net.NetConnection]" text=".addEventListener(%type:String=AsyncErrorEvent.ASYNC_ERROR{NetStatusEvent.NET_STATUS,SecurityErrorEvent.SECURITY_ERROR,IOErrorEvent.IO_ERROR,AsyncErrorEvent.ASYNC_ERROR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when an exception is thrown asynchronously -- that is, from native asynchronous code." version="" playername="" helpurl="flash.net:NetConnection_flash.events.AsyncErrorEvent.ASYNC_ERROR_asyncError"/>
            </folder>
        </folder>
        <folder name="NetGroup" id="[flash.net.NetGroup]" sort="true" index="true" asAncestors="flash.events:EventDispatcher,Object" tiptext="Instances of the NetGroup class represent membership in an RTMFP group." helpurl="flash.net:NetGroup">
            <folder name="Methods" id="Methods" tiptext="Methods for class NetGroup" helpurl="flash.net:NetGroup">
                <string name="NetGroup" object="[flash.net.NetGroup]" text="new NetGroup(%connection:flash.net:NetConnection,groupspec:String%)" constructor="true" tiptext="Constructs a new NetGroup on the specified NetConnection object and joins it to the specified group." version="2" playername="" helpurl="flash.net:NetGroup:NetGroup"/>
                <string name="addHaveObjects" object="[flash.net.NetGroup]" text=".addHaveObjects(%startIndex:Number,endIndex:Number%):void" tiptext="Adds objects to the set of objects this node advertises to neighbors as objects for which it fulfills requests." version="2" playername="" helpurl="flash.net:NetGroup:addHaveObjects"/>
                <string name="addMemberHint" object="[flash.net.NetGroup]" text=".addMemberHint(%peerID:String%):Boolean" tiptext="Manually adds a record specifying that peerID is a member of the group, but doesn&apos;t necessarily connect immediately." version="2" playername="" helpurl="flash.net:NetGroup:addMemberHint"/>
                <string name="addNeighbor" object="[flash.net.NetGroup]" text=".addNeighbor(%peerID:String%):Boolean" tiptext="Manually adds a neighbor by immediately connecting directly to the specified peerID." version="2" playername="" helpurl="flash.net:NetGroup:addNeighbor"/>
                <string name="addWantObjects" object="[flash.net.NetGroup]" text=".addWantObjects(%startIndex:Number,endIndex:Number%):void" tiptext="Adds objects to the set of objects to retrieve." version="2" playername="" helpurl="flash.net:NetGroup:addWantObjects"/>
                <string name="close" object="[flash.net.NetGroup]" text=".close(%%):void" tiptext="Disconnect from the group and close this NetGroup." version="2" playername="" helpurl="flash.net:NetGroup:close"/>
                <string name="convertPeerIDToGroupAddress" object="[flash.net.NetGroup]" text=".convertPeerIDToGroupAddress(%peerID:String%):String" tiptext="Converts a peerID to a group address suitable for use with the sendToNearest() method." version="2" playername="" helpurl="flash.net:NetGroup:convertPeerIDToGroupAddress"/>
                <string name="denyRequestedObject" object="[flash.net.NetGroup]" text=".denyRequestedObject(%requestID:int%):void" tiptext="Denies a request for an object previously advertised." version="2" playername="" helpurl="flash.net:NetGroup:denyRequestedObject"/>
                <string name="post" object="[flash.net.NetGroup]" text=".post(%message:Object%):String" tiptext="Sends a message to all members of a group." version="2" playername="" helpurl="flash.net:NetGroup:post"/>
                <string name="removeHaveObjects" object="[flash.net.NetGroup]" text=".removeHaveObjects(%startIndex:Number,endIndex:Number%):void" tiptext="Removes objects from the set of objects this node advertises to neighbors as objects for which it fulfills requests." version="2" playername="" helpurl="flash.net:NetGroup:removeHaveObjects"/>
                <string name="removeWantObjects" object="[flash.net.NetGroup]" text=".removeWantObjects(%startIndex:Number,endIndex:Number%):void" tiptext="Removes objects from the set of objects to retrieve." version="2" playername="" helpurl="flash.net:NetGroup:removeWantObjects"/>
                <string name="sendToAllNeighbors" object="[flash.net.NetGroup]" text=".sendToAllNeighbors(%message:Object%):String" tiptext="Sends a message to all neighbors." version="2" playername="" helpurl="flash.net:NetGroup:sendToAllNeighbors"/>
                <string name="sendToNearest" object="[flash.net.NetGroup]" text=".sendToNearest(%message:Object,groupAddress:String%):String" tiptext="Sends a message to the neighbor (or local node) nearest to the specified group address." version="2" playername="" helpurl="flash.net:NetGroup:sendToNearest"/>
                <string name="sendToNeighbor" object="[flash.net.NetGroup]" text=".sendToNeighbor(%message:Object,sendMode:String%):String" tiptext="Sends message to the neighbor specified by the sendMode parameter." version="2" playername="" helpurl="flash.net:NetGroup:sendToNeighbor"/>
                <string name="writeRequestedObject" object="[flash.net.NetGroup]" text=".writeRequestedObject(%requestID:int,object:Object%):void" tiptext="Satisfies the request for an object that was previously advertised." version="2" playername="" helpurl="flash.net:NetGroup:writeRequestedObject"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class NetGroup" helpurl="flash.net:NetGroup">
                <string name="estimatedMemberCount" object="[flash.net.NetGroup]" text=".estimatedMemberCount" tiptext="Specifies the estimated number of members of the group, based on local neighbor density and assuming an even distribution of group addresses." version="" playername="" helpurl="flash.net:NetGroup:estimatedMemberCount:get"/>
                <string name="info" object="[flash.net.NetGroup]" text=".info" tiptext="Returns a NetGroupInfo object whose properties provide Quality of Service statistics about this NetGroup&apos;s RTMFP peer-to-peer data transport." version="" playername="" helpurl="flash.net:NetGroup:info:get"/>
                <string name="localCoverageFrom" object="[flash.net.NetGroup]" text=".localCoverageFrom" tiptext="Specifies the start of the range of group addresses for which this node is the &quot;nearest&quot; and responsible." version="" playername="" helpurl="flash.net:NetGroup:localCoverageFrom:get"/>
                <string name="localCoverageTo" object="[flash.net.NetGroup]" text=".localCoverageTo" tiptext="Specifies the end of the range of group addresses for which this node is the &quot;nearest&quot; and responsible." version="" playername="" helpurl="flash.net:NetGroup:localCoverageTo:get"/>
                <string name="neighborCount" object="[flash.net.NetGroup]" text=".neighborCount" tiptext="Specifies the number of group members to which this node is directly connected." version="" playername="" helpurl="flash.net:NetGroup:neighborCount:get"/>
                <string name="receiveMode" object="[flash.net.NetGroup]" text=".receiveMode" tiptext="Specifies this node&apos;s routing receive mode as one of values in the NetGroupReceiveMode enum class." version="" playername="" helpurl="flash.net:NetGroup:receiveMode:get"/>
                <string name="replicationStrategy" object="[flash.net.NetGroup]" text=".replicationStrategy" tiptext="Specifies the object replication fetch strategy." version="" playername="" helpurl="flash.net:NetGroup:replicationStrategy:get"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class NetGroup" helpurl="flash.net:NetGroup">
                <string name="netStatus" object="[flash.net.NetGroup]" text=".addEventListener(%type:String=NetStatusEvent.NET_STATUS{NetStatusEvent.NET_STATUS},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a NetGroup object is reporting its status or error condition." version="" playername="" helpurl="flash.net:NetGroup_flash.events.NetStatusEvent.NET_STATUS_netStatus"/>
            </folder>
        </folder>
        <folder name="NetGroupInfo" id="[flash.net.NetGroupInfo]" sort="true" index="true" asAncestors="Object" tiptext="The NetGroupInfo class specifies various Quality of Service (QoS) statisticsrelated to a NetGroup object&apos;s underlying RTMFP Peer-to-Peer data transport." helpurl="flash.net:NetGroupInfo">
            <folder name="Methods" id="Methods" tiptext="Methods for class NetGroupInfo" helpurl="flash.net:NetGroupInfo">
                <string name="toString" object="[flash.net.NetGroupInfo]" text=".toString(%%):String" tiptext="Returns a text value listing the properties of this NetGroupInfo object." version="2" playername="" helpurl="flash.net:NetGroupInfo:toString"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class NetGroupInfo" helpurl="flash.net:NetGroupInfo">
                <string name="objectReplicationReceiveBytesPerSecond" object="[flash.net.NetGroupInfo]" text=".objectReplicationReceiveBytesPerSecond" tiptext="Specifies the rate at which the local node is receiving objects from peers via the Object Replication system, in bytes per second." version="" playername="" helpurl="flash.net:NetGroupInfo:objectReplicationReceiveBytesPerSecond:get"/>
                <string name="objectReplicationSendBytesPerSecond" object="[flash.net.NetGroupInfo]" text=".objectReplicationSendBytesPerSecond" tiptext="Specifies the rate at which objects are being copied from the local node to peers by the Object Replication system, in bytes per second." version="" playername="" helpurl="flash.net:NetGroupInfo:objectReplicationSendBytesPerSecond:get"/>
                <string name="postingReceiveControlBytesPerSecond" object="[flash.net.NetGroupInfo]" text=".postingReceiveControlBytesPerSecond" tiptext="Specifies the rate at which the local node is receiving posting control overhead messages from peers, in bytes per second." version="" playername="" helpurl="flash.net:NetGroupInfo:postingReceiveControlBytesPerSecond:get"/>
                <string name="postingReceiveDataBytesPerSecond" object="[flash.net.NetGroupInfo]" text=".postingReceiveDataBytesPerSecond" tiptext="Specifies the rate at which the local node is receiving posting data from peers, in bytes per second." version="" playername="" helpurl="flash.net:NetGroupInfo:postingReceiveDataBytesPerSecond:get"/>
                <string name="postingSendControlBytesPerSecond" object="[flash.net.NetGroupInfo]" text=".postingSendControlBytesPerSecond" tiptext="Specifies the rate at which the local node is sending posting control overhead messages to peers, in bytes per second." version="" playername="" helpurl="flash.net:NetGroupInfo:postingSendControlBytesPerSecond:get"/>
                <string name="postingSendDataBytesPerSecond" object="[flash.net.NetGroupInfo]" text=".postingSendDataBytesPerSecond" tiptext="Specifies the rate at which the local node is sending posting data to peers, in bytes per second." version="" playername="" helpurl="flash.net:NetGroupInfo:postingSendDataBytesPerSecond:get"/>
                <string name="routingReceiveBytesPerSecond" object="[flash.net.NetGroupInfo]" text=".routingReceiveBytesPerSecond" tiptext="Specifies the rate at which the local node is receiving directed routing messages from peers, in bytes per second." version="" playername="" helpurl="flash.net:NetGroupInfo:routingReceiveBytesPerSecond:get"/>
                <string name="routingSendBytesPerSecond" object="[flash.net.NetGroupInfo]" text=".routingSendBytesPerSecond" tiptext="Specifies the rate at which the local node is sending directed routing messages to peers, in bytes per second." version="" playername="" helpurl="flash.net:NetGroupInfo:routingSendBytesPerSecond:get"/>
            </folder>
        </folder>
        <folder name="NetGroupReceiveMode" id="[flash.net.NetGroupReceiveMode]" sort="true" index="true" asAncestors="Object" tiptext="The NetGroupReceiveMode class is an enumeration of constant values used for the receiveMode property of the NetGroup class." helpurl="flash.net:NetGroupReceiveMode">
            <folder name="Properties" id="Properties" tiptext="Properties for class NetGroupReceiveMode" helpurl="flash.net:NetGroupReceiveMode">
                <string name="EXACT" object="[flash.net.NetGroupReceiveMode]" text="NetGroupReceiveMode.EXACT" constant="true" tiptext="Specifies that this node accepts local messages from neighbors only if the address the neighbor uses matches this node&apos;s address exactly." version="" playername="" helpurl="flash.net:NetGroupReceiveMode:EXACT"/>
                <string name="NEAREST" object="[flash.net.NetGroupReceiveMode]" text="NetGroupReceiveMode.NEAREST" constant="true" tiptext="Specifies that this node accepts local messages from neighbors that send messages to group addresses that don&apos;t match this node&apos;s address exactly." version="" playername="" helpurl="flash.net:NetGroupReceiveMode:NEAREST"/>
            </folder>
        </folder>
        <folder name="NetGroupReplicationStrategy" id="[flash.net.NetGroupReplicationStrategy]" sort="true" index="true" asAncestors="Object" tiptext="The NetGroupReplicationStrategy class is an enumeration of constant values used in setting the replicationStrategy propertyof the NetGroup class." helpurl="flash.net:NetGroupReplicationStrategy">
            <folder name="Properties" id="Properties" tiptext="Properties for class NetGroupReplicationStrategy" helpurl="flash.net:NetGroupReplicationStrategy">
                <string name="LOWEST_FIRST" object="[flash.net.NetGroupReplicationStrategy]" text="NetGroupReplicationStrategy.LOWEST_FIRST" constant="true" tiptext="Specifies that when fetching objects from a neighbor to satisfy a want, the objects with the lowest index numbers are requested first." version="" playername="" helpurl="flash.net:NetGroupReplicationStrategy:LOWEST_FIRST"/>
                <string name="RAREST_FIRST" object="[flash.net.NetGroupReplicationStrategy]" text="NetGroupReplicationStrategy.RAREST_FIRST" constant="true" tiptext="Specifies that when fetching objects from a neighbor to satisfy a want, the objects with the fewest replicas among all the neighbors are requested first." version="" playername="" helpurl="flash.net:NetGroupReplicationStrategy:RAREST_FIRST"/>
            </folder>
        </folder>
        <folder name="NetGroupSendMode" id="[flash.net.NetGroupSendMode]" sort="true" index="true" asAncestors="Object" tiptext="The NetGroupSendMode class is an enumeration of constant values used for the sendMode parameter of the NetGroup.sendToNeighbor()method." helpurl="flash.net:NetGroupSendMode">
            <folder name="Properties" id="Properties" tiptext="Properties for class NetGroupSendMode" helpurl="flash.net:NetGroupSendMode">
                <string name="NEXT_DECREASING" object="[flash.net.NetGroupSendMode]" text="NetGroupSendMode.NEXT_DECREASING" constant="true" tiptext="Specifies the neighbor with the nearest group address in the decreasing direction." version="" playername="" helpurl="flash.net:NetGroupSendMode:NEXT_DECREASING"/>
                <string name="NEXT_INCREASING" object="[flash.net.NetGroupSendMode]" text="NetGroupSendMode.NEXT_INCREASING" constant="true" tiptext="Specifies the neighbor with the nearest group address in the increasing direction." version="" playername="" helpurl="flash.net:NetGroupSendMode:NEXT_INCREASING"/>
            </folder>
        </folder>
        <folder name="NetGroupSendResult" id="[flash.net.NetGroupSendResult]" sort="true" index="true" asAncestors="Object" tiptext="The NetGroupSendResult class is an enumeration of constant values used for the return value of theDirected Routing methods associated with a NetGroup instance." helpurl="flash.net:NetGroupSendResult">
            <folder name="Properties" id="Properties" tiptext="Properties for class NetGroupSendResult" helpurl="flash.net:NetGroupSendResult">
                <string name="ERROR" object="[flash.net.NetGroupSendResult]" text="NetGroupSendResult.ERROR" constant="true" tiptext="Indicates an error occurred (such as no permission) when using a Directed Routing method." version="" playername="" helpurl="flash.net:NetGroupSendResult:ERROR"/>
                <string name="NO_ROUTE" object="[flash.net.NetGroupSendResult]" text="NetGroupSendResult.NO_ROUTE" constant="true" tiptext="Indicates no neighbor could be found to route the message toward its requested destination." version="" playername="" helpurl="flash.net:NetGroupSendResult:NO_ROUTE"/>
                <string name="SENT" object="[flash.net.NetGroupSendResult]" text="NetGroupSendResult.SENT" constant="true" tiptext="Indicates that a route was found for the message and it was forwarded toward its destination." version="" playername="" helpurl="flash.net:NetGroupSendResult:SENT"/>
            </folder>
        </folder>
        <folder name="NetStream" id="[flash.net.NetStream]" sort="true" index="true" asAncestors="flash.events:EventDispatcher,Object" tiptext="The NetStream class opens a one-way streaming channel over a NetConnection." helpurl="flash.net:NetStream">
            <folder name="Methods" id="Methods" tiptext="Methods for class NetStream" helpurl="flash.net:NetStream">
                <string name="NetStream" object="[flash.net.NetStream]" text="new NetStream(%connection:flash.net:NetConnection[,peerID:String=connectToFMS]%)" constructor="true" tiptext="Creates a stream that you can use to play media files and send data over a NetConnection object." version="4" playername="" helpurl="flash.net:NetStream:NetStream"/>
                <string name="appendBytesAction" object="[flash.net.NetStream]" text=".appendBytesAction(%netStreamAppendBytesAction:String%):void" tiptext="Indicates a timescale discontinuity, flushes the FIFO, and tells the byte parser to expect a file header or the beginning of an FLV tag." version="2" playername="" helpurl="flash.net:NetStream:appendBytesAction"/>
                <string name="appendBytes" object="[flash.net.NetStream]" text=".appendBytes(%bytes:flash.utils:ByteArray%):void" tiptext="Passes a ByteArray into a NetStream for playout." version="2" playername="" helpurl="flash.net:NetStream:appendBytes"/>
                <string name="attachAudio" object="[flash.net.NetStream]" text=".attachAudio(%microphone:flash.media:Microphone%):void" tiptext="Attaches an audio stream to a NetStream object from a Microphone object passed as the source." version="9" playername="" helpurl="flash.net:NetStream:attachAudio"/>
                <string name="attachCamera" object="[flash.net.NetStream]" text=".attachCamera(%theCamera:flash.media:Camera[,snapshotMilliseconds:int=-1]%):void" tiptext="Starts capturing video from a camera, or stops capturing if theCamera is set to null." version="9" playername="" helpurl="flash.net:NetStream:attachCamera"/>
                <string name="attach" object="[flash.net.NetStream]" text=".attach(%connection:flash.net:NetConnection%):void" tiptext="Attaches a stream to a new NetConnection object." version="2" playername="" helpurl="flash.net:NetStream:attach"/>
                <string name="close" object="[flash.net.NetStream]" text=".close(%%):void" tiptext="Stops playing all data on the stream, sets the time property to 0, and makes the stream available for another use." version="4" playername="" helpurl="flash.net:NetStream:close"/>
                <string name="onPeerConnect" object="[flash.net.NetStream]" text=".onPeerConnect(%subscriber:flash.net:NetStream%):Boolean" tiptext="Invoked when a peer-publishing stream matches a peer-subscribing stream." version="4" playername="" helpurl="flash.net:NetStream:onPeerConnect"/>
                <string name="pause" object="[flash.net.NetStream]" text=".pause(%%):void" tiptext="Pauses playback of a video stream." version="4" playername="" helpurl="flash.net:NetStream:pause"/>
                <string name="play2" object="[flash.net.NetStream]" text=".play2(%param:flash.net:NetStreamPlayOptions%):void" tiptext="Switches seamlessly between files with multiple bit rates and allows a NetStream to resume when a connection is dropped and reconnected." version="4" playername="" helpurl="flash.net:NetStream:play2"/>
                <string name="play" object="[flash.net.NetStream]" text=".play(%arguments:restParam%):void" tiptext="Plays a media file from a local directory or a web server; plays a media file or a live stream from Flash Media Server." version="4" playername="" helpurl="flash.net:NetStream:play"/>
                <string name="preloadEmbeddedData" object="[flash.net.NetStream]" text=".preloadEmbeddedData(%param:flash.net:NetStreamPlayOptions%):void" tiptext="Extracts any DRM metadata from a locally stored media file." version="4" playername="" helpurl="flash.net:NetStream:preloadEmbeddedData"/>
                <string name="publish" object="[flash.net.NetStream]" text=".publish(%[name:String=null,type:String=null]%):void" tiptext="Sends streaming audio, video, and data messages from a client to Flash Media Server, optionally recording the stream during transmission." version="9" playername="" helpurl="flash.net:NetStream:publish"/>
                <string name="receiveAudio" object="[flash.net.NetStream]" text=".receiveAudio(%flag:Boolean%):void" tiptext="Specifies whether incoming audio plays on the stream." version="4" playername="" helpurl="flash.net:NetStream:receiveAudio"/>
                <string name="receiveVideoFPS" object="[flash.net.NetStream]" text=".receiveVideoFPS(%FPS:Number%):void" tiptext="Specifies the frame rate for incoming video." version="4" playername="" helpurl="flash.net:NetStream:receiveVideoFPS"/>
                <string name="receiveVideo" object="[flash.net.NetStream]" text=".receiveVideo(%flag:Boolean%):void" tiptext="Specifies whether incoming video plays on the stream." version="4" playername="" helpurl="flash.net:NetStream:receiveVideo"/>
                <string name="resetDRMVouchers" object="[flash.net.NetStream]" text="NetStream.resetDRMVouchers(%%):void" static="true" tiptext="Deletes all locally cached digital rights management (DRM) voucher data." version="4" playername="" helpurl="flash.net:NetStream:resetDRMVouchers"/>
                <string name="resume" object="[flash.net.NetStream]" text=".resume(%%):void" tiptext="Resumes playback of a video stream that is paused." version="4" playername="" helpurl="flash.net:NetStream:resume"/>
                <string name="seek" object="[flash.net.NetStream]" text=".seek(%offset:Number%):void" tiptext="Seeks the keyframe (also called an I-frame in the video industry) closest to the specified location." version="4" playername="" helpurl="flash.net:NetStream:seek"/>
                <string name="send" object="[flash.net.NetStream]" text=".send(%handlerName:String,arguments:restParam%):void" tiptext="Sends a message on a published stream to all subscribing clients." version="9" playername="" helpurl="flash.net:NetStream:send"/>
                <string name="setDRMAuthenticationCredentials" object="[flash.net.NetStream]" text=".setDRMAuthenticationCredentials(%userName:String,password:String,type:String%):void" tiptext="Sets the DRM authentication credentials needed for viewing the underlying encrypted content." version="4" playername="" helpurl="flash.net:NetStream:setDRMAuthenticationCredentials"/>
                <string name="step" object="[flash.net.NetStream]" text=".step(%frames:int%):void" tiptext="Steps forward or back the specified number of frames, relative to the currently displayed frame." version="2" playername="" helpurl="flash.net:NetStream:step"/>
                <string name="togglePause" object="[flash.net.NetStream]" text=".togglePause(%%):void" tiptext="Pauses or resumes playback of a stream." version="4" playername="" helpurl="flash.net:NetStream:togglePause"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class NetStream" helpurl="flash.net:NetStream">
                <string name="CONNECT_TO_FMS" object="[flash.net.NetStream]" text="NetStream.CONNECT_TO_FMS" constant="true" tiptext="A static object used as a parameter to the constructor for a NetStream instance." version="" playername="" helpurl="flash.net:NetStream:CONNECT_TO_FMS"/>
                <string name="DIRECT_CONNECTIONS" object="[flash.net.NetStream]" text="NetStream.DIRECT_CONNECTIONS" constant="true" tiptext="Creates a peer-to-peer publisher connection." version="" playername="" helpurl="flash.net:NetStream:DIRECT_CONNECTIONS"/>
                <string name="audioReliable" object="[flash.net.NetStream]" text=".audioReliable" tiptext="For RTMFP connections, specifies whether audio is sent with full reliability." version="" playername="" helpurl="flash.net:NetStream:audioReliable:get"/>
                <string name="audioSampleAccess" object="[flash.net.NetStream]" text=".audioSampleAccess" tiptext="For RTMFP connections, specifies whether peer-to-peer subscribers on this NetStream are allowed to capture the audio stream." version="" playername="" helpurl="flash.net:NetStream:audioSampleAccess:get"/>
                <string name="backBufferLength" object="[flash.net.NetStream]" text=".backBufferLength" tiptext="The number of seconds of previously displayed data that currently cached for rewinding and playback." version="" playername="" helpurl="flash.net:NetStream:backBufferLength:get"/>
                <string name="backBufferTime" object="[flash.net.NetStream]" text=".backBufferTime" tiptext="Specifies how much previously displayed data Flash Player tries to cache for rewinding and playback, in seconds." version="" playername="" helpurl="flash.net:NetStream:backBufferTime:get"/>
                <string name="bufferLength" object="[flash.net.NetStream]" text=".bufferLength" tiptext="The number of seconds of data currently in the buffer." version="" playername="" helpurl="flash.net:NetStream:bufferLength:get"/>
                <string name="bufferTimeMax" object="[flash.net.NetStream]" text=".bufferTimeMax" tiptext="Specifies a maximum buffer length for live streaming content, in seconds." version="" playername="" helpurl="flash.net:NetStream:bufferTimeMax:get"/>
                <string name="bufferTime" object="[flash.net.NetStream]" text=".bufferTime" tiptext="Specifies how long to buffer messages before starting to display the stream." version="" playername="" helpurl="flash.net:NetStream:bufferTime:get"/>
                <string name="bytesLoaded" object="[flash.net.NetStream]" text=".bytesLoaded" tiptext="The number of bytes of data that have been loaded into the application." version="" playername="" helpurl="flash.net:NetStream:bytesLoaded:get"/>
                <string name="bytesTotal" object="[flash.net.NetStream]" text=".bytesTotal" tiptext="The total size in bytes of the file being loaded into the application." version="" playername="" helpurl="flash.net:NetStream:bytesTotal:get"/>
                <string name="checkPolicyFile" object="[flash.net.NetStream]" text=".checkPolicyFile" tiptext="Specifies whether the application tries to download a cross-domain policy file from the loaded video file&apos;s server before beginning to load the video file." version="" playername="" helpurl="flash.net:NetStream:checkPolicyFile:get"/>
                <string name="client" object="[flash.net.NetStream]" text=".client" tiptext="Specifies the object on which callback methods are invoked to handle streaming or F4V/FLV file data." version="" playername="" helpurl="flash.net:NetStream:client:get"/>
                <string name="currentFPS" object="[flash.net.NetStream]" text=".currentFPS" tiptext="The number of frames per second being displayed." version="" playername="" helpurl="flash.net:NetStream:currentFPS:get"/>
                <string name="dataReliable" object="[flash.net.NetStream]" text=".dataReliable" tiptext="For RTMFP connections, specifies whether NetStream.send() calls are sent with full reliability." version="" playername="" helpurl="flash.net:NetStream:dataReliable:get"/>
                <string name="farID" object="[flash.net.NetStream]" text=".farID" tiptext="For RTMFP connections, the identifier of the far end that is connected to this NetStream instance." version="" playername="" helpurl="flash.net:NetStream:farID:get"/>
                <string name="farNonce" object="[flash.net.NetStream]" text=".farNonce" tiptext="For RTMFP and RTMPE connections, a value chosen substantially by the other end of this stream, unique to this connection." version="" playername="" helpurl="flash.net:NetStream:farNonce:get"/>
                <string name="inBufferSeek" object="[flash.net.NetStream]" text=".inBufferSeek" tiptext="Specifies whether displayed data is cached for smart seeking (TRUE), or not (FALSE)." version="" playername="" helpurl="flash.net:NetStream:inBufferSeek:get"/>
                <string name="info" object="[flash.net.NetStream]" text=".info" tiptext="Returns a NetStreamInfo object whose properties contain statistics about the quality of service." version="" playername="" helpurl="flash.net:NetStream:info:get"/>
                <string name="liveDelay" object="[flash.net.NetStream]" text=".liveDelay" tiptext="The number of seconds of data in the subscribing stream&apos;s buffer in live (unbuffered) mode." version="" playername="" helpurl="flash.net:NetStream:liveDelay:get"/>
                <string name="maxPauseBufferTime" object="[flash.net.NetStream]" text=".maxPauseBufferTime" tiptext="Specifies how long to buffer messages during pause mode, in seconds." version="" playername="" helpurl="flash.net:NetStream:maxPauseBufferTime:get"/>
                <string name="multicastAvailabilitySendToAll" object="[flash.net.NetStream]" text=".multicastAvailabilitySendToAll" tiptext="For RTMFP connections, specifies whether peer-to-peer multicast fragment availability messages are sent to all peers or to just one peer." version="" playername="" helpurl="flash.net:NetStream:multicastAvailabilitySendToAll:get"/>
                <string name="multicastAvailabilityUpdatePeriod" object="[flash.net.NetStream]" text=".multicastAvailabilityUpdatePeriod" tiptext="For RTMFP connections, specifies the interval in seconds between messages sent to peers informing them that the local node has new peer-to-peer multicast media fragments available." version="" playername="" helpurl="flash.net:NetStream:multicastAvailabilityUpdatePeriod:get"/>
                <string name="multicastFetchPeriod" object="[flash.net.NetStream]" text=".multicastFetchPeriod" tiptext="For RTMFP connections, specifies the time in seconds between when the local node learns that a peer-to-peer multicast media fragment is available and when it tries to fetch it from a peer." version="" playername="" helpurl="flash.net:NetStream:multicastFetchPeriod:get"/>
                <string name="multicastInfo" object="[flash.net.NetStream]" text=".multicastInfo" tiptext="For RTMFP connections, returns a NetStreamMulticastInfo object whose properties contain statistics about the quality of service." version="" playername="" helpurl="flash.net:NetStream:multicastInfo:get"/>
                <string name="multicastPushNeighborLimit" object="[flash.net.NetStream]" text=".multicastPushNeighborLimit" tiptext="For RTMFP connections, specifies the maximum number of peers to which to proactively push multicast media." version="" playername="" helpurl="flash.net:NetStream:multicastPushNeighborLimit:get"/>
                <string name="multicastRelayMarginDuration" object="[flash.net.NetStream]" text=".multicastRelayMarginDuration" tiptext="For RTMFP connections, specifies the duration in seconds that peer-to-peer multicast data remains available to send to peers that request it beyond a specified duration." version="" playername="" helpurl="flash.net:NetStream:multicastRelayMarginDuration:get"/>
                <string name="multicastWindowDuration" object="[flash.net.NetStream]" text=".multicastWindowDuration" tiptext="For RTMFP connections, specifies the duration in seconds of the peer-to-peer multicast reassembly window." version="" playername="" helpurl="flash.net:NetStream:multicastWindowDuration:get"/>
                <string name="nearNonce" object="[flash.net.NetStream]" text=".nearNonce" tiptext="For RTMFP and RTMPE connections, a value chosen substantially by this end of the stream, unique to this connection." version="" playername="" helpurl="flash.net:NetStream:nearNonce:get"/>
                <string name="objectEncoding" object="[flash.net.NetStream]" text=".objectEncoding" tiptext="The object encoding (AMF version) for this NetStream object." version="" playername="" helpurl="flash.net:NetStream:objectEncoding:get"/>
                <string name="peerStreams" object="[flash.net.NetStream]" text=".peerStreams" tiptext="An object that holds all of the subscribing NetStream instances that are listening to this publishing NetStream instance." version="" playername="" helpurl="flash.net:NetStream:peerStreams:get"/>
                <string name="soundTransform" object="[flash.net.NetStream]" text=".soundTransform" tiptext="Controls sound in this NetStream object." version="" playername="" helpurl="flash.net:NetStream:soundTransform:get"/>
                <string name="time" object="[flash.net.NetStream]" text=".time" tiptext="The position of the playhead, in seconds." version="" playername="" helpurl="flash.net:NetStream:time:get"/>
                <string name="videoReliable" object="[flash.net.NetStream]" text=".videoReliable" tiptext="For RTMFP connections, specifies whether video is sent with full reliability." version="" playername="" helpurl="flash.net:NetStream:videoReliable:get"/>
                <string name="videoSampleAccess" object="[flash.net.NetStream]" text=".videoSampleAccess" tiptext="For RTMFP connections, specifies whether peer-to-peer subscribers on this NetStream are allowed to capture the video stream." version="" playername="" helpurl="flash.net:NetStream:videoSampleAccess:get"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class NetStream" helpurl="flash.net:NetStream">
                <string name="onSeekPoint" object="[flash.net.NetStream]" text=".addEventListener(%type:String={DRMStatusEvent.DRM_STATUS,DRMErrorEvent.DRM_ERROR,DRMAuthenticateEvent.DRM_AUTHENTICATE,,,,,,,,NetStatusEvent.NET_STATUS,IOErrorEvent.IO_ERROR,AsyncErrorEvent.ASYNC_ERROR,StatusEvent.STATUS},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Called synchronously from appendBytes() when the append bytes parser encounters a point that it believes is a seekable point (for example, a video key frame)." version="" playername="" helpurl="flash.net:NetStream__onSeekPoint"/>
                <string name="drmStatus" object="[flash.net.NetStream]" text=".addEventListener(%type:String=DRMStatusEvent.DRM_STATUS{DRMStatusEvent.DRM_STATUS,DRMErrorEvent.DRM_ERROR,DRMAuthenticateEvent.DRM_AUTHENTICATE,,,,,,,,NetStatusEvent.NET_STATUS,IOErrorEvent.IO_ERROR,AsyncErrorEvent.ASYNC_ERROR,StatusEvent.STATUS},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the digital rights management (DRM) encrypted content begins playing (when the user is authenticated and authorized to play the content)." version="" playername="" helpurl="flash.net:NetStream_flash.events.DRMStatusEvent.DRM_STATUS_drmStatus"/>
                <string name="drmError" object="[flash.net.NetStream]" text=".addEventListener(%type:String=DRMErrorEvent.DRM_ERROR{DRMStatusEvent.DRM_STATUS,DRMErrorEvent.DRM_ERROR,DRMAuthenticateEvent.DRM_AUTHENTICATE,,,,,,,,NetStatusEvent.NET_STATUS,IOErrorEvent.IO_ERROR,AsyncErrorEvent.ASYNC_ERROR,StatusEvent.STATUS},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a NetStream object, trying to play a digital rights management (DRM) encrypted file, encounters a DRM-related error." version="" playername="" helpurl="flash.net:NetStream_flash.events.DRMErrorEvent.DRM_ERROR_drmError"/>
                <string name="drmAuthenticate" object="[flash.net.NetStream]" text=".addEventListener(%type:String=DRMAuthenticateEvent.DRM_AUTHENTICATE{DRMStatusEvent.DRM_STATUS,DRMErrorEvent.DRM_ERROR,DRMAuthenticateEvent.DRM_AUTHENTICATE,,,,,,,,NetStatusEvent.NET_STATUS,IOErrorEvent.IO_ERROR,AsyncErrorEvent.ASYNC_ERROR,StatusEvent.STATUS},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a NetStream object tries to play a digital rights management (DRM) encrypted content that requires a user credential for authentication before playing." version="" playername="" helpurl="flash.net:NetStream_flash.events.DRMAuthenticateEvent.DRM_AUTHENTICATE_drmAuthenticate"/>
                <string name="onDRMContentData" object="[flash.net.NetStream]" text=".addEventListener(%type:String={DRMStatusEvent.DRM_STATUS,DRMErrorEvent.DRM_ERROR,DRMAuthenticateEvent.DRM_AUTHENTICATE,,,,,,,,NetStatusEvent.NET_STATUS,IOErrorEvent.IO_ERROR,AsyncErrorEvent.ASYNC_ERROR,StatusEvent.STATUS},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Establishes a listener to respond when AIR extracts DRM content metadata embedded in a media file." version="" playername="" helpurl="flash.net:NetStream__onDRMContentData"/>
                <string name="onPlayStatus" object="[flash.net.NetStream]" text=".addEventListener(%type:String={DRMStatusEvent.DRM_STATUS,DRMErrorEvent.DRM_ERROR,DRMAuthenticateEvent.DRM_AUTHENTICATE,,,,,,,,NetStatusEvent.NET_STATUS,IOErrorEvent.IO_ERROR,AsyncErrorEvent.ASYNC_ERROR,StatusEvent.STATUS},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Establishes a listener to respond when a NetStream object has completely played a stream." version="" playername="" helpurl="flash.net:NetStream__onPlayStatus"/>
                <string name="onCuePoint" object="[flash.net.NetStream]" text=".addEventListener(%type:String={DRMStatusEvent.DRM_STATUS,DRMErrorEvent.DRM_ERROR,DRMAuthenticateEvent.DRM_AUTHENTICATE,,,,,,,,NetStatusEvent.NET_STATUS,IOErrorEvent.IO_ERROR,AsyncErrorEvent.ASYNC_ERROR,StatusEvent.STATUS},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Establishes a listener to respond when an embedded cue point is reached while playing a video file." version="" playername="" helpurl="flash.net:NetStream__onCuePoint"/>
                <string name="onTextData" object="[flash.net.NetStream]" text=".addEventListener(%type:String={DRMStatusEvent.DRM_STATUS,DRMErrorEvent.DRM_ERROR,DRMAuthenticateEvent.DRM_AUTHENTICATE,,,,,,,,NetStatusEvent.NET_STATUS,IOErrorEvent.IO_ERROR,AsyncErrorEvent.ASYNC_ERROR,StatusEvent.STATUS},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Establishes a listener to respond when Flash Player receives text data embedded in a media file that is playing." version="" playername="" helpurl="flash.net:NetStream__onTextData"/>
                <string name="onImageData" object="[flash.net.NetStream]" text=".addEventListener(%type:String={DRMStatusEvent.DRM_STATUS,DRMErrorEvent.DRM_ERROR,DRMAuthenticateEvent.DRM_AUTHENTICATE,,,,,,,,NetStatusEvent.NET_STATUS,IOErrorEvent.IO_ERROR,AsyncErrorEvent.ASYNC_ERROR,StatusEvent.STATUS},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Establishes a listener to respond when Flash Player receives image data as a byte array embedded in a media file that is playing." version="" playername="" helpurl="flash.net:NetStream__onImageData"/>
                <string name="onMetaData" object="[flash.net.NetStream]" text=".addEventListener(%type:String={DRMStatusEvent.DRM_STATUS,DRMErrorEvent.DRM_ERROR,DRMAuthenticateEvent.DRM_AUTHENTICATE,,,,,,,,NetStatusEvent.NET_STATUS,IOErrorEvent.IO_ERROR,AsyncErrorEvent.ASYNC_ERROR,StatusEvent.STATUS},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Establishes a listener to respond when Flash Player receives descriptive information embedded in the video being played." version="" playername="" helpurl="flash.net:NetStream__onMetaData"/>
                <string name="onXMPData" object="[flash.net.NetStream]" text=".addEventListener(%type:String={DRMStatusEvent.DRM_STATUS,DRMErrorEvent.DRM_ERROR,DRMAuthenticateEvent.DRM_AUTHENTICATE,,,,,,,,NetStatusEvent.NET_STATUS,IOErrorEvent.IO_ERROR,AsyncErrorEvent.ASYNC_ERROR,StatusEvent.STATUS},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Establishes a listener to respond when Flash Player receives information specific to Adobe Extensible Metadata Platform (XMP) embedded in the video being played." version="" playername="" helpurl="flash.net:NetStream__onXMPData"/>
                <string name="netStatus" object="[flash.net.NetStream]" text=".addEventListener(%type:String=NetStatusEvent.NET_STATUS{DRMStatusEvent.DRM_STATUS,DRMErrorEvent.DRM_ERROR,DRMAuthenticateEvent.DRM_AUTHENTICATE,,,,,,,,NetStatusEvent.NET_STATUS,IOErrorEvent.IO_ERROR,AsyncErrorEvent.ASYNC_ERROR,StatusEvent.STATUS},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a NetStream object is reporting its status or error condition." version="" playername="" helpurl="flash.net:NetStream_flash.events.NetStatusEvent.NET_STATUS_netStatus"/>
                <string name="ioError" object="[flash.net.NetStream]" text=".addEventListener(%type:String=IOErrorEvent.IO_ERROR{DRMStatusEvent.DRM_STATUS,DRMErrorEvent.DRM_ERROR,DRMAuthenticateEvent.DRM_AUTHENTICATE,,,,,,,,NetStatusEvent.NET_STATUS,IOErrorEvent.IO_ERROR,AsyncErrorEvent.ASYNC_ERROR,StatusEvent.STATUS},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when an input or output error occurs that causes a network operation to fail." version="" playername="" helpurl="flash.net:NetStream_flash.events.IOErrorEvent.IO_ERROR_ioError"/>
                <string name="asyncError" object="[flash.net.NetStream]" text=".addEventListener(%type:String=AsyncErrorEvent.ASYNC_ERROR{DRMStatusEvent.DRM_STATUS,DRMErrorEvent.DRM_ERROR,DRMAuthenticateEvent.DRM_AUTHENTICATE,,,,,,,,NetStatusEvent.NET_STATUS,IOErrorEvent.IO_ERROR,AsyncErrorEvent.ASYNC_ERROR,StatusEvent.STATUS},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when an exception is thrown asynchronously -- that is, from native asynchronous code." version="" playername="" helpurl="flash.net:NetStream_flash.events.AsyncErrorEvent.ASYNC_ERROR_asyncError"/>
                <string name="status" object="[flash.net.NetStream]" text=".addEventListener(%type:String=StatusEvent.STATUS{DRMStatusEvent.DRM_STATUS,DRMErrorEvent.DRM_ERROR,DRMAuthenticateEvent.DRM_AUTHENTICATE,,,,,,,,NetStatusEvent.NET_STATUS,IOErrorEvent.IO_ERROR,AsyncErrorEvent.ASYNC_ERROR,StatusEvent.STATUS},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the application attempts to play content encrypted with digital rights management (DRM), by invoking the NetStream.play() method." version="" playername="" helpurl="flash.net:NetStream_flash.events.StatusEvent.STATUS_status"/>
            </folder>
        </folder>
        <folder name="NetStreamAppendBytesAction" id="[flash.net.NetStreamAppendBytesAction]" sort="true" index="true" asAncestors="Object" tiptext="The NetStreamAppendBytesAction class is an enumeration of the constants you can pass to the NetStream.appendBytesAction() method." helpurl="flash.net:NetStreamAppendBytesAction">
            <folder name="Properties" id="Properties" tiptext="Properties for class NetStreamAppendBytesAction" helpurl="flash.net:NetStreamAppendBytesAction">
                <string name="END_SEQUENCE" object="[flash.net.NetStreamAppendBytesAction]" text="NetStreamAppendBytesAction.END_SEQUENCE" constant="true" tiptext="Indicates that the media stream data is complete." version="" playername="" helpurl="flash.net:NetStreamAppendBytesAction:END_SEQUENCE"/>
                <string name="RESET_BEGIN" object="[flash.net.NetStreamAppendBytesAction]" text="NetStreamAppendBytesAction.RESET_BEGIN" constant="true" tiptext="Indicates a timescale discontinuity." version="" playername="" helpurl="flash.net:NetStreamAppendBytesAction:RESET_BEGIN"/>
                <string name="RESET_SEEK" object="[flash.net.NetStreamAppendBytesAction]" text="NetStreamAppendBytesAction.RESET_SEEK" constant="true" tiptext="Indicates a timescale discontinuity." version="" playername="" helpurl="flash.net:NetStreamAppendBytesAction:RESET_SEEK"/>
            </folder>
        </folder>
        <folder name="NetStreamInfo" id="[flash.net.NetStreamInfo]" sort="true" index="true" asAncestors="Object" tiptext="The NetStreamInfo class specifies the various Quality of Service (QOS) statistics related to a NetStream object and the underlying streaming buffer for audio, video, and data." helpurl="flash.net:NetStreamInfo">
            <folder name="Methods" id="Methods" tiptext="Methods for class NetStreamInfo" helpurl="flash.net:NetStreamInfo">
                <string name="toString" object="[flash.net.NetStreamInfo]" text=".toString(%%):String" tiptext="Returns a text value listing the properties of this NetStreamInfo object." version="4" playername="" helpurl="flash.net:NetStreamInfo:toString"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class NetStreamInfo" helpurl="flash.net:NetStreamInfo">
                <string name="SRTT" object="[flash.net.NetStreamInfo]" text=".SRTT" tiptext="The smoothed round trip time (SRTT) for the NetStream session, in milliseconds." version="" playername="" helpurl="flash.net:NetStreamInfo:SRTT:get"/>
                <string name="audioBufferByteLength" object="[flash.net.NetStreamInfo]" text=".audioBufferByteLength" tiptext="Provides the NetStream audio buffer size in bytes." version="" playername="" helpurl="flash.net:NetStreamInfo:audioBufferByteLength:get"/>
                <string name="audioBufferLength" object="[flash.net.NetStreamInfo]" text=".audioBufferLength" tiptext="Provides NetStream audio buffer size in seconds." version="" playername="" helpurl="flash.net:NetStreamInfo:audioBufferLength:get"/>
                <string name="audioByteCount" object="[flash.net.NetStreamInfo]" text=".audioByteCount" tiptext="Specifies the total number of audio bytes that have arrived in the queue, regardless of how many have been played or flushed." version="" playername="" helpurl="flash.net:NetStreamInfo:audioByteCount:get"/>
                <string name="audioBytesPerSecond" object="[flash.net.NetStreamInfo]" text=".audioBytesPerSecond" tiptext="Specifies the rate at which the NetStream audio buffer is filled in bytes per second." version="" playername="" helpurl="flash.net:NetStreamInfo:audioBytesPerSecond:get"/>
                <string name="audioLossRate" object="[flash.net.NetStreamInfo]" text=".audioLossRate" tiptext="Specifies the audio loss for the NetStream session." version="" playername="" helpurl="flash.net:NetStreamInfo:audioLossRate:get"/>
                <string name="byteCount" object="[flash.net.NetStreamInfo]" text=".byteCount" tiptext="Specifies the total number of bytes that have arrived into the queue, regardless of how many have been played or flushed." version="" playername="" helpurl="flash.net:NetStreamInfo:byteCount:get"/>
                <string name="currentBytesPerSecond" object="[flash.net.NetStreamInfo]" text=".currentBytesPerSecond" tiptext="Specifies the rate at which the NetStream buffer is filled in bytes per second." version="" playername="" helpurl="flash.net:NetStreamInfo:currentBytesPerSecond:get"/>
                <string name="dataBufferByteLength" object="[flash.net.NetStreamInfo]" text=".dataBufferByteLength" tiptext="Provides the NetStream data buffer size in bytes." version="" playername="" helpurl="flash.net:NetStreamInfo:dataBufferByteLength:get"/>
                <string name="dataBufferLength" object="[flash.net.NetStreamInfo]" text=".dataBufferLength" tiptext="Provides NetStream data buffer size in seconds." version="" playername="" helpurl="flash.net:NetStreamInfo:dataBufferLength:get"/>
                <string name="dataByteCount" object="[flash.net.NetStreamInfo]" text=".dataByteCount" tiptext="Specifies the total number of bytes of data messages that have arrived in the queue, regardless of how many have been played or flushed." version="" playername="" helpurl="flash.net:NetStreamInfo:dataByteCount:get"/>
                <string name="dataBytesPerSecond" object="[flash.net.NetStreamInfo]" text=".dataBytesPerSecond" tiptext="Specifies the rate at which the NetStream data buffer is filled in bytes per second." version="" playername="" helpurl="flash.net:NetStreamInfo:dataBytesPerSecond:get"/>
                <string name="droppedFrames" object="[flash.net.NetStreamInfo]" text=".droppedFrames" tiptext="Returns the number of video frames dropped in the current NetStream playback session." version="" playername="" helpurl="flash.net:NetStreamInfo:droppedFrames:get"/>
                <string name="maxBytesPerSecond" object="[flash.net.NetStreamInfo]" text=".maxBytesPerSecond" tiptext="Specifies the maximum rate at which the NetStream buffer is filled in bytes per second." version="" playername="" helpurl="flash.net:NetStreamInfo:maxBytesPerSecond:get"/>
                <string name="playbackBytesPerSecond" object="[flash.net.NetStreamInfo]" text=".playbackBytesPerSecond" tiptext="Returns the stream playback rate in bytes per second." version="" playername="" helpurl="flash.net:NetStreamInfo:playbackBytesPerSecond:get"/>
                <string name="videoBufferByteLength" object="[flash.net.NetStreamInfo]" text=".videoBufferByteLength" tiptext="Provides the NetStream video buffer size in bytes." version="" playername="" helpurl="flash.net:NetStreamInfo:videoBufferByteLength:get"/>
                <string name="videoBufferLength" object="[flash.net.NetStreamInfo]" text=".videoBufferLength" tiptext="Provides NetStream video buffer size in seconds." version="" playername="" helpurl="flash.net:NetStreamInfo:videoBufferLength:get"/>
                <string name="videoByteCount" object="[flash.net.NetStreamInfo]" text=".videoByteCount" tiptext="Specifies the total number of video bytes that have arrived in the queue, regardless of how many have been played or flushed." version="" playername="" helpurl="flash.net:NetStreamInfo:videoByteCount:get"/>
                <string name="videoBytesPerSecond" object="[flash.net.NetStreamInfo]" text=".videoBytesPerSecond" tiptext="Specifies the rate at which the NetStream video buffer is filled in bytes per second." version="" playername="" helpurl="flash.net:NetStreamInfo:videoBytesPerSecond:get"/>
                <string name="videoLossRate" object="[flash.net.NetStreamInfo]" text=".videoLossRate" tiptext="Provides the NetStream video loss rate (ratio of lost messages to total messages)." version="" playername="" helpurl="flash.net:NetStreamInfo:videoLossRate:get"/>
            </folder>
        </folder>
        <folder name="NetStreamMulticastInfo" id="[flash.net.NetStreamMulticastInfo]" sort="true" index="true" asAncestors="Object" tiptext="The NetStreamMulticastInfo class specifies various Quality of Service (QoS) statisticsrelated to a NetStream object&apos;s underlying RTMFP Peer-to-Peer and IP Multicast stream transport." helpurl="flash.net:NetStreamMulticastInfo">
            <folder name="Methods" id="Methods" tiptext="Methods for class NetStreamMulticastInfo" helpurl="flash.net:NetStreamMulticastInfo">
                <string name="toString" object="[flash.net.NetStreamMulticastInfo]" text=".toString(%%):String" tiptext="Returns a string listing the properties of the NetStreamMulticastInfo object." version="2" playername="" helpurl="flash.net:NetStreamMulticastInfo:toString"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class NetStreamMulticastInfo" helpurl="flash.net:NetStreamMulticastInfo">
                <string name="bytesPushedFromPeers" object="[flash.net.NetStreamMulticastInfo]" text=".bytesPushedFromPeers" tiptext="Specifies the number of media bytes that were proactively pushed from peers and received by the local node." version="" playername="" helpurl="flash.net:NetStreamMulticastInfo:bytesPushedFromPeers:get"/>
                <string name="bytesPushedToPeers" object="[flash.net.NetStreamMulticastInfo]" text=".bytesPushedToPeers" tiptext="Specifies the number of media bytes that the local node has proactively pushed to peers." version="" playername="" helpurl="flash.net:NetStreamMulticastInfo:bytesPushedToPeers:get"/>
                <string name="bytesReceivedFromIPMulticast" object="[flash.net.NetStreamMulticastInfo]" text=".bytesReceivedFromIPMulticast" tiptext="Specifies the number of media bytes that the local node has received from IP Multicast." version="" playername="" helpurl="flash.net:NetStreamMulticastInfo:bytesReceivedFromIPMulticast:get"/>
                <string name="bytesReceivedFromServer" object="[flash.net.NetStreamMulticastInfo]" text=".bytesReceivedFromServer" tiptext="Specifies the number of media bytes that the local node has received from the server." version="" playername="" helpurl="flash.net:NetStreamMulticastInfo:bytesReceivedFromServer:get"/>
                <string name="bytesRequestedByPeers" object="[flash.net.NetStreamMulticastInfo]" text=".bytesRequestedByPeers" tiptext="Specifies the number of media bytes that the local node has sent to peers in response to requests from those peers for specific fragments." version="" playername="" helpurl="flash.net:NetStreamMulticastInfo:bytesRequestedByPeers:get"/>
                <string name="bytesRequestedFromPeers" object="[flash.net.NetStreamMulticastInfo]" text=".bytesRequestedFromPeers" tiptext="Specifies the number of media bytes that the local node requested and received from peers." version="" playername="" helpurl="flash.net:NetStreamMulticastInfo:bytesRequestedFromPeers:get"/>
                <string name="fragmentsPushedFromPeers" object="[flash.net.NetStreamMulticastInfo]" text=".fragmentsPushedFromPeers" tiptext="Specifies the number of media fragment messages that were proactively pushed from peers and received by the local node." version="" playername="" helpurl="flash.net:NetStreamMulticastInfo:fragmentsPushedFromPeers:get"/>
                <string name="fragmentsPushedToPeers" object="[flash.net.NetStreamMulticastInfo]" text=".fragmentsPushedToPeers" tiptext="Specifies the number of media fragment messages that the local node has proactively pushed to peers." version="" playername="" helpurl="flash.net:NetStreamMulticastInfo:fragmentsPushedToPeers:get"/>
                <string name="fragmentsReceivedFromIPMulticast" object="[flash.net.NetStreamMulticastInfo]" text=".fragmentsReceivedFromIPMulticast" tiptext="Specifies the number of media fragment messages that the local node has received from IP Multicast." version="" playername="" helpurl="flash.net:NetStreamMulticastInfo:fragmentsReceivedFromIPMulticast:get"/>
                <string name="fragmentsReceivedFromServer" object="[flash.net.NetStreamMulticastInfo]" text=".fragmentsReceivedFromServer" tiptext="Specifies the number of media fragment messages that the local node has received from the server." version="" playername="" helpurl="flash.net:NetStreamMulticastInfo:fragmentsReceivedFromServer:get"/>
                <string name="fragmentsRequestedByPeers" object="[flash.net.NetStreamMulticastInfo]" text=".fragmentsRequestedByPeers" tiptext="Specifies the number of media fragment messages that the local node has sent to peers in response to requests from those peers for specific fragments." version="" playername="" helpurl="flash.net:NetStreamMulticastInfo:fragmentsRequestedByPeers:get"/>
                <string name="fragmentsRequestedFromPeers" object="[flash.net.NetStreamMulticastInfo]" text=".fragmentsRequestedFromPeers" tiptext="Specifies the number of media fragment messages that the local node requested and received from peers." version="" playername="" helpurl="flash.net:NetStreamMulticastInfo:fragmentsRequestedFromPeers:get"/>
                <string name="receiveControlBytesPerSecond" object="[flash.net.NetStreamMulticastInfo]" text=".receiveControlBytesPerSecond" tiptext="Specifies the rate at which the local node is receiving control overhead messages from peers, in bytes per second." version="" playername="" helpurl="flash.net:NetStreamMulticastInfo:receiveControlBytesPerSecond:get"/>
                <string name="receiveDataBytesPerSecondFromIPMulticast" object="[flash.net.NetStreamMulticastInfo]" text=".receiveDataBytesPerSecondFromIPMulticast" tiptext="Specifies the rate at which the local node is receiving data from IP Multicast, in bytes per second." version="" playername="" helpurl="flash.net:NetStreamMulticastInfo:receiveDataBytesPerSecondFromIPMulticast:get"/>
                <string name="receiveDataBytesPerSecondFromServer" object="[flash.net.NetStreamMulticastInfo]" text=".receiveDataBytesPerSecondFromServer" tiptext="Specifies the rate at which the local node is receiving media data from the server, in bytes per second." version="" playername="" helpurl="flash.net:NetStreamMulticastInfo:receiveDataBytesPerSecondFromServer:get"/>
                <string name="receiveDataBytesPerSecond" object="[flash.net.NetStreamMulticastInfo]" text=".receiveDataBytesPerSecond" tiptext="Specifies the rate at which the local node is receiving media data from peers, from the server, and over IP multicast, in bytes per second." version="" playername="" helpurl="flash.net:NetStreamMulticastInfo:receiveDataBytesPerSecond:get"/>
                <string name="sendControlBytesPerSecondToServer" object="[flash.net.NetStreamMulticastInfo]" text=".sendControlBytesPerSecondToServer" tiptext="Specifies the rate at which the local node is sending control overhead messages to the server, in bytes per second." version="" playername="" helpurl="flash.net:NetStreamMulticastInfo:sendControlBytesPerSecondToServer:get"/>
                <string name="sendControlBytesPerSecond" object="[flash.net.NetStreamMulticastInfo]" text=".sendControlBytesPerSecond" tiptext="Specifies the rate at which the local node is sending control overhead messages to peers and the server, in bytes per second." version="" playername="" helpurl="flash.net:NetStreamMulticastInfo:sendControlBytesPerSecond:get"/>
                <string name="sendDataBytesPerSecond" object="[flash.net.NetStreamMulticastInfo]" text=".sendDataBytesPerSecond" tiptext="Specifies the rate at which media data is being sent by the local node to peers, in bytes per second." version="" playername="" helpurl="flash.net:NetStreamMulticastInfo:sendDataBytesPerSecond:get"/>
            </folder>
        </folder>
        <folder name="NetStreamPlayOptions" id="[flash.net.NetStreamPlayOptions]" sort="true" index="true" asAncestors="flash.events:EventDispatcher,Object" tiptext="The NetStreamPlayOptions class specifies the various options that can be passed to the NetStream.play2() method." helpurl="flash.net:NetStreamPlayOptions">
            <folder name="Methods" id="Methods" tiptext="Methods for class NetStreamPlayOptions" helpurl="flash.net:NetStreamPlayOptions">
                <string name="NetStreamPlayOptions" object="[flash.net.NetStreamPlayOptions]" text="new NetStreamPlayOptions(%%)" constructor="true" tiptext="Creates a NetStreamPlayOptions object to specify the options that are passed to the NetStream.play2() method." version="4" playername="" helpurl="flash.net:NetStreamPlayOptions:NetStreamPlayOptions"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class NetStreamPlayOptions" helpurl="flash.net:NetStreamPlayOptions">
                <string name="len" object="[flash.net.NetStreamPlayOptions]" text=".len" tiptext="The duration of playback, in seconds, for the stream specified in streamName." version="" playername="" helpurl="flash.net:NetStreamPlayOptions:len"/>
                <string name="offset" object="[flash.net.NetStreamPlayOptions]" text=".offset" tiptext="The time in seconds in the stream playback at which the switch to a new stream should be made." version="" playername="" helpurl="flash.net:NetStreamPlayOptions:offset"/>
                <string name="oldStreamName" object="[flash.net.NetStreamPlayOptions]" text=".oldStreamName" tiptext="The name of the old stream or the stream to transition from." version="" playername="" helpurl="flash.net:NetStreamPlayOptions:oldStreamName"/>
                <string name="start" object="[flash.net.NetStreamPlayOptions]" text=".start" tiptext="The start time, in seconds, for streamName." version="" playername="" helpurl="flash.net:NetStreamPlayOptions:start"/>
                <string name="streamName" object="[flash.net.NetStreamPlayOptions]" text=".streamName" tiptext="The name of the new stream to transition to or to play." version="" playername="" helpurl="flash.net:NetStreamPlayOptions:streamName"/>
                <string name="transition" object="[flash.net.NetStreamPlayOptions]" text=".transition" tiptext="The mode in which streamName is played or transitioned to." version="" playername="" helpurl="flash.net:NetStreamPlayOptions:transition"/>
            </folder>
        </folder>
        <folder name="NetStreamPlayTransitions" id="[flash.net.NetStreamPlayTransitions]" sort="true" index="true" asAncestors="Object" tiptext="The NetStreamPlayTransitions class specifies the valid strings that you can use with the NetStreamPlayOptions.transition property." helpurl="flash.net:NetStreamPlayTransitions">
            <folder name="Properties" id="Properties" tiptext="Properties for class NetStreamPlayTransitions" helpurl="flash.net:NetStreamPlayTransitions">
                <string name="APPEND_AND_WAIT" object="[flash.net.NetStreamPlayTransitions]" text="NetStreamPlayTransitions.APPEND_AND_WAIT" constant="true" tiptext="Builds a playlist without starting to play it from the first stream." version="" playername="" helpurl="flash.net:NetStreamPlayTransitions:APPEND_AND_WAIT"/>
                <string name="APPEND" object="[flash.net.NetStreamPlayTransitions]" text="NetStreamPlayTransitions.APPEND" constant="true" tiptext="Adds the stream to a playlist and begins playback with the first stream." version="" playername="" helpurl="flash.net:NetStreamPlayTransitions:APPEND"/>
                <string name="RESET" object="[flash.net.NetStreamPlayTransitions]" text="NetStreamPlayTransitions.RESET" constant="true" tiptext="Clears any previous play calls and plays the specified stream immediately." version="" playername="" helpurl="flash.net:NetStreamPlayTransitions:RESET"/>
                <string name="RESUME" object="[flash.net.NetStreamPlayTransitions]" text="NetStreamPlayTransitions.RESUME" constant="true" tiptext="Requests data from the new connection starting from the point at which the previous connection ended." version="" playername="" helpurl="flash.net:NetStreamPlayTransitions:RESUME"/>
                <string name="STOP" object="[flash.net.NetStreamPlayTransitions]" text="NetStreamPlayTransitions.STOP" constant="true" tiptext="Stops playing the streams in a playlist." version="" playername="" helpurl="flash.net:NetStreamPlayTransitions:STOP"/>
                <string name="SWAP" object="[flash.net.NetStreamPlayTransitions]" text="NetStreamPlayTransitions.SWAP" constant="true" tiptext="Replaces a content stream with a different content stream and maintains the rest of the playlist." version="" playername="" helpurl="flash.net:NetStreamPlayTransitions:SWAP"/>
                <string name="SWITCH" object="[flash.net.NetStreamPlayTransitions]" text="NetStreamPlayTransitions.SWITCH" constant="true" tiptext="Switches from playing one stream to another stream, typically with streams of the same content." version="" playername="" helpurl="flash.net:NetStreamPlayTransitions:SWITCH"/>
            </folder>
        </folder>
        <folder name="NetworkInfo" id="[flash.net.NetworkInfo]" sort="true" index="true" asAncestors="flash.events:EventDispatcher,Object" tiptext="The NetworkInfo class provides information about the network interfaces on a computer." helpurl="flash.net:NetworkInfo">
            <folder name="Methods" id="Methods" tiptext="Methods for class NetworkInfo" helpurl="flash.net:NetworkInfo">
                <string name="findInterfaces" object="[flash.net.NetworkInfo]" text=".findInterfaces(%%):Vector$flash.net:NetworkInterface" tiptext="Returns the list of network interfaces associated with this machine." version="2" playername="AIR" helpurl="flash.net:NetworkInfo:findInterfaces"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class NetworkInfo" helpurl="flash.net:NetworkInfo">
                <string name="isSupported" object="[flash.net.NetworkInfo]" text=".isSupported" tiptext="Indicates whether access to network interface information is supported on the client system." version="" playername="AIR" helpurl="flash.net:NetworkInfo:isSupported:get"/>
                <string name="networkInfo" object="[flash.net.NetworkInfo]" text=".networkInfo" tiptext="The singleton instance of the NetworkInfo object." version="" playername="AIR" helpurl="flash.net:NetworkInfo:networkInfo:get"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class NetworkInfo" helpurl="flash.net:NetworkInfo">
                <string name="networkChange" object="[flash.net.NetworkInfo]" text=".addEventListener(%type:String=Event.NETWORK_CHANGE{Event.NETWORK_CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the network interfaces have changed." version="" playername="AIR" helpurl="flash.net:NetworkInfo_flash.events.Event.NETWORK_CHANGE_networkChange"/>
            </folder>
        </folder>
        <folder name="NetworkInterface" id="[flash.net.NetworkInterface]" sort="true" index="true" asAncestors="Object" tiptext="The NetworkInterface class describes a network interface." helpurl="flash.net:NetworkInterface">
            <folder name="Properties" id="Properties" tiptext="Properties for class NetworkInterface" helpurl="flash.net:NetworkInterface">
                <string name="active" object="[flash.net.NetworkInterface]" text=".active" tiptext="Reports whether this interface is active." version="" playername="AIR" helpurl="flash.net:NetworkInterface:active:get"/>
                <string name="addresses" object="[flash.net.NetworkInterface]" text=".addresses" tiptext="The list of the addresses bound to this network interface." version="" playername="AIR" helpurl="flash.net:NetworkInterface:addresses:get"/>
                <string name="displayName" object="[flash.net.NetworkInterface]" text=".displayName" tiptext="The display name of this network interface." version="" playername="AIR" helpurl="flash.net:NetworkInterface:displayName:get"/>
                <string name="hardwareAddress" object="[flash.net.NetworkInterface]" text=".hardwareAddress" tiptext="The hardware address of this network interface." version="" playername="AIR" helpurl="flash.net:NetworkInterface:hardwareAddress:get"/>
                <string name="mtu" object="[flash.net.NetworkInterface]" text=".mtu" tiptext="The maximum transmission unit (MTU) of this network interface." version="" playername="AIR" helpurl="flash.net:NetworkInterface:mtu:get"/>
                <string name="name" object="[flash.net.NetworkInterface]" text=".name" tiptext="The name of this network interface." version="" playername="AIR" helpurl="flash.net:NetworkInterface:name:get"/>
                <string name="parent" object="[flash.net.NetworkInterface]" text=".parent" tiptext="The NetworkInterface object representing the parent interface (if this interface has a parent)." version="" playername="AIR" helpurl="flash.net:NetworkInterface:parent:get"/>
                <string name="subInterfaces" object="[flash.net.NetworkInterface]" text=".subInterfaces" tiptext="The list of subinterfaces attached to this network interface." version="" playername="AIR" helpurl="flash.net:NetworkInterface:subInterfaces:get"/>
            </folder>
        </folder>
        <folder name="Methods" id="Methods" tiptext="Methods for package flash.net" helpurl="flash.net">
            <string name="getClassByAlias" text="getClassByAlias(%aliasName:String%):Class" tiptext="Looks up a class that previously had an alias registered through a call to the registerClassAlias() method." version="4" playername="" helpurl="flash.net:getClassByAlias"/>
            <string name="navigateToURL" text="navigateToURL(%request:flash.net:URLRequest[,window:String=null]%):void" tiptext="Opens or replaces a window in the application that contains the Flash Player container (usually a browser)." version="4" playername="" helpurl="flash.net:navigateToURL"/>
            <string name="registerClassAlias" text="registerClassAlias(%aliasName:String,classObject:Class%):void" tiptext="Preserves the class (type) of an object when the object is encoded in Action Message Format (AMF)." version="4" playername="" helpurl="flash.net:registerClassAlias"/>
            <string name="sendToURL" text="sendToURL(%request:flash.net:URLRequest%):void" tiptext="Sends a URL request to a server, but ignores any response." version="4" playername="" helpurl="flash.net:sendToURL"/>
        </folder>
        <folder name="ObjectEncoding" id="[flash.net.ObjectEncoding]" sort="true" index="true" asAncestors="Object" tiptext="The ObjectEncoding class is used in defining serialization settings in classes that serialize objects (such as FileStream, NetStream, NetConnection, SharedObject, and ByteArray) to work with prior versions of ActionScript." helpurl="flash.net:ObjectEncoding">
            <folder name="Properties" id="Properties" tiptext="Properties for class ObjectEncoding" helpurl="flash.net:ObjectEncoding">
                <string name="AMF0" object="[flash.net.ObjectEncoding]" text="ObjectEncoding.AMF0" constant="true" tiptext="Specifies that objects are serialized using the Action Message Format for ActionScript 1.0 and 2.0." version="" playername="" helpurl="flash.net:ObjectEncoding:AMF0"/>
                <string name="AMF3" object="[flash.net.ObjectEncoding]" text="ObjectEncoding.AMF3" constant="true" tiptext="Specifies that objects are serialized using the Action Message Format for ActionScript 3.0." version="" playername="" helpurl="flash.net:ObjectEncoding:AMF3"/>
                <string name="DEFAULT" object="[flash.net.ObjectEncoding]" text="ObjectEncoding.DEFAULT" constant="true" tiptext="Specifies the default (latest) format for the current runtime (either Flash Player or AIR)." version="" playername="" helpurl="flash.net:ObjectEncoding:DEFAULT"/>
                <string name="dynamicPropertyWriter" object="[flash.net.ObjectEncoding]" text=".dynamicPropertyWriter" tiptext="Allows greater control over the serialization of dynamic properties of dynamic objects." version="" playername="" helpurl="flash.net:ObjectEncoding:dynamicPropertyWriter:get"/>
            </folder>
        </folder>
        <folder name="Responder" id="[flash.net.Responder]" sort="true" index="true" asAncestors="Object" tiptext="The Responder class provides an object that is used in NetConnection.call() to handle return values from the server related to the success or failure of specific operations." helpurl="flash.net:Responder">
            <folder name="Methods" id="Methods" tiptext="Methods for class Responder" helpurl="flash.net:Responder">
                <string name="Responder" object="[flash.net.Responder]" text="new Responder(%result:Function[,status:Function=null]%)" constructor="true" tiptext="Creates a new Responder object." version="4" playername="" helpurl="flash.net:Responder:Responder"/>
            </folder>
        </folder>
        <folder name="SecureSocket" id="[flash.net.SecureSocket]" sort="true" index="true" asAncestors="flash.net:Socket,flash.events:EventDispatcher,Object" tiptext="The SecureSocket class enables code to make socket connections utilizing the Secure Sockets Layer (SSL) and Transport Layer Security (TLS) protocols." helpurl="flash.net:SecureSocket">
            <folder name="Methods" id="Methods" tiptext="Methods for class SecureSocket" helpurl="flash.net:SecureSocket">
                <string name="SecureSocket" object="[flash.net.SecureSocket]" text="new SecureSocket(%%)" constructor="true" tiptext="Creates a new SecureSocket object." version="2" playername="AIR" helpurl="flash.net:SecureSocket:SecureSocket"/>
                <string name="connect" object="[flash.net.SecureSocket]" text=".connect(%host:String,port:int%):void" tiptext="Connects the socket to the specified host and port using SSL or TLS." version="2" playername="AIR" helpurl="flash.net:SecureSocket:connect"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class SecureSocket" helpurl="flash.net:SecureSocket">
                <string name="isSupported" object="[flash.net.SecureSocket]" text=".isSupported" tiptext="Indicates whether the secure sockets are supported on the current system." version="" playername="AIR" helpurl="flash.net:SecureSocket:isSupported:get"/>
                <string name="serverCertificateStatus" object="[flash.net.SecureSocket]" text=".serverCertificateStatus" tiptext="The status of the server&apos;s certificate." version="" playername="AIR" helpurl="flash.net:SecureSocket:serverCertificateStatus:get"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class SecureSocket" helpurl="flash.net:SecureSocket">
                <string name="socketData" object="[flash.net.SecureSocket]" text=".addEventListener(%type:String=ProgressEvent.SOCKET_DATA{ProgressEvent.SOCKET_DATA,IOErrorEvent.IO_ERROR,Event.CONNECT,Event.CLOSE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a socket has received data." version="" playername="AIR" helpurl="flash.net:SecureSocket_flash.events.ProgressEvent.SOCKET_DATA_socketData"/>
                <string name="ioError" object="[flash.net.SecureSocket]" text=".addEventListener(%type:String=IOErrorEvent.IO_ERROR{ProgressEvent.SOCKET_DATA,IOErrorEvent.IO_ERROR,Event.CONNECT,Event.CLOSE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when an input or output error occurs that causes a send or receive operation to fail." version="" playername="AIR" helpurl="flash.net:SecureSocket_flash.events.IOErrorEvent.IO_ERROR_ioError"/>
                <string name="connect" object="[flash.net.SecureSocket]" text=".addEventListener(%type:String=Event.CONNECT{ProgressEvent.SOCKET_DATA,IOErrorEvent.IO_ERROR,Event.CONNECT,Event.CLOSE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a network connection has been established." version="" playername="AIR" helpurl="flash.net:SecureSocket_flash.events.Event.CONNECT_connect"/>
                <string name="close" object="[flash.net.SecureSocket]" text=".addEventListener(%type:String=Event.CLOSE{ProgressEvent.SOCKET_DATA,IOErrorEvent.IO_ERROR,Event.CONNECT,Event.CLOSE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the server closes the socket connection." version="" playername="AIR" helpurl="flash.net:SecureSocket_flash.events.Event.CLOSE_close"/>
            </folder>
        </folder>
        <folder name="ServerSocket" id="[flash.net.ServerSocket]" sort="true" index="true" asAncestors="flash.events:EventDispatcher,Object" tiptext="The ServerSocket class allows code to act as a server for Transport Control Protocol (TCP) connections." helpurl="flash.net:ServerSocket">
            <folder name="Methods" id="Methods" tiptext="Methods for class ServerSocket" helpurl="flash.net:ServerSocket">
                <string name="ServerSocket" object="[flash.net.ServerSocket]" text="new ServerSocket(%%)" constructor="true" tiptext="Creates a ServerSocket object." version="2" playername="AIR" helpurl="flash.net:ServerSocket:ServerSocket"/>
                <string name="bind" object="[flash.net.ServerSocket]" text=".bind(%[localPort:int=0,localAddress:String=0.0.0.0]%):void" tiptext="Binds this socket to the specified local address and port." version="2" playername="AIR" helpurl="flash.net:ServerSocket:bind"/>
                <string name="close" object="[flash.net.ServerSocket]" text=".close(%%):void" tiptext="Closes the socket and stops listening for connections." version="2" playername="AIR" helpurl="flash.net:ServerSocket:close"/>
                <string name="listen" object="[flash.net.ServerSocket]" text=".listen(%[backlog:int=0]%):void" tiptext="Initiates listening for TCP connections on the bound IP address and port." version="2" playername="AIR" helpurl="flash.net:ServerSocket:listen"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class ServerSocket" helpurl="flash.net:ServerSocket">
                <string name="bound" object="[flash.net.ServerSocket]" text=".bound" tiptext="Indicates whether the socket is bound to a local address and port." version="" playername="AIR" helpurl="flash.net:ServerSocket:bound:get"/>
                <string name="isSupported" object="[flash.net.ServerSocket]" text=".isSupported" tiptext="Indicates whether or not ServerSocket features are supported in the run-time environment." version="" playername="AIR" helpurl="flash.net:ServerSocket:isSupported:get"/>
                <string name="listening" object="[flash.net.ServerSocket]" text=".listening" tiptext="Indicates whether the server socket is listening for incoming connections." version="" playername="AIR" helpurl="flash.net:ServerSocket:listening:get"/>
                <string name="localAddress" object="[flash.net.ServerSocket]" text=".localAddress" tiptext="The IP address on which the socket is listening." version="" playername="AIR" helpurl="flash.net:ServerSocket:localAddress:get"/>
                <string name="localPort" object="[flash.net.ServerSocket]" text=".localPort" tiptext="The port on which the socket is listening." version="" playername="AIR" helpurl="flash.net:ServerSocket:localPort:get"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class ServerSocket" helpurl="flash.net:ServerSocket">
                <string name="connect" object="[flash.net.ServerSocket]" text=".addEventListener(%type:String=ServerSocketConnectEvent.CONNECT{ServerSocketConnectEvent.CONNECT,Event.CLOSE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a remote socket seeks to connect to this server socket." version="" playername="AIR" helpurl="flash.net:ServerSocket__connect"/>
                <string name="close" object="[flash.net.ServerSocket]" text=".addEventListener(%type:String=Event.CLOSE{ServerSocketConnectEvent.CONNECT,Event.CLOSE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the operating system closes this socket." version="" playername="AIR" helpurl="flash.net:ServerSocket_flash.events.Event.CLOSE_close"/>
            </folder>
        </folder>
        <folder name="SharedObject" id="[flash.net.SharedObject]" sort="true" index="true" asAncestors="flash.events:EventDispatcher,Object" tiptext="The SharedObject class is used to read and store limited amounts of data on a user&apos;s computer or on a server." helpurl="flash.net:SharedObject">
            <folder name="Methods" id="Methods" tiptext="Methods for class SharedObject" helpurl="flash.net:SharedObject">
                <string name="clear" object="[flash.net.SharedObject]" text=".clear(%%):void" tiptext="For local shared objects, purges all of the data and deletes the shared object from the disk." version="4" playername="" helpurl="flash.net:SharedObject:clear"/>
                <string name="close" object="[flash.net.SharedObject]" text=".close(%%):void" tiptext="Closes the connection between a remote shared object and the server." version="4" playername="" helpurl="flash.net:SharedObject:close"/>
                <string name="connect" object="[flash.net.SharedObject]" text=".connect(%myConnection:flash.net:NetConnection[,params:String=null]%):void" tiptext="Connects to a remote shared object on a server through a specified NetConnection object." version="4" playername="" helpurl="flash.net:SharedObject:connect"/>
                <string name="flush" object="[flash.net.SharedObject]" text=".flush(%[minDiskSpace:int=0]%):String" tiptext="Immediately writes a locally persistent shared object to a local file." version="4" playername="" helpurl="flash.net:SharedObject:flush"/>
                <string name="getLocal" object="[flash.net.SharedObject]" text="SharedObject.getLocal(%name:String[,localPath:String=null,secure:Boolean=false]%):flash.net:SharedObject" static="true" tiptext="Returns a reference to a locally persistent shared object that is only available to the current client." version="4" playername="" helpurl="flash.net:SharedObject:getLocal"/>
                <string name="getRemote" object="[flash.net.SharedObject]" text="SharedObject.getRemote(%name:String[,remotePath:String=null,persistence:Object=false,secure:Boolean=false]%):flash.net:SharedObject" static="true" tiptext="Returns a reference to a shared object on Flash Media Server that multiple clients can access." version="4" playername="" helpurl="flash.net:SharedObject:getRemote"/>
                <string name="send" object="[flash.net.SharedObject]" text=".send(%arguments:restParam%):void" tiptext="Broadcasts a message to all clients connected to a remote shared object, including the client that sent the message." version="4" playername="" helpurl="flash.net:SharedObject:send"/>
                <string name="setDirty" object="[flash.net.SharedObject]" text=".setDirty(%propertyName:String%):void" tiptext="Indicates to the server that the value of a property in the shared object has changed." version="4" playername="" helpurl="flash.net:SharedObject:setDirty"/>
                <string name="setProperty" object="[flash.net.SharedObject]" text=".setProperty(%propertyName:String[,value:Object=null]%):void" tiptext="Updates the value of a property in a shared object and indicates to the server that the value of the property has changed." version="4" playername="" helpurl="flash.net:SharedObject:setProperty"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class SharedObject" helpurl="flash.net:SharedObject">
                <string name="client" object="[flash.net.SharedObject]" text=".client" tiptext="Indicates the object on which callback methods are invoked." version="" playername="" helpurl="flash.net:SharedObject:client:get"/>
                <string name="data" object="[flash.net.SharedObject]" text=".data" tiptext="The collection of attributes assigned to the data property of the object; these attributes can be shared and stored." version="" playername="" helpurl="flash.net:SharedObject:data:get"/>
                <string name="defaultObjectEncoding" object="[flash.net.SharedObject]" text=".defaultObjectEncoding" tiptext="The default object encoding (AMF version) for all local shared objects created in the SWF file." version="" playername="" helpurl="flash.net:SharedObject:defaultObjectEncoding:get"/>
                <string name="objectEncoding" object="[flash.net.SharedObject]" text=".objectEncoding" tiptext="The object encoding (AMF version) for this shared object." version="" playername="" helpurl="flash.net:SharedObject:objectEncoding:get"/>
                <string name="size" object="[flash.net.SharedObject]" text=".size" tiptext="The current size of the shared object, in bytes." version="" playername="" helpurl="flash.net:SharedObject:size:get"/>
                <string name="fps" object="[flash.net.SharedObject]" text=".fps" tiptext="Specifies the number of times per second that a client&apos;s changes to a shared object are sent to the server." version="" playername="" helpurl="flash.net:SharedObject:fps:set"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class SharedObject" helpurl="flash.net:SharedObject">
                <string name="sync" object="[flash.net.SharedObject]" text=".addEventListener(%type:String=SyncEvent.SYNC{SyncEvent.SYNC,NetStatusEvent.NET_STATUS,AsyncErrorEvent.ASYNC_ERROR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a remote shared object has been updated by the server." version="" playername="" helpurl="flash.net:SharedObject_flash.events.SyncEvent.SYNC_sync"/>
                <string name="netStatus" object="[flash.net.SharedObject]" text=".addEventListener(%type:String=NetStatusEvent.NET_STATUS{SyncEvent.SYNC,NetStatusEvent.NET_STATUS,AsyncErrorEvent.ASYNC_ERROR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a SharedObject instance is reporting its status or error condition." version="" playername="" helpurl="flash.net:SharedObject_flash.events.NetStatusEvent.NET_STATUS_netStatus"/>
                <string name="asyncError" object="[flash.net.SharedObject]" text=".addEventListener(%type:String=AsyncErrorEvent.ASYNC_ERROR{SyncEvent.SYNC,NetStatusEvent.NET_STATUS,AsyncErrorEvent.ASYNC_ERROR},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when an exception is thrown asynchronously -- that is, from native asynchronous code." version="" playername="" helpurl="flash.net:SharedObject_flash.events.AsyncErrorEvent.ASYNC_ERROR_asyncError"/>
            </folder>
        </folder>
        <folder name="SharedObjectFlushStatus" id="[flash.net.SharedObjectFlushStatus]" sort="true" index="true" asAncestors="Object" tiptext="The SharedObjectFlushStatus class provides values for the code returned from a call to the SharedObject.flush() method." helpurl="flash.net:SharedObjectFlushStatus">
            <folder name="Properties" id="Properties" tiptext="Properties for class SharedObjectFlushStatus" helpurl="flash.net:SharedObjectFlushStatus">
                <string name="FLUSHED" object="[flash.net.SharedObjectFlushStatus]" text="SharedObjectFlushStatus.FLUSHED" constant="true" tiptext="Indicates that the flush completed successfully." version="" playername="" helpurl="flash.net:SharedObjectFlushStatus:FLUSHED"/>
                <string name="PENDING" object="[flash.net.SharedObjectFlushStatus]" text="SharedObjectFlushStatus.PENDING" constant="true" tiptext="Indicates that the user is being prompted to increase disk space for the shared object before the flush can occur." version="" playername="" helpurl="flash.net:SharedObjectFlushStatus:PENDING"/>
            </folder>
        </folder>
        <folder name="Socket" id="[flash.net.Socket]" sort="true" index="true" asAncestors="flash.events:EventDispatcher,Object" tiptext="The Socket class enables code to establish Transport Control Protocol (TCP) socket connections for sending and receiving binary data." helpurl="flash.net:Socket">
            <folder name="Methods" id="Methods" tiptext="Methods for class Socket" helpurl="flash.net:Socket">
                <string name="Socket" object="[flash.net.Socket]" text="new Socket(%[host:String=null,port:int=0]%)" constructor="true" tiptext="Creates a new Socket object." version="4" playername="" helpurl="flash.net:Socket:Socket"/>
                <string name="close" object="[flash.net.Socket]" text=".close(%%):void" tiptext="Closes the socket." version="4" playername="" helpurl="flash.net:Socket:close"/>
                <string name="connect" object="[flash.net.Socket]" text=".connect(%host:String,port:int%):void" tiptext="Connects the socket to the specified host and port." version="4" playername="" helpurl="flash.net:Socket:connect"/>
                <string name="flush" object="[flash.net.Socket]" text=".flush(%%):void" tiptext="Flushes any accumulated data in the socket&apos;s output buffer." version="4" playername="" helpurl="flash.net:Socket:flush"/>
                <string name="readBoolean" object="[flash.net.Socket]" text=".readBoolean(%%):Boolean" tiptext="Reads a Boolean value from the socket." version="4" playername="" helpurl="flash.net:Socket:readBoolean"/>
                <string name="readByte" object="[flash.net.Socket]" text=".readByte(%%):int" tiptext="Reads a signed byte from the socket." version="4" playername="" helpurl="flash.net:Socket:readByte"/>
                <string name="readBytes" object="[flash.net.Socket]" text=".readBytes(%bytes:flash.utils:ByteArray[,offset:uint=0,length:uint=0]%):void" tiptext="Reads the number of data bytes specified by the length parameter from the socket." version="4" playername="" helpurl="flash.net:Socket:readBytes"/>
                <string name="readDouble" object="[flash.net.Socket]" text=".readDouble(%%):Number" tiptext="Reads an IEEE 754 double-precision floating-point number from the socket." version="4" playername="" helpurl="flash.net:Socket:readDouble"/>
                <string name="readFloat" object="[flash.net.Socket]" text=".readFloat(%%):Number" tiptext="Reads an IEEE 754 single-precision floating-point number from the socket." version="4" playername="" helpurl="flash.net:Socket:readFloat"/>
                <string name="readInt" object="[flash.net.Socket]" text=".readInt(%%):int" tiptext="Reads a signed 32-bit integer from the socket." version="4" playername="" helpurl="flash.net:Socket:readInt"/>
                <string name="readMultiByte" object="[flash.net.Socket]" text=".readMultiByte(%length:uint,charSet:String%):String" tiptext="Reads a multibyte string from the byte stream, using the specified character set." version="4" playername="" helpurl="flash.net:Socket:readMultiByte"/>
                <string name="readObject" object="[flash.net.Socket]" text=".readObject(%%)" tiptext="Reads an object from the socket, encoded in AMF serialized format." version="4" playername="" helpurl="flash.net:Socket:readObject"/>
                <string name="readShort" object="[flash.net.Socket]" text=".readShort(%%):int" tiptext="Reads a signed 16-bit integer from the socket." version="4" playername="" helpurl="flash.net:Socket:readShort"/>
                <string name="readUTFBytes" object="[flash.net.Socket]" text=".readUTFBytes(%length:uint%):String" tiptext="Reads the number of UTF-8 data bytes specified by the length parameter from the socket, and returns a string." version="4" playername="" helpurl="flash.net:Socket:readUTFBytes"/>
                <string name="readUTF" object="[flash.net.Socket]" text=".readUTF(%%):String" tiptext="Reads a UTF-8 string from the socket." version="4" playername="" helpurl="flash.net:Socket:readUTF"/>
                <string name="readUnsignedByte" object="[flash.net.Socket]" text=".readUnsignedByte(%%):uint" tiptext="Reads an unsigned byte from the socket." version="4" playername="" helpurl="flash.net:Socket:readUnsignedByte"/>
                <string name="readUnsignedInt" object="[flash.net.Socket]" text=".readUnsignedInt(%%):uint" tiptext="Reads an unsigned 32-bit integer from the socket." version="4" playername="" helpurl="flash.net:Socket:readUnsignedInt"/>
                <string name="readUnsignedShort" object="[flash.net.Socket]" text=".readUnsignedShort(%%):uint" tiptext="Reads an unsigned 16-bit integer from the socket." version="4" playername="" helpurl="flash.net:Socket:readUnsignedShort"/>
                <string name="writeBoolean" object="[flash.net.Socket]" text=".writeBoolean(%value:Boolean%):void" tiptext="Writes a Boolean value to the socket." version="4" playername="" helpurl="flash.net:Socket:writeBoolean"/>
                <string name="writeByte" object="[flash.net.Socket]" text=".writeByte(%value:int%):void" tiptext="Writes a byte to the socket." version="4" playername="" helpurl="flash.net:Socket:writeByte"/>
                <string name="writeBytes" object="[flash.net.Socket]" text=".writeBytes(%bytes:flash.utils:ByteArray[,offset:uint=0,length:uint=0]%):void" tiptext="Writes a sequence of bytes from the specified byte array." version="4" playername="" helpurl="flash.net:Socket:writeBytes"/>
                <string name="writeDouble" object="[flash.net.Socket]" text=".writeDouble(%value:Number%):void" tiptext="Writes an IEEE 754 double-precision floating-point number to the socket." version="4" playername="" helpurl="flash.net:Socket:writeDouble"/>
                <string name="writeFloat" object="[flash.net.Socket]" text=".writeFloat(%value:Number%):void" tiptext="Writes an IEEE 754 single-precision floating-point number to the socket." version="4" playername="" helpurl="flash.net:Socket:writeFloat"/>
                <string name="writeInt" object="[flash.net.Socket]" text=".writeInt(%value:int%):void" tiptext="Writes a 32-bit signed integer to the socket." version="4" playername="" helpurl="flash.net:Socket:writeInt"/>
                <string name="writeMultiByte" object="[flash.net.Socket]" text=".writeMultiByte(%value:String,charSet:String%):void" tiptext="Writes a multibyte string from the byte stream, using the specified character set." version="4" playername="" helpurl="flash.net:Socket:writeMultiByte"/>
                <string name="writeObject" object="[flash.net.Socket]" text=".writeObject(%object:*%):void" tiptext="Write an object to the socket in AMF serialized format." version="4" playername="" helpurl="flash.net:Socket:writeObject"/>
                <string name="writeShort" object="[flash.net.Socket]" text=".writeShort(%value:int%):void" tiptext="Writes a 16-bit integer to the socket." version="4" playername="" helpurl="flash.net:Socket:writeShort"/>
                <string name="writeUTFBytes" object="[flash.net.Socket]" text=".writeUTFBytes(%value:String%):void" tiptext="Writes a UTF-8 string to the socket." version="4" playername="" helpurl="flash.net:Socket:writeUTFBytes"/>
                <string name="writeUTF" object="[flash.net.Socket]" text=".writeUTF(%value:String%):void" tiptext="Writes the following data to the socket: a 16-bit unsigned integer, which indicates the length of the specified UTF-8 string in bytes, followed by the string itself." version="4" playername="" helpurl="flash.net:Socket:writeUTF"/>
                <string name="writeUnsignedInt" object="[flash.net.Socket]" text=".writeUnsignedInt(%value:uint%):void" tiptext="Writes a 32-bit unsigned integer to the socket." version="4" playername="" helpurl="flash.net:Socket:writeUnsignedInt"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class Socket" helpurl="flash.net:Socket">
                <string name="bytesAvailable" object="[flash.net.Socket]" text=".bytesAvailable" tiptext="The number of bytes of data available for reading in the input buffer." version="" playername="" helpurl="flash.net:Socket:bytesAvailable:get"/>
                <string name="connected" object="[flash.net.Socket]" text=".connected" tiptext="Indicates whether this Socket object is currently connected." version="" playername="" helpurl="flash.net:Socket:connected:get"/>
                <string name="endian" object="[flash.net.Socket]" text=".endian" tiptext="Indicates the byte order for the data." version="" playername="" helpurl="flash.net:Socket:endian:get"/>
                <string name="localAddress" object="[flash.net.Socket]" text=".localAddress" tiptext="The IP address this socket is bound to on the local machine." version="" playername="AIR" helpurl="flash.net:Socket:localAddress:get"/>
                <string name="localPort" object="[flash.net.Socket]" text=".localPort" tiptext="The port this socket is bound to on the local machine." version="" playername="AIR" helpurl="flash.net:Socket:localPort:get"/>
                <string name="objectEncoding" object="[flash.net.Socket]" text=".objectEncoding" tiptext="Controls the version of AMF used when writing or reading an object." version="" playername="" helpurl="flash.net:Socket:objectEncoding:get"/>
                <string name="remoteAddress" object="[flash.net.Socket]" text=".remoteAddress" tiptext="The IP address of the remote machine to which this socket is connected." version="" playername="AIR" helpurl="flash.net:Socket:remoteAddress:get"/>
                <string name="remotePort" object="[flash.net.Socket]" text=".remotePort" tiptext="The port on the remote machine to which this socket is connected." version="" playername="AIR" helpurl="flash.net:Socket:remotePort:get"/>
                <string name="timeout" object="[flash.net.Socket]" text=".timeout" tiptext="Indicates the number of milliseconds to wait for a connection." version="" playername="" helpurl="flash.net:Socket:timeout:get"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class Socket" helpurl="flash.net:Socket">
                <string name="securityError" object="[flash.net.Socket]" text=".addEventListener(%type:String=SecurityErrorEvent.SECURITY_ERROR{SecurityErrorEvent.SECURITY_ERROR,ProgressEvent.SOCKET_DATA,IOErrorEvent.IO_ERROR,Event.CONNECT,Event.CLOSE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched if a call to Socket.connect() attempts to connect to a server prohibited by the caller&apos;s security sandbox or to a port lower than 1024 and no socket policy file exists to permit such a connection." version="" playername="" helpurl="flash.net:Socket_flash.events.SecurityErrorEvent.SECURITY_ERROR_securityError"/>
                <string name="socketData" object="[flash.net.Socket]" text=".addEventListener(%type:String=ProgressEvent.SOCKET_DATA{SecurityErrorEvent.SECURITY_ERROR,ProgressEvent.SOCKET_DATA,IOErrorEvent.IO_ERROR,Event.CONNECT,Event.CLOSE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a socket has received data." version="" playername="" helpurl="flash.net:Socket_flash.events.ProgressEvent.SOCKET_DATA_socketData"/>
                <string name="ioError" object="[flash.net.Socket]" text=".addEventListener(%type:String=IOErrorEvent.IO_ERROR{SecurityErrorEvent.SECURITY_ERROR,ProgressEvent.SOCKET_DATA,IOErrorEvent.IO_ERROR,Event.CONNECT,Event.CLOSE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when an input/output error occurs that causes a send or load operation to fail." version="" playername="" helpurl="flash.net:Socket_flash.events.IOErrorEvent.IO_ERROR_ioError"/>
                <string name="connect" object="[flash.net.Socket]" text=".addEventListener(%type:String=Event.CONNECT{SecurityErrorEvent.SECURITY_ERROR,ProgressEvent.SOCKET_DATA,IOErrorEvent.IO_ERROR,Event.CONNECT,Event.CLOSE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a network connection has been established." version="" playername="" helpurl="flash.net:Socket_flash.events.Event.CONNECT_connect"/>
                <string name="close" object="[flash.net.Socket]" text=".addEventListener(%type:String=Event.CLOSE{SecurityErrorEvent.SECURITY_ERROR,ProgressEvent.SOCKET_DATA,IOErrorEvent.IO_ERROR,Event.CONNECT,Event.CLOSE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the server closes the socket connection." version="" playername="" helpurl="flash.net:Socket_flash.events.Event.CLOSE_close"/>
            </folder>
        </folder>
        <folder name="URLLoader" id="[flash.net.URLLoader]" sort="true" index="true" asAncestors="flash.events:EventDispatcher,Object" tiptext="The URLLoader class downloads data from a URL as text, binary data, or URL-encoded variables." helpurl="flash.net:URLLoader">
            <folder name="Methods" id="Methods" tiptext="Methods for class URLLoader" helpurl="flash.net:URLLoader">
                <string name="URLLoader" object="[flash.net.URLLoader]" text="new URLLoader(%[request:flash.net:URLRequest=null]%)" constructor="true" tiptext="Creates a URLLoader object." version="4" playername="" helpurl="flash.net:URLLoader:URLLoader"/>
                <string name="addEventListener" object="[flash.net.URLLoader]" text=".addEventListener(%type:String,listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Registers an event listener object with an EventDispatcher object so that the listener receives notification of an event." version="4" playername="" helpurl="flash.net:URLLoader:addEventListener"/>
                <string name="close" object="[flash.net.URLLoader]" text=".close(%%):void" tiptext="Closes the load operation in progress." version="4" playername="" helpurl="flash.net:URLLoader:close"/>
                <string name="load" object="[flash.net.URLLoader]" text=".load(%request:flash.net:URLRequest%):void" tiptext="Sends and loads data from the specified URL." version="4" playername="" helpurl="flash.net:URLLoader:load"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class URLLoader" helpurl="flash.net:URLLoader">
                <string name="bytesLoaded" object="[flash.net.URLLoader]" text=".bytesLoaded" tiptext="Indicates the number of bytes that have been loaded thus far during the load operation." version="" playername="" helpurl="flash.net:URLLoader:bytesLoaded"/>
                <string name="bytesTotal" object="[flash.net.URLLoader]" text=".bytesTotal" tiptext="Indicates the total number of bytes in the downloaded data." version="" playername="" helpurl="flash.net:URLLoader:bytesTotal"/>
                <string name="dataFormat" object="[flash.net.URLLoader]" text=".dataFormat" tiptext="Controls whether the downloaded data is received as text (URLLoaderDataFormat.TEXT), raw binary data (URLLoaderDataFormat.BINARY), or URL-encoded variables (URLLoaderDataFormat.VARIABLES)." version="" playername="" helpurl="flash.net:URLLoader:dataFormat"/>
                <string name="data" object="[flash.net.URLLoader]" text=".data" tiptext="The data received from the load operation." version="" playername="" helpurl="flash.net:URLLoader:data"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class URLLoader" helpurl="flash.net:URLLoader">
                <string name="httpResponseStatus" object="[flash.net.URLLoader]" text=".addEventListener(%type:String=HTTPStatusEvent.HTTP_RESPONSE_STATUS{HTTPStatusEvent.HTTP_RESPONSE_STATUS,HTTPStatusEvent.HTTP_STATUS,SecurityErrorEvent.SECURITY_ERROR,IOErrorEvent.IO_ERROR,ProgressEvent.PROGRESS,Event.COMPLETE,Event.OPEN},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched if a call to the load() method attempts to access data over HTTP, and Adobe AIR is able to detect and return the status code for the request." version="" playername="" helpurl="flash.net:URLLoader_flash.events.HTTPStatusEvent.HTTP_RESPONSE_STATUS_httpResponseStatus"/>
                <string name="httpStatus" object="[flash.net.URLLoader]" text=".addEventListener(%type:String=HTTPStatusEvent.HTTP_STATUS{HTTPStatusEvent.HTTP_RESPONSE_STATUS,HTTPStatusEvent.HTTP_STATUS,SecurityErrorEvent.SECURITY_ERROR,IOErrorEvent.IO_ERROR,ProgressEvent.PROGRESS,Event.COMPLETE,Event.OPEN},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched if a call to URLLoader.load() attempts to access data over HTTP." version="" playername="" helpurl="flash.net:URLLoader_flash.events.HTTPStatusEvent.HTTP_STATUS_httpStatus"/>
                <string name="securityError" object="[flash.net.URLLoader]" text=".addEventListener(%type:String=SecurityErrorEvent.SECURITY_ERROR{HTTPStatusEvent.HTTP_RESPONSE_STATUS,HTTPStatusEvent.HTTP_STATUS,SecurityErrorEvent.SECURITY_ERROR,IOErrorEvent.IO_ERROR,ProgressEvent.PROGRESS,Event.COMPLETE,Event.OPEN},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched if a call to URLLoader.load() attempts to load data from a server outside the security sandbox." version="" playername="" helpurl="flash.net:URLLoader_flash.events.SecurityErrorEvent.SECURITY_ERROR_securityError"/>
                <string name="ioError" object="[flash.net.URLLoader]" text=".addEventListener(%type:String=IOErrorEvent.IO_ERROR{HTTPStatusEvent.HTTP_RESPONSE_STATUS,HTTPStatusEvent.HTTP_STATUS,SecurityErrorEvent.SECURITY_ERROR,IOErrorEvent.IO_ERROR,ProgressEvent.PROGRESS,Event.COMPLETE,Event.OPEN},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched if a call to URLLoader.load() results in a fatal error that terminates the download." version="" playername="" helpurl="flash.net:URLLoader_flash.events.IOErrorEvent.IO_ERROR_ioError"/>
                <string name="progress" object="[flash.net.URLLoader]" text=".addEventListener(%type:String=ProgressEvent.PROGRESS{HTTPStatusEvent.HTTP_RESPONSE_STATUS,HTTPStatusEvent.HTTP_STATUS,SecurityErrorEvent.SECURITY_ERROR,IOErrorEvent.IO_ERROR,ProgressEvent.PROGRESS,Event.COMPLETE,Event.OPEN},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when data is received as the download operation progresses." version="" playername="" helpurl="flash.net:URLLoader_flash.events.ProgressEvent.PROGRESS_progress"/>
                <string name="complete" object="[flash.net.URLLoader]" text=".addEventListener(%type:String=Event.COMPLETE{HTTPStatusEvent.HTTP_RESPONSE_STATUS,HTTPStatusEvent.HTTP_STATUS,SecurityErrorEvent.SECURITY_ERROR,IOErrorEvent.IO_ERROR,ProgressEvent.PROGRESS,Event.COMPLETE,Event.OPEN},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched after all the received data is decoded and placed in the data property of the URLLoader object." version="" playername="" helpurl="flash.net:URLLoader_flash.events.Event.COMPLETE_complete"/>
                <string name="open" object="[flash.net.URLLoader]" text=".addEventListener(%type:String=Event.OPEN{HTTPStatusEvent.HTTP_RESPONSE_STATUS,HTTPStatusEvent.HTTP_STATUS,SecurityErrorEvent.SECURITY_ERROR,IOErrorEvent.IO_ERROR,ProgressEvent.PROGRESS,Event.COMPLETE,Event.OPEN},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the download operation commences following a call to the URLLoader.load() method." version="" playername="" helpurl="flash.net:URLLoader_flash.events.Event.OPEN_open"/>
            </folder>
        </folder>
        <folder name="URLLoaderDataFormat" id="[flash.net.URLLoaderDataFormat]" sort="true" index="true" asAncestors="Object" tiptext="The URLLoaderDataFormat class provides values that specify how downloaded data is received." helpurl="flash.net:URLLoaderDataFormat">
            <folder name="Properties" id="Properties" tiptext="Properties for class URLLoaderDataFormat" helpurl="flash.net:URLLoaderDataFormat">
                <string name="BINARY" object="[flash.net.URLLoaderDataFormat]" text="URLLoaderDataFormat.BINARY" constant="true" tiptext="Specifies that downloaded data is received as raw binary data." version="" playername="" helpurl="flash.net:URLLoaderDataFormat:BINARY"/>
                <string name="TEXT" object="[flash.net.URLLoaderDataFormat]" text="URLLoaderDataFormat.TEXT" constant="true" tiptext="Specifies that downloaded data is received as text." version="" playername="" helpurl="flash.net:URLLoaderDataFormat:TEXT"/>
                <string name="VARIABLES" object="[flash.net.URLLoaderDataFormat]" text="URLLoaderDataFormat.VARIABLES" constant="true" tiptext="Specifies that downloaded data is received as URL-encoded variables." version="" playername="" helpurl="flash.net:URLLoaderDataFormat:VARIABLES"/>
            </folder>
        </folder>
        <folder name="URLRequest" id="[flash.net.URLRequest]" sort="true" index="true" asAncestors="Object" tiptext="The URLRequest class captures all of the information in a single HTTP request." helpurl="flash.net:URLRequest">
            <folder name="Methods" id="Methods" tiptext="Methods for class URLRequest" helpurl="flash.net:URLRequest">
                <string name="URLRequest" object="[flash.net.URLRequest]" text="new URLRequest(%[url:String=null]%)" constructor="true" tiptext="Creates a URLRequest object." version="4" playername="" helpurl="flash.net:URLRequest:URLRequest"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class URLRequest" helpurl="flash.net:URLRequest">
                <string name="authenticate" object="[flash.net.URLRequest]" text=".authenticate" tiptext="Specifies whether authentication requests should be handled (true or not (false) for this request." version="" playername="AIR" helpurl="flash.net:URLRequest:authenticate:get"/>
                <string name="cacheResponse" object="[flash.net.URLRequest]" text=".cacheResponse" tiptext="Specifies whether successful response data should be cached for this request." version="" playername="AIR" helpurl="flash.net:URLRequest:cacheResponse:get"/>
                <string name="contentType" object="[flash.net.URLRequest]" text=".contentType" tiptext="The MIME content type of the content in the the data property." version="" playername="" helpurl="flash.net:URLRequest:contentType:get"/>
                <string name="data" object="[flash.net.URLRequest]" text=".data" tiptext="An object containing data to be transmitted with the URL request." version="" playername="" helpurl="flash.net:URLRequest:data:get"/>
                <string name="digest" object="[flash.net.URLRequest]" text=".digest" tiptext="A string that uniquely identifies the signed Adobe platform component to be stored to (or retrieved from) the Flash Player cache." version="" playername="" helpurl="flash.net:URLRequest:digest:get"/>
                <string name="followRedirects" object="[flash.net.URLRequest]" text=".followRedirects" tiptext="Specifies whether redirects are to be followed (true) or not (false)." version="" playername="" helpurl="flash.net:URLRequest:followRedirects:get"/>
                <string name="idleTimeout" object="[flash.net.URLRequest]" text=".idleTimeout" tiptext="Specifies the idle timeout value (in milliseconds) for this request." version="" playername="AIR" helpurl="flash.net:URLRequest:idleTimeout:get"/>
                <string name="manageCookies" object="[flash.net.URLRequest]" text=".manageCookies" tiptext="Specifies whether the HTTP protocol stack should manage cookies for this request." version="" playername="AIR" helpurl="flash.net:URLRequest:manageCookies:get"/>
                <string name="method" object="[flash.net.URLRequest]" text=".method" tiptext="Controls the HTTP form submission method." version="" playername="" helpurl="flash.net:URLRequest:method:get"/>
                <string name="requestHeaders" object="[flash.net.URLRequest]" text=".requestHeaders" tiptext="The array of HTTP request headers to be appended to the HTTP request." version="" playername="" helpurl="flash.net:URLRequest:requestHeaders:get"/>
                <string name="url" object="[flash.net.URLRequest]" text=".url" tiptext="The URL to be requested." version="" playername="" helpurl="flash.net:URLRequest:url:get"/>
                <string name="useCache" object="[flash.net.URLRequest]" text=".useCache" tiptext="Specifies whether the local cache should be consulted before this URLRequest fetches data." version="" playername="AIR" helpurl="flash.net:URLRequest:useCache:get"/>
                <string name="userAgent" object="[flash.net.URLRequest]" text=".userAgent" tiptext="Specifies the user-agent string to be used in the HTTP request." version="" playername="" helpurl="flash.net:URLRequest:userAgent:get"/>
            </folder>
        </folder>
        <folder name="URLRequestDefaults" id="[flash.net.URLRequestDefaults]" sort="true" index="true" asAncestors="Object" tiptext="The URLRequestDefaults class includes static properties that you can set to define default values for the properties of the URLRequest class." helpurl="flash.net:URLRequestDefaults">
            <folder name="Methods" id="Methods" tiptext="Methods for class URLRequestDefaults" helpurl="flash.net:URLRequestDefaults">
                <string name="setLoginCredentialsForHost" object="[flash.net.URLRequestDefaults]" text="URLRequestDefaults.setLoginCredentialsForHost(%hostname:String,user:String,password:String%)" static="true" tiptext="Sets default user and password credentials for a selected host." version="4" playername="" helpurl="flash.net:URLRequestDefaults:setLoginCredentialsForHost"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class URLRequestDefaults" helpurl="flash.net:URLRequestDefaults">
                <string name="authenticate" object="[flash.net.URLRequestDefaults]" text=".authenticate" tiptext="The default setting for the authenticate property of URLRequest objects." version="" playername="" helpurl="flash.net:URLRequestDefaults:authenticate:get"/>
                <string name="cacheResponse" object="[flash.net.URLRequestDefaults]" text=".cacheResponse" tiptext="The default setting for the cacheResponse property of URLRequest objects." version="" playername="" helpurl="flash.net:URLRequestDefaults:cacheResponse:get"/>
                <string name="followRedirects" object="[flash.net.URLRequestDefaults]" text=".followRedirects" tiptext="The default setting for the followRedirects property of URLRequest objects." version="" playername="" helpurl="flash.net:URLRequestDefaults:followRedirects:get"/>
                <string name="idleTimeout" object="[flash.net.URLRequestDefaults]" text=".idleTimeout" tiptext="The default setting for the idleTimeout property of URLRequest objects and HTMLLoader objects." version="" playername="AIR" helpurl="flash.net:URLRequestDefaults:idleTimeout:get"/>
                <string name="manageCookies" object="[flash.net.URLRequestDefaults]" text=".manageCookies" tiptext="The default setting for the manageCookies property of URLRequest objects." version="" playername="" helpurl="flash.net:URLRequestDefaults:manageCookies:get"/>
                <string name="useCache" object="[flash.net.URLRequestDefaults]" text=".useCache" tiptext="The default setting for the useCache property of URLRequest objects." version="" playername="" helpurl="flash.net:URLRequestDefaults:useCache:get"/>
                <string name="userAgent" object="[flash.net.URLRequestDefaults]" text=".userAgent" tiptext="The default setting for the userAgent property of URLRequest objects." version="" playername="" helpurl="flash.net:URLRequestDefaults:userAgent:get"/>
            </folder>
        </folder>
        <folder name="URLRequestHeader" id="[flash.net.URLRequestHeader]" sort="true" index="true" asAncestors="Object" tiptext="A URLRequestHeader object encapsulates a single HTTP request header and consists of a name/value pair." helpurl="flash.net:URLRequestHeader">
            <folder name="Methods" id="Methods" tiptext="Methods for class URLRequestHeader" helpurl="flash.net:URLRequestHeader">
                <string name="URLRequestHeader" object="[flash.net.URLRequestHeader]" text="new URLRequestHeader(%name:String,value:String%)" constructor="true" tiptext="Creates a new URLRequestHeader object that encapsulates a single HTTP request header." version="4" playername="" helpurl="flash.net:URLRequestHeader:URLRequestHeader"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class URLRequestHeader" helpurl="flash.net:URLRequestHeader">
                <string name="name" object="[flash.net.URLRequestHeader]" text=".name" tiptext="An HTTP request header name (such as Content-Type or SOAPAction)." version="" playername="" helpurl="flash.net:URLRequestHeader:name"/>
                <string name="value" object="[flash.net.URLRequestHeader]" text=".value" tiptext="The value associated with the name property (such as text/plain)." version="" playername="" helpurl="flash.net:URLRequestHeader:value"/>
            </folder>
        </folder>
        <folder name="URLRequestMethod" id="[flash.net.URLRequestMethod]" sort="true" index="true" asAncestors="Object" tiptext="The URLRequestMethod class provides values that specify whether the URLRequest object should use the POST method or the GET method when sending data to a server." helpurl="flash.net:URLRequestMethod">
            <folder name="Properties" id="Properties" tiptext="Properties for class URLRequestMethod" helpurl="flash.net:URLRequestMethod">
                <string name="DELETE" object="[flash.net.URLRequestMethod]" text="URLRequestMethod.DELETE" constant="true" tiptext="Specifies that the URLRequest object is a DELETE." version="" playername="AIR" helpurl="flash.net:URLRequestMethod:DELETE"/>
                <string name="GET" object="[flash.net.URLRequestMethod]" text="URLRequestMethod.GET" constant="true" tiptext="Specifies that the URLRequest object is a GET." version="" playername="" helpurl="flash.net:URLRequestMethod:GET"/>
                <string name="HEAD" object="[flash.net.URLRequestMethod]" text="URLRequestMethod.HEAD" constant="true" tiptext="Specifies that the URLRequest object is a HEAD." version="" playername="AIR" helpurl="flash.net:URLRequestMethod:HEAD"/>
                <string name="OPTIONS" object="[flash.net.URLRequestMethod]" text="URLRequestMethod.OPTIONS" constant="true" tiptext="Specifies that the URLRequest object is OPTIONS." version="" playername="AIR" helpurl="flash.net:URLRequestMethod:OPTIONS"/>
                <string name="POST" object="[flash.net.URLRequestMethod]" text="URLRequestMethod.POST" constant="true" tiptext="Specifies that the URLRequest object is a POST." version="" playername="" helpurl="flash.net:URLRequestMethod:POST"/>
                <string name="PUT" object="[flash.net.URLRequestMethod]" text="URLRequestMethod.PUT" constant="true" tiptext="Specifies that the URLRequest object is a PUT." version="" playername="AIR" helpurl="flash.net:URLRequestMethod:PUT"/>
            </folder>
        </folder>
        <folder name="URLStream" id="[flash.net.URLStream]" sort="true" index="true" asAncestors="flash.events:EventDispatcher,Object" tiptext="The URLStream class provides low-level access to downloading URLs." helpurl="flash.net:URLStream">
            <folder name="Methods" id="Methods" tiptext="Methods for class URLStream" helpurl="flash.net:URLStream">
                <string name="close" object="[flash.net.URLStream]" text=".close(%%):void" tiptext="Immediately closes the stream and cancels the download operation." version="4" playername="" helpurl="flash.net:URLStream:close"/>
                <string name="load" object="[flash.net.URLStream]" text=".load(%request:flash.net:URLRequest%):void" tiptext="Begins downloading the URL specified in the request parameter." version="4" playername="" helpurl="flash.net:URLStream:load"/>
                <string name="readBoolean" object="[flash.net.URLStream]" text=".readBoolean(%%):Boolean" tiptext="Reads a Boolean value from the stream." version="4" playername="" helpurl="flash.net:URLStream:readBoolean"/>
                <string name="readByte" object="[flash.net.URLStream]" text=".readByte(%%):int" tiptext="Reads a signed byte from the stream." version="4" playername="" helpurl="flash.net:URLStream:readByte"/>
                <string name="readBytes" object="[flash.net.URLStream]" text=".readBytes(%bytes:flash.utils:ByteArray[,offset:uint=0,length:uint=0]%):void" tiptext="Reads length bytes of data from the stream." version="4" playername="" helpurl="flash.net:URLStream:readBytes"/>
                <string name="readDouble" object="[flash.net.URLStream]" text=".readDouble(%%):Number" tiptext="Reads an IEEE 754 double-precision floating-point number from the stream." version="4" playername="" helpurl="flash.net:URLStream:readDouble"/>
                <string name="readFloat" object="[flash.net.URLStream]" text=".readFloat(%%):Number" tiptext="Reads an IEEE 754 single-precision floating-point number from the stream." version="4" playername="" helpurl="flash.net:URLStream:readFloat"/>
                <string name="readInt" object="[flash.net.URLStream]" text=".readInt(%%):int" tiptext="Reads a signed 32-bit integer from the stream." version="4" playername="" helpurl="flash.net:URLStream:readInt"/>
                <string name="readMultiByte" object="[flash.net.URLStream]" text=".readMultiByte(%length:uint,charSet:String%):String" tiptext="Reads a multibyte string of specified length from the byte stream using the specified character set." version="4" playername="" helpurl="flash.net:URLStream:readMultiByte"/>
                <string name="readObject" object="[flash.net.URLStream]" text=".readObject(%%)" tiptext="Reads an object from the socket, encoded in Action Message Format (AMF)." version="4" playername="" helpurl="flash.net:URLStream:readObject"/>
                <string name="readShort" object="[flash.net.URLStream]" text=".readShort(%%):int" tiptext="Reads a signed 16-bit integer from the stream." version="4" playername="" helpurl="flash.net:URLStream:readShort"/>
                <string name="readUTFBytes" object="[flash.net.URLStream]" text=".readUTFBytes(%length:uint%):String" tiptext="Reads a sequence of length UTF-8 bytes from the stream, and returns a string." version="4" playername="" helpurl="flash.net:URLStream:readUTFBytes"/>
                <string name="readUTF" object="[flash.net.URLStream]" text=".readUTF(%%):String" tiptext="Reads a UTF-8 string from the stream." version="4" playername="" helpurl="flash.net:URLStream:readUTF"/>
                <string name="readUnsignedByte" object="[flash.net.URLStream]" text=".readUnsignedByte(%%):uint" tiptext="Reads an unsigned byte from the stream." version="4" playername="" helpurl="flash.net:URLStream:readUnsignedByte"/>
                <string name="readUnsignedInt" object="[flash.net.URLStream]" text=".readUnsignedInt(%%):uint" tiptext="Reads an unsigned 32-bit integer from the stream." version="4" playername="" helpurl="flash.net:URLStream:readUnsignedInt"/>
                <string name="readUnsignedShort" object="[flash.net.URLStream]" text=".readUnsignedShort(%%):uint" tiptext="Reads an unsigned 16-bit integer from the stream." version="4" playername="" helpurl="flash.net:URLStream:readUnsignedShort"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class URLStream" helpurl="flash.net:URLStream">
                <string name="bytesAvailable" object="[flash.net.URLStream]" text=".bytesAvailable" tiptext="Returns the number of bytes of data available for reading in the input buffer." version="" playername="" helpurl="flash.net:URLStream:bytesAvailable:get"/>
                <string name="connected" object="[flash.net.URLStream]" text=".connected" tiptext="Indicates whether this URLStream object is currently connected." version="" playername="" helpurl="flash.net:URLStream:connected:get"/>
                <string name="endian" object="[flash.net.URLStream]" text=".endian" tiptext="Indicates the byte order for the data." version="" playername="" helpurl="flash.net:URLStream:endian:get"/>
                <string name="objectEncoding" object="[flash.net.URLStream]" text=".objectEncoding" tiptext="Controls the version of Action Message Format (AMF) used when writing or reading an object." version="" playername="" helpurl="flash.net:URLStream:objectEncoding:get"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class URLStream" helpurl="flash.net:URLStream">
                <string name="progress" object="[flash.net.URLStream]" text=".addEventListener(%type:String=ProgressEvent.PROGRESS{ProgressEvent.PROGRESS,Event.OPEN,IOErrorEvent.IO_ERROR,HTTPStatusEvent.HTTP_RESPONSE_STATUS,HTTPStatusEvent.HTTP_STATUS,SecurityErrorEvent.SECURITY_ERROR,Event.COMPLETE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when data is received as the download operation progresses." version="" playername="" helpurl="flash.net:URLStream_flash.events.ProgressEvent.PROGRESS_progress"/>
                <string name="open" object="[flash.net.URLStream]" text=".addEventListener(%type:String=Event.OPEN{ProgressEvent.PROGRESS,Event.OPEN,IOErrorEvent.IO_ERROR,HTTPStatusEvent.HTTP_RESPONSE_STATUS,HTTPStatusEvent.HTTP_STATUS,SecurityErrorEvent.SECURITY_ERROR,Event.COMPLETE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a load operation starts." version="" playername="" helpurl="flash.net:URLStream_flash.events.Event.OPEN_open"/>
                <string name="ioError" object="[flash.net.URLStream]" text=".addEventListener(%type:String=IOErrorEvent.IO_ERROR{ProgressEvent.PROGRESS,Event.OPEN,IOErrorEvent.IO_ERROR,HTTPStatusEvent.HTTP_RESPONSE_STATUS,HTTPStatusEvent.HTTP_STATUS,SecurityErrorEvent.SECURITY_ERROR,Event.COMPLETE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when an input/output error occurs that causes a load operation to fail." version="" playername="" helpurl="flash.net:URLStream_flash.events.IOErrorEvent.IO_ERROR_ioError"/>
                <string name="httpResponseStatus" object="[flash.net.URLStream]" text=".addEventListener(%type:String=HTTPStatusEvent.HTTP_RESPONSE_STATUS{ProgressEvent.PROGRESS,Event.OPEN,IOErrorEvent.IO_ERROR,HTTPStatusEvent.HTTP_RESPONSE_STATUS,HTTPStatusEvent.HTTP_STATUS,SecurityErrorEvent.SECURITY_ERROR,Event.COMPLETE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched if a call to the URLStream.load() method attempts to access data over HTTP and Adobe AIR is able to detect and return the status code for the request." version="" playername="" helpurl="flash.net:URLStream_flash.events.HTTPStatusEvent.HTTP_RESPONSE_STATUS_httpResponseStatus"/>
                <string name="httpStatus" object="[flash.net.URLStream]" text=".addEventListener(%type:String=HTTPStatusEvent.HTTP_STATUS{ProgressEvent.PROGRESS,Event.OPEN,IOErrorEvent.IO_ERROR,HTTPStatusEvent.HTTP_RESPONSE_STATUS,HTTPStatusEvent.HTTP_STATUS,SecurityErrorEvent.SECURITY_ERROR,Event.COMPLETE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched if a call to URLStream.load() attempts to access data over HTTP, and Flash Player or  Adobe AIR is able to detect and return the status code for the request." version="" playername="" helpurl="flash.net:URLStream_flash.events.HTTPStatusEvent.HTTP_STATUS_httpStatus"/>
                <string name="securityError" object="[flash.net.URLStream]" text=".addEventListener(%type:String=SecurityErrorEvent.SECURITY_ERROR{ProgressEvent.PROGRESS,Event.OPEN,IOErrorEvent.IO_ERROR,HTTPStatusEvent.HTTP_RESPONSE_STATUS,HTTPStatusEvent.HTTP_STATUS,SecurityErrorEvent.SECURITY_ERROR,Event.COMPLETE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched if a call to URLStream.load() attempts to load data from a server outside the security sandbox." version="" playername="" helpurl="flash.net:URLStream_flash.events.SecurityErrorEvent.SECURITY_ERROR_securityError"/>
                <string name="complete" object="[flash.net.URLStream]" text=".addEventListener(%type:String=Event.COMPLETE{ProgressEvent.PROGRESS,Event.OPEN,IOErrorEvent.IO_ERROR,HTTPStatusEvent.HTTP_RESPONSE_STATUS,HTTPStatusEvent.HTTP_STATUS,SecurityErrorEvent.SECURITY_ERROR,Event.COMPLETE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when data has loaded successfully." version="" playername="" helpurl="flash.net:URLStream_flash.events.Event.COMPLETE_complete"/>
            </folder>
        </folder>
        <folder name="URLVariables" id="[flash.net.URLVariables]" sort="true" index="true" asAncestors="Object" tiptext="The URLVariables class allows you to transfer variables between an application and a server." helpurl="flash.net:URLVariables">
            <folder name="Methods" id="Methods" tiptext="Methods for class URLVariables" helpurl="flash.net:URLVariables">
                <string name="URLVariables" object="[flash.net.URLVariables]" text="new URLVariables(%[source:String=null]%)" constructor="true" tiptext="Creates a new URLVariables object." version="4" playername="" helpurl="flash.net:URLVariables:URLVariables"/>
                <string name="decode" object="[flash.net.URLVariables]" text=".decode(%source:String%):void" tiptext="Converts the variable string to properties of the specified URLVariables object." version="4" playername="" helpurl="flash.net:URLVariables:decode"/>
                <string name="toString" object="[flash.net.URLVariables]" text=".toString(%%):String" tiptext="Returns a string containing all enumerable variables, in the MIME content encoding application/x-www-form-urlencoded." version="4" playername="" helpurl="flash.net:URLVariables:toString"/>
            </folder>
        </folder>
        <folder name="XMLSocket" id="[flash.net.XMLSocket]" sort="true" index="true" asAncestors="flash.events:EventDispatcher,Object" tiptext="The XMLSocket class implements client sockets that let the Flash Player or AIR application communicate with a server computer identified by an IP address or domain name." helpurl="flash.net:XMLSocket">
            <folder name="Methods" id="Methods" tiptext="Methods for class XMLSocket" helpurl="flash.net:XMLSocket">
                <string name="XMLSocket" object="[flash.net.XMLSocket]" text="new XMLSocket(%[host:String=null,port:int=0]%):void" constructor="true" tiptext="Creates a new XMLSocket object." version="4" playername="" helpurl="flash.net:XMLSocket:XMLSocket"/>
                <string name="close" object="[flash.net.XMLSocket]" text=".close(%%):void" tiptext="Closes the connection specified by the XMLSocket object." version="4" playername="" helpurl="flash.net:XMLSocket:close"/>
                <string name="connect" object="[flash.net.XMLSocket]" text=".connect(%host:String,port:int%):void" tiptext="Establishes a connection to the specified Internet host using the specified TCP port." version="4" playername="" helpurl="flash.net:XMLSocket:connect"/>
                <string name="send" object="[flash.net.XMLSocket]" text=".send(%object:*%):void" tiptext="Converts the XML object or data specified in the object parameter to a string and transmits it to the server, followed by a zero (0) byte." version="4" playername="" helpurl="flash.net:XMLSocket:send"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class XMLSocket" helpurl="flash.net:XMLSocket">
                <string name="connected" object="[flash.net.XMLSocket]" text=".connected" tiptext="Indicates whether this XMLSocket object is currently connected." version="" playername="" helpurl="flash.net:XMLSocket:connected:get"/>
                <string name="timeout" object="[flash.net.XMLSocket]" text=".timeout" tiptext="Indicates the number of milliseconds to wait for a connection." version="" playername="" helpurl="flash.net:XMLSocket:timeout:get"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class XMLSocket" helpurl="flash.net:XMLSocket">
                <string name="securityError" object="[flash.net.XMLSocket]" text=".addEventListener(%type:String=SecurityErrorEvent.SECURITY_ERROR{SecurityErrorEvent.SECURITY_ERROR,IOErrorEvent.IO_ERROR,DataEvent.DATA,Event.CONNECT,Event.CLOSE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched if a call to the XMLSocket.connect() method attempts to connect either to a server outside the caller&apos;s security sandbox or to a port lower than 1024." version="" playername="" helpurl="flash.net:XMLSocket_flash.events.SecurityErrorEvent.SECURITY_ERROR_securityError"/>
                <string name="ioError" object="[flash.net.XMLSocket]" text=".addEventListener(%type:String=IOErrorEvent.IO_ERROR{SecurityErrorEvent.SECURITY_ERROR,IOErrorEvent.IO_ERROR,DataEvent.DATA,Event.CONNECT,Event.CLOSE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when an input/output error occurs that causes a send or receive operation to fail." version="" playername="" helpurl="flash.net:XMLSocket_flash.events.IOErrorEvent.IO_ERROR_ioError"/>
                <string name="data" object="[flash.net.XMLSocket]" text=".addEventListener(%type:String=DataEvent.DATA{SecurityErrorEvent.SECURITY_ERROR,IOErrorEvent.IO_ERROR,DataEvent.DATA,Event.CONNECT,Event.CLOSE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched after raw data is sent or received." version="" playername="" helpurl="flash.net:XMLSocket_flash.events.DataEvent.DATA_data"/>
                <string name="connect" object="[flash.net.XMLSocket]" text=".addEventListener(%type:String=Event.CONNECT{SecurityErrorEvent.SECURITY_ERROR,IOErrorEvent.IO_ERROR,DataEvent.DATA,Event.CONNECT,Event.CLOSE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched after a successful call to the XMLSocket.connect() method." version="" playername="" helpurl="flash.net:XMLSocket_flash.events.Event.CONNECT_connect"/>
                <string name="close" object="[flash.net.XMLSocket]" text=".addEventListener(%type:String=Event.CLOSE{SecurityErrorEvent.SECURITY_ERROR,IOErrorEvent.IO_ERROR,DataEvent.DATA,Event.CONNECT,Event.CLOSE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the server closes the socket connection." version="" playername="" helpurl="flash.net:XMLSocket_flash.events.Event.CLOSE_close"/>
            </folder>
        </folder>
    </folder>
        <folder name="flash.net.dns" id="flash.net.dns" sort="true" tiptext="Classes for package flash.net.dns" helpurl="flash.net.dns">
        <folder name="AAAARecord" id="[flash.net.dns.AAAARecord]" sort="true" index="true" asAncestors="flash.net.dns:ResourceRecord,Object" tiptext="The AAAARecord class represents a Domain Name System (DNS) AAAA resource record containing an IPv6 address." helpurl="flash.net.dns:AAAARecord">
            <folder name="Methods" id="Methods" tiptext="Methods for class AAAARecord" helpurl="flash.net.dns:AAAARecord">
                <string name="AAAARecord" object="[flash.net.dns.AAAARecord]" text="new AAAARecord(%%)" constructor="true" tiptext="Creates an AAAA resource record." version="2" playername="AIR" helpurl="flash.net.dns:AAAARecord:AAAARecord"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class AAAARecord" helpurl="flash.net.dns:AAAARecord">
                <string name="address" object="[flash.net.dns.AAAARecord]" text=".address" tiptext="The IPv6 address." version="" playername="AIR" helpurl="flash.net.dns:AAAARecord:address:get"/>
            </folder>
        </folder>
        <folder name="ARecord" id="[flash.net.dns.ARecord]" sort="true" index="true" asAncestors="flash.net.dns:ResourceRecord,Object" tiptext="The ARecord class represents a Domain Name System (DNS) A resource record containing an IPv4 address." helpurl="flash.net.dns:ARecord">
            <folder name="Methods" id="Methods" tiptext="Methods for class ARecord" helpurl="flash.net.dns:ARecord">
                <string name="ARecord" object="[flash.net.dns.ARecord]" text="new ARecord(%%)" constructor="true" tiptext="Creates an A resource record." version="2" playername="AIR" helpurl="flash.net.dns:ARecord:ARecord"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class ARecord" helpurl="flash.net.dns:ARecord">
                <string name="address" object="[flash.net.dns.ARecord]" text=".address" tiptext="The IPv4 address." version="" playername="AIR" helpurl="flash.net.dns:ARecord:address:get"/>
            </folder>
        </folder>
        <folder name="DNSResolver" id="[flash.net.dns.DNSResolver]" sort="true" index="true" asAncestors="flash.events:EventDispatcher,Object" tiptext="The DNSResolver class lets you lookup Domain Name System (DNS) resource records." helpurl="flash.net.dns:DNSResolver">
            <folder name="Methods" id="Methods" tiptext="Methods for class DNSResolver" helpurl="flash.net.dns:DNSResolver">
                <string name="DNSResolver" object="[flash.net.dns.DNSResolver]" text="new DNSResolver(%%)" constructor="true" tiptext="Creates a DNSResolver object." version="2" playername="AIR" helpurl="flash.net.dns:DNSResolver:DNSResolver"/>
                <string name="lookup" object="[flash.net.dns.DNSResolver]" text=".lookup(%host:String,recordType:Class%):void" tiptext="Looks up a DNS resource record based on a query string." version="2" playername="AIR" helpurl="flash.net.dns:DNSResolver:lookup"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class DNSResolver" helpurl="flash.net.dns:DNSResolver">
                <string name="isSupported" object="[flash.net.dns.DNSResolver]" text=".isSupported" tiptext="Indicates whether DNS lookups are supported on the client system." version="" playername="AIR" helpurl="flash.net.dns:DNSResolver:isSupported:get"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class DNSResolver" helpurl="flash.net.dns:DNSResolver">
                <string name="error" object="[flash.net.dns.DNSResolver]" text=".addEventListener(%type:String=ErrorEvent.ERROR{ErrorEvent.ERROR,DNSResolverEvent.LOOKUP},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when an error occurred during a DNS lookup." version="" playername="AIR" helpurl="flash.net.dns:DNSResolver_flash.events.ErrorEvent.ERROR_error"/>
                <string name="lookup" object="[flash.net.dns.DNSResolver]" text=".addEventListener(%type:String=DNSResolverEvent.LOOKUP{ErrorEvent.ERROR,DNSResolverEvent.LOOKUP},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a DNS look-up is complete." version="" playername="AIR" helpurl="flash.net.dns:DNSResolver_flash.events.DNSResolverEvent.LOOKUP_lookup"/>
            </folder>
        </folder>
        <folder name="MXRecord" id="[flash.net.dns.MXRecord]" sort="true" index="true" asAncestors="flash.net.dns:ResourceRecord,Object" tiptext="The MXRecord class represents a Domain Name System (DNS) MX resource record containing a mail exchange server address." helpurl="flash.net.dns:MXRecord">
            <folder name="Methods" id="Methods" tiptext="Methods for class MXRecord" helpurl="flash.net.dns:MXRecord">
                <string name="MXRecord" object="[flash.net.dns.MXRecord]" text="new MXRecord(%%)" constructor="true" tiptext="Creates an MX resource record." version="2" playername="AIR" helpurl="flash.net.dns:MXRecord:MXRecord"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class MXRecord" helpurl="flash.net.dns:MXRecord">
                <string name="exchange" object="[flash.net.dns.MXRecord]" text=".exchange" tiptext="The host name of a mail exchange service." version="" playername="AIR" helpurl="flash.net.dns:MXRecord:exchange:get"/>
                <string name="preference" object="[flash.net.dns.MXRecord]" text=".preference" tiptext="The priority of the mail exchange identified by this record." version="" playername="AIR" helpurl="flash.net.dns:MXRecord:preference:get"/>
            </folder>
        </folder>
        <folder name="PTRRecord" id="[flash.net.dns.PTRRecord]" sort="true" index="true" asAncestors="flash.net.dns:ResourceRecord,Object" tiptext="The PTRRecord class represents a Domain Name System (DNS) PTR resource record containing a canonical domain name." helpurl="flash.net.dns:PTRRecord">
            <folder name="Methods" id="Methods" tiptext="Methods for class PTRRecord" helpurl="flash.net.dns:PTRRecord">
                <string name="PTRRecord" object="[flash.net.dns.PTRRecord]" text="new PTRRecord(%%)" constructor="true" tiptext="Creates a PTR resource record." version="2" playername="AIR" helpurl="flash.net.dns:PTRRecord:PTRRecord"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class PTRRecord" helpurl="flash.net.dns:PTRRecord">
                <string name="ptrdName" object="[flash.net.dns.PTRRecord]" text=".ptrdName" tiptext="The canonical domain name assigned to the query IP address." version="" playername="AIR" helpurl="flash.net.dns:PTRRecord:ptrdName:get"/>
            </folder>
        </folder>
        <folder name="ResourceRecord" id="[flash.net.dns.ResourceRecord]" sort="true" index="true" asAncestors="Object" tiptext="The ResourceRecord class is the base class for Domain Name System (DNS) resource record classes." helpurl="flash.net.dns:ResourceRecord">
            <folder name="Properties" id="Properties" tiptext="Properties for class ResourceRecord" helpurl="flash.net.dns:ResourceRecord">
                <string name="name" object="[flash.net.dns.ResourceRecord]" text=".name" tiptext="The query string used to look up this resource record." version="" playername="AIR" helpurl="flash.net.dns:ResourceRecord:name:get"/>
                <string name="ttl" object="[flash.net.dns.ResourceRecord]" text=".ttl" tiptext="The resource time-to-live (ttl) value." version="" playername="AIR" helpurl="flash.net.dns:ResourceRecord:ttl:get"/>
            </folder>
        </folder>
        <folder name="SRVRecord" id="[flash.net.dns.SRVRecord]" sort="true" index="true" asAncestors="flash.net.dns:ResourceRecord,Object" tiptext="The SRVRecord class represents a Domain Name System (DNS) SRV resource record containing a service host." helpurl="flash.net.dns:SRVRecord">
            <folder name="Methods" id="Methods" tiptext="Methods for class SRVRecord" helpurl="flash.net.dns:SRVRecord">
                <string name="SRVRecord" object="[flash.net.dns.SRVRecord]" text="new SRVRecord(%%)" constructor="true" tiptext="Creates an SRV resource record." version="2" playername="AIR" helpurl="flash.net.dns:SRVRecord:SRVRecord"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class SRVRecord" helpurl="flash.net.dns:SRVRecord">
                <string name="port" object="[flash.net.dns.SRVRecord]" text=".port" tiptext="The port the service is using on the server." version="" playername="AIR" helpurl="flash.net.dns:SRVRecord:port:get"/>
                <string name="priority" object="[flash.net.dns.SRVRecord]" text=".priority" tiptext="The priority of the service host identified by this record." version="" playername="AIR" helpurl="flash.net.dns:SRVRecord:priority:get"/>
                <string name="target" object="[flash.net.dns.SRVRecord]" text=".target" tiptext="The canonical host name of the server providing the service." version="" playername="AIR" helpurl="flash.net.dns:SRVRecord:target:get"/>
                <string name="weight" object="[flash.net.dns.SRVRecord]" text=".weight" tiptext="The relative weight to use when selecting from service hosts that have the same priority." version="" playername="AIR" helpurl="flash.net.dns:SRVRecord:weight:get"/>
            </folder>
        </folder>
    </folder>
        <folder name="flash.net.drm" id="flash.net.drm" sort="true" tiptext="Classes for package flash.net.drm" helpurl="flash.net.drm">
        <folder name="AuthenticationMethod" id="[flash.net.drm.AuthenticationMethod]" sort="true" index="true" asAncestors="Object" tiptext="The AuthenticationMethod class provides string constants enumerating the different types of authentication used by the authenticationMethod property of the DRMContentData class." helpurl="flash.net.drm:AuthenticationMethod">
            <folder name="Properties" id="Properties" tiptext="Properties for class AuthenticationMethod" helpurl="flash.net.drm:AuthenticationMethod">
                <string name="ANONYMOUS" object="[flash.net.drm.AuthenticationMethod]" text="AuthenticationMethod.ANONYMOUS" constant="true" tiptext="Indicates that no authentication is required." version="" playername="" helpurl="flash.net.drm:AuthenticationMethod:ANONYMOUS"/>
                <string name="USERNAME_AND_PASSWORD" object="[flash.net.drm.AuthenticationMethod]" text="AuthenticationMethod.USERNAME_AND_PASSWORD" constant="true" tiptext="Indicates that a valid user name and password are required." version="" playername="" helpurl="flash.net.drm:AuthenticationMethod:USERNAME_AND_PASSWORD"/>
            </folder>
        </folder>
        <folder name="DRMContentData" id="[flash.net.drm.DRMContentData]" sort="true" index="true" asAncestors="Object" tiptext="The DRMContentData class provides the information required to obtain the voucher necessary to view DRM-protected content." helpurl="flash.net.drm:DRMContentData">
            <folder name="Methods" id="Methods" tiptext="Methods for class DRMContentData" helpurl="flash.net.drm:DRMContentData">
                <string name="DRMContentData" object="[flash.net.drm.DRMContentData]" text="new DRMContentData(%[rawData:flash.utils:ByteArray=null]%)" constructor="true" tiptext="Constructor." version="10.1" playername="" helpurl="flash.net.drm:DRMContentData:DRMContentData"/>
                <string name="getVoucherAccessInfo" object="[flash.net.drm.DRMContentData]" text=".getVoucherAccessInfo(%%):Vector$flash.net.drm:VoucherAccessInfo" tiptext="Retrieves an array of VoucherAccessInfo objects." version="10.1" playername="" helpurl="flash.net.drm:DRMContentData:getVoucherAccessInfo"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class DRMContentData" helpurl="flash.net.drm:DRMContentData">
                <string name="authenticationMethod" object="[flash.net.drm.DRMContentData]" text=".authenticationMethod" tiptext="The type of authentication required to obtain a voucher for the associated content." version="" playername="" helpurl="flash.net.drm:DRMContentData:authenticationMethod:get"/>
                <string name="domain" object="[flash.net.drm.DRMContentData]" text=".domain" tiptext="The content domain of the media rights server to which the user must be authenticated to obtain the voucher for the associated content." version="" playername="" helpurl="flash.net.drm:DRMContentData:domain:get"/>
                <string name="licenseID" object="[flash.net.drm.DRMContentData]" text=".licenseID" tiptext="A unique id identifying the content associated with this metadata on the media rights server." version="" playername="" helpurl="flash.net.drm:DRMContentData:licenseID:get"/>
                <string name="serverURL" object="[flash.net.drm.DRMContentData]" text=".serverURL" tiptext="The URL of a media rights server that provides the voucher that is required to view the associated content." version="" playername="" helpurl="flash.net.drm:DRMContentData:serverURL:get"/>
            </folder>
        </folder>
        <folder name="DRMManager" id="[flash.net.drm.DRMManager]" sort="true" index="true" asAncestors="flash.events:EventDispatcher,Object" tiptext="The DRMManager manages the retrieval and storage of the vouchers needed to view DRM-protected content." helpurl="flash.net.drm:DRMManager">
            <folder name="Methods" id="Methods" tiptext="Methods for class DRMManager" helpurl="flash.net.drm:DRMManager">
                <string name="authenticate" object="[flash.net.drm.DRMManager]" text=".authenticate(%serverURL:String,domain:String,username:String,password:String%):void" tiptext="Authenticates a user." version="10.1" playername="" helpurl="flash.net.drm:DRMManager:authenticate"/>
                <string name="getDRMManager" object="[flash.net.drm.DRMManager]" text="DRMManager.getDRMManager(%%):flash.net.drm:DRMManager" static="true" tiptext="Returns an instance of the singleton DRMManager object." version="10.1" playername="" helpurl="flash.net.drm:DRMManager:getDRMManager"/>
                <string name="loadPreviewVoucher" object="[flash.net.drm.DRMManager]" text=".loadPreviewVoucher(%contentData:flash.net.drm:DRMContentData%):void" tiptext="Gets a preview voucher from the license server, which you can use to let a user verify that they can play content on particular computer." version="10.1" playername="" helpurl="flash.net.drm:DRMManager:loadPreviewVoucher"/>
                <string name="loadVoucher" object="[flash.net.drm.DRMManager]" text=".loadVoucher(%contentData:flash.net.drm:DRMContentData,setting:String%):void" tiptext="Loads a voucher from a media rights server or the local voucher cache." version="10.1" playername="" helpurl="flash.net.drm:DRMManager:loadVoucher"/>
                <string name="resetDRMVouchers" object="[flash.net.drm.DRMManager]" text=".resetDRMVouchers(%%):void" tiptext="Deletes all locally cached digital rights management (DRM) voucher data." version="1.5" playername="AIR" helpurl="flash.net.drm:DRMManager:resetDRMVouchers"/>
                <string name="setAuthenticationToken" object="[flash.net.drm.DRMManager]" text=".setAuthenticationToken(%serverUrl:String,domain:String,token:flash.utils:ByteArray%):void" tiptext="Sets the authentication token to use for communication with the specified server and domain." version="10.1" playername="" helpurl="flash.net.drm:DRMManager:setAuthenticationToken"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class DRMManager" helpurl="flash.net.drm:DRMManager">
                <string name="isSupported" object="[flash.net.drm.DRMManager]" text=".isSupported" tiptext="The isSupported property is set to true if the DRMManager class is supported on the current platform, otherwise it is set to false." version="" playername="" helpurl="flash.net.drm:DRMManager:isSupported:get"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class DRMManager" helpurl="flash.net.drm:DRMManager">
                <string name="drmError" object="[flash.net.drm.DRMManager]" text=".addEventListener(%type:String=DRMErrorEvent.DRM_ERROR{DRMErrorEvent.DRM_ERROR,DRMStatusEvent.DRM_STATUS,DRMAuthenticationErrorEvent.AUTHENTICATION_ERROR,DRMAuthenticationCompleteEvent.AUTHENTICATION_COMPLETE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="The DRMManager dispatches a DRMErrorEvent object when a requested voucher cannot be obtained from the media rights server." version="" playername="" helpurl="flash.net.drm:DRMManager_flash.events.DRMErrorEvent.DRM_ERROR_drmError"/>
                <string name="drmStatus" object="[flash.net.drm.DRMManager]" text=".addEventListener(%type:String=DRMStatusEvent.DRM_STATUS{DRMErrorEvent.DRM_ERROR,DRMStatusEvent.DRM_STATUS,DRMAuthenticationErrorEvent.AUTHENTICATION_ERROR,DRMAuthenticationCompleteEvent.AUTHENTICATION_COMPLETE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="The DRMManager dispatches a DRMStatusEvent object when a requested voucher is obtained from the media rights server." version="" playername="" helpurl="flash.net.drm:DRMManager_flash.events.DRMStatusEvent.DRM_STATUS_drmStatus"/>
                <string name="authenticationError" object="[flash.net.drm.DRMManager]" text=".addEventListener(%type:String=DRMAuthenticationErrorEvent.AUTHENTICATION_ERROR{DRMErrorEvent.DRM_ERROR,DRMStatusEvent.DRM_STATUS,DRMAuthenticationErrorEvent.AUTHENTICATION_ERROR,DRMAuthenticationCompleteEvent.AUTHENTICATION_COMPLETE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="The DRMManager dispatches a DRMAuthenticationErrorEvent object when the user is not authenticated by the media rights server after a call to the authenticate() method." version="" playername="" helpurl="flash.net.drm:DRMManager__authenticationError"/>
                <string name="authenticationComplete" object="[flash.net.drm.DRMManager]" text=".addEventListener(%type:String=DRMAuthenticationCompleteEvent.AUTHENTICATION_COMPLETE{DRMErrorEvent.DRM_ERROR,DRMStatusEvent.DRM_STATUS,DRMAuthenticationErrorEvent.AUTHENTICATION_ERROR,DRMAuthenticationCompleteEvent.AUTHENTICATION_COMPLETE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="The DRMManager dispatches a DRMAuthenticationCompleteEvent object when the user is authenticated by the media rights server after a call to the authenticate() method." version="" playername="" helpurl="flash.net.drm:DRMManager__authenticationComplete"/>
            </folder>
        </folder>
        <folder name="DRMPlaybackTimeWindow" id="[flash.net.drm.DRMPlaybackTimeWindow]" sort="true" index="true" asAncestors="Object" tiptext="The DRMPlaybackTimeWindow class represents the period of time during which a DRM voucher is valid." helpurl="flash.net.drm:DRMPlaybackTimeWindow">
            <folder name="Properties" id="Properties" tiptext="Properties for class DRMPlaybackTimeWindow" helpurl="flash.net.drm:DRMPlaybackTimeWindow">
                <string name="endDate" object="[flash.net.drm.DRMPlaybackTimeWindow]" text=".endDate" tiptext="The end date for the period of time during which a DRM voucher is valid (the playback window)." version="" playername="" helpurl="flash.net.drm:DRMPlaybackTimeWindow:endDate:get"/>
                <string name="period" object="[flash.net.drm.DRMPlaybackTimeWindow]" text=".period" tiptext="The period of time during which a DRM voucher is valid (the playback window), in seconds." version="" playername="" helpurl="flash.net.drm:DRMPlaybackTimeWindow:period:get"/>
                <string name="startDate" object="[flash.net.drm.DRMPlaybackTimeWindow]" text=".startDate" tiptext="The start date for the period of time during which a DRM voucher is valid (the playback window)." version="" playername="" helpurl="flash.net.drm:DRMPlaybackTimeWindow:startDate:get"/>
            </folder>
        </folder>
        <folder name="DRMVoucher" id="[flash.net.drm.DRMVoucher]" sort="true" index="true" asAncestors="Object" tiptext="The DRMVoucher class is a handle to the license token that allows a user to view DRM-protected content." helpurl="flash.net.drm:DRMVoucher">
            <folder name="Properties" id="Properties" tiptext="Properties for class DRMVoucher" helpurl="flash.net.drm:DRMVoucher">
                <string name="offlineLeaseEndDate" object="[flash.net.drm.DRMVoucher]" text=".offlineLeaseEndDate" tiptext="The date and time at which this voucher expires for offline playback." version="" playername="" helpurl="flash.net.drm:DRMVoucher:offlineLeaseEndDate:get"/>
                <string name="offlineLeaseStartDate" object="[flash.net.drm.DRMVoucher]" text=".offlineLeaseStartDate" tiptext="The date and time at which this voucher becomes valid for offline playback." version="" playername="" helpurl="flash.net.drm:DRMVoucher:offlineLeaseStartDate:get"/>
                <string name="playbackTimeWindow" object="[flash.net.drm.DRMVoucher]" text=".playbackTimeWindow" tiptext="The time period, after the first viewing, during which the associated content can be viewed or reviewed." version="" playername="" helpurl="flash.net.drm:DRMVoucher:playbackTimeWindow:get"/>
                <string name="policies" object="[flash.net.drm.DRMVoucher]" text=".policies" tiptext="A dynamic object that reports policies defined by the application." version="" playername="" helpurl="flash.net.drm:DRMVoucher:policies:get"/>
                <string name="voucherEndDate" object="[flash.net.drm.DRMVoucher]" text=".voucherEndDate" tiptext="The date on which this voucher expires." version="" playername="" helpurl="flash.net.drm:DRMVoucher:voucherEndDate:get"/>
                <string name="voucherStartDate" object="[flash.net.drm.DRMVoucher]" text=".voucherStartDate" tiptext="The beginning of this voucher&apos;s validity period." version="" playername="" helpurl="flash.net.drm:DRMVoucher:voucherStartDate:get"/>
            </folder>
        </folder>
        <folder name="LoadVoucherSetting" id="[flash.net.drm.LoadVoucherSetting]" sort="true" index="true" asAncestors="Object" tiptext="The LoadVoucherSetting class provides string constants for use with the settings parameter of the DRMManager loadVoucher() method." helpurl="flash.net.drm:LoadVoucherSetting">
            <folder name="Properties" id="Properties" tiptext="Properties for class LoadVoucherSetting" helpurl="flash.net.drm:LoadVoucherSetting">
                <string name="ALLOW_SERVER" object="[flash.net.drm.LoadVoucherSetting]" text="LoadVoucherSetting.ALLOW_SERVER" constant="true" tiptext="Loads the voucher from the local cache, if possible; downloads the voucher from a media rights server only if a locally cached copy does not exist." version="" playername="" helpurl="flash.net.drm:LoadVoucherSetting:ALLOW_SERVER"/>
                <string name="FORCE_REFRESH" object="[flash.net.drm.LoadVoucherSetting]" text="LoadVoucherSetting.FORCE_REFRESH" constant="true" tiptext="Downloads the voucher from the media rights server only." version="" playername="" helpurl="flash.net.drm:LoadVoucherSetting:FORCE_REFRESH"/>
                <string name="LOCAL_ONLY" object="[flash.net.drm.LoadVoucherSetting]" text="LoadVoucherSetting.LOCAL_ONLY" constant="true" tiptext="Loads the voucher from the local cache only." version="" playername="" helpurl="flash.net.drm:LoadVoucherSetting:LOCAL_ONLY"/>
            </folder>
        </folder>
        <folder name="VoucherAccessInfo" id="[flash.net.drm.VoucherAccessInfo]" sort="true" index="true" asAncestors="Object" tiptext="A VoucherAccessInfo object presents the information that is required to successfully retrieve and consume a voucher, such as the type of authentication and the content domain of the media rights server." helpurl="flash.net.drm:VoucherAccessInfo">
            <folder name="Properties" id="Properties" tiptext="Properties for class VoucherAccessInfo" helpurl="flash.net.drm:VoucherAccessInfo">
                <string name="authenticationMethod" object="[flash.net.drm.VoucherAccessInfo]" text=".authenticationMethod" tiptext="The type of authentication required to obtain a voucher for the associated content." version="" playername="" helpurl="flash.net.drm:VoucherAccessInfo:authenticationMethod:get"/>
                <string name="displayName" object="[flash.net.drm.VoucherAccessInfo]" text=".displayName" tiptext="A user-friendly string that you can use to refer to the specified VoucherAccessInfo object in the user interface." version="" playername="" helpurl="flash.net.drm:VoucherAccessInfo:displayName:get"/>
                <string name="domain" object="[flash.net.drm.VoucherAccessInfo]" text=".domain" tiptext="The content domain of the media rights server to which the user must be authenticated to obtain the voucher for the associated content." version="" playername="" helpurl="flash.net.drm:VoucherAccessInfo:domain:get"/>
            </folder>
        </folder>
    </folder>
        <folder name="flash.printing" id="flash.printing" sort="true" tiptext="Classes for package flash.printing" helpurl="flash.printing">
        <folder name="PaperSize" id="[flash.printing.PaperSize]" sort="true" index="true" asAncestors="Object" tiptext="This class provides the available values for the paperSize parameter of the PrintJob.selectPaperSize() method." helpurl="flash.printing:PaperSize">
            <folder name="Properties" id="Properties" tiptext="Properties for class PaperSize" helpurl="flash.printing:PaperSize">
                <string name="A4" object="[flash.printing.PaperSize]" text="PaperSize.A4" constant="true" tiptext="A4" version="" playername="AIR" helpurl="flash.printing:PaperSize:A4"/>
                <string name="A5" object="[flash.printing.PaperSize]" text="PaperSize.A5" constant="true" tiptext="A5" version="" playername="AIR" helpurl="flash.printing:PaperSize:A5"/>
                <string name="A6" object="[flash.printing.PaperSize]" text="PaperSize.A6" constant="true" tiptext="A6" version="" playername="AIR" helpurl="flash.printing:PaperSize:A6"/>
                <string name="CHOUKEI3GOU" object="[flash.printing.PaperSize]" text="PaperSize.CHOUKEI3GOU" constant="true" tiptext="Japanese choukei 3 gou (envelope)" version="" playername="AIR" helpurl="flash.printing:PaperSize:CHOUKEI3GOU"/>
                <string name="CHOUKEI4GOU" object="[flash.printing.PaperSize]" text="PaperSize.CHOUKEI4GOU" constant="true" tiptext="Japanese choukei 4 gou (envelope)" version="" playername="AIR" helpurl="flash.printing:PaperSize:CHOUKEI4GOU"/>
                <string name="ENV_10" object="[flash.printing.PaperSize]" text="PaperSize.ENV_10" constant="true" tiptext="Legal envelope" version="" playername="AIR" helpurl="flash.printing:PaperSize:ENV_10"/>
                <string name="ENV_B5" object="[flash.printing.PaperSize]" text="PaperSize.ENV_B5" constant="true" tiptext="B5 envelope" version="" playername="AIR" helpurl="flash.printing:PaperSize:ENV_B5"/>
                <string name="ENV_C5" object="[flash.printing.PaperSize]" text="PaperSize.ENV_C5" constant="true" tiptext="C5 envelope" version="" playername="AIR" helpurl="flash.printing:PaperSize:ENV_C5"/>
                <string name="ENV_DL" object="[flash.printing.PaperSize]" text="PaperSize.ENV_DL" constant="true" tiptext="DL envelope" version="" playername="AIR" helpurl="flash.printing:PaperSize:ENV_DL"/>
                <string name="ENV_MONARCH" object="[flash.printing.PaperSize]" text="PaperSize.ENV_MONARCH" constant="true" tiptext="Monarch envelope" version="" playername="AIR" helpurl="flash.printing:PaperSize:ENV_MONARCH"/>
                <string name="ENV_PERSONAL" object="[flash.printing.PaperSize]" text="PaperSize.ENV_PERSONAL" constant="true" tiptext="Personal envelope" version="" playername="AIR" helpurl="flash.printing:PaperSize:ENV_PERSONAL"/>
                <string name="EXECUTIVE" object="[flash.printing.PaperSize]" text="PaperSize.EXECUTIVE" constant="true" tiptext="Executive size" version="" playername="AIR" helpurl="flash.printing:PaperSize:EXECUTIVE"/>
                <string name="FOLIO" object="[flash.printing.PaperSize]" text="PaperSize.FOLIO" constant="true" tiptext="Folio size" version="" playername="AIR" helpurl="flash.printing:PaperSize:FOLIO"/>
                <string name="JIS_B5" object="[flash.printing.PaperSize]" text="PaperSize.JIS_B5" constant="true" tiptext="Japanese B5" version="" playername="AIR" helpurl="flash.printing:PaperSize:JIS_B5"/>
                <string name="LEGAL" object="[flash.printing.PaperSize]" text="PaperSize.LEGAL" constant="true" tiptext="Traditional legal size" version="" playername="AIR" helpurl="flash.printing:PaperSize:LEGAL"/>
                <string name="LETTER" object="[flash.printing.PaperSize]" text="PaperSize.LETTER" constant="true" tiptext="Traditional letter size" version="" playername="AIR" helpurl="flash.printing:PaperSize:LETTER"/>
                <string name="STATEMENT" object="[flash.printing.PaperSize]" text="PaperSize.STATEMENT" constant="true" tiptext="Statement size" version="" playername="AIR" helpurl="flash.printing:PaperSize:STATEMENT"/>
            </folder>
        </folder>
        <folder name="PrintJob" id="[flash.printing.PrintJob]" sort="true" index="true" asAncestors="flash.events:EventDispatcher,Object" tiptext="The PrintJob class lets you create content and print it to one or more pages." helpurl="flash.printing:PrintJob">
            <folder name="Methods" id="Methods" tiptext="Methods for class PrintJob" helpurl="flash.printing:PrintJob">
                <string name="PrintJob" object="[flash.printing.PrintJob]" text="new PrintJob(%%)" constructor="true" tiptext="Creates a PrintJob object that you can use to print one or more pages." version="9" playername="" helpurl="flash.printing:PrintJob:PrintJob"/>
                <string name="addPage" object="[flash.printing.PrintJob]" text=".addPage(%sprite:flash.display:Sprite[,printArea:flash.geom:Rectangle=null,options:flash.printing:PrintJobOptions=null,frameNum:int=0]%):void" tiptext="Sends the specified Sprite object as a single page to the print spooler." version="9." playername="" helpurl="flash.printing:PrintJob:addPage"/>
                <string name="selectPaperSize" object="[flash.printing.PrintJob]" text=".selectPaperSize(%paperSize:String%):void" tiptext="Set the paper size." version="2" playername="AIR" helpurl="flash.printing:PrintJob:selectPaperSize"/>
                <string name="send" object="[flash.printing.PrintJob]" text=".send(%%):void" tiptext="Sends spooled pages to the printer after successful calls to the start() or start2() and addPage() methods." version="9." playername="" helpurl="flash.printing:PrintJob:send"/>
                <string name="showPageSetupDialog" object="[flash.printing.PrintJob]" text=".showPageSetupDialog(%%):Boolean" tiptext="Displays the operating system&apos;s Page Setup dialog if the current environment supports it." version="2" playername="AIR" helpurl="flash.printing:PrintJob:showPageSetupDialog"/>
                <string name="start2" object="[flash.printing.PrintJob]" text=".start2(%[uiOptions:flash.printing:PrintUIOptions=null,showPrintDialog:Boolean=true]%):Boolean" tiptext="Optionally displays the operating system&apos;s Print dialog box, starts spooling, and possibly modifies the PrintJob read-only property values." version="2" playername="AIR" helpurl="flash.printing:PrintJob:start2"/>
                <string name="start" object="[flash.printing.PrintJob]" text=".start(%%):Boolean" tiptext="Displays the operating system&apos;s Print dialog box and starts spooling." version="9." playername="" helpurl="flash.printing:PrintJob:start"/>
                <string name="terminate" object="[flash.printing.PrintJob]" text=".terminate(%%):void" tiptext="Signals that the print job should be terminated without sending." version="2" playername="AIR" helpurl="flash.printing:PrintJob:terminate"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class PrintJob" helpurl="flash.printing:PrintJob">
                <string name="active" object="[flash.printing.PrintJob]" text=".active" tiptext="Indicates whether a print job is currently active." version="" playername="AIR" helpurl="flash.printing:PrintJob:active:get"/>
                <string name="copies" object="[flash.printing.PrintJob]" text=".copies" tiptext="The number of copies that the print system prints of any pages subsequently added to the print job." version="" playername="AIR" helpurl="flash.printing:PrintJob:copies:get"/>
                <string name="firstPage" object="[flash.printing.PrintJob]" text=".firstPage" tiptext="The page number of the first page of the range entered by the user in the operating system&apos;s Print dialog." version="" playername="AIR" helpurl="flash.printing:PrintJob:firstPage:get"/>
                <string name="isColor" object="[flash.printing.PrintJob]" text=".isColor" tiptext="Indicates whether the currently selected printer at the current print settings prints using color (true) or grayscale (false)." version="" playername="AIR" helpurl="flash.printing:PrintJob:isColor:get"/>
                <string name="isSupported" object="[flash.printing.PrintJob]" text=".isSupported" tiptext="Indicates whether the PrintJob class is supported on the current platform (true) or not (false)." version="" playername="" helpurl="flash.printing:PrintJob:isSupported:get"/>
                <string name="jobName" object="[flash.printing.PrintJob]" text=".jobName" tiptext="The name or title of the print job." version="" playername="AIR" helpurl="flash.printing:PrintJob:jobName:get"/>
                <string name="lastPage" object="[flash.printing.PrintJob]" text=".lastPage" tiptext="The page number of the last page of the range entered by the user in the operating system&apos;s Print dialog." version="" playername="AIR" helpurl="flash.printing:PrintJob:lastPage:get"/>
                <string name="maxPixelsPerInch" object="[flash.printing.PrintJob]" text=".maxPixelsPerInch" tiptext="The physical resolution of the selected printer, in pixels per inch." version="" playername="AIR" helpurl="flash.printing:PrintJob:maxPixelsPerInch:get"/>
                <string name="orientation" object="[flash.printing.PrintJob]" text=".orientation" tiptext="The image orientation for printing." version="" playername="" helpurl="flash.printing:PrintJob:orientation:get"/>
                <string name="pageHeight" object="[flash.printing.PrintJob]" text=".pageHeight" tiptext="The height of the largest area which can be centered in the actual printable area on the page, in points." version="" playername="" helpurl="flash.printing:PrintJob:pageHeight:get"/>
                <string name="pageWidth" object="[flash.printing.PrintJob]" text=".pageWidth" tiptext="The width of the largest area which can be centered in the actual printable area on the page, in points." version="" playername="" helpurl="flash.printing:PrintJob:pageWidth:get"/>
                <string name="paperArea" object="[flash.printing.PrintJob]" text=".paperArea" tiptext="The bounds of the printer media in points." version="" playername="AIR" helpurl="flash.printing:PrintJob:paperArea:get"/>
                <string name="paperHeight" object="[flash.printing.PrintJob]" text=".paperHeight" tiptext="The overall paper height, in points." version="" playername="" helpurl="flash.printing:PrintJob:paperHeight:get"/>
                <string name="paperWidth" object="[flash.printing.PrintJob]" text=".paperWidth" tiptext="The overall paper width, in points." version="" playername="" helpurl="flash.printing:PrintJob:paperWidth:get"/>
                <string name="printableArea" object="[flash.printing.PrintJob]" text=".printableArea" tiptext="The bounds of the printer media&apos;s printable area in points." version="" playername="AIR" helpurl="flash.printing:PrintJob:printableArea:get"/>
                <string name="printer" object="[flash.printing.PrintJob]" text=".printer" tiptext="Gets or sets the printer to use for the current print job." version="" playername="AIR" helpurl="flash.printing:PrintJob:printer:get"/>
                <string name="printers" object="[flash.printing.PrintJob]" text=".printers" tiptext="Provides a list of the available printers as String name values." version="" playername="AIR" helpurl="flash.printing:PrintJob:printers:get"/>
                <string name="supportsPageSetupDialog" object="[flash.printing.PrintJob]" text=".supportsPageSetupDialog" tiptext="Indicates whether the Flash runtime environment supports a separate Page Setup dialog." version="" playername="AIR" helpurl="flash.printing:PrintJob:supportsPageSetupDialog:get"/>
            </folder>
        </folder>
        <folder name="PrintJobOptions" id="[flash.printing.PrintJobOptions]" sort="true" index="true" asAncestors="Object" tiptext="The PrintJobOptions class contains properties to use with the options parameter of the PrintJob.addPage() method." helpurl="flash.printing:PrintJobOptions">
            <folder name="Methods" id="Methods" tiptext="Methods for class PrintJobOptions" helpurl="flash.printing:PrintJobOptions">
                <string name="PrintJobOptions" object="[flash.printing.PrintJobOptions]" text="new PrintJobOptions(%[printAsBitmap:Boolean=false]%)" constructor="true" tiptext="Creates a new PrintJobOptions object." version="9" playername="" helpurl="flash.printing:PrintJobOptions:PrintJobOptions"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class PrintJobOptions" helpurl="flash.printing:PrintJobOptions">
                <string name="pixelsPerInch" object="[flash.printing.PrintJobOptions]" text=".pixelsPerInch" tiptext="Specifies the resolution to use for bitmaps, in pixels per inch." version="" playername="AIR" helpurl="flash.printing:PrintJobOptions:pixelsPerInch"/>
                <string name="printAsBitmap" object="[flash.printing.PrintJobOptions]" text=".printAsBitmap" tiptext="Specifies whether the content in the print job is printed as a bitmap or as a vector." version="" playername="" helpurl="flash.printing:PrintJobOptions:printAsBitmap"/>
                <string name="printMethod" object="[flash.printing.PrintJobOptions]" text=".printMethod" tiptext="Specifies that the Flash runtime chooses the most appropriate printing method, or that the author wishes to explicitly select vector or bitmap printing." version="" playername="AIR" helpurl="flash.printing:PrintJobOptions:printMethod:get"/>
            </folder>
        </folder>
        <folder name="PrintJobOrientation" id="[flash.printing.PrintJobOrientation]" sort="true" index="true" asAncestors="Object" tiptext="This class provides values that are used by the PrintJob.orientation property for the image position of a printed page." helpurl="flash.printing:PrintJobOrientation">
            <folder name="Properties" id="Properties" tiptext="Properties for class PrintJobOrientation" helpurl="flash.printing:PrintJobOrientation">
                <string name="LANDSCAPE" object="[flash.printing.PrintJobOrientation]" text="PrintJobOrientation.LANDSCAPE" constant="true" tiptext="The landscape (horizontal) image orientation for printing." version="" playername="" helpurl="flash.printing:PrintJobOrientation:LANDSCAPE"/>
                <string name="PORTRAIT" object="[flash.printing.PrintJobOrientation]" text="PrintJobOrientation.PORTRAIT" constant="true" tiptext="The portrait (vertical) image orientation for printing." version="" playername="" helpurl="flash.printing:PrintJobOrientation:PORTRAIT"/>
            </folder>
        </folder>
        <folder name="PrintMethod" id="[flash.printing.PrintMethod]" sort="true" index="true" asAncestors="Object" tiptext="This class provides values for the PrintJobOptions.printMethod property to specify the method of printing a page." helpurl="flash.printing:PrintMethod">
            <folder name="Properties" id="Properties" tiptext="Properties for class PrintMethod" helpurl="flash.printing:PrintMethod">
                <string name="AUTO" object="[flash.printing.PrintMethod]" text="PrintMethod.AUTO" constant="true" tiptext="Automatic selection of the best method of printing." version="" playername="AIR" helpurl="flash.printing:PrintMethod:AUTO"/>
                <string name="BITMAP" object="[flash.printing.PrintMethod]" text="PrintMethod.BITMAP" constant="true" tiptext="The bitmap method of printing." version="" playername="AIR" helpurl="flash.printing:PrintMethod:BITMAP"/>
                <string name="VECTOR" object="[flash.printing.PrintMethod]" text="PrintMethod.VECTOR" constant="true" tiptext="The vector method of printing." version="" playername="AIR" helpurl="flash.printing:PrintMethod:VECTOR"/>
            </folder>
        </folder>
        <folder name="PrintUIOptions" id="[flash.printing.PrintUIOptions]" sort="true" index="true" asAncestors="Object" tiptext="The PrintUIOptions class is used to specify options for print dialogs that are displayed to the user." helpurl="flash.printing:PrintUIOptions">
            <folder name="Methods" id="Methods" tiptext="Methods for class PrintUIOptions" helpurl="flash.printing:PrintUIOptions">
                <string name="PrintUIOptions" object="[flash.printing.PrintUIOptions]" text="new PrintUIOptions(%%)" constructor="true" tiptext="Creates a new PrintUIOptions object." version="2" playername="AIR" helpurl="flash.printing:PrintUIOptions:PrintUIOptions"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class PrintUIOptions" helpurl="flash.printing:PrintUIOptions">
                <string name="disablePageRange" object="[flash.printing.PrintUIOptions]" text=".disablePageRange" tiptext="Specifies whether the page range in the print dialog is disabled (true) or the user can edit it (false)." version="" playername="AIR" helpurl="flash.printing:PrintUIOptions:disablePageRange"/>
                <string name="maxPage" object="[flash.printing.PrintUIOptions]" text=".maxPage" tiptext="The maxiumum page number the user can enter in the print dialog." version="" playername="AIR" helpurl="flash.printing:PrintUIOptions:maxPage"/>
                <string name="minPage" object="[flash.printing.PrintUIOptions]" text=".minPage" tiptext="The minimum page number a user can enter in the print dialog." version="" playername="AIR" helpurl="flash.printing:PrintUIOptions:minPage"/>
            </folder>
        </folder>
    </folder>
        <folder name="flash.profiler" id="flash.profiler" sort="true" tiptext="Classes for package flash.profiler" helpurl="flash.profiler">
        <folder name="Methods" id="Methods" tiptext="Methods for package flash.profiler" helpurl="flash.profiler">
            <string name="showRedrawRegions" text="showRedrawRegions(%on:Boolean[,color:uint=0xFF0000]%):void" tiptext="Shows or hides redraw regions." version="9" playername="" helpurl="flash.profiler:showRedrawRegions"/>
        </folder>
    </folder>
        <folder name="flash.sampler" id="flash.sampler" sort="true" tiptext="Classes for package flash.sampler" helpurl="flash.sampler">
        <folder name="DeleteObjectSample" id="[flash.sampler.DeleteObjectSample]" sort="true" index="true" asAncestors="flash.sampler:Sample,Object" tiptext="The DeleteObjectSample class represents objects that are created within a getSamples() stream; each DeleteObjectSample object corresponds to a NewObjectSample object." helpurl="flash.sampler:DeleteObjectSample">
            <folder name="Properties" id="Properties" tiptext="Properties for class DeleteObjectSample" helpurl="flash.sampler:DeleteObjectSample">
                <string name="id" object="[flash.sampler.DeleteObjectSample]" text="DeleteObjectSample.id" constant="true" tiptext="The unique identification number that matches up with a NewObjectSample&apos;s identification number." version="" playername="" helpurl="flash.sampler:DeleteObjectSample:id"/>
                <string name="size" object="[flash.sampler.DeleteObjectSample]" text="DeleteObjectSample.size" constant="true" tiptext="The size of the DeleteObjectSample object before it is deleted." version="" playername="" helpurl="flash.sampler:DeleteObjectSample:size"/>
            </folder>
        </folder>
        <folder name="NewObjectSample" id="[flash.sampler.NewObjectSample]" sort="true" index="true" asAncestors="flash.sampler:Sample,Object" tiptext="The NewObjectSample class represents objects that are created within a getSamples() stream." helpurl="flash.sampler:NewObjectSample">
            <folder name="Properties" id="Properties" tiptext="Properties for class NewObjectSample" helpurl="flash.sampler:NewObjectSample">
                <string name="type" object="[flash.sampler.NewObjectSample]" text="NewObjectSample.type" constant="true" tiptext="The Class object corresponding to the object created within a getSamples() stream." version="" playername="" helpurl="flash.sampler:NewObjectSample:type"/>
                <string name="object" object="[flash.sampler.NewObjectSample]" text=".object" tiptext="The NewObjectSample object if it still exists." version="" playername="" helpurl="flash.sampler:NewObjectSample:object:get"/>
                <string name="size" object="[flash.sampler.NewObjectSample]" text=".size" tiptext="The NewObjectSample object size." version="" playername="" helpurl="flash.sampler:NewObjectSample:size:get"/>
            </folder>
        </folder>
        <folder name="Methods" id="Methods" tiptext="Methods for package flash.sampler" helpurl="flash.sampler">
            <string name="clearSamples" text="clearSamples(%%):void" tiptext="Clears the current set of Sample objects." version="9.0.115.0" playername="" helpurl="flash.sampler:clearSamples"/>
            <string name="getGetterInvocationCount" text="getGetterInvocationCount(%obj:Object,qname:QName%):Number" tiptext="Returns the number of times a get function was executed." version="9.0.115.0" playername="" helpurl="flash.sampler:getGetterInvocationCount"/>
            <string name="getInvocationCount" text="getInvocationCount(%obj:Object,qname:QName%):Number" tiptext="Returns the number of times a method was executed." version="9.0.115.0" playername="" helpurl="flash.sampler:getInvocationCount"/>
            <string name="getLexicalScopes" text="getLexicalScopes(%obj:Function%):Array" tiptext="Exposes the lexical scope of a Function so that captured scope objects (including activation objects and with scopes) are seen by the profiler as being retained by the Function instance." version="" playername="" helpurl="flash.sampler:getLexicalScopes"/>
            <string name="getMasterString" text="getMasterString(%str:String%):String" tiptext="Returns the master string upon which this string depends, or null if this string does not depend on another string." version="" playername="" helpurl="flash.sampler:getMasterString"/>
            <string name="getMemberNames" text="getMemberNames(%o:Object[,instanceNames:Boolean=false]%):Object" tiptext="Returns an object containing all members of a specified object, including private members." version="9.0.115.0" playername="" helpurl="flash.sampler:getMemberNames"/>
            <string name="getSampleCount" text="getSampleCount(%%):Number" tiptext="Returns the number of samples collected." version="9.0.115.0" playername="" helpurl="flash.sampler:getSampleCount"/>
            <string name="getSamples" text="getSamples(%%):Object" tiptext="Returns an object of memory usage Sample instances from the last sampling session." version="9.0.115.0" playername="" helpurl="flash.sampler:getSamples"/>
            <string name="getSavedThis" text="getSavedThis(%obj:Function%):Object" tiptext="Returns the saved &quot;this&quot; from a Method closure that you normal can&apos;t see from AS." version="" playername="" helpurl="flash.sampler:getSavedThis"/>
            <string name="getSetterInvocationCount" text="getSetterInvocationCount(%obj:Object,qname:QName%):Number" tiptext="Returns the number of times a set function was executed." version="9.0.115.0" playername="" helpurl="flash.sampler:getSetterInvocationCount"/>
            <string name="getSize" text="getSize(%o:*%):Number" tiptext="Returns the size in memory of a specified object when used with the Flash Player 9.0.115.0 or later debugger version." version="9.0.115.0" playername="" helpurl="flash.sampler:getSize"/>
            <string name="isGetterSetter" text="isGetterSetter(%obj:Object,qname:QName%):Boolean" tiptext="Checks to see if a property is defined by a get/set function." version="9.0.115.0" playername="" helpurl="flash.sampler:isGetterSetter"/>
            <string name="pauseSampling" text="pauseSampling(%%):void" tiptext="Stops the sampling process momentarily." version="9.0.115.0" playername="" helpurl="flash.sampler:pauseSampling"/>
            <string name="sampleInternalAllocs" text="sampleInternalAllocs(%b:Boolean%):void" tiptext="Tells the sampler if it should create NewObjectSamples for internal allocations from the flash player." version="" playername="" helpurl="flash.sampler:sampleInternalAllocs"/>
            <string name="setSamplerCallback" text="setSamplerCallback(%f:Function%):void" tiptext="Sets a callback function for the sampler - this function will be called when the sample stream is almost exhausted." version="" playername="" helpurl="flash.sampler:setSamplerCallback"/>
            <string name="startSampling" text="startSampling(%%):void" tiptext="Begins the process of collecting memory usage Sample objects." version="9.0.115.0" playername="" helpurl="flash.sampler:startSampling"/>
            <string name="stopSampling" text="stopSampling(%%):void" tiptext="Ends the process of collecting memory usage Sample objects and frees resources dedicated to the sampling process." version="9.0.115.0" playername="" helpurl="flash.sampler:stopSampling"/>
        </folder>
        <folder name="Sample" id="[flash.sampler.Sample]" sort="true" index="true" asAncestors="Object" tiptext="The Sample class creates objects that hold memory analysis information over distinct durations." helpurl="flash.sampler:Sample">
            <folder name="Properties" id="Properties" tiptext="Properties for class Sample" helpurl="flash.sampler:Sample">
                <string name="stack" object="[flash.sampler.Sample]" text="Sample.stack" constant="true" tiptext="Contains information about the methods executed by Flash Player over a specified period of time." version="" playername="" helpurl="flash.sampler:Sample:stack"/>
                <string name="time" object="[flash.sampler.Sample]" text="Sample.time" constant="true" tiptext="The microseconds that define the duration of the Sample instance." version="" playername="" helpurl="flash.sampler:Sample:time"/>
            </folder>
        </folder>
        <folder name="StackFrame" id="[flash.sampler.StackFrame]" sort="true" index="true" asAncestors="Object" tiptext="The StackFrame class provides access to the properties of a data block containing a function." helpurl="flash.sampler:StackFrame">
            <folder name="Methods" id="Methods" tiptext="Methods for class StackFrame" helpurl="flash.sampler:StackFrame">
                <string name="toString" object="[flash.sampler.StackFrame]" text=".toString(%%):String" tiptext="Converts the StackFrame to a string of its properties." version="9.0.115.0" playername="" helpurl="flash.sampler:StackFrame:toString"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class StackFrame" helpurl="flash.sampler:StackFrame">
                <string name="file" object="[flash.sampler.StackFrame]" text="StackFrame.file" constant="true" tiptext="The file name of the SWF file being debugged." version="" playername="" helpurl="flash.sampler:StackFrame:file"/>
                <string name="line" object="[flash.sampler.StackFrame]" text="StackFrame.line" constant="true" tiptext="The line number for the function in the SWF file being debugged." version="" playername="" helpurl="flash.sampler:StackFrame:line"/>
                <string name="name" object="[flash.sampler.StackFrame]" text="StackFrame.name" constant="true" tiptext="The function name in the stack frame." version="" playername="" helpurl="flash.sampler:StackFrame:name"/>
                <string name="scriptID" object="[flash.sampler.StackFrame]" text="StackFrame.scriptID" constant="true" tiptext="The identifier for the script function in the application being profiled." version="" playername="" helpurl="flash.sampler:StackFrame:scriptID"/>
            </folder>
        </folder>
    </folder>
        <folder name="flash.security" id="flash.security" sort="true" tiptext="Classes for package flash.security" helpurl="flash.security">
        <folder name="CertificateStatus" id="[flash.security.CertificateStatus]" sort="true" index="true" asAncestors="Object" tiptext="The CertificateStatus class defines constants used to report theresults of certificate validation processing by a SecureSocket object." helpurl="flash.security:CertificateStatus">
            <folder name="Properties" id="Properties" tiptext="Properties for class CertificateStatus" helpurl="flash.security:CertificateStatus">
                <string name="EXPIRED" object="[flash.security.CertificateStatus]" text="CertificateStatus.EXPIRED" constant="true" tiptext="The certificate is outside its valid period." version="" playername="AIR" helpurl="flash.security:CertificateStatus:EXPIRED"/>
                <string name="INVALID_CHAIN" object="[flash.security.CertificateStatus]" text="CertificateStatus.INVALID_CHAIN" constant="true" tiptext="A root or intermediate certificate in this certificate&apos;s chain is invalid." version="" playername="AIR" helpurl="flash.security:CertificateStatus:INVALID_CHAIN"/>
                <string name="INVALID" object="[flash.security.CertificateStatus]" text="CertificateStatus.INVALID" constant="true" tiptext="An invalid certificate." version="" playername="AIR" helpurl="flash.security:CertificateStatus:INVALID"/>
                <string name="NOT_YET_VALID" object="[flash.security.CertificateStatus]" text="CertificateStatus.NOT_YET_VALID" constant="true" tiptext="The certificate is not yet valid." version="" playername="AIR" helpurl="flash.security:CertificateStatus:NOT_YET_VALID"/>
                <string name="PRINCIPAL_MISMATCH" object="[flash.security.CertificateStatus]" text="CertificateStatus.PRINCIPAL_MISMATCH" constant="true" tiptext="The certificate common name does not match the expected host name." version="" playername="AIR" helpurl="flash.security:CertificateStatus:PRINCIPAL_MISMATCH"/>
                <string name="REVOKED" object="[flash.security.CertificateStatus]" text="CertificateStatus.REVOKED" constant="true" tiptext="The certificate has been revoked." version="" playername="AIR" helpurl="flash.security:CertificateStatus:REVOKED"/>
                <string name="TRUSTED" object="[flash.security.CertificateStatus]" text="CertificateStatus.TRUSTED" constant="true" tiptext="A valid, trusted certificate." version="" playername="AIR" helpurl="flash.security:CertificateStatus:TRUSTED"/>
                <string name="UNKNOWN" object="[flash.security.CertificateStatus]" text="CertificateStatus.UNKNOWN" constant="true" tiptext="The validity of the certificate is not known." version="" playername="AIR" helpurl="flash.security:CertificateStatus:UNKNOWN"/>
                <string name="UNTRUSTED_SIGNERS" object="[flash.security.CertificateStatus]" text="CertificateStatus.UNTRUSTED_SIGNERS" constant="true" tiptext="The certificate does not chain to a trusted root certificate." version="" playername="AIR" helpurl="flash.security:CertificateStatus:UNTRUSTED_SIGNERS"/>
            </folder>
        </folder>
        <folder name="IURIDereferencer" id="[flash.security.IURIDereferencer]" sort="true" index="true" tiptext="IURIDereferencer defines an interface for objects that resolve URIs in an XML signature." helpurl="flash.security:IURIDereferencer">
            <folder name="Methods" id="Methods" tiptext="Methods for class IURIDereferencer" helpurl="flash.security:IURIDereferencer">
                <string name="dereference" object="[flash.security.IURIDereferencer]" text=".dereference(%uri:String%):flash.utils:IDataInput" tiptext="Resolves and dereferences the specified URI." version="1.0" playername="AIR" helpurl="flash.security:IURIDereferencer:dereference"/>
            </folder>
        </folder>
        <folder name="ReferencesValidationSetting" id="[flash.security.ReferencesValidationSetting]" sort="true" index="true" asAncestors="Object" tiptext="The ReferencesValidationSetting class defines constants used by the referencesValidationSetting property of an XMLSignatureValidator object." helpurl="flash.security:ReferencesValidationSetting">
            <folder name="Properties" id="Properties" tiptext="Properties for class ReferencesValidationSetting" helpurl="flash.security:ReferencesValidationSetting">
                <string name="NEVER" object="[flash.security.ReferencesValidationSetting]" text="ReferencesValidationSetting.NEVER" constant="true" tiptext="Never check references." version="" playername="AIR" helpurl="flash.security:ReferencesValidationSetting:NEVER"/>
                <string name="VALID_IDENTITY" object="[flash.security.ReferencesValidationSetting]" text="ReferencesValidationSetting.VALID_IDENTITY" constant="true" tiptext="Only check references if the signing certificate is valid and trusted." version="" playername="AIR" helpurl="flash.security:ReferencesValidationSetting:VALID_IDENTITY"/>
                <string name="VALID_OR_UNKNOWN_IDENTITY" object="[flash.security.ReferencesValidationSetting]" text="ReferencesValidationSetting.VALID_OR_UNKNOWN_IDENTITY" constant="true" tiptext="Check references even if the signing certificate is untrusted (does not chain to a known trusted root)." version="" playername="AIR" helpurl="flash.security:ReferencesValidationSetting:VALID_OR_UNKNOWN_IDENTITY"/>
            </folder>
        </folder>
        <folder name="RevocationCheckSettings" id="[flash.security.RevocationCheckSettings]" sort="true" index="true" asAncestors="Object" tiptext="The RevocationCheckSettings class defines constants used by the revocationCheckSetting property of an XMLSignatureValidator object." helpurl="flash.security:RevocationCheckSettings">
            <folder name="Properties" id="Properties" tiptext="Properties for class RevocationCheckSettings" helpurl="flash.security:RevocationCheckSettings">
                <string name="ALWAYS_REQUIRED" object="[flash.security.RevocationCheckSettings]" text="RevocationCheckSettings.ALWAYS_REQUIRED" constant="true" tiptext="Always check certificate revocation." version="" playername="AIR" helpurl="flash.security:RevocationCheckSettings:ALWAYS_REQUIRED"/>
                <string name="BEST_EFFORT" object="[flash.security.RevocationCheckSettings]" text="RevocationCheckSettings.BEST_EFFORT" constant="true" tiptext="Check certificate revocation, if revocation information is available and the revocation status can be obtained." version="" playername="AIR" helpurl="flash.security:RevocationCheckSettings:BEST_EFFORT"/>
                <string name="NEVER" object="[flash.security.RevocationCheckSettings]" text="RevocationCheckSettings.NEVER" constant="true" tiptext="Do not check certificate revocation." version="" playername="AIR" helpurl="flash.security:RevocationCheckSettings:NEVER"/>
                <string name="REQUIRED_IF_AVAILABLE" object="[flash.security.RevocationCheckSettings]" text="RevocationCheckSettings.REQUIRED_IF_AVAILABLE" constant="true" tiptext="Check certificate revocation if the certificate includes revocation information." version="" playername="AIR" helpurl="flash.security:RevocationCheckSettings:REQUIRED_IF_AVAILABLE"/>
            </folder>
        </folder>
        <folder name="SignatureStatus" id="[flash.security.SignatureStatus]" sort="true" index="true" asAncestors="Object" tiptext="The SignatureStatus class defines constants used by the validityStatus property of an XMLSignatureValidator object." helpurl="flash.security:SignatureStatus">
            <folder name="Properties" id="Properties" tiptext="Properties for class SignatureStatus" helpurl="flash.security:SignatureStatus">
                <string name="INVALID" object="[flash.security.SignatureStatus]" text="SignatureStatus.INVALID" constant="true" tiptext="Invalid status." version="" playername="AIR" helpurl="flash.security:SignatureStatus:INVALID"/>
                <string name="UNKNOWN" object="[flash.security.SignatureStatus]" text="SignatureStatus.UNKNOWN" constant="true" tiptext="Unknown status." version="" playername="AIR" helpurl="flash.security:SignatureStatus:UNKNOWN"/>
                <string name="VALID" object="[flash.security.SignatureStatus]" text="SignatureStatus.VALID" constant="true" tiptext="Valid status." version="" playername="AIR" helpurl="flash.security:SignatureStatus:VALID"/>
            </folder>
        </folder>
        <folder name="SignerTrustSettings" id="[flash.security.SignerTrustSettings]" sort="true" index="true" asAncestors="Object" tiptext="The SignerTrustSettings class defines constants used with the signerTrustSettings property of an XMLSignatureValidator object." helpurl="flash.security:SignerTrustSettings">
            <folder name="Properties" id="Properties" tiptext="Properties for class SignerTrustSettings" helpurl="flash.security:SignerTrustSettings">
                <string name="CODE_SIGNING" object="[flash.security.SignerTrustSettings]" text="SignerTrustSettings.CODE_SIGNING" constant="true" tiptext="The certificate is trusted for code signing." version="" playername="AIR" helpurl="flash.security:SignerTrustSettings:CODE_SIGNING"/>
                <string name="PLAYLIST_SIGNING" object="[flash.security.SignerTrustSettings]" text="SignerTrustSettings.PLAYLIST_SIGNING" constant="true" tiptext="The certificate is trusted for signing playlists." version="" playername="AIR" helpurl="flash.security:SignerTrustSettings:PLAYLIST_SIGNING"/>
                <string name="SIGNING" object="[flash.security.SignerTrustSettings]" text="SignerTrustSettings.SIGNING" constant="true" tiptext="The certificate is trusted for signing in general." version="" playername="AIR" helpurl="flash.security:SignerTrustSettings:SIGNING"/>
            </folder>
        </folder>
        <folder name="XMLSignatureValidator" id="[flash.security.XMLSignatureValidator]" sort="true" index="true" asAncestors="flash.events:EventDispatcher,Object" tiptext="The XMLSignatureValidator class validates whether an XML signature file is well formed, unmodified, and, optionally, whether it is signed using a key linked to a trusted digital certificate." helpurl="flash.security:XMLSignatureValidator">
            <folder name="Methods" id="Methods" tiptext="Methods for class XMLSignatureValidator" helpurl="flash.security:XMLSignatureValidator">
                <string name="XMLSignatureValidator" object="[flash.security.XMLSignatureValidator]" text="new XMLSignatureValidator(%%)" constructor="true" tiptext="Creates an XMLSignatureValidator object." version="1.0" playername="AIR" helpurl="flash.security:XMLSignatureValidator:XMLSignatureValidator"/>
                <string name="addCertificate" object="[flash.security.XMLSignatureValidator]" text=".addCertificate(%cert:flash.utils:ByteArray,trusted:Boolean%)" tiptext="Adds an x509 certificate for chain building." version="1.0" playername="AIR" helpurl="flash.security:XMLSignatureValidator:addCertificate"/>
                <string name="verify" object="[flash.security.XMLSignatureValidator]" text=".verify(%signature:XML%):void" tiptext="Verifies the specified signature." version="1.0" playername="AIR" helpurl="flash.security:XMLSignatureValidator:verify"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class XMLSignatureValidator" helpurl="flash.security:XMLSignatureValidator">
                <string name="digestStatus" object="[flash.security.XMLSignatureValidator]" text=".digestStatus" tiptext="The validity status of the cryptographic signature computed over the signature SignedInfo element." version="" playername="AIR" helpurl="flash.security:XMLSignatureValidator:digestStatus:get"/>
                <string name="identityStatus" object="[flash.security.XMLSignatureValidator]" text=".identityStatus" tiptext="The validity status of the signing certificate." version="" playername="AIR" helpurl="flash.security:XMLSignatureValidator:identityStatus:get"/>
                <string name="isSupported" object="[flash.security.XMLSignatureValidator]" text=".isSupported" tiptext="The isSupported property is set to true if the XMLSignatureValidator class is supported on the current platform, otherwise it is set to false." version="" playername="AIR" helpurl="flash.security:XMLSignatureValidator:isSupported:get"/>
                <string name="referencesStatus" object="[flash.security.XMLSignatureValidator]" text=".referencesStatus" tiptext="The validity status of the data in the references in the signature SignedInfo element." version="" playername="AIR" helpurl="flash.security:XMLSignatureValidator:referencesStatus:get"/>
                <string name="referencesValidationSetting" object="[flash.security.XMLSignatureValidator]" text=".referencesValidationSetting" tiptext="Specifies the conditions under which references are checked." version="" playername="AIR" helpurl="flash.security:XMLSignatureValidator:referencesValidationSetting:get"/>
                <string name="revocationCheckSetting" object="[flash.security.XMLSignatureValidator]" text=".revocationCheckSetting" tiptext="Specifies how certificate revocation is checked." version="" playername="AIR" helpurl="flash.security:XMLSignatureValidator:revocationCheckSetting:get"/>
                <string name="signerCN" object="[flash.security.XMLSignatureValidator]" text=".signerCN" tiptext="The Common Name field of the signing certificate." version="" playername="AIR" helpurl="flash.security:XMLSignatureValidator:signerCN:get"/>
                <string name="signerDN" object="[flash.security.XMLSignatureValidator]" text=".signerDN" tiptext="The Distinguished Name field of the signing certificate." version="" playername="AIR" helpurl="flash.security:XMLSignatureValidator:signerDN:get"/>
                <string name="signerExtendedKeyUsages" object="[flash.security.XMLSignatureValidator]" text=".signerExtendedKeyUsages" tiptext="An array containing the Extended Key Usages OIDs listed in the signing certificate." version="" playername="AIR" helpurl="flash.security:XMLSignatureValidator:signerExtendedKeyUsages:get"/>
                <string name="signerTrustSettings" object="[flash.security.XMLSignatureValidator]" text=".signerTrustSettings" tiptext="An array containing the trust settings of the signing certificate." version="" playername="AIR" helpurl="flash.security:XMLSignatureValidator:signerTrustSettings:get"/>
                <string name="uriDereferencer" object="[flash.security.XMLSignatureValidator]" text=".uriDereferencer" tiptext="The IURIDereferencer implementation." version="" playername="AIR" helpurl="flash.security:XMLSignatureValidator:uriDereferencer:get"/>
                <string name="useSystemTrustStore" object="[flash.security.XMLSignatureValidator]" text=".useSystemTrustStore" tiptext="Specifies that certificates in the system trust store are used for chain building." version="" playername="AIR" helpurl="flash.security:XMLSignatureValidator:useSystemTrustStore:get"/>
                <string name="validityStatus" object="[flash.security.XMLSignatureValidator]" text=".validityStatus" tiptext="The validity status of a verified XML signature." version="" playername="AIR" helpurl="flash.security:XMLSignatureValidator:validityStatus:get"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class XMLSignatureValidator" helpurl="flash.security:XMLSignatureValidator">
                <string name="error" object="[flash.security.XMLSignatureValidator]" text=".addEventListener(%type:String=ErrorEvent.ERROR{ErrorEvent.ERROR,Event.COMPLETE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched if verification cannot complete because of errors." version="" playername="AIR" helpurl="flash.security:XMLSignatureValidator_flash.events.ErrorEvent.ERROR_error"/>
                <string name="complete" object="[flash.security.XMLSignatureValidator]" text=".addEventListener(%type:String=Event.COMPLETE{ErrorEvent.ERROR,Event.COMPLETE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when verification is complete." version="" playername="AIR" helpurl="flash.security:XMLSignatureValidator_flash.events.Event.COMPLETE_complete"/>
            </folder>
        </folder>
    </folder>
        <folder name="flash.sensors" id="flash.sensors" sort="true" tiptext="Classes for package flash.sensors" helpurl="flash.sensors">
        <folder name="Accelerometer" id="[flash.sensors.Accelerometer]" sort="true" index="true" asAncestors="flash.events:EventDispatcher,Object" tiptext="The Accelerometer class dispatches events based on activity detected by the device&apos;s motion sensor." helpurl="flash.sensors:Accelerometer">
            <folder name="Methods" id="Methods" tiptext="Methods for class Accelerometer" helpurl="flash.sensors:Accelerometer">
                <string name="Accelerometer" object="[flash.sensors.Accelerometer]" text="new Accelerometer(%%)" constructor="true" tiptext="Creates a new Accelerometer instance." version="4" playername="" helpurl="flash.sensors:Accelerometer:Accelerometer"/>
                <string name="setRequestedUpdateInterval" object="[flash.sensors.Accelerometer]" text=".setRequestedUpdateInterval(%interval:Number%):void" tiptext="The setRequestedUpdateInterval method is used to set the desired time interval for updates." version="4" playername="" helpurl="flash.sensors:Accelerometer:setRequestedUpdateInterval"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class Accelerometer" helpurl="flash.sensors:Accelerometer">
                <string name="isSupported" object="[flash.sensors.Accelerometer]" text=".isSupported" tiptext="The isSupported property is set to true if the accelerometer sensor is available on the device, otherwise it is set to false." version="" playername="" helpurl="flash.sensors:Accelerometer:isSupported:get"/>
                <string name="muted" object="[flash.sensors.Accelerometer]" text=".muted" tiptext="Specifies whether the user has denied access to the accelerometer (true) or allowed access (false)." version="" playername="" helpurl="flash.sensors:Accelerometer:muted:get"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class Accelerometer" helpurl="flash.sensors:Accelerometer">
                <string name="status" object="[flash.sensors.Accelerometer]" text=".addEventListener(%type:String=StatusEvent.STATUS{StatusEvent.STATUS,AccelerometerEvent.UPDATE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when an accelerometer changes its status." version="" playername="" helpurl="flash.sensors:Accelerometer_flash.events.StatusEvent.STATUS_status"/>
                <string name="update" object="[flash.sensors.Accelerometer]" text=".addEventListener(%type:String=AccelerometerEvent.UPDATE{StatusEvent.STATUS,AccelerometerEvent.UPDATE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="The update event is dispatched in response to updates from the accelerometer sensor." version="" playername="" helpurl="flash.sensors:Accelerometer_flash.events.AccelerometerEvent.UPDATE_update"/>
            </folder>
        </folder>
        <folder name="Geolocation" id="[flash.sensors.Geolocation]" sort="true" index="true" asAncestors="flash.events:EventDispatcher,Object" tiptext="The Geolocation class dispatches events in response to the device&apos;s location sensor." helpurl="flash.sensors:Geolocation">
            <folder name="Methods" id="Methods" tiptext="Methods for class Geolocation" helpurl="flash.sensors:Geolocation">
                <string name="Geolocation" object="[flash.sensors.Geolocation]" text="new Geolocation(%%)" constructor="true" tiptext="Creates a new Geolocation instance." version="4" playername="" helpurl="flash.sensors:Geolocation:Geolocation"/>
                <string name="setRequestedUpdateInterval" object="[flash.sensors.Geolocation]" text=".setRequestedUpdateInterval(%interval:Number%):void" tiptext="Used to set the time interval for updates, in milliseconds." version="4" playername="" helpurl="flash.sensors:Geolocation:setRequestedUpdateInterval"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class Geolocation" helpurl="flash.sensors:Geolocation">
                <string name="isSupported" object="[flash.sensors.Geolocation]" text=".isSupported" tiptext="Whether a location sensor is available on the device (true); otherwise false." version="" playername="" helpurl="flash.sensors:Geolocation:isSupported:get"/>
                <string name="muted" object="[flash.sensors.Geolocation]" text=".muted" tiptext="Specifies whether the user has denied access to the geolocation (true) or allowed access (false)." version="" playername="AIR" helpurl="flash.sensors:Geolocation:muted:get"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class Geolocation" helpurl="flash.sensors:Geolocation">
                <string name="status" object="[flash.sensors.Geolocation]" text=".addEventListener(%type:String=StatusEvent.STATUS{StatusEvent.STATUS,GeolocationEvent.UPDATE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="The Geolocation object dispatches status events when the user changes access to the location sensor." version="" playername="" helpurl="flash.sensors:Geolocation_flash.events.StatusEvent.STATUS_status"/>
                <string name="update" object="[flash.sensors.Geolocation]" text=".addEventListener(%type:String=GeolocationEvent.UPDATE{StatusEvent.STATUS,GeolocationEvent.UPDATE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="The update event is dispatched in response to updates from the location sensor." version="" playername="" helpurl="flash.sensors:Geolocation_flash.events.GeolocationEvent.UPDATE_update"/>
            </folder>
        </folder>
    </folder>
        <folder name="flash.system" id="flash.system" sort="true" tiptext="Classes for package flash.system" helpurl="flash.system">
        <folder name="ApplicationDomain" id="[flash.system.ApplicationDomain]" sort="true" index="true" asAncestors="Object" tiptext="The ApplicationDomain class is a container for discrete groups of class definitions." helpurl="flash.system:ApplicationDomain">
            <folder name="Methods" id="Methods" tiptext="Methods for class ApplicationDomain" helpurl="flash.system:ApplicationDomain">
                <string name="ApplicationDomain" object="[flash.system.ApplicationDomain]" text="new ApplicationDomain(%[parentDomain:flash.system:ApplicationDomain=null]%)" constructor="true" tiptext="Creates a new application domain." version="4" playername="" helpurl="flash.system:ApplicationDomain:ApplicationDomain"/>
                <string name="getDefinition" object="[flash.system.ApplicationDomain]" text=".getDefinition(%name:String%):Object" tiptext="Gets a public definition from the specified application domain." version="4" playername="" helpurl="flash.system:ApplicationDomain:getDefinition"/>
                <string name="hasDefinition" object="[flash.system.ApplicationDomain]" text=".hasDefinition(%name:String%):Boolean" tiptext="Checks to see if a public definition exists within the specified application domain." version="4" playername="" helpurl="flash.system:ApplicationDomain:hasDefinition"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class ApplicationDomain" helpurl="flash.system:ApplicationDomain">
                <string name="MIN_DOMAIN_MEMORY_LENGTH" object="[flash.system.ApplicationDomain]" text=".MIN_DOMAIN_MEMORY_LENGTH" tiptext="Gets the minimum memory object length required to be used as ApplicationDomain.domainMemory." version="" playername="" helpurl="flash.system:ApplicationDomain:MIN_DOMAIN_MEMORY_LENGTH:get"/>
                <string name="currentDomain" object="[flash.system.ApplicationDomain]" text=".currentDomain" tiptext="Gets the current application domain in which your code is executing." version="" playername="" helpurl="flash.system:ApplicationDomain:currentDomain:get"/>
                <string name="domainMemory" object="[flash.system.ApplicationDomain]" text=".domainMemory" tiptext="Gets and sets the object on which domain-global memory operations will operate within this ApplicationDomain." version="" playername="" helpurl="flash.system:ApplicationDomain:domainMemory:get"/>
                <string name="parentDomain" object="[flash.system.ApplicationDomain]" text=".parentDomain" tiptext="Gets the parent domain of this application domain." version="" playername="" helpurl="flash.system:ApplicationDomain:parentDomain:get"/>
            </folder>
        </folder>
        <folder name="Capabilities" id="[flash.system.Capabilities]" sort="true" index="true" asAncestors="Object" tiptext="The Capabilities class provides properties that describe the system and runtime that are hosting the application." helpurl="flash.system:Capabilities">
            <folder name="Properties" id="Properties" tiptext="Properties for class Capabilities" helpurl="flash.system:Capabilities">
                <string name="avHardwareDisable" object="[flash.system.Capabilities]" text=".avHardwareDisable" tiptext="Specifies whether access to the user&apos;s camera and microphone has been administratively prohibited (true) or allowed (false)." version="" playername="" helpurl="flash.system:Capabilities:avHardwareDisable:get"/>
                <string name="cpuArchitecture" object="[flash.system.Capabilities]" text=".cpuArchitecture" tiptext="Specifies the current CPU architecture." version="" playername="" helpurl="flash.system:Capabilities:cpuArchitecture:get"/>
                <string name="hasAccessibility" object="[flash.system.Capabilities]" text=".hasAccessibility" tiptext="Specifies whether the system supports (true) or does not support (false) communication with accessibility aids." version="" playername="" helpurl="flash.system:Capabilities:hasAccessibility:get"/>
                <string name="hasAudioEncoder" object="[flash.system.Capabilities]" text=".hasAudioEncoder" tiptext="Specifies whether the system can (true) or cannot (false) encode an audio stream, such as that coming from a microphone." version="" playername="" helpurl="flash.system:Capabilities:hasAudioEncoder:get"/>
                <string name="hasAudio" object="[flash.system.Capabilities]" text=".hasAudio" tiptext="Specifies whether the system has audio capabilities." version="" playername="" helpurl="flash.system:Capabilities:hasAudio:get"/>
                <string name="hasEmbeddedVideo" object="[flash.system.Capabilities]" text=".hasEmbeddedVideo" tiptext="Specifies whether the system supports (true) or does not support (false) embedded video." version="" playername="" helpurl="flash.system:Capabilities:hasEmbeddedVideo:get"/>
                <string name="hasIME" object="[flash.system.Capabilities]" text=".hasIME" tiptext="Specifies whether the system does (true) or does not (false) have an input method editor (IME) installed." version="" playername="" helpurl="flash.system:Capabilities:hasIME:get"/>
                <string name="hasMP3" object="[flash.system.Capabilities]" text=".hasMP3" tiptext="Specifies whether the system does (true) or does not (false) have an MP3 decoder." version="" playername="" helpurl="flash.system:Capabilities:hasMP3:get"/>
                <string name="hasPrinting" object="[flash.system.Capabilities]" text=".hasPrinting" tiptext="Specifies whether the system does (true) or does not (false) support printing." version="" playername="" helpurl="flash.system:Capabilities:hasPrinting:get"/>
                <string name="hasScreenBroadcast" object="[flash.system.Capabilities]" text=".hasScreenBroadcast" tiptext="Specifies whether the system does (true) or does not (false) support the development of screen broadcast applications to be run through Flash Media Server." version="" playername="" helpurl="flash.system:Capabilities:hasScreenBroadcast:get"/>
                <string name="hasScreenPlayback" object="[flash.system.Capabilities]" text=".hasScreenPlayback" tiptext="Specifies whether the system does (true) or does not (false) support the playback of screen broadcast applications that are being run through Flash Media Server." version="" playername="" helpurl="flash.system:Capabilities:hasScreenPlayback:get"/>
                <string name="hasStreamingAudio" object="[flash.system.Capabilities]" text=".hasStreamingAudio" tiptext="Specifies whether the system can (true) or cannot (false) play streaming audio." version="" playername="" helpurl="flash.system:Capabilities:hasStreamingAudio:get"/>
                <string name="hasStreamingVideo" object="[flash.system.Capabilities]" text=".hasStreamingVideo" tiptext="Specifies whether the system can (true) or cannot (false) play streaming video." version="" playername="" helpurl="flash.system:Capabilities:hasStreamingVideo:get"/>
                <string name="hasTLS" object="[flash.system.Capabilities]" text=".hasTLS" tiptext="Specifies whether the system supports native SSL sockets through NetConnection (true) or does not (false)." version="" playername="" helpurl="flash.system:Capabilities:hasTLS:get"/>
                <string name="hasVideoEncoder" object="[flash.system.Capabilities]" text=".hasVideoEncoder" tiptext="Specifies whether the system can (true) or cannot (false) encode a video stream, such as that coming from a web camera." version="" playername="" helpurl="flash.system:Capabilities:hasVideoEncoder:get"/>
                <string name="isDebugger" object="[flash.system.Capabilities]" text=".isDebugger" tiptext="Specifies whether the system is a special debugging version (true) or an officially released version (false)." version="" playername="" helpurl="flash.system:Capabilities:isDebugger:get"/>
                <string name="isEmbeddedInAcrobat" object="[flash.system.Capabilities]" text=".isEmbeddedInAcrobat" tiptext="Specifies whether the Flash runtime is embedded in a PDF file that is open in Acrobat 9.0 or higher (true) or not (false)." version="" playername="" helpurl="flash.system:Capabilities:isEmbeddedInAcrobat:get"/>
                <string name="languages" object="[flash.system.Capabilities]" text=".languages" tiptext="An array of strings that contain information about the user&apos;s preferred user interface languages, as set through the operating system." version="" playername="AIR" helpurl="flash.system:Capabilities:languages:get"/>
                <string name="language" object="[flash.system.Capabilities]" text=".language" tiptext="Specifies the language code of the system on which the content is running." version="" playername="" helpurl="flash.system:Capabilities:language:get"/>
                <string name="localFileReadDisable" object="[flash.system.Capabilities]" text=".localFileReadDisable" tiptext="Specifies whether read access to the user&apos;s hard disk has been administratively prohibited (true) or allowed (false)." version="" playername="" helpurl="flash.system:Capabilities:localFileReadDisable:get"/>
                <string name="manufacturer" object="[flash.system.Capabilities]" text=".manufacturer" tiptext="Specifies the manufacturer of the running version of Flash Player or  the AIR runtime, in the format &quot;Adobe &lt;em&gt;OSName&quot;." version="" playername="" helpurl="flash.system:Capabilities:manufacturer:get"/>
                <string name="maxLevelIDC" object="[flash.system.Capabilities]" text=".maxLevelIDC" tiptext="Retrieves the highest H.264 Level IDC that the client hardware supports." version="" playername="" helpurl="flash.system:Capabilities:maxLevelIDC:get"/>
                <string name="os" object="[flash.system.Capabilities]" text=".os" tiptext="Specifies the current operating system." version="" playername="" helpurl="flash.system:Capabilities:os:get"/>
                <string name="pixelAspectRatio" object="[flash.system.Capabilities]" text=".pixelAspectRatio" tiptext="Specifies the pixel aspect ratio of the screen." version="" playername="" helpurl="flash.system:Capabilities:pixelAspectRatio:get"/>
                <string name="playerType" object="[flash.system.Capabilities]" text=".playerType" tiptext="Specifies the type of runtime environment." version="" playername="" helpurl="flash.system:Capabilities:playerType:get"/>
                <string name="screenColor" object="[flash.system.Capabilities]" text=".screenColor" tiptext="Specifies the screen color." version="" playername="" helpurl="flash.system:Capabilities:screenColor:get"/>
                <string name="screenDPI" object="[flash.system.Capabilities]" text=".screenDPI" tiptext="Specifies the dots-per-inch (dpi) resolution of the screen, in pixels." version="" playername="" helpurl="flash.system:Capabilities:screenDPI:get"/>
                <string name="screenResolutionX" object="[flash.system.Capabilities]" text=".screenResolutionX" tiptext="Specifies the maximum horizontal resolution of the screen." version="" playername="" helpurl="flash.system:Capabilities:screenResolutionX:get"/>
                <string name="screenResolutionY" object="[flash.system.Capabilities]" text=".screenResolutionY" tiptext="Specifies the maximum vertical resolution of the screen." version="" playername="" helpurl="flash.system:Capabilities:screenResolutionY:get"/>
                <string name="serverString" object="[flash.system.Capabilities]" text=".serverString" tiptext="A URL-encoded string that specifies values for each Capabilities property." version="" playername="" helpurl="flash.system:Capabilities:serverString:get"/>
                <string name="supports32BitProcesses" object="[flash.system.Capabilities]" text=".supports32BitProcesses" tiptext="Specifies whether the system supports running 32-bit processes." version="" playername="" helpurl="flash.system:Capabilities:supports32BitProcesses:get"/>
                <string name="supports64BitProcesses" object="[flash.system.Capabilities]" text=".supports64BitProcesses" tiptext="Specifies whether the system supports running 64-bit processes." version="" playername="" helpurl="flash.system:Capabilities:supports64BitProcesses:get"/>
                <string name="touchscreenType" object="[flash.system.Capabilities]" text=".touchscreenType" tiptext="Specifies the type of touchscreen supported, if any." version="" playername="" helpurl="flash.system:Capabilities:touchscreenType:get"/>
                <string name="version" object="[flash.system.Capabilities]" text=".version" tiptext="Specifies the Flash Player or Adobe&amp;#xAE; AIR&amp;#xAE; platform and version information." version="" playername="" helpurl="flash.system:Capabilities:version:get"/>
            </folder>
        </folder>
        <folder name="ImageDecodingPolicy" id="[flash.system.ImageDecodingPolicy]" sort="true" index="true" asAncestors="Object" tiptext="The ImageDecodingPolicy class provides values for imageDecodingPolicy in the LoaderContext class." helpurl="flash.system:ImageDecodingPolicy">
            <folder name="Properties" id="Properties" tiptext="Properties for class ImageDecodingPolicy" helpurl="flash.system:ImageDecodingPolicy">
                <string name="ON_DEMAND" object="[flash.system.ImageDecodingPolicy]" text="ImageDecodingPolicy.ON_DEMAND" constant="true" tiptext="Constant; specifies that the image being loaded will be decoded when needed and that the decoded data may be flushed at will by the system." version="" playername="AIR" helpurl="flash.system:ImageDecodingPolicy:ON_DEMAND"/>
                <string name="ON_LOAD" object="[flash.system.ImageDecodingPolicy]" text="ImageDecodingPolicy.ON_LOAD" constant="true" tiptext="Constant; specifies that the image being loaded will be decoded on load, prior to the complete event being sent." version="" playername="AIR" helpurl="flash.system:ImageDecodingPolicy:ON_LOAD"/>
            </folder>
        </folder>
        <folder name="IME" id="[flash.system.IME]" sort="true" index="true" asAncestors="flash.events:EventDispatcher,Object" tiptext="The IME class lets you directly manipulate the operating system&apos;s input method editor (IME) in the Flash runtime application that is running on a client computer." helpurl="flash.system:IME">
            <folder name="Methods" id="Methods" tiptext="Methods for class IME" helpurl="flash.system:IME">
                <string name="compositionAbandoned" object="[flash.system.IME]" text="IME.compositionAbandoned(%%):void" static="true" tiptext="Causes the runtime to abandon any composition that is in progress." version="2" playername="" helpurl="flash.system:IME:compositionAbandoned"/>
                <string name="compositionSelectionChanged" object="[flash.system.IME]" text="IME.compositionSelectionChanged(%start:int,end:int%):void" static="true" tiptext="Call this method when the selection within the composition has been updated, either interactively or programmatically." version="2" playername="" helpurl="flash.system:IME:compositionSelectionChanged"/>
                <string name="doConversion" object="[flash.system.IME]" text="IME.doConversion(%%):void" static="true" tiptext="Instructs the IME to select the first candidate for the current composition string." version="9" playername="" helpurl="flash.system:IME:doConversion"/>
                <string name="setCompositionString" object="[flash.system.IME]" text="IME.setCompositionString(%composition:String%):void" static="true" tiptext="Sets the IME composition string." version="9" playername="" helpurl="flash.system:IME:setCompositionString"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class IME" helpurl="flash.system:IME">
                <string name="conversionMode" object="[flash.system.IME]" text=".conversionMode" tiptext="The conversion mode of the current IME." version="" playername="" helpurl="flash.system:IME:conversionMode:get"/>
                <string name="enabled" object="[flash.system.IME]" text=".enabled" tiptext="Indicates whether the system IME is enabled (true) or disabled (false)." version="" playername="" helpurl="flash.system:IME:enabled:get"/>
                <string name="isSupported" object="[flash.system.IME]" text=".isSupported" tiptext="The isSupported property is set to true if the IME class is available on the current platform, otherwise it is set to false." version="" playername="" helpurl="flash.system:IME:isSupported:get"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class IME" helpurl="flash.system:IME">
                <string name="imeComposition" object="[flash.system.IME]" text=".addEventListener(%type:String=IMEEvent.IME_COMPOSITION{IMEEvent.IME_COMPOSITION},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a user has completed an input method editor (IME) composition and the reading string is available." version="" playername="" helpurl="flash.system:IME_flash.events.IMEEvent.IME_COMPOSITION_imeComposition"/>
            </folder>
        </folder>
        <folder name="IMEConversionMode" id="[flash.system.IMEConversionMode]" sort="true" index="true" asAncestors="Object" tiptext="This class contains constants for use with the IME.conversionMode property." helpurl="flash.system:IMEConversionMode">
            <folder name="Properties" id="Properties" tiptext="Properties for class IMEConversionMode" helpurl="flash.system:IMEConversionMode">
                <string name="ALPHANUMERIC_FULL" object="[flash.system.IMEConversionMode]" text="IMEConversionMode.ALPHANUMERIC_FULL" constant="true" tiptext="The string &quot;ALPHANUMERIC_FULL&quot;, for use with the IME.conversionMode property." version="" playername="" helpurl="flash.system:IMEConversionMode:ALPHANUMERIC_FULL"/>
                <string name="ALPHANUMERIC_HALF" object="[flash.system.IMEConversionMode]" text="IMEConversionMode.ALPHANUMERIC_HALF" constant="true" tiptext="The string &quot;ALPHANUMERIC_HALF&quot;, for use with the IME.conversionMode property." version="" playername="" helpurl="flash.system:IMEConversionMode:ALPHANUMERIC_HALF"/>
                <string name="CHINESE" object="[flash.system.IMEConversionMode]" text="IMEConversionMode.CHINESE" constant="true" tiptext="The string &quot;CHINESE&quot;, for use with the IME.conversionMode property." version="" playername="" helpurl="flash.system:IMEConversionMode:CHINESE"/>
                <string name="JAPANESE_HIRAGANA" object="[flash.system.IMEConversionMode]" text="IMEConversionMode.JAPANESE_HIRAGANA" constant="true" tiptext="The string &quot;JAPANESE_HIRAGANA&quot;, for use with the IME.conversionMode property." version="" playername="" helpurl="flash.system:IMEConversionMode:JAPANESE_HIRAGANA"/>
                <string name="JAPANESE_KATAKANA_FULL" object="[flash.system.IMEConversionMode]" text="IMEConversionMode.JAPANESE_KATAKANA_FULL" constant="true" tiptext="The string &quot;JAPANESE_KATAKANA_FULL&quot;, for use with the IME.conversionMode property." version="" playername="" helpurl="flash.system:IMEConversionMode:JAPANESE_KATAKANA_FULL"/>
                <string name="JAPANESE_KATAKANA_HALF" object="[flash.system.IMEConversionMode]" text="IMEConversionMode.JAPANESE_KATAKANA_HALF" constant="true" tiptext="The string &quot;JAPANESE_KATAKANA_HALF&quot;, for use with the IME.conversionMode property." version="" playername="" helpurl="flash.system:IMEConversionMode:JAPANESE_KATAKANA_HALF"/>
                <string name="KOREAN" object="[flash.system.IMEConversionMode]" text="IMEConversionMode.KOREAN" constant="true" tiptext="The string &quot;KOREAN&quot;, for use with the IME.conversionMode property." version="" playername="" helpurl="flash.system:IMEConversionMode:KOREAN"/>
                <string name="UNKNOWN" object="[flash.system.IMEConversionMode]" text="IMEConversionMode.UNKNOWN" constant="true" tiptext="The string &quot;UNKNOWN&quot;, which can be returned by a call to the IME.conversionMode property." version="" playername="" helpurl="flash.system:IMEConversionMode:UNKNOWN"/>
            </folder>
        </folder>
        <folder name="JPEGLoaderContext" id="[flash.system.JPEGLoaderContext]" sort="true" index="true" asAncestors="flash.system:LoaderContext,Object" tiptext="The JPEGLoaderContext class includes a property for enabling a deblocking filter when loading a JPEG image." helpurl="flash.system:JPEGLoaderContext">
            <folder name="Methods" id="Methods" tiptext="Methods for class JPEGLoaderContext" helpurl="flash.system:JPEGLoaderContext">
                <string name="JPEGLoaderContext" object="[flash.system.JPEGLoaderContext]" text="new JPEGLoaderContext(%[deblockingFilter:Number=0.0,checkPolicyFile:Boolean=false,applicationDomain:flash.system:ApplicationDomain=null,securityDomain:flash.system:SecurityDomain=null]%)" constructor="true" tiptext="Creates a new JPEGLoaderContext object with the specified settings." version="4" playername="" helpurl="flash.system:JPEGLoaderContext:JPEGLoaderContext"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class JPEGLoaderContext" helpurl="flash.system:JPEGLoaderContext">
                <string name="deblockingFilter" object="[flash.system.JPEGLoaderContext]" text=".deblockingFilter" tiptext="Specifies the strength of the deblocking filter." version="" playername="" helpurl="flash.system:JPEGLoaderContext:deblockingFilter"/>
            </folder>
        </folder>
        <folder name="LoaderContext" id="[flash.system.LoaderContext]" sort="true" index="true" asAncestors="Object" tiptext="The LoaderContext class provides options for loading SWF files and other media by using the Loader class." helpurl="flash.system:LoaderContext">
            <folder name="Methods" id="Methods" tiptext="Methods for class LoaderContext" helpurl="flash.system:LoaderContext">
                <string name="LoaderContext" object="[flash.system.LoaderContext]" text="new LoaderContext(%[checkPolicyFile:Boolean=false,applicationDomain:flash.system:ApplicationDomain=null,securityDomain:flash.system:SecurityDomain=null]%)" constructor="true" tiptext="Creates a new LoaderContext object, with the specified settings." version="4" playername="" helpurl="flash.system:LoaderContext:LoaderContext"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class LoaderContext" helpurl="flash.system:LoaderContext">
                <string name="allowCodeImport" object="[flash.system.LoaderContext]" text=".allowCodeImport" tiptext="Specifies whether you can use a Loader object to import content with executable code, such as a SWF file, into the caller&apos;s security sandbox." version="" playername="" helpurl="flash.system:LoaderContext:allowCodeImport"/>
                <string name="applicationDomain" object="[flash.system.LoaderContext]" text=".applicationDomain" tiptext="Specifies the application domain to use for the Loader.load() or Loader.loadBytes() method." version="" playername="" helpurl="flash.system:LoaderContext:applicationDomain"/>
                <string name="checkPolicyFile" object="[flash.system.LoaderContext]" text=".checkPolicyFile" tiptext="Specifies whether the application should attempt to download a URL policy file from the loaded object&apos;s server before beginning to load the object itself." version="" playername="" helpurl="flash.system:LoaderContext:checkPolicyFile"/>
                <string name="imageDecodingPolicy" object="[flash.system.LoaderContext]" text=".imageDecodingPolicy" tiptext="Specifies how image decoding is to be handled after an image is loaded." version="" playername="AIR" helpurl="flash.system:LoaderContext:imageDecodingPolicy"/>
                <string name="parameters" object="[flash.system.LoaderContext]" text=".parameters" tiptext="if parameters is set to non-null, then the contentLoaderInfo.parameters will be set to this Object, rather than the normal value from parsing the parameters from the requesting URL." version="" playername="" helpurl="flash.system:LoaderContext:parameters"/>
                <string name="requestedContentParent" object="[flash.system.LoaderContext]" text=".requestedContentParent" tiptext="specifies parent to which the Loader will attempt to add the loaded content." version="" playername="" helpurl="flash.system:LoaderContext:requestedContentParent"/>
                <string name="securityDomain" object="[flash.system.LoaderContext]" text=".securityDomain" tiptext="Specifies the security domain to use for a Loader.load() operation." version="" playername="" helpurl="flash.system:LoaderContext:securityDomain"/>
                <string name="allowLoadBytesCodeExecution" object="[flash.system.LoaderContext]" text=".allowLoadBytesCodeExecution" tiptext="Legacy property, replaced by allowCodeImport, but still supported for compatibility." version="" playername="" helpurl="flash.system:LoaderContext:allowLoadBytesCodeExecution:get"/>
            </folder>
        </folder>
        <folder name="Methods" id="Methods" tiptext="Methods for package flash.system" helpurl="flash.system">
            <string name="fscommand" text="fscommand(%command:String,args:String%):void" tiptext="Lets the SWF file communicate with either Flash Player or the program hosting Flash Player, such as a web browser." version="9" playername="" helpurl="flash.system:fscommand"/>
        </folder>
        <folder name="Security" id="[flash.system.Security]" sort="true" index="true" asAncestors="Object" tiptext="The Security class lets you specify how content in different domains can communicate with each other." helpurl="flash.system:Security">
            <folder name="Methods" id="Methods" tiptext="Methods for class Security" helpurl="flash.system:Security">
                <string name="allowDomain" object="[flash.system.Security]" text="Security.allowDomain(%domains:restParam%):void" static="true" tiptext="Lets SWF files and HTML files access objects and variables in the calling SWF file." version="4" playername="" helpurl="flash.system:Security:allowDomain"/>
                <string name="allowInsecureDomain" object="[flash.system.Security]" text="Security.allowInsecureDomain(%domains:restParam%):void" static="true" tiptext="Lets SWF and HTML files hosted using the HTTPS protocol, access objects and variables in the calling SWF file." version="4" playername="" helpurl="flash.system:Security:allowInsecureDomain"/>
                <string name="loadPolicyFile" object="[flash.system.Security]" text="Security.loadPolicyFile(%url:String%):void" static="true" tiptext="Looks for a policy file at the location specified by the url parameter." version="4" playername="" helpurl="flash.system:Security:loadPolicyFile"/>
                <string name="showSettings" object="[flash.system.Security]" text="Security.showSettings(%[panel:String=default]%):void" static="true" tiptext="Displays the Security Settings panel in Flash Player." version="4" playername="" helpurl="flash.system:Security:showSettings"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class Security" helpurl="flash.system:Security">
                <string name="APPLICATION" object="[flash.system.Security]" text="Security.APPLICATION" constant="true" tiptext="The file is running in an AIR application, and it was installed with the package (the AIR file) for that application." version="" playername="" helpurl="flash.system:Security:APPLICATION"/>
                <string name="LOCAL_TRUSTED" object="[flash.system.Security]" text="Security.LOCAL_TRUSTED" constant="true" tiptext="The file is a local file and has been trusted by the user, using either the Flash Player Settings Manager or a FlashPlayerTrust configuration file." version="" playername="" helpurl="flash.system:Security:LOCAL_TRUSTED"/>
                <string name="LOCAL_WITH_FILE" object="[flash.system.Security]" text="Security.LOCAL_WITH_FILE" constant="true" tiptext="The file is a local file, has not been trusted by the user, and it is not a SWF file that was published with a networking designation." version="" playername="" helpurl="flash.system:Security:LOCAL_WITH_FILE"/>
                <string name="LOCAL_WITH_NETWORK" object="[flash.system.Security]" text="Security.LOCAL_WITH_NETWORK" constant="true" tiptext="The file is a local file, has not been trusted by the user, and it is a SWF file that was published with a networking designation." version="" playername="" helpurl="flash.system:Security:LOCAL_WITH_NETWORK"/>
                <string name="REMOTE" object="[flash.system.Security]" text="Security.REMOTE" constant="true" tiptext="The file is from an Internet URL and operates under domain-based sandbox rules." version="" playername="" helpurl="flash.system:Security:REMOTE"/>
                <string name="exactSettings" object="[flash.system.Security]" text=".exactSettings" tiptext="Determines how Flash Player or AIR chooses the domain to use for certain content settings, including settings for camera and microphone permissions, storage quotas, and storage of persistent shared objects." version="" playername="" helpurl="flash.system:Security:exactSettings:get"/>
                <string name="sandboxType" object="[flash.system.Security]" text=".sandboxType" tiptext="Indicates the type of security sandbox in which the calling file is operating." version="" playername="" helpurl="flash.system:Security:sandboxType:get"/>
            </folder>
        </folder>
        <folder name="SecurityDomain" id="[flash.system.SecurityDomain]" sort="true" index="true" asAncestors="Object" tiptext="The SecurityDomain class represents the current security &quot;sandbox,&quot; also known as a security domain." helpurl="flash.system:SecurityDomain">
            <folder name="Properties" id="Properties" tiptext="Properties for class SecurityDomain" helpurl="flash.system:SecurityDomain">
                <string name="currentDomain" object="[flash.system.SecurityDomain]" text=".currentDomain" tiptext="Gets the current security domain." version="" playername="" helpurl="flash.system:SecurityDomain:currentDomain:get"/>
            </folder>
        </folder>
        <folder name="SecurityPanel" id="[flash.system.SecurityPanel]" sort="true" index="true" asAncestors="Object" tiptext="The SecurityPanel class provides values for specifying which Security Settings panel you want to display." helpurl="flash.system:SecurityPanel">
            <folder name="Properties" id="Properties" tiptext="Properties for class SecurityPanel" helpurl="flash.system:SecurityPanel">
                <string name="CAMERA" object="[flash.system.SecurityPanel]" text="SecurityPanel.CAMERA" constant="true" tiptext="When passed to Security.showSettings(), displays the Camera panel in Flash Player Settings." version="" playername="" helpurl="flash.system:SecurityPanel:CAMERA"/>
                <string name="DEFAULT" object="[flash.system.SecurityPanel]" text="SecurityPanel.DEFAULT" constant="true" tiptext="When passed to Security.showSettings(), displays the panel that was open the last time the user closed the Flash Player Settings." version="" playername="" helpurl="flash.system:SecurityPanel:DEFAULT"/>
                <string name="DISPLAY" object="[flash.system.SecurityPanel]" text="SecurityPanel.DISPLAY" constant="true" tiptext="When passed to Security.showSettings(), displays the Display panel in Flash Player Settings." version="" playername="" helpurl="flash.system:SecurityPanel:DISPLAY"/>
                <string name="LOCAL_STORAGE" object="[flash.system.SecurityPanel]" text="SecurityPanel.LOCAL_STORAGE" constant="true" tiptext="When passed to Security.showSettings(), displays the Local Storage Settings panel in Flash Player Settings." version="" playername="" helpurl="flash.system:SecurityPanel:LOCAL_STORAGE"/>
                <string name="MICROPHONE" object="[flash.system.SecurityPanel]" text="SecurityPanel.MICROPHONE" constant="true" tiptext="When passed to Security.showSettings(), displays the Microphone panel in Flash Player Settings." version="" playername="" helpurl="flash.system:SecurityPanel:MICROPHONE"/>
                <string name="PRIVACY" object="[flash.system.SecurityPanel]" text="SecurityPanel.PRIVACY" constant="true" tiptext="When passed to Security.showSettings(), displays the Privacy Settings panel in Flash Player Settings." version="" playername="" helpurl="flash.system:SecurityPanel:PRIVACY"/>
                <string name="SETTINGS_MANAGER" object="[flash.system.SecurityPanel]" text="SecurityPanel.SETTINGS_MANAGER" constant="true" tiptext="When passed to Security.showSettings(), displays the Settings Manager (in a separate browser window)." version="" playername="" helpurl="flash.system:SecurityPanel:SETTINGS_MANAGER"/>
            </folder>
        </folder>
        <folder name="System" id="[flash.system.System]" sort="true" index="true" asAncestors="Object" tiptext="The System class contains properties related to local settings and operations." helpurl="flash.system:System">
            <folder name="Methods" id="Methods" tiptext="Methods for class System" helpurl="flash.system:System">
                <string name="disposeXML" object="[flash.system.System]" text="System.disposeXML(%node:XML%):void" static="true" tiptext="Makes the specified XML object immediately available for garbage collection." version="1.5.2" playername="" helpurl="flash.system:System:disposeXML"/>
                <string name="exit" object="[flash.system.System]" text="System.exit(%code:uint%):void" static="true" tiptext="Closes Flash Player." version="9.0.115.0" playername="" helpurl="flash.system:System:exit"/>
                <string name="gc" object="[flash.system.System]" text="System.gc(%%):void" static="true" tiptext="Forces the garbage collection process." version="4" playername="" helpurl="flash.system:System:gc"/>
                <string name="pause" object="[flash.system.System]" text="System.pause(%%):void" static="true" tiptext="Pauses Flash Player or the AIR Debug Launcher (ADL)." version="4" playername="" helpurl="flash.system:System:pause"/>
                <string name="resume" object="[flash.system.System]" text="System.resume(%%):void" static="true" tiptext="Resumes the application after calling System.pause()." version="4" playername="" helpurl="flash.system:System:resume"/>
                <string name="setClipboard" object="[flash.system.System]" text="System.setClipboard(%string:String%):void" static="true" tiptext="Replaces the contents of the Clipboard with a specified text string." version="9" playername="" helpurl="flash.system:System:setClipboard"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class System" helpurl="flash.system:System">
                <string name="freeMemory" object="[flash.system.System]" text=".freeMemory" tiptext="The amount of memory (in bytes) that is allocated to Adobe&amp;#xAE; Flash&amp;#xAE; Player or Adobe&amp;#xAE; AIR&amp;#xAE; and that is not in use." version="" playername="" helpurl="flash.system:System:freeMemory:get"/>
                <string name="ime" object="[flash.system.System]" text=".ime" tiptext="The currently installed system IME." version="" playername="" helpurl="flash.system:System:ime:get"/>
                <string name="privateMemory" object="[flash.system.System]" text=".privateMemory" tiptext="The entire amount of memory (in bytes) used by an application." version="" playername="" helpurl="flash.system:System:privateMemory:get"/>
                <string name="totalMemoryNumber" object="[flash.system.System]" text=".totalMemoryNumber" tiptext="The amount of memory (in bytes) currently in use that has been directly allocated by Flash Player or AIR." version="" playername="" helpurl="flash.system:System:totalMemoryNumber:get"/>
                <string name="totalMemory" object="[flash.system.System]" text=".totalMemory" tiptext="The amount of memory (in bytes) currently in use that has been directly allocated by Flash Player or AIR." version="" playername="" helpurl="flash.system:System:totalMemory:get"/>
                <string name="useCodePage" object="[flash.system.System]" text=".useCodePage" tiptext="A Boolean value that determines which code page to use to interpret external text files." version="" playername="" helpurl="flash.system:System:useCodePage:get"/>
            </folder>
        </folder>
        <folder name="SystemUpdater" id="[flash.system.SystemUpdater]" sort="true" index="true" asAncestors="flash.events:EventDispatcher,Object" tiptext="The SystemUpdater class allows you to update modules of the Flash Player, such as the DRM module for Flash Access, as well as the Flash Player itself." helpurl="flash.system:SystemUpdater">
            <folder name="Methods" id="Methods" tiptext="Methods for class SystemUpdater" helpurl="flash.system:SystemUpdater">
                <string name="SystemUpdater" object="[flash.system.SystemUpdater]" text="new SystemUpdater(%%)" constructor="true" tiptext="Constructor." version="10.1" playername="" helpurl="flash.system:SystemUpdater:SystemUpdater"/>
                <string name="cancel" object="[flash.system.SystemUpdater]" text=".cancel(%%):void" tiptext="Cancels an active update." version="10.1" playername="" helpurl="flash.system:SystemUpdater:cancel"/>
                <string name="update" object="[flash.system.SystemUpdater]" text=".update(%type:String%):void" tiptext="Begins an update of a given type." version="10.1" playername="" helpurl="flash.system:SystemUpdater:update"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class SystemUpdater" helpurl="flash.system:SystemUpdater">
                <string name="cancel" object="[flash.system.SystemUpdater]" text=".addEventListener(%type:String=Event.CANCEL{Event.CANCEL,Event.COMPLETE,SecurityErrorEvent.SECURITY_ERROR,IOErrorEvent.IO_ERROR,ProgressEvent.PROGRESS,StatusEvent.STATUS,Event.OPEN},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when an update of the player itself is cancelled by the user." version="" playername="" helpurl="flash.system:SystemUpdater_flash.events.Event.CANCEL_cancel"/>
                <string name="complete" object="[flash.system.SystemUpdater]" text=".addEventListener(%type:String=Event.COMPLETE{Event.CANCEL,Event.COMPLETE,SecurityErrorEvent.SECURITY_ERROR,IOErrorEvent.IO_ERROR,ProgressEvent.PROGRESS,StatusEvent.STATUS,Event.OPEN},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the update completes." version="" playername="" helpurl="flash.system:SystemUpdater_flash.events.Event.COMPLETE_complete"/>
                <string name="securityError" object="[flash.system.SystemUpdater]" text=".addEventListener(%type:String=SecurityErrorEvent.SECURITY_ERROR{Event.CANCEL,Event.COMPLETE,SecurityErrorEvent.SECURITY_ERROR,IOErrorEvent.IO_ERROR,ProgressEvent.PROGRESS,StatusEvent.STATUS,Event.OPEN},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched upon encountering a security error." version="" playername="" helpurl="flash.system:SystemUpdater_flash.events.SecurityErrorEvent.SECURITY_ERROR_securityError"/>
                <string name="ioError" object="[flash.system.SystemUpdater]" text=".addEventListener(%type:String=IOErrorEvent.IO_ERROR{Event.CANCEL,Event.COMPLETE,SecurityErrorEvent.SECURITY_ERROR,IOErrorEvent.IO_ERROR,ProgressEvent.PROGRESS,StatusEvent.STATUS,Event.OPEN},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when an I/O error occurs." version="" playername="" helpurl="flash.system:SystemUpdater_flash.events.IOErrorEvent.IO_ERROR_ioError"/>
                <string name="progress" object="[flash.system.SystemUpdater]" text=".addEventListener(%type:String=ProgressEvent.PROGRESS{Event.CANCEL,Event.COMPLETE,SecurityErrorEvent.SECURITY_ERROR,IOErrorEvent.IO_ERROR,ProgressEvent.PROGRESS,StatusEvent.STATUS,Event.OPEN},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched to indicate download progress." version="" playername="" helpurl="flash.system:SystemUpdater_flash.events.ProgressEvent.PROGRESS_progress"/>
                <string name="status" object="[flash.system.SystemUpdater]" text=".addEventListener(%type:String=StatusEvent.STATUS{Event.CANCEL,Event.COMPLETE,SecurityErrorEvent.SECURITY_ERROR,IOErrorEvent.IO_ERROR,ProgressEvent.PROGRESS,StatusEvent.STATUS,Event.OPEN},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the update fails." version="" playername="" helpurl="flash.system:SystemUpdater_flash.events.StatusEvent.STATUS_status"/>
                <string name="open" object="[flash.system.SystemUpdater]" text=".addEventListener(%type:String=Event.OPEN{Event.CANCEL,Event.COMPLETE,SecurityErrorEvent.SECURITY_ERROR,IOErrorEvent.IO_ERROR,ProgressEvent.PROGRESS,StatusEvent.STATUS,Event.OPEN},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when an update begins." version="" playername="" helpurl="flash.system:SystemUpdater_flash.events.Event.OPEN_open"/>
            </folder>
        </folder>
        <folder name="SystemUpdaterType" id="[flash.system.SystemUpdaterType]" sort="true" index="true" asAncestors="Object" tiptext="The SystemUpdaterType class provides constants for a system update." helpurl="flash.system:SystemUpdaterType">
            <folder name="Properties" id="Properties" tiptext="Properties for class SystemUpdaterType" helpurl="flash.system:SystemUpdaterType">
                <string name="DRM" object="[flash.system.SystemUpdaterType]" text="SystemUpdaterType.DRM" constant="true" tiptext="Updates the DRM module." version="" playername="" helpurl="flash.system:SystemUpdaterType:DRM"/>
                <string name="SYSTEM" object="[flash.system.SystemUpdaterType]" text="SystemUpdaterType.SYSTEM" constant="true" tiptext="Updates the player runtime itself." version="" playername="" helpurl="flash.system:SystemUpdaterType:SYSTEM"/>
            </folder>
        </folder>
        <folder name="TouchscreenType" id="[flash.system.TouchscreenType]" sort="true" index="true" asAncestors="Object" tiptext="The TouchscreenType class is an enumeration class that provides values for the different types of touch screens." helpurl="flash.system:TouchscreenType">
            <folder name="Properties" id="Properties" tiptext="Properties for class TouchscreenType" helpurl="flash.system:TouchscreenType">
                <string name="FINGER" object="[flash.system.TouchscreenType]" text="TouchscreenType.FINGER" constant="true" tiptext="A touchscreen designed to respond to finger touches." version="" playername="" helpurl="flash.system:TouchscreenType:FINGER"/>
                <string name="NONE" object="[flash.system.TouchscreenType]" text="TouchscreenType.NONE" constant="true" tiptext="The computer or device does not have a supported touchscreen." version="" playername="" helpurl="flash.system:TouchscreenType:NONE"/>
                <string name="STYLUS" object="[flash.system.TouchscreenType]" text="TouchscreenType.STYLUS" constant="true" tiptext="A touchscreen designed for use with a stylus." version="" playername="" helpurl="flash.system:TouchscreenType:STYLUS"/>
            </folder>
        </folder>
    </folder>
        <folder name="flash.text" id="flash.text" sort="true" tiptext="Classes for package flash.text" helpurl="flash.text">
        <folder name="AntiAliasType" id="[flash.text.AntiAliasType]" sort="true" index="true" asAncestors="Object" tiptext="The AntiAliasType class provides values for anti-aliasing in the flash.text.TextField class." helpurl="flash.text:AntiAliasType">
            <folder name="Properties" id="Properties" tiptext="Properties for class AntiAliasType" helpurl="flash.text:AntiAliasType">
                <string name="ADVANCED" object="[flash.text.AntiAliasType]" text="AntiAliasType.ADVANCED" constant="true" tiptext="Sets anti-aliasing to advanced anti-aliasing." version="" playername="" helpurl="flash.text:AntiAliasType:ADVANCED"/>
                <string name="NORMAL" object="[flash.text.AntiAliasType]" text="AntiAliasType.NORMAL" constant="true" tiptext="Sets anti-aliasing to the anti-aliasing that is used in Flash Player 7 and earlier." version="" playername="" helpurl="flash.text:AntiAliasType:NORMAL"/>
            </folder>
        </folder>
        <folder name="CSMSettings" id="[flash.text.CSMSettings]" sort="true" index="true" asAncestors="Object" tiptext="The CSMSettings class contains properties for use with the TextRenderer.setAdvancedAntiAliasingTable() method to provide continuous stroke modulation (CSM)." helpurl="flash.text:CSMSettings">
            <folder name="Methods" id="Methods" tiptext="Methods for class CSMSettings" helpurl="flash.text:CSMSettings">
                <string name="CSMSettings" object="[flash.text.CSMSettings]" text="new CSMSettings(%fontSize:Number,insideCutoff:Number,outsideCutoff:Number%)" constructor="true" tiptext="Creates a new CSMSettings object which stores stroke values for custom anti-aliasing settings." version="9" playername="" helpurl="flash.text:CSMSettings:CSMSettings"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class CSMSettings" helpurl="flash.text:CSMSettings">
                <string name="fontSize" object="[flash.text.CSMSettings]" text=".fontSize" tiptext="The size, in pixels, for which the settings apply." version="" playername="" helpurl="flash.text:CSMSettings:fontSize"/>
                <string name="insideCutoff" object="[flash.text.CSMSettings]" text=".insideCutoff" tiptext="The inside cutoff value, above which densities are set to a maximum density value (such as 255)." version="" playername="" helpurl="flash.text:CSMSettings:insideCutoff"/>
                <string name="outsideCutoff" object="[flash.text.CSMSettings]" text=".outsideCutoff" tiptext="The outside cutoff value, below which densities are set to zero." version="" playername="" helpurl="flash.text:CSMSettings:outsideCutoff"/>
            </folder>
        </folder>
        <folder name="Font" id="[flash.text.Font]" sort="true" index="true" asAncestors="Object" tiptext="The Font class is used to manage embedded fonts in SWF files." helpurl="flash.text:Font">
            <folder name="Methods" id="Methods" tiptext="Methods for class Font" helpurl="flash.text:Font">
                <string name="enumerateFonts" object="[flash.text.Font]" text="Font.enumerateFonts(%[enumerateDeviceFonts:Boolean=false]%):Array" static="true" tiptext="Specifies whether to provide a list of the currently available embedded fonts." version="4" playername="" helpurl="flash.text:Font:enumerateFonts"/>
                <string name="hasGlyphs" object="[flash.text.Font]" text=".hasGlyphs(%str:String%):Boolean" tiptext="Specifies whether a provided string can be displayed using the currently assigned font." version="4" playername="" helpurl="flash.text:Font:hasGlyphs"/>
                <string name="registerFont" object="[flash.text.Font]" text="Font.registerFont(%font:Class%):void" static="true" tiptext="Registers a font class in the global font list." version="4" playername="" helpurl="flash.text:Font:registerFont"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class Font" helpurl="flash.text:Font">
                <string name="fontName" object="[flash.text.Font]" text=".fontName" tiptext="The name of an embedded font." version="" playername="" helpurl="flash.text:Font:fontName:get"/>
                <string name="fontStyle" object="[flash.text.Font]" text=".fontStyle" tiptext="The style of the font." version="" playername="" helpurl="flash.text:Font:fontStyle:get"/>
                <string name="fontType" object="[flash.text.Font]" text=".fontType" tiptext="The type of the font." version="" playername="" helpurl="flash.text:Font:fontType:get"/>
            </folder>
        </folder>
        <folder name="FontStyle" id="[flash.text.FontStyle]" sort="true" index="true" asAncestors="Object" tiptext="The FontStyle class provides values for the TextRenderer class." helpurl="flash.text:FontStyle">
            <folder name="Properties" id="Properties" tiptext="Properties for class FontStyle" helpurl="flash.text:FontStyle">
                <string name="BOLD_ITALIC" object="[flash.text.FontStyle]" text="FontStyle.BOLD_ITALIC" constant="true" tiptext="Defines the combined bold and italic style of a font for the fontStyle parameter in the setAdvancedAntiAliasingTable() method." version="" playername="" helpurl="flash.text:FontStyle:BOLD_ITALIC"/>
                <string name="BOLD" object="[flash.text.FontStyle]" text="FontStyle.BOLD" constant="true" tiptext="Defines the bold style of a font for the fontStyle parameter in the setAdvancedAntiAliasingTable() method." version="" playername="" helpurl="flash.text:FontStyle:BOLD"/>
                <string name="ITALIC" object="[flash.text.FontStyle]" text="FontStyle.ITALIC" constant="true" tiptext="Defines the italic style of a font for the fontStyle parameter in the setAdvancedAntiAliasingTable() method." version="" playername="" helpurl="flash.text:FontStyle:ITALIC"/>
                <string name="REGULAR" object="[flash.text.FontStyle]" text="FontStyle.REGULAR" constant="true" tiptext="Defines the plain style of a font for the fontStyle parameter in the setAdvancedAntiAliasingTable() method." version="" playername="" helpurl="flash.text:FontStyle:REGULAR"/>
            </folder>
        </folder>
        <folder name="FontType" id="[flash.text.FontType]" sort="true" index="true" asAncestors="Object" tiptext="The FontType class contains the enumerated constants &quot;embedded&quot; and &quot;device&quot; for the fontType property of the Font class." helpurl="flash.text:FontType">
            <folder name="Properties" id="Properties" tiptext="Properties for class FontType" helpurl="flash.text:FontType">
                <string name="DEVICE" object="[flash.text.FontType]" text="FontType.DEVICE" constant="true" tiptext="Indicates that this is a device font." version="" playername="" helpurl="flash.text:FontType:DEVICE"/>
                <string name="EMBEDDED_CFF" object="[flash.text.FontType]" text="FontType.EMBEDDED_CFF" constant="true" tiptext="Indicates that this is an embedded CFF font." version="" playername="" helpurl="flash.text:FontType:EMBEDDED_CFF"/>
                <string name="EMBEDDED" object="[flash.text.FontType]" text="FontType.EMBEDDED" constant="true" tiptext="Indicates that this is an embedded font." version="" playername="" helpurl="flash.text:FontType:EMBEDDED"/>
            </folder>
        </folder>
        <folder name="GridFitType" id="[flash.text.GridFitType]" sort="true" index="true" asAncestors="Object" tiptext="The GridFitType class defines values for grid fitting in the TextField class." helpurl="flash.text:GridFitType">
            <folder name="Properties" id="Properties" tiptext="Properties for class GridFitType" helpurl="flash.text:GridFitType">
                <string name="NONE" object="[flash.text.GridFitType]" text="GridFitType.NONE" constant="true" tiptext="Doesn&apos;t set grid fitting." version="" playername="" helpurl="flash.text:GridFitType:NONE"/>
                <string name="PIXEL" object="[flash.text.GridFitType]" text="GridFitType.PIXEL" constant="true" tiptext="Fits strong horizontal and vertical lines to the pixel grid." version="" playername="" helpurl="flash.text:GridFitType:PIXEL"/>
                <string name="SUBPIXEL" object="[flash.text.GridFitType]" text="GridFitType.SUBPIXEL" constant="true" tiptext="Fits strong horizontal and vertical lines to the sub-pixel grid on LCD monitors." version="" playername="" helpurl="flash.text:GridFitType:SUBPIXEL"/>
            </folder>
        </folder>
        <folder name="StaticText" id="[flash.text.StaticText]" sort="true" index="true" asAncestors="flash.display:DisplayObject,flash.events:EventDispatcher,Object" tiptext="This class represents StaticText objects on the display list." helpurl="flash.text:StaticText">
            <folder name="Properties" id="Properties" tiptext="Properties for class StaticText" helpurl="flash.text:StaticText">
                <string name="text" object="[flash.text.StaticText]" text=".text" tiptext="Returns the current text of the static text field." version="" playername="" helpurl="flash.text:StaticText:text:get"/>
            </folder>
        </folder>
        <folder name="StyleSheet" id="[flash.text.StyleSheet]" sort="true" index="true" asAncestors="flash.events:EventDispatcher,Object" tiptext="The StyleSheet class lets you create a StyleSheet object that contains text formatting rules for font size, color, and other styles." helpurl="flash.text:StyleSheet">
            <folder name="Methods" id="Methods" tiptext="Methods for class StyleSheet" helpurl="flash.text:StyleSheet">
                <string name="StyleSheet" object="[flash.text.StyleSheet]" text="new StyleSheet(%%)" constructor="true" tiptext="Creates a new StyleSheet object." version="4" playername="" helpurl="flash.text:StyleSheet:StyleSheet"/>
                <string name="clear" object="[flash.text.StyleSheet]" text=".clear(%%):void" tiptext="Removes all styles from the style sheet object." version="4" playername="" helpurl="flash.text:StyleSheet:clear"/>
                <string name="getStyle" object="[flash.text.StyleSheet]" text=".getStyle(%styleName:String%):Object" tiptext="Returns a copy of the style object associated with the style named styleName." version="4" playername="" helpurl="flash.text:StyleSheet:getStyle"/>
                <string name="parseCSS" object="[flash.text.StyleSheet]" text=".parseCSS(%CSSText:String%):void" tiptext="Parses the CSS in cssText and loads the StyleSheet with it." version="4" playername="" helpurl="flash.text:StyleSheet:parseCSS"/>
                <string name="setStyle" object="[flash.text.StyleSheet]" text=".setStyle(%styleName:String,styleObject:Object%):void" tiptext="Adds a new style with the specified name to the style sheet object." version="4" playername="" helpurl="flash.text:StyleSheet:setStyle"/>
                <string name="transform" object="[flash.text.StyleSheet]" text=".transform(%formatObject:Object%):flash.text:TextFormat" tiptext="Extends the CSS parsing capability." version="4" playername="" helpurl="flash.text:StyleSheet:transform"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class StyleSheet" helpurl="flash.text:StyleSheet">
                <string name="styleNames" object="[flash.text.StyleSheet]" text=".styleNames" tiptext="An array that contains the names (as strings) of all of the styles registered in this style sheet." version="" playername="" helpurl="flash.text:StyleSheet:styleNames:get"/>
            </folder>
        </folder>
        <folder name="TextColorType" id="[flash.text.TextColorType]" sort="true" index="true" asAncestors="Object" tiptext="The TextColorType class provides color values for the flash.text.TextRenderer class." helpurl="flash.text:TextColorType">
            <folder name="Properties" id="Properties" tiptext="Properties for class TextColorType" helpurl="flash.text:TextColorType">
                <string name="DARK_COLOR" object="[flash.text.TextColorType]" text="TextColorType.DARK_COLOR" constant="true" tiptext="Used in the colorType parameter in the setAdvancedAntiAliasingTable() method." version="" playername="" helpurl="flash.text:TextColorType:DARK_COLOR"/>
                <string name="LIGHT_COLOR" object="[flash.text.TextColorType]" text="TextColorType.LIGHT_COLOR" constant="true" tiptext="Used in the colorType parameter in the setAdvancedAntiAliasingTable() method." version="" playername="" helpurl="flash.text:TextColorType:LIGHT_COLOR"/>
            </folder>
        </folder>
        <folder name="TextDisplayMode" id="[flash.text.TextDisplayMode]" sort="true" index="true" asAncestors="Object" tiptext="The TextDisplayMode class contains values that control the subpixel anti-aliasing of the advanced anti-aliasing system." helpurl="flash.text:TextDisplayMode">
            <folder name="Properties" id="Properties" tiptext="Properties for class TextDisplayMode" helpurl="flash.text:TextDisplayMode">
                <string name="CRT" object="[flash.text.TextDisplayMode]" text="TextDisplayMode.CRT" constant="true" tiptext="Forces Flash Player to display grayscale anti-aliasing." version="" playername="" helpurl="flash.text:TextDisplayMode:CRT"/>
                <string name="DEFAULT" object="[flash.text.TextDisplayMode]" text="TextDisplayMode.DEFAULT" constant="true" tiptext="Allows Flash Player to choose LCD or CRT mode." version="" playername="" helpurl="flash.text:TextDisplayMode:DEFAULT"/>
                <string name="LCD" object="[flash.text.TextDisplayMode]" text="TextDisplayMode.LCD" constant="true" tiptext="Forces Flash Player to use LCD subpixel anti-aliasing." version="" playername="" helpurl="flash.text:TextDisplayMode:LCD"/>
            </folder>
        </folder>
        <folder name="TextExtent" id="[flash.text.TextExtent]" sort="true" index="true" asAncestors="Object" tiptext="The TextExtent class contains information about the extents of some text in a text field." helpurl="flash.text:TextExtent">
            <folder name="Methods" id="Methods" tiptext="Methods for class TextExtent" helpurl="flash.text:TextExtent">
                <string name="TextExtent" object="[flash.text.TextExtent]" text="new TextExtent(%width:Number,height:Number,textFieldWidth:Number,textFieldHeight:Number,ascent:Number,descent:Number%)" constructor="true" tiptext="The TextExtent class contains information about the extents of some text in a text field." version="" playername="" helpurl="flash.text:TextExtent:TextExtent"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class TextExtent" helpurl="flash.text:TextExtent">
                <string name="ascent" object="[flash.text.TextExtent]" text=".ascent" tiptext="" version="" playername="" helpurl="flash.text:TextExtent:ascent"/>
                <string name="descent" object="[flash.text.TextExtent]" text=".descent" tiptext="" version="" playername="" helpurl="flash.text:TextExtent:descent"/>
                <string name="height" object="[flash.text.TextExtent]" text=".height" tiptext="" version="" playername="" helpurl="flash.text:TextExtent:height"/>
                <string name="textFieldHeight" object="[flash.text.TextExtent]" text=".textFieldHeight" tiptext="" version="" playername="" helpurl="flash.text:TextExtent:textFieldHeight"/>
                <string name="textFieldWidth" object="[flash.text.TextExtent]" text=".textFieldWidth" tiptext="" version="" playername="" helpurl="flash.text:TextExtent:textFieldWidth"/>
                <string name="width" object="[flash.text.TextExtent]" text=".width" tiptext="" version="" playername="" helpurl="flash.text:TextExtent:width"/>
            </folder>
        </folder>
        <folder name="TextField" id="[flash.text.TextField]" sort="true" index="true" asAncestors="flash.display:InteractiveObject,flash.display:DisplayObject,flash.events:EventDispatcher,Object" tiptext="The TextField class is used to create display objects for text display and input." helpurl="flash.text:TextField">
            <folder name="Methods" id="Methods" tiptext="Methods for class TextField" helpurl="flash.text:TextField">
                <string name="TextField" object="[flash.text.TextField]" text="new TextField(%%)" constructor="true" tiptext="Creates a new TextField instance." version="4" playername="" helpurl="flash.text:TextField:TextField"/>
                <string name="appendText" object="[flash.text.TextField]" text=".appendText(%newText:String%):void" tiptext="Appends text to the end of the existing text of the TextField." version="4" playername="" helpurl="flash.text:TextField:appendText"/>
                <string name="getCharBoundaries" object="[flash.text.TextField]" text=".getCharBoundaries(%charIndex:int%):flash.geom:Rectangle" tiptext="Returns a rectangle that is the bounding box of the character." version="4" playername="" helpurl="flash.text:TextField:getCharBoundaries"/>
                <string name="getCharIndexAtPoint" object="[flash.text.TextField]" text=".getCharIndexAtPoint(%x:Number,y:Number%):int" tiptext="Returns the zero-based index value of the character." version="4" playername="" helpurl="flash.text:TextField:getCharIndexAtPoint"/>
                <string name="getFirstCharInParagraph" object="[flash.text.TextField]" text=".getFirstCharInParagraph(%charIndex:int%):int" tiptext="The zero-based index value of the character." version="4" playername="" helpurl="flash.text:TextField:getFirstCharInParagraph"/>
                <string name="getImageReference" object="[flash.text.TextField]" text=".getImageReference(%id:String%):flash.display:DisplayObject" tiptext="Returns a DisplayObject reference for the given id, for an image or SWF file that has been added to an HTML-formatted text field by using an &amp;lt;img&amp;gt; tag." version="4" playername="" helpurl="flash.text:TextField:getImageReference"/>
                <string name="getLineIndexAtPoint" object="[flash.text.TextField]" text=".getLineIndexAtPoint(%x:Number,y:Number%):int" tiptext="The zero-based index value of the line at a specified point." version="4" playername="" helpurl="flash.text:TextField:getLineIndexAtPoint"/>
                <string name="getLineIndexOfChar" object="[flash.text.TextField]" text=".getLineIndexOfChar(%charIndex:int%):int" tiptext="The zero-based index value of the line containing the character that the the charIndex parameter specifies." version="4" playername="" helpurl="flash.text:TextField:getLineIndexOfChar"/>
                <string name="getLineLength" object="[flash.text.TextField]" text=".getLineLength(%lineIndex:int%):int" tiptext="Returns the number of characters in a specific text line." version="4" playername="" helpurl="flash.text:TextField:getLineLength"/>
                <string name="getLineMetrics" object="[flash.text.TextField]" text=".getLineMetrics(%lineIndex:int%):flash.text:TextLineMetrics" tiptext="Returns metrics information about a given text line." version="4" playername="" helpurl="flash.text:TextField:getLineMetrics"/>
                <string name="getLineOffset" object="[flash.text.TextField]" text=".getLineOffset(%lineIndex:int%):int" tiptext="The zero-based index value of the first character in the line." version="4" playername="" helpurl="flash.text:TextField:getLineOffset"/>
                <string name="getLineText" object="[flash.text.TextField]" text=".getLineText(%lineIndex:int%):String" tiptext="The text string contained in the specified line." version="4" playername="" helpurl="flash.text:TextField:getLineText"/>
                <string name="getParagraphLength" object="[flash.text.TextField]" text=".getParagraphLength(%charIndex:int%):int" tiptext="The zero-based index value of the character." version="4" playername="" helpurl="flash.text:TextField:getParagraphLength"/>
                <string name="getTextFormat" object="[flash.text.TextField]" text=".getTextFormat(%[beginIndex:int=-1,endIndex:int=-1]%):flash.text:TextFormat" tiptext="Returns a TextFormat object." version="4" playername="" helpurl="flash.text:TextField:getTextFormat"/>
                <string name="isFontCompatible" object="[flash.text.TextField]" text="TextField.isFontCompatible(%fontName:String,fontStyle:String%):Boolean" static="true" tiptext="Returns true if an embedded font is available with the specified fontName and fontStyle where Font.fontType is flash.text.FontType.EMBEDDED." version="4" playername="" helpurl="flash.text:TextField:isFontCompatible"/>
                <string name="replaceSelectedText" object="[flash.text.TextField]" text=".replaceSelectedText(%value:String%):void" tiptext="Replaces the current selection with the contents of the value parameter." version="4" playername="" helpurl="flash.text:TextField:replaceSelectedText"/>
                <string name="replaceText" object="[flash.text.TextField]" text=".replaceText(%beginIndex:int,endIndex:int,newText:String%):void" tiptext="Replaces a range of characters." version="4" playername="" helpurl="flash.text:TextField:replaceText"/>
                <string name="setSelection" object="[flash.text.TextField]" text=".setSelection(%beginIndex:int,endIndex:int%):void" tiptext="Sets a new text selection." version="4" playername="" helpurl="flash.text:TextField:setSelection"/>
                <string name="setTextFormat" object="[flash.text.TextField]" text=".setTextFormat(%format:flash.text:TextFormat[,beginIndex:int=-1,endIndex:int=-1]%):void" tiptext="Applies text formatting." version="4" playername="" helpurl="flash.text:TextField:setTextFormat"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class TextField" helpurl="flash.text:TextField">
                <string name="alwaysShowSelection" object="[flash.text.TextField]" text=".alwaysShowSelection" tiptext="When set to true and the text field is not in focus, Flash Player highlights the selection in the text field in gray." version="" playername="" helpurl="flash.text:TextField:alwaysShowSelection:get"/>
                <string name="antiAliasType" object="[flash.text.TextField]" text=".antiAliasType" tiptext="The type of anti-aliasing used for this text field." version="" playername="" helpurl="flash.text:TextField:antiAliasType:get"/>
                <string name="autoSize" object="[flash.text.TextField]" text=".autoSize" tiptext="Controls automatic sizing and alignment of text fields." version="" playername="" helpurl="flash.text:TextField:autoSize:get"/>
                <string name="backgroundColor" object="[flash.text.TextField]" text=".backgroundColor" tiptext="The color of the text field background." version="" playername="" helpurl="flash.text:TextField:backgroundColor:get"/>
                <string name="background" object="[flash.text.TextField]" text=".background" tiptext="Specifies whether the text field has a background fill." version="" playername="" helpurl="flash.text:TextField:background:get"/>
                <string name="borderColor" object="[flash.text.TextField]" text=".borderColor" tiptext="The color of the text field border." version="" playername="" helpurl="flash.text:TextField:borderColor:get"/>
                <string name="border" object="[flash.text.TextField]" text=".border" tiptext="Specifies whether the text field has a border." version="" playername="" helpurl="flash.text:TextField:border:get"/>
                <string name="bottomScrollV" object="[flash.text.TextField]" text=".bottomScrollV" tiptext="An integer (1-based index) that indicates the bottommost line that is currently visible in the specified text field." version="" playername="" helpurl="flash.text:TextField:bottomScrollV:get"/>
                <string name="caretIndex" object="[flash.text.TextField]" text=".caretIndex" tiptext="The index of the insertion point (caret) position." version="" playername="" helpurl="flash.text:TextField:caretIndex:get"/>
                <string name="condenseWhite" object="[flash.text.TextField]" text=".condenseWhite" tiptext="A Boolean value that specifies whether extra white space (spaces, line breaks, and so on) in a text field with HTML text is removed." version="" playername="" helpurl="flash.text:TextField:condenseWhite:get"/>
                <string name="defaultTextFormat" object="[flash.text.TextField]" text=".defaultTextFormat" tiptext="Specifies the format applied to newly inserted text, such as text entered by a user or text inserted with the replaceSelectedText() method." version="" playername="" helpurl="flash.text:TextField:defaultTextFormat:get"/>
                <string name="displayAsPassword" object="[flash.text.TextField]" text=".displayAsPassword" tiptext="Specifies whether the text field is a password text field." version="" playername="" helpurl="flash.text:TextField:displayAsPassword:get"/>
                <string name="embedFonts" object="[flash.text.TextField]" text=".embedFonts" tiptext="Specifies whether to render by using embedded font outlines." version="" playername="" helpurl="flash.text:TextField:embedFonts:get"/>
                <string name="gridFitType" object="[flash.text.TextField]" text=".gridFitType" tiptext="The type of grid fitting used for this text field." version="" playername="" helpurl="flash.text:TextField:gridFitType:get"/>
                <string name="htmlText" object="[flash.text.TextField]" text=".htmlText" tiptext="Contains the HTML representation of the text field contents." version="" playername="" helpurl="flash.text:TextField:htmlText:get"/>
                <string name="length" object="[flash.text.TextField]" text=".length" tiptext="The number of characters in a text field." version="" playername="" helpurl="flash.text:TextField:length:get"/>
                <string name="maxChars" object="[flash.text.TextField]" text=".maxChars" tiptext="The maximum number of characters that the text field can contain, as entered by a user." version="" playername="" helpurl="flash.text:TextField:maxChars:get"/>
                <string name="maxScrollH" object="[flash.text.TextField]" text=".maxScrollH" tiptext="The maximum value of scrollH." version="" playername="" helpurl="flash.text:TextField:maxScrollH:get"/>
                <string name="maxScrollV" object="[flash.text.TextField]" text=".maxScrollV" tiptext="The maximum value of scrollV." version="" playername="" helpurl="flash.text:TextField:maxScrollV:get"/>
                <string name="mouseWheelEnabled" object="[flash.text.TextField]" text=".mouseWheelEnabled" tiptext="A Boolean value that indicates whether Flash Player automatically scrolls multiline text fields when the user clicks a text field and rolls the mouse wheel." version="" playername="" helpurl="flash.text:TextField:mouseWheelEnabled:get"/>
                <string name="multiline" object="[flash.text.TextField]" text=".multiline" tiptext="Indicates whether field is a multiline text field." version="" playername="" helpurl="flash.text:TextField:multiline:get"/>
                <string name="numLines" object="[flash.text.TextField]" text=".numLines" tiptext="Defines the number of text lines in a multiline text field." version="" playername="" helpurl="flash.text:TextField:numLines:get"/>
                <string name="restrict" object="[flash.text.TextField]" text=".restrict" tiptext="Indicates the set of characters that a user can enter into the text field." version="" playername="" helpurl="flash.text:TextField:restrict:get"/>
                <string name="scrollH" object="[flash.text.TextField]" text=".scrollH" tiptext="The current horizontal scrolling position." version="" playername="" helpurl="flash.text:TextField:scrollH:get"/>
                <string name="scrollV" object="[flash.text.TextField]" text=".scrollV" tiptext="The vertical position of text in a text field." version="" playername="" helpurl="flash.text:TextField:scrollV:get"/>
                <string name="selectable" object="[flash.text.TextField]" text=".selectable" tiptext="A Boolean value that indicates whether the text field is selectable." version="" playername="" helpurl="flash.text:TextField:selectable:get"/>
                <string name="selectionBeginIndex" object="[flash.text.TextField]" text=".selectionBeginIndex" tiptext="The zero-based character index value of the first character in the current selection." version="" playername="" helpurl="flash.text:TextField:selectionBeginIndex:get"/>
                <string name="selectionEndIndex" object="[flash.text.TextField]" text=".selectionEndIndex" tiptext="The zero-based character index value of the last character in the current selection." version="" playername="" helpurl="flash.text:TextField:selectionEndIndex:get"/>
                <string name="sharpness" object="[flash.text.TextField]" text=".sharpness" tiptext="The sharpness of the glyph edges in this text field." version="" playername="" helpurl="flash.text:TextField:sharpness:get"/>
                <string name="styleSheet" object="[flash.text.TextField]" text=".styleSheet" tiptext="Attaches a style sheet to the text field." version="" playername="" helpurl="flash.text:TextField:styleSheet:get"/>
                <string name="textColor" object="[flash.text.TextField]" text=".textColor" tiptext="The color of the text in a text field, in hexadecimal format." version="" playername="" helpurl="flash.text:TextField:textColor:get"/>
                <string name="textHeight" object="[flash.text.TextField]" text=".textHeight" tiptext="The height of the text in pixels." version="" playername="" helpurl="flash.text:TextField:textHeight:get"/>
                <string name="textInteractionMode" object="[flash.text.TextField]" text=".textInteractionMode" tiptext="The interaction mode property, Default value is TextInteractionMode.NORMAL." version="" playername="" helpurl="flash.text:TextField:textInteractionMode:get"/>
                <string name="textWidth" object="[flash.text.TextField]" text=".textWidth" tiptext="The width of the text in pixels." version="" playername="" helpurl="flash.text:TextField:textWidth:get"/>
                <string name="text" object="[flash.text.TextField]" text=".text" tiptext="A string that is the current text in the text field." version="" playername="" helpurl="flash.text:TextField:text:get"/>
                <string name="thickness" object="[flash.text.TextField]" text=".thickness" tiptext="The thickness of the glyph edges in this text field." version="" playername="" helpurl="flash.text:TextField:thickness:get"/>
                <string name="type" object="[flash.text.TextField]" text=".type" tiptext="The type of the text field." version="" playername="" helpurl="flash.text:TextField:type:get"/>
                <string name="useRichTextClipboard" object="[flash.text.TextField]" text=".useRichTextClipboard" tiptext="Specifies whether to copy and paste the text formatting along with the text." version="" playername="" helpurl="flash.text:TextField:useRichTextClipboard:get"/>
                <string name="wordWrap" object="[flash.text.TextField]" text=".wordWrap" tiptext="A Boolean value that indicates whether the text field has word wrap." version="" playername="" helpurl="flash.text:TextField:wordWrap:get"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class TextField" helpurl="flash.text:TextField">
                <string name="textInteractionModeChange" object="[flash.text.TextField]" text=".addEventListener(%type:String=Event.{Event.,TextEvent.TEXT_INPUT,Event.SCROLL,TextEvent.LINK,Event.CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Flash Player dispatches the textInteractionModeChange event when a user changes the interaction mode of a text field." version="" playername="" helpurl="flash.text:TextField__textInteractionModeChange"/>
                <string name="textInput" object="[flash.text.TextField]" text=".addEventListener(%type:String=TextEvent.TEXT_INPUT{Event.,TextEvent.TEXT_INPUT,Event.SCROLL,TextEvent.LINK,Event.CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Flash Player dispatches the textInput event when a user enters one or more characters of text." version="" playername="" helpurl="flash.text:TextField_flash.events.TextEvent.TEXT_INPUT_textInput"/>
                <string name="scroll" object="[flash.text.TextField]" text=".addEventListener(%type:String=Event.SCROLL{Event.,TextEvent.TEXT_INPUT,Event.SCROLL,TextEvent.LINK,Event.CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched by a TextField object after the user scrolls." version="" playername="" helpurl="flash.text:TextField_flash.events.Event.SCROLL_scroll"/>
                <string name="link" object="[flash.text.TextField]" text=".addEventListener(%type:String=TextEvent.LINK{Event.,TextEvent.TEXT_INPUT,Event.SCROLL,TextEvent.LINK,Event.CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a user clicks a hyperlink in an HTML-enabled text field, where the URL begins with &quot;event:&quot;." version="" playername="" helpurl="flash.text:TextField_flash.events.TextEvent.LINK_link"/>
                <string name="change" object="[flash.text.TextField]" text=".addEventListener(%type:String=Event.CHANGE{Event.,TextEvent.TEXT_INPUT,Event.SCROLL,TextEvent.LINK,Event.CHANGE},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched after a control value is modified, unlike the textInput event, which is dispatched before the value is modified." version="" playername="" helpurl="flash.text:TextField_flash.events.Event.CHANGE_change"/>
            </folder>
        </folder>
        <folder name="TextFieldAutoSize" id="[flash.text.TextFieldAutoSize]" sort="true" index="true" asAncestors="Object" tiptext="The TextFieldAutoSize class is an enumeration of constant values used in setting the autoSize property of the TextField class." helpurl="flash.text:TextFieldAutoSize">
            <folder name="Properties" id="Properties" tiptext="Properties for class TextFieldAutoSize" helpurl="flash.text:TextFieldAutoSize">
                <string name="CENTER" object="[flash.text.TextFieldAutoSize]" text="TextFieldAutoSize.CENTER" constant="true" tiptext="Specifies that the text is to be treated as center-justified text." version="" playername="" helpurl="flash.text:TextFieldAutoSize:CENTER"/>
                <string name="LEFT" object="[flash.text.TextFieldAutoSize]" text="TextFieldAutoSize.LEFT" constant="true" tiptext="Specifies that the text is to be treated as left-justified text, meaning that the left side of the text field remains fixed and any resizing of a single line is on the right side." version="" playername="" helpurl="flash.text:TextFieldAutoSize:LEFT"/>
                <string name="NONE" object="[flash.text.TextFieldAutoSize]" text="TextFieldAutoSize.NONE" constant="true" tiptext="Specifies that no resizing is to occur." version="" playername="" helpurl="flash.text:TextFieldAutoSize:NONE"/>
                <string name="RIGHT" object="[flash.text.TextFieldAutoSize]" text="TextFieldAutoSize.RIGHT" constant="true" tiptext="Specifies that the text is to be treated as right-justified text, meaning that the right side of the text field remains fixed and any resizing of a single line is on the left side." version="" playername="" helpurl="flash.text:TextFieldAutoSize:RIGHT"/>
            </folder>
        </folder>
        <folder name="TextFieldType" id="[flash.text.TextFieldType]" sort="true" index="true" asAncestors="Object" tiptext="The TextFieldType class is an enumeration of constant values used in setting the type property of the TextField class." helpurl="flash.text:TextFieldType">
            <folder name="Properties" id="Properties" tiptext="Properties for class TextFieldType" helpurl="flash.text:TextFieldType">
                <string name="DYNAMIC" object="[flash.text.TextFieldType]" text="TextFieldType.DYNAMIC" constant="true" tiptext="Used to specify a dynamic TextField." version="" playername="" helpurl="flash.text:TextFieldType:DYNAMIC"/>
                <string name="INPUT" object="[flash.text.TextFieldType]" text="TextFieldType.INPUT" constant="true" tiptext="Used to specify an input TextField." version="" playername="" helpurl="flash.text:TextFieldType:INPUT"/>
            </folder>
        </folder>
        <folder name="TextFormat" id="[flash.text.TextFormat]" sort="true" index="true" asAncestors="Object" tiptext="The TextFormat class represents character formatting information." helpurl="flash.text:TextFormat">
            <folder name="Methods" id="Methods" tiptext="Methods for class TextFormat" helpurl="flash.text:TextFormat">
                <string name="TextFormat" object="[flash.text.TextFormat]" text="new TextFormat(%[font:String=null,size:Object=null,color:Object=null,bold:Object=null,italic:Object=null,underline:Object=null,url:String=null,target:String=null,align:String=null,leftMargin:Object=null,rightMargin:Object=null,indent:Object=null,leading:Object=null]%)" constructor="true" tiptext="Creates a TextFormat object with the specified properties." version="4" playername="" helpurl="flash.text:TextFormat:TextFormat"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class TextFormat" helpurl="flash.text:TextFormat">
                <string name="align" object="[flash.text.TextFormat]" text=".align" tiptext="Indicates the alignment of the paragraph." version="" playername="" helpurl="flash.text:TextFormat:align:get"/>
                <string name="blockIndent" object="[flash.text.TextFormat]" text=".blockIndent" tiptext="Indicates the block indentation in pixels." version="" playername="" helpurl="flash.text:TextFormat:blockIndent:get"/>
                <string name="bold" object="[flash.text.TextFormat]" text=".bold" tiptext="Specifies whether the text is boldface." version="" playername="" helpurl="flash.text:TextFormat:bold:get"/>
                <string name="bullet" object="[flash.text.TextFormat]" text=".bullet" tiptext="Indicates that the text is part of a bulleted list." version="" playername="" helpurl="flash.text:TextFormat:bullet:get"/>
                <string name="color" object="[flash.text.TextFormat]" text=".color" tiptext="Indicates the color of the text." version="" playername="" helpurl="flash.text:TextFormat:color:get"/>
                <string name="font" object="[flash.text.TextFormat]" text=".font" tiptext="The name of the font for text in this text format, as a string." version="" playername="" helpurl="flash.text:TextFormat:font:get"/>
                <string name="indent" object="[flash.text.TextFormat]" text=".indent" tiptext="Indicates the indentation from the left margin to the first character in the paragraph." version="" playername="" helpurl="flash.text:TextFormat:indent:get"/>
                <string name="italic" object="[flash.text.TextFormat]" text=".italic" tiptext="Indicates whether text in this text format is italicized." version="" playername="" helpurl="flash.text:TextFormat:italic:get"/>
                <string name="kerning" object="[flash.text.TextFormat]" text=".kerning" tiptext="A Boolean value that indicates whether kerning is enabled (true) or disabled (false)." version="" playername="" helpurl="flash.text:TextFormat:kerning:get"/>
                <string name="leading" object="[flash.text.TextFormat]" text=".leading" tiptext="An integer representing the amount of vertical space (called leading) between lines." version="" playername="" helpurl="flash.text:TextFormat:leading:get"/>
                <string name="leftMargin" object="[flash.text.TextFormat]" text=".leftMargin" tiptext="The left margin of the paragraph, in pixels." version="" playername="" helpurl="flash.text:TextFormat:leftMargin:get"/>
                <string name="letterSpacing" object="[flash.text.TextFormat]" text=".letterSpacing" tiptext="A number representing the amount of space that is uniformly distributed between all characters." version="" playername="" helpurl="flash.text:TextFormat:letterSpacing:get"/>
                <string name="rightMargin" object="[flash.text.TextFormat]" text=".rightMargin" tiptext="The right margin of the paragraph, in pixels." version="" playername="" helpurl="flash.text:TextFormat:rightMargin:get"/>
                <string name="size" object="[flash.text.TextFormat]" text=".size" tiptext="The size in pixels of text in this text format." version="" playername="" helpurl="flash.text:TextFormat:size:get"/>
                <string name="tabStops" object="[flash.text.TextFormat]" text=".tabStops" tiptext="Specifies custom tab stops as an array of non-negative integers." version="" playername="" helpurl="flash.text:TextFormat:tabStops:get"/>
                <string name="target" object="[flash.text.TextFormat]" text=".target" tiptext="Indicates the target window where the hyperlink is displayed." version="" playername="" helpurl="flash.text:TextFormat:target:get"/>
                <string name="underline" object="[flash.text.TextFormat]" text=".underline" tiptext="Indicates whether the text that uses this text format is underlined (true) or not (false)." version="" playername="" helpurl="flash.text:TextFormat:underline:get"/>
                <string name="url" object="[flash.text.TextFormat]" text=".url" tiptext="Indicates the target URL for the text in this text format." version="" playername="" helpurl="flash.text:TextFormat:url:get"/>
            </folder>
        </folder>
        <folder name="TextFormatAlign" id="[flash.text.TextFormatAlign]" sort="true" index="true" asAncestors="Object" tiptext="The TextFormatAlign class provides values for text alignment in the TextFormat class." helpurl="flash.text:TextFormatAlign">
            <folder name="Properties" id="Properties" tiptext="Properties for class TextFormatAlign" helpurl="flash.text:TextFormatAlign">
                <string name="CENTER" object="[flash.text.TextFormatAlign]" text="TextFormatAlign.CENTER" constant="true" tiptext="Constant; centers the text in the text field." version="" playername="" helpurl="flash.text:TextFormatAlign:CENTER"/>
                <string name="JUSTIFY" object="[flash.text.TextFormatAlign]" text="TextFormatAlign.JUSTIFY" constant="true" tiptext="Constant; justifies text within the text field." version="" playername="" helpurl="flash.text:TextFormatAlign:JUSTIFY"/>
                <string name="LEFT" object="[flash.text.TextFormatAlign]" text="TextFormatAlign.LEFT" constant="true" tiptext="Constant; aligns text to the left within the text field." version="" playername="" helpurl="flash.text:TextFormatAlign:LEFT"/>
                <string name="RIGHT" object="[flash.text.TextFormatAlign]" text="TextFormatAlign.RIGHT" constant="true" tiptext="Constant; aligns text to the right within the text field." version="" playername="" helpurl="flash.text:TextFormatAlign:RIGHT"/>
            </folder>
        </folder>
        <folder name="TextInteractionMode" id="[flash.text.TextInteractionMode]" sort="true" index="true" asAncestors="Object" tiptext="A class that defines the Interactive mode of a text field object." helpurl="flash.text:TextInteractionMode">
            <folder name="Properties" id="Properties" tiptext="Properties for class TextInteractionMode" helpurl="flash.text:TextInteractionMode">
                <string name="NORMAL" object="[flash.text.TextInteractionMode]" text="TextInteractionMode.NORMAL" constant="true" tiptext="The text field&apos;s default interaction mode is NORMAL and it varies across platform." version="" playername="" helpurl="flash.text:TextInteractionMode:NORMAL"/>
                <string name="SELECTION" object="[flash.text.TextInteractionMode]" text="TextInteractionMode.SELECTION" constant="true" tiptext="On mobile platforms like Android, the text field starts in normal mode(which implies scroll and non-selectable mode)." version="" playername="" helpurl="flash.text:TextInteractionMode:SELECTION"/>
            </folder>
        </folder>
        <folder name="TextLineMetrics" id="[flash.text.TextLineMetrics]" sort="true" index="true" asAncestors="Object" tiptext="The TextLineMetrics class contains information about the text position and measurements of a line of text within a text field." helpurl="flash.text:TextLineMetrics">
            <folder name="Methods" id="Methods" tiptext="Methods for class TextLineMetrics" helpurl="flash.text:TextLineMetrics">
                <string name="TextLineMetrics" object="[flash.text.TextLineMetrics]" text="new TextLineMetrics(%x:Number,width:Number,height:Number,ascent:Number,descent:Number,leading:Number%)" constructor="true" tiptext="Contains information about the text position and measurements of a line of text in a text field." version="4" playername="" helpurl="flash.text:TextLineMetrics:TextLineMetrics"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class TextLineMetrics" helpurl="flash.text:TextLineMetrics">
                <string name="ascent" object="[flash.text.TextLineMetrics]" text=".ascent" tiptext="The ascent value of the text is the length from the baseline to the top of the line height in pixels." version="" playername="" helpurl="flash.text:TextLineMetrics:ascent"/>
                <string name="descent" object="[flash.text.TextLineMetrics]" text=".descent" tiptext="The descent value of the text is the length from the baseline to the bottom depth of the line in pixels." version="" playername="" helpurl="flash.text:TextLineMetrics:descent"/>
                <string name="height" object="[flash.text.TextLineMetrics]" text=".height" tiptext="The height value of the text of the selected lines (not necessarily the complete text) in pixels." version="" playername="" helpurl="flash.text:TextLineMetrics:height"/>
                <string name="leading" object="[flash.text.TextLineMetrics]" text=".leading" tiptext="The leading value is the measurement of the vertical distance between the lines of text." version="" playername="" helpurl="flash.text:TextLineMetrics:leading"/>
                <string name="width" object="[flash.text.TextLineMetrics]" text=".width" tiptext="The width value is the width of the text of the selected lines (not necessarily the complete text) in pixels." version="" playername="" helpurl="flash.text:TextLineMetrics:width"/>
                <string name="x" object="[flash.text.TextLineMetrics]" text=".x" tiptext="The x value is the left position of the first character in pixels." version="" playername="" helpurl="flash.text:TextLineMetrics:x"/>
            </folder>
        </folder>
        <folder name="TextRenderer" id="[flash.text.TextRenderer]" sort="true" index="true" asAncestors="Object" tiptext="The TextRenderer class provides functionality for the advanced anti-aliasing capability of embedded fonts." helpurl="flash.text:TextRenderer">
            <folder name="Methods" id="Methods" tiptext="Methods for class TextRenderer" helpurl="flash.text:TextRenderer">
                <string name="setAdvancedAntiAliasingTable" object="[flash.text.TextRenderer]" text="TextRenderer.setAdvancedAntiAliasingTable(%fontName:String,fontStyle:String,colorType:String,advancedAntiAliasingTable:Array%):void" static="true" tiptext="Sets a custom continuous stroke modulation (CSM) lookup table for a font." version="9" playername="" helpurl="flash.text:TextRenderer:setAdvancedAntiAliasingTable"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class TextRenderer" helpurl="flash.text:TextRenderer">
                <string name="displayMode" object="[flash.text.TextRenderer]" text=".displayMode" tiptext="Controls the rendering of advanced anti-aliased text." version="" playername="" helpurl="flash.text:TextRenderer:displayMode:get"/>
                <string name="maxLevel" object="[flash.text.TextRenderer]" text=".maxLevel" tiptext="The adaptively sampled distance fields (ADFs) quality level for advanced anti-aliasing." version="" playername="" helpurl="flash.text:TextRenderer:maxLevel:get"/>
            </folder>
        </folder>
        <folder name="TextSnapshot" id="[flash.text.TextSnapshot]" sort="true" index="true" asAncestors="Object" tiptext="TextSnapshot objects let you work with static text in a movie clip." helpurl="flash.text:TextSnapshot">
            <folder name="Methods" id="Methods" tiptext="Methods for class TextSnapshot" helpurl="flash.text:TextSnapshot">
                <string name="findText" object="[flash.text.TextSnapshot]" text=".findText(%beginIndex:int,textToFind:String,caseSensitive:Boolean%):int" tiptext="Searches the specified TextSnapshot object and returns the position of the first occurrence of textToFind found at or after beginIndex." version="4" playername="" helpurl="flash.text:TextSnapshot:findText"/>
                <string name="getSelectedText" object="[flash.text.TextSnapshot]" text=".getSelectedText(%[includeLineEndings:Boolean=false]%):String" tiptext="Returns a string that contains all the characters specified by the corresponding setSelected() method." version="4" playername="" helpurl="flash.text:TextSnapshot:getSelectedText"/>
                <string name="getSelected" object="[flash.text.TextSnapshot]" text=".getSelected(%beginIndex:int,endIndex:int%):Boolean" tiptext="Returns a Boolean value that specifies whether a TextSnapshot object contains selected text in the specified range." version="4" playername="" helpurl="flash.text:TextSnapshot:getSelected"/>
                <string name="getTextRunInfo" object="[flash.text.TextSnapshot]" text=".getTextRunInfo(%beginIndex:int,endIndex:int%):Array" tiptext="Returns an array of objects that contains information about a run of text." version="4" playername="" helpurl="flash.text:TextSnapshot:getTextRunInfo"/>
                <string name="getText" object="[flash.text.TextSnapshot]" text=".getText(%beginIndex:int,endIndex:int[,includeLineEndings:Boolean=false]%):String" tiptext="Returns a string that contains all the characters specified by the beginIndex and endIndex parameters." version="4" playername="" helpurl="flash.text:TextSnapshot:getText"/>
                <string name="hitTestTextNearPos" object="[flash.text.TextSnapshot]" text=".hitTestTextNearPos(%x:Number,y:Number[,maxDistance:Number=0]%):Number" tiptext="Lets you determine which character within a TextSnapshot object is on or near the specified x, y coordinates of the movie clip containing the text in the TextSnapshot object." version="4" playername="" helpurl="flash.text:TextSnapshot:hitTestTextNearPos"/>
                <string name="setSelectColor" object="[flash.text.TextSnapshot]" text=".setSelectColor(%[hexColor:uint=0xFFFF00]%):void" tiptext="Specifies the color to use when highlighting characters that have been selected with the  setSelected() method." version="4" playername="" helpurl="flash.text:TextSnapshot:setSelectColor"/>
                <string name="setSelected" object="[flash.text.TextSnapshot]" text=".setSelected(%beginIndex:int,endIndex:int,select:Boolean%):void" tiptext="Specifies a range of characters in a TextSnapshot object to be selected or deselected." version="4" playername="" helpurl="flash.text:TextSnapshot:setSelected"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class TextSnapshot" helpurl="flash.text:TextSnapshot">
                <string name="charCount" object="[flash.text.TextSnapshot]" text=".charCount" tiptext="The number of characters in a TextSnapshot object." version="" playername="" helpurl="flash.text:TextSnapshot:charCount:get"/>
            </folder>
        </folder>
    </folder>
        <folder name="flash.text.engine" id="flash.text.engine" sort="true" tiptext="Classes for package flash.text.engine" helpurl="flash.text.engine">
        <folder name="BreakOpportunity" id="[flash.text.engine.BreakOpportunity]" sort="true" index="true" asAncestors="Object" tiptext="The BreakOpportunity class is an enumeration of constant values that you can use to set the breakOpportunity property of the ElementFormat class." helpurl="flash.text.engine:BreakOpportunity">
            <folder name="Properties" id="Properties" tiptext="Properties for class BreakOpportunity" helpurl="flash.text.engine:BreakOpportunity">
                <string name="ALL" object="[flash.text.engine.BreakOpportunity]" text="BreakOpportunity.ALL" constant="true" tiptext="Treats all characters in the ContentElement object as line break opportunities, meaning that a line break will occurafer each character." version="" playername="" helpurl="flash.text.engine:BreakOpportunity:ALL"/>
                <string name="ANY" object="[flash.text.engine.BreakOpportunity]" text="BreakOpportunity.ANY" constant="true" tiptext="Treats any character in the ContentElement object as a line break opportunity." version="" playername="" helpurl="flash.text.engine:BreakOpportunity:ANY"/>
                <string name="AUTO" object="[flash.text.engine.BreakOpportunity]" text="BreakOpportunity.AUTO" constant="true" tiptext="Bases line break opportunities on Unicode character properties." version="" playername="" helpurl="flash.text.engine:BreakOpportunity:AUTO"/>
                <string name="NONE" object="[flash.text.engine.BreakOpportunity]" text="BreakOpportunity.NONE" constant="true" tiptext="Treats no characters in the ContentElement object as line break opportunities." version="" playername="" helpurl="flash.text.engine:BreakOpportunity:NONE"/>
            </folder>
        </folder>
        <folder name="CFFHinting" id="[flash.text.engine.CFFHinting]" sort="true" index="true" asAncestors="Object" tiptext="The CFFHinting class defines values for cff hinting in the FontDescription class." helpurl="flash.text.engine:CFFHinting">
            <folder name="Properties" id="Properties" tiptext="Properties for class CFFHinting" helpurl="flash.text.engine:CFFHinting">
                <string name="HORIZONTAL_STEM" object="[flash.text.engine.CFFHinting]" text="CFFHinting.HORIZONTAL_STEM" constant="true" tiptext="Fits strong horizontal stems to the pixel grid for improved readability." version="" playername="" helpurl="flash.text.engine:CFFHinting:HORIZONTAL_STEM"/>
                <string name="NONE" object="[flash.text.engine.CFFHinting]" text="CFFHinting.NONE" constant="true" tiptext="No hinting is applied." version="" playername="" helpurl="flash.text.engine:CFFHinting:NONE"/>
            </folder>
        </folder>
        <folder name="ContentElement" id="[flash.text.engine.ContentElement]" sort="true" index="true" asAncestors="Object" tiptext="The ContentElement class serves as a base class for the element types that can appear in a GroupElement, namely a GraphicElement, another GroupElement, or a TextElement." helpurl="flash.text.engine:ContentElement">
            <folder name="Methods" id="Methods" tiptext="Methods for class ContentElement" helpurl="flash.text.engine:ContentElement">
                <string name="ContentElement" object="[flash.text.engine.ContentElement]" text="new ContentElement(%[elementFormat:flash.text.engine:ElementFormat=null,eventMirror:flash.events:EventDispatcher=null,textRotation:String=rotate0]%)" constructor="true" tiptext="Calling the new ContentElement() constructor throws an ArgumentError exception." version="4" playername="" helpurl="flash.text.engine:ContentElement:ContentElement"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class ContentElement" helpurl="flash.text.engine:ContentElement">
                <string name="GRAPHIC_ELEMENT" object="[flash.text.engine.ContentElement]" text="ContentElement.GRAPHIC_ELEMENT" constant="true" tiptext="Indicates the presence of a graphic element in the text." version="" playername="" helpurl="flash.text.engine:ContentElement:GRAPHIC_ELEMENT"/>
                <string name="userData" object="[flash.text.engine.ContentElement]" text=".userData" tiptext="Provides a way for an application to associate arbitrary data with the element." version="" playername="" helpurl="flash.text.engine:ContentElement:userData"/>
                <string name="elementFormat" object="[flash.text.engine.ContentElement]" text=".elementFormat" tiptext="The ElementFormat object used for the element." version="" playername="" helpurl="flash.text.engine:ContentElement:elementFormat:get"/>
                <string name="eventMirror" object="[flash.text.engine.ContentElement]" text=".eventMirror" tiptext="The EventDispatcher object that receives copies of every event dispatched to valid text lines based on this content element." version="" playername="" helpurl="flash.text.engine:ContentElement:eventMirror:get"/>
                <string name="groupElement" object="[flash.text.engine.ContentElement]" text=".groupElement" tiptext="The GroupElement object that contains this element, or null if it is not in a group." version="" playername="" helpurl="flash.text.engine:ContentElement:groupElement:get"/>
                <string name="rawText" object="[flash.text.engine.ContentElement]" text=".rawText" tiptext="A copy of the text in the element, including any U+FDEF characters." version="" playername="" helpurl="flash.text.engine:ContentElement:rawText:get"/>
                <string name="textBlockBeginIndex" object="[flash.text.engine.ContentElement]" text=".textBlockBeginIndex" tiptext="The index in the text block of the first character of this element." version="" playername="" helpurl="flash.text.engine:ContentElement:textBlockBeginIndex:get"/>
                <string name="textBlock" object="[flash.text.engine.ContentElement]" text=".textBlock" tiptext="The TextBlock to which this element belongs." version="" playername="" helpurl="flash.text.engine:ContentElement:textBlock:get"/>
                <string name="textRotation" object="[flash.text.engine.ContentElement]" text=".textRotation" tiptext="The rotation to apply to the element as a unit." version="" playername="" helpurl="flash.text.engine:ContentElement:textRotation:get"/>
                <string name="text" object="[flash.text.engine.ContentElement]" text=".text" tiptext="A copy of the text in the element, not including any U+FDEF characters, which represent graphic elements in the String." version="" playername="" helpurl="flash.text.engine:ContentElement:text:get"/>
            </folder>
        </folder>
        <folder name="DigitCase" id="[flash.text.engine.DigitCase]" sort="true" index="true" asAncestors="Object" tiptext="The DigitCase class is an enumeration of constant values used in setting the digitCase property of the ElementFormat class." helpurl="flash.text.engine:DigitCase">
            <folder name="Properties" id="Properties" tiptext="Properties for class DigitCase" helpurl="flash.text.engine:DigitCase">
                <string name="DEFAULT" object="[flash.text.engine.DigitCase]" text="DigitCase.DEFAULT" constant="true" tiptext="Used to specify default digit case." version="" playername="" helpurl="flash.text.engine:DigitCase:DEFAULT"/>
                <string name="LINING" object="[flash.text.engine.DigitCase]" text="DigitCase.LINING" constant="true" tiptext="Used to specify lining digit case." version="" playername="" helpurl="flash.text.engine:DigitCase:LINING"/>
                <string name="OLD_STYLE" object="[flash.text.engine.DigitCase]" text="DigitCase.OLD_STYLE" constant="true" tiptext="Used to specify old style digit case." version="" playername="" helpurl="flash.text.engine:DigitCase:OLD_STYLE"/>
            </folder>
        </folder>
        <folder name="DigitWidth" id="[flash.text.engine.DigitWidth]" sort="true" index="true" asAncestors="Object" tiptext="The DigitWidth class is an enumeration of constant values used in setting the digitWidth property of the ElementFormat class." helpurl="flash.text.engine:DigitWidth">
            <folder name="Properties" id="Properties" tiptext="Properties for class DigitWidth" helpurl="flash.text.engine:DigitWidth">
                <string name="DEFAULT" object="[flash.text.engine.DigitWidth]" text="DigitWidth.DEFAULT" constant="true" tiptext="Used to specify default digit width." version="" playername="" helpurl="flash.text.engine:DigitWidth:DEFAULT"/>
                <string name="PROPORTIONAL" object="[flash.text.engine.DigitWidth]" text="DigitWidth.PROPORTIONAL" constant="true" tiptext="Used to specify proportional digit width." version="" playername="" helpurl="flash.text.engine:DigitWidth:PROPORTIONAL"/>
                <string name="TABULAR" object="[flash.text.engine.DigitWidth]" text="DigitWidth.TABULAR" constant="true" tiptext="Used to specify tabular digit width." version="" playername="" helpurl="flash.text.engine:DigitWidth:TABULAR"/>
            </folder>
        </folder>
        <folder name="EastAsianJustifier" id="[flash.text.engine.EastAsianJustifier]" sort="true" index="true" asAncestors="flash.text.engine:TextJustifier,Object" tiptext="The EastAsianJustifier class has properties to control the justification options for text lines whose content is primarily East Asian text." helpurl="flash.text.engine:EastAsianJustifier">
            <folder name="Methods" id="Methods" tiptext="Methods for class EastAsianJustifier" helpurl="flash.text.engine:EastAsianJustifier">
                <string name="EastAsianJustifier" object="[flash.text.engine.EastAsianJustifier]" text="new EastAsianJustifier(%[locale:String=ja,lineJustification:String=allButLast,justificationStyle:String=pushInKinsoku]%)" constructor="true" tiptext="Creates an EastAsianJustifier object." version="4" playername="" helpurl="flash.text.engine:EastAsianJustifier:EastAsianJustifier"/>
                <string name="clone" object="[flash.text.engine.EastAsianJustifier]" text=".clone(%%):flash.text.engine:TextJustifier" tiptext="Constructs a cloned copy of the EastAsianJustifier." version="4" playername="" helpurl="flash.text.engine:EastAsianJustifier:clone"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class EastAsianJustifier" helpurl="flash.text.engine:EastAsianJustifier">
                <string name="justificationStyle" object="[flash.text.engine.EastAsianJustifier]" text=".justificationStyle" tiptext="Specifies the justification style for the text in a text block." version="" playername="" helpurl="flash.text.engine:EastAsianJustifier:justificationStyle:get"/>
            </folder>
        </folder>
        <folder name="ElementFormat" id="[flash.text.engine.ElementFormat]" sort="true" index="true" asAncestors="Object" tiptext="The ElementFormat class represents formatting information which can be applied to a ContentElement." helpurl="flash.text.engine:ElementFormat">
            <folder name="Methods" id="Methods" tiptext="Methods for class ElementFormat" helpurl="flash.text.engine:ElementFormat">
                <string name="ElementFormat" object="[flash.text.engine.ElementFormat]" text="new ElementFormat(%[fontDescription:flash.text.engine:FontDescription=null,fontSize:Number=12.0,color:uint=0x000000,alpha:Number=1.0,textRotation:String=auto,dominantBaseline:String=roman,alignmentBaseline:String=useDominantBaseline,baselineShift:Number=0.0,kerning:String=on,trackingRight:Number=0.0,trackingLeft:Number=0.0,locale:String=en,breakOpportunity:String=auto,digitCase:String=default,digitWidth:String=default,ligatureLevel:String=common,typographicCase:String=default]%)" constructor="true" tiptext="Creates an ElementFormat object." version="4" playername="" helpurl="flash.text.engine:ElementFormat:ElementFormat"/>
                <string name="clone" object="[flash.text.engine.ElementFormat]" text=".clone(%%):flash.text.engine:ElementFormat" tiptext="Constructs an unlocked, cloned copy of the ElementFormat." version="4" playername="" helpurl="flash.text.engine:ElementFormat:clone"/>
                <string name="getFontMetrics" object="[flash.text.engine.ElementFormat]" text=".getFontMetrics(%%):flash.text.engine:FontMetrics" tiptext="Returns a FontMetrics object with properties which describe the emBox, strikethrough position, strikethrough thickness, underline position, and underline thickness for the font specified by fontDescription and fontSize." version="4" playername="" helpurl="flash.text.engine:ElementFormat:getFontMetrics"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class ElementFormat" helpurl="flash.text.engine:ElementFormat">
                <string name="alignmentBaseline" object="[flash.text.engine.ElementFormat]" text=".alignmentBaseline" tiptext="Specifies the type of baseline in the containing element to which to align the dominant baselines of elements having this format." version="" playername="" helpurl="flash.text.engine:ElementFormat:alignmentBaseline:get"/>
                <string name="alpha" object="[flash.text.engine.ElementFormat]" text=".alpha" tiptext="Specifies the transparency of the line elements affected by this obect." version="" playername="" helpurl="flash.text.engine:ElementFormat:alpha:get"/>
                <string name="baselineShift" object="[flash.text.engine.ElementFormat]" text=".baselineShift" tiptext="Indicates the baseline shift for the element in pixels." version="" playername="" helpurl="flash.text.engine:ElementFormat:baselineShift:get"/>
                <string name="breakOpportunity" object="[flash.text.engine.ElementFormat]" text=".breakOpportunity" tiptext="The line break opportunity applied to this text." version="" playername="" helpurl="flash.text.engine:ElementFormat:breakOpportunity:get"/>
                <string name="color" object="[flash.text.engine.ElementFormat]" text=".color" tiptext="Indicates the color of the text." version="" playername="" helpurl="flash.text.engine:ElementFormat:color:get"/>
                <string name="digitCase" object="[flash.text.engine.ElementFormat]" text=".digitCase" tiptext="The digit case used for this text." version="" playername="" helpurl="flash.text.engine:ElementFormat:digitCase:get"/>
                <string name="digitWidth" object="[flash.text.engine.ElementFormat]" text=".digitWidth" tiptext="The digit width used for this text." version="" playername="" helpurl="flash.text.engine:ElementFormat:digitWidth:get"/>
                <string name="dominantBaseline" object="[flash.text.engine.ElementFormat]" text=".dominantBaseline" tiptext="Specifies the type of baseline to use as the dominant baseline." version="" playername="" helpurl="flash.text.engine:ElementFormat:dominantBaseline:get"/>
                <string name="fontDescription" object="[flash.text.engine.ElementFormat]" text=".fontDescription" tiptext="An object whose properties describe a font." version="" playername="" helpurl="flash.text.engine:ElementFormat:fontDescription:get"/>
                <string name="fontSize" object="[flash.text.engine.ElementFormat]" text=".fontSize" tiptext="The size of text in pixels." version="" playername="" helpurl="flash.text.engine:ElementFormat:fontSize:get"/>
                <string name="kerning" object="[flash.text.engine.ElementFormat]" text=".kerning" tiptext="Kerning adjusts the pixels between certain character pairs to improve readability." version="" playername="" helpurl="flash.text.engine:ElementFormat:kerning:get"/>
                <string name="ligatureLevel" object="[flash.text.engine.ElementFormat]" text=".ligatureLevel" tiptext="The ligature level used for this text." version="" playername="" helpurl="flash.text.engine:ElementFormat:ligatureLevel:get"/>
                <string name="locale" object="[flash.text.engine.ElementFormat]" text=".locale" tiptext="The locale of the text." version="" playername="" helpurl="flash.text.engine:ElementFormat:locale:get"/>
                <string name="locked" object="[flash.text.engine.ElementFormat]" text=".locked" tiptext="Indicates whether the ElementFormat is locked." version="" playername="" helpurl="flash.text.engine:ElementFormat:locked:get"/>
                <string name="textRotation" object="[flash.text.engine.ElementFormat]" text=".textRotation" tiptext="Sets the rotation applied to individual glyphs." version="" playername="" helpurl="flash.text.engine:ElementFormat:textRotation:get"/>
                <string name="trackingLeft" object="[flash.text.engine.ElementFormat]" text=".trackingLeft" tiptext="The tracking or manual kerning applied to the left of each glyph in pixels." version="" playername="" helpurl="flash.text.engine:ElementFormat:trackingLeft:get"/>
                <string name="trackingRight" object="[flash.text.engine.ElementFormat]" text=".trackingRight" tiptext="The tracking or manual kerning applied to the right of each glyph in pixels." version="" playername="" helpurl="flash.text.engine:ElementFormat:trackingRight:get"/>
                <string name="typographicCase" object="[flash.text.engine.ElementFormat]" text=".typographicCase" tiptext="The typographic case used for this text." version="" playername="" helpurl="flash.text.engine:ElementFormat:typographicCase:get"/>
            </folder>
        </folder>
        <folder name="FontDescription" id="[flash.text.engine.FontDescription]" sort="true" index="true" asAncestors="Object" tiptext="The FontDescription class represents the information necessary to describe a font." helpurl="flash.text.engine:FontDescription">
            <folder name="Methods" id="Methods" tiptext="Methods for class FontDescription" helpurl="flash.text.engine:FontDescription">
                <string name="FontDescription" object="[flash.text.engine.FontDescription]" text="new FontDescription(%[fontName:String=_serif,fontWeight:String=normal,fontPosture:String=normal,fontLookup:String=device,renderingMode:String=cff,cffHinting:String=horizontalStem]%)" constructor="true" tiptext="Creates a FontDescription object." version="4" playername="" helpurl="flash.text.engine:FontDescription:FontDescription"/>
                <string name="clone" object="[flash.text.engine.FontDescription]" text=".clone(%%):flash.text.engine:FontDescription" tiptext="Constructs an unlocked, cloned copy of the FontDescription." version="4" playername="" helpurl="flash.text.engine:FontDescription:clone"/>
                <string name="isDeviceFontCompatible" object="[flash.text.engine.FontDescription]" text="FontDescription.isDeviceFontCompatible(%fontName:String,fontWeight:String,fontPosture:String%):Boolean" static="true" tiptext="Returns true if a usable device font is available with the specified fontName, fontWeight, and fontPosture." version="2" playername="" helpurl="flash.text.engine:FontDescription:isDeviceFontCompatible"/>
                <string name="isFontCompatible" object="[flash.text.engine.FontDescription]" text="FontDescription.isFontCompatible(%fontName:String,fontWeight:String,fontPosture:String%):Boolean" static="true" tiptext="Returns true if an embedded font is available with the specified fontName, fontWeight, and fontPosture where Font.fontType is flash.text.FontType.EMBEDDED_CFF." version="4" playername="" helpurl="flash.text.engine:FontDescription:isFontCompatible"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class FontDescription" helpurl="flash.text.engine:FontDescription">
                <string name="cffHinting" object="[flash.text.engine.FontDescription]" text=".cffHinting" tiptext="The type of CFF hinting used for this text." version="" playername="" helpurl="flash.text.engine:FontDescription:cffHinting:get"/>
                <string name="fontLookup" object="[flash.text.engine.FontDescription]" text=".fontLookup" tiptext="Specifies how the font should be looked up." version="" playername="" helpurl="flash.text.engine:FontDescription:fontLookup:get"/>
                <string name="fontName" object="[flash.text.engine.FontDescription]" text=".fontName" tiptext="The name of the font to use, or a comma-separated list of font names." version="" playername="" helpurl="flash.text.engine:FontDescription:fontName:get"/>
                <string name="fontPosture" object="[flash.text.engine.FontDescription]" text=".fontPosture" tiptext="Specifies the font posture." version="" playername="" helpurl="flash.text.engine:FontDescription:fontPosture:get"/>
                <string name="fontWeight" object="[flash.text.engine.FontDescription]" text=".fontWeight" tiptext="Specifies the font weight." version="" playername="" helpurl="flash.text.engine:FontDescription:fontWeight:get"/>
                <string name="locked" object="[flash.text.engine.FontDescription]" text=".locked" tiptext="Indicates whether or not the FontDescription is locked." version="" playername="" helpurl="flash.text.engine:FontDescription:locked:get"/>
                <string name="renderingMode" object="[flash.text.engine.FontDescription]" text=".renderingMode" tiptext="The rendering mode used for this text." version="" playername="" helpurl="flash.text.engine:FontDescription:renderingMode:get"/>
            </folder>
        </folder>
        <folder name="FontLookup" id="[flash.text.engine.FontLookup]" sort="true" index="true" asAncestors="Object" tiptext="The FontLookup class is an enumeration of constant values used with FontDescription.fontLookup." helpurl="flash.text.engine:FontLookup">
            <folder name="Properties" id="Properties" tiptext="Properties for class FontLookup" helpurl="flash.text.engine:FontLookup">
                <string name="DEVICE" object="[flash.text.engine.FontLookup]" text="FontLookup.DEVICE" constant="true" tiptext="Used to indicate device font lookup." version="" playername="" helpurl="flash.text.engine:FontLookup:DEVICE"/>
                <string name="EMBEDDED_CFF" object="[flash.text.engine.FontLookup]" text="FontLookup.EMBEDDED_CFF" constant="true" tiptext="Used to indicate embedded CFF (Compact Font Format) font lookup." version="" playername="" helpurl="flash.text.engine:FontLookup:EMBEDDED_CFF"/>
            </folder>
        </folder>
        <folder name="FontMetrics" id="[flash.text.engine.FontMetrics]" sort="true" index="true" asAncestors="Object" tiptext="The FontMetrics class contains measurement and offset information about a font." helpurl="flash.text.engine:FontMetrics">
            <folder name="Methods" id="Methods" tiptext="Methods for class FontMetrics" helpurl="flash.text.engine:FontMetrics">
                <string name="FontMetrics" object="[flash.text.engine.FontMetrics]" text="new FontMetrics(%emBox:flash.geom:Rectangle,strikethroughOffset:Number,strikethroughThickness:Number,underlineOffset:Number,underlineThickness:Number,subscriptOffset:Number,subscriptScale:Number,superscriptOffset:Number,superscriptScale:Number%)" constructor="true" tiptext="Creates a FontMetrics object." version="4" playername="" helpurl="flash.text.engine:FontMetrics:FontMetrics"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class FontMetrics" helpurl="flash.text.engine:FontMetrics">
                <string name="emBox" object="[flash.text.engine.FontMetrics]" text=".emBox" tiptext="The emBox value represents the design space of the font and is used to place Chinese, Korean, or Japanese glyphs relative to the Roman baseline." version="" playername="" helpurl="flash.text.engine:FontMetrics:emBox"/>
                <string name="strikethroughOffset" object="[flash.text.engine.FontMetrics]" text=".strikethroughOffset" tiptext="The strikethroughOffset value is the suggested vertical offset from the Roman baseline for a strikethrough." version="" playername="" helpurl="flash.text.engine:FontMetrics:strikethroughOffset"/>
                <string name="strikethroughThickness" object="[flash.text.engine.FontMetrics]" text=".strikethroughThickness" tiptext="The strikethroughThickness value is the suggested thickness for a strikethrough." version="" playername="" helpurl="flash.text.engine:FontMetrics:strikethroughThickness"/>
                <string name="subscriptOffset" object="[flash.text.engine.FontMetrics]" text=".subscriptOffset" tiptext="The subscriptOffset value is the suggested vertical offset from the Roman baseline for a subscript." version="" playername="" helpurl="flash.text.engine:FontMetrics:subscriptOffset"/>
                <string name="subscriptScale" object="[flash.text.engine.FontMetrics]" text=".subscriptScale" tiptext="The subscriptScale value is the suggested scale factor to apply to the point size for a subscript." version="" playername="" helpurl="flash.text.engine:FontMetrics:subscriptScale"/>
                <string name="superscriptOffset" object="[flash.text.engine.FontMetrics]" text=".superscriptOffset" tiptext="The superscriptOffset value is the suggested vertical offset from the Roman baseline for a superscript." version="" playername="" helpurl="flash.text.engine:FontMetrics:superscriptOffset"/>
                <string name="superscriptScale" object="[flash.text.engine.FontMetrics]" text=".superscriptScale" tiptext="The superscriptScale value is the suggested scale factor to apply to the point size for a superscript." version="" playername="" helpurl="flash.text.engine:FontMetrics:superscriptScale"/>
                <string name="underlineOffset" object="[flash.text.engine.FontMetrics]" text=".underlineOffset" tiptext="The underlineOffset value is the suggested vertical offset from the Roman baseline for an underline." version="" playername="" helpurl="flash.text.engine:FontMetrics:underlineOffset"/>
                <string name="underlineThickness" object="[flash.text.engine.FontMetrics]" text=".underlineThickness" tiptext="The underlineThickness value is the suggested thickness for an underline." version="" playername="" helpurl="flash.text.engine:FontMetrics:underlineThickness"/>
            </folder>
        </folder>
        <folder name="FontPosture" id="[flash.text.engine.FontPosture]" sort="true" index="true" asAncestors="Object" tiptext="The FontPosture class is an enumeration of constant values used with FontDescription.fontPosture toset text to italic or normal." helpurl="flash.text.engine:FontPosture">
            <folder name="Properties" id="Properties" tiptext="Properties for class FontPosture" helpurl="flash.text.engine:FontPosture">
                <string name="ITALIC" object="[flash.text.engine.FontPosture]" text="FontPosture.ITALIC" constant="true" tiptext="Used to indicate italic font posture." version="" playername="" helpurl="flash.text.engine:FontPosture:ITALIC"/>
                <string name="NORMAL" object="[flash.text.engine.FontPosture]" text="FontPosture.NORMAL" constant="true" tiptext="Used to indicate normal font posture." version="" playername="" helpurl="flash.text.engine:FontPosture:NORMAL"/>
            </folder>
        </folder>
        <folder name="FontWeight" id="[flash.text.engine.FontWeight]" sort="true" index="true" asAncestors="Object" tiptext="The FontWeight class is an enumeration of constant values used with FontDescription.fontWeight." helpurl="flash.text.engine:FontWeight">
            <folder name="Properties" id="Properties" tiptext="Properties for class FontWeight" helpurl="flash.text.engine:FontWeight">
                <string name="BOLD" object="[flash.text.engine.FontWeight]" text="FontWeight.BOLD" constant="true" tiptext="Used to indicate bold font weight." version="" playername="" helpurl="flash.text.engine:FontWeight:BOLD"/>
                <string name="NORMAL" object="[flash.text.engine.FontWeight]" text="FontWeight.NORMAL" constant="true" tiptext="Used to indicate normal font weight." version="" playername="" helpurl="flash.text.engine:FontWeight:NORMAL"/>
            </folder>
        </folder>
        <folder name="GraphicElement" id="[flash.text.engine.GraphicElement]" sort="true" index="true" asAncestors="flash.text.engine:ContentElement,Object" tiptext="The GraphicElement class represents a graphic element in a TextBlock or GroupElement object." helpurl="flash.text.engine:GraphicElement">
            <folder name="Methods" id="Methods" tiptext="Methods for class GraphicElement" helpurl="flash.text.engine:GraphicElement">
                <string name="GraphicElement" object="[flash.text.engine.GraphicElement]" text="new GraphicElement(%[graphic:flash.display:DisplayObject=null,elementWidth:Number=15.0,elementHeight:Number=15.0,elementFormat:flash.text.engine:ElementFormat=null,eventMirror:flash.events:EventDispatcher=null,textRotation:String=rotate0]%)" constructor="true" tiptext="Creates a new GraphicElement instance." version="4" playername="" helpurl="flash.text.engine:GraphicElement:GraphicElement"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class GraphicElement" helpurl="flash.text.engine:GraphicElement">
                <string name="elementHeight" object="[flash.text.engine.GraphicElement]" text=".elementHeight" tiptext="The height in pixels to reserve for the graphic in the line." version="" playername="" helpurl="flash.text.engine:GraphicElement:elementHeight:get"/>
                <string name="elementWidth" object="[flash.text.engine.GraphicElement]" text=".elementWidth" tiptext="The width in pixels to reserve for the graphic in the line." version="" playername="" helpurl="flash.text.engine:GraphicElement:elementWidth:get"/>
                <string name="graphic" object="[flash.text.engine.GraphicElement]" text=".graphic" tiptext="The DisplayObject to be used as a graphic for the GraphicElement." version="" playername="" helpurl="flash.text.engine:GraphicElement:graphic:get"/>
            </folder>
        </folder>
        <folder name="GroupElement" id="[flash.text.engine.GroupElement]" sort="true" index="true" asAncestors="flash.text.engine:ContentElement,Object" tiptext="A GroupElement object groups a collection of TextElement, GraphicElement, or other GroupElement objects that you can assign as a unit to the content property of a TextBlock object." helpurl="flash.text.engine:GroupElement">
            <folder name="Methods" id="Methods" tiptext="Methods for class GroupElement" helpurl="flash.text.engine:GroupElement">
                <string name="GroupElement" object="[flash.text.engine.GroupElement]" text="new GroupElement(%[elements:Vector$flash.text.engine:ContentElement=null,elementFormat:flash.text.engine:ElementFormat=null,eventMirror:flash.events:EventDispatcher=null,textRotation:String=rotate0]%)" constructor="true" tiptext="Creates a new GroupElement instance." version="4" playername="" helpurl="flash.text.engine:GroupElement:GroupElement"/>
                <string name="getElementAtCharIndex" object="[flash.text.engine.GroupElement]" text=".getElementAtCharIndex(%charIndex:int%):flash.text.engine:ContentElement" tiptext="Returns the element containing the character specified by the charIndex parameter." version="4" playername="" helpurl="flash.text.engine:GroupElement:getElementAtCharIndex"/>
                <string name="getElementAt" object="[flash.text.engine.GroupElement]" text=".getElementAt(%index:int%):flash.text.engine:ContentElement" tiptext="Retrieves an element from within the group." version="4" playername="" helpurl="flash.text.engine:GroupElement:getElementAt"/>
                <string name="getElementIndex" object="[flash.text.engine.GroupElement]" text=".getElementIndex(%element:flash.text.engine:ContentElement%):int" tiptext="Returns the index of the element specified by the element parameter." version="4" playername="" helpurl="flash.text.engine:GroupElement:getElementIndex"/>
                <string name="groupElements" object="[flash.text.engine.GroupElement]" text=".groupElements(%beginIndex:int,endIndex:int%):flash.text.engine:GroupElement" tiptext="Replaces the range of elements that the beginIndex and endIndex parameters specify with a new GroupElement containing those elements." version="4" playername="" helpurl="flash.text.engine:GroupElement:groupElements"/>
                <string name="mergeTextElements" object="[flash.text.engine.GroupElement]" text=".mergeTextElements(%beginIndex:int,endIndex:int%):flash.text.engine:TextElement" tiptext="Merges the text from the range of elements that the beginIndex and endIndex parameters specify into the element specified by beginIndex without affecting the format of that element." version="4" playername="" helpurl="flash.text.engine:GroupElement:mergeTextElements"/>
                <string name="replaceElements" object="[flash.text.engine.GroupElement]" text=".replaceElements(%beginIndex:int,endIndex:int,newElements:Vector$flash.text.engine:ContentElement%):Vector$flash.text.engine:ContentElement" tiptext="Replaces the range of elements that the beginIndex and endIndex parameters specify with the contents of the newElements parameter." version="4" playername="" helpurl="flash.text.engine:GroupElement:replaceElements"/>
                <string name="setElements" object="[flash.text.engine.GroupElement]" text=".setElements(%value:Vector$flash.text.engine:ContentElement%):void" tiptext="Sets the elements in the group to the contents of the Vector." version="4" playername="" helpurl="flash.text.engine:GroupElement:setElements"/>
                <string name="splitTextElement" object="[flash.text.engine.GroupElement]" text=".splitTextElement(%elementIndex:int,splitIndex:int%):flash.text.engine:TextElement" tiptext="Splits a TextElement into two, creating a new TextElement at the specified position." version="4" playername="" helpurl="flash.text.engine:GroupElement:splitTextElement"/>
                <string name="ungroupElements" object="[flash.text.engine.GroupElement]" text=".ungroupElements(%groupIndex:int%):void" tiptext="Ungroups the elements in a nested GroupElement that groupIndex specifies within an outer GroupElement object." version="4" playername="" helpurl="flash.text.engine:GroupElement:ungroupElements"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class GroupElement" helpurl="flash.text.engine:GroupElement">
                <string name="elementCount" object="[flash.text.engine.GroupElement]" text=".elementCount" tiptext="The number of elements in the group." version="" playername="" helpurl="flash.text.engine:GroupElement:elementCount:get"/>
            </folder>
        </folder>
        <folder name="JustificationStyle" id="[flash.text.engine.JustificationStyle]" sort="true" index="true" asAncestors="Object" tiptext="The JustificationStyle class is an enumeration of constant values for setting the justificationStyle property of the EastAsianJustifier class." helpurl="flash.text.engine:JustificationStyle">
            <folder name="Properties" id="Properties" tiptext="Properties for class JustificationStyle" helpurl="flash.text.engine:JustificationStyle">
                <string name="PRIORITIZE_LEAST_ADJUSTMENT" object="[flash.text.engine.JustificationStyle]" text="JustificationStyle.PRIORITIZE_LEAST_ADJUSTMENT" constant="true" tiptext="Bases justification on either expanding or compressingthe line, whichever gives a result closest to the desired width." version="" playername="" helpurl="flash.text.engine:JustificationStyle:PRIORITIZE_LEAST_ADJUSTMENT"/>
                <string name="PUSH_IN_KINSOKU" object="[flash.text.engine.JustificationStyle]" text="JustificationStyle.PUSH_IN_KINSOKU" constant="true" tiptext="Bases justification on compressing kinsoku at the end of the line, or expanding it if no kinsoku occurs or if that space is insufficient." version="" playername="" helpurl="flash.text.engine:JustificationStyle:PUSH_IN_KINSOKU"/>
                <string name="PUSH_OUT_ONLY" object="[flash.text.engine.JustificationStyle]" text="JustificationStyle.PUSH_OUT_ONLY" constant="true" tiptext="Bases justification on expanding the line." version="" playername="" helpurl="flash.text.engine:JustificationStyle:PUSH_OUT_ONLY"/>
            </folder>
        </folder>
        <folder name="Kerning" id="[flash.text.engine.Kerning]" sort="true" index="true" asAncestors="Object" tiptext="The Kerning class is an enumeration of constant values used with ElementFormat.kerning." helpurl="flash.text.engine:Kerning">
            <folder name="Properties" id="Properties" tiptext="Properties for class Kerning" helpurl="flash.text.engine:Kerning">
                <string name="AUTO" object="[flash.text.engine.Kerning]" text="Kerning.AUTO" constant="true" tiptext="Used to indicate that kerning is enabled except where inappropriate in Asian typography." version="" playername="" helpurl="flash.text.engine:Kerning:AUTO"/>
                <string name="OFF" object="[flash.text.engine.Kerning]" text="Kerning.OFF" constant="true" tiptext="Used to indicate kerning is disabled." version="" playername="" helpurl="flash.text.engine:Kerning:OFF"/>
                <string name="ON" object="[flash.text.engine.Kerning]" text="Kerning.ON" constant="true" tiptext="Used to indicate kerning is enabled." version="" playername="" helpurl="flash.text.engine:Kerning:ON"/>
            </folder>
        </folder>
        <folder name="LigatureLevel" id="[flash.text.engine.LigatureLevel]" sort="true" index="true" asAncestors="Object" tiptext="The LigatureLevel class is an enumeration of constant values used in setting the ligatureLevel property of the ElementFormat class." helpurl="flash.text.engine:LigatureLevel">
            <folder name="Properties" id="Properties" tiptext="Properties for class LigatureLevel" helpurl="flash.text.engine:LigatureLevel">
                <string name="COMMON" object="[flash.text.engine.LigatureLevel]" text="LigatureLevel.COMMON" constant="true" tiptext="Used to specify common ligatures." version="" playername="" helpurl="flash.text.engine:LigatureLevel:COMMON"/>
                <string name="EXOTIC" object="[flash.text.engine.LigatureLevel]" text="LigatureLevel.EXOTIC" constant="true" tiptext="Used to specify exotic ligatures." version="" playername="" helpurl="flash.text.engine:LigatureLevel:EXOTIC"/>
                <string name="MINIMUM" object="[flash.text.engine.LigatureLevel]" text="LigatureLevel.MINIMUM" constant="true" tiptext="Used to specify minimum ligatures." version="" playername="" helpurl="flash.text.engine:LigatureLevel:MINIMUM"/>
                <string name="NONE" object="[flash.text.engine.LigatureLevel]" text="LigatureLevel.NONE" constant="true" tiptext="Used to specify no ligatures." version="" playername="" helpurl="flash.text.engine:LigatureLevel:NONE"/>
                <string name="UNCOMMON" object="[flash.text.engine.LigatureLevel]" text="LigatureLevel.UNCOMMON" constant="true" tiptext="Used to specify uncommon ligatures." version="" playername="" helpurl="flash.text.engine:LigatureLevel:UNCOMMON"/>
            </folder>
        </folder>
        <folder name="LineJustification" id="[flash.text.engine.LineJustification]" sort="true" index="true" asAncestors="Object" tiptext="The LineJustification class is an enumeration of constant values used in setting the lineJustfication property of the TextJustifier subclasses." helpurl="flash.text.engine:LineJustification">
            <folder name="Properties" id="Properties" tiptext="Properties for class LineJustification" helpurl="flash.text.engine:LineJustification">
                <string name="ALL_BUT_LAST" object="[flash.text.engine.LineJustification]" text="LineJustification.ALL_BUT_LAST" constant="true" tiptext="Justify all but the last line." version="" playername="" helpurl="flash.text.engine:LineJustification:ALL_BUT_LAST"/>
                <string name="ALL_INCLUDING_LAST" object="[flash.text.engine.LineJustification]" text="LineJustification.ALL_INCLUDING_LAST" constant="true" tiptext="Justify all lines." version="" playername="" helpurl="flash.text.engine:LineJustification:ALL_INCLUDING_LAST"/>
                <string name="UNJUSTIFIED" object="[flash.text.engine.LineJustification]" text="LineJustification.UNJUSTIFIED" constant="true" tiptext="Do not justify lines." version="" playername="" helpurl="flash.text.engine:LineJustification:UNJUSTIFIED"/>
            </folder>
        </folder>
        <folder name="RenderingMode" id="[flash.text.engine.RenderingMode]" sort="true" index="true" asAncestors="Object" tiptext="The RenderingMode class provides values for rendering mode in the FontDescription class." helpurl="flash.text.engine:RenderingMode">
            <folder name="Properties" id="Properties" tiptext="Properties for class RenderingMode" helpurl="flash.text.engine:RenderingMode">
                <string name="CFF" object="[flash.text.engine.RenderingMode]" text="RenderingMode.CFF" constant="true" tiptext="Sets rendering mode to CFF (Compact Font Format)." version="" playername="" helpurl="flash.text.engine:RenderingMode:CFF"/>
                <string name="NORMAL" object="[flash.text.engine.RenderingMode]" text="RenderingMode.NORMAL" constant="true" tiptext="Sets rendering mode to the rendering mode that is used in Flash Player 7 and earlier." version="" playername="" helpurl="flash.text.engine:RenderingMode:NORMAL"/>
            </folder>
        </folder>
        <folder name="SpaceJustifier" id="[flash.text.engine.SpaceJustifier]" sort="true" index="true" asAncestors="flash.text.engine:TextJustifier,Object" tiptext="The SpaceJustifier class represents properties that control the justification options for text lines in a text block." helpurl="flash.text.engine:SpaceJustifier">
            <folder name="Methods" id="Methods" tiptext="Methods for class SpaceJustifier" helpurl="flash.text.engine:SpaceJustifier">
                <string name="SpaceJustifier" object="[flash.text.engine.SpaceJustifier]" text="new SpaceJustifier(%[locale:String=en,lineJustification:String=unjustified,letterSpacing:Boolean=false]%)" constructor="true" tiptext="Creates a SpaceJustifier object." version="4" playername="" helpurl="flash.text.engine:SpaceJustifier:SpaceJustifier"/>
                <string name="clone" object="[flash.text.engine.SpaceJustifier]" text=".clone(%%):flash.text.engine:TextJustifier" tiptext="Constructs a cloned copy of the SpaceJustifier." version="4" playername="" helpurl="flash.text.engine:SpaceJustifier:clone"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class SpaceJustifier" helpurl="flash.text.engine:SpaceJustifier">
                <string name="letterSpacing" object="[flash.text.engine.SpaceJustifier]" text=".letterSpacing" tiptext="Specifies whether to use letter spacing during justification." version="" playername="" helpurl="flash.text.engine:SpaceJustifier:letterSpacing:get"/>
                <string name="maximumSpacing" object="[flash.text.engine.SpaceJustifier]" text=".maximumSpacing" tiptext="Specifies the maximum spacing (as a multiplier of the width of a normal space) between words to use during justification." version="" playername="" helpurl="flash.text.engine:SpaceJustifier:maximumSpacing:get"/>
                <string name="minimumSpacing" object="[flash.text.engine.SpaceJustifier]" text=".minimumSpacing" tiptext="Specifies the minimum spacing (as a multiplier of the width of a normal space) between words to use during justification." version="" playername="" helpurl="flash.text.engine:SpaceJustifier:minimumSpacing:get"/>
                <string name="optimumSpacing" object="[flash.text.engine.SpaceJustifier]" text=".optimumSpacing" tiptext="Specifies the optimum spacing (as a multiplier of the width of a normal space) between words to use during justification." version="" playername="" helpurl="flash.text.engine:SpaceJustifier:optimumSpacing:get"/>
            </folder>
        </folder>
        <folder name="TabAlignment" id="[flash.text.engine.TabAlignment]" sort="true" index="true" asAncestors="Object" tiptext="The TabAlignment class is an enumeration of constant values that you can use to set the tabAlignment property of the TabStop class." helpurl="flash.text.engine:TabAlignment">
            <folder name="Properties" id="Properties" tiptext="Properties for class TabAlignment" helpurl="flash.text.engine:TabAlignment">
                <string name="CENTER" object="[flash.text.engine.TabAlignment]" text="TabAlignment.CENTER" constant="true" tiptext="Positions the center of the tabbed text at the tab stop." version="" playername="" helpurl="flash.text.engine:TabAlignment:CENTER"/>
                <string name="DECIMAL" object="[flash.text.engine.TabAlignment]" text="TabAlignment.DECIMAL" constant="true" tiptext="Positions the alignment token of the tabbed text at the tab stop." version="" playername="" helpurl="flash.text.engine:TabAlignment:DECIMAL"/>
                <string name="END" object="[flash.text.engine.TabAlignment]" text="TabAlignment.END" constant="true" tiptext="Positions the end of the tabbed text at the tab stop." version="" playername="" helpurl="flash.text.engine:TabAlignment:END"/>
                <string name="START" object="[flash.text.engine.TabAlignment]" text="TabAlignment.START" constant="true" tiptext="Positions the start of the tabbed text at the tab stop." version="" playername="" helpurl="flash.text.engine:TabAlignment:START"/>
            </folder>
        </folder>
        <folder name="TabStop" id="[flash.text.engine.TabStop]" sort="true" index="true" asAncestors="Object" tiptext="The TabStop class represents the properties of a tab stop in a text block." helpurl="flash.text.engine:TabStop">
            <folder name="Methods" id="Methods" tiptext="Methods for class TabStop" helpurl="flash.text.engine:TabStop">
                <string name="TabStop" object="[flash.text.engine.TabStop]" text="new TabStop(%[alignment:String=start,position:Number=0.0,decimalAlignmentToken:String]%)" constructor="true" tiptext="Creates a new TabStop." version="4" playername="" helpurl="flash.text.engine:TabStop:TabStop"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class TabStop" helpurl="flash.text.engine:TabStop">
                <string name="alignment" object="[flash.text.engine.TabStop]" text=".alignment" tiptext="Specifies the tab alignment for this tab stop." version="" playername="" helpurl="flash.text.engine:TabStop:alignment:get"/>
                <string name="decimalAlignmentToken" object="[flash.text.engine.TabStop]" text=".decimalAlignmentToken" tiptext="Specifies the alignment token to use when you set the alignment property to TabAlignment.DECIMAL." version="" playername="" helpurl="flash.text.engine:TabStop:decimalAlignmentToken:get"/>
                <string name="position" object="[flash.text.engine.TabStop]" text=".position" tiptext="The position of the tab stop, in pixels, relative to the start of the text line." version="" playername="" helpurl="flash.text.engine:TabStop:position:get"/>
            </folder>
        </folder>
        <folder name="TextBaseline" id="[flash.text.engine.TextBaseline]" sort="true" index="true" asAncestors="Object" tiptext="The TextBaseline class is an enumeration of constant values to use in setting the dominantBaseline andalignmentBaseline properties of the ElementFormat class." helpurl="flash.text.engine:TextBaseline">
            <folder name="Properties" id="Properties" tiptext="Properties for class TextBaseline" helpurl="flash.text.engine:TextBaseline">
                <string name="ASCENT" object="[flash.text.engine.TextBaseline]" text="TextBaseline.ASCENT" constant="true" tiptext="Specifies an ascent baseline." version="" playername="" helpurl="flash.text.engine:TextBaseline:ASCENT"/>
                <string name="DESCENT" object="[flash.text.engine.TextBaseline]" text="TextBaseline.DESCENT" constant="true" tiptext="Specifies a descent baseline." version="" playername="" helpurl="flash.text.engine:TextBaseline:DESCENT"/>
                <string name="IDEOGRAPHIC_BOTTOM" object="[flash.text.engine.TextBaseline]" text="TextBaseline.IDEOGRAPHIC_BOTTOM" constant="true" tiptext="Specifies an ideographic bottom baseline." version="" playername="" helpurl="flash.text.engine:TextBaseline:IDEOGRAPHIC_BOTTOM"/>
                <string name="IDEOGRAPHIC_CENTER" object="[flash.text.engine.TextBaseline]" text="TextBaseline.IDEOGRAPHIC_CENTER" constant="true" tiptext="Specifies an ideographic center baseline." version="" playername="" helpurl="flash.text.engine:TextBaseline:IDEOGRAPHIC_CENTER"/>
                <string name="IDEOGRAPHIC_TOP" object="[flash.text.engine.TextBaseline]" text="TextBaseline.IDEOGRAPHIC_TOP" constant="true" tiptext="Specifies an ideographic top baseline." version="" playername="" helpurl="flash.text.engine:TextBaseline:IDEOGRAPHIC_TOP"/>
                <string name="ROMAN" object="[flash.text.engine.TextBaseline]" text="TextBaseline.ROMAN" constant="true" tiptext="Specifies a roman baseline." version="" playername="" helpurl="flash.text.engine:TextBaseline:ROMAN"/>
                <string name="USE_DOMINANT_BASELINE" object="[flash.text.engine.TextBaseline]" text="TextBaseline.USE_DOMINANT_BASELINE" constant="true" tiptext="Specifies that the alignmentBaseline is the same as the dominantBaseline." version="" playername="" helpurl="flash.text.engine:TextBaseline:USE_DOMINANT_BASELINE"/>
            </folder>
        </folder>
        <folder name="TextBlock" id="[flash.text.engine.TextBlock]" sort="true" index="true" asAncestors="Object" tiptext="The TextBlock class is a factory for the creation of TextLine objects, which you can render by placing them on the display list." helpurl="flash.text.engine:TextBlock">
            <folder name="Methods" id="Methods" tiptext="Methods for class TextBlock" helpurl="flash.text.engine:TextBlock">
                <string name="TextBlock" object="[flash.text.engine.TextBlock]" text="new TextBlock(%[content:flash.text.engine:ContentElement=null,tabStops:Vector$flash.text.engine:TabStop=null,textJustifier:flash.text.engine:TextJustifier=null,lineRotation:String=rotate0,baselineZero:String=roman,bidiLevel:int=0,applyNonLinearFontScaling:Boolean=true,baselineFontDescription:flash.text.engine:FontDescription=null,baselineFontSize:Number=12.0]%)" constructor="true" tiptext="Creates a TextBlock object" version="4" playername="" helpurl="flash.text.engine:TextBlock:TextBlock"/>
                <string name="createTextLine" object="[flash.text.engine.TextBlock]" text=".createTextLine(%[previousLine:flash.text.engine:TextLine=null,width:Number=1000000,lineOffset:Number=0.0,fitSomething:Boolean=false]%):flash.text.engine:TextLine" tiptext="Instructs the text block to create a line of text from its content, beginning at the point specified by the previousLine parameter and breaking at the point specified by the width parameter." version="4" playername="" helpurl="flash.text.engine:TextBlock:createTextLine"/>
                <string name="dump" object="[flash.text.engine.TextBlock]" text=".dump(%%):String" tiptext="Dumps the underlying contents of the TextBlock as an XML string." version="1.5" playername="" helpurl="flash.text.engine:TextBlock:dump"/>
                <string name="findNextAtomBoundary" object="[flash.text.engine.TextBlock]" text=".findNextAtomBoundary(%afterCharIndex:int%):int" tiptext="Finds the index of the next atom boundary from the specified character index, not including the character at the specified index." version="4" playername="" helpurl="flash.text.engine:TextBlock:findNextAtomBoundary"/>
                <string name="findNextWordBoundary" object="[flash.text.engine.TextBlock]" text=".findNextWordBoundary(%afterCharIndex:int%):int" tiptext="Finds the index of the next word boundary from the specified character index, not including the character at the specified index." version="4" playername="" helpurl="flash.text.engine:TextBlock:findNextWordBoundary"/>
                <string name="findPreviousAtomBoundary" object="[flash.text.engine.TextBlock]" text=".findPreviousAtomBoundary(%beforeCharIndex:int%):int" tiptext="Finds the index of the previous atom boundary to the specified character index, not including the character at the specified index." version="4" playername="" helpurl="flash.text.engine:TextBlock:findPreviousAtomBoundary"/>
                <string name="findPreviousWordBoundary" object="[flash.text.engine.TextBlock]" text=".findPreviousWordBoundary(%beforeCharIndex:int%):int" tiptext="Finds the index of the previous word boundary to the specified character index, not including the character at the specified index." version="4" playername="" helpurl="flash.text.engine:TextBlock:findPreviousWordBoundary"/>
                <string name="getTextLineAtCharIndex" object="[flash.text.engine.TextBlock]" text=".getTextLineAtCharIndex(%charIndex:int%):flash.text.engine:TextLine" tiptext="Returns the TextLine containing the character specified by the charIndex parameter." version="4" playername="" helpurl="flash.text.engine:TextBlock:getTextLineAtCharIndex"/>
                <string name="recreateTextLine" object="[flash.text.engine.TextBlock]" text=".recreateTextLine(%textLine:flash.text.engine:TextLine[,previousLine:flash.text.engine:TextLine=null,width:Number=1000000,lineOffset:Number=0.0,fitSomething:Boolean=false]%):flash.text.engine:TextLine" tiptext="Instructs the text block to re-use an existing text line to create a line of text from its content, beginning at the point specified by the previousLine parameter and breaking at the point specified by the width parameter." version="4" playername="" helpurl="flash.text.engine:TextBlock:recreateTextLine"/>
                <string name="releaseLineCreationData" object="[flash.text.engine.TextBlock]" text=".releaseLineCreationData(%%):void" tiptext="Instructs the text block to release all the temporary data associated with the creation of text lines." version="4" playername="" helpurl="flash.text.engine:TextBlock:releaseLineCreationData"/>
                <string name="releaseLines" object="[flash.text.engine.TextBlock]" text=".releaseLines(%firstLine:flash.text.engine:TextLine,lastLine:flash.text.engine:TextLine%):void" tiptext="Removes a range of text lines from the list of lines maintained by the TextBlock." version="4" playername="" helpurl="flash.text.engine:TextBlock:releaseLines"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class TextBlock" helpurl="flash.text.engine:TextBlock">
                <string name="userData" object="[flash.text.engine.TextBlock]" text=".userData" tiptext="Provides a way for the application to associate arbitrary data with the text block." version="" playername="" helpurl="flash.text.engine:TextBlock:userData"/>
                <string name="applyNonLinearFontScaling" object="[flash.text.engine.TextBlock]" text=".applyNonLinearFontScaling" tiptext="Specifies that you want to enhance screen appearance at the expense of what-you-see-is-what-you-get (WYSIWYG) print fidelity." version="" playername="" helpurl="flash.text.engine:TextBlock:applyNonLinearFontScaling:get"/>
                <string name="baselineFontDescription" object="[flash.text.engine.TextBlock]" text=".baselineFontDescription" tiptext="The font used to determine the baselines for all the lines created from the block, independent of their content." version="" playername="" helpurl="flash.text.engine:TextBlock:baselineFontDescription:get"/>
                <string name="baselineFontSize" object="[flash.text.engine.TextBlock]" text=".baselineFontSize" tiptext="The font size used to calculate the baselines for the lines created from the block." version="" playername="" helpurl="flash.text.engine:TextBlock:baselineFontSize:get"/>
                <string name="baselineZero" object="[flash.text.engine.TextBlock]" text=".baselineZero" tiptext="Specifies which baseline is at y=0 for lines created from this block." version="" playername="" helpurl="flash.text.engine:TextBlock:baselineZero:get"/>
                <string name="bidiLevel" object="[flash.text.engine.TextBlock]" text=".bidiLevel" tiptext="Specifies the default bidirectional embedding level of the text in the text block." version="" playername="" helpurl="flash.text.engine:TextBlock:bidiLevel:get"/>
                <string name="content" object="[flash.text.engine.TextBlock]" text=".content" tiptext="Holds the contents of the text block." version="" playername="" helpurl="flash.text.engine:TextBlock:content:get"/>
                <string name="firstInvalidLine" object="[flash.text.engine.TextBlock]" text=".firstInvalidLine" tiptext="Identifies the first line in the text block in which TextLine.validity is not equal to TextLineValidity.VALID." version="" playername="" helpurl="flash.text.engine:TextBlock:firstInvalidLine:get"/>
                <string name="firstLine" object="[flash.text.engine.TextBlock]" text=".firstLine" tiptext="The first TextLine in the TextBlock, if any." version="" playername="" helpurl="flash.text.engine:TextBlock:firstLine:get"/>
                <string name="lastLine" object="[flash.text.engine.TextBlock]" text=".lastLine" tiptext="The last TextLine in the TextBlock, if any." version="" playername="" helpurl="flash.text.engine:TextBlock:lastLine:get"/>
                <string name="lineRotation" object="[flash.text.engine.TextBlock]" text=".lineRotation" tiptext="Rotates the text lines in the text block as a unit." version="" playername="" helpurl="flash.text.engine:TextBlock:lineRotation:get"/>
                <string name="tabStops" object="[flash.text.engine.TextBlock]" text=".tabStops" tiptext="Specifies the tab stops for the text in the text block, in the form of a Vector of TabStop objects." version="" playername="" helpurl="flash.text.engine:TextBlock:tabStops:get"/>
                <string name="textJustifier" object="[flash.text.engine.TextBlock]" text=".textJustifier" tiptext="Specifies the TextJustifier to use during line creation." version="" playername="" helpurl="flash.text.engine:TextBlock:textJustifier:get"/>
                <string name="textLineCreationResult" object="[flash.text.engine.TextBlock]" text=".textLineCreationResult" tiptext="Indicates the result of a createTextLine() operation." version="" playername="" helpurl="flash.text.engine:TextBlock:textLineCreationResult:get"/>
            </folder>
        </folder>
        <folder name="TextElement" id="[flash.text.engine.TextElement]" sort="true" index="true" asAncestors="flash.text.engine:ContentElement,Object" tiptext="The TextElement class represents a string of formatted text." helpurl="flash.text.engine:TextElement">
            <folder name="Methods" id="Methods" tiptext="Methods for class TextElement" helpurl="flash.text.engine:TextElement">
                <string name="TextElement" object="[flash.text.engine.TextElement]" text="new TextElement(%[text:String=null,elementFormat:flash.text.engine:ElementFormat=null,eventMirror:flash.events:EventDispatcher=null,textRotation:String=rotate0]%)" constructor="true" tiptext="Creates a new TextElement instance." version="4" playername="" helpurl="flash.text.engine:TextElement:TextElement"/>
                <string name="replaceText" object="[flash.text.engine.TextElement]" text=".replaceText(%beginIndex:int,endIndex:int,newText:String%):void" tiptext="Replaces the range of characters that the beginIndex and endIndex parameters specify with the contents of the newText parameter." version="4" playername="" helpurl="flash.text.engine:TextElement:replaceText"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class TextElement" helpurl="flash.text.engine:TextElement">
                <string name="text" object="[flash.text.engine.TextElement]" text=".text" tiptext="Receives the text that is the content of the element." version="" playername="" helpurl="flash.text.engine:TextElement:text:set"/>
            </folder>
        </folder>
        <folder name="TextJustifier" id="[flash.text.engine.TextJustifier]" sort="true" index="true" asAncestors="Object" tiptext="The TextJustifier class is an abstract base class for the justifier types that you can apply to a TextBlock, specifically the EastAsianJustifier and SpaceJustifier classes." helpurl="flash.text.engine:TextJustifier">
            <folder name="Methods" id="Methods" tiptext="Methods for class TextJustifier" helpurl="flash.text.engine:TextJustifier">
                <string name="TextJustifier" object="[flash.text.engine.TextJustifier]" text="new TextJustifier(%locale:String,lineJustification:String%)" constructor="true" tiptext="Calling the new TextJustifier() constructor throws an ArgumentError exception." version="4" playername="" helpurl="flash.text.engine:TextJustifier:TextJustifier"/>
                <string name="clone" object="[flash.text.engine.TextJustifier]" text=".clone(%%):flash.text.engine:TextJustifier" tiptext="Constructs a cloned copy of the TextJustifier." version="4" playername="" helpurl="flash.text.engine:TextJustifier:clone"/>
                <string name="getJustifierForLocale" object="[flash.text.engine.TextJustifier]" text="TextJustifier.getJustifierForLocale(%locale:String%):flash.text.engine:TextJustifier" static="true" tiptext="Constructs a default TextJustifier subclass appropriate to the specified locale." version="4" playername="" helpurl="flash.text.engine:TextJustifier:getJustifierForLocale"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class TextJustifier" helpurl="flash.text.engine:TextJustifier">
                <string name="lineJustification" object="[flash.text.engine.TextJustifier]" text=".lineJustification" tiptext="Specifies the line justification for the text in a text block." version="" playername="" helpurl="flash.text.engine:TextJustifier:lineJustification:get"/>
                <string name="locale" object="[flash.text.engine.TextJustifier]" text=".locale" tiptext="Specifies the locale to determine the justification rules for the text in a text block." version="" playername="" helpurl="flash.text.engine:TextJustifier:locale:get"/>
            </folder>
        </folder>
        <folder name="TextLine" id="[flash.text.engine.TextLine]" sort="true" index="true" asAncestors="flash.display:DisplayObjectContainer,flash.display:InteractiveObject,flash.display:DisplayObject,flash.events:EventDispatcher,Object" tiptext="The TextLine class is used to display text on the display list." helpurl="flash.text.engine:TextLine">
            <folder name="Methods" id="Methods" tiptext="Methods for class TextLine" helpurl="flash.text.engine:TextLine">
                <string name="dump" object="[flash.text.engine.TextLine]" text=".dump(%%):String" tiptext="Dumps the underlying contents of the TextLine as an XML string." version="1.5" playername="" helpurl="flash.text.engine:TextLine:dump"/>
                <string name="getAtomBidiLevel" object="[flash.text.engine.TextLine]" text=".getAtomBidiLevel(%atomIndex:int%):int" tiptext="Gets the bidirectional level of the atom at the specified index." version="4" playername="" helpurl="flash.text.engine:TextLine:getAtomBidiLevel"/>
                <string name="getAtomBounds" object="[flash.text.engine.TextLine]" text=".getAtomBounds(%atomIndex:int%):flash.geom:Rectangle" tiptext="Gets the bounds of the atom at the specified index relative to the text line." version="4" playername="" helpurl="flash.text.engine:TextLine:getAtomBounds"/>
                <string name="getAtomCenter" object="[flash.text.engine.TextLine]" text=".getAtomCenter(%atomIndex:int%):Number" tiptext="Gets the center of the atom as measured along the baseline at the specified index." version="4" playername="" helpurl="flash.text.engine:TextLine:getAtomCenter"/>
                <string name="getAtomGraphic" object="[flash.text.engine.TextLine]" text=".getAtomGraphic(%atomIndex:int%):flash.display:DisplayObject" tiptext="Gets the graphic of the atom at the specified index, or null if the atom is a character." version="4" playername="" helpurl="flash.text.engine:TextLine:getAtomGraphic"/>
                <string name="getAtomIndexAtCharIndex" object="[flash.text.engine.TextLine]" text=".getAtomIndexAtCharIndex(%charIndex:int%):int" tiptext="Returns the index of the atom containing the character specified by the charIndex parameter, or -1 if the character does not contribute to any atom in the line." version="4" playername="" helpurl="flash.text.engine:TextLine:getAtomIndexAtCharIndex"/>
                <string name="getAtomIndexAtPoint" object="[flash.text.engine.TextLine]" text=".getAtomIndexAtPoint(%stageX:Number,stageY:Number%):int" tiptext="Returns the index of the atom at the point specified by the x and y parameters, or -1 if no atom exists at that point." version="4" playername="" helpurl="flash.text.engine:TextLine:getAtomIndexAtPoint"/>
                <string name="getAtomTextBlockBeginIndex" object="[flash.text.engine.TextLine]" text=".getAtomTextBlockBeginIndex(%atomIndex:int%):int" tiptext="Gets the text block begin index of the atom at the specified index." version="4" playername="" helpurl="flash.text.engine:TextLine:getAtomTextBlockBeginIndex"/>
                <string name="getAtomTextBlockEndIndex" object="[flash.text.engine.TextLine]" text=".getAtomTextBlockEndIndex(%atomIndex:int%):int" tiptext="Gets the text block end index of the atom at the specified index." version="4" playername="" helpurl="flash.text.engine:TextLine:getAtomTextBlockEndIndex"/>
                <string name="getAtomTextRotation" object="[flash.text.engine.TextLine]" text=".getAtomTextRotation(%atomIndex:int%):String" tiptext="Gets the rotation of the atom at the specified index." version="4" playername="" helpurl="flash.text.engine:TextLine:getAtomTextRotation"/>
                <string name="getAtomWordBoundaryOnLeft" object="[flash.text.engine.TextLine]" text=".getAtomWordBoundaryOnLeft(%atomIndex:int%):Boolean" tiptext="Indicates whether a word boundary occurs to the left of the atom at the specified index." version="4" playername="" helpurl="flash.text.engine:TextLine:getAtomWordBoundaryOnLeft"/>
                <string name="getBaselinePosition" object="[flash.text.engine.TextLine]" text=".getBaselinePosition(%baseline:String%):Number" tiptext="Gets the position of the specified baseline, relative to TextBlock.baselineZero." version="4" playername="" helpurl="flash.text.engine:TextLine:getBaselinePosition"/>
                <string name="getMirrorRegion" object="[flash.text.engine.TextLine]" text=".getMirrorRegion(%mirror:flash.events:EventDispatcher%):flash.text.engine:TextLineMirrorRegion" tiptext="Returns the first TextLineMirrorRegion on the line whose mirror property matches that specified by the mirror parameter, or null if no match exists." version="4" playername="" helpurl="flash.text.engine:TextLine:getMirrorRegion"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class TextLine" helpurl="flash.text.engine:TextLine">
                <string name="MAX_LINE_WIDTH" object="[flash.text.engine.TextLine]" text="TextLine.MAX_LINE_WIDTH" constant="true" tiptext="The maximum requested width of a text line, in pixels." version="" playername="" helpurl="flash.text.engine:TextLine:MAX_LINE_WIDTH"/>
                <string name="userData" object="[flash.text.engine.TextLine]" text=".userData" tiptext="Provides a way for the application to associate arbitrary data with the text line." version="" playername="" helpurl="flash.text.engine:TextLine:userData"/>
                <string name="ascent" object="[flash.text.engine.TextLine]" text=".ascent" tiptext="Specifies the number of pixels from the baseline to the top of the tallest characters in the line." version="" playername="" helpurl="flash.text.engine:TextLine:ascent:get"/>
                <string name="atomCount" object="[flash.text.engine.TextLine]" text=".atomCount" tiptext="The number of atoms in the line, which is the number of indivisible elements, including spaces and graphic elements." version="" playername="" helpurl="flash.text.engine:TextLine:atomCount:get"/>
                <string name="descent" object="[flash.text.engine.TextLine]" text=".descent" tiptext="Specifies the number of pixels from the baseline to the bottom of the lowest-descending characters in the line." version="" playername="" helpurl="flash.text.engine:TextLine:descent:get"/>
                <string name="hasGraphicElement" object="[flash.text.engine.TextLine]" text=".hasGraphicElement" tiptext="Indicates whether the text line contains any graphic elements." version="" playername="" helpurl="flash.text.engine:TextLine:hasGraphicElement:get"/>
                <string name="hasTabs" object="[flash.text.engine.TextLine]" text=".hasTabs" tiptext="Indicates whether the text line contains any tabs." version="" playername="" helpurl="flash.text.engine:TextLine:hasTabs:get"/>
                <string name="mirrorRegions" object="[flash.text.engine.TextLine]" text=".mirrorRegions" tiptext="A Vector containing the TextLineMirrorRegion objects associated with the line, or null if none exist." version="" playername="" helpurl="flash.text.engine:TextLine:mirrorRegions:get"/>
                <string name="nextLine" object="[flash.text.engine.TextLine]" text=".nextLine" tiptext="The next TextLine in the TextBlock, or null if the current line is the last line in the block or the validity of the line is TextLineValidity.STATIC." version="" playername="" helpurl="flash.text.engine:TextLine:nextLine:get"/>
                <string name="previousLine" object="[flash.text.engine.TextLine]" text=".previousLine" tiptext="The previous TextLine in the TextBlock, or null if the line is the first line in the block or the validity of the line is TextLineValidity.STATIC." version="" playername="" helpurl="flash.text.engine:TextLine:previousLine:get"/>
                <string name="rawTextLength" object="[flash.text.engine.TextLine]" text=".rawTextLength" tiptext="The length of the raw text in the text block that became the line, including the U+FDEF characters representing graphic elements and any trailing spaces, which are part of the line but not are displayed." version="" playername="" helpurl="flash.text.engine:TextLine:rawTextLength:get"/>
                <string name="specifiedWidth" object="[flash.text.engine.TextLine]" text=".specifiedWidth" tiptext="The width that was specified to the TextBlock.createTextLine() method when it created the line." version="" playername="" helpurl="flash.text.engine:TextLine:specifiedWidth:get"/>
                <string name="textBlockBeginIndex" object="[flash.text.engine.TextLine]" text=".textBlockBeginIndex" tiptext="The index of the first character of the line in the raw text of the text block." version="" playername="" helpurl="flash.text.engine:TextLine:textBlockBeginIndex:get"/>
                <string name="textBlock" object="[flash.text.engine.TextLine]" text=".textBlock" tiptext="The TextBlock containing this text line, or null if the validity of the line is TextLineValidity.STATIC, meaning that the connection between the line and the TextBlock has been severed." version="" playername="" helpurl="flash.text.engine:TextLine:textBlock:get"/>
                <string name="textHeight" object="[flash.text.engine.TextLine]" text=".textHeight" tiptext="The logical height of the text line, which is equal to ascent + descent." version="" playername="" helpurl="flash.text.engine:TextLine:textHeight:get"/>
                <string name="textWidth" object="[flash.text.engine.TextLine]" text=".textWidth" tiptext="The logical width of the text line, which is the width that the text engine uses to lay out the line." version="" playername="" helpurl="flash.text.engine:TextLine:textWidth:get"/>
                <string name="totalAscent" object="[flash.text.engine.TextLine]" text=".totalAscent" tiptext="Specifies the number of pixels from the baseline to the top of the tallest character or graphic in the line." version="" playername="" helpurl="flash.text.engine:TextLine:totalAscent:get"/>
                <string name="totalDescent" object="[flash.text.engine.TextLine]" text=".totalDescent" tiptext="Specifies the number of pixels from the baseline to the bottom of the lowest-descending character or graphic in the line." version="" playername="" helpurl="flash.text.engine:TextLine:totalDescent:get"/>
                <string name="totalHeight" object="[flash.text.engine.TextLine]" text=".totalHeight" tiptext="The total logical height of the text line, which is equal to totalAscent + totalDescent." version="" playername="" helpurl="flash.text.engine:TextLine:totalHeight:get"/>
                <string name="unjustifiedTextWidth" object="[flash.text.engine.TextLine]" text=".unjustifiedTextWidth" tiptext="The width of the line if it was not justified." version="" playername="" helpurl="flash.text.engine:TextLine:unjustifiedTextWidth:get"/>
                <string name="validity" object="[flash.text.engine.TextLine]" text=".validity" tiptext="Specifies the current validity of the text line." version="" playername="" helpurl="flash.text.engine:TextLine:validity:get"/>
            </folder>
        </folder>
        <folder name="TextLineCreationResult" id="[flash.text.engine.TextLineCreationResult]" sort="true" index="true" asAncestors="Object" tiptext="The TextLineCreationResult class is an enumeration of constant values used with TextBlock.textLineCreationResult." helpurl="flash.text.engine:TextLineCreationResult">
            <folder name="Properties" id="Properties" tiptext="Properties for class TextLineCreationResult" helpurl="flash.text.engine:TextLineCreationResult">
                <string name="COMPLETE" object="[flash.text.engine.TextLineCreationResult]" text="TextLineCreationResult.COMPLETE" constant="true" tiptext="Indicates no line was created because all text in the block had already been broken." version="" playername="" helpurl="flash.text.engine:TextLineCreationResult:COMPLETE"/>
                <string name="EMERGENCY" object="[flash.text.engine.TextLineCreationResult]" text="TextLineCreationResult.EMERGENCY" constant="true" tiptext="Indicates the line was created with an emergency break because no break opportunitywas available in the specified width." version="" playername="" helpurl="flash.text.engine:TextLineCreationResult:EMERGENCY"/>
                <string name="INSUFFICIENT_WIDTH" object="[flash.text.engine.TextLineCreationResult]" text="TextLineCreationResult.INSUFFICIENT_WIDTH" constant="true" tiptext="Indicates no line was created because no text could fit in the specified widthand fitSomething was not specified in the call to createTextLine()." version="" playername="" helpurl="flash.text.engine:TextLineCreationResult:INSUFFICIENT_WIDTH"/>
                <string name="SUCCESS" object="[flash.text.engine.TextLineCreationResult]" text="TextLineCreationResult.SUCCESS" constant="true" tiptext="Indicates the line was successfully broken." version="" playername="" helpurl="flash.text.engine:TextLineCreationResult:SUCCESS"/>
            </folder>
        </folder>
        <folder name="TextLineMirrorRegion" id="[flash.text.engine.TextLineMirrorRegion]" sort="true" index="true" asAncestors="Object" tiptext="The TextLineMirrorRegion class represents a portion of a text line wherein events are mirrored to another event dispatcher." helpurl="flash.text.engine:TextLineMirrorRegion">
            <folder name="Properties" id="Properties" tiptext="Properties for class TextLineMirrorRegion" helpurl="flash.text.engine:TextLineMirrorRegion">
                <string name="bounds" object="[flash.text.engine.TextLineMirrorRegion]" text=".bounds" tiptext="The bounds of the mirror region, relative to the text line." version="" playername="" helpurl="flash.text.engine:TextLineMirrorRegion:bounds:get"/>
                <string name="element" object="[flash.text.engine.TextLineMirrorRegion]" text=".element" tiptext="The ContentElement object from which the mirror region was derived." version="" playername="" helpurl="flash.text.engine:TextLineMirrorRegion:element:get"/>
                <string name="mirror" object="[flash.text.engine.TextLineMirrorRegion]" text=".mirror" tiptext="The EventDispatcher object to which events affecting the mirror region are mirrored." version="" playername="" helpurl="flash.text.engine:TextLineMirrorRegion:mirror:get"/>
                <string name="nextRegion" object="[flash.text.engine.TextLineMirrorRegion]" text=".nextRegion" tiptext="The next TextLineMirrorRegion in the set derived from the text element, or null if the current region is the last mirror region in the set." version="" playername="" helpurl="flash.text.engine:TextLineMirrorRegion:nextRegion:get"/>
                <string name="previousRegion" object="[flash.text.engine.TextLineMirrorRegion]" text=".previousRegion" tiptext="The previous TextLineMirrorRegion in the set derived from the text element, or null if the current region is the first mirror region in the set." version="" playername="" helpurl="flash.text.engine:TextLineMirrorRegion:previousRegion:get"/>
                <string name="textLine" object="[flash.text.engine.TextLineMirrorRegion]" text=".textLine" tiptext="The TextLine containing this mirror region." version="" playername="" helpurl="flash.text.engine:TextLineMirrorRegion:textLine:get"/>
            </folder>
        </folder>
        <folder name="TextLineValidity" id="[flash.text.engine.TextLineValidity]" sort="true" index="true" asAncestors="Object" tiptext="The TextLineValidity class is an enumeration of constant values for setting the validity property of the TextLine class." helpurl="flash.text.engine:TextLineValidity">
            <folder name="Properties" id="Properties" tiptext="Properties for class TextLineValidity" helpurl="flash.text.engine:TextLineValidity">
                <string name="INVALID" object="[flash.text.engine.TextLineValidity]" text="TextLineValidity.INVALID" constant="true" tiptext="Specifies that the line is invalid." version="" playername="" helpurl="flash.text.engine:TextLineValidity:INVALID"/>
                <string name="POSSIBLY_INVALID" object="[flash.text.engine.TextLineValidity]" text="TextLineValidity.POSSIBLY_INVALID" constant="true" tiptext="Specifies that the text line is possibly invalid." version="" playername="" helpurl="flash.text.engine:TextLineValidity:POSSIBLY_INVALID"/>
                <string name="STATIC" object="[flash.text.engine.TextLineValidity]" text="TextLineValidity.STATIC" constant="true" tiptext="Specifies that the line is static, and that the connection between the line and the text block has been severed." version="" playername="" helpurl="flash.text.engine:TextLineValidity:STATIC"/>
                <string name="VALID" object="[flash.text.engine.TextLineValidity]" text="TextLineValidity.VALID" constant="true" tiptext="Specifies that the text line is valid." version="" playername="" helpurl="flash.text.engine:TextLineValidity:VALID"/>
            </folder>
        </folder>
        <folder name="TextRotation" id="[flash.text.engine.TextRotation]" sort="true" index="true" asAncestors="Object" tiptext="The TextRotation class is an enumeration of constant values used with the following properties:ElementFormat.textRotation, ContentElement.textRotation,TextBlock.lineRotation, and TextLine.getAtomTextRotation()." helpurl="flash.text.engine:TextRotation">
            <folder name="Properties" id="Properties" tiptext="Properties for class TextRotation" helpurl="flash.text.engine:TextRotation">
                <string name="AUTO" object="[flash.text.engine.TextRotation]" text="TextRotation.AUTO" constant="true" tiptext="Specifies a 90 degree counter clockwise rotation for full width and wide glyphs only,as determined by the Unicode properties of the glyph." version="" playername="" helpurl="flash.text.engine:TextRotation:AUTO"/>
                <string name="ROTATE_0" object="[flash.text.engine.TextRotation]" text="TextRotation.ROTATE_0" constant="true" tiptext="Specifies no rotation." version="" playername="" helpurl="flash.text.engine:TextRotation:ROTATE_0"/>
                <string name="ROTATE_180" object="[flash.text.engine.TextRotation]" text="TextRotation.ROTATE_180" constant="true" tiptext="Specifies a 180 degree rotation." version="" playername="" helpurl="flash.text.engine:TextRotation:ROTATE_180"/>
                <string name="ROTATE_270" object="[flash.text.engine.TextRotation]" text="TextRotation.ROTATE_270" constant="true" tiptext="Specifies a 270 degree clockwise rotation." version="" playername="" helpurl="flash.text.engine:TextRotation:ROTATE_270"/>
                <string name="ROTATE_90" object="[flash.text.engine.TextRotation]" text="TextRotation.ROTATE_90" constant="true" tiptext="Specifies a 90 degree clockwise rotation." version="" playername="" helpurl="flash.text.engine:TextRotation:ROTATE_90"/>
            </folder>
        </folder>
        <folder name="TypographicCase" id="[flash.text.engine.TypographicCase]" sort="true" index="true" asAncestors="Object" tiptext="The TypographicCase class is an enumeration of constant values for setting the typographicCase property of the ElementFormat class." helpurl="flash.text.engine:TypographicCase">
            <folder name="Properties" id="Properties" tiptext="Properties for class TypographicCase" helpurl="flash.text.engine:TypographicCase">
                <string name="CAPS_AND_SMALL_CAPS" object="[flash.text.engine.TypographicCase]" text="TypographicCase.CAPS_AND_SMALL_CAPS" constant="true" tiptext="Specifies that all lowercase characters use small-caps glyphs on output." version="" playername="" helpurl="flash.text.engine:TypographicCase:CAPS_AND_SMALL_CAPS"/>
                <string name="CAPS" object="[flash.text.engine.TypographicCase]" text="TypographicCase.CAPS" constant="true" tiptext="Specifies that spacing is adjusted for uppercase characters on output." version="" playername="" helpurl="flash.text.engine:TypographicCase:CAPS"/>
                <string name="DEFAULT" object="[flash.text.engine.TypographicCase]" text="TypographicCase.DEFAULT" constant="true" tiptext="Specifies default typographic case." version="" playername="" helpurl="flash.text.engine:TypographicCase:DEFAULT"/>
                <string name="LOWERCASE" object="[flash.text.engine.TypographicCase]" text="TypographicCase.LOWERCASE" constant="true" tiptext="Specifies that all characters use lowercase glyphs on output." version="" playername="" helpurl="flash.text.engine:TypographicCase:LOWERCASE"/>
                <string name="SMALL_CAPS" object="[flash.text.engine.TypographicCase]" text="TypographicCase.SMALL_CAPS" constant="true" tiptext="Specifies that uppercase characters use small-caps glyphs on output." version="" playername="" helpurl="flash.text.engine:TypographicCase:SMALL_CAPS"/>
                <string name="TITLE" object="[flash.text.engine.TypographicCase]" text="TypographicCase.TITLE" constant="true" tiptext="Specifies that uppercase characters use title glyphs on output." version="" playername="" helpurl="flash.text.engine:TypographicCase:TITLE"/>
                <string name="UPPERCASE" object="[flash.text.engine.TypographicCase]" text="TypographicCase.UPPERCASE" constant="true" tiptext="Specifies that all characters use uppercase glyphs on output." version="" playername="" helpurl="flash.text.engine:TypographicCase:UPPERCASE"/>
            </folder>
        </folder>
    </folder>
        <folder name="flash.text.ime" id="flash.text.ime" sort="true" tiptext="Classes for package flash.text.ime" helpurl="flash.text.ime">
        <folder name="CompositionAttributeRange" id="[flash.text.ime.CompositionAttributeRange]" sort="true" index="true" asAncestors="Object" tiptext="The CompositionAttributeRange class represents a range of composition attributes for use with IME (input method editor) events." helpurl="flash.text.ime:CompositionAttributeRange">
            <folder name="Methods" id="Methods" tiptext="Methods for class CompositionAttributeRange" helpurl="flash.text.ime:CompositionAttributeRange">
                <string name="CompositionAttributeRange" object="[flash.text.ime.CompositionAttributeRange]" text="new CompositionAttributeRange(%relativeStart:int,relativeEnd:int,selected:Boolean,converted:Boolean%):void" constructor="true" tiptext="Constructor for CompositionAttributeRange objects." version="2" playername="" helpurl="flash.text.ime:CompositionAttributeRange:CompositionAttributeRange"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class CompositionAttributeRange" helpurl="flash.text.ime:CompositionAttributeRange">
                <string name="converted" object="[flash.text.ime.CompositionAttributeRange]" text=".converted" tiptext="A property defining the current clause has been processed by the IME and the clause is waiting to be accepted or confirmed by the user." version="" playername="" helpurl="flash.text.ime:CompositionAttributeRange:converted"/>
                <string name="relativeEnd" object="[flash.text.ime.CompositionAttributeRange]" text=".relativeEnd" tiptext="The position of the end of the composition clause, relative to the beginning of the inline edit session." version="" playername="" helpurl="flash.text.ime:CompositionAttributeRange:relativeEnd"/>
                <string name="relativeStart" object="[flash.text.ime.CompositionAttributeRange]" text=".relativeStart" tiptext="The relative start position from the beginning of the current inline editing session." version="" playername="" helpurl="flash.text.ime:CompositionAttributeRange:relativeStart"/>
                <string name="selected" object="[flash.text.ime.CompositionAttributeRange]" text=".selected" tiptext="A property defining the current composition clause is active and lengthened or shortened or edited with the IME while the neighboring clauses are not changing." version="" playername="" helpurl="flash.text.ime:CompositionAttributeRange:selected"/>
            </folder>
        </folder>
        <folder name="IIMEClient" id="[flash.text.ime.IIMEClient]" sort="true" index="true" tiptext="Interface for IME (input method editor) clients." helpurl="flash.text.ime:IIMEClient">
            <folder name="Methods" id="Methods" tiptext="Methods for class IIMEClient" helpurl="flash.text.ime:IIMEClient">
                <string name="confirmComposition" object="[flash.text.ime.IIMEClient]" text=".confirmComposition(%[text:String=null,preserveSelection:Boolean=false]%):void" tiptext="Use this callback to end the inline editing session and confirm the text." version="2" playername="" helpurl="flash.text.ime:IIMEClient:confirmComposition"/>
                <string name="getTextBounds" object="[flash.text.ime.IIMEClient]" text=".getTextBounds(%startIndex:int,endIndex:int%):flash.geom:Rectangle" tiptext="The IME uses this method to query the bounding box of the text currently edited with the IME client." version="2" playername="" helpurl="flash.text.ime:IIMEClient:getTextBounds"/>
                <string name="getTextInRange" object="[flash.text.ime.IIMEClient]" text=".getTextInRange(%startIndex:int,endIndex:int%):String" tiptext="Gets the specified range of text from the component." version="2" playername="" helpurl="flash.text.ime:IIMEClient:getTextInRange"/>
                <string name="selectRange" object="[flash.text.ime.IIMEClient]" text=".selectRange(%anchorIndex:int,activeIndex:int%):void" tiptext="Sets the range of selected text in the component." version="2" playername="" helpurl="flash.text.ime:IIMEClient:selectRange"/>
                <string name="updateComposition" object="[flash.text.ime.IIMEClient]" text=".updateComposition(%text:String,attributes:Vector$flash.text.ime:CompositionAttributeRange,compositionStartIndex:int,compositionEndIndex:int%):void" tiptext="Callback for updating the contents of the inline editing session." version="2" playername="" helpurl="flash.text.ime:IIMEClient:updateComposition"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class IIMEClient" helpurl="flash.text.ime:IIMEClient">
                <string name="compositionEndIndex" object="[flash.text.ime.IIMEClient]" text=".compositionEndIndex" tiptext="The zero-based character index value of the end of the current edit session text (such as all text in the inline session that is not confirmed to the document)." version="" playername="" helpurl="flash.text.ime:IIMEClient:compositionEndIndex:get"/>
                <string name="compositionStartIndex" object="[flash.text.ime.IIMEClient]" text=".compositionStartIndex" tiptext="The zero-based character index value of the start of the current edit session text (such as all text in the inline session that is not confirmed to the document)." version="" playername="" helpurl="flash.text.ime:IIMEClient:compositionStartIndex:get"/>
                <string name="selectionActiveIndex" object="[flash.text.ime.IIMEClient]" text=".selectionActiveIndex" tiptext="The zero-based character index value of the last character in the current selection." version="" playername="" helpurl="flash.text.ime:IIMEClient:selectionActiveIndex:get"/>
                <string name="selectionAnchorIndex" object="[flash.text.ime.IIMEClient]" text=".selectionAnchorIndex" tiptext="The zero-based character index value of the first character in the current selection." version="" playername="" helpurl="flash.text.ime:IIMEClient:selectionAnchorIndex:get"/>
                <string name="verticalTextLayout" object="[flash.text.ime.IIMEClient]" text=".verticalTextLayout" tiptext="Indicates whether the text in the component is vertical or not." version="" playername="" helpurl="flash.text.ime:IIMEClient:verticalTextLayout:get"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class IIMEClient" helpurl="flash.text.ime:IIMEClient">
                <string name="textInput" object="[flash.text.ime.IIMEClient]" text=".addEventListener(%type:String=TextEvent.TEXT_INPUT{TextEvent.TEXT_INPUT,IMEEvent.IME_START_COMPOSITION},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user enters text." version="" playername="" helpurl="flash.text.ime:IIMEClient_flash.events.TextEvent.TEXT_INPUT_textInput"/>
                <string name="imeStartComposition" object="[flash.text.ime.IIMEClient]" text=".addEventListener(%type:String=IMEEvent.IME_START_COMPOSITION{TextEvent.TEXT_INPUT,IMEEvent.IME_START_COMPOSITION},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the user begins to use an IME (input method editor)." version="" playername="" helpurl="flash.text.ime:IIMEClient_flash.events.IMEEvent.IME_START_COMPOSITION_imeStartComposition"/>
            </folder>
        </folder>
    </folder>
        <folder name="flash.ui" id="flash.ui" sort="true" tiptext="Classes for package flash.ui" helpurl="flash.ui">
        <folder name="ContextMenu" id="[flash.ui.ContextMenu]" sort="true" index="true" asAncestors="flash.display:NativeMenu,flash.events:EventDispatcher,Object" tiptext="The ContextMenu class provides control over the items displayed in context menus." helpurl="flash.ui:ContextMenu">
            <folder name="Methods" id="Methods" tiptext="Methods for class ContextMenu" helpurl="flash.ui:ContextMenu">
                <string name="ContextMenu" object="[flash.ui.ContextMenu]" text="new ContextMenu(%%)" constructor="true" tiptext="Creates a ContextMenu object." version="9" playername="" helpurl="flash.ui:ContextMenu:ContextMenu"/>
                <string name="addItemAt" object="[flash.ui.ContextMenu]" text=".addItemAt(%item:flash.display:NativeMenuItem,index:int%):flash.display:NativeMenuItem" tiptext="Adds a menu item at the bottom of the menu." version="1.0" playername="AIR" helpurl="flash.ui:ContextMenu:addItemAt"/>
                <string name="clone" object="[flash.ui.ContextMenu]" text=".clone(%%):flash.display:NativeMenu" tiptext="Creates a copy of the menu and all items." version="1.0" playername="AIR" helpurl="flash.ui:ContextMenu:clone"/>
                <string name="containsItem" object="[flash.ui.ContextMenu]" text=".containsItem(%item:flash.display:NativeMenuItem%):Boolean" tiptext="Reports whether this menu contains the specified menu item." version="1.0" playername="AIR" helpurl="flash.ui:ContextMenu:containsItem"/>
                <string name="display" object="[flash.ui.ContextMenu]" text=".display(%stage:flash.display:Stage,stageX:Number,stageY:Number%):void" tiptext="Pops up this menu at the specified location." version="1.0" playername="AIR" helpurl="flash.ui:ContextMenu:display"/>
                <string name="getItemAt" object="[flash.ui.ContextMenu]" text=".getItemAt(%index:int%):flash.display:NativeMenuItem" tiptext="Gets the menu item at the specified index." version="1.0" playername="AIR" helpurl="flash.ui:ContextMenu:getItemAt"/>
                <string name="getItemIndex" object="[flash.ui.ContextMenu]" text=".getItemIndex(%item:flash.display:NativeMenuItem%):int" tiptext="Gets the position of the specified item." version="1.0" playername="AIR" helpurl="flash.ui:ContextMenu:getItemIndex"/>
                <string name="hideBuiltInItems" object="[flash.ui.ContextMenu]" text=".hideBuiltInItems(%%):void" tiptext="Hides all built-in menu items (except Settings) in the specified ContextMenu object." version="9" playername="" helpurl="flash.ui:ContextMenu:hideBuiltInItems"/>
                <string name="removeAllItems" object="[flash.ui.ContextMenu]" text=".removeAllItems(%%):void" tiptext="Removes all items from the menu." version="1.0" playername="AIR" helpurl="flash.ui:ContextMenu:removeAllItems"/>
                <string name="removeItemAt" object="[flash.ui.ContextMenu]" text=".removeItemAt(%index:int%):flash.display:NativeMenuItem" tiptext="Removes and returns the menu item at the specified index." version="1.0" playername="AIR" helpurl="flash.ui:ContextMenu:removeItemAt"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class ContextMenu" helpurl="flash.ui:ContextMenu">
                <string name="builtInItems" object="[flash.ui.ContextMenu]" text=".builtInItems" tiptext="An instance of the ContextMenuBuiltInItems class with the following properties: forwardAndBack, loop, play, print, quality, rewind, save, and zoom." version="" playername="" helpurl="flash.ui:ContextMenu:builtInItems:get"/>
                <string name="clipboardItems" object="[flash.ui.ContextMenu]" text=".clipboardItems" tiptext="An instance of the ContextMenuClipboardItems class with the following properties: cut, copy, paste, delete, selectAll." version="" playername="" helpurl="flash.ui:ContextMenu:clipboardItems:get"/>
                <string name="clipboardMenu" object="[flash.ui.ContextMenu]" text=".clipboardMenu" tiptext="Specifies whether or not the clipboard menu should be used." version="" playername="" helpurl="flash.ui:ContextMenu:clipboardMenu:get"/>
                <string name="customItems" object="[flash.ui.ContextMenu]" text=".customItems" tiptext="An array of ContextMenuItem objects." version="" playername="" helpurl="flash.ui:ContextMenu:customItems:get"/>
                <string name="isSupported" object="[flash.ui.ContextMenu]" text=".isSupported" tiptext="The isSupported property is set to true if the ContextMenu class is supported on the current platform, otherwise it is set to false." version="" playername="" helpurl="flash.ui:ContextMenu:isSupported:get"/>
                <string name="items" object="[flash.ui.ContextMenu]" text=".items" tiptext="The array of custom items in this menu." version="" playername="AIR" helpurl="flash.ui:ContextMenu:items:get"/>
                <string name="link" object="[flash.ui.ContextMenu]" text=".link" tiptext="The URLRequest of the link." version="" playername="" helpurl="flash.ui:ContextMenu:link:get"/>
                <string name="numItems" object="[flash.ui.ContextMenu]" text=".numItems" tiptext="The number of items in this menu." version="" playername="AIR" helpurl="flash.ui:ContextMenu:numItems:get"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class ContextMenu" helpurl="flash.ui:ContextMenu">
                <string name="menuSelect" object="[flash.ui.ContextMenu]" text=".addEventListener(%type:String=ContextMenuEvent.MENU_SELECT{ContextMenuEvent.MENU_SELECT},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a user first generates a context menu but before the contents of the context menu are displayed." version="" playername="" helpurl="flash.ui:ContextMenu_flash.events.ContextMenuEvent.MENU_SELECT_menuSelect"/>
            </folder>
        </folder>
        <folder name="ContextMenuBuiltInItems" id="[flash.ui.ContextMenuBuiltInItems]" sort="true" index="true" asAncestors="Object" tiptext="The ContextMenuBuiltInItems class describes the items that are built in to a context menu." helpurl="flash.ui:ContextMenuBuiltInItems">
            <folder name="Methods" id="Methods" tiptext="Methods for class ContextMenuBuiltInItems" helpurl="flash.ui:ContextMenuBuiltInItems">
                <string name="ContextMenuBuiltInItems" object="[flash.ui.ContextMenuBuiltInItems]" text="new ContextMenuBuiltInItems(%%)" constructor="true" tiptext="Creates a new ContextMenuBuiltInItems object so that you can set the properties for Flash Player to display or hide each menu item." version="9" playername="" helpurl="flash.ui:ContextMenuBuiltInItems:ContextMenuBuiltInItems"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class ContextMenuBuiltInItems" helpurl="flash.ui:ContextMenuBuiltInItems">
                <string name="forwardAndBack" object="[flash.ui.ContextMenuBuiltInItems]" text=".forwardAndBack" tiptext="Lets the user move forward or backward one frame in a SWF file at run time (does not appear for a single-frame SWF file)." version="" playername="" helpurl="flash.ui:ContextMenuBuiltInItems:forwardAndBack:get"/>
                <string name="loop" object="[flash.ui.ContextMenuBuiltInItems]" text=".loop" tiptext="Lets the user set a SWF file to start over automatically when it reaches the final frame (does not appear for a single-frame SWF file)." version="" playername="" helpurl="flash.ui:ContextMenuBuiltInItems:loop:get"/>
                <string name="play" object="[flash.ui.ContextMenuBuiltInItems]" text=".play" tiptext="Lets the user start a paused SWF file (does not appear for a single-frame SWF file)." version="" playername="" helpurl="flash.ui:ContextMenuBuiltInItems:play:get"/>
                <string name="print" object="[flash.ui.ContextMenuBuiltInItems]" text=".print" tiptext="Lets the user send the displayed frame image to a printer." version="" playername="" helpurl="flash.ui:ContextMenuBuiltInItems:print:get"/>
                <string name="quality" object="[flash.ui.ContextMenuBuiltInItems]" text=".quality" tiptext="Lets the user set the resolution of the SWF file at run time." version="" playername="" helpurl="flash.ui:ContextMenuBuiltInItems:quality:get"/>
                <string name="rewind" object="[flash.ui.ContextMenuBuiltInItems]" text=".rewind" tiptext="Lets the user set a SWF file to play from the first frame when selected, at any time (does not appear for a single-frame SWF file)." version="" playername="" helpurl="flash.ui:ContextMenuBuiltInItems:rewind:get"/>
                <string name="save" object="[flash.ui.ContextMenuBuiltInItems]" text=".save" tiptext="Lets the user with Shockmachine installed save a SWF file." version="" playername="" helpurl="flash.ui:ContextMenuBuiltInItems:save:get"/>
                <string name="zoom" object="[flash.ui.ContextMenuBuiltInItems]" text=".zoom" tiptext="Lets the user zoom in and out on a SWF file at run time." version="" playername="" helpurl="flash.ui:ContextMenuBuiltInItems:zoom:get"/>
            </folder>
        </folder>
        <folder name="ContextMenuClipboardItems" id="[flash.ui.ContextMenuClipboardItems]" sort="true" index="true" asAncestors="Object" tiptext="The ContextMenuClipboardItems class lets you enable or disable the commands in the clipboard context menu." helpurl="flash.ui:ContextMenuClipboardItems">
            <folder name="Methods" id="Methods" tiptext="Methods for class ContextMenuClipboardItems" helpurl="flash.ui:ContextMenuClipboardItems">
                <string name="ContextMenuClipboardItems" object="[flash.ui.ContextMenuClipboardItems]" text="new ContextMenuClipboardItems(%%)" constructor="true" tiptext="Creates a new ContextMenuClipboardItems object." version="1.5" playername="" helpurl="flash.ui:ContextMenuClipboardItems:ContextMenuClipboardItems"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class ContextMenuClipboardItems" helpurl="flash.ui:ContextMenuClipboardItems">
                <string name="clear" object="[flash.ui.ContextMenuClipboardItems]" text=".clear" tiptext="Enables or disables the &apos;Delete&apos; or &apos;Clear&apos; item on the clipboard menu." version="" playername="" helpurl="flash.ui:ContextMenuClipboardItems:clear:get"/>
                <string name="copy" object="[flash.ui.ContextMenuClipboardItems]" text=".copy" tiptext="Enables or disables the &apos;Copy&apos; item on the clipboard menu." version="" playername="" helpurl="flash.ui:ContextMenuClipboardItems:copy:get"/>
                <string name="cut" object="[flash.ui.ContextMenuClipboardItems]" text=".cut" tiptext="Enables or disables the &apos;Cut&apos; item on the clipboard menu." version="" playername="" helpurl="flash.ui:ContextMenuClipboardItems:cut:get"/>
                <string name="paste" object="[flash.ui.ContextMenuClipboardItems]" text=".paste" tiptext="Enables or disables the &apos;Paste&apos; item on the clipboard menu." version="" playername="" helpurl="flash.ui:ContextMenuClipboardItems:paste:get"/>
                <string name="selectAll" object="[flash.ui.ContextMenuClipboardItems]" text=".selectAll" tiptext="Enables or disables the &apos;Select All&apos; item on the clipboard menu." version="" playername="" helpurl="flash.ui:ContextMenuClipboardItems:selectAll:get"/>
            </folder>
        </folder>
        <folder name="ContextMenuItem" id="[flash.ui.ContextMenuItem]" sort="true" index="true" asAncestors="flash.display:NativeMenuItem,flash.events:EventDispatcher,Object" tiptext="The ContextMenuItem class represents an item in the context menu." helpurl="flash.ui:ContextMenuItem">
            <folder name="Methods" id="Methods" tiptext="Methods for class ContextMenuItem" helpurl="flash.ui:ContextMenuItem">
                <string name="ContextMenuItem" object="[flash.ui.ContextMenuItem]" text="new ContextMenuItem(%caption:String[,separatorBefore:Boolean=false,enabled:Boolean=true,visible:Boolean=true]%)" constructor="true" tiptext="Creates a new ContextMenuItem object that can be added to the ContextMenu.customItems array." version="9" playername="" helpurl="flash.ui:ContextMenuItem:ContextMenuItem"/>
                <string name="clone" object="[flash.ui.ContextMenuItem]" text=".clone(%%):flash.display:NativeMenuItem" tiptext="Creates a copy of the NativeMenuItem object." version="" playername="" helpurl="flash.ui:ContextMenuItem:clone"/>
                <string name="systemClearMenuItem" object="[flash.ui.ContextMenuItem]" text="ContextMenuItem.systemClearMenuItem(%%):flash.ui:ContextMenuItem" static="true" tiptext="" version="" playername="" helpurl="flash.ui:ContextMenuItem:systemClearMenuItem"/>
                <string name="systemCopyLinkMenuItem" object="[flash.ui.ContextMenuItem]" text="ContextMenuItem.systemCopyLinkMenuItem(%%):flash.ui:ContextMenuItem" static="true" tiptext="" version="" playername="" helpurl="flash.ui:ContextMenuItem:systemCopyLinkMenuItem"/>
                <string name="systemCopyMenuItem" object="[flash.ui.ContextMenuItem]" text="ContextMenuItem.systemCopyMenuItem(%%):flash.ui:ContextMenuItem" static="true" tiptext="" version="" playername="" helpurl="flash.ui:ContextMenuItem:systemCopyMenuItem"/>
                <string name="systemCutMenuItem" object="[flash.ui.ContextMenuItem]" text="ContextMenuItem.systemCutMenuItem(%%):flash.ui:ContextMenuItem" static="true" tiptext="" version="" playername="" helpurl="flash.ui:ContextMenuItem:systemCutMenuItem"/>
                <string name="systemOpenLinkMenuItem" object="[flash.ui.ContextMenuItem]" text="ContextMenuItem.systemOpenLinkMenuItem(%%):flash.ui:ContextMenuItem" static="true" tiptext="" version="" playername="" helpurl="flash.ui:ContextMenuItem:systemOpenLinkMenuItem"/>
                <string name="systemPasteMenuItem" object="[flash.ui.ContextMenuItem]" text="ContextMenuItem.systemPasteMenuItem(%%):flash.ui:ContextMenuItem" static="true" tiptext="" version="" playername="" helpurl="flash.ui:ContextMenuItem:systemPasteMenuItem"/>
                <string name="systemSelectAllMenuItem" object="[flash.ui.ContextMenuItem]" text="ContextMenuItem.systemSelectAllMenuItem(%%):flash.ui:ContextMenuItem" static="true" tiptext="" version="" playername="" helpurl="flash.ui:ContextMenuItem:systemSelectAllMenuItem"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class ContextMenuItem" helpurl="flash.ui:ContextMenuItem">
                <string name="caption" object="[flash.ui.ContextMenuItem]" text=".caption" tiptext="Specifies the menu item caption (text) displayed in the context menu." version="" playername="" helpurl="flash.ui:ContextMenuItem:caption:get"/>
                <string name="separatorBefore" object="[flash.ui.ContextMenuItem]" text=".separatorBefore" tiptext="Indicates whether a separator bar should appear above the specified menu item." version="" playername="" helpurl="flash.ui:ContextMenuItem:separatorBefore:get"/>
                <string name="visible" object="[flash.ui.ContextMenuItem]" text=".visible" tiptext="Indicates whether the specified menu item is visible when the Flash Player context menu is displayed." version="" playername="" helpurl="flash.ui:ContextMenuItem:visible:get"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class ContextMenuItem" helpurl="flash.ui:ContextMenuItem">
                <string name="menuItemSelect" object="[flash.ui.ContextMenuItem]" text=".addEventListener(%type:String=ContextMenuEvent.MENU_ITEM_SELECT{ContextMenuEvent.MENU_ITEM_SELECT},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a user selects an item from a context menu." version="" playername="" helpurl="flash.ui:ContextMenuItem_flash.events.ContextMenuEvent.MENU_ITEM_SELECT_menuItemSelect"/>
            </folder>
        </folder>
        <folder name="Keyboard" id="[flash.ui.Keyboard]" sort="true" index="true" asAncestors="Object" tiptext="The Keyboard class is used to build an interface that can be controlled by a user with a standard keyboard." helpurl="flash.ui:Keyboard">
            <folder name="Methods" id="Methods" tiptext="Methods for class Keyboard" helpurl="flash.ui:Keyboard">
                <string name="isAccessible" object="[flash.ui.Keyboard]" text="Keyboard.isAccessible(%%):Boolean" static="true" tiptext="Specifies whether the last key pressed is accessible by other SWF files." version="9" playername="" helpurl="flash.ui:Keyboard:isAccessible"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class Keyboard" helpurl="flash.ui:Keyboard">
                <string name="ALTERNATE" object="[flash.ui.Keyboard]" text="Keyboard.ALTERNATE" constant="true" tiptext="Constant associated with the key code value for the Alternate (Option) key (18)." version="" playername="AIR" helpurl="flash.ui:Keyboard:ALTERNATE"/>
                <string name="AUDIO" object="[flash.ui.Keyboard]" text="Keyboard.AUDIO" constant="true" tiptext="Select the audio mode" version="" playername="AIR" helpurl="flash.ui:Keyboard:AUDIO"/>
                <string name="A" object="[flash.ui.Keyboard]" text="Keyboard.A" constant="true" tiptext="Constant associated with the key code value for the A key (65)." version="" playername="AIR" helpurl="flash.ui:Keyboard:A"/>
                <string name="BACKQUOTE" object="[flash.ui.Keyboard]" text="Keyboard.BACKQUOTE" constant="true" tiptext="Constant associated with the key code value for the ` key (192)." version="" playername="AIR" helpurl="flash.ui:Keyboard:BACKQUOTE"/>
                <string name="BACKSLASH" object="[flash.ui.Keyboard]" text="Keyboard.BACKSLASH" constant="true" tiptext="Constant associated with the key code value for the \ key (220)." version="" playername="AIR" helpurl="flash.ui:Keyboard:BACKSLASH"/>
                <string name="BACKSPACE" object="[flash.ui.Keyboard]" text="Keyboard.BACKSPACE" constant="true" tiptext="Constant associated with the key code value for the Backspace key (8)." version="" playername="" helpurl="flash.ui:Keyboard:BACKSPACE"/>
                <string name="BACK" object="[flash.ui.Keyboard]" text="Keyboard.BACK" constant="true" tiptext="Return to previous page in application" version="" playername="AIR" helpurl="flash.ui:Keyboard:BACK"/>
                <string name="BLUE" object="[flash.ui.Keyboard]" text="Keyboard.BLUE" constant="true" tiptext="Blue function key button" version="" playername="AIR" helpurl="flash.ui:Keyboard:BLUE"/>
                <string name="B" object="[flash.ui.Keyboard]" text="Keyboard.B" constant="true" tiptext="Constant associated with the key code value for the B key (66)." version="" playername="AIR" helpurl="flash.ui:Keyboard:B"/>
                <string name="CAPS_LOCK" object="[flash.ui.Keyboard]" text="Keyboard.CAPS_LOCK" constant="true" tiptext="Constant associated with the key code value for the Caps Lock key (20)." version="" playername="" helpurl="flash.ui:Keyboard:CAPS_LOCK"/>
                <string name="CHANNEL_DOWN" object="[flash.ui.Keyboard]" text="Keyboard.CHANNEL_DOWN" constant="true" tiptext="Channel down" version="" playername="AIR" helpurl="flash.ui:Keyboard:CHANNEL_DOWN"/>
                <string name="CHANNEL_UP" object="[flash.ui.Keyboard]" text="Keyboard.CHANNEL_UP" constant="true" tiptext="Channel up" version="" playername="AIR" helpurl="flash.ui:Keyboard:CHANNEL_UP"/>
                <string name="COMMAND" object="[flash.ui.Keyboard]" text="Keyboard.COMMAND" constant="true" tiptext="Constant associated with the Mac command key (15)." version="" playername="AIR" helpurl="flash.ui:Keyboard:COMMAND"/>
                <string name="COMMA" object="[flash.ui.Keyboard]" text="Keyboard.COMMA" constant="true" tiptext="Constant associated with the key code value for the , key (188)." version="" playername="AIR" helpurl="flash.ui:Keyboard:COMMA"/>
                <string name="CONTROL" object="[flash.ui.Keyboard]" text="Keyboard.CONTROL" constant="true" tiptext="Constant associated with the key code value for the Control key (17)." version="" playername="" helpurl="flash.ui:Keyboard:CONTROL"/>
                <string name="CharCodeStrings" object="[flash.ui.Keyboard]" text="Keyboard.CharCodeStrings" constant="true" tiptext="An array containing all the defined key name constants." version="" playername="AIR" helpurl="flash.ui:Keyboard:CharCodeStrings"/>
                <string name="C" object="[flash.ui.Keyboard]" text="Keyboard.C" constant="true" tiptext="Constant associated with the key code value for the C key (67)." version="" playername="AIR" helpurl="flash.ui:Keyboard:C"/>
                <string name="DELETE" object="[flash.ui.Keyboard]" text="Keyboard.DELETE" constant="true" tiptext="Constant associated with the key code value for the Delete key (46)." version="" playername="" helpurl="flash.ui:Keyboard:DELETE"/>
                <string name="DOWN" object="[flash.ui.Keyboard]" text="Keyboard.DOWN" constant="true" tiptext="Constant associated with the key code value for the Down Arrow key (40)." version="" playername="" helpurl="flash.ui:Keyboard:DOWN"/>
                <string name="DVR" object="[flash.ui.Keyboard]" text="Keyboard.DVR" constant="true" tiptext="Engage DVR application mode" version="" playername="AIR" helpurl="flash.ui:Keyboard:DVR"/>
                <string name="D" object="[flash.ui.Keyboard]" text="Keyboard.D" constant="true" tiptext="Constant associated with the key code value for the D key (68)." version="" playername="AIR" helpurl="flash.ui:Keyboard:D"/>
                <string name="END" object="[flash.ui.Keyboard]" text="Keyboard.END" constant="true" tiptext="Constant associated with the key code value for the End key (35)." version="" playername="" helpurl="flash.ui:Keyboard:END"/>
                <string name="ENTER" object="[flash.ui.Keyboard]" text="Keyboard.ENTER" constant="true" tiptext="Constant associated with the key code value for the Enter key (13)." version="" playername="" helpurl="flash.ui:Keyboard:ENTER"/>
                <string name="EQUAL" object="[flash.ui.Keyboard]" text="Keyboard.EQUAL" constant="true" tiptext="Constant associated with the key code value for the = key (187)." version="" playername="AIR" helpurl="flash.ui:Keyboard:EQUAL"/>
                <string name="ESCAPE" object="[flash.ui.Keyboard]" text="Keyboard.ESCAPE" constant="true" tiptext="Constant associated with the key code value for the Escape key (27)." version="" playername="" helpurl="flash.ui:Keyboard:ESCAPE"/>
                <string name="EXIT" object="[flash.ui.Keyboard]" text="Keyboard.EXIT" constant="true" tiptext="Exits current application mode" version="" playername="AIR" helpurl="flash.ui:Keyboard:EXIT"/>
                <string name="E" object="[flash.ui.Keyboard]" text="Keyboard.E" constant="true" tiptext="Constant associated with the key code value for the E key (69)." version="" playername="AIR" helpurl="flash.ui:Keyboard:E"/>
                <string name="F10" object="[flash.ui.Keyboard]" text="Keyboard.F10" constant="true" tiptext="Constant associated with the key code value for the F10 key (121)." version="" playername="" helpurl="flash.ui:Keyboard:F10"/>
                <string name="F11" object="[flash.ui.Keyboard]" text="Keyboard.F11" constant="true" tiptext="Constant associated with the key code value for the F11 key (122)." version="" playername="" helpurl="flash.ui:Keyboard:F11"/>
                <string name="F12" object="[flash.ui.Keyboard]" text="Keyboard.F12" constant="true" tiptext="Constant associated with the key code value for the F12 key (123)." version="" playername="" helpurl="flash.ui:Keyboard:F12"/>
                <string name="F13" object="[flash.ui.Keyboard]" text="Keyboard.F13" constant="true" tiptext="Constant associated with the key code value for the F13 key (124)." version="" playername="" helpurl="flash.ui:Keyboard:F13"/>
                <string name="F14" object="[flash.ui.Keyboard]" text="Keyboard.F14" constant="true" tiptext="Constant associated with the key code value for the F14 key (125)." version="" playername="" helpurl="flash.ui:Keyboard:F14"/>
                <string name="F15" object="[flash.ui.Keyboard]" text="Keyboard.F15" constant="true" tiptext="Constant associated with the key code value for the F15 key (126)." version="" playername="" helpurl="flash.ui:Keyboard:F15"/>
                <string name="F1" object="[flash.ui.Keyboard]" text="Keyboard.F1" constant="true" tiptext="Constant associated with the key code value for the F1 key (112)." version="" playername="" helpurl="flash.ui:Keyboard:F1"/>
                <string name="F2" object="[flash.ui.Keyboard]" text="Keyboard.F2" constant="true" tiptext="Constant associated with the key code value for the F2 key (113)." version="" playername="" helpurl="flash.ui:Keyboard:F2"/>
                <string name="F3" object="[flash.ui.Keyboard]" text="Keyboard.F3" constant="true" tiptext="Constant associated with the key code value for the F3 key (114)." version="" playername="" helpurl="flash.ui:Keyboard:F3"/>
                <string name="F4" object="[flash.ui.Keyboard]" text="Keyboard.F4" constant="true" tiptext="Constant associated with the key code value for the F4 key (115)." version="" playername="" helpurl="flash.ui:Keyboard:F4"/>
                <string name="F5" object="[flash.ui.Keyboard]" text="Keyboard.F5" constant="true" tiptext="Constant associated with the key code value for the F5 key (116)." version="" playername="" helpurl="flash.ui:Keyboard:F5"/>
                <string name="F6" object="[flash.ui.Keyboard]" text="Keyboard.F6" constant="true" tiptext="Constant associated with the key code value for the F6 key (117)." version="" playername="" helpurl="flash.ui:Keyboard:F6"/>
                <string name="F7" object="[flash.ui.Keyboard]" text="Keyboard.F7" constant="true" tiptext="Constant associated with the key code value for the F7 key (118)." version="" playername="" helpurl="flash.ui:Keyboard:F7"/>
                <string name="F8" object="[flash.ui.Keyboard]" text="Keyboard.F8" constant="true" tiptext="Constant associated with the key code value for the F8 key (119)." version="" playername="" helpurl="flash.ui:Keyboard:F8"/>
                <string name="F9" object="[flash.ui.Keyboard]" text="Keyboard.F9" constant="true" tiptext="Constant associated with the key code value for the F9 key (120)." version="" playername="" helpurl="flash.ui:Keyboard:F9"/>
                <string name="FAST_FORWARD" object="[flash.ui.Keyboard]" text="Keyboard.FAST_FORWARD" constant="true" tiptext="Engage fast-forward transport mode" version="" playername="AIR" helpurl="flash.ui:Keyboard:FAST_FORWARD"/>
                <string name="F" object="[flash.ui.Keyboard]" text="Keyboard.F" constant="true" tiptext="Constant associated with the key code value for the F key (70)." version="" playername="AIR" helpurl="flash.ui:Keyboard:F"/>
                <string name="GREEN" object="[flash.ui.Keyboard]" text="Keyboard.GREEN" constant="true" tiptext="Green function key button" version="" playername="AIR" helpurl="flash.ui:Keyboard:GREEN"/>
                <string name="GUIDE" object="[flash.ui.Keyboard]" text="Keyboard.GUIDE" constant="true" tiptext="Engage program guide" version="" playername="AIR" helpurl="flash.ui:Keyboard:GUIDE"/>
                <string name="G" object="[flash.ui.Keyboard]" text="Keyboard.G" constant="true" tiptext="Constant associated with the key code value for the G key (71)." version="" playername="" helpurl="flash.ui:Keyboard:G"/>
                <string name="HELP" object="[flash.ui.Keyboard]" text="Keyboard.HELP" constant="true" tiptext="Engage help application or context-sensitive help" version="" playername="AIR" helpurl="flash.ui:Keyboard:HELP"/>
                <string name="HOME" object="[flash.ui.Keyboard]" text="Keyboard.HOME" constant="true" tiptext="Constant associated with the key code value for the Home key (36)." version="" playername="" helpurl="flash.ui:Keyboard:HOME"/>
                <string name="H" object="[flash.ui.Keyboard]" text="Keyboard.H" constant="true" tiptext="Constant associated with the key code value for the H key (72)." version="" playername="AIR" helpurl="flash.ui:Keyboard:H"/>
                <string name="INFO" object="[flash.ui.Keyboard]" text="Keyboard.INFO" constant="true" tiptext="Info button" version="" playername="AIR" helpurl="flash.ui:Keyboard:INFO"/>
                <string name="INPUT" object="[flash.ui.Keyboard]" text="Keyboard.INPUT" constant="true" tiptext="Cycle input" version="" playername="AIR" helpurl="flash.ui:Keyboard:INPUT"/>
                <string name="INSERT" object="[flash.ui.Keyboard]" text="Keyboard.INSERT" constant="true" tiptext="Constant associated with the key code value for the Insert key (45)." version="" playername="" helpurl="flash.ui:Keyboard:INSERT"/>
                <string name="I" object="[flash.ui.Keyboard]" text="Keyboard.I" constant="true" tiptext="Constant associated with the key code value for the I key (73)." version="" playername="AIR" helpurl="flash.ui:Keyboard:I"/>
                <string name="J" object="[flash.ui.Keyboard]" text="Keyboard.J" constant="true" tiptext="Constant associated with the key code value for the J key (74)." version="" playername="AIR" helpurl="flash.ui:Keyboard:J"/>
                <string name="KEYNAME_BEGIN" object="[flash.ui.Keyboard]" text="Keyboard.KEYNAME_BEGIN" constant="true" tiptext="The Begin key" version="" playername="AIR" helpurl="flash.ui:Keyboard:KEYNAME_BEGIN"/>
                <string name="KEYNAME_BREAK" object="[flash.ui.Keyboard]" text="Keyboard.KEYNAME_BREAK" constant="true" tiptext="The Break key" version="" playername="AIR" helpurl="flash.ui:Keyboard:KEYNAME_BREAK"/>
                <string name="KEYNAME_CLEARDISPLAY" object="[flash.ui.Keyboard]" text="Keyboard.KEYNAME_CLEARDISPLAY" constant="true" tiptext="The Clear Display key" version="" playername="AIR" helpurl="flash.ui:Keyboard:KEYNAME_CLEARDISPLAY"/>
                <string name="KEYNAME_CLEARLINE" object="[flash.ui.Keyboard]" text="Keyboard.KEYNAME_CLEARLINE" constant="true" tiptext="The Clear Line key" version="" playername="AIR" helpurl="flash.ui:Keyboard:KEYNAME_CLEARLINE"/>
                <string name="KEYNAME_DELETECHAR" object="[flash.ui.Keyboard]" text="Keyboard.KEYNAME_DELETECHAR" constant="true" tiptext="The Delete Character key" version="" playername="AIR" helpurl="flash.ui:Keyboard:KEYNAME_DELETECHAR"/>
                <string name="KEYNAME_DELETELINE" object="[flash.ui.Keyboard]" text="Keyboard.KEYNAME_DELETELINE" constant="true" tiptext="The Delete Line key" version="" playername="AIR" helpurl="flash.ui:Keyboard:KEYNAME_DELETELINE"/>
                <string name="KEYNAME_DELETE" object="[flash.ui.Keyboard]" text="Keyboard.KEYNAME_DELETE" constant="true" tiptext="The Delete key" version="" playername="AIR" helpurl="flash.ui:Keyboard:KEYNAME_DELETE"/>
                <string name="KEYNAME_DOWNARROW" object="[flash.ui.Keyboard]" text="Keyboard.KEYNAME_DOWNARROW" constant="true" tiptext="The down arrow" version="" playername="AIR" helpurl="flash.ui:Keyboard:KEYNAME_DOWNARROW"/>
                <string name="KEYNAME_END" object="[flash.ui.Keyboard]" text="Keyboard.KEYNAME_END" constant="true" tiptext="The End key" version="" playername="AIR" helpurl="flash.ui:Keyboard:KEYNAME_END"/>
                <string name="KEYNAME_EXECUTE" object="[flash.ui.Keyboard]" text="Keyboard.KEYNAME_EXECUTE" constant="true" tiptext="The Execute key" version="" playername="AIR" helpurl="flash.ui:Keyboard:KEYNAME_EXECUTE"/>
                <string name="KEYNAME_F10" object="[flash.ui.Keyboard]" text="Keyboard.KEYNAME_F10" constant="true" tiptext="The F10 key" version="" playername="AIR" helpurl="flash.ui:Keyboard:KEYNAME_F10"/>
                <string name="KEYNAME_F11" object="[flash.ui.Keyboard]" text="Keyboard.KEYNAME_F11" constant="true" tiptext="The F11 key" version="" playername="AIR" helpurl="flash.ui:Keyboard:KEYNAME_F11"/>
                <string name="KEYNAME_F12" object="[flash.ui.Keyboard]" text="Keyboard.KEYNAME_F12" constant="true" tiptext="The F12 key" version="" playername="AIR" helpurl="flash.ui:Keyboard:KEYNAME_F12"/>
                <string name="KEYNAME_F13" object="[flash.ui.Keyboard]" text="Keyboard.KEYNAME_F13" constant="true" tiptext="The F13 key" version="" playername="AIR" helpurl="flash.ui:Keyboard:KEYNAME_F13"/>
                <string name="KEYNAME_F14" object="[flash.ui.Keyboard]" text="Keyboard.KEYNAME_F14" constant="true" tiptext="The F14 key" version="" playername="AIR" helpurl="flash.ui:Keyboard:KEYNAME_F14"/>
                <string name="KEYNAME_F15" object="[flash.ui.Keyboard]" text="Keyboard.KEYNAME_F15" constant="true" tiptext="The F15 key" version="" playername="AIR" helpurl="flash.ui:Keyboard:KEYNAME_F15"/>
                <string name="KEYNAME_F16" object="[flash.ui.Keyboard]" text="Keyboard.KEYNAME_F16" constant="true" tiptext="The F16 key" version="" playername="AIR" helpurl="flash.ui:Keyboard:KEYNAME_F16"/>
                <string name="KEYNAME_F17" object="[flash.ui.Keyboard]" text="Keyboard.KEYNAME_F17" constant="true" tiptext="The F17 key" version="" playername="AIR" helpurl="flash.ui:Keyboard:KEYNAME_F17"/>
                <string name="KEYNAME_F18" object="[flash.ui.Keyboard]" text="Keyboard.KEYNAME_F18" constant="true" tiptext="The F18 key" version="" playername="AIR" helpurl="flash.ui:Keyboard:KEYNAME_F18"/>
                <string name="KEYNAME_F19" object="[flash.ui.Keyboard]" text="Keyboard.KEYNAME_F19" constant="true" tiptext="The F19 key" version="" playername="AIR" helpurl="flash.ui:Keyboard:KEYNAME_F19"/>
                <string name="KEYNAME_F1" object="[flash.ui.Keyboard]" text="Keyboard.KEYNAME_F1" constant="true" tiptext="The F1 key" version="" playername="AIR" helpurl="flash.ui:Keyboard:KEYNAME_F1"/>
                <string name="KEYNAME_F20" object="[flash.ui.Keyboard]" text="Keyboard.KEYNAME_F20" constant="true" tiptext="The F20 key" version="" playername="AIR" helpurl="flash.ui:Keyboard:KEYNAME_F20"/>
                <string name="KEYNAME_F21" object="[flash.ui.Keyboard]" text="Keyboard.KEYNAME_F21" constant="true" tiptext="The F21 key" version="" playername="AIR" helpurl="flash.ui:Keyboard:KEYNAME_F21"/>
                <string name="KEYNAME_F22" object="[flash.ui.Keyboard]" text="Keyboard.KEYNAME_F22" constant="true" tiptext="The F22 key" version="" playername="AIR" helpurl="flash.ui:Keyboard:KEYNAME_F22"/>
                <string name="KEYNAME_F23" object="[flash.ui.Keyboard]" text="Keyboard.KEYNAME_F23" constant="true" tiptext="The F23 key" version="" playername="AIR" helpurl="flash.ui:Keyboard:KEYNAME_F23"/>
                <string name="KEYNAME_F24" object="[flash.ui.Keyboard]" text="Keyboard.KEYNAME_F24" constant="true" tiptext="The F24 key" version="" playername="AIR" helpurl="flash.ui:Keyboard:KEYNAME_F24"/>
                <string name="KEYNAME_F25" object="[flash.ui.Keyboard]" text="Keyboard.KEYNAME_F25" constant="true" tiptext="The F25 key" version="" playername="AIR" helpurl="flash.ui:Keyboard:KEYNAME_F25"/>
                <string name="KEYNAME_F26" object="[flash.ui.Keyboard]" text="Keyboard.KEYNAME_F26" constant="true" tiptext="The F26 key" version="" playername="AIR" helpurl="flash.ui:Keyboard:KEYNAME_F26"/>
                <string name="KEYNAME_F27" object="[flash.ui.Keyboard]" text="Keyboard.KEYNAME_F27" constant="true" tiptext="The F27 key" version="" playername="AIR" helpurl="flash.ui:Keyboard:KEYNAME_F27"/>
                <string name="KEYNAME_F28" object="[flash.ui.Keyboard]" text="Keyboard.KEYNAME_F28" constant="true" tiptext="The F28 key" version="" playername="AIR" helpurl="flash.ui:Keyboard:KEYNAME_F28"/>
                <string name="KEYNAME_F29" object="[flash.ui.Keyboard]" text="Keyboard.KEYNAME_F29" constant="true" tiptext="The F29 key" version="" playername="AIR" helpurl="flash.ui:Keyboard:KEYNAME_F29"/>
                <string name="KEYNAME_F2" object="[flash.ui.Keyboard]" text="Keyboard.KEYNAME_F2" constant="true" tiptext="The F2 key" version="" playername="AIR" helpurl="flash.ui:Keyboard:KEYNAME_F2"/>
                <string name="KEYNAME_F30" object="[flash.ui.Keyboard]" text="Keyboard.KEYNAME_F30" constant="true" tiptext="The F30 key" version="" playername="AIR" helpurl="flash.ui:Keyboard:KEYNAME_F30"/>
                <string name="KEYNAME_F31" object="[flash.ui.Keyboard]" text="Keyboard.KEYNAME_F31" constant="true" tiptext="The F31 key" version="" playername="AIR" helpurl="flash.ui:Keyboard:KEYNAME_F31"/>
                <string name="KEYNAME_F32" object="[flash.ui.Keyboard]" text="Keyboard.KEYNAME_F32" constant="true" tiptext="The F32 key" version="" playername="AIR" helpurl="flash.ui:Keyboard:KEYNAME_F32"/>
                <string name="KEYNAME_F33" object="[flash.ui.Keyboard]" text="Keyboard.KEYNAME_F33" constant="true" tiptext="The F33 key" version="" playername="AIR" helpurl="flash.ui:Keyboard:KEYNAME_F33"/>
                <string name="KEYNAME_F34" object="[flash.ui.Keyboard]" text="Keyboard.KEYNAME_F34" constant="true" tiptext="The F34 key" version="" playername="AIR" helpurl="flash.ui:Keyboard:KEYNAME_F34"/>
                <string name="KEYNAME_F35" object="[flash.ui.Keyboard]" text="Keyboard.KEYNAME_F35" constant="true" tiptext="The F35 key" version="" playername="AIR" helpurl="flash.ui:Keyboard:KEYNAME_F35"/>
                <string name="KEYNAME_F3" object="[flash.ui.Keyboard]" text="Keyboard.KEYNAME_F3" constant="true" tiptext="The F3 key" version="" playername="AIR" helpurl="flash.ui:Keyboard:KEYNAME_F3"/>
                <string name="KEYNAME_F4" object="[flash.ui.Keyboard]" text="Keyboard.KEYNAME_F4" constant="true" tiptext="The F4 key" version="" playername="AIR" helpurl="flash.ui:Keyboard:KEYNAME_F4"/>
                <string name="KEYNAME_F5" object="[flash.ui.Keyboard]" text="Keyboard.KEYNAME_F5" constant="true" tiptext="The F5 key" version="" playername="AIR" helpurl="flash.ui:Keyboard:KEYNAME_F5"/>
                <string name="KEYNAME_F6" object="[flash.ui.Keyboard]" text="Keyboard.KEYNAME_F6" constant="true" tiptext="The F6 key" version="" playername="AIR" helpurl="flash.ui:Keyboard:KEYNAME_F6"/>
                <string name="KEYNAME_F7" object="[flash.ui.Keyboard]" text="Keyboard.KEYNAME_F7" constant="true" tiptext="The F7 key" version="" playername="AIR" helpurl="flash.ui:Keyboard:KEYNAME_F7"/>
                <string name="KEYNAME_F8" object="[flash.ui.Keyboard]" text="Keyboard.KEYNAME_F8" constant="true" tiptext="The F8 key" version="" playername="AIR" helpurl="flash.ui:Keyboard:KEYNAME_F8"/>
                <string name="KEYNAME_F9" object="[flash.ui.Keyboard]" text="Keyboard.KEYNAME_F9" constant="true" tiptext="The F9 key" version="" playername="AIR" helpurl="flash.ui:Keyboard:KEYNAME_F9"/>
                <string name="KEYNAME_FIND" object="[flash.ui.Keyboard]" text="Keyboard.KEYNAME_FIND" constant="true" tiptext="The Find key" version="" playername="AIR" helpurl="flash.ui:Keyboard:KEYNAME_FIND"/>
                <string name="KEYNAME_HELP" object="[flash.ui.Keyboard]" text="Keyboard.KEYNAME_HELP" constant="true" tiptext="The Help key" version="" playername="AIR" helpurl="flash.ui:Keyboard:KEYNAME_HELP"/>
                <string name="KEYNAME_HOME" object="[flash.ui.Keyboard]" text="Keyboard.KEYNAME_HOME" constant="true" tiptext="The Home key" version="" playername="AIR" helpurl="flash.ui:Keyboard:KEYNAME_HOME"/>
                <string name="KEYNAME_INSERTCHAR" object="[flash.ui.Keyboard]" text="Keyboard.KEYNAME_INSERTCHAR" constant="true" tiptext="The Insert Character key" version="" playername="AIR" helpurl="flash.ui:Keyboard:KEYNAME_INSERTCHAR"/>
                <string name="KEYNAME_INSERTLINE" object="[flash.ui.Keyboard]" text="Keyboard.KEYNAME_INSERTLINE" constant="true" tiptext="The Insert Line key" version="" playername="AIR" helpurl="flash.ui:Keyboard:KEYNAME_INSERTLINE"/>
                <string name="KEYNAME_INSERT" object="[flash.ui.Keyboard]" text="Keyboard.KEYNAME_INSERT" constant="true" tiptext="The Insert key" version="" playername="AIR" helpurl="flash.ui:Keyboard:KEYNAME_INSERT"/>
                <string name="KEYNAME_LEFTARROW" object="[flash.ui.Keyboard]" text="Keyboard.KEYNAME_LEFTARROW" constant="true" tiptext="The left arrow" version="" playername="AIR" helpurl="flash.ui:Keyboard:KEYNAME_LEFTARROW"/>
                <string name="KEYNAME_MENU" object="[flash.ui.Keyboard]" text="Keyboard.KEYNAME_MENU" constant="true" tiptext="The Menu key" version="" playername="AIR" helpurl="flash.ui:Keyboard:KEYNAME_MENU"/>
                <string name="KEYNAME_MODESWITCH" object="[flash.ui.Keyboard]" text="Keyboard.KEYNAME_MODESWITCH" constant="true" tiptext="The Mode Switch key" version="" playername="AIR" helpurl="flash.ui:Keyboard:KEYNAME_MODESWITCH"/>
                <string name="KEYNAME_NEXT" object="[flash.ui.Keyboard]" text="Keyboard.KEYNAME_NEXT" constant="true" tiptext="The Next key" version="" playername="AIR" helpurl="flash.ui:Keyboard:KEYNAME_NEXT"/>
                <string name="KEYNAME_PAGEDOWN" object="[flash.ui.Keyboard]" text="Keyboard.KEYNAME_PAGEDOWN" constant="true" tiptext="The Page Down key" version="" playername="AIR" helpurl="flash.ui:Keyboard:KEYNAME_PAGEDOWN"/>
                <string name="KEYNAME_PAGEUP" object="[flash.ui.Keyboard]" text="Keyboard.KEYNAME_PAGEUP" constant="true" tiptext="The Page Up key" version="" playername="AIR" helpurl="flash.ui:Keyboard:KEYNAME_PAGEUP"/>
                <string name="KEYNAME_PAUSE" object="[flash.ui.Keyboard]" text="Keyboard.KEYNAME_PAUSE" constant="true" tiptext="The Pause key" version="" playername="AIR" helpurl="flash.ui:Keyboard:KEYNAME_PAUSE"/>
                <string name="KEYNAME_PREV" object="[flash.ui.Keyboard]" text="Keyboard.KEYNAME_PREV" constant="true" tiptext="The Previous key" version="" playername="AIR" helpurl="flash.ui:Keyboard:KEYNAME_PREV"/>
                <string name="KEYNAME_PRINTSCREEN" object="[flash.ui.Keyboard]" text="Keyboard.KEYNAME_PRINTSCREEN" constant="true" tiptext="The Print Screen" version="" playername="AIR" helpurl="flash.ui:Keyboard:KEYNAME_PRINTSCREEN"/>
                <string name="KEYNAME_PRINT" object="[flash.ui.Keyboard]" text="Keyboard.KEYNAME_PRINT" constant="true" tiptext="The Print key" version="" playername="AIR" helpurl="flash.ui:Keyboard:KEYNAME_PRINT"/>
                <string name="KEYNAME_REDO" object="[flash.ui.Keyboard]" text="Keyboard.KEYNAME_REDO" constant="true" tiptext="The Redo key" version="" playername="AIR" helpurl="flash.ui:Keyboard:KEYNAME_REDO"/>
                <string name="KEYNAME_RESET" object="[flash.ui.Keyboard]" text="Keyboard.KEYNAME_RESET" constant="true" tiptext="The Reset key" version="" playername="AIR" helpurl="flash.ui:Keyboard:KEYNAME_RESET"/>
                <string name="KEYNAME_RIGHTARROW" object="[flash.ui.Keyboard]" text="Keyboard.KEYNAME_RIGHTARROW" constant="true" tiptext="The right arrow" version="" playername="AIR" helpurl="flash.ui:Keyboard:KEYNAME_RIGHTARROW"/>
                <string name="KEYNAME_SCROLLLOCK" object="[flash.ui.Keyboard]" text="Keyboard.KEYNAME_SCROLLLOCK" constant="true" tiptext="The Scroll Lock key" version="" playername="AIR" helpurl="flash.ui:Keyboard:KEYNAME_SCROLLLOCK"/>
                <string name="KEYNAME_SELECT" object="[flash.ui.Keyboard]" text="Keyboard.KEYNAME_SELECT" constant="true" tiptext="The Select key" version="" playername="AIR" helpurl="flash.ui:Keyboard:KEYNAME_SELECT"/>
                <string name="KEYNAME_STOP" object="[flash.ui.Keyboard]" text="Keyboard.KEYNAME_STOP" constant="true" tiptext="The Stop key" version="" playername="AIR" helpurl="flash.ui:Keyboard:KEYNAME_STOP"/>
                <string name="KEYNAME_SYSREQ" object="[flash.ui.Keyboard]" text="Keyboard.KEYNAME_SYSREQ" constant="true" tiptext="The System Request key" version="" playername="AIR" helpurl="flash.ui:Keyboard:KEYNAME_SYSREQ"/>
                <string name="KEYNAME_SYSTEM" object="[flash.ui.Keyboard]" text="Keyboard.KEYNAME_SYSTEM" constant="true" tiptext="The System key" version="" playername="AIR" helpurl="flash.ui:Keyboard:KEYNAME_SYSTEM"/>
                <string name="KEYNAME_UNDO" object="[flash.ui.Keyboard]" text="Keyboard.KEYNAME_UNDO" constant="true" tiptext="The Undo key" version="" playername="AIR" helpurl="flash.ui:Keyboard:KEYNAME_UNDO"/>
                <string name="KEYNAME_UPARROW" object="[flash.ui.Keyboard]" text="Keyboard.KEYNAME_UPARROW" constant="true" tiptext="The up arrow" version="" playername="AIR" helpurl="flash.ui:Keyboard:KEYNAME_UPARROW"/>
                <string name="KEYNAME_USER" object="[flash.ui.Keyboard]" text="Keyboard.KEYNAME_USER" constant="true" tiptext="The User key" version="" playername="AIR" helpurl="flash.ui:Keyboard:KEYNAME_USER"/>
                <string name="K" object="[flash.ui.Keyboard]" text="Keyboard.K" constant="true" tiptext="Constant associated with the key code value for the K key (75)." version="" playername="AIR" helpurl="flash.ui:Keyboard:K"/>
                <string name="LAST" object="[flash.ui.Keyboard]" text="Keyboard.LAST" constant="true" tiptext="Watch last channel or show watched" version="" playername="AIR" helpurl="flash.ui:Keyboard:LAST"/>
                <string name="LEFTBRACKET" object="[flash.ui.Keyboard]" text="Keyboard.LEFTBRACKET" constant="true" tiptext="Constant associated with the key code value for the [ key (219)." version="" playername="AIR" helpurl="flash.ui:Keyboard:LEFTBRACKET"/>
                <string name="LEFT" object="[flash.ui.Keyboard]" text="Keyboard.LEFT" constant="true" tiptext="Constant associated with the key code value for the Left Arrow key (37)." version="" playername="" helpurl="flash.ui:Keyboard:LEFT"/>
                <string name="LIVE" object="[flash.ui.Keyboard]" text="Keyboard.LIVE" constant="true" tiptext="Return to live [position in broadcast]" version="" playername="AIR" helpurl="flash.ui:Keyboard:LIVE"/>
                <string name="L" object="[flash.ui.Keyboard]" text="Keyboard.L" constant="true" tiptext="Constant associated with the key code value for the L key (76)." version="" playername="AIR" helpurl="flash.ui:Keyboard:L"/>
                <string name="MASTER_SHELL" object="[flash.ui.Keyboard]" text="Keyboard.MASTER_SHELL" constant="true" tiptext="Engage &quot;Master Shell&quot; e.g." version="" playername="AIR" helpurl="flash.ui:Keyboard:MASTER_SHELL"/>
                <string name="MENU" object="[flash.ui.Keyboard]" text="Keyboard.MENU" constant="true" tiptext="Engage menu" version="" playername="AIR" helpurl="flash.ui:Keyboard:MENU"/>
                <string name="MINUS" object="[flash.ui.Keyboard]" text="Keyboard.MINUS" constant="true" tiptext="Constant associated with the key code value for the - key (189)." version="" playername="AIR" helpurl="flash.ui:Keyboard:MINUS"/>
                <string name="M" object="[flash.ui.Keyboard]" text="Keyboard.M" constant="true" tiptext="Constant associated with the key code value for the M key (77)." version="" playername="AIR" helpurl="flash.ui:Keyboard:M"/>
                <string name="NEXT" object="[flash.ui.Keyboard]" text="Keyboard.NEXT" constant="true" tiptext="Skip to next track or chapter" version="" playername="AIR" helpurl="flash.ui:Keyboard:NEXT"/>
                <string name="NUMBER_0" object="[flash.ui.Keyboard]" text="Keyboard.NUMBER_0" constant="true" tiptext="Constant associated with the key code value for the 0 key (48)." version="" playername="AIR" helpurl="flash.ui:Keyboard:NUMBER_0"/>
                <string name="NUMBER_1" object="[flash.ui.Keyboard]" text="Keyboard.NUMBER_1" constant="true" tiptext="Constant associated with the key code value for the 1 key (49)." version="" playername="AIR" helpurl="flash.ui:Keyboard:NUMBER_1"/>
                <string name="NUMBER_2" object="[flash.ui.Keyboard]" text="Keyboard.NUMBER_2" constant="true" tiptext="Constant associated with the key code value for the 2 key (50)." version="" playername="AIR" helpurl="flash.ui:Keyboard:NUMBER_2"/>
                <string name="NUMBER_3" object="[flash.ui.Keyboard]" text="Keyboard.NUMBER_3" constant="true" tiptext="Constant associated with the key code value for the 3 key (51)." version="" playername="AIR" helpurl="flash.ui:Keyboard:NUMBER_3"/>
                <string name="NUMBER_4" object="[flash.ui.Keyboard]" text="Keyboard.NUMBER_4" constant="true" tiptext="Constant associated with the key code value for the 4 key (52)." version="" playername="AIR" helpurl="flash.ui:Keyboard:NUMBER_4"/>
                <string name="NUMBER_5" object="[flash.ui.Keyboard]" text="Keyboard.NUMBER_5" constant="true" tiptext="Constant associated with the key code value for the 5 key (53)." version="" playername="AIR" helpurl="flash.ui:Keyboard:NUMBER_5"/>
                <string name="NUMBER_6" object="[flash.ui.Keyboard]" text="Keyboard.NUMBER_6" constant="true" tiptext="Constant associated with the key code value for the 6 key (54)." version="" playername="AIR" helpurl="flash.ui:Keyboard:NUMBER_6"/>
                <string name="NUMBER_7" object="[flash.ui.Keyboard]" text="Keyboard.NUMBER_7" constant="true" tiptext="Constant associated with the key code value for the 7 key (55)." version="" playername="AIR" helpurl="flash.ui:Keyboard:NUMBER_7"/>
                <string name="NUMBER_8" object="[flash.ui.Keyboard]" text="Keyboard.NUMBER_8" constant="true" tiptext="Constant associated with the key code value for the 8 key (56)." version="" playername="AIR" helpurl="flash.ui:Keyboard:NUMBER_8"/>
                <string name="NUMBER_9" object="[flash.ui.Keyboard]" text="Keyboard.NUMBER_9" constant="true" tiptext="Constant associated with the key code value for the 9 key (57)." version="" playername="AIR" helpurl="flash.ui:Keyboard:NUMBER_9"/>
                <string name="NUMPAD_0" object="[flash.ui.Keyboard]" text="Keyboard.NUMPAD_0" constant="true" tiptext="Constant associated with the key code value for the number 0 key on the number pad (96)." version="" playername="" helpurl="flash.ui:Keyboard:NUMPAD_0"/>
                <string name="NUMPAD_1" object="[flash.ui.Keyboard]" text="Keyboard.NUMPAD_1" constant="true" tiptext="Constant associated with the key code value for the number 1 key on the number pad (97)." version="" playername="" helpurl="flash.ui:Keyboard:NUMPAD_1"/>
                <string name="NUMPAD_2" object="[flash.ui.Keyboard]" text="Keyboard.NUMPAD_2" constant="true" tiptext="Constant associated with the key code value for the number 2 key on the number pad (98)." version="" playername="" helpurl="flash.ui:Keyboard:NUMPAD_2"/>
                <string name="NUMPAD_3" object="[flash.ui.Keyboard]" text="Keyboard.NUMPAD_3" constant="true" tiptext="Constant associated with the key code value for the number 3 key on the number pad (99)." version="" playername="" helpurl="flash.ui:Keyboard:NUMPAD_3"/>
                <string name="NUMPAD_4" object="[flash.ui.Keyboard]" text="Keyboard.NUMPAD_4" constant="true" tiptext="Constant associated with the key code value for the number 4 key on the number pad (100)." version="" playername="" helpurl="flash.ui:Keyboard:NUMPAD_4"/>
                <string name="NUMPAD_5" object="[flash.ui.Keyboard]" text="Keyboard.NUMPAD_5" constant="true" tiptext="Constant associated with the key code value for the number 5 key on the number pad (101)." version="" playername="" helpurl="flash.ui:Keyboard:NUMPAD_5"/>
                <string name="NUMPAD_6" object="[flash.ui.Keyboard]" text="Keyboard.NUMPAD_6" constant="true" tiptext="Constant associated with the key code value for the number 6 key on the number pad (102)." version="" playername="" helpurl="flash.ui:Keyboard:NUMPAD_6"/>
                <string name="NUMPAD_7" object="[flash.ui.Keyboard]" text="Keyboard.NUMPAD_7" constant="true" tiptext="Constant associated with the key code value for the number 7 key on the number pad (103)." version="" playername="" helpurl="flash.ui:Keyboard:NUMPAD_7"/>
                <string name="NUMPAD_8" object="[flash.ui.Keyboard]" text="Keyboard.NUMPAD_8" constant="true" tiptext="Constant associated with the key code value for the number 8 key on the number pad (104)." version="" playername="" helpurl="flash.ui:Keyboard:NUMPAD_8"/>
                <string name="NUMPAD_9" object="[flash.ui.Keyboard]" text="Keyboard.NUMPAD_9" constant="true" tiptext="Constant associated with the key code value for the number 9 key on the number pad (105)." version="" playername="" helpurl="flash.ui:Keyboard:NUMPAD_9"/>
                <string name="NUMPAD_ADD" object="[flash.ui.Keyboard]" text="Keyboard.NUMPAD_ADD" constant="true" tiptext="Constant associated with the key code value for the addition key on the number pad (107)." version="" playername="" helpurl="flash.ui:Keyboard:NUMPAD_ADD"/>
                <string name="NUMPAD_DECIMAL" object="[flash.ui.Keyboard]" text="Keyboard.NUMPAD_DECIMAL" constant="true" tiptext="Constant associated with the key code value for the decimal key on the number pad (110)." version="" playername="" helpurl="flash.ui:Keyboard:NUMPAD_DECIMAL"/>
                <string name="NUMPAD_DIVIDE" object="[flash.ui.Keyboard]" text="Keyboard.NUMPAD_DIVIDE" constant="true" tiptext="Constant associated with the key code value for the division key on the number pad (111)." version="" playername="" helpurl="flash.ui:Keyboard:NUMPAD_DIVIDE"/>
                <string name="NUMPAD_ENTER" object="[flash.ui.Keyboard]" text="Keyboard.NUMPAD_ENTER" constant="true" tiptext="Constant associated with the key code value for the Enter key on the number pad (108)." version="" playername="" helpurl="flash.ui:Keyboard:NUMPAD_ENTER"/>
                <string name="NUMPAD_MULTIPLY" object="[flash.ui.Keyboard]" text="Keyboard.NUMPAD_MULTIPLY" constant="true" tiptext="Constant associated with the key code value for the multiplication key on the number pad (106)." version="" playername="" helpurl="flash.ui:Keyboard:NUMPAD_MULTIPLY"/>
                <string name="NUMPAD_SUBTRACT" object="[flash.ui.Keyboard]" text="Keyboard.NUMPAD_SUBTRACT" constant="true" tiptext="Constant associated with the key code value for the subtraction key on the number pad (109)." version="" playername="" helpurl="flash.ui:Keyboard:NUMPAD_SUBTRACT"/>
                <string name="NUMPAD" object="[flash.ui.Keyboard]" text="Keyboard.NUMPAD" constant="true" tiptext="Constant associated with the pseudo-key code for the the number pad (21)." version="" playername="AIR" helpurl="flash.ui:Keyboard:NUMPAD"/>
                <string name="N" object="[flash.ui.Keyboard]" text="Keyboard.N" constant="true" tiptext="Constant associated with the key code value for the N key (78)." version="" playername="AIR" helpurl="flash.ui:Keyboard:N"/>
                <string name="O" object="[flash.ui.Keyboard]" text="Keyboard.O" constant="true" tiptext="Constant associated with the key code value for the O key (79)." version="" playername="AIR" helpurl="flash.ui:Keyboard:O"/>
                <string name="PAGE_DOWN" object="[flash.ui.Keyboard]" text="Keyboard.PAGE_DOWN" constant="true" tiptext="Constant associated with the key code value for the Page Down key (34)." version="" playername="" helpurl="flash.ui:Keyboard:PAGE_DOWN"/>
                <string name="PAGE_UP" object="[flash.ui.Keyboard]" text="Keyboard.PAGE_UP" constant="true" tiptext="Constant associated with the key code value for the Page Up key (33)." version="" playername="" helpurl="flash.ui:Keyboard:PAGE_UP"/>
                <string name="PAUSE" object="[flash.ui.Keyboard]" text="Keyboard.PAUSE" constant="true" tiptext="Engage pause transport mode" version="" playername="AIR" helpurl="flash.ui:Keyboard:PAUSE"/>
                <string name="PERIOD" object="[flash.ui.Keyboard]" text="Keyboard.PERIOD" constant="true" tiptext="Constant associated with the key code value for the ." version="" playername="AIR" helpurl="flash.ui:Keyboard:PERIOD"/>
                <string name="PLAY" object="[flash.ui.Keyboard]" text="Keyboard.PLAY" constant="true" tiptext="Engage play transport mode" version="" playername="AIR" helpurl="flash.ui:Keyboard:PLAY"/>
                <string name="PREVIOUS" object="[flash.ui.Keyboard]" text="Keyboard.PREVIOUS" constant="true" tiptext="Skip to previous track or chapter" version="" playername="AIR" helpurl="flash.ui:Keyboard:PREVIOUS"/>
                <string name="P" object="[flash.ui.Keyboard]" text="Keyboard.P" constant="true" tiptext="Constant associated with the key code value for the P key (80)." version="" playername="AIR" helpurl="flash.ui:Keyboard:P"/>
                <string name="QUOTE" object="[flash.ui.Keyboard]" text="Keyboard.QUOTE" constant="true" tiptext="Constant associated with the key code value for the &apos; key (222)." version="" playername="AIR" helpurl="flash.ui:Keyboard:QUOTE"/>
                <string name="Q" object="[flash.ui.Keyboard]" text="Keyboard.Q" constant="true" tiptext="Constant associated with the key code value for the Q key (81)." version="" playername="AIR" helpurl="flash.ui:Keyboard:Q"/>
                <string name="RECORD" object="[flash.ui.Keyboard]" text="Keyboard.RECORD" constant="true" tiptext="Record item or engage record transport mode" version="" playername="AIR" helpurl="flash.ui:Keyboard:RECORD"/>
                <string name="RED" object="[flash.ui.Keyboard]" text="Keyboard.RED" constant="true" tiptext="Red function key button" version="" playername="AIR" helpurl="flash.ui:Keyboard:RED"/>
                <string name="REWIND" object="[flash.ui.Keyboard]" text="Keyboard.REWIND" constant="true" tiptext="Engage rewind transport mode" version="" playername="AIR" helpurl="flash.ui:Keyboard:REWIND"/>
                <string name="RIGHTBRACKET" object="[flash.ui.Keyboard]" text="Keyboard.RIGHTBRACKET" constant="true" tiptext="Constant associated with the key code value for the ] key (221)." version="" playername="AIR" helpurl="flash.ui:Keyboard:RIGHTBRACKET"/>
                <string name="RIGHT" object="[flash.ui.Keyboard]" text="Keyboard.RIGHT" constant="true" tiptext="Constant associated with the key code value for the Right Arrow key (39)." version="" playername="" helpurl="flash.ui:Keyboard:RIGHT"/>
                <string name="R" object="[flash.ui.Keyboard]" text="Keyboard.R" constant="true" tiptext="Constant associated with the key code value for the R key (82)." version="" playername="AIR" helpurl="flash.ui:Keyboard:R"/>
                <string name="SEARCH" object="[flash.ui.Keyboard]" text="Keyboard.SEARCH" constant="true" tiptext="Search button" version="" playername="AIR" helpurl="flash.ui:Keyboard:SEARCH"/>
                <string name="SEMICOLON" object="[flash.ui.Keyboard]" text="Keyboard.SEMICOLON" constant="true" tiptext="Constant associated with the key code value for the ; key (186)." version="" playername="AIR" helpurl="flash.ui:Keyboard:SEMICOLON"/>
                <string name="SETUP" object="[flash.ui.Keyboard]" text="Keyboard.SETUP" constant="true" tiptext="Engage setup application or menu" version="" playername="AIR" helpurl="flash.ui:Keyboard:SETUP"/>
                <string name="SHIFT" object="[flash.ui.Keyboard]" text="Keyboard.SHIFT" constant="true" tiptext="Constant associated with the key code value for the Shift key (16)." version="" playername="" helpurl="flash.ui:Keyboard:SHIFT"/>
                <string name="SKIP_BACKWARD" object="[flash.ui.Keyboard]" text="Keyboard.SKIP_BACKWARD" constant="true" tiptext="Quick skip backward (usually 7-10 seconds)" version="" playername="AIR" helpurl="flash.ui:Keyboard:SKIP_BACKWARD"/>
                <string name="SKIP_FORWARD" object="[flash.ui.Keyboard]" text="Keyboard.SKIP_FORWARD" constant="true" tiptext="Quick skip ahead (usually 30 seconds)" version="" playername="AIR" helpurl="flash.ui:Keyboard:SKIP_FORWARD"/>
                <string name="SLASH" object="[flash.ui.Keyboard]" text="Keyboard.SLASH" constant="true" tiptext="Constant associated with the key code value for the / key (191)." version="" playername="AIR" helpurl="flash.ui:Keyboard:SLASH"/>
                <string name="SPACE" object="[flash.ui.Keyboard]" text="Keyboard.SPACE" constant="true" tiptext="Constant associated with the key code value for the Spacebar (32)." version="" playername="" helpurl="flash.ui:Keyboard:SPACE"/>
                <string name="STOP" object="[flash.ui.Keyboard]" text="Keyboard.STOP" constant="true" tiptext="Engage stop transport mode" version="" playername="AIR" helpurl="flash.ui:Keyboard:STOP"/>
                <string name="STRING_BEGIN" object="[flash.ui.Keyboard]" text="Keyboard.STRING_BEGIN" constant="true" tiptext="The OS X Unicode Begin constant" version="" playername="AIR" helpurl="flash.ui:Keyboard:STRING_BEGIN"/>
                <string name="STRING_BREAK" object="[flash.ui.Keyboard]" text="Keyboard.STRING_BREAK" constant="true" tiptext="The OS X Unicode Break constant" version="" playername="AIR" helpurl="flash.ui:Keyboard:STRING_BREAK"/>
                <string name="STRING_CLEARDISPLAY" object="[flash.ui.Keyboard]" text="Keyboard.STRING_CLEARDISPLAY" constant="true" tiptext="The OS X Unicode Clear Display constant" version="" playername="AIR" helpurl="flash.ui:Keyboard:STRING_CLEARDISPLAY"/>
                <string name="STRING_CLEARLINE" object="[flash.ui.Keyboard]" text="Keyboard.STRING_CLEARLINE" constant="true" tiptext="The OS X Unicode Clear Line constant" version="" playername="AIR" helpurl="flash.ui:Keyboard:STRING_CLEARLINE"/>
                <string name="STRING_DELETECHAR" object="[flash.ui.Keyboard]" text="Keyboard.STRING_DELETECHAR" constant="true" tiptext="The OS X Unicode Delete Character constant" version="" playername="AIR" helpurl="flash.ui:Keyboard:STRING_DELETECHAR"/>
                <string name="STRING_DELETELINE" object="[flash.ui.Keyboard]" text="Keyboard.STRING_DELETELINE" constant="true" tiptext="The OS X Unicode Delete Line constant" version="" playername="AIR" helpurl="flash.ui:Keyboard:STRING_DELETELINE"/>
                <string name="STRING_DELETE" object="[flash.ui.Keyboard]" text="Keyboard.STRING_DELETE" constant="true" tiptext="The OS X Unicode Delete constant" version="" playername="AIR" helpurl="flash.ui:Keyboard:STRING_DELETE"/>
                <string name="STRING_DOWNARROW" object="[flash.ui.Keyboard]" text="Keyboard.STRING_DOWNARROW" constant="true" tiptext="The OS X Unicode down arrow constant" version="" playername="AIR" helpurl="flash.ui:Keyboard:STRING_DOWNARROW"/>
                <string name="STRING_END" object="[flash.ui.Keyboard]" text="Keyboard.STRING_END" constant="true" tiptext="The OS X Unicode End constant" version="" playername="AIR" helpurl="flash.ui:Keyboard:STRING_END"/>
                <string name="STRING_EXECUTE" object="[flash.ui.Keyboard]" text="Keyboard.STRING_EXECUTE" constant="true" tiptext="The OS X Unicode Execute constant" version="" playername="AIR" helpurl="flash.ui:Keyboard:STRING_EXECUTE"/>
                <string name="STRING_F10" object="[flash.ui.Keyboard]" text="Keyboard.STRING_F10" constant="true" tiptext="The OS X Unicode F10 constant" version="" playername="AIR" helpurl="flash.ui:Keyboard:STRING_F10"/>
                <string name="STRING_F11" object="[flash.ui.Keyboard]" text="Keyboard.STRING_F11" constant="true" tiptext="The OS X Unicode F11 constant" version="" playername="AIR" helpurl="flash.ui:Keyboard:STRING_F11"/>
                <string name="STRING_F12" object="[flash.ui.Keyboard]" text="Keyboard.STRING_F12" constant="true" tiptext="The OS X Unicode F12 constant" version="" playername="AIR" helpurl="flash.ui:Keyboard:STRING_F12"/>
                <string name="STRING_F13" object="[flash.ui.Keyboard]" text="Keyboard.STRING_F13" constant="true" tiptext="The OS X Unicode F13 constant" version="" playername="AIR" helpurl="flash.ui:Keyboard:STRING_F13"/>
                <string name="STRING_F14" object="[flash.ui.Keyboard]" text="Keyboard.STRING_F14" constant="true" tiptext="The OS X Unicode F14 constant" version="" playername="AIR" helpurl="flash.ui:Keyboard:STRING_F14"/>
                <string name="STRING_F15" object="[flash.ui.Keyboard]" text="Keyboard.STRING_F15" constant="true" tiptext="The OS X Unicode F15 constant" version="" playername="AIR" helpurl="flash.ui:Keyboard:STRING_F15"/>
                <string name="STRING_F16" object="[flash.ui.Keyboard]" text="Keyboard.STRING_F16" constant="true" tiptext="The OS X Unicode F16 constant" version="" playername="AIR" helpurl="flash.ui:Keyboard:STRING_F16"/>
                <string name="STRING_F17" object="[flash.ui.Keyboard]" text="Keyboard.STRING_F17" constant="true" tiptext="The OS X Unicode F17 constant" version="" playername="AIR" helpurl="flash.ui:Keyboard:STRING_F17"/>
                <string name="STRING_F18" object="[flash.ui.Keyboard]" text="Keyboard.STRING_F18" constant="true" tiptext="The OS X Unicode F18 constant" version="" playername="AIR" helpurl="flash.ui:Keyboard:STRING_F18"/>
                <string name="STRING_F19" object="[flash.ui.Keyboard]" text="Keyboard.STRING_F19" constant="true" tiptext="The OS X Unicode F19 constant" version="" playername="AIR" helpurl="flash.ui:Keyboard:STRING_F19"/>
                <string name="STRING_F1" object="[flash.ui.Keyboard]" text="Keyboard.STRING_F1" constant="true" tiptext="The OS X Unicode F1 constant" version="" playername="AIR" helpurl="flash.ui:Keyboard:STRING_F1"/>
                <string name="STRING_F20" object="[flash.ui.Keyboard]" text="Keyboard.STRING_F20" constant="true" tiptext="The OS X Unicode F20 constant" version="" playername="AIR" helpurl="flash.ui:Keyboard:STRING_F20"/>
                <string name="STRING_F21" object="[flash.ui.Keyboard]" text="Keyboard.STRING_F21" constant="true" tiptext="The OS X Unicode F21 constant" version="" playername="AIR" helpurl="flash.ui:Keyboard:STRING_F21"/>
                <string name="STRING_F22" object="[flash.ui.Keyboard]" text="Keyboard.STRING_F22" constant="true" tiptext="The OS X Unicode F22 constant" version="" playername="AIR" helpurl="flash.ui:Keyboard:STRING_F22"/>
                <string name="STRING_F23" object="[flash.ui.Keyboard]" text="Keyboard.STRING_F23" constant="true" tiptext="The OS X Unicode F23 constant" version="" playername="AIR" helpurl="flash.ui:Keyboard:STRING_F23"/>
                <string name="STRING_F24" object="[flash.ui.Keyboard]" text="Keyboard.STRING_F24" constant="true" tiptext="The OS X Unicode F24 constant" version="" playername="AIR" helpurl="flash.ui:Keyboard:STRING_F24"/>
                <string name="STRING_F25" object="[flash.ui.Keyboard]" text="Keyboard.STRING_F25" constant="true" tiptext="The OS X Unicode F25 constant" version="" playername="AIR" helpurl="flash.ui:Keyboard:STRING_F25"/>
                <string name="STRING_F26" object="[flash.ui.Keyboard]" text="Keyboard.STRING_F26" constant="true" tiptext="The OS X Unicode F26 constant" version="" playername="AIR" helpurl="flash.ui:Keyboard:STRING_F26"/>
                <string name="STRING_F27" object="[flash.ui.Keyboard]" text="Keyboard.STRING_F27" constant="true" tiptext="The OS X Unicode F27 constant" version="" playername="AIR" helpurl="flash.ui:Keyboard:STRING_F27"/>
                <string name="STRING_F28" object="[flash.ui.Keyboard]" text="Keyboard.STRING_F28" constant="true" tiptext="The OS X Unicode F28 constant" version="" playername="AIR" helpurl="flash.ui:Keyboard:STRING_F28"/>
                <string name="STRING_F29" object="[flash.ui.Keyboard]" text="Keyboard.STRING_F29" constant="true" tiptext="The OS X Unicode F29 constant" version="" playername="AIR" helpurl="flash.ui:Keyboard:STRING_F29"/>
                <string name="STRING_F2" object="[flash.ui.Keyboard]" text="Keyboard.STRING_F2" constant="true" tiptext="The OS X Unicode F2 constant" version="" playername="AIR" helpurl="flash.ui:Keyboard:STRING_F2"/>
                <string name="STRING_F30" object="[flash.ui.Keyboard]" text="Keyboard.STRING_F30" constant="true" tiptext="The OS X Unicode F30 constant" version="" playername="AIR" helpurl="flash.ui:Keyboard:STRING_F30"/>
                <string name="STRING_F31" object="[flash.ui.Keyboard]" text="Keyboard.STRING_F31" constant="true" tiptext="The OS X Unicode F31 constant" version="" playername="AIR" helpurl="flash.ui:Keyboard:STRING_F31"/>
                <string name="STRING_F32" object="[flash.ui.Keyboard]" text="Keyboard.STRING_F32" constant="true" tiptext="The OS X Unicode F32 constant" version="" playername="AIR" helpurl="flash.ui:Keyboard:STRING_F32"/>
                <string name="STRING_F33" object="[flash.ui.Keyboard]" text="Keyboard.STRING_F33" constant="true" tiptext="The OS X Unicode F33 constant" version="" playername="AIR" helpurl="flash.ui:Keyboard:STRING_F33"/>
                <string name="STRING_F34" object="[flash.ui.Keyboard]" text="Keyboard.STRING_F34" constant="true" tiptext="The OS X Unicode F34 constant" version="" playername="AIR" helpurl="flash.ui:Keyboard:STRING_F34"/>
                <string name="STRING_F35" object="[flash.ui.Keyboard]" text="Keyboard.STRING_F35" constant="true" tiptext="The OS X Unicode F35 constant" version="" playername="AIR" helpurl="flash.ui:Keyboard:STRING_F35"/>
                <string name="STRING_F3" object="[flash.ui.Keyboard]" text="Keyboard.STRING_F3" constant="true" tiptext="The OS X Unicode F3 constant" version="" playername="AIR" helpurl="flash.ui:Keyboard:STRING_F3"/>
                <string name="STRING_F4" object="[flash.ui.Keyboard]" text="Keyboard.STRING_F4" constant="true" tiptext="The OS X Unicode F4 constant" version="" playername="AIR" helpurl="flash.ui:Keyboard:STRING_F4"/>
                <string name="STRING_F5" object="[flash.ui.Keyboard]" text="Keyboard.STRING_F5" constant="true" tiptext="The OS X Unicode F5 constant" version="" playername="AIR" helpurl="flash.ui:Keyboard:STRING_F5"/>
                <string name="STRING_F6" object="[flash.ui.Keyboard]" text="Keyboard.STRING_F6" constant="true" tiptext="The OS X Unicode F6 constant" version="" playername="AIR" helpurl="flash.ui:Keyboard:STRING_F6"/>
                <string name="STRING_F7" object="[flash.ui.Keyboard]" text="Keyboard.STRING_F7" constant="true" tiptext="The OS X Unicode F7 constant" version="" playername="AIR" helpurl="flash.ui:Keyboard:STRING_F7"/>
                <string name="STRING_F8" object="[flash.ui.Keyboard]" text="Keyboard.STRING_F8" constant="true" tiptext="The OS X Unicode F8 constant" version="" playername="AIR" helpurl="flash.ui:Keyboard:STRING_F8"/>
                <string name="STRING_F9" object="[flash.ui.Keyboard]" text="Keyboard.STRING_F9" constant="true" tiptext="The OS X Unicode F9 constant" version="" playername="AIR" helpurl="flash.ui:Keyboard:STRING_F9"/>
                <string name="STRING_FIND" object="[flash.ui.Keyboard]" text="Keyboard.STRING_FIND" constant="true" tiptext="The OS X Unicode Find constant" version="" playername="AIR" helpurl="flash.ui:Keyboard:STRING_FIND"/>
                <string name="STRING_HELP" object="[flash.ui.Keyboard]" text="Keyboard.STRING_HELP" constant="true" tiptext="The OS X Unicode Help constant" version="" playername="AIR" helpurl="flash.ui:Keyboard:STRING_HELP"/>
                <string name="STRING_HOME" object="[flash.ui.Keyboard]" text="Keyboard.STRING_HOME" constant="true" tiptext="The OS X Unicode Home constant" version="" playername="AIR" helpurl="flash.ui:Keyboard:STRING_HOME"/>
                <string name="STRING_INSERTCHAR" object="[flash.ui.Keyboard]" text="Keyboard.STRING_INSERTCHAR" constant="true" tiptext="The OS X Unicode Insert Character constant" version="" playername="AIR" helpurl="flash.ui:Keyboard:STRING_INSERTCHAR"/>
                <string name="STRING_INSERTLINE" object="[flash.ui.Keyboard]" text="Keyboard.STRING_INSERTLINE" constant="true" tiptext="The OS X Unicode Insert Line constant" version="" playername="AIR" helpurl="flash.ui:Keyboard:STRING_INSERTLINE"/>
                <string name="STRING_INSERT" object="[flash.ui.Keyboard]" text="Keyboard.STRING_INSERT" constant="true" tiptext="The OS X Unicode Insert constant" version="" playername="AIR" helpurl="flash.ui:Keyboard:STRING_INSERT"/>
                <string name="STRING_LEFTARROW" object="[flash.ui.Keyboard]" text="Keyboard.STRING_LEFTARROW" constant="true" tiptext="The OS X Unicode left arrow constant" version="" playername="AIR" helpurl="flash.ui:Keyboard:STRING_LEFTARROW"/>
                <string name="STRING_MENU" object="[flash.ui.Keyboard]" text="Keyboard.STRING_MENU" constant="true" tiptext="The OS X Unicode Menu constant" version="" playername="AIR" helpurl="flash.ui:Keyboard:STRING_MENU"/>
                <string name="STRING_MODESWITCH" object="[flash.ui.Keyboard]" text="Keyboard.STRING_MODESWITCH" constant="true" tiptext="The OS X Unicode Mode Switch constant" version="" playername="AIR" helpurl="flash.ui:Keyboard:STRING_MODESWITCH"/>
                <string name="STRING_NEXT" object="[flash.ui.Keyboard]" text="Keyboard.STRING_NEXT" constant="true" tiptext="The OS X Unicode Next constant" version="" playername="AIR" helpurl="flash.ui:Keyboard:STRING_NEXT"/>
                <string name="STRING_PAGEDOWN" object="[flash.ui.Keyboard]" text="Keyboard.STRING_PAGEDOWN" constant="true" tiptext="The OS X Unicode Page Down constant" version="" playername="AIR" helpurl="flash.ui:Keyboard:STRING_PAGEDOWN"/>
                <string name="STRING_PAGEUP" object="[flash.ui.Keyboard]" text="Keyboard.STRING_PAGEUP" constant="true" tiptext="The OS X Unicode Page Up constant" version="" playername="AIR" helpurl="flash.ui:Keyboard:STRING_PAGEUP"/>
                <string name="STRING_PAUSE" object="[flash.ui.Keyboard]" text="Keyboard.STRING_PAUSE" constant="true" tiptext="The OS X Unicode Pause constant" version="" playername="AIR" helpurl="flash.ui:Keyboard:STRING_PAUSE"/>
                <string name="STRING_PREV" object="[flash.ui.Keyboard]" text="Keyboard.STRING_PREV" constant="true" tiptext="The OS X Unicode Previous constant" version="" playername="AIR" helpurl="flash.ui:Keyboard:STRING_PREV"/>
                <string name="STRING_PRINTSCREEN" object="[flash.ui.Keyboard]" text="Keyboard.STRING_PRINTSCREEN" constant="true" tiptext="The OS X Unicode Print Screen constant" version="" playername="AIR" helpurl="flash.ui:Keyboard:STRING_PRINTSCREEN"/>
                <string name="STRING_PRINT" object="[flash.ui.Keyboard]" text="Keyboard.STRING_PRINT" constant="true" tiptext="The OS X Unicode Print constant" version="" playername="AIR" helpurl="flash.ui:Keyboard:STRING_PRINT"/>
                <string name="STRING_REDO" object="[flash.ui.Keyboard]" text="Keyboard.STRING_REDO" constant="true" tiptext="The OS X Unicode Redo constant" version="" playername="AIR" helpurl="flash.ui:Keyboard:STRING_REDO"/>
                <string name="STRING_RESET" object="[flash.ui.Keyboard]" text="Keyboard.STRING_RESET" constant="true" tiptext="The OS X Unicode Reset constant" version="" playername="AIR" helpurl="flash.ui:Keyboard:STRING_RESET"/>
                <string name="STRING_RIGHTARROW" object="[flash.ui.Keyboard]" text="Keyboard.STRING_RIGHTARROW" constant="true" tiptext="The OS X Unicode right arrow constant" version="" playername="AIR" helpurl="flash.ui:Keyboard:STRING_RIGHTARROW"/>
                <string name="STRING_SCROLLLOCK" object="[flash.ui.Keyboard]" text="Keyboard.STRING_SCROLLLOCK" constant="true" tiptext="The OS X Unicode Scroll Lock constant" version="" playername="AIR" helpurl="flash.ui:Keyboard:STRING_SCROLLLOCK"/>
                <string name="STRING_SELECT" object="[flash.ui.Keyboard]" text="Keyboard.STRING_SELECT" constant="true" tiptext="The OS X Unicode Select constant" version="" playername="AIR" helpurl="flash.ui:Keyboard:STRING_SELECT"/>
                <string name="STRING_STOP" object="[flash.ui.Keyboard]" text="Keyboard.STRING_STOP" constant="true" tiptext="The OS X Unicode Stop constant" version="" playername="AIR" helpurl="flash.ui:Keyboard:STRING_STOP"/>
                <string name="STRING_SYSREQ" object="[flash.ui.Keyboard]" text="Keyboard.STRING_SYSREQ" constant="true" tiptext="The OS X Unicode System Request constant" version="" playername="AIR" helpurl="flash.ui:Keyboard:STRING_SYSREQ"/>
                <string name="STRING_SYSTEM" object="[flash.ui.Keyboard]" text="Keyboard.STRING_SYSTEM" constant="true" tiptext="The OS X Unicode System constant" version="" playername="AIR" helpurl="flash.ui:Keyboard:STRING_SYSTEM"/>
                <string name="STRING_UNDO" object="[flash.ui.Keyboard]" text="Keyboard.STRING_UNDO" constant="true" tiptext="The OS X Unicode Undo constant" version="" playername="AIR" helpurl="flash.ui:Keyboard:STRING_UNDO"/>
                <string name="STRING_UPARROW" object="[flash.ui.Keyboard]" text="Keyboard.STRING_UPARROW" constant="true" tiptext="The OS X Unicode up arrow constant" version="" playername="AIR" helpurl="flash.ui:Keyboard:STRING_UPARROW"/>
                <string name="STRING_USER" object="[flash.ui.Keyboard]" text="Keyboard.STRING_USER" constant="true" tiptext="The OS X Unicode User constant" version="" playername="AIR" helpurl="flash.ui:Keyboard:STRING_USER"/>
                <string name="SUBTITLE" object="[flash.ui.Keyboard]" text="Keyboard.SUBTITLE" constant="true" tiptext="Toggle subtitles" version="" playername="AIR" helpurl="flash.ui:Keyboard:SUBTITLE"/>
                <string name="S" object="[flash.ui.Keyboard]" text="Keyboard.S" constant="true" tiptext="Constant associated with the key code value for the S key (83)." version="" playername="AIR" helpurl="flash.ui:Keyboard:S"/>
                <string name="TAB" object="[flash.ui.Keyboard]" text="Keyboard.TAB" constant="true" tiptext="Constant associated with the key code value for the Tab key (9)." version="" playername="" helpurl="flash.ui:Keyboard:TAB"/>
                <string name="T" object="[flash.ui.Keyboard]" text="Keyboard.T" constant="true" tiptext="Constant associated with the key code value for the T key (84)." version="" playername="AIR" helpurl="flash.ui:Keyboard:T"/>
                <string name="UP" object="[flash.ui.Keyboard]" text="Keyboard.UP" constant="true" tiptext="Constant associated with the key code value for the Up Arrow key (38)." version="" playername="" helpurl="flash.ui:Keyboard:UP"/>
                <string name="U" object="[flash.ui.Keyboard]" text="Keyboard.U" constant="true" tiptext="Constant associated with the key code value for the U key (85)." version="" playername="AIR" helpurl="flash.ui:Keyboard:U"/>
                <string name="VOD" object="[flash.ui.Keyboard]" text="Keyboard.VOD" constant="true" tiptext="Engage video-on-demand" version="" playername="AIR" helpurl="flash.ui:Keyboard:VOD"/>
                <string name="V" object="[flash.ui.Keyboard]" text="Keyboard.V" constant="true" tiptext="Constant associated with the key code value for the V key (86)." version="" playername="AIR" helpurl="flash.ui:Keyboard:V"/>
                <string name="W" object="[flash.ui.Keyboard]" text="Keyboard.W" constant="true" tiptext="Constant associated with the key code value for the W key (87)." version="" playername="AIR" helpurl="flash.ui:Keyboard:W"/>
                <string name="X" object="[flash.ui.Keyboard]" text="Keyboard.X" constant="true" tiptext="Constant associated with the key code value for the X key (88)." version="" playername="AIR" helpurl="flash.ui:Keyboard:X"/>
                <string name="YELLOW" object="[flash.ui.Keyboard]" text="Keyboard.YELLOW" constant="true" tiptext="Yellow function key button" version="" playername="AIR" helpurl="flash.ui:Keyboard:YELLOW"/>
                <string name="Y" object="[flash.ui.Keyboard]" text="Keyboard.Y" constant="true" tiptext="Constant associated with the key code value for the Y key (89)." version="" playername="AIR" helpurl="flash.ui:Keyboard:Y"/>
                <string name="Z" object="[flash.ui.Keyboard]" text="Keyboard.Z" constant="true" tiptext="Constant associated with the key code value for the Z key (90)." version="" playername="AIR" helpurl="flash.ui:Keyboard:Z"/>
                <string name="capsLock" object="[flash.ui.Keyboard]" text=".capsLock" tiptext="Specifies whether the Caps Lock key is activated (true) or not (false)." version="" playername="" helpurl="flash.ui:Keyboard:capsLock:get"/>
                <string name="hasVirtualKeyboard" object="[flash.ui.Keyboard]" text=".hasVirtualKeyboard" tiptext="Indicates whether the computer or device provides a virtual keyboard." version="" playername="" helpurl="flash.ui:Keyboard:hasVirtualKeyboard:get"/>
                <string name="numLock" object="[flash.ui.Keyboard]" text=".numLock" tiptext="Specifies whether the Num Lock key is activated (true) or not (false)." version="" playername="" helpurl="flash.ui:Keyboard:numLock:get"/>
                <string name="physicalKeyboardType" object="[flash.ui.Keyboard]" text=".physicalKeyboardType" tiptext="Indicates the type of physical keyboard provided by the computer or device, if any." version="" playername="" helpurl="flash.ui:Keyboard:physicalKeyboardType:get"/>
            </folder>
        </folder>
        <folder name="KeyboardType" id="[flash.ui.KeyboardType]" sort="true" index="true" asAncestors="Object" tiptext="The KeyboardType class is an enumeration class that provides values for different categories of physical computer or device keyboards." helpurl="flash.ui:KeyboardType">
            <folder name="Properties" id="Properties" tiptext="Properties for class KeyboardType" helpurl="flash.ui:KeyboardType">
                <string name="ALPHANUMERIC" object="[flash.ui.KeyboardType]" text="KeyboardType.ALPHANUMERIC" constant="true" tiptext="A standard keyboard with a full set of numbers and letters." version="" playername="" helpurl="flash.ui:KeyboardType:ALPHANUMERIC"/>
                <string name="KEYPAD" object="[flash.ui.KeyboardType]" text="KeyboardType.KEYPAD" constant="true" tiptext="A phone-style 12-button keypad." version="" playername="" helpurl="flash.ui:KeyboardType:KEYPAD"/>
                <string name="NONE" object="[flash.ui.KeyboardType]" text="KeyboardType.NONE" constant="true" tiptext="No physical keyboard is supported." version="" playername="" helpurl="flash.ui:KeyboardType:NONE"/>
            </folder>
        </folder>
        <folder name="KeyLocation" id="[flash.ui.KeyLocation]" sort="true" index="true" asAncestors="Object" tiptext="The KeyLocation class contains constants that indicate the location of a key pressed on the keyboard or keyboard-like input device." helpurl="flash.ui:KeyLocation">
            <folder name="Properties" id="Properties" tiptext="Properties for class KeyLocation" helpurl="flash.ui:KeyLocation">
                <string name="D_PAD" object="[flash.ui.KeyLocation]" text="KeyLocation.D_PAD" constant="true" tiptext="Indicates the key activation originated on a directional pad of input device." version="" playername="AIR" helpurl="flash.ui:KeyLocation:D_PAD"/>
                <string name="LEFT" object="[flash.ui.KeyLocation]" text="KeyLocation.LEFT" constant="true" tiptext="Indicates the key activated is in the left key location (there is more than one possible location for this key)." version="" playername="" helpurl="flash.ui:KeyLocation:LEFT"/>
                <string name="NUM_PAD" object="[flash.ui.KeyLocation]" text="KeyLocation.NUM_PAD" constant="true" tiptext="Indicates the key activation originated on the numeric keypad or with a virtual key corresponding to the numeric keypad." version="" playername="" helpurl="flash.ui:KeyLocation:NUM_PAD"/>
                <string name="RIGHT" object="[flash.ui.KeyLocation]" text="KeyLocation.RIGHT" constant="true" tiptext="Indicates the key activated is in the right key location (there is more than one possible location for this key)." version="" playername="" helpurl="flash.ui:KeyLocation:RIGHT"/>
                <string name="STANDARD" object="[flash.ui.KeyLocation]" text="KeyLocation.STANDARD" constant="true" tiptext="Indicates the key activation is not distinguished as the left or right version of the key, and did not originate on the numeric keypad (or did not originate with a virtual key corresponding to the numeric keypad)." version="" playername="" helpurl="flash.ui:KeyLocation:STANDARD"/>
            </folder>
        </folder>
        <folder name="Mouse" id="[flash.ui.Mouse]" sort="true" index="true" asAncestors="Object" tiptext="" helpurl="flash.ui:Mouse">
            <folder name="Methods" id="Methods" tiptext="Methods for class Mouse" helpurl="flash.ui:Mouse">
                <string name="hide" object="[flash.ui.Mouse]" text="Mouse.hide(%%):void" static="true" tiptext="Hides the pointer." version="9" playername="" helpurl="flash.ui:Mouse:hide"/>
                <string name="registerCursor" object="[flash.ui.Mouse]" text="Mouse.registerCursor(%name:String,cursor:flash.ui:MouseCursorData%):void" static="true" tiptext="Registers a native cursor under the given name, with the given data." version="1.5" playername="" helpurl="flash.ui:Mouse:registerCursor"/>
                <string name="show" object="[flash.ui.Mouse]" text="Mouse.show(%%):void" static="true" tiptext="Displays the pointer." version="9" playername="" helpurl="flash.ui:Mouse:show"/>
                <string name="unregisterCursor" object="[flash.ui.Mouse]" text="Mouse.unregisterCursor(%name:String%):void" static="true" tiptext="Unregisters the native cursor with the given name." version="1.5" playername="" helpurl="flash.ui:Mouse:unregisterCursor"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class Mouse" helpurl="flash.ui:Mouse">
                <string name="cursor" object="[flash.ui.Mouse]" text=".cursor" tiptext="The type of cursor, or, for a native cursor, the cursor name." version="" playername="" helpurl="flash.ui:Mouse:cursor:get"/>
                <string name="supportsCursor" object="[flash.ui.Mouse]" text=".supportsCursor" tiptext="Indicates whether the computer or device displays a persistent cursor." version="" playername="" helpurl="flash.ui:Mouse:supportsCursor:get"/>
                <string name="supportsNativeCursor" object="[flash.ui.Mouse]" text=".supportsNativeCursor" tiptext="Indicates whether the current configuration supports native cursors." version="" playername="" helpurl="flash.ui:Mouse:supportsNativeCursor:get"/>
            </folder>
        </folder>
        <folder name="MouseCursor" id="[flash.ui.MouseCursor]" sort="true" index="true" asAncestors="Object" tiptext="The MouseCursor class is an enumeration of constant values used in setting the cursor property of the Mouse class." helpurl="flash.ui:MouseCursor">
            <folder name="Properties" id="Properties" tiptext="Properties for class MouseCursor" helpurl="flash.ui:MouseCursor">
                <string name="ARROW" object="[flash.ui.MouseCursor]" text="MouseCursor.ARROW" constant="true" tiptext="Used to specify that the arrow cursor should be used." version="" playername="" helpurl="flash.ui:MouseCursor:ARROW"/>
                <string name="AUTO" object="[flash.ui.MouseCursor]" text="MouseCursor.AUTO" constant="true" tiptext="Used to specify that the cursor should be selected automatically based on the object under the mouse." version="" playername="" helpurl="flash.ui:MouseCursor:AUTO"/>
                <string name="BUTTON" object="[flash.ui.MouseCursor]" text="MouseCursor.BUTTON" constant="true" tiptext="Used to specify that the button pressing hand cursor should be used." version="" playername="" helpurl="flash.ui:MouseCursor:BUTTON"/>
                <string name="HAND" object="[flash.ui.MouseCursor]" text="MouseCursor.HAND" constant="true" tiptext="Used to specify that the dragging hand cursor should be used." version="" playername="" helpurl="flash.ui:MouseCursor:HAND"/>
                <string name="IBEAM" object="[flash.ui.MouseCursor]" text="MouseCursor.IBEAM" constant="true" tiptext="Used to specify that the I-beam cursor should be used." version="" playername="" helpurl="flash.ui:MouseCursor:IBEAM"/>
            </folder>
        </folder>
        <folder name="MouseCursorData" id="[flash.ui.MouseCursorData]" sort="true" index="true" asAncestors="Object" tiptext="The MouseCursorData class provides accessors for the data that defines the appearance of a native mouse cursor, its current hot spot, and its display frame rate." helpurl="flash.ui:MouseCursorData">
            <folder name="Methods" id="Methods" tiptext="Methods for class MouseCursorData" helpurl="flash.ui:MouseCursorData">
                <string name="MouseCursorData" object="[flash.ui.MouseCursorData]" text="new MouseCursorData(%%)" constructor="true" tiptext="Constructor." version="2.6" playername="" helpurl="flash.ui:MouseCursorData:MouseCursorData"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class MouseCursorData" helpurl="flash.ui:MouseCursorData">
                <string name="data" object="[flash.ui.MouseCursorData]" text=".data" tiptext="Sets or gets the mouse icon bitmap." version="" playername="" helpurl="flash.ui:MouseCursorData:data:get"/>
                <string name="frameRate" object="[flash.ui.MouseCursorData]" text=".frameRate" tiptext="Sets or gets the mouse frame rate." version="" playername="" helpurl="flash.ui:MouseCursorData:frameRate:get"/>
                <string name="hotSpot" object="[flash.ui.MouseCursorData]" text=".hotSpot" tiptext="Sets or gets the point, or hot spot, that represents the current mouse selection." version="" playername="" helpurl="flash.ui:MouseCursorData:hotSpot:get"/>
            </folder>
        </folder>
        <folder name="Multitouch" id="[flash.ui.Multitouch]" sort="true" index="true" asAncestors="Object" tiptext="The Multitouch class manages and provides information about the current environment&apos;s support for handling contact from user input devices, including contact that has two or more touch points (such as a user&apos;s fingers on a touch screen)." helpurl="flash.ui:Multitouch">
            <folder name="Properties" id="Properties" tiptext="Properties for class Multitouch" helpurl="flash.ui:Multitouch">
                <string name="inputMode" object="[flash.ui.Multitouch]" text=".inputMode" tiptext="Identifies the multi-touch mode for touch and gesture event handling." version="" playername="" helpurl="flash.ui:Multitouch:inputMode:get"/>
                <string name="maxTouchPoints" object="[flash.ui.Multitouch]" text=".maxTouchPoints" tiptext="The maximum number of concurrent touch points supported by the current environment." version="" playername="" helpurl="flash.ui:Multitouch:maxTouchPoints:get"/>
                <string name="supportedGestures" object="[flash.ui.Multitouch]" text=".supportedGestures" tiptext="A Vector array (a typed array of string values) of multi-touch contact types supported in the current environment." version="" playername="" helpurl="flash.ui:Multitouch:supportedGestures:get"/>
                <string name="supportsGestureEvents" object="[flash.ui.Multitouch]" text=".supportsGestureEvents" tiptext="Indicates whether the current environment supports gesture input, such as rotating two fingers around a touch screen." version="" playername="" helpurl="flash.ui:Multitouch:supportsGestureEvents:get"/>
                <string name="supportsTouchEvents" object="[flash.ui.Multitouch]" text=".supportsTouchEvents" tiptext="Indicates whether the current environment supports basic touch input, such as a single finger tap." version="" playername="" helpurl="flash.ui:Multitouch:supportsTouchEvents:get"/>
            </folder>
        </folder>
        <folder name="MultitouchInputMode" id="[flash.ui.MultitouchInputMode]" sort="true" index="true" asAncestors="Object" tiptext="The MultitouchInputMode class provides values for the inputMode property in the flash.ui.Multitouch class." helpurl="flash.ui:MultitouchInputMode">
            <folder name="Properties" id="Properties" tiptext="Properties for class MultitouchInputMode" helpurl="flash.ui:MultitouchInputMode">
                <string name="GESTURE" object="[flash.ui.MultitouchInputMode]" text="MultitouchInputMode.GESTURE" constant="true" tiptext="Specifies that TransformGestureEvent, PressAndTapGestureEvent, and GestureEvent events are dispatched for the related user interaction supported by the current environment, and other touch events (such as a simple tap) are interpreted as mouse events." version="" playername="" helpurl="flash.ui:MultitouchInputMode:GESTURE"/>
                <string name="NONE" object="[flash.ui.MultitouchInputMode]" text="MultitouchInputMode.NONE" constant="true" tiptext="Specifies that all user contact with a touch-enabled device is interpreted as a type of mouse event." version="" playername="" helpurl="flash.ui:MultitouchInputMode:NONE"/>
                <string name="TOUCH_POINT" object="[flash.ui.MultitouchInputMode]" text="MultitouchInputMode.TOUCH_POINT" constant="true" tiptext="Specifies that events are dispatched only for basic touch events, such as a single finger tap." version="" playername="" helpurl="flash.ui:MultitouchInputMode:TOUCH_POINT"/>
            </folder>
        </folder>
    </folder>
        <folder name="flash.utils" id="flash.utils" sort="true" tiptext="Classes for package flash.utils" helpurl="flash.utils">
        <folder name="ByteArray" id="[flash.utils.ByteArray]" sort="true" index="true" asAncestors="Object" tiptext="The ByteArray class provides methods and properties to optimize reading, writing, and working with binary data." helpurl="flash.utils:ByteArray">
            <folder name="Methods" id="Methods" tiptext="Methods for class ByteArray" helpurl="flash.utils:ByteArray">
                <string name="ByteArray" object="[flash.utils.ByteArray]" text="new ByteArray(%%)" constructor="true" tiptext="Creates a ByteArray instance representing a packed array of bytes, so that you can use the methods and properties in this class to optimize your data storage and stream." version="4" playername="" helpurl="flash.utils:ByteArray:ByteArray"/>
                <string name="clear" object="[flash.utils.ByteArray]" text=".clear(%%):void" tiptext="Clears the contents of the byte array and resets the length and position properties to 0." version="4" playername="" helpurl="flash.utils:ByteArray:clear"/>
                <string name="compress" object="[flash.utils.ByteArray]" text=".compress(%[algorithm:String=unknown]%):void" tiptext="Compresses the byte array." version="9" playername="" helpurl="flash.utils:ByteArray:compress"/>
                <string name="deflate" object="[flash.utils.ByteArray]" text=".deflate(%%):void" tiptext="Compresses the byte array using the deflate compression algorithm." version="4" playername="" helpurl="flash.utils:ByteArray:deflate"/>
                <string name="inflate" object="[flash.utils.ByteArray]" text=".inflate(%%):void" tiptext="Decompresses the byte array using the deflate compression algorithm." version="10" playername="" helpurl="flash.utils:ByteArray:inflate"/>
                <string name="readBoolean" object="[flash.utils.ByteArray]" text=".readBoolean(%%):Boolean" tiptext="Reads a Boolean value from the byte stream." version="4" playername="" helpurl="flash.utils:ByteArray:readBoolean"/>
                <string name="readByte" object="[flash.utils.ByteArray]" text=".readByte(%%):int" tiptext="Reads a signed byte from the byte stream." version="4" playername="" helpurl="flash.utils:ByteArray:readByte"/>
                <string name="readBytes" object="[flash.utils.ByteArray]" text=".readBytes(%bytes:flash.utils:ByteArray[,offset:uint=0,length:uint=0]%):void" tiptext="Reads the number of data bytes, specified by the length parameter, from the byte stream." version="4" playername="" helpurl="flash.utils:ByteArray:readBytes"/>
                <string name="readDouble" object="[flash.utils.ByteArray]" text=".readDouble(%%):Number" tiptext="Reads an IEEE 754 double-precision (64-bit) floating-point number from the byte stream." version="4" playername="" helpurl="flash.utils:ByteArray:readDouble"/>
                <string name="readFloat" object="[flash.utils.ByteArray]" text=".readFloat(%%):Number" tiptext="Reads an IEEE 754 single-precision (32-bit) floating-point number from the byte stream." version="4" playername="" helpurl="flash.utils:ByteArray:readFloat"/>
                <string name="readInt" object="[flash.utils.ByteArray]" text=".readInt(%%):int" tiptext="Reads a signed 32-bit integer from the byte stream." version="4" playername="" helpurl="flash.utils:ByteArray:readInt"/>
                <string name="readMultiByte" object="[flash.utils.ByteArray]" text=".readMultiByte(%length:uint,charSet:String%):String" tiptext="Reads a multibyte string of specified length from the byte stream using the specified character set." version="4" playername="" helpurl="flash.utils:ByteArray:readMultiByte"/>
                <string name="readObject" object="[flash.utils.ByteArray]" text=".readObject(%%)" tiptext="Reads an object from the byte array, encoded in AMF serialized format." version="4" playername="" helpurl="flash.utils:ByteArray:readObject"/>
                <string name="readShort" object="[flash.utils.ByteArray]" text=".readShort(%%):int" tiptext="Reads a signed 16-bit integer from the byte stream." version="4" playername="" helpurl="flash.utils:ByteArray:readShort"/>
                <string name="readUTFBytes" object="[flash.utils.ByteArray]" text=".readUTFBytes(%length:uint%):String" tiptext="Reads a sequence of UTF-8 bytes specified by the length parameter from the byte stream and returns a string." version="4" playername="" helpurl="flash.utils:ByteArray:readUTFBytes"/>
                <string name="readUTF" object="[flash.utils.ByteArray]" text=".readUTF(%%):String" tiptext="Reads a UTF-8 string from the byte stream." version="4" playername="" helpurl="flash.utils:ByteArray:readUTF"/>
                <string name="readUnsignedByte" object="[flash.utils.ByteArray]" text=".readUnsignedByte(%%):uint" tiptext="Reads an unsigned byte from the byte stream." version="4" playername="" helpurl="flash.utils:ByteArray:readUnsignedByte"/>
                <string name="readUnsignedInt" object="[flash.utils.ByteArray]" text=".readUnsignedInt(%%):uint" tiptext="Reads an unsigned 32-bit integer from the byte stream." version="4" playername="" helpurl="flash.utils:ByteArray:readUnsignedInt"/>
                <string name="readUnsignedShort" object="[flash.utils.ByteArray]" text=".readUnsignedShort(%%):uint" tiptext="Reads an unsigned 16-bit integer from the byte stream." version="4" playername="" helpurl="flash.utils:ByteArray:readUnsignedShort"/>
                <string name="toString" object="[flash.utils.ByteArray]" text=".toString(%%):String" tiptext="Converts the byte array to a string." version="4" playername="" helpurl="flash.utils:ByteArray:toString"/>
                <string name="uncompress" object="[flash.utils.ByteArray]" text=".uncompress(%[algorithm:String=unknown]%):void" tiptext="Decompresses the byte array." version="4" playername="" helpurl="flash.utils:ByteArray:uncompress"/>
                <string name="writeBoolean" object="[flash.utils.ByteArray]" text=".writeBoolean(%value:Boolean%):void" tiptext="Writes a Boolean value." version="4" playername="" helpurl="flash.utils:ByteArray:writeBoolean"/>
                <string name="writeByte" object="[flash.utils.ByteArray]" text=".writeByte(%value:int%):void" tiptext="Writes a byte to the byte stream." version="4" playername="" helpurl="flash.utils:ByteArray:writeByte"/>
                <string name="writeBytes" object="[flash.utils.ByteArray]" text=".writeBytes(%bytes:flash.utils:ByteArray[,offset:uint=0,length:uint=0]%):void" tiptext="Writes a sequence of length bytes from the specified byte array, bytes, starting offset(zero-based index) bytes into the byte stream." version="4" playername="" helpurl="flash.utils:ByteArray:writeBytes"/>
                <string name="writeDouble" object="[flash.utils.ByteArray]" text=".writeDouble(%value:Number%):void" tiptext="Writes an IEEE 754 double-precision (64-bit) floating-point number to the byte stream." version="4" playername="" helpurl="flash.utils:ByteArray:writeDouble"/>
                <string name="writeFloat" object="[flash.utils.ByteArray]" text=".writeFloat(%value:Number%):void" tiptext="Writes an IEEE 754 single-precision (32-bit) floating-point number to the byte stream." version="4" playername="" helpurl="flash.utils:ByteArray:writeFloat"/>
                <string name="writeInt" object="[flash.utils.ByteArray]" text=".writeInt(%value:int%):void" tiptext="Writes a 32-bit signed integer to the byte stream." version="4" playername="" helpurl="flash.utils:ByteArray:writeInt"/>
                <string name="writeMultiByte" object="[flash.utils.ByteArray]" text=".writeMultiByte(%value:String,charSet:String%):void" tiptext="Writes a multibyte string to the byte stream using the specified character set." version="4" playername="" helpurl="flash.utils:ByteArray:writeMultiByte"/>
                <string name="writeObject" object="[flash.utils.ByteArray]" text=".writeObject(%object:*%):void" tiptext="Writes an object into the byte array in AMF serialized format." version="4" playername="" helpurl="flash.utils:ByteArray:writeObject"/>
                <string name="writeShort" object="[flash.utils.ByteArray]" text=".writeShort(%value:int%):void" tiptext="Writes a 16-bit integer to the byte stream." version="4" playername="" helpurl="flash.utils:ByteArray:writeShort"/>
                <string name="writeUTFBytes" object="[flash.utils.ByteArray]" text=".writeUTFBytes(%value:String%):void" tiptext="Writes a UTF-8 string to the byte stream." version="4" playername="" helpurl="flash.utils:ByteArray:writeUTFBytes"/>
                <string name="writeUTF" object="[flash.utils.ByteArray]" text=".writeUTF(%value:String%):void" tiptext="Writes a UTF-8 string to the byte stream." version="4" playername="" helpurl="flash.utils:ByteArray:writeUTF"/>
                <string name="writeUnsignedInt" object="[flash.utils.ByteArray]" text=".writeUnsignedInt(%value:uint%):void" tiptext="Writes a 32-bit unsigned integer to the byte stream." version="4" playername="" helpurl="flash.utils:ByteArray:writeUnsignedInt"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class ByteArray" helpurl="flash.utils:ByteArray">
                <string name="bytesAvailable" object="[flash.utils.ByteArray]" text=".bytesAvailable" tiptext="The number of bytes of data available for reading from the current position in the byte array to the end of the array." version="" playername="" helpurl="flash.utils:ByteArray:bytesAvailable:get"/>
                <string name="defaultObjectEncoding" object="[flash.utils.ByteArray]" text=".defaultObjectEncoding" tiptext="Denotes the default object encoding for the ByteArray class to use for a new ByteArray instance." version="" playername="" helpurl="flash.utils:ByteArray:defaultObjectEncoding:get"/>
                <string name="endian" object="[flash.utils.ByteArray]" text=".endian" tiptext="Changes or reads the byte order for the data; either Endian.BIG_ENDIAN or Endian.LITTLE_ENDIAN." version="" playername="" helpurl="flash.utils:ByteArray:endian:get"/>
                <string name="length" object="[flash.utils.ByteArray]" text=".length" tiptext="The length of the ByteArray object, in bytes." version="" playername="" helpurl="flash.utils:ByteArray:length:get"/>
                <string name="objectEncoding" object="[flash.utils.ByteArray]" text=".objectEncoding" tiptext="Used to determine whether the ActionScript 3.0, ActionScript 2.0, or ActionScript 1.0 format should be used when writing to, or reading from, a ByteArray instance." version="" playername="" helpurl="flash.utils:ByteArray:objectEncoding:get"/>
                <string name="position" object="[flash.utils.ByteArray]" text=".position" tiptext="Moves, or returns the current position, in bytes, of the file pointer into the ByteArray object." version="" playername="" helpurl="flash.utils:ByteArray:position:get"/>
            </folder>
        </folder>
        <folder name="CompressionAlgorithm" id="[flash.utils.CompressionAlgorithm]" sort="true" index="true" asAncestors="Object" tiptext="The CompressionAlgorithm class defines string constants for the names of compress and uncompress options." helpurl="flash.utils:CompressionAlgorithm">
            <folder name="Properties" id="Properties" tiptext="Properties for class CompressionAlgorithm" helpurl="flash.utils:CompressionAlgorithm">
                <string name="DEFLATE" object="[flash.utils.CompressionAlgorithm]" text="CompressionAlgorithm.DEFLATE" constant="true" tiptext="Defines the string to use for the deflate compression algorithm." version="" playername="AIR" helpurl="flash.utils:CompressionAlgorithm:DEFLATE"/>
                <string name="ZLIB" object="[flash.utils.CompressionAlgorithm]" text="CompressionAlgorithm.ZLIB" constant="true" tiptext="Defines the string to use for the zlib compression algorithm." version="" playername="AIR" helpurl="flash.utils:CompressionAlgorithm:ZLIB"/>
            </folder>
        </folder>
        <folder name="Dictionary" id="[flash.utils.Dictionary]" sort="true" index="true" asAncestors="Object" tiptext="The Dictionary class lets you create a dynamic collection of properties, which uses strict equality (===) for key comparison." helpurl="flash.utils:Dictionary">
            <folder name="Methods" id="Methods" tiptext="Methods for class Dictionary" helpurl="flash.utils:Dictionary">
                <string name="Dictionary" object="[flash.utils.Dictionary]" text="new Dictionary(%[weakKeys:Boolean=false]%)" constructor="true" tiptext="Creates a new Dictionary object." version="4" playername="" helpurl="flash.utils:Dictionary:Dictionary"/>
            </folder>
        </folder>
        <folder name="Endian" id="[flash.utils.Endian]" sort="true" index="true" asAncestors="Object" tiptext="The Endian class contains values that denote the byte order used to represent multibyte numbers." helpurl="flash.utils:Endian">
            <folder name="Properties" id="Properties" tiptext="Properties for class Endian" helpurl="flash.utils:Endian">
                <string name="BIG_ENDIAN" object="[flash.utils.Endian]" text="Endian.BIG_ENDIAN" constant="true" tiptext="Indicates the most significant byte of the multibyte number appears first in the sequence of bytes." version="" playername="" helpurl="flash.utils:Endian:BIG_ENDIAN"/>
                <string name="LITTLE_ENDIAN" object="[flash.utils.Endian]" text="Endian.LITTLE_ENDIAN" constant="true" tiptext="Indicates the least significant byte of the multibyte number appears first in the sequence of bytes." version="" playername="" helpurl="flash.utils:Endian:LITTLE_ENDIAN"/>
            </folder>
        </folder>
        <folder name="IDataInput" id="[flash.utils.IDataInput]" sort="true" index="true" tiptext="The IDataInput interface provides a set of methods for reading binary data." helpurl="flash.utils:IDataInput">
            <folder name="Methods" id="Methods" tiptext="Methods for class IDataInput" helpurl="flash.utils:IDataInput">
                <string name="readBoolean" object="[flash.utils.IDataInput]" text=".readBoolean(%%):Boolean" tiptext="Reads a Boolean value from the file stream, byte stream, or byte array." version="4" playername="" helpurl="flash.utils:IDataInput:readBoolean"/>
                <string name="readByte" object="[flash.utils.IDataInput]" text=".readByte(%%):int" tiptext="Reads a signed byte from the file stream, byte stream, or byte array." version="4" playername="" helpurl="flash.utils:IDataInput:readByte"/>
                <string name="readBytes" object="[flash.utils.IDataInput]" text=".readBytes(%bytes:flash.utils:ByteArray[,offset:uint=0,length:uint=0]%):void" tiptext="Reads the number of data bytes, specified by the length parameter, from the file stream, byte stream, or byte array." version="4" playername="" helpurl="flash.utils:IDataInput:readBytes"/>
                <string name="readDouble" object="[flash.utils.IDataInput]" text=".readDouble(%%):Number" tiptext="Reads an IEEE 754 double-precision floating point number from the file stream, byte stream, or byte array." version="4" playername="" helpurl="flash.utils:IDataInput:readDouble"/>
                <string name="readFloat" object="[flash.utils.IDataInput]" text=".readFloat(%%):Number" tiptext="Reads an IEEE 754 single-precision floating point number from the file stream, byte stream, or byte array." version="4" playername="" helpurl="flash.utils:IDataInput:readFloat"/>
                <string name="readInt" object="[flash.utils.IDataInput]" text=".readInt(%%):int" tiptext="Reads a signed 32-bit integer from the file stream, byte stream, or byte array." version="4" playername="" helpurl="flash.utils:IDataInput:readInt"/>
                <string name="readMultiByte" object="[flash.utils.IDataInput]" text=".readMultiByte(%length:uint,charSet:String%):String" tiptext="Reads a multibyte string of specified length from the file stream, byte stream, or byte array using the specified character set." version="4" playername="" helpurl="flash.utils:IDataInput:readMultiByte"/>
                <string name="readObject" object="[flash.utils.IDataInput]" text=".readObject(%%)" tiptext="Reads an object from the file stream, byte stream, or byte array, encoded in AMF serialized format." version="4" playername="" helpurl="flash.utils:IDataInput:readObject"/>
                <string name="readShort" object="[flash.utils.IDataInput]" text=".readShort(%%):int" tiptext="Reads a signed 16-bit integer from the file stream, byte stream, or byte array." version="4" playername="" helpurl="flash.utils:IDataInput:readShort"/>
                <string name="readUTFBytes" object="[flash.utils.IDataInput]" text=".readUTFBytes(%length:uint%):String" tiptext="Reads a sequence of UTF-8 bytes from the byte stream or byte array and returns a string." version="4" playername="" helpurl="flash.utils:IDataInput:readUTFBytes"/>
                <string name="readUTF" object="[flash.utils.IDataInput]" text=".readUTF(%%):String" tiptext="Reads a UTF-8 string from the file stream, byte stream, or byte array." version="4" playername="" helpurl="flash.utils:IDataInput:readUTF"/>
                <string name="readUnsignedByte" object="[flash.utils.IDataInput]" text=".readUnsignedByte(%%):uint" tiptext="Reads an unsigned byte from the file stream, byte stream, or byte array." version="4" playername="" helpurl="flash.utils:IDataInput:readUnsignedByte"/>
                <string name="readUnsignedInt" object="[flash.utils.IDataInput]" text=".readUnsignedInt(%%):uint" tiptext="Reads an unsigned 32-bit integer from the file stream, byte stream, or byte array." version="4" playername="" helpurl="flash.utils:IDataInput:readUnsignedInt"/>
                <string name="readUnsignedShort" object="[flash.utils.IDataInput]" text=".readUnsignedShort(%%):uint" tiptext="Reads an unsigned 16-bit integer from the file stream, byte stream, or byte array." version="4" playername="" helpurl="flash.utils:IDataInput:readUnsignedShort"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class IDataInput" helpurl="flash.utils:IDataInput">
                <string name="bytesAvailable" object="[flash.utils.IDataInput]" text=".bytesAvailable" tiptext="Returns the number of bytes of data available for reading in the input buffer." version="" playername="" helpurl="flash.utils:IDataInput:bytesAvailable:get"/>
                <string name="endian" object="[flash.utils.IDataInput]" text=".endian" tiptext="The byte order for the data, either the BIG_ENDIAN or LITTLE_ENDIAN constant from the Endian class." version="" playername="" helpurl="flash.utils:IDataInput:endian:get"/>
                <string name="objectEncoding" object="[flash.utils.IDataInput]" text=".objectEncoding" tiptext="Used to determine whether the AMF3 or AMF0 format is used when writing or reading binary data using the readObject() method." version="" playername="" helpurl="flash.utils:IDataInput:objectEncoding:get"/>
            </folder>
        </folder>
        <folder name="IDataOutput" id="[flash.utils.IDataOutput]" sort="true" index="true" tiptext="The IDataOutput interface provides a set of methods for writing binary data." helpurl="flash.utils:IDataOutput">
            <folder name="Methods" id="Methods" tiptext="Methods for class IDataOutput" helpurl="flash.utils:IDataOutput">
                <string name="writeBoolean" object="[flash.utils.IDataOutput]" text=".writeBoolean(%value:Boolean%):void" tiptext="Writes a Boolean value." version="4" playername="" helpurl="flash.utils:IDataOutput:writeBoolean"/>
                <string name="writeByte" object="[flash.utils.IDataOutput]" text=".writeByte(%value:int%):void" tiptext="Writes a byte." version="4" playername="" helpurl="flash.utils:IDataOutput:writeByte"/>
                <string name="writeBytes" object="[flash.utils.IDataOutput]" text=".writeBytes(%bytes:flash.utils:ByteArray[,offset:uint=0,length:uint=0]%):void" tiptext="Writes a sequence of bytes from the specified byte array, bytes, starting at the byte specified by offset (using a zero-based index) with a length specified by length, into the file stream, byte stream, or byte array." version="4" playername="" helpurl="flash.utils:IDataOutput:writeBytes"/>
                <string name="writeDouble" object="[flash.utils.IDataOutput]" text=".writeDouble(%value:Number%):void" tiptext="Writes an IEEE 754 double-precision (64-bit) floating point number." version="4" playername="" helpurl="flash.utils:IDataOutput:writeDouble"/>
                <string name="writeFloat" object="[flash.utils.IDataOutput]" text=".writeFloat(%value:Number%):void" tiptext="Writes an IEEE 754 single-precision (32-bit) floating point number." version="4" playername="" helpurl="flash.utils:IDataOutput:writeFloat"/>
                <string name="writeInt" object="[flash.utils.IDataOutput]" text=".writeInt(%value:int%):void" tiptext="Writes a 32-bit signed integer." version="4" playername="" helpurl="flash.utils:IDataOutput:writeInt"/>
                <string name="writeMultiByte" object="[flash.utils.IDataOutput]" text=".writeMultiByte(%value:String,charSet:String%):void" tiptext="Writes a multibyte string to the file stream, byte stream, or byte array, using the specified character set." version="4" playername="" helpurl="flash.utils:IDataOutput:writeMultiByte"/>
                <string name="writeObject" object="[flash.utils.IDataOutput]" text=".writeObject(%object:*%):void" tiptext="Writes an object to the file stream, byte stream, or byte array, in AMF serialized format." version="4" playername="" helpurl="flash.utils:IDataOutput:writeObject"/>
                <string name="writeShort" object="[flash.utils.IDataOutput]" text=".writeShort(%value:int%):void" tiptext="Writes a 16-bit integer." version="4" playername="" helpurl="flash.utils:IDataOutput:writeShort"/>
                <string name="writeUTFBytes" object="[flash.utils.IDataOutput]" text=".writeUTFBytes(%value:String%):void" tiptext="Writes a UTF-8 string." version="4" playername="" helpurl="flash.utils:IDataOutput:writeUTFBytes"/>
                <string name="writeUTF" object="[flash.utils.IDataOutput]" text=".writeUTF(%value:String%):void" tiptext="Writes a UTF-8 string to the file stream, byte stream, or byte array." version="4" playername="" helpurl="flash.utils:IDataOutput:writeUTF"/>
                <string name="writeUnsignedInt" object="[flash.utils.IDataOutput]" text=".writeUnsignedInt(%value:uint%):void" tiptext="Writes a 32-bit unsigned integer." version="4" playername="" helpurl="flash.utils:IDataOutput:writeUnsignedInt"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class IDataOutput" helpurl="flash.utils:IDataOutput">
                <string name="endian" object="[flash.utils.IDataOutput]" text=".endian" tiptext="The byte order for the data, either the BIG_ENDIAN or LITTLE_ENDIAN constant from the Endian class." version="" playername="" helpurl="flash.utils:IDataOutput:endian:get"/>
                <string name="objectEncoding" object="[flash.utils.IDataOutput]" text=".objectEncoding" tiptext="Used to determine whether the AMF3 or AMF0 format is used when writing or reading binary data using the writeObject() method." version="" playername="" helpurl="flash.utils:IDataOutput:objectEncoding:get"/>
            </folder>
        </folder>
        <folder name="IExternalizable" id="[flash.utils.IExternalizable]" sort="true" index="true" tiptext="The IExternalizable interface provides control over serialization of a class as it is encoded into a data stream." helpurl="flash.utils:IExternalizable">
            <folder name="Methods" id="Methods" tiptext="Methods for class IExternalizable" helpurl="flash.utils:IExternalizable">
                <string name="readExternal" object="[flash.utils.IExternalizable]" text=".readExternal(%input:flash.utils:IDataInput%):void" tiptext="A class implements this method to decode itself from a data stream by calling the methods of the IDataInput interface." version="4" playername="" helpurl="flash.utils:IExternalizable:readExternal"/>
                <string name="writeExternal" object="[flash.utils.IExternalizable]" text=".writeExternal(%output:flash.utils:IDataOutput%):void" tiptext="A class implements this method to encode itself for a data stream by calling the methods of the IDataOutput interface." version="4" playername="" helpurl="flash.utils:IExternalizable:writeExternal"/>
            </folder>
        </folder>
        <folder name="Methods" id="Methods" tiptext="Methods for package flash.utils" helpurl="flash.utils">
            <string name="describeType" text="describeType(%value:*%):XML" tiptext="Produces an XML object that describes the ActionScript object named as the parameter of the method." version="4" playername="" helpurl="flash.utils:describeType"/>
            <string name="escapeMultiByte" text="escapeMultiByte(%value:String%):String" tiptext="Returns an escaped copy of the input string encoded as either UTF-8 or system code page, depending on the value of System.useCodePage." version="4" playername="" helpurl="flash.utils:escapeMultiByte"/>
            <string name="getDefinitionByName" text="getDefinitionByName(%name:String%):Object" tiptext="Returns a reference to the class object of the class specified by the name parameter." version="4" playername="" helpurl="flash.utils:getDefinitionByName"/>
            <string name="getQualifiedClassName" text="getQualifiedClassName(%value:*%):String" tiptext="Returns the fully qualified class name of an object." version="4" playername="" helpurl="flash.utils:getQualifiedClassName"/>
            <string name="getQualifiedSuperclassName" text="getQualifiedSuperclassName(%value:*%):String" tiptext="Returns the fully qualified class name of the base class of the object specified by the value parameter." version="4" playername="" helpurl="flash.utils:getQualifiedSuperclassName"/>
            <string name="getTimer" text="getTimer(%%):int" tiptext="Used to compute relative time." version="4" playername="" helpurl="flash.utils:getTimer"/>
            <string name="unescapeMultiByte" text="unescapeMultiByte(%value:String%):String" tiptext="Returns an unescaped copy of the input string, which is decoded from either system code page page or UTF-8 depending on the value of System.useCodePage." version="4" playername="" helpurl="flash.utils:unescapeMultiByte"/>
            <string name="clearInterval" text="clearInterval(%id:uint%):void" tiptext="Cancels a specified setInterval() call." version="9" playername="" helpurl="flash.utils:clearInterval"/>
            <string name="clearTimeout" text="clearTimeout(%id:uint%):void" tiptext="Cancels a specified setTimeout() call." version="9" playername="" helpurl="flash.utils:clearTimeout"/>
            <string name="setInterval" text="setInterval(%closure:Function,delay:Number,arguments:restParam%):uint" tiptext="Runs a function at a specified interval (in milliseconds)." version="9" playername="" helpurl="flash.utils:setInterval"/>
            <string name="setTimeout" text="setTimeout(%closure:Function,delay:Number,arguments:restParam%):uint" tiptext="Runs a specified function after a specified delay (in milliseconds)." version="9" playername="" helpurl="flash.utils:setTimeout"/>
        </folder>
        <folder name="Proxy" id="[flash.utils.Proxy]" sort="true" index="true" asAncestors="Object" tiptext="The Proxy class lets you override the default behavior of ActionScript operations (such as retrieving and modifying properties) on an object." helpurl="flash.utils:Proxy">
            <folder name="Methods" id="Methods" tiptext="Methods for class Proxy" helpurl="flash.utils:Proxy">
                <string name="callProperty" object="[flash.utils.Proxy]" text=".callProperty(%name:*,rest:restParam%)" tiptext="Overrides the behavior of an object property that can be called as a function." version="4" playername="" helpurl="flash.utils:Proxy:callProperty"/>
                <string name="deleteProperty" object="[flash.utils.Proxy]" text=".deleteProperty(%name:*%):Boolean" tiptext="Overrides the request to delete a property." version="4" playername="" helpurl="flash.utils:Proxy:deleteProperty"/>
                <string name="getDescendants" object="[flash.utils.Proxy]" text=".getDescendants(%name:*%)" tiptext="Overrides the use of the descendant operator." version="4" playername="" helpurl="flash.utils:Proxy:getDescendants"/>
                <string name="getProperty" object="[flash.utils.Proxy]" text=".getProperty(%name:*%)" tiptext="Overrides any request for a property&apos;s value." version="4" playername="" helpurl="flash.utils:Proxy:getProperty"/>
                <string name="hasProperty" object="[flash.utils.Proxy]" text=".hasProperty(%name:*%):Boolean" tiptext="Overrides a request to check whether an object has a particular property by name." version="4" playername="" helpurl="flash.utils:Proxy:hasProperty"/>
                <string name="isAttribute" object="[flash.utils.Proxy]" text=".isAttribute(%name:*%):Boolean" tiptext="Checks whether a supplied QName is also marked as an attribute." version="4" playername="" helpurl="flash.utils:Proxy:isAttribute"/>
                <string name="nextNameIndex" object="[flash.utils.Proxy]" text=".nextNameIndex(%index:int%):int" tiptext="Allows enumeration of the proxied object&apos;s properties by index number." version="4" playername="" helpurl="flash.utils:Proxy:nextNameIndex"/>
                <string name="nextName" object="[flash.utils.Proxy]" text=".nextName(%index:int%):String" tiptext="Allows enumeration of the proxied object&apos;s properties by index number to retrieve property names." version="4" playername="" helpurl="flash.utils:Proxy:nextName"/>
                <string name="nextValue" object="[flash.utils.Proxy]" text=".nextValue(%index:int%)" tiptext="Allows enumeration of the proxied object&apos;s properties by index number to retrieve property values." version="4" playername="" helpurl="flash.utils:Proxy:nextValue"/>
                <string name="setProperty" object="[flash.utils.Proxy]" text=".setProperty(%name:*,value:*%):void" tiptext="Overrides a call to change a property&apos;s value." version="4" playername="" helpurl="flash.utils:Proxy:setProperty"/>
            </folder>
        </folder>
        <folder name="Timer" id="[flash.utils.Timer]" sort="true" index="true" asAncestors="flash.events:EventDispatcher,Object" tiptext="The Timer class is the interface to timers, which let you run code on a specified time sequence." helpurl="flash.utils:Timer">
            <folder name="Methods" id="Methods" tiptext="Methods for class Timer" helpurl="flash.utils:Timer">
                <string name="Timer" object="[flash.utils.Timer]" text="new Timer(%delay:Number[,repeatCount:int=0]%)" constructor="true" tiptext="Constructs a new Timer object with the specified delay and repeatCount states." version="4" playername="" helpurl="flash.utils:Timer:Timer"/>
                <string name="reset" object="[flash.utils.Timer]" text=".reset(%%):void" tiptext="Stops the timer, if it is running, and sets the currentCount property back to 0, like the reset button of a stopwatch." version="4" playername="" helpurl="flash.utils:Timer:reset"/>
                <string name="start" object="[flash.utils.Timer]" text=".start(%%):void" tiptext="Starts the timer, if it is not already running." version="4" playername="" helpurl="flash.utils:Timer:start"/>
                <string name="stop" object="[flash.utils.Timer]" text=".stop(%%):void" tiptext="Stops the timer." version="4" playername="" helpurl="flash.utils:Timer:stop"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class Timer" helpurl="flash.utils:Timer">
                <string name="currentCount" object="[flash.utils.Timer]" text=".currentCount" tiptext="The total number of times the timer has fired since it started at zero." version="" playername="" helpurl="flash.utils:Timer:currentCount:get"/>
                <string name="delay" object="[flash.utils.Timer]" text=".delay" tiptext="The delay, in milliseconds, between timer events." version="" playername="" helpurl="flash.utils:Timer:delay:get"/>
                <string name="repeatCount" object="[flash.utils.Timer]" text=".repeatCount" tiptext="The total number of times the timer is set to run." version="" playername="" helpurl="flash.utils:Timer:repeatCount:get"/>
                <string name="running" object="[flash.utils.Timer]" text=".running" tiptext="The timer&apos;s current state; true if the timer is running, otherwise false." version="" playername="" helpurl="flash.utils:Timer:running:get"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class Timer" helpurl="flash.utils:Timer">
                <string name="timerComplete" object="[flash.utils.Timer]" text=".addEventListener(%type:String=TimerEvent.TIMER_COMPLETE{TimerEvent.TIMER_COMPLETE,TimerEvent.TIMER},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched whenever it has completed the number of requests set by Timer.repeatCount." version="" playername="" helpurl="flash.utils:Timer_flash.events.TimerEvent.TIMER_COMPLETE_timerComplete"/>
                <string name="timer" object="[flash.utils.Timer]" text=".addEventListener(%type:String=TimerEvent.TIMER{TimerEvent.TIMER_COMPLETE,TimerEvent.TIMER},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched whenever a Timer object reaches an interval specified according to the Timer.delay property." version="" playername="" helpurl="flash.utils:Timer_flash.events.TimerEvent.TIMER_timer"/>
            </folder>
        </folder>
    </folder>
        <folder name="flash.xml" id="flash.xml" sort="true" tiptext="Classes for package flash.xml" helpurl="flash.xml">
        <folder name="XMLDocument" id="[flash.xml.XMLDocument]" sort="true" index="true" asAncestors="flash.xml:XMLNode,Object" tiptext="The XMLDocument class represents the legacy XML object that was present in ActionScript 2.0." helpurl="flash.xml:XMLDocument">
            <folder name="Methods" id="Methods" tiptext="Methods for class XMLDocument" helpurl="flash.xml:XMLDocument">
                <string name="XMLDocument" object="[flash.xml.XMLDocument]" text="new XMLDocument(%[source:String=null]%)" constructor="true" tiptext="Creates a new XMLDocument object." version="4" playername="" helpurl="flash.xml:XMLDocument:XMLDocument"/>
                <string name="createElement" object="[flash.xml.XMLDocument]" text=".createElement(%name:String%):flash.xml:XMLNode" tiptext="Creates a new XMLNode object with the name specified in the parameter." version="4" playername="" helpurl="flash.xml:XMLDocument:createElement"/>
                <string name="createTextNode" object="[flash.xml.XMLDocument]" text=".createTextNode(%text:String%):flash.xml:XMLNode" tiptext="Creates a new XML text node with the specified text." version="4" playername="" helpurl="flash.xml:XMLDocument:createTextNode"/>
                <string name="parseXML" object="[flash.xml.XMLDocument]" text=".parseXML(%source:String%):void" tiptext="Parses the XML text specified in the value parameter and populates the specified XMLDocument object with the resulting XML tree." version="4" playername="" helpurl="flash.xml:XMLDocument:parseXML"/>
                <string name="toString" object="[flash.xml.XMLDocument]" text=".toString(%%):String" tiptext="Returns a string representation of the XML object." version="4" playername="" helpurl="flash.xml:XMLDocument:toString"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class XMLDocument" helpurl="flash.xml:XMLDocument">
                <string name="docTypeDecl" object="[flash.xml.XMLDocument]" text=".docTypeDecl" tiptext="Specifies information about the XML document&apos;s DOCTYPE declaration." version="" playername="" helpurl="flash.xml:XMLDocument:docTypeDecl"/>
                <string name="idMap" object="[flash.xml.XMLDocument]" text=".idMap" tiptext="An Object containing the nodes of the XML that have an id attribute assigned." version="" playername="" helpurl="flash.xml:XMLDocument:idMap"/>
                <string name="ignoreWhite" object="[flash.xml.XMLDocument]" text=".ignoreWhite" tiptext="When set to true, text nodes that contain only white space are discarded during the parsing process." version="" playername="" helpurl="flash.xml:XMLDocument:ignoreWhite"/>
                <string name="xmlDecl" object="[flash.xml.XMLDocument]" text=".xmlDecl" tiptext="A string that specifies information about a document&apos;s XML declaration." version="" playername="" helpurl="flash.xml:XMLDocument:xmlDecl"/>
            </folder>
        </folder>
        <folder name="XMLNode" id="[flash.xml.XMLNode]" sort="true" index="true" asAncestors="Object" tiptext="The XMLNode class represents the legacy XML object that was present in ActionScript 2.0 and that was renamed in ActionScript 3.0." helpurl="flash.xml:XMLNode">
            <folder name="Methods" id="Methods" tiptext="Methods for class XMLNode" helpurl="flash.xml:XMLNode">
                <string name="XMLNode" object="[flash.xml.XMLNode]" text="new XMLNode(%type:uint,value:String%)" constructor="true" tiptext="Creates a new XMLNode object." version="4" playername="" helpurl="flash.xml:XMLNode:XMLNode"/>
                <string name="appendChild" object="[flash.xml.XMLNode]" text=".appendChild(%node:flash.xml:XMLNode%):void" tiptext="Appends the specified node to the XML object&apos;s child list." version="4" playername="" helpurl="flash.xml:XMLNode:appendChild"/>
                <string name="cloneNode" object="[flash.xml.XMLNode]" text=".cloneNode(%deep:Boolean%):flash.xml:XMLNode" tiptext="Constructs and returns a new XML node of the same type, name, value, and attributes as the specified XML object." version="4" playername="" helpurl="flash.xml:XMLNode:cloneNode"/>
                <string name="getNamespaceForPrefix" object="[flash.xml.XMLNode]" text=".getNamespaceForPrefix(%prefix:String%):String" tiptext="Returns the namespace URI that is associated with the specified prefix for the node." version="4" playername="" helpurl="flash.xml:XMLNode:getNamespaceForPrefix"/>
                <string name="getPrefixForNamespace" object="[flash.xml.XMLNode]" text=".getPrefixForNamespace(%ns:String%):String" tiptext="Returns the prefix that is associated with the specified namespace URI for the node." version="4" playername="" helpurl="flash.xml:XMLNode:getPrefixForNamespace"/>
                <string name="hasChildNodes" object="[flash.xml.XMLNode]" text=".hasChildNodes(%%):Boolean" tiptext="Indicates whether the specified XMLNode object has child nodes." version="4" playername="" helpurl="flash.xml:XMLNode:hasChildNodes"/>
                <string name="insertBefore" object="[flash.xml.XMLNode]" text=".insertBefore(%node:flash.xml:XMLNode,before:flash.xml:XMLNode%):void" tiptext="Inserts a new child node into the XML object&apos;s child list, before the beforeNode node." version="4" playername="" helpurl="flash.xml:XMLNode:insertBefore"/>
                <string name="removeNode" object="[flash.xml.XMLNode]" text=".removeNode(%%):void" tiptext="Removes the specified XML object from its parent." version="4" playername="" helpurl="flash.xml:XMLNode:removeNode"/>
                <string name="toString" object="[flash.xml.XMLNode]" text=".toString(%%):String" tiptext="Evaluates the specified XMLNode object, constructs a textual representation of the XML structure, including the node, children, and attributes, and returns the result as a string." version="4" playername="" helpurl="flash.xml:XMLNode:toString"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class XMLNode" helpurl="flash.xml:XMLNode">
                <string name="firstChild" object="[flash.xml.XMLNode]" text=".firstChild" tiptext="Evaluates the specified XMLDocument object and references the first child in the parent node&apos;s child list." version="" playername="" helpurl="flash.xml:XMLNode:firstChild"/>
                <string name="lastChild" object="[flash.xml.XMLNode]" text=".lastChild" tiptext="An XMLNode value that references the last child in the node&apos;s child list." version="" playername="" helpurl="flash.xml:XMLNode:lastChild"/>
                <string name="nextSibling" object="[flash.xml.XMLNode]" text=".nextSibling" tiptext="An XMLNode value that references the next sibling in the parent node&apos;s child list." version="" playername="" helpurl="flash.xml:XMLNode:nextSibling"/>
                <string name="nodeName" object="[flash.xml.XMLNode]" text=".nodeName" tiptext="A string representing the node name of the XMLNode object." version="" playername="" helpurl="flash.xml:XMLNode:nodeName"/>
                <string name="nodeType" object="[flash.xml.XMLNode]" text=".nodeType" tiptext="A nodeType constant value, either XMLNodeType.ELEMENT_NODE for an XML element or XMLNodeType.TEXT_NODE for a text node." version="" playername="" helpurl="flash.xml:XMLNode:nodeType"/>
                <string name="nodeValue" object="[flash.xml.XMLNode]" text=".nodeValue" tiptext="The node value of the XMLDocument object." version="" playername="" helpurl="flash.xml:XMLNode:nodeValue"/>
                <string name="parentNode" object="[flash.xml.XMLNode]" text=".parentNode" tiptext="An XMLNode value that references the parent node of the specified XML object, or returns null if the node has no parent." version="" playername="" helpurl="flash.xml:XMLNode:parentNode"/>
                <string name="previousSibling" object="[flash.xml.XMLNode]" text=".previousSibling" tiptext="An XMLNode value that references the previous sibling in the parent node&apos;s child list." version="" playername="" helpurl="flash.xml:XMLNode:previousSibling"/>
                <string name="attributes" object="[flash.xml.XMLNode]" text=".attributes" tiptext="An object containing all of the attributes of the specified XMLNode instance." version="" playername="" helpurl="flash.xml:XMLNode:attributes:get"/>
                <string name="childNodes" object="[flash.xml.XMLNode]" text=".childNodes" tiptext="An array of the specified XMLNode object&apos;s children." version="" playername="" helpurl="flash.xml:XMLNode:childNodes:get"/>
                <string name="localName" object="[flash.xml.XMLNode]" text=".localName" tiptext="The local name portion of the XML node&apos;s name." version="" playername="" helpurl="flash.xml:XMLNode:localName:get"/>
                <string name="namespaceURI" object="[flash.xml.XMLNode]" text=".namespaceURI" tiptext="If the XML node has a prefix, namespaceURI is the value of the xmlns declaration for that prefix (the URI), which is typically called the namespace URI." version="" playername="" helpurl="flash.xml:XMLNode:namespaceURI:get"/>
                <string name="prefix" object="[flash.xml.XMLNode]" text=".prefix" tiptext="The prefix portion of the XML node name." version="" playername="" helpurl="flash.xml:XMLNode:prefix:get"/>
            </folder>
        </folder>
        <folder name="XMLNodeType" id="[flash.xml.XMLNodeType]" sort="true" index="true" asAncestors="Object" tiptext="The XMLNodeType class contains constants used with XMLNode.nodeType." helpurl="flash.xml:XMLNodeType">
            <folder name="Properties" id="Properties" tiptext="Properties for class XMLNodeType" helpurl="flash.xml:XMLNodeType">
                <string name="ELEMENT_NODE" object="[flash.xml.XMLNodeType]" text="XMLNodeType.ELEMENT_NODE" constant="true" tiptext="Specifies that the node is an element." version="" playername="" helpurl="flash.xml:XMLNodeType:ELEMENT_NODE"/>
                <string name="TEXT_NODE" object="[flash.xml.XMLNodeType]" text="XMLNodeType.TEXT_NODE" constant="true" tiptext="Specifies that the node is a text node." version="" playername="" helpurl="flash.xml:XMLNodeType:TEXT_NODE"/>
            </folder>
        </folder>
    </folder>
        <folder name="flashx.textLayout.compose" id="flashx.textLayout.compose" sort="true" tiptext="Classes for package flashx.textLayout.compose" helpurl="flashx.textLayout.compose">
        <folder name="FlowComposerBase" id="[flashx.textLayout.compose.FlowComposerBase]" sort="true" index="true" asAncestors="Object" tiptext="The FlowComposerBase class is the base class for Text Layout Framework flow composer classes, which control the composition of text lines in ContainerController objects." helpurl="flashx.textLayout.compose:FlowComposerBase">
            <folder name="Methods" id="Methods" tiptext="Methods for class FlowComposerBase" helpurl="flashx.textLayout.compose:FlowComposerBase">
                <string name="FlowComposerBase" object="[flashx.textLayout.compose.FlowComposerBase]" text="new FlowComposerBase(%%):void" constructor="true" tiptext="Constructor." version="1.5" playername="" helpurl="flashx.textLayout.compose:FlowComposerBase:FlowComposerBase"/>
                <string name="damage" object="[flashx.textLayout.compose.FlowComposerBase]" text=".damage(%startPosition:int,damageLength:int,damageType:String%):void" tiptext="Mark lines as damaged and needing a recompose." version="1.5" playername="" helpurl="flashx.textLayout.compose:FlowComposerBase:damage"/>
                <string name="findLineAtPosition" object="[flashx.textLayout.compose.FlowComposerBase]" text=".findLineAtPosition(%absolutePosition:int[,preferPrevious:Boolean=false]%):flashx.textLayout.compose:TextFlowLine" tiptext="Returns the TextFlowLine object containing the content at the specified position." version="1.5" playername="" helpurl="flashx.textLayout.compose:FlowComposerBase:findLineAtPosition"/>
                <string name="findLineIndexAtPosition" object="[flashx.textLayout.compose.FlowComposerBase]" text=".findLineIndexAtPosition(%absolutePosition:int[,preferPrevious:Boolean=false]%):int" tiptext="Returns the sequential line number of the TextFlowLine object that contains the content at the specified position." version="1.5" playername="" helpurl="flashx.textLayout.compose:FlowComposerBase:findLineIndexAtPosition"/>
                <string name="getLineAt" object="[flashx.textLayout.compose.FlowComposerBase]" text=".getLineAt(%index:int%):flashx.textLayout.compose:TextFlowLine" tiptext="Returns the line with the specified line number." version="1.5" playername="" helpurl="flashx.textLayout.compose:FlowComposerBase:getLineAt"/>
                <string name="isDamaged" object="[flashx.textLayout.compose.FlowComposerBase]" text=".isDamaged(%absolutePosition:int%):Boolean" tiptext="Indicates whether any TextFlowLine objects between the beginning of the flow and the line containing the content at the specified position are marked as damaged." version="1.5" playername="" helpurl="flashx.textLayout.compose:FlowComposerBase:isDamaged"/>
                <string name="updateLengths" object="[flashx.textLayout.compose.FlowComposerBase]" text=".updateLengths(%startPosition:int,deltaLength:int%):void" tiptext="Update the lengths in the lines to maintain mapping to the TextFlow." version="1.5" playername="" helpurl="flashx.textLayout.compose:FlowComposerBase:updateLengths"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class FlowComposerBase" helpurl="flashx.textLayout.compose:FlowComposerBase">
                <string name="damageAbsoluteStart" object="[flashx.textLayout.compose.FlowComposerBase]" text=".damageAbsoluteStart" tiptext="The absolute position immediately preceding the first element in the text flow that requires composition and updating." version="" playername="" helpurl="flashx.textLayout.compose:FlowComposerBase:damageAbsoluteStart:get"/>
                <string name="numLines" object="[flashx.textLayout.compose.FlowComposerBase]" text=".numLines" tiptext="The total number of lines in the flow." version="" playername="" helpurl="flashx.textLayout.compose:FlowComposerBase:numLines:get"/>
                <string name="swfContext" object="[flashx.textLayout.compose.FlowComposerBase]" text=".swfContext" tiptext="The ISWFContext instance used to make FTE calls as needed." version="" playername="" helpurl="flashx.textLayout.compose:FlowComposerBase:swfContext:get"/>
                <string name="textFlow" object="[flashx.textLayout.compose.FlowComposerBase]" text=".textFlow" tiptext="The TextFlow object to which this flow composer is attached." version="" playername="" helpurl="flashx.textLayout.compose:FlowComposerBase:textFlow:get"/>
            </folder>
        </folder>
        <folder name="FlowDamageType" id="[flashx.textLayout.compose.FlowDamageType]" sort="true" index="true" asAncestors="Object" tiptext="The FlowDamageType class is an enumeration class that defines types of damage for damage methods and events." helpurl="flashx.textLayout.compose:FlowDamageType">
            <folder name="Properties" id="Properties" tiptext="Properties for class FlowDamageType" helpurl="flashx.textLayout.compose:FlowDamageType">
                <string name="GEOMETRY" object="[flashx.textLayout.compose.FlowDamageType]" text="FlowDamageType.GEOMETRY" constant="true" tiptext="Value is used to set the validity property if the line has been invalidated by other lines moving around." version="" playername="" helpurl="flashx.textLayout.compose:FlowDamageType:GEOMETRY"/>
                <string name="INVALID" object="[flashx.textLayout.compose.FlowDamageType]" text="FlowDamageType.INVALID" constant="true" tiptext="Value is used to set the validity property if the text content has changed since the line was originally created." version="" playername="" helpurl="flashx.textLayout.compose:FlowDamageType:INVALID"/>
            </folder>
        </folder>
        <folder name="IFlowComposer" id="[flashx.textLayout.compose.IFlowComposer]" sort="true" index="true" tiptext="IFlowComposer defines the interface for managing the layout and display of a text flow." helpurl="flashx.textLayout.compose:IFlowComposer">
            <folder name="Methods" id="Methods" tiptext="Methods for class IFlowComposer" helpurl="flashx.textLayout.compose:IFlowComposer">
                <string name="addControllerAt" object="[flashx.textLayout.compose.IFlowComposer]" text=".addControllerAt(%controller:flashx.textLayout.container:ContainerController,index:int%):void" tiptext="Adds a controller to this IFlowComposer instance at the specified index." version="1.5" playername="" helpurl="flashx.textLayout.compose:IFlowComposer:addControllerAt"/>
                <string name="addController" object="[flashx.textLayout.compose.IFlowComposer]" text=".addController(%controller:flashx.textLayout.container:ContainerController%):void" tiptext="Adds a controller to this IFlowComposer instance." version="1.5" playername="" helpurl="flashx.textLayout.compose:IFlowComposer:addController"/>
                <string name="composeToController" object="[flashx.textLayout.compose.IFlowComposer]" text=".composeToController(%[index:int=unknown]%):Boolean" tiptext="Composes the content of the root element up to and including the container at the specified index." version="1.5" playername="" helpurl="flashx.textLayout.compose:IFlowComposer:composeToController"/>
                <string name="composeToPosition" object="[flashx.textLayout.compose.IFlowComposer]" text=".composeToPosition(%[absolutePosition:int=unknown]%):Boolean" tiptext="Composes the content of the root element up to the specified position." version="1.5" playername="" helpurl="flashx.textLayout.compose:IFlowComposer:composeToPosition"/>
                <string name="compose" object="[flashx.textLayout.compose.IFlowComposer]" text=".compose(%%):Boolean" tiptext="Calculates how many lines are necessary to display the content in the root element of the flow and the positions of these lines in the flow&apos;s display containers." version="1.5" playername="" helpurl="flashx.textLayout.compose:IFlowComposer:compose"/>
                <string name="damage" object="[flashx.textLayout.compose.IFlowComposer]" text=".damage(%startPosition:int,damageLength:int,damageType:String%):void" tiptext="Mark lines as damaged and needing a recompose." version="1.5" playername="" helpurl="flashx.textLayout.compose:IFlowComposer:damage"/>
                <string name="findControllerIndexAtPosition" object="[flashx.textLayout.compose.IFlowComposer]" text=".findControllerIndexAtPosition(%absolutePosition:int[,preferPrevious:Boolean=false]%):int" tiptext="Returns the index of the controller containing the content at the specified position." version="1.5" playername="" helpurl="flashx.textLayout.compose:IFlowComposer:findControllerIndexAtPosition"/>
                <string name="findLineAtPosition" object="[flashx.textLayout.compose.IFlowComposer]" text=".findLineAtPosition(%absolutePosition:int[,preferPrevious:Boolean=false]%):flashx.textLayout.compose:TextFlowLine" tiptext="Returns the TextFlowLine object containing the content at the specified position." version="1.5" playername="" helpurl="flashx.textLayout.compose:IFlowComposer:findLineAtPosition"/>
                <string name="findLineIndexAtPosition" object="[flashx.textLayout.compose.IFlowComposer]" text=".findLineIndexAtPosition(%absolutePosition:int[,preferPrevious:Boolean=false]%):int" tiptext="Returns the sequential line number of the TextFlowLine object that contains the content at the specified position." version="1.5" playername="" helpurl="flashx.textLayout.compose:IFlowComposer:findLineIndexAtPosition"/>
                <string name="getControllerAt" object="[flashx.textLayout.compose.IFlowComposer]" text=".getControllerAt(%index:int%):flashx.textLayout.container:ContainerController" tiptext="Returns the ContainerController object at the specified index." version="1.5" playername="" helpurl="flashx.textLayout.compose:IFlowComposer:getControllerAt"/>
                <string name="getControllerIndex" object="[flashx.textLayout.compose.IFlowComposer]" text=".getControllerIndex(%controller:flashx.textLayout.container:ContainerController%):int" tiptext="Returns the index of the specified ContainerController object." version="1.5" playername="" helpurl="flashx.textLayout.compose:IFlowComposer:getControllerIndex"/>
                <string name="getLineAt" object="[flashx.textLayout.compose.IFlowComposer]" text=".getLineAt(%index:int%):flashx.textLayout.compose:TextFlowLine" tiptext="Returns the line with the specified line number." version="1.5" playername="" helpurl="flashx.textLayout.compose:IFlowComposer:getLineAt"/>
                <string name="interactionManagerChanged" object="[flashx.textLayout.compose.IFlowComposer]" text=".interactionManagerChanged(%newInteractionManager:flashx.textLayout.edit:ISelectionManager%):void" tiptext="Called by the TextFlow when the interaction manager changes." version="1.5" playername="" helpurl="flashx.textLayout.compose:IFlowComposer:interactionManagerChanged"/>
                <string name="isDamaged" object="[flashx.textLayout.compose.IFlowComposer]" text=".isDamaged(%absolutePosition:int%):Boolean" tiptext="Indicates whether any TextFlowLine objects between the beginning of the flow and the line containing the content at the specified position are marked as damaged." version="1.5" playername="" helpurl="flashx.textLayout.compose:IFlowComposer:isDamaged"/>
                <string name="removeAllControllers" object="[flashx.textLayout.compose.IFlowComposer]" text=".removeAllControllers(%%):void" tiptext="Removes all controllers from this IFlowComposer instance." version="1.5" playername="" helpurl="flashx.textLayout.compose:IFlowComposer:removeAllControllers"/>
                <string name="removeControllerAt" object="[flashx.textLayout.compose.IFlowComposer]" text=".removeControllerAt(%index:int%):void" tiptext="Removes the controller at the specified index from this IFlowComposer instance." version="1.5" playername="" helpurl="flashx.textLayout.compose:IFlowComposer:removeControllerAt"/>
                <string name="removeController" object="[flashx.textLayout.compose.IFlowComposer]" text=".removeController(%controller:flashx.textLayout.container:ContainerController%):void" tiptext="Removes a controller from this IFlowComposer instance." version="1.5" playername="" helpurl="flashx.textLayout.compose:IFlowComposer:removeController"/>
                <string name="setFocus" object="[flashx.textLayout.compose.IFlowComposer]" text=".setFocus(%absolutePosition:int[,preferPrevious:Boolean=false]%):void" tiptext="Sets the focus to the container that contains the location specified by the absolutePosition parameter." version="1.5" playername="" helpurl="flashx.textLayout.compose:IFlowComposer:setFocus"/>
                <string name="setRootElement" object="[flashx.textLayout.compose.IFlowComposer]" text=".setRootElement(%newRootElement:flashx.textLayout.elements:ContainerFormattedElement%):void" tiptext="" version="" playername="" helpurl="flashx.textLayout.compose:IFlowComposer:setRootElement"/>
                <string name="updateAllControllers" object="[flashx.textLayout.compose.IFlowComposer]" text=".updateAllControllers(%%):Boolean" tiptext="Composes the content of the root element and updates the display." version="1.5" playername="" helpurl="flashx.textLayout.compose:IFlowComposer:updateAllControllers"/>
                <string name="updateLengths" object="[flashx.textLayout.compose.IFlowComposer]" text=".updateLengths(%startPosition:int,deltaLength:int%):void" tiptext="Update the lengths in the lines to maintain mapping to the TextFlow." version="1.5" playername="" helpurl="flashx.textLayout.compose:IFlowComposer:updateLengths"/>
                <string name="updateToController" object="[flashx.textLayout.compose.IFlowComposer]" text=".updateToController(%[index:int=unknown]%):Boolean" tiptext="Composes and updates the display up to and including the container at the specified index." version="1.5" playername="" helpurl="flashx.textLayout.compose:IFlowComposer:updateToController"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class IFlowComposer" helpurl="flashx.textLayout.compose:IFlowComposer">
                <string name="composing" object="[flashx.textLayout.compose.IFlowComposer]" text=".composing" tiptext="True, if the flow composer is currently performing a composition operation." version="" playername="" helpurl="flashx.textLayout.compose:IFlowComposer:composing:get"/>
                <string name="damageAbsoluteStart" object="[flashx.textLayout.compose.IFlowComposer]" text=".damageAbsoluteStart" tiptext="The first invalid position in the root element, as an absolute position from the start of the flow." version="" playername="" helpurl="flashx.textLayout.compose:IFlowComposer:damageAbsoluteStart:get"/>
                <string name="numControllers" object="[flashx.textLayout.compose.IFlowComposer]" text=".numControllers" tiptext="The number of containers assigned to this IFlowComposer instance." version="" playername="" helpurl="flashx.textLayout.compose:IFlowComposer:numControllers:get"/>
                <string name="numLines" object="[flashx.textLayout.compose.IFlowComposer]" text=".numLines" tiptext="The total number of lines in the flow." version="" playername="" helpurl="flashx.textLayout.compose:IFlowComposer:numLines:get"/>
                <string name="rootElement" object="[flashx.textLayout.compose.IFlowComposer]" text=".rootElement" tiptext="The root element associated with this IFlowComposer instance." version="" playername="" helpurl="flashx.textLayout.compose:IFlowComposer:rootElement:get"/>
                <string name="swfContext" object="[flashx.textLayout.compose.IFlowComposer]" text=".swfContext" tiptext="The ISWFContext instance to be used for calls that must be made in a specific SWF context Implementations of IFlowComposer should allow this property to be set so that users of the interface can create lines in a different SWF context than the one containing the implementation." version="" playername="" helpurl="flashx.textLayout.compose:IFlowComposer:swfContext:get"/>
            </folder>
        </folder>
        <folder name="ISWFContext" id="[flashx.textLayout.compose.ISWFContext]" sort="true" index="true" tiptext="The ISWFContext interface allows a SWF file to share its context with other SWF files that load it." helpurl="flashx.textLayout.compose:ISWFContext">
            <folder name="Methods" id="Methods" tiptext="Methods for class ISWFContext" helpurl="flashx.textLayout.compose:ISWFContext">
                <string name="callInContext" object="[flashx.textLayout.compose.ISWFContext]" text=".callInContext(%fn:Function,thisArg:Object,argArray:Array[,returns:Boolean=true]%)" tiptext="A way to call a method in a client controlled context." version="1.5" playername="" helpurl="flashx.textLayout.compose:ISWFContext:callInContext"/>
            </folder>
        </folder>
        <folder name="ITextLineCreator" id="[flashx.textLayout.compose.ITextLineCreator]" sort="true" index="true" tiptext="ITextLineCreator defines an interface for creating TextLine objects for an IFlowComposer instance." helpurl="flashx.textLayout.compose:ITextLineCreator">
            <folder name="Methods" id="Methods" tiptext="Methods for class ITextLineCreator" helpurl="flashx.textLayout.compose:ITextLineCreator">
                <string name="createTextLine" object="[flashx.textLayout.compose.ITextLineCreator]" text=".createTextLine(%textBlock:flash.text.engine:TextBlock[,previousLine:flash.text.engine:TextLine=null,width:Number=1000000,lineOffset:Number=0.0,fitSomething:Boolean=false]%):flash.text.engine:TextLine" tiptext="Creates a TextLine object for a flow composer." version="1.5" playername="" helpurl="flashx.textLayout.compose:ITextLineCreator:createTextLine"/>
                <string name="recreateTextLine" object="[flashx.textLayout.compose.ITextLineCreator]" text=".recreateTextLine(%textBlock:flash.text.engine:TextBlock,textLine:flash.text.engine:TextLine[,previousLine:flash.text.engine:TextLine=null,width:Number=1000000,lineOffset:Number=0.0,fitSomething:Boolean=false]%):flash.text.engine:TextLine" tiptext="Recreates a TextLine object for a flow composer." version="1.5" playername="" helpurl="flashx.textLayout.compose:ITextLineCreator:recreateTextLine"/>
            </folder>
        </folder>
        <folder name="IVerticalJustificationLine" id="[flashx.textLayout.compose.IVerticalJustificationLine]" sort="true" index="true" tiptext="The IVerticalJustificationLine interface defines the methods and properties required to allow the vertical justification of text lines." helpurl="flashx.textLayout.compose:IVerticalJustificationLine">
            <folder name="Properties" id="Properties" tiptext="Properties for class IVerticalJustificationLine" helpurl="flashx.textLayout.compose:IVerticalJustificationLine">
                <string name="ascent" object="[flashx.textLayout.compose.IVerticalJustificationLine]" text=".ascent" tiptext="Specifies the number of pixels from the baseline to the top of the tallest characters in the line." version="" playername="" helpurl="flashx.textLayout.compose:IVerticalJustificationLine:ascent:get"/>
                <string name="descent" object="[flashx.textLayout.compose.IVerticalJustificationLine]" text=".descent" tiptext="Specifies the number of pixels from the baseline to the bottom of the lowest-descending characters in the line." version="" playername="" helpurl="flashx.textLayout.compose:IVerticalJustificationLine:descent:get"/>
                <string name="height" object="[flashx.textLayout.compose.IVerticalJustificationLine]" text=".height" tiptext="The height of the line in pixels." version="" playername="" helpurl="flashx.textLayout.compose:IVerticalJustificationLine:height:get"/>
                <string name="x" object="[flashx.textLayout.compose.IVerticalJustificationLine]" text=".x" tiptext="The horizontal position of the line relative to its container, expressed as the offset in pixels from the left of the container." version="" playername="" helpurl="flashx.textLayout.compose:IVerticalJustificationLine:x:get"/>
                <string name="y" object="[flashx.textLayout.compose.IVerticalJustificationLine]" text=".y" tiptext="The vertical position of the line relative to its container, expressed as the offset in pixels from the top of the container." version="" playername="" helpurl="flashx.textLayout.compose:IVerticalJustificationLine:y:get"/>
            </folder>
        </folder>
        <folder name="StandardFlowComposer" id="[flashx.textLayout.compose.StandardFlowComposer]" sort="true" index="true" asAncestors="flashx.textLayout.compose:FlowComposerBase,Object" tiptext="The StandardFlowComposer class provides a standard composer and container manager." helpurl="flashx.textLayout.compose:StandardFlowComposer">
            <folder name="Methods" id="Methods" tiptext="Methods for class StandardFlowComposer" helpurl="flashx.textLayout.compose:StandardFlowComposer">
                <string name="StandardFlowComposer" object="[flashx.textLayout.compose.StandardFlowComposer]" text="new StandardFlowComposer(%%):void" constructor="true" tiptext="Creates a StandardFlowComposer object." version="1.5" playername="" helpurl="flashx.textLayout.compose:StandardFlowComposer:StandardFlowComposer"/>
                <string name="addControllerAt" object="[flashx.textLayout.compose.StandardFlowComposer]" text=".addControllerAt(%controller:flashx.textLayout.container:ContainerController,index:int%):void" tiptext="Adds a controller to this IFlowComposer instance at the specified index." version="1.5" playername="" helpurl="flashx.textLayout.compose:StandardFlowComposer:addControllerAt"/>
                <string name="addController" object="[flashx.textLayout.compose.StandardFlowComposer]" text=".addController(%controller:flashx.textLayout.container:ContainerController%):void" tiptext="Adds a controller to this IFlowComposer instance." version="1.5" playername="" helpurl="flashx.textLayout.compose:StandardFlowComposer:addController"/>
                <string name="composeToController" object="[flashx.textLayout.compose.StandardFlowComposer]" text=".composeToController(%[index:int=unknown]%):Boolean" tiptext="Composes the content of the root element up to and including the container at the specified index." version="1.5" playername="" helpurl="flashx.textLayout.compose:StandardFlowComposer:composeToController"/>
                <string name="composeToPosition" object="[flashx.textLayout.compose.StandardFlowComposer]" text=".composeToPosition(%[absolutePosition:int=unknown]%):Boolean" tiptext="Composes the content of the root element up to the specified position." version="1.5" playername="" helpurl="flashx.textLayout.compose:StandardFlowComposer:composeToPosition"/>
                <string name="compose" object="[flashx.textLayout.compose.StandardFlowComposer]" text=".compose(%%):Boolean" tiptext="Calculates how many lines are necessary to display the content in the root element of the flow and the positions of these lines in the flow&apos;s display containers." version="1.5" playername="" helpurl="flashx.textLayout.compose:StandardFlowComposer:compose"/>
                <string name="findControllerIndexAtPosition" object="[flashx.textLayout.compose.StandardFlowComposer]" text=".findControllerIndexAtPosition(%absolutePosition:int[,preferPrevious:Boolean=false]%):int" tiptext="Returns the index of the controller containing the content at the specified position." version="1.5" playername="" helpurl="flashx.textLayout.compose:StandardFlowComposer:findControllerIndexAtPosition"/>
                <string name="getAbsoluteStart" object="[flashx.textLayout.compose.StandardFlowComposer]" text=".getAbsoluteStart(%controller:flashx.textLayout.container:ContainerController%):int" tiptext="Returns the absolute position of the first content element in the specified ContainerController object." version="1.5" playername="" helpurl="flashx.textLayout.compose:StandardFlowComposer:getAbsoluteStart"/>
                <string name="getControllerAt" object="[flashx.textLayout.compose.StandardFlowComposer]" text=".getControllerAt(%index:int%):flashx.textLayout.container:ContainerController" tiptext="Returns the ContainerController object at the specified index." version="1.5" playername="" helpurl="flashx.textLayout.compose:StandardFlowComposer:getControllerAt"/>
                <string name="getControllerIndex" object="[flashx.textLayout.compose.StandardFlowComposer]" text=".getControllerIndex(%controller:flashx.textLayout.container:ContainerController%):int" tiptext="Returns the index of the specified ContainerController object." version="1.5" playername="" helpurl="flashx.textLayout.compose:StandardFlowComposer:getControllerIndex"/>
                <string name="interactionManagerChanged" object="[flashx.textLayout.compose.StandardFlowComposer]" text=".interactionManagerChanged(%newInteractionManager:flashx.textLayout.edit:ISelectionManager%):void" tiptext="Called by the TextFlow when the interaction manager changes." version="1.5" playername="" helpurl="flashx.textLayout.compose:StandardFlowComposer:interactionManagerChanged"/>
                <string name="preCompose" object="[flashx.textLayout.compose.StandardFlowComposer]" text=".preCompose(%%):Boolean" tiptext="Returns true if composition is necessary, false otherwise" version="" playername="" helpurl="flashx.textLayout.compose:StandardFlowComposer:preCompose"/>
                <string name="removeAllControllers" object="[flashx.textLayout.compose.StandardFlowComposer]" text=".removeAllControllers(%%):void" tiptext="Removes all controllers from this IFlowComposer instance." version="1.5" playername="" helpurl="flashx.textLayout.compose:StandardFlowComposer:removeAllControllers"/>
                <string name="removeControllerAt" object="[flashx.textLayout.compose.StandardFlowComposer]" text=".removeControllerAt(%index:int%):void" tiptext="Removes the controller at the specified index from this IFlowComposer instance." version="1.5" playername="" helpurl="flashx.textLayout.compose:StandardFlowComposer:removeControllerAt"/>
                <string name="removeController" object="[flashx.textLayout.compose.StandardFlowComposer]" text=".removeController(%controller:flashx.textLayout.container:ContainerController%):void" tiptext="Removes a controller from this IFlowComposer instance." version="1.5" playername="" helpurl="flashx.textLayout.compose:StandardFlowComposer:removeController"/>
                <string name="setFocus" object="[flashx.textLayout.compose.StandardFlowComposer]" text=".setFocus(%absolutePosition:int[,leanLeft:Boolean=false]%):void" tiptext="Sets the focus to the container that contains the location specified by the absolutePosition parameter." version="1.5" playername="" helpurl="flashx.textLayout.compose:StandardFlowComposer:setFocus"/>
                <string name="setRootElement" object="[flashx.textLayout.compose.StandardFlowComposer]" text=".setRootElement(%newRootElement:flashx.textLayout.elements:ContainerFormattedElement%):void" tiptext="" version="1.5" playername="" helpurl="flashx.textLayout.compose:StandardFlowComposer:setRootElement"/>
                <string name="updateAllControllers" object="[flashx.textLayout.compose.StandardFlowComposer]" text=".updateAllControllers(%%):Boolean" tiptext="Composes the content of the root element and updates the display." version="1.5" playername="" helpurl="flashx.textLayout.compose:StandardFlowComposer:updateAllControllers"/>
                <string name="updateToController" object="[flashx.textLayout.compose.StandardFlowComposer]" text=".updateToController(%[index:int=unknown]%):Boolean" tiptext="Composes and updates the display up to and including the container at the specified index." version="1.5" playername="" helpurl="flashx.textLayout.compose:StandardFlowComposer:updateToController"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class StandardFlowComposer" helpurl="flashx.textLayout.compose:StandardFlowComposer">
                <string name="composing" object="[flashx.textLayout.compose.StandardFlowComposer]" text=".composing" tiptext="True, if the flow composer is currently performing a composition operation." version="" playername="" helpurl="flashx.textLayout.compose:StandardFlowComposer:composing:get"/>
                <string name="numControllers" object="[flashx.textLayout.compose.StandardFlowComposer]" text=".numControllers" tiptext="The number of containers assigned to this IFlowComposer instance." version="" playername="" helpurl="flashx.textLayout.compose:StandardFlowComposer:numControllers:get"/>
                <string name="rootElement" object="[flashx.textLayout.compose.StandardFlowComposer]" text=".rootElement" tiptext="The root element associated with this IFlowComposer instance." version="" playername="" helpurl="flashx.textLayout.compose:StandardFlowComposer:rootElement:get"/>
            </folder>
        </folder>
        <folder name="TextFlowLine" id="[flashx.textLayout.compose.TextFlowLine]" sort="true" index="true" asAncestors="Object" tiptext="The TextFlowLine class represents a single line of text in a text flow." helpurl="flashx.textLayout.compose:TextFlowLine">
            <folder name="Methods" id="Methods" tiptext="Methods for class TextFlowLine" helpurl="flashx.textLayout.compose:TextFlowLine">
                <string name="TextFlowLine" object="[flashx.textLayout.compose.TextFlowLine]" text="new TextFlowLine(%textLine:flash.text.engine:TextLine,paragraph:flashx.textLayout.elements:ParagraphElement[,outerTargetWidth:Number=0,lineOffset:Number=0,absoluteStart:int=0,numChars:int=0]%)" constructor="true" tiptext="Constructor - creates a new TextFlowLine instance." version="1.5" playername="" helpurl="flashx.textLayout.compose:TextFlowLine:TextFlowLine"/>
                <string name="getBounds" object="[flashx.textLayout.compose.TextFlowLine]" text=".getBounds(%%):flash.geom:Rectangle" tiptext="Returns the bounds of the line as a rectangle." version="1.5" playername="" helpurl="flashx.textLayout.compose:TextFlowLine:getBounds"/>
                <string name="getTextLine" object="[flashx.textLayout.compose.TextFlowLine]" text=".getTextLine(%[forceValid:Boolean=false]%):flash.text.engine:TextLine" tiptext="Returns the flash.text.engine.TextLine object for this line, which might be recreated if it does not exist due to garbage collection." version="1.5" playername="" helpurl="flashx.textLayout.compose:TextFlowLine:getTextLine"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class TextFlowLine" helpurl="flashx.textLayout.compose:TextFlowLine">
                <string name="absoluteStart" object="[flashx.textLayout.compose.TextFlowLine]" text=".absoluteStart" tiptext="The location of the line as an absolute character position in the TextFlow object." version="" playername="" helpurl="flashx.textLayout.compose:TextFlowLine:absoluteStart:get"/>
                <string name="ascent" object="[flashx.textLayout.compose.TextFlowLine]" text=".ascent" tiptext="Specifies the number of pixels from the baseline to the top of the tallest characters in the line." version="" playername="" helpurl="flashx.textLayout.compose:TextFlowLine:ascent:get"/>
                <string name="columnIndex" object="[flashx.textLayout.compose.TextFlowLine]" text=".columnIndex" tiptext="The number of the column in which the line has been placed, with the first column being 0." version="" playername="" helpurl="flashx.textLayout.compose:TextFlowLine:columnIndex:get"/>
                <string name="controller" object="[flashx.textLayout.compose.TextFlowLine]" text=".controller" tiptext="The controller (ContainerController object) for the container in which the line has been placed." version="" playername="" helpurl="flashx.textLayout.compose:TextFlowLine:controller:get"/>
                <string name="descent" object="[flashx.textLayout.compose.TextFlowLine]" text=".descent" tiptext="Specifies the number of pixels from the baseline to the bottom of the lowest-descending characters in the line." version="" playername="" helpurl="flashx.textLayout.compose:TextFlowLine:descent:get"/>
                <string name="height" object="[flashx.textLayout.compose.TextFlowLine]" text=".height" tiptext="The height of the line in pixels." version="" playername="" helpurl="flashx.textLayout.compose:TextFlowLine:height:get"/>
                <string name="lineOffset" object="[flashx.textLayout.compose.TextFlowLine]" text=".lineOffset" tiptext="The line&apos;s offset in pixels from the appropriate container inset (as dictated by paragraph direction and container block progression), prior to alignment of lines in the paragraph." version="" playername="" helpurl="flashx.textLayout.compose:TextFlowLine:lineOffset:get"/>
                <string name="location" object="[flashx.textLayout.compose.TextFlowLine]" text=".location" tiptext="One of the values from TextFlowLineLocation for specifying a line&apos;s location within a paragraph." version="" playername="" helpurl="flashx.textLayout.compose:TextFlowLine:location:get"/>
                <string name="paragraph" object="[flashx.textLayout.compose.TextFlowLine]" text=".paragraph" tiptext="The paragraph (ParagraphElement) in which the line resides." version="" playername="" helpurl="flashx.textLayout.compose:TextFlowLine:paragraph:get"/>
                <string name="spaceAfter" object="[flashx.textLayout.compose.TextFlowLine]" text=".spaceAfter" tiptext="The amount of space to leave after the line." version="" playername="" helpurl="flashx.textLayout.compose:TextFlowLine:spaceAfter:get"/>
                <string name="spaceBefore" object="[flashx.textLayout.compose.TextFlowLine]" text=".spaceBefore" tiptext="The amount of space to leave before the line." version="" playername="" helpurl="flashx.textLayout.compose:TextFlowLine:spaceBefore:get"/>
                <string name="textHeight" object="[flashx.textLayout.compose.TextFlowLine]" text=".textHeight" tiptext="The height of the text line, which is equal to ascent plus descent." version="" playername="" helpurl="flashx.textLayout.compose:TextFlowLine:textHeight:get"/>
                <string name="textLength" object="[flashx.textLayout.compose.TextFlowLine]" text=".textLength" tiptext="The number of characters to the next line, including trailing spaces." version="" playername="" helpurl="flashx.textLayout.compose:TextFlowLine:textLength:get"/>
                <string name="textLineExists" object="[flashx.textLayout.compose.TextFlowLine]" text=".textLineExists" tiptext="Indicates whether the flash.text.engine.TextLine object for this TextFlowLine exists." version="" playername="" helpurl="flashx.textLayout.compose:TextFlowLine:textLineExists:get"/>
                <string name="unjustifiedTextWidth" object="[flashx.textLayout.compose.TextFlowLine]" text=".unjustifiedTextWidth" tiptext="The width of the line if it was not justified." version="" playername="" helpurl="flashx.textLayout.compose:TextFlowLine:unjustifiedTextWidth:get"/>
                <string name="validity" object="[flashx.textLayout.compose.TextFlowLine]" text=".validity" tiptext="The validity of the line." version="" playername="" helpurl="flashx.textLayout.compose:TextFlowLine:validity:get"/>
                <string name="x" object="[flashx.textLayout.compose.TextFlowLine]" text=".x" tiptext="The horizontal position of the line relative to its container, expressed as the offset in pixels from the left of the container." version="" playername="" helpurl="flashx.textLayout.compose:TextFlowLine:x:get"/>
                <string name="y" object="[flashx.textLayout.compose.TextFlowLine]" text=".y" tiptext="The vertical position of the line relative to its container, expressed as the offset in pixels from the top of the container." version="" playername="" helpurl="flashx.textLayout.compose:TextFlowLine:y:get"/>
            </folder>
        </folder>
        <folder name="TextFlowLineLocation" id="[flashx.textLayout.compose.TextFlowLineLocation]" sort="true" index="true" asAncestors="Object" tiptext="The TextFlowLineLocation class is an enumeration class that defines constants for specifying the location of a line within a paragraph." helpurl="flashx.textLayout.compose:TextFlowLineLocation">
            <folder name="Properties" id="Properties" tiptext="Properties for class TextFlowLineLocation" helpurl="flashx.textLayout.compose:TextFlowLineLocation">
                <string name="FIRST" object="[flashx.textLayout.compose.TextFlowLineLocation]" text="TextFlowLineLocation.FIRST" constant="true" tiptext="Specifies the first line in a paragraph." version="" playername="" helpurl="flashx.textLayout.compose:TextFlowLineLocation:FIRST"/>
                <string name="LAST" object="[flashx.textLayout.compose.TextFlowLineLocation]" text="TextFlowLineLocation.LAST" constant="true" tiptext="Specifies the last line in a paragraph." version="" playername="" helpurl="flashx.textLayout.compose:TextFlowLineLocation:LAST"/>
                <string name="MIDDLE" object="[flashx.textLayout.compose.TextFlowLineLocation]" text="TextFlowLineLocation.MIDDLE" constant="true" tiptext="Specifies a middle line in a paragraph - neither the first nor the last line." version="" playername="" helpurl="flashx.textLayout.compose:TextFlowLineLocation:MIDDLE"/>
                <string name="ONLY" object="[flashx.textLayout.compose.TextFlowLineLocation]" text="TextFlowLineLocation.ONLY" constant="true" tiptext="Specifies both the first and last lines in a paragraph." version="" playername="" helpurl="flashx.textLayout.compose:TextFlowLineLocation:ONLY"/>
            </folder>
        </folder>
        <folder name="TextLineRecycler" id="[flashx.textLayout.compose.TextLineRecycler]" sort="true" index="true" asAncestors="Object" tiptext="The TextLineRecycler class provides support for recycling of TextLines." helpurl="flashx.textLayout.compose:TextLineRecycler">
            <folder name="Methods" id="Methods" tiptext="Methods for class TextLineRecycler" helpurl="flashx.textLayout.compose:TextLineRecycler">
                <string name="addLineForReuse" object="[flashx.textLayout.compose.TextLineRecycler]" text="TextLineRecycler.addLineForReuse(%textLine:flash.text.engine:TextLine%):void" static="true" tiptext="Add a TextLine to the pool for reuse." version="1.5" playername="" helpurl="flashx.textLayout.compose:TextLineRecycler:addLineForReuse"/>
                <string name="getLineForReuse" object="[flashx.textLayout.compose.TextLineRecycler]" text="TextLineRecycler.getLineForReuse(%%):flash.text.engine:TextLine" static="true" tiptext="Return a TextLine from the pool for reuse." version="1.5" playername="" helpurl="flashx.textLayout.compose:TextLineRecycler:getLineForReuse"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class TextLineRecycler" helpurl="flashx.textLayout.compose:TextLineRecycler">
                <string name="textLineRecyclerEnabled" object="[flashx.textLayout.compose.TextLineRecycler]" text=".textLineRecyclerEnabled" tiptext="Controls if the TLF recycler enabled." version="" playername="" helpurl="flashx.textLayout.compose:TextLineRecycler:textLineRecyclerEnabled:get"/>
            </folder>
        </folder>
    </folder>
        <folder name="flashx.textLayout.container" id="flashx.textLayout.container" sort="true" tiptext="Classes for package flashx.textLayout.container" helpurl="flashx.textLayout.container">
        <folder name="ColumnState" id="[flashx.textLayout.container.ColumnState]" sort="true" index="true" asAncestors="Object" tiptext="The ColumnState class calculates the sizes and locations of columns using the width of the container and the container attributes." helpurl="flashx.textLayout.container:ColumnState">
            <folder name="Methods" id="Methods" tiptext="Methods for class ColumnState" helpurl="flashx.textLayout.container:ColumnState">
                <string name="ColumnState" object="[flashx.textLayout.container.ColumnState]" text="new ColumnState(%blockProgression:String,columnDirection:String,controller:flashx.textLayout.container:ContainerController,compositionWidth:Number,compositionHeight:Number%)" constructor="true" tiptext="Constructor function - creates a ColumnState object." version="1.5" playername="" helpurl="flashx.textLayout.container:ColumnState:ColumnState"/>
                <string name="getColumnAt" object="[flashx.textLayout.container.ColumnState]" text=".getColumnAt(%index:int%):flash.geom:Rectangle" tiptext="Returns the area that a column takes within the container." version="1.5" playername="" helpurl="flashx.textLayout.container:ColumnState:getColumnAt"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class ColumnState" helpurl="flashx.textLayout.container:ColumnState">
                <string name="columnCount" object="[flashx.textLayout.container.ColumnState]" text=".columnCount" tiptext="The number of columns in the container." version="" playername="" helpurl="flashx.textLayout.container:ColumnState:columnCount:get"/>
                <string name="columnGap" object="[flashx.textLayout.container.ColumnState]" text=".columnGap" tiptext="The amount of space, in pixels, left between columns in the container." version="" playername="" helpurl="flashx.textLayout.container:ColumnState:columnGap:get"/>
                <string name="columnWidth" object="[flashx.textLayout.container.ColumnState]" text=".columnWidth" tiptext="The width of columns, in pixels, in the container." version="" playername="" helpurl="flashx.textLayout.container:ColumnState:columnWidth:get"/>
            </folder>
        </folder>
        <folder name="ContainerController" id="[flashx.textLayout.container.ContainerController]" sort="true" index="true" asAncestors="Object" tiptext="The ContainerController class defines the relationship between a TextFlow object and a container." helpurl="flashx.textLayout.container:ContainerController">
            <folder name="Methods" id="Methods" tiptext="Methods for class ContainerController" helpurl="flashx.textLayout.container:ContainerController">
                <string name="ContainerController" object="[flashx.textLayout.container.ContainerController]" text="new ContainerController(%container:flash.display:Sprite[,compositionWidth:Number=100,compositionHeight:Number=100]%)" constructor="true" tiptext="Constructor - creates a ContainerController instance." version="1.5" playername="" helpurl="flashx.textLayout.container:ContainerController:ContainerController"/>
                <string name="activateHandler" object="[flashx.textLayout.container.ContainerController]" text=".activateHandler(%event:flash.events:Event%):void" tiptext="Processes the Event.ACTIVATE event when the client manages events." version="1.5" playername="" helpurl="flashx.textLayout.container:ContainerController:activateHandler"/>
                <string name="addBackgroundShape" object="[flashx.textLayout.container.ContainerController]" text=".addBackgroundShape(%shape:flash.display:Shape%):void" tiptext="Adds a flash.display.Shape object on which background shapes (such as background color) are drawn." version="1.5" playername="" helpurl="flashx.textLayout.container:ContainerController:addBackgroundShape"/>
                <string name="addSelectionContainer" object="[flashx.textLayout.container.ContainerController]" text=".addSelectionContainer(%selectionContainer:flash.display:DisplayObjectContainer%):void" tiptext="Adds a flash.display.DisplayObjectContainer object to which selection shapes (such as block selection highlight, cursor etc.) are added." version="1.5" playername="" helpurl="flashx.textLayout.container:ContainerController:addSelectionContainer"/>
                <string name="addTextLine" object="[flashx.textLayout.container.ContainerController]" text=".addTextLine(%textLine:flash.text.engine:TextLine,index:int%):void" tiptext="Adds a flash.text.engine.TextLine object as a descendant of container." version="1.5" playername="" helpurl="flashx.textLayout.container:ContainerController:addTextLine"/>
                <string name="autoScrollIfNecessary" object="[flashx.textLayout.container.ContainerController]" text=".autoScrollIfNecessary(%mouseX:int,mouseY:int%):void" tiptext="Handle a scroll event during a &quot;drag&quot; selection." version="1.5" playername="" helpurl="flashx.textLayout.container:ContainerController:autoScrollIfNecessary"/>
                <string name="beginMouseCapture" object="[flashx.textLayout.container.ContainerController]" text=".beginMouseCapture(%%):void" tiptext="Called to request clients to begin the forwarding of mouseup and mousemove events from outside a security sandbox." version="1.5" playername="" helpurl="flashx.textLayout.container:ContainerController:beginMouseCapture"/>
                <string name="clearStyle" object="[flashx.textLayout.container.ContainerController]" text=".clearStyle(%styleProp:String%):void" tiptext="Clears the style specified by styleProp from this FlowElement." version="1.5" playername="" helpurl="flashx.textLayout.container:ContainerController:clearStyle"/>
                <string name="createContextMenu" object="[flashx.textLayout.container.ContainerController]" text=".createContextMenu(%%):flash.ui:ContextMenu" tiptext="Creates a context menu for the ContainerController." version="1.5" playername="" helpurl="flashx.textLayout.container:ContainerController:createContextMenu"/>
                <string name="deactivateHandler" object="[flashx.textLayout.container.ContainerController]" text=".deactivateHandler(%event:flash.events:Event%):void" tiptext="Processes the Event.DEACTIVATE event when the client manages events." version="1.5" playername="" helpurl="flashx.textLayout.container:ContainerController:deactivateHandler"/>
                <string name="editHandler" object="[flashx.textLayout.container.ContainerController]" text=".editHandler(%event:flash.events:Event%):void" tiptext="Processes an edit event (CUT, COPY, PASTE, SELECT_ALL) when the client manages events." version="1.5" playername="" helpurl="flashx.textLayout.container:ContainerController:editHandler"/>
                <string name="endMouseCapture" object="[flashx.textLayout.container.ContainerController]" text=".endMouseCapture(%%):void" tiptext="Called to inform clients that the the forwarding of mouseup and mousemove events from outside a security sandbox is no longer needed." version="1.5" playername="" helpurl="flashx.textLayout.container:ContainerController:endMouseCapture"/>
                <string name="focusChangeHandler" object="[flashx.textLayout.container.ContainerController]" text=".focusChangeHandler(%event:flash.events:FocusEvent%):void" tiptext="Processes the FocusEvent.KEY_FOCUS_CHANGE and FocusEvent.MOUSE_FOCUS_CHANGE events when the client manages events." version="1.5" playername="" helpurl="flashx.textLayout.container:ContainerController:focusChangeHandler"/>
                <string name="focusInHandler" object="[flashx.textLayout.container.ContainerController]" text=".focusInHandler(%event:flash.events:FocusEvent%):void" tiptext="Processes the FocusEvent.FOCUS_IN event when the client manages events." version="1.5" playername="" helpurl="flashx.textLayout.container:ContainerController:focusInHandler"/>
                <string name="focusOutHandler" object="[flashx.textLayout.container.ContainerController]" text=".focusOutHandler(%event:flash.events:FocusEvent%):void" tiptext="Processes the FocusEvent.FOCUS_OUT event when the client manages events." version="1.5" playername="" helpurl="flashx.textLayout.container:ContainerController:focusOutHandler"/>
                <string name="getContentBounds" object="[flashx.textLayout.container.ContainerController]" text=".getContentBounds(%%):flash.geom:Rectangle" tiptext="Returns the area that the text occupies, as reflected by the last compose or update operation." version="1.5" playername="" helpurl="flashx.textLayout.container:ContainerController:getContentBounds"/>
                <string name="getFirstTextLineChildIndex" object="[flashx.textLayout.container.ContainerController]" text=".getFirstTextLineChildIndex(%%):int" tiptext="Gets the index at which the first text line must appear in its parent." version="1.5" playername="" helpurl="flashx.textLayout.container:ContainerController:getFirstTextLineChildIndex"/>
                <string name="getScrollDelta" object="[flashx.textLayout.container.ContainerController]" text=".getScrollDelta(%numLines:int%):Number" tiptext="Figure out the scroll distance required to scroll up or down by the specified number of lines." version="1.5" playername="" helpurl="flashx.textLayout.container:ContainerController:getScrollDelta"/>
                <string name="getStyle" object="[flashx.textLayout.container.ContainerController]" text=".getStyle(%styleProp:String%)" tiptext="Returns the value of the style specified by the styleProp parameter." version="1.5" playername="" helpurl="flashx.textLayout.container:ContainerController:getStyle"/>
                <string name="imeStartCompositionHandler" object="[flashx.textLayout.container.ContainerController]" text=".imeStartCompositionHandler(%event:flash.events:IMEEvent%):void" tiptext="Processes the IMEEvent.IME_START_COMPOSITION event when the client manages events." version="1.5" playername="" helpurl="flashx.textLayout.container:ContainerController:imeStartCompositionHandler"/>
                <string name="invalidateContents" object="[flashx.textLayout.container.ContainerController]" text=".invalidateContents(%%):void" tiptext="Marks all the text in this container as needing composing." version="1.5" playername="" helpurl="flashx.textLayout.container:ContainerController:invalidateContents"/>
                <string name="isDamaged" object="[flashx.textLayout.container.ContainerController]" text=".isDamaged(%%):Boolean" tiptext="Determines whether the container has text that requires composing." version="1.5" playername="" helpurl="flashx.textLayout.container:ContainerController:isDamaged"/>
                <string name="keyDownHandler" object="[flashx.textLayout.container.ContainerController]" text=".keyDownHandler(%event:flash.events:KeyboardEvent%):void" tiptext="Processes the KeyboardEvent.KEY_DOWN event when the client manages events." version="1.5" playername="" helpurl="flashx.textLayout.container:ContainerController:keyDownHandler"/>
                <string name="keyFocusChangeHandler" object="[flashx.textLayout.container.ContainerController]" text=".keyFocusChangeHandler(%event:flash.events:FocusEvent%):void" tiptext="Processes the FocusEvent.KEY_FOCUS_CHANGE event when the client manages events." version="1.5" playername="" helpurl="flashx.textLayout.container:ContainerController:keyFocusChangeHandler"/>
                <string name="keyUpHandler" object="[flashx.textLayout.container.ContainerController]" text=".keyUpHandler(%event:flash.events:KeyboardEvent%):void" tiptext="Processes the Keyboard.KEY_UP event when the client manages events." version="1.5" playername="" helpurl="flashx.textLayout.container:ContainerController:keyUpHandler"/>
                <string name="menuSelectHandler" object="[flashx.textLayout.container.ContainerController]" text=".menuSelectHandler(%event:flash.events:ContextMenuEvent%):void" tiptext="Processes the ContextMenuEvent.MENU_SELECT event when the client manages events." version="1.5" playername="" helpurl="flashx.textLayout.container:ContainerController:menuSelectHandler"/>
                <string name="mouseDoubleClickHandler" object="[flashx.textLayout.container.ContainerController]" text=".mouseDoubleClickHandler(%event:flash.events:MouseEvent%):void" tiptext="Processes the MouseEvent.DOUBLE_CLICK event when the client manages events." version="1.5" playername="" helpurl="flashx.textLayout.container:ContainerController:mouseDoubleClickHandler"/>
                <string name="mouseDownHandler" object="[flashx.textLayout.container.ContainerController]" text=".mouseDownHandler(%event:flash.events:MouseEvent%):void" tiptext="Processes the MouseEvent.MOUSE_DOWN event when the client manages events." version="1.5" playername="" helpurl="flashx.textLayout.container:ContainerController:mouseDownHandler"/>
                <string name="mouseMoveHandler" object="[flashx.textLayout.container.ContainerController]" text=".mouseMoveHandler(%event:flash.events:MouseEvent%):void" tiptext="Processes the MouseEvent.MOUSE_MOVE event when the client manages events." version="1.5" playername="" helpurl="flashx.textLayout.container:ContainerController:mouseMoveHandler"/>
                <string name="mouseMoveSomewhere" object="[flashx.textLayout.container.ContainerController]" text=".mouseMoveSomewhere(%event:flash.events:Event%):void" tiptext="Client call to forward a mouseMove event from outside a security sandbox." version="1.5" playername="" helpurl="flashx.textLayout.container:ContainerController:mouseMoveSomewhere"/>
                <string name="mouseOutHandler" object="[flashx.textLayout.container.ContainerController]" text=".mouseOutHandler(%event:flash.events:MouseEvent%):void" tiptext="Processes the MouseEvent.MOUSE_OUT event when the client manages events." version="1.5" playername="" helpurl="flashx.textLayout.container:ContainerController:mouseOutHandler"/>
                <string name="mouseOverHandler" object="[flashx.textLayout.container.ContainerController]" text=".mouseOverHandler(%event:flash.events:MouseEvent%):void" tiptext="Processes the MouseEvent.MOUSE_OVER event when the client manages events." version="1.5" playername="" helpurl="flashx.textLayout.container:ContainerController:mouseOverHandler"/>
                <string name="mouseUpHandler" object="[flashx.textLayout.container.ContainerController]" text=".mouseUpHandler(%event:flash.events:MouseEvent%):void" tiptext="Processes the MouseEvent.MOUSE_UP event when the client manages events." version="1.5" playername="" helpurl="flashx.textLayout.container:ContainerController:mouseUpHandler"/>
                <string name="mouseUpSomewhere" object="[flashx.textLayout.container.ContainerController]" text=".mouseUpSomewhere(%event:flash.events:Event%):void" tiptext="Client call to forward a mouseUp event from outside a security sandbox." version="1.5" playername="" helpurl="flashx.textLayout.container:ContainerController:mouseUpSomewhere"/>
                <string name="mouseWheelHandler" object="[flashx.textLayout.container.ContainerController]" text=".mouseWheelHandler(%event:flash.events:MouseEvent%):void" tiptext="Processes the MouseEvent.MOUSE_WHEEL event when the client manages events." version="1.5" playername="" helpurl="flashx.textLayout.container:ContainerController:mouseWheelHandler"/>
                <string name="removeSelectionContainer" object="[flashx.textLayout.container.ContainerController]" text=".removeSelectionContainer(%selectionContainer:flash.display:DisplayObjectContainer%):void" tiptext="Removes the flash.display.DisplayObjectContainer object which contains selection shapes (such as block selection highlight, cursor etc.)." version="1.5" playername="" helpurl="flashx.textLayout.container:ContainerController:removeSelectionContainer"/>
                <string name="removeTextLine" object="[flashx.textLayout.container.ContainerController]" text=".removeTextLine(%textLine:flash.text.engine:TextLine%):void" tiptext="Removes a flash.text.engine.TextLine object from its parent." version="1.5" playername="" helpurl="flashx.textLayout.container:ContainerController:removeTextLine"/>
                <string name="scrollToRange" object="[flashx.textLayout.container.ContainerController]" text=".scrollToRange(%activePosition:int,anchorPosition:int%):void" tiptext="Scrolls so that the text range is visible in the container." version="1.5" playername="" helpurl="flashx.textLayout.container:ContainerController:scrollToRange"/>
                <string name="selectRange" object="[flashx.textLayout.container.ContainerController]" text=".selectRange(%anchorIndex:int,activeIndex:int%):void" tiptext="Sets the range of selected text in a component implementing ITextSupport." version="10.0" playername="" helpurl="flashx.textLayout.container:ContainerController:selectRange"/>
                <string name="setCompositionSize" object="[flashx.textLayout.container.ContainerController]" text=".setCompositionSize(%w:Number,h:Number%):void" tiptext="Sets the width and height allowed for text in the container." version="1.5" playername="" helpurl="flashx.textLayout.container:ContainerController:setCompositionSize"/>
                <string name="setStyle" object="[flashx.textLayout.container.ContainerController]" text=".setStyle(%styleProp:String,newValue:*%):void" tiptext="Sets the value of the style specified by the styleProp parameter to the valuespecified by the newValue parameter." version="1.5" playername="" helpurl="flashx.textLayout.container:ContainerController:setStyle"/>
                <string name="textInputHandler" object="[flashx.textLayout.container.ContainerController]" text=".textInputHandler(%event:flash.events:TextEvent%):void" tiptext="Processes the TextEvent.TEXT_INPUT event when the client manages events." version="1.5" playername="" helpurl="flashx.textLayout.container:ContainerController:textInputHandler"/>
                <string name="updateVisibleRectangle" object="[flashx.textLayout.container.ContainerController]" text=".updateVisibleRectangle(%%):void" tiptext="If scrolling, sets the scroll rectangle to the container rectangle so that any lines that are halfway in view are clipped to the scrollable region." version="1.5" playername="" helpurl="flashx.textLayout.container:ContainerController:updateVisibleRectangle"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class ContainerController" helpurl="flashx.textLayout.container:ContainerController">
                <string name="absoluteStart" object="[flashx.textLayout.container.ContainerController]" text=".absoluteStart" tiptext="Returns the first character in the container." version="" playername="" helpurl="flashx.textLayout.container:ContainerController:absoluteStart:get"/>
                <string name="alignmentBaseline" object="[flashx.textLayout.container.ContainerController]" text=".alignmentBaseline" tiptext="TextLayoutFormat: Specifies the baseline to which the dominant baseline aligns." version="" playername="" helpurl="flashx.textLayout.container:ContainerController:alignmentBaseline:get"/>
                <string name="backgroundAlpha" object="[flashx.textLayout.container.ContainerController]" text=".backgroundAlpha" tiptext="TextLayoutFormat: Alpha (transparency) value for the background (adopts default value if undefined during cascade)." version="" playername="" helpurl="flashx.textLayout.container:ContainerController:backgroundAlpha:get"/>
                <string name="backgroundColor" object="[flashx.textLayout.container.ContainerController]" text=".backgroundColor" tiptext="TextLayoutFormat: Background color of the text (adopts default value if undefined during cascade)." version="" playername="" helpurl="flashx.textLayout.container:ContainerController:backgroundColor:get"/>
                <string name="baselineShift" object="[flashx.textLayout.container.ContainerController]" text=".baselineShift" tiptext="TextLayoutFormat: Amount to shift the baseline from the dominantBaseline value." version="" playername="" helpurl="flashx.textLayout.container:ContainerController:baselineShift:get"/>
                <string name="blockProgression" object="[flashx.textLayout.container.ContainerController]" text=".blockProgression" tiptext="TextLayoutFormat: Specifies a vertical or horizontal progression of line placement." version="" playername="" helpurl="flashx.textLayout.container:ContainerController:blockProgression:get"/>
                <string name="breakOpportunity" object="[flashx.textLayout.container.ContainerController]" text=".breakOpportunity" tiptext="TextLayoutFormat: Controls where lines are allowed to break when breaking wrapping text into multiple lines." version="" playername="" helpurl="flashx.textLayout.container:ContainerController:breakOpportunity:get"/>
                <string name="cffHinting" object="[flashx.textLayout.container.ContainerController]" text=".cffHinting" tiptext="TextLayoutFormat: The type of CFF hinting used for this text." version="" playername="" helpurl="flashx.textLayout.container:ContainerController:cffHinting:get"/>
                <string name="color" object="[flashx.textLayout.container.ContainerController]" text=".color" tiptext="TextLayoutFormat: Color of the text." version="" playername="" helpurl="flashx.textLayout.container:ContainerController:color:get"/>
                <string name="columnCount" object="[flashx.textLayout.container.ContainerController]" text=".columnCount" tiptext="TextLayoutFormat: Number of text columns (adopts default value if undefined during cascade)." version="" playername="" helpurl="flashx.textLayout.container:ContainerController:columnCount:get"/>
                <string name="columnGap" object="[flashx.textLayout.container.ContainerController]" text=".columnGap" tiptext="TextLayoutFormat: Specifies the amount of gutter space, in pixels, to leave between the columns (adopts default value if undefined during cascade)." version="" playername="" helpurl="flashx.textLayout.container:ContainerController:columnGap:get"/>
                <string name="columnState" object="[flashx.textLayout.container.ContainerController]" text=".columnState" tiptext="Returns a ColumnState object, which describes the number and characteristics of columns in the container." version="" playername="" helpurl="flashx.textLayout.container:ContainerController:columnState:get"/>
                <string name="columnWidth" object="[flashx.textLayout.container.ContainerController]" text=".columnWidth" tiptext="TextLayoutFormat: Column width in pixels (adopts default value if undefined during cascade)." version="" playername="" helpurl="flashx.textLayout.container:ContainerController:columnWidth:get"/>
                <string name="compositionHeight" object="[flashx.textLayout.container.ContainerController]" text=".compositionHeight" tiptext="Returns the vertical extent allowed for text inside the container." version="" playername="" helpurl="flashx.textLayout.container:ContainerController:compositionHeight:get"/>
                <string name="compositionWidth" object="[flashx.textLayout.container.ContainerController]" text=".compositionWidth" tiptext="Returns the horizontal extent allowed for text inside the container." version="" playername="" helpurl="flashx.textLayout.container:ContainerController:compositionWidth:get"/>
                <string name="computedFormat" object="[flashx.textLayout.container.ContainerController]" text=".computedFormat" tiptext="Returns an ITextLayoutFormat instance with the attributes applied to this container, including the attributes inherited from its root element." version="" playername="" helpurl="flashx.textLayout.container:ContainerController:computedFormat:get"/>
                <string name="container" object="[flashx.textLayout.container.ContainerController]" text=".container" tiptext="Returns the container display object that holds the text lines for this ContainerController instance." version="" playername="" helpurl="flashx.textLayout.container:ContainerController:container:get"/>
                <string name="coreStyles" object="[flashx.textLayout.container.ContainerController]" text=".coreStyles" tiptext="Returns the coreStyles on this ContainerController." version="" playername="" helpurl="flashx.textLayout.container:ContainerController:coreStyles:get"/>
                <string name="digitCase" object="[flashx.textLayout.container.ContainerController]" text=".digitCase" tiptext="TextLayoutFormat: The type of digit case used for this text." version="" playername="" helpurl="flashx.textLayout.container:ContainerController:digitCase:get"/>
                <string name="digitWidth" object="[flashx.textLayout.container.ContainerController]" text=".digitWidth" tiptext="TextLayoutFormat: Type of digit width used for this text." version="" playername="" helpurl="flashx.textLayout.container:ContainerController:digitWidth:get"/>
                <string name="direction" object="[flashx.textLayout.container.ContainerController]" text=".direction" tiptext="TextLayoutFormat: Specifies the default bidirectional embedding level of the text in the text block." version="" playername="" helpurl="flashx.textLayout.container:ContainerController:direction:get"/>
                <string name="dominantBaseline" object="[flashx.textLayout.container.ContainerController]" text=".dominantBaseline" tiptext="TextLayoutFormat: Specifies which element baseline snaps to the alignmentBaseline to determine the vertical position of the element on the line." version="" playername="" helpurl="flashx.textLayout.container:ContainerController:dominantBaseline:get"/>
                <string name="firstBaselineOffset" object="[flashx.textLayout.container.ContainerController]" text=".firstBaselineOffset" tiptext="TextLayoutFormat: Specifies the baseline position of the first line in the container." version="" playername="" helpurl="flashx.textLayout.container:ContainerController:firstBaselineOffset:get"/>
                <string name="flowComposer" object="[flashx.textLayout.container.ContainerController]" text=".flowComposer" tiptext="Returns the flow composer object that composes and highlights text into the container that this controller manages." version="" playername="" helpurl="flashx.textLayout.container:ContainerController:flowComposer:get"/>
                <string name="fontFamily" object="[flashx.textLayout.container.ContainerController]" text=".fontFamily" tiptext="TextLayoutFormat: The name of the font to use, or a comma-separated list of font names." version="" playername="" helpurl="flashx.textLayout.container:ContainerController:fontFamily:get"/>
                <string name="fontLookup" object="[flashx.textLayout.container.ContainerController]" text=".fontLookup" tiptext="TextLayoutFormat: Font lookup to use." version="" playername="" helpurl="flashx.textLayout.container:ContainerController:fontLookup:get"/>
                <string name="fontSize" object="[flashx.textLayout.container.ContainerController]" text=".fontSize" tiptext="TextLayoutFormat: The size of the text in pixels." version="" playername="" helpurl="flashx.textLayout.container:ContainerController:fontSize:get"/>
                <string name="fontStyle" object="[flashx.textLayout.container.ContainerController]" text=".fontStyle" tiptext="TextLayoutFormat: Style of text." version="" playername="" helpurl="flashx.textLayout.container:ContainerController:fontStyle:get"/>
                <string name="fontWeight" object="[flashx.textLayout.container.ContainerController]" text=".fontWeight" tiptext="TextLayoutFormat: Weight of text." version="" playername="" helpurl="flashx.textLayout.container:ContainerController:fontWeight:get"/>
                <string name="format" object="[flashx.textLayout.container.ContainerController]" text=".format" tiptext="Stores the ITextLayoutFormat object that contains the attributes for this container." version="" playername="" helpurl="flashx.textLayout.container:ContainerController:format:get"/>
                <string name="horizontalScrollPolicy" object="[flashx.textLayout.container.ContainerController]" text=".horizontalScrollPolicy" tiptext="Specifies the horizontal scrolling policy, which you can set by assigning one of the constants of the ScrollPolicy class: ON, OFF, or AUTO." version="" playername="" helpurl="flashx.textLayout.container:ContainerController:horizontalScrollPolicy:get"/>
                <string name="horizontalScrollPosition" object="[flashx.textLayout.container.ContainerController]" text=".horizontalScrollPosition" tiptext="Specifies the current horizontal scroll location on the stage." version="" playername="" helpurl="flashx.textLayout.container:ContainerController:horizontalScrollPosition:get"/>
                <string name="interactionManager" object="[flashx.textLayout.container.ContainerController]" text=".interactionManager" tiptext="The InteractionManager associated with this TextFlow object." version="" playername="" helpurl="flashx.textLayout.container:ContainerController:interactionManager:get"/>
                <string name="justificationRule" object="[flashx.textLayout.container.ContainerController]" text=".justificationRule" tiptext="TextLayoutFormat: Rule used to justify text in a paragraph." version="" playername="" helpurl="flashx.textLayout.container:ContainerController:justificationRule:get"/>
                <string name="justificationStyle" object="[flashx.textLayout.container.ContainerController]" text=".justificationStyle" tiptext="TextLayoutFormat: The style used for justification of the paragraph." version="" playername="" helpurl="flashx.textLayout.container:ContainerController:justificationStyle:get"/>
                <string name="kerning" object="[flashx.textLayout.container.ContainerController]" text=".kerning" tiptext="TextLayoutFormat: Kerning adjusts the pixels between certain character pairs to improve readability." version="" playername="" helpurl="flashx.textLayout.container:ContainerController:kerning:get"/>
                <string name="leadingModel" object="[flashx.textLayout.container.ContainerController]" text=".leadingModel" tiptext="TextLayoutFormat: Specifies the leading model, which is a combination of leading basis and leading direction." version="" playername="" helpurl="flashx.textLayout.container:ContainerController:leadingModel:get"/>
                <string name="ligatureLevel" object="[flashx.textLayout.container.ContainerController]" text=".ligatureLevel" tiptext="TextLayoutFormat: Controls which of the ligatures that are defined in the font may be used in the text." version="" playername="" helpurl="flashx.textLayout.container:ContainerController:ligatureLevel:get"/>
                <string name="lineBreak" object="[flashx.textLayout.container.ContainerController]" text=".lineBreak" tiptext="TextLayoutFormat: Controls word wrapping within the container (adopts default value if undefined during cascade)." version="" playername="" helpurl="flashx.textLayout.container:ContainerController:lineBreak:get"/>
                <string name="lineHeight" object="[flashx.textLayout.container.ContainerController]" text=".lineHeight" tiptext="TextLayoutFormat: Leading controls for the text." version="" playername="" helpurl="flashx.textLayout.container:ContainerController:lineHeight:get"/>
                <string name="lineThrough" object="[flashx.textLayout.container.ContainerController]" text=".lineThrough" tiptext="TextLayoutFormat: If true, applies strikethrough, a line drawn through the middle of the text." version="" playername="" helpurl="flashx.textLayout.container:ContainerController:lineThrough:get"/>
                <string name="locale" object="[flashx.textLayout.container.ContainerController]" text=".locale" tiptext="TextLayoutFormat: The locale of the text." version="" playername="" helpurl="flashx.textLayout.container:ContainerController:locale:get"/>
                <string name="paddingBottom" object="[flashx.textLayout.container.ContainerController]" text=".paddingBottom" tiptext="TextLayoutFormat: Botttom inset in pixels (adopts default value if undefined during cascade)." version="" playername="" helpurl="flashx.textLayout.container:ContainerController:paddingBottom:get"/>
                <string name="paddingLeft" object="[flashx.textLayout.container.ContainerController]" text=".paddingLeft" tiptext="TextLayoutFormat: Left inset in pixels (adopts default value if undefined during cascade)." version="" playername="" helpurl="flashx.textLayout.container:ContainerController:paddingLeft:get"/>
                <string name="paddingRight" object="[flashx.textLayout.container.ContainerController]" text=".paddingRight" tiptext="TextLayoutFormat: Right inset in pixels (adopts default value if undefined during cascade)." version="" playername="" helpurl="flashx.textLayout.container:ContainerController:paddingRight:get"/>
                <string name="paddingTop" object="[flashx.textLayout.container.ContainerController]" text=".paddingTop" tiptext="TextLayoutFormat: Top inset in pixels (adopts default value if undefined during cascade)." version="" playername="" helpurl="flashx.textLayout.container:ContainerController:paddingTop:get"/>
                <string name="paragraphEndIndent" object="[flashx.textLayout.container.ContainerController]" text=".paragraphEndIndent" tiptext="TextLayoutFormat: A Number that specifies, in pixels, the amount to indent the paragraph&apos;s end edge." version="" playername="" helpurl="flashx.textLayout.container:ContainerController:paragraphEndIndent:get"/>
                <string name="paragraphSpaceAfter" object="[flashx.textLayout.container.ContainerController]" text=".paragraphSpaceAfter" tiptext="TextLayoutFormat: A Number that specifies the amount of space, in pixels, to leave after the paragraph." version="" playername="" helpurl="flashx.textLayout.container:ContainerController:paragraphSpaceAfter:get"/>
                <string name="paragraphSpaceBefore" object="[flashx.textLayout.container.ContainerController]" text=".paragraphSpaceBefore" tiptext="TextLayoutFormat: A Number that specifies the amount of space, in pixels, to leave before the paragraph." version="" playername="" helpurl="flashx.textLayout.container:ContainerController:paragraphSpaceBefore:get"/>
                <string name="paragraphStartIndent" object="[flashx.textLayout.container.ContainerController]" text=".paragraphStartIndent" tiptext="TextLayoutFormat: A Number that specifies, in pixels, the amount to indent the paragraph&apos;s start edge." version="" playername="" helpurl="flashx.textLayout.container:ContainerController:paragraphStartIndent:get"/>
                <string name="renderingMode" object="[flashx.textLayout.container.ContainerController]" text=".renderingMode" tiptext="TextLayoutFormat: The rendering mode used for this text." version="" playername="" helpurl="flashx.textLayout.container:ContainerController:renderingMode:get"/>
                <string name="rootElement" object="[flashx.textLayout.container.ContainerController]" text=".rootElement" tiptext="Returns the root element that appears in the container." version="" playername="" helpurl="flashx.textLayout.container:ContainerController:rootElement:get"/>
                <string name="tabStops" object="[flashx.textLayout.container.ContainerController]" text=".tabStops" tiptext="TextLayoutFormat: Specifies the tab stops associated with the paragraph." version="" playername="" helpurl="flashx.textLayout.container:ContainerController:tabStops:get"/>
                <string name="textAlignLast" object="[flashx.textLayout.container.ContainerController]" text=".textAlignLast" tiptext="TextLayoutFormat: Alignment of the last (or only) line in the paragraph relative to the container in justified text." version="" playername="" helpurl="flashx.textLayout.container:ContainerController:textAlignLast:get"/>
                <string name="textAlign" object="[flashx.textLayout.container.ContainerController]" text=".textAlign" tiptext="TextLayoutFormat: Alignment of lines in the paragraph relative to the container." version="" playername="" helpurl="flashx.textLayout.container:ContainerController:textAlign:get"/>
                <string name="textAlpha" object="[flashx.textLayout.container.ContainerController]" text=".textAlpha" tiptext="TextLayoutFormat: Alpha (transparency) value for the text." version="" playername="" helpurl="flashx.textLayout.container:ContainerController:textAlpha:get"/>
                <string name="textDecoration" object="[flashx.textLayout.container.ContainerController]" text=".textDecoration" tiptext="TextLayoutFormat: Decoration on text." version="" playername="" helpurl="flashx.textLayout.container:ContainerController:textDecoration:get"/>
                <string name="textFlow" object="[flashx.textLayout.container.ContainerController]" text=".textFlow" tiptext="Returns the TextFlow object whose content appears in the container." version="" playername="" helpurl="flashx.textLayout.container:ContainerController:textFlow:get"/>
                <string name="textIndent" object="[flashx.textLayout.container.ContainerController]" text=".textIndent" tiptext="TextLayoutFormat: A Number that specifies, in pixels, the amount to indent the first line of the paragraph." version="" playername="" helpurl="flashx.textLayout.container:ContainerController:textIndent:get"/>
                <string name="textJustify" object="[flashx.textLayout.container.ContainerController]" text=".textJustify" tiptext="TextLayoutFormat: Specifies options for justifying text." version="" playername="" helpurl="flashx.textLayout.container:ContainerController:textJustify:get"/>
                <string name="textLength" object="[flashx.textLayout.container.ContainerController]" text=".textLength" tiptext="Returns the total number of characters in the container." version="" playername="" helpurl="flashx.textLayout.container:ContainerController:textLength:get"/>
                <string name="textRotation" object="[flashx.textLayout.container.ContainerController]" text=".textRotation" tiptext="TextLayoutFormat: Determines the number of degrees to rotate this text." version="" playername="" helpurl="flashx.textLayout.container:ContainerController:textRotation:get"/>
                <string name="trackingLeft" object="[flashx.textLayout.container.ContainerController]" text=".trackingLeft" tiptext="TextLayoutFormat: Number in pixels (or percent of fontSize, like 120%) indicating the amount of tracking (manual kerning) to be applied to the left of each character." version="" playername="" helpurl="flashx.textLayout.container:ContainerController:trackingLeft:get"/>
                <string name="trackingRight" object="[flashx.textLayout.container.ContainerController]" text=".trackingRight" tiptext="TextLayoutFormat: Number in pixels (or percent of fontSize, like 120%) indicating the amount of tracking (manual kerning) to be applied to the right of each character." version="" playername="" helpurl="flashx.textLayout.container:ContainerController:trackingRight:get"/>
                <string name="typographicCase" object="[flashx.textLayout.container.ContainerController]" text=".typographicCase" tiptext="TextLayoutFormat: The type of typographic case used for this text." version="" playername="" helpurl="flashx.textLayout.container:ContainerController:typographicCase:get"/>
                <string name="userStyles" object="[flashx.textLayout.container.ContainerController]" text=".userStyles" tiptext="The userStyles object for a ContainerController instance." version="" playername="" helpurl="flashx.textLayout.container:ContainerController:userStyles:get"/>
                <string name="verticalAlign" object="[flashx.textLayout.container.ContainerController]" text=".verticalAlign" tiptext="TextLayoutFormat: Vertical alignment or justification (adopts default value if undefined during cascade)." version="" playername="" helpurl="flashx.textLayout.container:ContainerController:verticalAlign:get"/>
                <string name="verticalScrollPolicy" object="[flashx.textLayout.container.ContainerController]" text=".verticalScrollPolicy" tiptext="Specifies the vertical scrolling policy, which you can set by assigning one of the constants of the ScrollPolicy class: ON, OFF, or, AUTO." version="" playername="" helpurl="flashx.textLayout.container:ContainerController:verticalScrollPolicy:get"/>
                <string name="verticalScrollPosition" object="[flashx.textLayout.container.ContainerController]" text=".verticalScrollPosition" tiptext="Specifies the current vertical scroll location on the stage." version="" playername="" helpurl="flashx.textLayout.container:ContainerController:verticalScrollPosition:get"/>
                <string name="whiteSpaceCollapse" object="[flashx.textLayout.container.ContainerController]" text=".whiteSpaceCollapse" tiptext="TextLayoutFormat: Collapses or preserves whitespace when importing text into a TextFlow." version="" playername="" helpurl="flashx.textLayout.container:ContainerController:whiteSpaceCollapse:get"/>
                <string name="containerControllerInitialFormat" object="[flashx.textLayout.container.ContainerController]" text=".containerControllerInitialFormat" tiptext="" version="" playername="" helpurl="flashx.textLayout.container:ContainerController:containerControllerInitialFormat:set"/>
            </folder>
        </folder>
        <folder name="ISandboxSupport" id="[flashx.textLayout.container.ISandboxSupport]" sort="true" index="true" tiptext="Interface to support TLF content in a sub-application." helpurl="flashx.textLayout.container:ISandboxSupport">
            <folder name="Methods" id="Methods" tiptext="Methods for class ISandboxSupport" helpurl="flashx.textLayout.container:ISandboxSupport">
                <string name="beginMouseCapture" object="[flashx.textLayout.container.ISandboxSupport]" text=".beginMouseCapture(%%):void" tiptext="Called to request clients to begin the forwarding of mouseup and mousemove events from outside a security sandbox." version="1.5" playername="" helpurl="flashx.textLayout.container:ISandboxSupport:beginMouseCapture"/>
                <string name="endMouseCapture" object="[flashx.textLayout.container.ISandboxSupport]" text=".endMouseCapture(%%):void" tiptext="Called to inform clients that the the forwarding of mouseup and mousemove events from outside a security sandbox is no longer needed." version="1.5" playername="" helpurl="flashx.textLayout.container:ISandboxSupport:endMouseCapture"/>
                <string name="mouseMoveSomewhere" object="[flashx.textLayout.container.ISandboxSupport]" text=".mouseMoveSomewhere(%event:flash.events:Event%):void" tiptext="Client call to forward a mouseMove event from outside a security sandbox." version="1.5" playername="" helpurl="flashx.textLayout.container:ISandboxSupport:mouseMoveSomewhere"/>
                <string name="mouseUpSomewhere" object="[flashx.textLayout.container.ISandboxSupport]" text=".mouseUpSomewhere(%event:flash.events:Event%):void" tiptext="Client call to forward a mouseUp event from outside a security sandbox." version="1.5" playername="" helpurl="flashx.textLayout.container:ISandboxSupport:mouseUpSomewhere"/>
            </folder>
        </folder>
        <folder name="ScrollPolicy" id="[flashx.textLayout.container.ScrollPolicy]" sort="true" index="true" asAncestors="Object" tiptext="The ScrollPolicy class is an enumeration class that defines values for setting the horizontalScrollPolicy and verticalScrollPolicy properties of the ContainerController class, which defines a text flow container." helpurl="flashx.textLayout.container:ScrollPolicy">
            <folder name="Properties" id="Properties" tiptext="Properties for class ScrollPolicy" helpurl="flashx.textLayout.container:ScrollPolicy">
                <string name="AUTO" object="[flashx.textLayout.container.ScrollPolicy]" text="ScrollPolicy.AUTO" constant="true" tiptext="Specifies that scrolling is to occur if the content exceeds the container&apos;s dimension." version="" playername="" helpurl="flashx.textLayout.container:ScrollPolicy:AUTO"/>
                <string name="OFF" object="[flashx.textLayout.container.ScrollPolicy]" text="ScrollPolicy.OFF" constant="true" tiptext="Causes the runtime to not display overflow lines, which means that the user cannot navigate to them." version="" playername="" helpurl="flashx.textLayout.container:ScrollPolicy:OFF"/>
                <string name="ON" object="[flashx.textLayout.container.ScrollPolicy]" text="ScrollPolicy.ON" constant="true" tiptext="Specifies that scrolling is available to access content that exceeds the container&apos;s dimension." version="" playername="" helpurl="flashx.textLayout.container:ScrollPolicy:ON"/>
            </folder>
        </folder>
        <folder name="TextContainerManager" id="[flashx.textLayout.container.TextContainerManager]" sort="true" index="true" asAncestors="flash.events:EventDispatcher,Object" tiptext="Manages text in a container." helpurl="flashx.textLayout.container:TextContainerManager">
            <folder name="Methods" id="Methods" tiptext="Methods for class TextContainerManager" helpurl="flashx.textLayout.container:TextContainerManager">
                <string name="TextContainerManager" object="[flashx.textLayout.container.TextContainerManager]" text="new TextContainerManager(%container:flash.display:Sprite[,configuration:flashx.textLayout.elements:IConfiguration=null]%)" constructor="true" tiptext="Constructor function - creates a TextContainerManager instance." version="1.5" playername="" helpurl="flashx.textLayout.container:TextContainerManager:TextContainerManager"/>
                <string name="activateHandler" object="[flashx.textLayout.container.TextContainerManager]" text=".activateHandler(%event:flash.events:Event%):void" tiptext="Processes the Event.ACTIVATE event when the client manages events." version="1.5" playername="" helpurl="flashx.textLayout.container:TextContainerManager:activateHandler"/>
                <string name="beginInteraction" object="[flashx.textLayout.container.TextContainerManager]" text=".beginInteraction(%%):flashx.textLayout.edit:ISelectionManager" tiptext="Returns the current ISelectionManager instance." version="1.5" playername="" helpurl="flashx.textLayout.container:TextContainerManager:beginInteraction"/>
                <string name="beginMouseCapture" object="[flashx.textLayout.container.TextContainerManager]" text=".beginMouseCapture(%%):void" tiptext="Called to request clients to begin the forwarding of mouseup and mousemove events from outside a security sandbox." version="1.5" playername="" helpurl="flashx.textLayout.container:TextContainerManager:beginMouseCapture"/>
                <string name="compose" object="[flashx.textLayout.container.TextContainerManager]" text=".compose(%%):void" tiptext="Composes the container text; calls either the factory or updateAllControllers()." version="1.5" playername="" helpurl="flashx.textLayout.container:TextContainerManager:compose"/>
                <string name="createContextMenu" object="[flashx.textLayout.container.TextContainerManager]" text=".createContextMenu(%%):flash.ui:ContextMenu" tiptext="Creates a ContextMenu for the TextContainerManager." version="1.5" playername="" helpurl="flashx.textLayout.container:TextContainerManager:createContextMenu"/>
                <string name="createEditManager" object="[flashx.textLayout.container.TextContainerManager]" text=".createEditManager(%undoManager:flashx.undo:IUndoManager%):flashx.textLayout.edit:IEditManager" tiptext="Create an edit manager to use for editing." version="1.5" playername="" helpurl="flashx.textLayout.container:TextContainerManager:createEditManager"/>
                <string name="createSelectionManager" object="[flashx.textLayout.container.TextContainerManager]" text=".createSelectionManager(%%):flashx.textLayout.edit:ISelectionManager" tiptext="Create a selection manager to use for selection." version="1.5" playername="" helpurl="flashx.textLayout.container:TextContainerManager:createSelectionManager"/>
                <string name="deactivateHandler" object="[flashx.textLayout.container.TextContainerManager]" text=".deactivateHandler(%event:flash.events:Event%):void" tiptext="Processes the Event.DEACTIVATE event when the client manages events." version="1.5" playername="" helpurl="flashx.textLayout.container:TextContainerManager:deactivateHandler"/>
                <string name="drawBackgroundAndSetScrollRect" object="[flashx.textLayout.container.TextContainerManager]" text=".drawBackgroundAndSetScrollRect(%scrollX:Number,scrollY:Number%):Boolean" tiptext="Returns true if it has filled in the container&apos;s scrollRect property." version="1.5" playername="" helpurl="flashx.textLayout.container:TextContainerManager:drawBackgroundAndSetScrollRect"/>
                <string name="editHandler" object="[flashx.textLayout.container.TextContainerManager]" text=".editHandler(%event:flash.events:Event%):void" tiptext="Processes an edit event (CUT, COPY, PASTE, SELECT_ALL) when the client manages events." version="1.5" playername="" helpurl="flashx.textLayout.container:TextContainerManager:editHandler"/>
                <string name="endInteraction" object="[flashx.textLayout.container.TextContainerManager]" text=".endInteraction(%%):void" tiptext="Terminates interaction." version="1.5" playername="" helpurl="flashx.textLayout.container:TextContainerManager:endInteraction"/>
                <string name="endMouseCapture" object="[flashx.textLayout.container.TextContainerManager]" text=".endMouseCapture(%%):void" tiptext="Called to inform clients that the the forwarding of mouseup and mousemove events from outside a security sandbox is no longer needed." version="1.5" playername="" helpurl="flashx.textLayout.container:TextContainerManager:endMouseCapture"/>
                <string name="focusChangeHandler" object="[flashx.textLayout.container.TextContainerManager]" text=".focusChangeHandler(%event:flash.events:FocusEvent%):void" tiptext="Processes the FocusEvent.KEY_FOCUS_CHANGE and FocusEvent.MOUSE_FOCUS_CHANGE events when the client manages events." version="1.5" playername="" helpurl="flashx.textLayout.container:TextContainerManager:focusChangeHandler"/>
                <string name="focusInHandler" object="[flashx.textLayout.container.TextContainerManager]" text=".focusInHandler(%event:flash.events:FocusEvent%):void" tiptext="Process a focusIn event." version="1.5" playername="" helpurl="flashx.textLayout.container:TextContainerManager:focusInHandler"/>
                <string name="focusOutHandler" object="[flashx.textLayout.container.TextContainerManager]" text=".focusOutHandler(%event:flash.events:FocusEvent%):void" tiptext="Processes the FocusEvent.FOCUS_OUT event when the client manages events." version="1.5" playername="" helpurl="flashx.textLayout.container:TextContainerManager:focusOutHandler"/>
                <string name="getContentBounds" object="[flashx.textLayout.container.TextContainerManager]" text=".getContentBounds(%%):flash.geom:Rectangle" tiptext="Creates a rectangle that shows where the last call to either the compose() method or the updateContainer() method placed the text." version="1.5" playername="" helpurl="flashx.textLayout.container:TextContainerManager:getContentBounds"/>
                <string name="getFocusedSelectionFormat" object="[flashx.textLayout.container.TextContainerManager]" text=".getFocusedSelectionFormat(%%):flashx.textLayout.edit:SelectionFormat" tiptext="Returns the focusedSelectionFormat - by default get it from the configuration." version="" playername="" helpurl="flashx.textLayout.container:TextContainerManager:getFocusedSelectionFormat"/>
                <string name="getInactiveSelectionFormat" object="[flashx.textLayout.container.TextContainerManager]" text=".getInactiveSelectionFormat(%%):flashx.textLayout.edit:SelectionFormat" tiptext="Returns the inactiveSelectionFormat - by default get it from the configuration This can be overridden in the subclass to supply a different SelectionFormat" version="" playername="" helpurl="flashx.textLayout.container:TextContainerManager:getInactiveSelectionFormat"/>
                <string name="getLineAt" object="[flashx.textLayout.container.TextContainerManager]" text=".getLineAt(%index:int%):flash.text.engine:TextLine" tiptext="Return the TextLine at the index from array of composed lines." version="1.5" playername="" helpurl="flashx.textLayout.container:TextContainerManager:getLineAt"/>
                <string name="getScrollDelta" object="[flashx.textLayout.container.TextContainerManager]" text=".getScrollDelta(%numLines:int%):Number" tiptext="Figure out the scroll distance required to scroll up or down by the specified number of lines." version="1.5" playername="" helpurl="flashx.textLayout.container:TextContainerManager:getScrollDelta"/>
                <string name="getTextFlow" object="[flashx.textLayout.container.TextContainerManager]" text=".getTextFlow(%%):flashx.textLayout.elements:TextFlow" tiptext="The current TextFlow." version="1.5" playername="" helpurl="flashx.textLayout.container:TextContainerManager:getTextFlow"/>
                <string name="getText" object="[flashx.textLayout.container.TextContainerManager]" text=".getText(%[separator:String=]%):String" tiptext="Returns the current text using a separator between paragraphs." version="1.5" playername="" helpurl="flashx.textLayout.container:TextContainerManager:getText"/>
                <string name="getUndoManager" object="[flashx.textLayout.container.TextContainerManager]" text=".getUndoManager(%%):flashx.undo:IUndoManager" tiptext="Returns the undo manager to use." version="1.5" playername="" helpurl="flashx.textLayout.container:TextContainerManager:getUndoManager"/>
                <string name="getUnfocusedSelectionFormat" object="[flashx.textLayout.container.TextContainerManager]" text=".getUnfocusedSelectionFormat(%%):flashx.textLayout.edit:SelectionFormat" tiptext="Returns the unfocusedSelectionFormat - by default get it from the configuration You can override this method in the subclass to supply a different SelectionFormat." version="1.5" playername="" helpurl="flashx.textLayout.container:TextContainerManager:getUnfocusedSelectionFormat"/>
                <string name="imeStartCompositionHandler" object="[flashx.textLayout.container.TextContainerManager]" text=".imeStartCompositionHandler(%event:flash.events:IMEEvent%):void" tiptext="Processes the IME_START_COMPOSITION event when the client manages events." version="1.5" playername="" helpurl="flashx.textLayout.container:TextContainerManager:imeStartCompositionHandler"/>
                <string name="invalidateSelectionFormats" object="[flashx.textLayout.container.TextContainerManager]" text=".invalidateSelectionFormats(%%):void" tiptext="Call this if you change the selection formats (SelectionFormat) and want the interactionManager to update." version="1.5" playername="" helpurl="flashx.textLayout.container:TextContainerManager:invalidateSelectionFormats"/>
                <string name="invalidateUndoManager" object="[flashx.textLayout.container.TextContainerManager]" text=".invalidateUndoManager(%%):void" tiptext="Call this if you are editing, and want to reset the undo manager used for editing." version="1.5" playername="" helpurl="flashx.textLayout.container:TextContainerManager:invalidateUndoManager"/>
                <string name="isDamaged" object="[flashx.textLayout.container.TextContainerManager]" text=".isDamaged(%%):Boolean" tiptext="Returns true if the content needs composing." version="1.5" playername="" helpurl="flashx.textLayout.container:TextContainerManager:isDamaged"/>
                <string name="keyDownHandler" object="[flashx.textLayout.container.TextContainerManager]" text=".keyDownHandler(%event:flash.events:KeyboardEvent%):void" tiptext="Processes the KeyboardEvent.KEY_DOWN event when the client manages events." version="1.5" playername="" helpurl="flashx.textLayout.container:TextContainerManager:keyDownHandler"/>
                <string name="keyFocusChangeHandler" object="[flashx.textLayout.container.TextContainerManager]" text=".keyFocusChangeHandler(%event:flash.events:FocusEvent%):void" tiptext="Processes the FocusEvent.KEY_FOCUS_CHANGE event when the client manages events." version="1.5" playername="" helpurl="flashx.textLayout.container:TextContainerManager:keyFocusChangeHandler"/>
                <string name="keyUpHandler" object="[flashx.textLayout.container.TextContainerManager]" text=".keyUpHandler(%event:flash.events:KeyboardEvent%):void" tiptext="Processes the Keyboard.KEY_UP event when the client manages events." version="1.5" playername="" helpurl="flashx.textLayout.container:TextContainerManager:keyUpHandler"/>
                <string name="menuSelectHandler" object="[flashx.textLayout.container.TextContainerManager]" text=".menuSelectHandler(%event:flash.events:ContextMenuEvent%):void" tiptext="Processes the ContextMenuEvent.MENU_SELECT event when the client manages events." version="1.5" playername="" helpurl="flashx.textLayout.container:TextContainerManager:menuSelectHandler"/>
                <string name="mouseDoubleClickHandler" object="[flashx.textLayout.container.TextContainerManager]" text=".mouseDoubleClickHandler(%event:flash.events:MouseEvent%):void" tiptext="Processes the MouseEvent.DOUBLE_CLICK event when the client manages events." version="1.5" playername="" helpurl="flashx.textLayout.container:TextContainerManager:mouseDoubleClickHandler"/>
                <string name="mouseDownHandler" object="[flashx.textLayout.container.TextContainerManager]" text=".mouseDownHandler(%event:flash.events:MouseEvent%):void" tiptext="Processes the MouseEvent.MOUSE_DOWN event when the client manages events." version="1.5" playername="" helpurl="flashx.textLayout.container:TextContainerManager:mouseDownHandler"/>
                <string name="mouseMoveHandler" object="[flashx.textLayout.container.TextContainerManager]" text=".mouseMoveHandler(%event:flash.events:MouseEvent%):void" tiptext="Processes the MouseEvent.MOUSE_MOVE event when the client manages events." version="1.5" playername="" helpurl="flashx.textLayout.container:TextContainerManager:mouseMoveHandler"/>
                <string name="mouseMoveSomewhere" object="[flashx.textLayout.container.TextContainerManager]" text=".mouseMoveSomewhere(%e:flash.events:Event%):void" tiptext="Client call to forward a mouseMove event from outside a security sandbox." version="1.5" playername="" helpurl="flashx.textLayout.container:TextContainerManager:mouseMoveSomewhere"/>
                <string name="mouseOutHandler" object="[flashx.textLayout.container.TextContainerManager]" text=".mouseOutHandler(%event:flash.events:MouseEvent%):void" tiptext="Processes the MouseEvent.MOUSE_OUT event when the client manages events." version="1.5" playername="" helpurl="flashx.textLayout.container:TextContainerManager:mouseOutHandler"/>
                <string name="mouseOverHandler" object="[flashx.textLayout.container.TextContainerManager]" text=".mouseOverHandler(%event:flash.events:MouseEvent%):void" tiptext="Process a mouseOver event." version="1.5" playername="" helpurl="flashx.textLayout.container:TextContainerManager:mouseOverHandler"/>
                <string name="mouseUpHandler" object="[flashx.textLayout.container.TextContainerManager]" text=".mouseUpHandler(%event:flash.events:MouseEvent%):void" tiptext="Processes the MouseEvent.MOUSE_UP event when the client manages events." version="1.5" playername="" helpurl="flashx.textLayout.container:TextContainerManager:mouseUpHandler"/>
                <string name="mouseUpSomewhere" object="[flashx.textLayout.container.TextContainerManager]" text=".mouseUpSomewhere(%e:flash.events:Event%):void" tiptext="Client call to forward a mouseUp event from outside a security sandbox." version="1.5" playername="" helpurl="flashx.textLayout.container:TextContainerManager:mouseUpSomewhere"/>
                <string name="mouseWheelHandler" object="[flashx.textLayout.container.TextContainerManager]" text=".mouseWheelHandler(%event:flash.events:MouseEvent%):void" tiptext="Processes the MouseEvent.MOUSE_WHEEL event when the client manages events." version="1.5" playername="" helpurl="flashx.textLayout.container:TextContainerManager:mouseWheelHandler"/>
                <string name="scrollToRange" object="[flashx.textLayout.container.TextContainerManager]" text=".scrollToRange(%activePosition:int,anchorPosition:int%):void" tiptext="Scrolls so that the text range is visible in the container." version="1.5" playername="" helpurl="flashx.textLayout.container:TextContainerManager:scrollToRange"/>
                <string name="setTextFlow" object="[flashx.textLayout.container.TextContainerManager]" text=".setTextFlow(%textFlow:flashx.textLayout.elements:TextFlow%):void" tiptext="Sets a TextFlow into this TextContainerManager replacing any existing TextFlow and discarding the current text." version="1.5" playername="" helpurl="flashx.textLayout.container:TextContainerManager:setTextFlow"/>
                <string name="setText" object="[flashx.textLayout.container.TextContainerManager]" text=".setText(%text:String%):void" tiptext="Sets the text property to the specified String." version="1.5" playername="" helpurl="flashx.textLayout.container:TextContainerManager:setText"/>
                <string name="textInputHandler" object="[flashx.textLayout.container.TextContainerManager]" text=".textInputHandler(%event:flash.events:TextEvent%):void" tiptext="Processes the TextEvent.TEXT_INPUT event when the client manages events." version="1.5" playername="" helpurl="flashx.textLayout.container:TextContainerManager:textInputHandler"/>
                <string name="updateContainer" object="[flashx.textLayout.container.TextContainerManager]" text=".updateContainer(%%):void" tiptext="Updates the display; calls either the factory or updateAllControllers()." version="1.5" playername="" helpurl="flashx.textLayout.container:TextContainerManager:updateContainer"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class TextContainerManager" helpurl="flashx.textLayout.container:TextContainerManager">
                <string name="compositionHeight" object="[flashx.textLayout.container.TextContainerManager]" text=".compositionHeight" tiptext="Returns the vertical extent allowed for text inside the container." version="" playername="" helpurl="flashx.textLayout.container:TextContainerManager:compositionHeight:get"/>
                <string name="compositionWidth" object="[flashx.textLayout.container.TextContainerManager]" text=".compositionWidth" tiptext="Returns the horizontal extent allowed for text inside the container." version="" playername="" helpurl="flashx.textLayout.container:TextContainerManager:compositionWidth:get"/>
                <string name="configuration" object="[flashx.textLayout.container.TextContainerManager]" text=".configuration" tiptext="The Configuration object for this TextContainerManager." version="" playername="" helpurl="flashx.textLayout.container:TextContainerManager:configuration:get"/>
                <string name="container" object="[flashx.textLayout.container.TextContainerManager]" text=".container" tiptext="Returns the container (DisplayObjectContainer) that holds the text that this TextContainerManager manages." version="" playername="" helpurl="flashx.textLayout.container:TextContainerManager:container:get"/>
                <string name="defaultConfiguration" object="[flashx.textLayout.container.TextContainerManager]" text=".defaultConfiguration" tiptext="The default configuration for this TextContainerManager." version="" playername="" helpurl="flashx.textLayout.container:TextContainerManager:defaultConfiguration:get"/>
                <string name="editingMode" object="[flashx.textLayout.container.TextContainerManager]" text=".editingMode" tiptext="Editing mode of this TextContainerManager." version="" playername="" helpurl="flashx.textLayout.container:TextContainerManager:editingMode:get"/>
                <string name="horizontalScrollPolicy" object="[flashx.textLayout.container.TextContainerManager]" text=".horizontalScrollPolicy" tiptext="Controls whether the factory generates all text lines or stops when the container bounds are filled." version="" playername="" helpurl="flashx.textLayout.container:TextContainerManager:horizontalScrollPolicy:get"/>
                <string name="horizontalScrollPosition" object="[flashx.textLayout.container.TextContainerManager]" text=".horizontalScrollPosition" tiptext="Specifies the current horizontal scroll location on the stage." version="" playername="" helpurl="flashx.textLayout.container:TextContainerManager:horizontalScrollPosition:get"/>
                <string name="hostFormat" object="[flashx.textLayout.container.TextContainerManager]" text=".hostFormat" tiptext="Sets the format when display just a string." version="" playername="" helpurl="flashx.textLayout.container:TextContainerManager:hostFormat:get"/>
                <string name="numLines" object="[flashx.textLayout.container.TextContainerManager]" text=".numLines" tiptext="The total number of lines in the flow." version="" playername="" helpurl="flashx.textLayout.container:TextContainerManager:numLines:get"/>
                <string name="swfContext" object="[flashx.textLayout.container.TextContainerManager]" text=".swfContext" tiptext="Optional ISWFContext instance used to make FTE calls as needed in the proper swf context." version="" playername="" helpurl="flashx.textLayout.container:TextContainerManager:swfContext:get"/>
                <string name="verticalScrollPolicy" object="[flashx.textLayout.container.TextContainerManager]" text=".verticalScrollPolicy" tiptext="Controls whether the factory generates all text lines or stops when the container bounds are filled." version="" playername="" helpurl="flashx.textLayout.container:TextContainerManager:verticalScrollPolicy:get"/>
                <string name="verticalScrollPosition" object="[flashx.textLayout.container.TextContainerManager]" text=".verticalScrollPosition" tiptext="Specifies the current vertical scroll location on the stage." version="" playername="" helpurl="flashx.textLayout.container:TextContainerManager:verticalScrollPosition:get"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class TextContainerManager" helpurl="flashx.textLayout.container:TextContainerManager">
                <string name="updateComplete" object="[flashx.textLayout.container.TextContainerManager]" text=".addEventListener(%type:String=UpdateCompleteEvent.{UpdateCompleteEvent.,DamageEvent.,TextLayoutEvent.,StatusChangeEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,CompositionCompleteEvent.,SelectionEvent.,FlowOperationEvent.FLOW_OPERATION_COMPLETE,FlowOperationEvent.FLOW_OPERATION_END,FlowOperationEvent.FLOW_OPERATION_BEGIN},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched by a TextFlow object each time a container has had new DisplayObjects added or updated as a result of composition." version="" playername="" helpurl="flashx.textLayout.container:TextContainerManager__updateComplete"/>
                <string name="damage" object="[flashx.textLayout.container.TextContainerManager]" text=".addEventListener(%type:String=DamageEvent.{UpdateCompleteEvent.,DamageEvent.,TextLayoutEvent.,StatusChangeEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,CompositionCompleteEvent.,SelectionEvent.,FlowOperationEvent.FLOW_OPERATION_COMPLETE,FlowOperationEvent.FLOW_OPERATION_END,FlowOperationEvent.FLOW_OPERATION_BEGIN},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched by a TextFlow object each time it is damaged" version="" playername="" helpurl="flashx.textLayout.container:TextContainerManager__damage"/>
                <string name="scroll" object="[flashx.textLayout.container.TextContainerManager]" text=".addEventListener(%type:String=TextLayoutEvent.{UpdateCompleteEvent.,DamageEvent.,TextLayoutEvent.,StatusChangeEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,CompositionCompleteEvent.,SelectionEvent.,FlowOperationEvent.FLOW_OPERATION_COMPLETE,FlowOperationEvent.FLOW_OPERATION_END,FlowOperationEvent.FLOW_OPERATION_BEGIN},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched by a TextFlow object after text is scrolled within a controller container." version="" playername="" helpurl="flashx.textLayout.container:TextContainerManager__scroll"/>
                <string name="inlineGraphicStatusChanged" object="[flashx.textLayout.container.TextContainerManager]" text=".addEventListener(%type:String=StatusChangeEvent.{UpdateCompleteEvent.,DamageEvent.,TextLayoutEvent.,StatusChangeEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,CompositionCompleteEvent.,SelectionEvent.,FlowOperationEvent.FLOW_OPERATION_COMPLETE,FlowOperationEvent.FLOW_OPERATION_END,FlowOperationEvent.FLOW_OPERATION_BEGIN},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a InlineGraphicElement is resized due to having width or height as auto or percent and the graphic has finished loading." version="" playername="" helpurl="flashx.textLayout.container:TextContainerManager__inlineGraphicStatusChanged"/>
                <string name="click" object="[flashx.textLayout.container.TextContainerManager]" text=".addEventListener(%type:String=FlowElementMouseEvent.{UpdateCompleteEvent.,DamageEvent.,TextLayoutEvent.,StatusChangeEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,CompositionCompleteEvent.,SelectionEvent.,FlowOperationEvent.FLOW_OPERATION_COMPLETE,FlowOperationEvent.FLOW_OPERATION_END,FlowOperationEvent.FLOW_OPERATION_BEGIN},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when any link is clicked." version="" playername="" helpurl="flashx.textLayout.container:TextContainerManager__click"/>
                <string name="rollOut" object="[flashx.textLayout.container.TextContainerManager]" text=".addEventListener(%type:String=FlowElementMouseEvent.{UpdateCompleteEvent.,DamageEvent.,TextLayoutEvent.,StatusChangeEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,CompositionCompleteEvent.,SelectionEvent.,FlowOperationEvent.FLOW_OPERATION_COMPLETE,FlowOperationEvent.FLOW_OPERATION_END,FlowOperationEvent.FLOW_OPERATION_BEGIN},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the mouse goes out of any link." version="" playername="" helpurl="flashx.textLayout.container:TextContainerManager__rollOut"/>
                <string name="rollOver" object="[flashx.textLayout.container.TextContainerManager]" text=".addEventListener(%type:String=FlowElementMouseEvent.{UpdateCompleteEvent.,DamageEvent.,TextLayoutEvent.,StatusChangeEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,CompositionCompleteEvent.,SelectionEvent.,FlowOperationEvent.FLOW_OPERATION_COMPLETE,FlowOperationEvent.FLOW_OPERATION_END,FlowOperationEvent.FLOW_OPERATION_BEGIN},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the mouse first enters any link." version="" playername="" helpurl="flashx.textLayout.container:TextContainerManager__rollOver"/>
                <string name="mouseMove" object="[flashx.textLayout.container.TextContainerManager]" text=".addEventListener(%type:String=FlowElementMouseEvent.{UpdateCompleteEvent.,DamageEvent.,TextLayoutEvent.,StatusChangeEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,CompositionCompleteEvent.,SelectionEvent.,FlowOperationEvent.FLOW_OPERATION_COMPLETE,FlowOperationEvent.FLOW_OPERATION_END,FlowOperationEvent.FLOW_OPERATION_BEGIN},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the mouse passes over any link." version="" playername="" helpurl="flashx.textLayout.container:TextContainerManager__mouseMove"/>
                <string name="mouseUp" object="[flashx.textLayout.container.TextContainerManager]" text=".addEventListener(%type:String=FlowElementMouseEvent.{UpdateCompleteEvent.,DamageEvent.,TextLayoutEvent.,StatusChangeEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,CompositionCompleteEvent.,SelectionEvent.,FlowOperationEvent.FLOW_OPERATION_COMPLETE,FlowOperationEvent.FLOW_OPERATION_END,FlowOperationEvent.FLOW_OPERATION_BEGIN},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the mouse is released over any link." version="" playername="" helpurl="flashx.textLayout.container:TextContainerManager__mouseUp"/>
                <string name="mouseDown" object="[flashx.textLayout.container.TextContainerManager]" text=".addEventListener(%type:String=FlowElementMouseEvent.{UpdateCompleteEvent.,DamageEvent.,TextLayoutEvent.,StatusChangeEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,CompositionCompleteEvent.,SelectionEvent.,FlowOperationEvent.FLOW_OPERATION_COMPLETE,FlowOperationEvent.FLOW_OPERATION_END,FlowOperationEvent.FLOW_OPERATION_BEGIN},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the mouse is pressed down over any link." version="" playername="" helpurl="flashx.textLayout.container:TextContainerManager__mouseDown"/>
                <string name="compositionComplete" object="[flashx.textLayout.container.TextContainerManager]" text=".addEventListener(%type:String=CompositionCompleteEvent.{UpdateCompleteEvent.,DamageEvent.,TextLayoutEvent.,StatusChangeEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,CompositionCompleteEvent.,SelectionEvent.,FlowOperationEvent.FLOW_OPERATION_COMPLETE,FlowOperationEvent.FLOW_OPERATION_END,FlowOperationEvent.FLOW_OPERATION_BEGIN},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched after every recompose." version="" playername="" helpurl="flashx.textLayout.container:TextContainerManager__compositionComplete"/>
                <string name="selectionChange" object="[flashx.textLayout.container.TextContainerManager]" text=".addEventListener(%type:String=SelectionEvent.{UpdateCompleteEvent.,DamageEvent.,TextLayoutEvent.,StatusChangeEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,CompositionCompleteEvent.,SelectionEvent.,FlowOperationEvent.FLOW_OPERATION_COMPLETE,FlowOperationEvent.FLOW_OPERATION_END,FlowOperationEvent.FLOW_OPERATION_BEGIN},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched whenever the selection is changed." version="" playername="" helpurl="flashx.textLayout.container:TextContainerManager__selectionChange"/>
                <string name="flowOperationComplete" object="[flashx.textLayout.container.TextContainerManager]" text=".addEventListener(%type:String=FlowOperationEvent.FLOW_OPERATION_COMPLETE{UpdateCompleteEvent.,DamageEvent.,TextLayoutEvent.,StatusChangeEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,CompositionCompleteEvent.,SelectionEvent.,FlowOperationEvent.FLOW_OPERATION_COMPLETE,FlowOperationEvent.FLOW_OPERATION_END,FlowOperationEvent.FLOW_OPERATION_BEGIN},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="" version="" playername="" helpurl="flashx.textLayout.container:TextContainerManager__flowOperationComplete"/>
                <string name="flowOperationEnd" object="[flashx.textLayout.container.TextContainerManager]" text=".addEventListener(%type:String=FlowOperationEvent.FLOW_OPERATION_END{UpdateCompleteEvent.,DamageEvent.,TextLayoutEvent.,StatusChangeEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,CompositionCompleteEvent.,SelectionEvent.,FlowOperationEvent.FLOW_OPERATION_COMPLETE,FlowOperationEvent.FLOW_OPERATION_END,FlowOperationEvent.FLOW_OPERATION_BEGIN},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="" version="" playername="" helpurl="flashx.textLayout.container:TextContainerManager__flowOperationEnd"/>
                <string name="flowOperationBegin" object="[flashx.textLayout.container.TextContainerManager]" text=".addEventListener(%type:String=FlowOperationEvent.FLOW_OPERATION_BEGIN{UpdateCompleteEvent.,DamageEvent.,TextLayoutEvent.,StatusChangeEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,CompositionCompleteEvent.,SelectionEvent.,FlowOperationEvent.FLOW_OPERATION_COMPLETE,FlowOperationEvent.FLOW_OPERATION_END,FlowOperationEvent.FLOW_OPERATION_BEGIN},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="" version="" playername="" helpurl="flashx.textLayout.container:TextContainerManager__flowOperationBegin"/>
            </folder>
        </folder>
    </folder>
        <folder name="flashx.textLayout.conversion" id="flashx.textLayout.conversion" sort="true" tiptext="Classes for package flashx.textLayout.conversion" helpurl="flashx.textLayout.conversion">
        <folder name="ConversionType" id="[flashx.textLayout.conversion.ConversionType]" sort="true" index="true" asAncestors="Object" tiptext="Values for the format of exported text." helpurl="flashx.textLayout.conversion:ConversionType">
            <folder name="Properties" id="Properties" tiptext="Properties for class ConversionType" helpurl="flashx.textLayout.conversion:ConversionType">
                <string name="STRING_TYPE" object="[flashx.textLayout.conversion.ConversionType]" text="ConversionType.STRING_TYPE" constant="true" tiptext="Export as type String." version="" playername="" helpurl="flashx.textLayout.conversion:ConversionType:STRING_TYPE"/>
                <string name="XML_TYPE" object="[flashx.textLayout.conversion.ConversionType]" text="ConversionType.XML_TYPE" constant="true" tiptext="Export as type XML." version="" playername="" helpurl="flashx.textLayout.conversion:ConversionType:XML_TYPE"/>
            </folder>
        </folder>
        <folder name="ITextExporter" id="[flashx.textLayout.conversion.ITextExporter]" sort="true" index="true" tiptext="Interface for exporting text content from a TextFlow instance to either String or XML format." helpurl="flashx.textLayout.conversion:ITextExporter">
            <folder name="Methods" id="Methods" tiptext="Methods for class ITextExporter" helpurl="flashx.textLayout.conversion:ITextExporter">
                <string name="export" object="[flashx.textLayout.conversion.ITextExporter]" text=".export(%source:flashx.textLayout.elements:TextFlow,conversionType:String%):Object" tiptext="Export text content from a TextFlow instance in String or XML format." version="1.5" playername="" helpurl="flashx.textLayout.conversion:ITextExporter:export"/>
            </folder>
        </folder>
        <folder name="ITextImporter" id="[flashx.textLayout.conversion.ITextImporter]" sort="true" index="true" tiptext="Interface for importing text content into a TextFlow from an external source." helpurl="flashx.textLayout.conversion:ITextImporter">
            <folder name="Methods" id="Methods" tiptext="Methods for class ITextImporter" helpurl="flashx.textLayout.conversion:ITextImporter">
                <string name="importToFlow" object="[flashx.textLayout.conversion.ITextImporter]" text=".importToFlow(%source:Object%):flashx.textLayout.elements:TextFlow" tiptext="Import text content from an external source and convert it into a TextFlow." version="1.5" playername="" helpurl="flashx.textLayout.conversion:ITextImporter:importToFlow"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class ITextImporter" helpurl="flashx.textLayout.conversion:ITextImporter">
                <string name="errors" object="[flashx.textLayout.conversion.ITextImporter]" text=".errors" tiptext="Errors encountered while parsing." version="" playername="" helpurl="flashx.textLayout.conversion:ITextImporter:errors:get"/>
                <string name="throwOnError" object="[flashx.textLayout.conversion.ITextImporter]" text=".throwOnError" tiptext="Parsing errors during import will cause exceptions if throwOnError is true." version="" playername="" helpurl="flashx.textLayout.conversion:ITextImporter:throwOnError:get"/>
            </folder>
        </folder>
        <folder name="PlainTextExporter" id="[flashx.textLayout.conversion.PlainTextExporter]" sort="true" index="true" asAncestors="Object" tiptext="Export filter for plain text format." helpurl="flashx.textLayout.conversion:PlainTextExporter">
            <folder name="Methods" id="Methods" tiptext="Methods for class PlainTextExporter" helpurl="flashx.textLayout.conversion:PlainTextExporter">
                <string name="PlainTextExporter" object="[flashx.textLayout.conversion.PlainTextExporter]" text="new PlainTextExporter(%%)" constructor="true" tiptext="Constructor" version="1.5" playername="" helpurl="flashx.textLayout.conversion:PlainTextExporter:PlainTextExporter"/>
                <string name="export" object="[flashx.textLayout.conversion.PlainTextExporter]" text=".export(%source:flashx.textLayout.elements:TextFlow,conversionType:String%):Object" tiptext="Export the contents of a TextFlow object to plain text." version="1.5" playername="" helpurl="flashx.textLayout.conversion:PlainTextExporter:export"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class PlainTextExporter" helpurl="flashx.textLayout.conversion:PlainTextExporter">
                <string name="paragraphSeparator" object="[flashx.textLayout.conversion.PlainTextExporter]" text=".paragraphSeparator" tiptext="Specifies the character sequence used (in a text flow&apos;s plain-text equivalent) to separate paragraphs." version="" playername="" helpurl="flashx.textLayout.conversion:PlainTextExporter:paragraphSeparator:get"/>
                <string name="stripDiscretionaryHyphens" object="[flashx.textLayout.conversion.PlainTextExporter]" text=".stripDiscretionaryHyphens" tiptext="This flag indicates whether discretionary hyphens in the text should be stripped during the export process." version="" playername="" helpurl="flashx.textLayout.conversion:PlainTextExporter:stripDiscretionaryHyphens:get"/>
            </folder>
        </folder>
        <folder name="TextConverter" id="[flashx.textLayout.conversion.TextConverter]" sort="true" index="true" asAncestors="Object" tiptext="This is the gateway class for handling import and export." helpurl="flashx.textLayout.conversion:TextConverter">
            <folder name="Methods" id="Methods" tiptext="Methods for class TextConverter" helpurl="flashx.textLayout.conversion:TextConverter">
                <string name="export" object="[flashx.textLayout.conversion.TextConverter]" text="TextConverter.export(%source:flashx.textLayout.elements:TextFlow,format:String,conversionType:String%):Object" static="true" tiptext="Exports a TextFlow to a specified format." version="1.5" playername="" helpurl="flashx.textLayout.conversion:TextConverter:export"/>
                <string name="getExporter" object="[flashx.textLayout.conversion.TextConverter]" text="TextConverter.getExporter(%format:String%):flashx.textLayout.conversion:ITextExporter" static="true" tiptext="Creates an export filter." version="1.5" playername="" helpurl="flashx.textLayout.conversion:TextConverter:getExporter"/>
                <string name="getImporter" object="[flashx.textLayout.conversion.TextConverter]" text="TextConverter.getImporter(%format:String[,config:flashx.textLayout.elements:IConfiguration=null]%):flashx.textLayout.conversion:ITextImporter" static="true" tiptext="Creates an import filter." version="1.5" playername="" helpurl="flashx.textLayout.conversion:TextConverter:getImporter"/>
                <string name="importToFlow" object="[flashx.textLayout.conversion.TextConverter]" text="TextConverter.importToFlow(%source:Object,format:String[,config:flashx.textLayout.elements:IConfiguration=null]%):flashx.textLayout.elements:TextFlow" static="true" tiptext="Creates a TextFlow from source content in a specified format." version="1.5" playername="" helpurl="flashx.textLayout.conversion:TextConverter:importToFlow"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class TextConverter" helpurl="flashx.textLayout.conversion:TextConverter">
                <string name="PLAIN_TEXT_FORMAT" object="[flashx.textLayout.conversion.TextConverter]" text="TextConverter.PLAIN_TEXT_FORMAT" constant="true" tiptext="Plain text format." version="" playername="" helpurl="flashx.textLayout.conversion:TextConverter:PLAIN_TEXT_FORMAT"/>
                <string name="TEXT_FIELD_HTML_FORMAT" object="[flashx.textLayout.conversion.TextConverter]" text="TextConverter.TEXT_FIELD_HTML_FORMAT" constant="true" tiptext="HTML format." version="" playername="" helpurl="flashx.textLayout.conversion:TextConverter:TEXT_FIELD_HTML_FORMAT"/>
                <string name="TEXT_LAYOUT_FORMAT" object="[flashx.textLayout.conversion.TextConverter]" text="TextConverter.TEXT_LAYOUT_FORMAT" constant="true" tiptext="TextLayout Format." version="" playername="" helpurl="flashx.textLayout.conversion:TextConverter:TEXT_LAYOUT_FORMAT"/>
            </folder>
        </folder>
    </folder>
        <folder name="flashx.textLayout.edit" id="flashx.textLayout.edit" sort="true" tiptext="Classes for package flashx.textLayout.edit" helpurl="flashx.textLayout.edit">
        <folder name="EditingMode" id="[flashx.textLayout.edit.EditingMode]" sort="true" index="true" asAncestors="Object" tiptext="The EditingMode class defines constants used with EditManager class to represent the read, select, and edit permissions of a document." helpurl="flashx.textLayout.edit:EditingMode">
            <folder name="Properties" id="Properties" tiptext="Properties for class EditingMode" helpurl="flashx.textLayout.edit:EditingMode">
                <string name="READ_ONLY" object="[flashx.textLayout.edit.EditingMode]" text="EditingMode.READ_ONLY" constant="true" tiptext="The document is read-only." version="" playername="" helpurl="flashx.textLayout.edit:EditingMode:READ_ONLY"/>
                <string name="READ_SELECT" object="[flashx.textLayout.edit.EditingMode]" text="EditingMode.READ_SELECT" constant="true" tiptext="The text in the document can be selected and copied, but not edited." version="" playername="" helpurl="flashx.textLayout.edit:EditingMode:READ_SELECT"/>
                <string name="READ_WRITE" object="[flashx.textLayout.edit.EditingMode]" text="EditingMode.READ_WRITE" constant="true" tiptext="The document can be edited." version="" playername="" helpurl="flashx.textLayout.edit:EditingMode:READ_WRITE"/>
            </folder>
        </folder>
        <folder name="EditManager" id="[flashx.textLayout.edit.EditManager]" sort="true" index="true" asAncestors="flashx.textLayout.edit:SelectionManager,Object" tiptext="The EditManager class manages editing changes to a TextFlow." helpurl="flashx.textLayout.edit:EditManager">
            <folder name="Methods" id="Methods" tiptext="Methods for class EditManager" helpurl="flashx.textLayout.edit:EditManager">
                <string name="EditManager" object="[flashx.textLayout.edit.EditManager]" text="new EditManager(%[undoManager:flashx.undo:IUndoManager=null]%)" constructor="true" tiptext="Creates an EditManager object." version="1.5" playername="" helpurl="flashx.textLayout.edit:EditManager:EditManager"/>
                <string name="applyContainerFormat" object="[flashx.textLayout.edit.EditManager]" text=".applyContainerFormat(%format:flashx.textLayout.formats:ITextLayoutFormat[,operationState:flashx.textLayout.edit:SelectionState=null]%):void" tiptext="Applies container styles to any containers in the selection." version="1.5" playername="" helpurl="flashx.textLayout.edit:EditManager:applyContainerFormat"/>
                <string name="applyFormatToElement" object="[flashx.textLayout.edit.EditManager]" text=".applyFormatToElement(%targetElement:flashx.textLayout.elements:FlowElement,format:flashx.textLayout.formats:ITextLayoutFormat[,operationState:flashx.textLayout.edit:SelectionState=null]%):void" tiptext="Applies styles to the specified element." version="1.5" playername="" helpurl="flashx.textLayout.edit:EditManager:applyFormatToElement"/>
                <string name="applyFormat" object="[flashx.textLayout.edit.EditManager]" text=".applyFormat(%leafFormat:flashx.textLayout.formats:ITextLayoutFormat,paragraphFormat:flashx.textLayout.formats:ITextLayoutFormat,containerFormat:flashx.textLayout.formats:ITextLayoutFormat[,operationState:flashx.textLayout.edit:SelectionState=null]%):void" tiptext="Changes the formats of the specified (or current) selection." version="1.5" playername="" helpurl="flashx.textLayout.edit:EditManager:applyFormat"/>
                <string name="applyLeafFormat" object="[flashx.textLayout.edit.EditManager]" text=".applyLeafFormat(%format:flashx.textLayout.formats:ITextLayoutFormat[,operationState:flashx.textLayout.edit:SelectionState=null]%):void" tiptext="Changes the format applied to the leaf elements in the specified (or current) selection." version="1.5" playername="" helpurl="flashx.textLayout.edit:EditManager:applyLeafFormat"/>
                <string name="applyLink" object="[flashx.textLayout.edit.EditManager]" text=".applyLink(%href:String[,target:String=null,extendToLinkBoundary:Boolean=false,operationState:flashx.textLayout.edit:SelectionState=null]%):void" tiptext="Transforms a selection into a link, or a link into normal text." version="1.5" playername="" helpurl="flashx.textLayout.edit:EditManager:applyLink"/>
                <string name="applyParagraphFormat" object="[flashx.textLayout.edit.EditManager]" text=".applyParagraphFormat(%format:flashx.textLayout.formats:ITextLayoutFormat[,operationState:flashx.textLayout.edit:SelectionState=null]%):void" tiptext="Applies paragraph styles to any paragraphs in the selection." version="1.5" playername="" helpurl="flashx.textLayout.edit:EditManager:applyParagraphFormat"/>
                <string name="applyTCY" object="[flashx.textLayout.edit.EditManager]" text=".applyTCY(%tcyOn:Boolean[,operationState:flashx.textLayout.edit:SelectionState=null]%):void" tiptext="Transforms text into a TCY run, or a TCY run into non-TCY text." version="1.5" playername="" helpurl="flashx.textLayout.edit:EditManager:applyTCY"/>
                <string name="beginCompositeOperation" object="[flashx.textLayout.edit.EditManager]" text=".beginCompositeOperation(%%):void" tiptext="Begins a new group of operations." version="1.5" playername="" helpurl="flashx.textLayout.edit:EditManager:beginCompositeOperation"/>
                <string name="changeElementID" object="[flashx.textLayout.edit.EditManager]" text=".changeElementID(%newID:String,targetElement:flashx.textLayout.elements:FlowElement[,relativeStart:int=0,relativeEnd:int=-1,operationState:flashx.textLayout.edit:SelectionState=null]%):void" tiptext="Changes the ID of an element." version="1.5" playername="" helpurl="flashx.textLayout.edit:EditManager:changeElementID"/>
                <string name="changeStyleName" object="[flashx.textLayout.edit.EditManager]" text=".changeStyleName(%newName:String,targetElement:flashx.textLayout.elements:FlowElement[,relativeStart:int=0,relativeEnd:int=-1,operationState:flashx.textLayout.edit:SelectionState=null]%):void" tiptext="Changes the styleName of an element or part of an element." version="1.5" playername="" helpurl="flashx.textLayout.edit:EditManager:changeStyleName"/>
                <string name="clearFormatOnElement" object="[flashx.textLayout.edit.EditManager]" text=".clearFormatOnElement(%targetElement:flashx.textLayout.elements:FlowElement,format:flashx.textLayout.formats:ITextLayoutFormat[,operationState:flashx.textLayout.edit:SelectionState=null]%):void" tiptext="Undefines styles to the specified element." version="1.5" playername="" helpurl="flashx.textLayout.edit:EditManager:clearFormatOnElement"/>
                <string name="clearFormat" object="[flashx.textLayout.edit.EditManager]" text=".clearFormat(%leafFormat:flashx.textLayout.formats:ITextLayoutFormat,paragraphFormat:flashx.textLayout.formats:ITextLayoutFormat,containerFormat:flashx.textLayout.formats:ITextLayoutFormat[,operationState:flashx.textLayout.edit:SelectionState=null]%):void" tiptext="Undefines formats of the specified (or current) selection." version="1.5" playername="" helpurl="flashx.textLayout.edit:EditManager:clearFormat"/>
                <string name="cutTextScrap" object="[flashx.textLayout.edit.EditManager]" text=".cutTextScrap(%[operationState:flashx.textLayout.edit:SelectionState=null]%):flashx.textLayout.edit:TextScrap" tiptext="Deletes the selected area and returns the deleted area in a TextScrap object." version="1.5" playername="" helpurl="flashx.textLayout.edit:EditManager:cutTextScrap"/>
                <string name="deleteNextCharacter" object="[flashx.textLayout.edit.EditManager]" text=".deleteNextCharacter(%[operationState:flashx.textLayout.edit:SelectionState=null]%):void" tiptext="Deletes a range of text, or, if a point selection is given, deletes the next character." version="1.5" playername="" helpurl="flashx.textLayout.edit:EditManager:deleteNextCharacter"/>
                <string name="deleteNextWord" object="[flashx.textLayout.edit.EditManager]" text=".deleteNextWord(%[operationState:flashx.textLayout.edit:SelectionState=null]%):void" tiptext="Deletes the next word." version="1.5" playername="" helpurl="flashx.textLayout.edit:EditManager:deleteNextWord"/>
                <string name="deletePreviousCharacter" object="[flashx.textLayout.edit.EditManager]" text=".deletePreviousCharacter(%[operationState:flashx.textLayout.edit:SelectionState=null]%):void" tiptext="Deletes a range of text, or, if a point selection is given, deletes the previous character." version="1.5" playername="" helpurl="flashx.textLayout.edit:EditManager:deletePreviousCharacter"/>
                <string name="deletePreviousWord" object="[flashx.textLayout.edit.EditManager]" text=".deletePreviousWord(%[operationState:flashx.textLayout.edit:SelectionState=null]%):void" tiptext="Deletes the previous word." version="1.5" playername="" helpurl="flashx.textLayout.edit:EditManager:deletePreviousWord"/>
                <string name="deleteText" object="[flashx.textLayout.edit.EditManager]" text=".deleteText(%[operationState:flashx.textLayout.edit:SelectionState=null]%):void" tiptext="Deletes a range of text." version="1.5" playername="" helpurl="flashx.textLayout.edit:EditManager:deleteText"/>
                <string name="doOperation" object="[flashx.textLayout.edit.EditManager]" text=".doOperation(%operation:flashx.textLayout.operations:FlowOperation%):void" tiptext="Executes a FlowOperation." version="1.5" playername="" helpurl="flashx.textLayout.edit:EditManager:doOperation"/>
                <string name="editHandler" object="[flashx.textLayout.edit.EditManager]" text=".editHandler(%event:flash.events:Event%):void" tiptext="" version="" playername="" helpurl="flashx.textLayout.edit:EditManager:editHandler"/>
                <string name="endCompositeOperation" object="[flashx.textLayout.edit.EditManager]" text=".endCompositeOperation(%%):void" tiptext="Ends a group of operations." version="1.5" playername="" helpurl="flashx.textLayout.edit:EditManager:endCompositeOperation"/>
                <string name="insertInlineGraphic" object="[flashx.textLayout.edit.EditManager]" text=".insertInlineGraphic(%source:Object,width:Object,height:Object[,options:Object=null,operationState:flashx.textLayout.edit:SelectionState=null]%):void" tiptext="Inserts an image." version="1.5" playername="" helpurl="flashx.textLayout.edit:EditManager:insertInlineGraphic"/>
                <string name="insertText" object="[flashx.textLayout.edit.EditManager]" text=".insertText(%text:String[,operationState:flashx.textLayout.edit:SelectionState=null]%):void" tiptext="Inserts text." version="1.5" playername="" helpurl="flashx.textLayout.edit:EditManager:insertText"/>
                <string name="modifyInlineGraphic" object="[flashx.textLayout.edit.EditManager]" text=".modifyInlineGraphic(%source:Object,width:Object,height:Object[,options:Object=null,operationState:flashx.textLayout.edit:SelectionState=null]%):void" tiptext="Modifies an existing inline graphic." version="1.5" playername="" helpurl="flashx.textLayout.edit:EditManager:modifyInlineGraphic"/>
                <string name="overwriteText" object="[flashx.textLayout.edit.EditManager]" text=".overwriteText(%text:String[,operationState:flashx.textLayout.edit:SelectionState=null]%):void" tiptext="Overwrites the selected text." version="1.5" playername="" helpurl="flashx.textLayout.edit:EditManager:overwriteText"/>
                <string name="pasteTextScrap" object="[flashx.textLayout.edit.EditManager]" text=".pasteTextScrap(%scrapToPaste:flashx.textLayout.edit:TextScrap[,operationState:flashx.textLayout.edit:SelectionState=null]%):void" tiptext="Pastes the TextScrap into the selected area." version="1.5" playername="" helpurl="flashx.textLayout.edit:EditManager:pasteTextScrap"/>
                <string name="redo" object="[flashx.textLayout.edit.EditManager]" text=".redo(%%):void" tiptext="Reperforms the previous undone operation." version="1.5" playername="" helpurl="flashx.textLayout.edit:EditManager:redo"/>
                <string name="splitParagraph" object="[flashx.textLayout.edit.EditManager]" text=".splitParagraph(%[operationState:flashx.textLayout.edit:SelectionState=null]%):void" tiptext="Splits the paragraph at the current position." version="1.5" playername="" helpurl="flashx.textLayout.edit:EditManager:splitParagraph"/>
                <string name="undo" object="[flashx.textLayout.edit.EditManager]" text=".undo(%%):void" tiptext="Reverses the previous operation." version="1.5" playername="" helpurl="flashx.textLayout.edit:EditManager:undo"/>
                <string name="updateAllControllers" object="[flashx.textLayout.edit.EditManager]" text=".updateAllControllers(%%):void" tiptext="Update the display after an operation has modified it" version="" playername="" helpurl="flashx.textLayout.edit:EditManager:updateAllControllers"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class EditManager" helpurl="flashx.textLayout.edit:EditManager">
                <string name="overwriteMode" object="[flashx.textLayout.edit.EditManager]" text=".overwriteMode" tiptext="Indicates whether overwrite mode is on or off." version="" playername="" helpurl="flashx.textLayout.edit:EditManager:overwriteMode"/>
                <string name="undoManager" object="[flashx.textLayout.edit.EditManager]" text=".undoManager" tiptext="The IUndoManager assigned to this edit manager." version="" playername="" helpurl="flashx.textLayout.edit:EditManager:undoManager:get"/>
            </folder>
        </folder>
        <folder name="ElementRange" id="[flashx.textLayout.edit.ElementRange]" sort="true" index="true" asAncestors="Object" tiptext="The ElementRange class represents the range of objects selected within a text flow." helpurl="flashx.textLayout.edit:ElementRange">
            <folder name="Methods" id="Methods" tiptext="Methods for class ElementRange" helpurl="flashx.textLayout.edit:ElementRange">
                <string name="createElementRange" object="[flashx.textLayout.edit.ElementRange]" text="ElementRange.createElementRange(%textFlow:flashx.textLayout.elements:TextFlow,absoluteStart:int,absoluteEnd:int%):flashx.textLayout.edit:ElementRange" static="true" tiptext="Creates an ElementRange object." version="1.5" playername="" helpurl="flashx.textLayout.edit:ElementRange:createElementRange"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class ElementRange" helpurl="flashx.textLayout.edit:ElementRange">
                <string name="absoluteEnd" object="[flashx.textLayout.edit.ElementRange]" text=".absoluteEnd" tiptext="The absolute text position of the FlowLeafElement object that contains the end of the range." version="" playername="" helpurl="flashx.textLayout.edit:ElementRange:absoluteEnd:get"/>
                <string name="absoluteStart" object="[flashx.textLayout.edit.ElementRange]" text=".absoluteStart" tiptext="The absolute text position of the FlowLeafElement object that contains the start of the range." version="" playername="" helpurl="flashx.textLayout.edit:ElementRange:absoluteStart:get"/>
                <string name="characterFormat" object="[flashx.textLayout.edit.ElementRange]" text=".characterFormat" tiptext="The format attributes of the characters in the range." version="" playername="" helpurl="flashx.textLayout.edit:ElementRange:characterFormat:get"/>
                <string name="containerFormat" object="[flashx.textLayout.edit.ElementRange]" text=".containerFormat" tiptext="The format attributes of the container displaying the range." version="" playername="" helpurl="flashx.textLayout.edit:ElementRange:containerFormat:get"/>
                <string name="firstLeaf" object="[flashx.textLayout.edit.ElementRange]" text=".firstLeaf" tiptext="The FlowLeafElement object that contains the start of the range." version="" playername="" helpurl="flashx.textLayout.edit:ElementRange:firstLeaf:get"/>
                <string name="firstParagraph" object="[flashx.textLayout.edit.ElementRange]" text=".firstParagraph" tiptext="The ParagraphElement object that contains the start of the range." version="" playername="" helpurl="flashx.textLayout.edit:ElementRange:firstParagraph:get"/>
                <string name="lastLeaf" object="[flashx.textLayout.edit.ElementRange]" text=".lastLeaf" tiptext="The FlowLeafElement object that contains the end of the range." version="" playername="" helpurl="flashx.textLayout.edit:ElementRange:lastLeaf:get"/>
                <string name="lastParagraph" object="[flashx.textLayout.edit.ElementRange]" text=".lastParagraph" tiptext="The ParagraphElement object that contains the end of the range." version="" playername="" helpurl="flashx.textLayout.edit:ElementRange:lastParagraph:get"/>
                <string name="paragraphFormat" object="[flashx.textLayout.edit.ElementRange]" text=".paragraphFormat" tiptext="The format attributes of the paragraph containing the range." version="" playername="" helpurl="flashx.textLayout.edit:ElementRange:paragraphFormat:get"/>
                <string name="textFlow" object="[flashx.textLayout.edit.ElementRange]" text=".textFlow" tiptext="The TextFlow object that contains the range." version="" playername="" helpurl="flashx.textLayout.edit:ElementRange:textFlow:get"/>
            </folder>
        </folder>
        <folder name="IEditManager" id="[flashx.textLayout.edit.IEditManager]" sort="true" index="true" asAncestors="flashx.textLayout.edit:ISelectionManager,flashx.textLayout.edit:IInteractionEventHandler" tiptext="IEditManager defines the interface for handling edit operations of a text flow." helpurl="flashx.textLayout.edit:IEditManager">
            <folder name="Methods" id="Methods" tiptext="Methods for class IEditManager" helpurl="flashx.textLayout.edit:IEditManager">
                <string name="applyContainerFormat" object="[flashx.textLayout.edit.IEditManager]" text=".applyContainerFormat(%format:flashx.textLayout.formats:ITextLayoutFormat[,operationState:flashx.textLayout.edit:SelectionState=null]%):void" tiptext="Applies container styles to any containers in the selection." version="1.5" playername="" helpurl="flashx.textLayout.edit:IEditManager:applyContainerFormat"/>
                <string name="applyFormatToElement" object="[flashx.textLayout.edit.IEditManager]" text=".applyFormatToElement(%targetElement:flashx.textLayout.elements:FlowElement,format:flashx.textLayout.formats:ITextLayoutFormat[,operationState:flashx.textLayout.edit:SelectionState=null]%):void" tiptext="Applies styles to the specified element." version="1.5" playername="" helpurl="flashx.textLayout.edit:IEditManager:applyFormatToElement"/>
                <string name="applyFormat" object="[flashx.textLayout.edit.IEditManager]" text=".applyFormat(%leafFormat:flashx.textLayout.formats:ITextLayoutFormat,paragraphFormat:flashx.textLayout.formats:ITextLayoutFormat,containerFormat:flashx.textLayout.formats:ITextLayoutFormat[,operationState:flashx.textLayout.edit:SelectionState=null]%):void" tiptext="Changes the formats of the specified (or current) selection." version="1.5" playername="" helpurl="flashx.textLayout.edit:IEditManager:applyFormat"/>
                <string name="applyLeafFormat" object="[flashx.textLayout.edit.IEditManager]" text=".applyLeafFormat(%format:flashx.textLayout.formats:ITextLayoutFormat[,operationState:flashx.textLayout.edit:SelectionState=null]%):void" tiptext="Changes the format applied to the leaf elements in the specified (or current) selection." version="1.5" playername="" helpurl="flashx.textLayout.edit:IEditManager:applyLeafFormat"/>
                <string name="applyLink" object="[flashx.textLayout.edit.IEditManager]" text=".applyLink(%href:String[,target:String=null,extendToLinkBoundary:Boolean=false,operationState:flashx.textLayout.edit:SelectionState=null]%):void" tiptext="Transforms a selection into a link, or a link into normal text." version="1.5" playername="" helpurl="flashx.textLayout.edit:IEditManager:applyLink"/>
                <string name="applyParagraphFormat" object="[flashx.textLayout.edit.IEditManager]" text=".applyParagraphFormat(%format:flashx.textLayout.formats:ITextLayoutFormat[,operationState:flashx.textLayout.edit:SelectionState=null]%):void" tiptext="Applies paragraph styles to any paragraphs in the selection." version="1.5" playername="" helpurl="flashx.textLayout.edit:IEditManager:applyParagraphFormat"/>
                <string name="applyTCY" object="[flashx.textLayout.edit.IEditManager]" text=".applyTCY(%tcyOn:Boolean[,operationState:flashx.textLayout.edit:SelectionState=null]%):void" tiptext="Transforms text into a TCY run, or a TCY run into non-TCY text." version="1.5" playername="" helpurl="flashx.textLayout.edit:IEditManager:applyTCY"/>
                <string name="beginCompositeOperation" object="[flashx.textLayout.edit.IEditManager]" text=".beginCompositeOperation(%%):void" tiptext="Begins a new group of operations." version="1.5" playername="" helpurl="flashx.textLayout.edit:IEditManager:beginCompositeOperation"/>
                <string name="changeElementID" object="[flashx.textLayout.edit.IEditManager]" text=".changeElementID(%newID:String,targetElement:flashx.textLayout.elements:FlowElement[,relativeStart:int=0,relativeEnd:int=-1,operationState:flashx.textLayout.edit:SelectionState=null]%):void" tiptext="Changes the ID of an element." version="1.5" playername="" helpurl="flashx.textLayout.edit:IEditManager:changeElementID"/>
                <string name="changeStyleName" object="[flashx.textLayout.edit.IEditManager]" text=".changeStyleName(%newName:String,targetElement:flashx.textLayout.elements:FlowElement[,relativeStart:int=0,relativeEnd:int=-1,operationState:flashx.textLayout.edit:SelectionState=null]%):void" tiptext="Changes the styleName of an element or part of an element." version="1.5" playername="" helpurl="flashx.textLayout.edit:IEditManager:changeStyleName"/>
                <string name="clearFormatOnElement" object="[flashx.textLayout.edit.IEditManager]" text=".clearFormatOnElement(%targetElement:flashx.textLayout.elements:FlowElement,format:flashx.textLayout.formats:ITextLayoutFormat[,operationState:flashx.textLayout.edit:SelectionState=null]%):void" tiptext="Undefines styles to the specified element." version="1.5" playername="" helpurl="flashx.textLayout.edit:IEditManager:clearFormatOnElement"/>
                <string name="clearFormat" object="[flashx.textLayout.edit.IEditManager]" text=".clearFormat(%leafFormat:flashx.textLayout.formats:ITextLayoutFormat,paragraphFormat:flashx.textLayout.formats:ITextLayoutFormat,containerFormat:flashx.textLayout.formats:ITextLayoutFormat[,operationState:flashx.textLayout.edit:SelectionState=null]%):void" tiptext="Undefines formats of the specified (or current) selection." version="1.5" playername="" helpurl="flashx.textLayout.edit:IEditManager:clearFormat"/>
                <string name="cutTextScrap" object="[flashx.textLayout.edit.IEditManager]" text=".cutTextScrap(%[operationState:flashx.textLayout.edit:SelectionState=null]%):flashx.textLayout.edit:TextScrap" tiptext="Deletes the selected area and returns the deleted area in a TextScrap object." version="1.5" playername="" helpurl="flashx.textLayout.edit:IEditManager:cutTextScrap"/>
                <string name="deleteNextCharacter" object="[flashx.textLayout.edit.IEditManager]" text=".deleteNextCharacter(%[operationState:flashx.textLayout.edit:SelectionState=null]%):void" tiptext="Deletes a range of text, or, if a point selection is given, deletes the next character." version="1.5" playername="" helpurl="flashx.textLayout.edit:IEditManager:deleteNextCharacter"/>
                <string name="deleteNextWord" object="[flashx.textLayout.edit.IEditManager]" text=".deleteNextWord(%[operationState:flashx.textLayout.edit:SelectionState=null]%):void" tiptext="Deletes the next word." version="1.5" playername="" helpurl="flashx.textLayout.edit:IEditManager:deleteNextWord"/>
                <string name="deletePreviousCharacter" object="[flashx.textLayout.edit.IEditManager]" text=".deletePreviousCharacter(%[operationState:flashx.textLayout.edit:SelectionState=null]%):void" tiptext="Deletes a range of text, or, if a point selection is given, deletes the previous character." version="1.5" playername="" helpurl="flashx.textLayout.edit:IEditManager:deletePreviousCharacter"/>
                <string name="deletePreviousWord" object="[flashx.textLayout.edit.IEditManager]" text=".deletePreviousWord(%[operationState:flashx.textLayout.edit:SelectionState=null]%):void" tiptext="Deletes the previous word." version="1.5" playername="" helpurl="flashx.textLayout.edit:IEditManager:deletePreviousWord"/>
                <string name="deleteText" object="[flashx.textLayout.edit.IEditManager]" text=".deleteText(%[operationState:flashx.textLayout.edit:SelectionState=null]%):void" tiptext="Deletes a range of text." version="1.5" playername="" helpurl="flashx.textLayout.edit:IEditManager:deleteText"/>
                <string name="doOperation" object="[flashx.textLayout.edit.IEditManager]" text=".doOperation(%operation:flashx.textLayout.operations:FlowOperation%):void" tiptext="Executes a FlowOperation." version="1.5" playername="" helpurl="flashx.textLayout.edit:IEditManager:doOperation"/>
                <string name="endCompositeOperation" object="[flashx.textLayout.edit.IEditManager]" text=".endCompositeOperation(%%):void" tiptext="Ends a group of operations." version="1.5" playername="" helpurl="flashx.textLayout.edit:IEditManager:endCompositeOperation"/>
                <string name="insertInlineGraphic" object="[flashx.textLayout.edit.IEditManager]" text=".insertInlineGraphic(%source:Object,width:Object,height:Object[,options:Object=null,operationState:flashx.textLayout.edit:SelectionState=null]%):void" tiptext="Inserts an image." version="1.5" playername="" helpurl="flashx.textLayout.edit:IEditManager:insertInlineGraphic"/>
                <string name="insertText" object="[flashx.textLayout.edit.IEditManager]" text=".insertText(%text:String[,operationState:flashx.textLayout.edit:SelectionState=null]%):void" tiptext="Inserts text." version="1.5" playername="" helpurl="flashx.textLayout.edit:IEditManager:insertText"/>
                <string name="modifyInlineGraphic" object="[flashx.textLayout.edit.IEditManager]" text=".modifyInlineGraphic(%source:Object,width:Object,height:Object[,options:Object=null,operationState:flashx.textLayout.edit:SelectionState=null]%):void" tiptext="Modifies an existing inline graphic." version="1.5" playername="" helpurl="flashx.textLayout.edit:IEditManager:modifyInlineGraphic"/>
                <string name="overwriteText" object="[flashx.textLayout.edit.IEditManager]" text=".overwriteText(%text:String[,operationState:flashx.textLayout.edit:SelectionState=null]%):void" tiptext="Overwrites the selected text." version="1.5" playername="" helpurl="flashx.textLayout.edit:IEditManager:overwriteText"/>
                <string name="pasteTextScrap" object="[flashx.textLayout.edit.IEditManager]" text=".pasteTextScrap(%scrapToPaste:flashx.textLayout.edit:TextScrap[,operationState:flashx.textLayout.edit:SelectionState=null]%):void" tiptext="Pastes the TextScrap into the selected area." version="1.5" playername="" helpurl="flashx.textLayout.edit:IEditManager:pasteTextScrap"/>
                <string name="redo" object="[flashx.textLayout.edit.IEditManager]" text=".redo(%%):void" tiptext="Reperforms the previous undone operation." version="1.5" playername="" helpurl="flashx.textLayout.edit:IEditManager:redo"/>
                <string name="splitParagraph" object="[flashx.textLayout.edit.IEditManager]" text=".splitParagraph(%[operationState:flashx.textLayout.edit:SelectionState=null]%):void" tiptext="Splits the paragraph at the current position." version="1.5" playername="" helpurl="flashx.textLayout.edit:IEditManager:splitParagraph"/>
                <string name="undo" object="[flashx.textLayout.edit.IEditManager]" text=".undo(%%):void" tiptext="Reverses the previous operation." version="1.5" playername="" helpurl="flashx.textLayout.edit:IEditManager:undo"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class IEditManager" helpurl="flashx.textLayout.edit:IEditManager">
                <string name="undoManager" object="[flashx.textLayout.edit.IEditManager]" text=".undoManager" tiptext="The UndoManager object assigned to this EditManager instance, if there is one." version="" playername="" helpurl="flashx.textLayout.edit:IEditManager:undoManager:get"/>
            </folder>
        </folder>
        <folder name="IInteractionEventHandler" id="[flashx.textLayout.edit.IInteractionEventHandler]" sort="true" index="true" tiptext="The IInteractionEventHandler interface defines the event handler functions that are handled by a Text Layout Framework selection or edit manager." helpurl="flashx.textLayout.edit:IInteractionEventHandler">
            <folder name="Methods" id="Methods" tiptext="Methods for class IInteractionEventHandler" helpurl="flashx.textLayout.edit:IInteractionEventHandler">
                <string name="activateHandler" object="[flashx.textLayout.edit.IInteractionEventHandler]" text=".activateHandler(%event:flash.events:Event%):void" tiptext="Processes an activate event." version="1.5" playername="" helpurl="flashx.textLayout.edit:IInteractionEventHandler:activateHandler"/>
                <string name="deactivateHandler" object="[flashx.textLayout.edit.IInteractionEventHandler]" text=".deactivateHandler(%event:flash.events:Event%):void" tiptext="Processes a deactivate event." version="1.5" playername="" helpurl="flashx.textLayout.edit:IInteractionEventHandler:deactivateHandler"/>
                <string name="editHandler" object="[flashx.textLayout.edit.IInteractionEventHandler]" text=".editHandler(%event:flash.events:Event%):void" tiptext="Processes an edit event." version="1.5" playername="" helpurl="flashx.textLayout.edit:IInteractionEventHandler:editHandler"/>
                <string name="focusChangeHandler" object="[flashx.textLayout.edit.IInteractionEventHandler]" text=".focusChangeHandler(%event:flash.events:FocusEvent%):void" tiptext="Processes a focusChange event." version="1.5" playername="" helpurl="flashx.textLayout.edit:IInteractionEventHandler:focusChangeHandler"/>
                <string name="focusInHandler" object="[flashx.textLayout.edit.IInteractionEventHandler]" text=".focusInHandler(%event:flash.events:FocusEvent%):void" tiptext="Processes a focusIn event." version="1.5" playername="" helpurl="flashx.textLayout.edit:IInteractionEventHandler:focusInHandler"/>
                <string name="focusOutHandler" object="[flashx.textLayout.edit.IInteractionEventHandler]" text=".focusOutHandler(%event:flash.events:FocusEvent%):void" tiptext="Processes a focusOut event." version="1.5" playername="" helpurl="flashx.textLayout.edit:IInteractionEventHandler:focusOutHandler"/>
                <string name="imeStartCompositionHandler" object="[flashx.textLayout.edit.IInteractionEventHandler]" text=".imeStartCompositionHandler(%event:flash.events:IMEEvent%):void" tiptext="Processes an imeStartComposition event" version="1.5" playername="" helpurl="flashx.textLayout.edit:IInteractionEventHandler:imeStartCompositionHandler"/>
                <string name="keyDownHandler" object="[flashx.textLayout.edit.IInteractionEventHandler]" text=".keyDownHandler(%event:flash.events:KeyboardEvent%):void" tiptext="Processes a keyDown event." version="1.5" playername="" helpurl="flashx.textLayout.edit:IInteractionEventHandler:keyDownHandler"/>
                <string name="keyFocusChangeHandler" object="[flashx.textLayout.edit.IInteractionEventHandler]" text=".keyFocusChangeHandler(%event:flash.events:FocusEvent%):void" tiptext="Processes a keyFocusChange event." version="1.5" playername="" helpurl="flashx.textLayout.edit:IInteractionEventHandler:keyFocusChangeHandler"/>
                <string name="keyUpHandler" object="[flashx.textLayout.edit.IInteractionEventHandler]" text=".keyUpHandler(%event:flash.events:KeyboardEvent%):void" tiptext="Processes a keyUp event." version="1.5" playername="" helpurl="flashx.textLayout.edit:IInteractionEventHandler:keyUpHandler"/>
                <string name="menuSelectHandler" object="[flashx.textLayout.edit.IInteractionEventHandler]" text=".menuSelectHandler(%event:flash.events:ContextMenuEvent%):void" tiptext="Processes a menuSelect event." version="1.5" playername="" helpurl="flashx.textLayout.edit:IInteractionEventHandler:menuSelectHandler"/>
                <string name="mouseDoubleClickHandler" object="[flashx.textLayout.edit.IInteractionEventHandler]" text=".mouseDoubleClickHandler(%event:flash.events:MouseEvent%):void" tiptext="Processes a mouseDoubleClick event." version="1.5" playername="" helpurl="flashx.textLayout.edit:IInteractionEventHandler:mouseDoubleClickHandler"/>
                <string name="mouseDownHandler" object="[flashx.textLayout.edit.IInteractionEventHandler]" text=".mouseDownHandler(%event:flash.events:MouseEvent%):void" tiptext="Processes a mouseDown event." version="1.5" playername="" helpurl="flashx.textLayout.edit:IInteractionEventHandler:mouseDownHandler"/>
                <string name="mouseMoveHandler" object="[flashx.textLayout.edit.IInteractionEventHandler]" text=".mouseMoveHandler(%event:flash.events:MouseEvent%):void" tiptext="Processes a mouseMove event." version="1.5" playername="" helpurl="flashx.textLayout.edit:IInteractionEventHandler:mouseMoveHandler"/>
                <string name="mouseOutHandler" object="[flashx.textLayout.edit.IInteractionEventHandler]" text=".mouseOutHandler(%event:flash.events:MouseEvent%):void" tiptext="Processes a mouseOut event." version="1.5" playername="" helpurl="flashx.textLayout.edit:IInteractionEventHandler:mouseOutHandler"/>
                <string name="mouseOverHandler" object="[flashx.textLayout.edit.IInteractionEventHandler]" text=".mouseOverHandler(%event:flash.events:MouseEvent%):void" tiptext="Processes a mouseOver event." version="1.5" playername="" helpurl="flashx.textLayout.edit:IInteractionEventHandler:mouseOverHandler"/>
                <string name="mouseUpHandler" object="[flashx.textLayout.edit.IInteractionEventHandler]" text=".mouseUpHandler(%event:flash.events:MouseEvent%):void" tiptext="Processes a mouseUp event." version="1.5" playername="" helpurl="flashx.textLayout.edit:IInteractionEventHandler:mouseUpHandler"/>
                <string name="mouseWheelHandler" object="[flashx.textLayout.edit.IInteractionEventHandler]" text=".mouseWheelHandler(%event:flash.events:MouseEvent%):void" tiptext="Processes a mouseWheel event." version="1.5" playername="" helpurl="flashx.textLayout.edit:IInteractionEventHandler:mouseWheelHandler"/>
                <string name="textInputHandler" object="[flashx.textLayout.edit.IInteractionEventHandler]" text=".textInputHandler(%event:flash.events:TextEvent%):void" tiptext="Processes a TextEvent." version="1.5" playername="" helpurl="flashx.textLayout.edit:IInteractionEventHandler:textInputHandler"/>
            </folder>
        </folder>
        <folder name="ISelectionManager" id="[flashx.textLayout.edit.ISelectionManager]" sort="true" index="true" asAncestors="flashx.textLayout.edit:IInteractionEventHandler" tiptext="The ISelectionManager interface defines the interface for handling text selection." helpurl="flashx.textLayout.edit:ISelectionManager">
            <folder name="Methods" id="Methods" tiptext="Methods for class ISelectionManager" helpurl="flashx.textLayout.edit:ISelectionManager">
                <string name="flushPendingOperations" object="[flashx.textLayout.edit.ISelectionManager]" text=".flushPendingOperations(%%):void" tiptext="Executes any pending FlowOperations." version="1.5" playername="" helpurl="flashx.textLayout.edit:ISelectionManager:flushPendingOperations"/>
                <string name="getCommonCharacterFormat" object="[flashx.textLayout.edit.ISelectionManager]" text=".getCommonCharacterFormat(%[range:flashx.textLayout.elements:TextRange=null]%):flashx.textLayout.formats:ITextLayoutFormat" tiptext="Gets the character format attributes that are common to all characters in the specified text range or current selection." version="1.5" playername="" helpurl="flashx.textLayout.edit:ISelectionManager:getCommonCharacterFormat"/>
                <string name="getCommonContainerFormat" object="[flashx.textLayout.edit.ISelectionManager]" text=".getCommonContainerFormat(%[range:flashx.textLayout.elements:TextRange=null]%):flashx.textLayout.formats:ITextLayoutFormat" tiptext="Gets the container format attributes that are common to all containers in the specified text range or current selection." version="1.5" playername="" helpurl="flashx.textLayout.edit:ISelectionManager:getCommonContainerFormat"/>
                <string name="getCommonParagraphFormat" object="[flashx.textLayout.edit.ISelectionManager]" text=".getCommonParagraphFormat(%[range:flashx.textLayout.elements:TextRange=null]%):flashx.textLayout.formats:ITextLayoutFormat" tiptext="Gets the paragraph format attributes that are common to all paragraphs in the specified text range or current selection." version="1.5" playername="" helpurl="flashx.textLayout.edit:ISelectionManager:getCommonParagraphFormat"/>
                <string name="getSelectionState" object="[flashx.textLayout.edit.ISelectionManager]" text=".getSelectionState(%%):flashx.textLayout.edit:SelectionState" tiptext="Gets the SelectionState object of the current selection." version="1.5" playername="" helpurl="flashx.textLayout.edit:ISelectionManager:getSelectionState"/>
                <string name="hasSelection" object="[flashx.textLayout.edit.ISelectionManager]" text=".hasSelection(%%):Boolean" tiptext="Indicates whether there is a selection." version="1.5" playername="" helpurl="flashx.textLayout.edit:ISelectionManager:hasSelection"/>
                <string name="isRangeSelection" object="[flashx.textLayout.edit.ISelectionManager]" text=".isRangeSelection(%%):Boolean" tiptext="Indicates whether the selection covers a range of text." version="1.5" playername="" helpurl="flashx.textLayout.edit:ISelectionManager:isRangeSelection"/>
                <string name="notifyInsertOrDelete" object="[flashx.textLayout.edit.ISelectionManager]" text=".notifyInsertOrDelete(%absolutePosition:int,length:int%):void" tiptext="Updates the selection manager when text is inserted or deleted." version="1.5" playername="" helpurl="flashx.textLayout.edit:ISelectionManager:notifyInsertOrDelete"/>
                <string name="refreshSelection" object="[flashx.textLayout.edit.ISelectionManager]" text=".refreshSelection(%%):void" tiptext="Redisplays the selection shapes." version="1.5" playername="" helpurl="flashx.textLayout.edit:ISelectionManager:refreshSelection"/>
                <string name="selectAll" object="[flashx.textLayout.edit.ISelectionManager]" text=".selectAll(%%):void" tiptext="Selects the entire flow" version="1.5" playername="" helpurl="flashx.textLayout.edit:ISelectionManager:selectAll"/>
                <string name="selectRange" object="[flashx.textLayout.edit.ISelectionManager]" text=".selectRange(%anchorPosition:int,activePosition:int%):void" tiptext="Selects a range of text." version="1.5" playername="" helpurl="flashx.textLayout.edit:ISelectionManager:selectRange"/>
                <string name="setFocus" object="[flashx.textLayout.edit.ISelectionManager]" text=".setFocus(%%):void" tiptext="Gives the focus to the first container in the selection." version="1.5" playername="" helpurl="flashx.textLayout.edit:ISelectionManager:setFocus"/>
                <string name="setSelectionState" object="[flashx.textLayout.edit.ISelectionManager]" text=".setSelectionState(%state:flashx.textLayout.edit:SelectionState%):void" tiptext="Sets the SelectionState object of the current selection." version="1.5" playername="" helpurl="flashx.textLayout.edit:ISelectionManager:setSelectionState"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class ISelectionManager" helpurl="flashx.textLayout.edit:ISelectionManager">
                <string name="absoluteEnd" object="[flashx.textLayout.edit.ISelectionManager]" text=".absoluteEnd" tiptext="The text position of the end of the selection, as an offset from the start of the text flow." version="" playername="" helpurl="flashx.textLayout.edit:ISelectionManager:absoluteEnd:get"/>
                <string name="absoluteStart" object="[flashx.textLayout.edit.ISelectionManager]" text=".absoluteStart" tiptext="The text position of the start of the selection, as an offset from the start of the text flow." version="" playername="" helpurl="flashx.textLayout.edit:ISelectionManager:absoluteStart:get"/>
                <string name="activePosition" object="[flashx.textLayout.edit.ISelectionManager]" text=".activePosition" tiptext="The active point of the selection." version="" playername="" helpurl="flashx.textLayout.edit:ISelectionManager:activePosition:get"/>
                <string name="anchorPosition" object="[flashx.textLayout.edit.ISelectionManager]" text=".anchorPosition" tiptext="The anchor point of the selection." version="" playername="" helpurl="flashx.textLayout.edit:ISelectionManager:anchorPosition:get"/>
                <string name="currentSelectionFormat" object="[flashx.textLayout.edit.ISelectionManager]" text=".currentSelectionFormat" tiptext="The current SelectionFormat object." version="" playername="" helpurl="flashx.textLayout.edit:ISelectionManager:currentSelectionFormat:get"/>
                <string name="editingMode" object="[flashx.textLayout.edit.ISelectionManager]" text=".editingMode" tiptext="The editing mode." version="" playername="" helpurl="flashx.textLayout.edit:ISelectionManager:editingMode:get"/>
                <string name="focusedSelectionFormat" object="[flashx.textLayout.edit.ISelectionManager]" text=".focusedSelectionFormat" tiptext="The SelectionFormat object used to draw the selection in a focused container." version="" playername="" helpurl="flashx.textLayout.edit:ISelectionManager:focusedSelectionFormat:get"/>
                <string name="focused" object="[flashx.textLayout.edit.ISelectionManager]" text=".focused" tiptext="Indicates whether a container in the text flow has the focus." version="" playername="" helpurl="flashx.textLayout.edit:ISelectionManager:focused:get"/>
                <string name="inactiveSelectionFormat" object="[flashx.textLayout.edit.ISelectionManager]" text=".inactiveSelectionFormat" tiptext="The SelectionFormat object used to draw the selection when it is not in the active window." version="" playername="" helpurl="flashx.textLayout.edit:ISelectionManager:inactiveSelectionFormat:get"/>
                <string name="textFlow" object="[flashx.textLayout.edit.ISelectionManager]" text=".textFlow" tiptext="The TextFlow object managed by this selection manager." version="" playername="" helpurl="flashx.textLayout.edit:ISelectionManager:textFlow:get"/>
                <string name="unfocusedSelectionFormat" object="[flashx.textLayout.edit.ISelectionManager]" text=".unfocusedSelectionFormat" tiptext="The SelectionFormat object used to draw the selection when it is not in a focused container, but is in the active window." version="" playername="" helpurl="flashx.textLayout.edit:ISelectionManager:unfocusedSelectionFormat:get"/>
                <string name="windowActive" object="[flashx.textLayout.edit.ISelectionManager]" text=".windowActive" tiptext="Indicates whether the window associated with the text flow is active." version="" playername="" helpurl="flashx.textLayout.edit:ISelectionManager:windowActive:get"/>
            </folder>
        </folder>
        <folder name="SelectionFormat" id="[flashx.textLayout.edit.SelectionFormat]" sort="true" index="true" asAncestors="Object" tiptext="The SelectionFormat class defines the properties of a selection highlight." helpurl="flashx.textLayout.edit:SelectionFormat">
            <folder name="Methods" id="Methods" tiptext="Methods for class SelectionFormat" helpurl="flashx.textLayout.edit:SelectionFormat">
                <string name="SelectionFormat" object="[flashx.textLayout.edit.SelectionFormat]" text="new SelectionFormat(%[rangeColor:uint=0xffffff,rangeAlpha:Number=1.0,rangeBlendMode:String=difference,pointColor:uint=0xffffff,pointAlpha:Number=1.0,pointBlendMode:String=difference,pointBlinkRate:Number=500]%)" constructor="true" tiptext="Creates a SelectionFormat object with the specified properties." version="1.5" playername="" helpurl="flashx.textLayout.edit:SelectionFormat:SelectionFormat"/>
                <string name="equals" object="[flashx.textLayout.edit.SelectionFormat]" text=".equals(%selectionFormat:flashx.textLayout.edit:SelectionFormat%):Boolean" tiptext="Determines whether this SelectionFormat object has the same property values as another SelectionFormat object." version="1.5" playername="" helpurl="flashx.textLayout.edit:SelectionFormat:equals"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class SelectionFormat" helpurl="flashx.textLayout.edit:SelectionFormat">
                <string name="pointAlpha" object="[flashx.textLayout.edit.SelectionFormat]" text=".pointAlpha" tiptext="The alpha for drawing the cursor." version="" playername="" helpurl="flashx.textLayout.edit:SelectionFormat:pointAlpha:get"/>
                <string name="pointBlendMode" object="[flashx.textLayout.edit.SelectionFormat]" text=".pointBlendMode" tiptext="The blend mode for drawing the cursor." version="" playername="" helpurl="flashx.textLayout.edit:SelectionFormat:pointBlendMode:get"/>
                <string name="pointBlinkRate" object="[flashx.textLayout.edit.SelectionFormat]" text=".pointBlinkRate" tiptext="The rate at which the cursor blinks, in milliseconds." version="" playername="" helpurl="flashx.textLayout.edit:SelectionFormat:pointBlinkRate:get"/>
                <string name="pointColor" object="[flashx.textLayout.edit.SelectionFormat]" text=".pointColor" tiptext="The color for drawing the cursor." version="" playername="" helpurl="flashx.textLayout.edit:SelectionFormat:pointColor:get"/>
                <string name="rangeAlpha" object="[flashx.textLayout.edit.SelectionFormat]" text=".rangeAlpha" tiptext="The alpha for drawing the highlight of a range selection." version="" playername="" helpurl="flashx.textLayout.edit:SelectionFormat:rangeAlpha:get"/>
                <string name="rangeBlendMode" object="[flashx.textLayout.edit.SelectionFormat]" text=".rangeBlendMode" tiptext="The blending mode for drawing the highlight of a range selection." version="" playername="" helpurl="flashx.textLayout.edit:SelectionFormat:rangeBlendMode:get"/>
                <string name="rangeColor" object="[flashx.textLayout.edit.SelectionFormat]" text=".rangeColor" tiptext="The color for drawing the highlight of a range selection." version="" playername="" helpurl="flashx.textLayout.edit:SelectionFormat:rangeColor:get"/>
            </folder>
        </folder>
        <folder name="SelectionManager" id="[flashx.textLayout.edit.SelectionManager]" sort="true" index="true" asAncestors="Object" tiptext="The SelectionManager class manages text selection in a text flow." helpurl="flashx.textLayout.edit:SelectionManager">
            <folder name="Methods" id="Methods" tiptext="Methods for class SelectionManager" helpurl="flashx.textLayout.edit:SelectionManager">
                <string name="SelectionManager" object="[flashx.textLayout.edit.SelectionManager]" text="new SelectionManager(%%)" constructor="true" tiptext="Creates a SelectionManager object." version="1.5" playername="" helpurl="flashx.textLayout.edit:SelectionManager:SelectionManager"/>
                <string name="activateHandler" object="[flashx.textLayout.edit.SelectionManager]" text=".activateHandler(%event:flash.events:Event%):void" tiptext="Processes an activate event." version="1.5" playername="" helpurl="flashx.textLayout.edit:SelectionManager:activateHandler"/>
                <string name="deactivateHandler" object="[flashx.textLayout.edit.SelectionManager]" text=".deactivateHandler(%event:flash.events:Event%):void" tiptext="Processes a deactivate event." version="1.5" playername="" helpurl="flashx.textLayout.edit:SelectionManager:deactivateHandler"/>
                <string name="doOperation" object="[flashx.textLayout.edit.SelectionManager]" text=".doOperation(%op:flashx.textLayout.operations:FlowOperation%):void" tiptext="Perform a SelectionManager operation - these may never modify the flow but clients still are able to cancel them." version="1.5" playername="" helpurl="flashx.textLayout.edit:SelectionManager:doOperation"/>
                <string name="editHandler" object="[flashx.textLayout.edit.SelectionManager]" text=".editHandler(%event:flash.events:Event%):void" tiptext="Processes an edit event." version="1.5" playername="" helpurl="flashx.textLayout.edit:SelectionManager:editHandler"/>
                <string name="flushPendingOperations" object="[flashx.textLayout.edit.SelectionManager]" text=".flushPendingOperations(%%):void" tiptext="" version="1.5" playername="" helpurl="flashx.textLayout.edit:SelectionManager:flushPendingOperations"/>
                <string name="focusChangeHandler" object="[flashx.textLayout.edit.SelectionManager]" text=".focusChangeHandler(%event:flash.events:FocusEvent%):void" tiptext="Processes a focusChange event." version="" playername="" helpurl="flashx.textLayout.edit:SelectionManager:focusChangeHandler"/>
                <string name="focusInHandler" object="[flashx.textLayout.edit.SelectionManager]" text=".focusInHandler(%event:flash.events:FocusEvent%):void" tiptext="Processes a focusIn event." version="1.5" playername="" helpurl="flashx.textLayout.edit:SelectionManager:focusInHandler"/>
                <string name="focusOutHandler" object="[flashx.textLayout.edit.SelectionManager]" text=".focusOutHandler(%event:flash.events:FocusEvent%):void" tiptext="Processes a focusOut event." version="1.5" playername="" helpurl="flashx.textLayout.edit:SelectionManager:focusOutHandler"/>
                <string name="getCommonCharacterFormat" object="[flashx.textLayout.edit.SelectionManager]" text=".getCommonCharacterFormat(%[range:flashx.textLayout.elements:TextRange=null]%):flashx.textLayout.formats:ITextLayoutFormat" tiptext="Gets the character format attributes that are common to all characters in the specified text range or current selection." version="1.5" playername="" helpurl="flashx.textLayout.edit:SelectionManager:getCommonCharacterFormat"/>
                <string name="getCommonContainerFormat" object="[flashx.textLayout.edit.SelectionManager]" text=".getCommonContainerFormat(%[range:flashx.textLayout.elements:TextRange=null]%):flashx.textLayout.formats:ITextLayoutFormat" tiptext="Gets the container format attributes that are common to all containers in the specified text range or current selection." version="1.5" playername="" helpurl="flashx.textLayout.edit:SelectionManager:getCommonContainerFormat"/>
                <string name="getCommonParagraphFormat" object="[flashx.textLayout.edit.SelectionManager]" text=".getCommonParagraphFormat(%[range:flashx.textLayout.elements:TextRange=null]%):flashx.textLayout.formats:ITextLayoutFormat" tiptext="Gets the paragraph format attributes that are common to all paragraphs in the specified text range or current selection." version="1.5" playername="" helpurl="flashx.textLayout.edit:SelectionManager:getCommonParagraphFormat"/>
                <string name="getSelectionState" object="[flashx.textLayout.edit.SelectionManager]" text=".getSelectionState(%%):flashx.textLayout.edit:SelectionState" tiptext="Gets the SelectionState object of the current selection." version="1.5" playername="" helpurl="flashx.textLayout.edit:SelectionManager:getSelectionState"/>
                <string name="hasSelection" object="[flashx.textLayout.edit.SelectionManager]" text=".hasSelection(%%):Boolean" tiptext="Indicates whether there is a selection." version="1.5" playername="" helpurl="flashx.textLayout.edit:SelectionManager:hasSelection"/>
                <string name="imeStartCompositionHandler" object="[flashx.textLayout.edit.SelectionManager]" text=".imeStartCompositionHandler(%event:flash.events:IMEEvent%):void" tiptext="Processes an imeStartComposition event" version="1.5" playername="" helpurl="flashx.textLayout.edit:SelectionManager:imeStartCompositionHandler"/>
                <string name="isRangeSelection" object="[flashx.textLayout.edit.SelectionManager]" text=".isRangeSelection(%%):Boolean" tiptext="Indicates whether the selection covers a range of text." version="1.5" playername="" helpurl="flashx.textLayout.edit:SelectionManager:isRangeSelection"/>
                <string name="keyDownHandler" object="[flashx.textLayout.edit.SelectionManager]" text=".keyDownHandler(%event:flash.events:KeyboardEvent%):void" tiptext="Processes a keyDown event." version="1.5" playername="" helpurl="flashx.textLayout.edit:SelectionManager:keyDownHandler"/>
                <string name="keyFocusChangeHandler" object="[flashx.textLayout.edit.SelectionManager]" text=".keyFocusChangeHandler(%event:flash.events:FocusEvent%):void" tiptext="Processes a keyFocusChange event." version="1.5" playername="" helpurl="flashx.textLayout.edit:SelectionManager:keyFocusChangeHandler"/>
                <string name="keyUpHandler" object="[flashx.textLayout.edit.SelectionManager]" text=".keyUpHandler(%event:flash.events:KeyboardEvent%):void" tiptext="Processes a keyUp event." version="1.5" playername="" helpurl="flashx.textLayout.edit:SelectionManager:keyUpHandler"/>
                <string name="menuSelectHandler" object="[flashx.textLayout.edit.SelectionManager]" text=".menuSelectHandler(%event:flash.events:ContextMenuEvent%):void" tiptext="Processes a menuSelect event." version="" playername="" helpurl="flashx.textLayout.edit:SelectionManager:menuSelectHandler"/>
                <string name="mouseDoubleClickHandler" object="[flashx.textLayout.edit.SelectionManager]" text=".mouseDoubleClickHandler(%event:flash.events:MouseEvent%):void" tiptext="Processes a mouseDoubleClick event." version="1.5" playername="" helpurl="flashx.textLayout.edit:SelectionManager:mouseDoubleClickHandler"/>
                <string name="mouseDownHandler" object="[flashx.textLayout.edit.SelectionManager]" text=".mouseDownHandler(%event:flash.events:MouseEvent%):void" tiptext="Processes a mouseDown event." version="1.5" playername="" helpurl="flashx.textLayout.edit:SelectionManager:mouseDownHandler"/>
                <string name="mouseMoveHandler" object="[flashx.textLayout.edit.SelectionManager]" text=".mouseMoveHandler(%event:flash.events:MouseEvent%):void" tiptext="Processes a mouseMove event." version="1.5" playername="" helpurl="flashx.textLayout.edit:SelectionManager:mouseMoveHandler"/>
                <string name="mouseOutHandler" object="[flashx.textLayout.edit.SelectionManager]" text=".mouseOutHandler(%event:flash.events:MouseEvent%):void" tiptext="Processes a mouseOut event." version="1.5" playername="" helpurl="flashx.textLayout.edit:SelectionManager:mouseOutHandler"/>
                <string name="mouseOverHandler" object="[flashx.textLayout.edit.SelectionManager]" text=".mouseOverHandler(%event:flash.events:MouseEvent%):void" tiptext="Processes a mouseOver event." version="1.5" playername="" helpurl="flashx.textLayout.edit:SelectionManager:mouseOverHandler"/>
                <string name="mouseUpHandler" object="[flashx.textLayout.edit.SelectionManager]" text=".mouseUpHandler(%event:flash.events:MouseEvent%):void" tiptext="Processes a mouseUp event." version="1.5" playername="" helpurl="flashx.textLayout.edit:SelectionManager:mouseUpHandler"/>
                <string name="mouseWheelHandler" object="[flashx.textLayout.edit.SelectionManager]" text=".mouseWheelHandler(%event:flash.events:MouseEvent%):void" tiptext="Processes a mouseWheel event." version="" playername="" helpurl="flashx.textLayout.edit:SelectionManager:mouseWheelHandler"/>
                <string name="notifyInsertOrDelete" object="[flashx.textLayout.edit.SelectionManager]" text=".notifyInsertOrDelete(%absolutePosition:int,length:int%):void" tiptext="Updates the selection manager when text is inserted or deleted." version="1.5" playername="" helpurl="flashx.textLayout.edit:SelectionManager:notifyInsertOrDelete"/>
                <string name="refreshSelection" object="[flashx.textLayout.edit.SelectionManager]" text=".refreshSelection(%%):void" tiptext="Redisplays the selection shapes." version="1.5" playername="" helpurl="flashx.textLayout.edit:SelectionManager:refreshSelection"/>
                <string name="selectAll" object="[flashx.textLayout.edit.SelectionManager]" text=".selectAll(%%):void" tiptext="" version="1.5" playername="" helpurl="flashx.textLayout.edit:SelectionManager:selectAll"/>
                <string name="selectRange" object="[flashx.textLayout.edit.SelectionManager]" text=".selectRange(%anchorPosition:int,activePosition:int%):void" tiptext="" version="1.5" playername="" helpurl="flashx.textLayout.edit:SelectionManager:selectRange"/>
                <string name="setFocus" object="[flashx.textLayout.edit.SelectionManager]" text=".setFocus(%%):void" tiptext="Gives the focus to the first container in the selection." version="1.5" playername="" helpurl="flashx.textLayout.edit:SelectionManager:setFocus"/>
                <string name="setSelectionState" object="[flashx.textLayout.edit.SelectionManager]" text=".setSelectionState(%state:flashx.textLayout.edit:SelectionState%):void" tiptext="Sets the SelectionState object of the current selection." version="1.5" playername="" helpurl="flashx.textLayout.edit:SelectionManager:setSelectionState"/>
                <string name="textInputHandler" object="[flashx.textLayout.edit.SelectionManager]" text=".textInputHandler(%event:flash.events:TextEvent%):void" tiptext="Processes a TextEvent." version="1.5" playername="" helpurl="flashx.textLayout.edit:SelectionManager:textInputHandler"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class SelectionManager" helpurl="flashx.textLayout.edit:SelectionManager">
                <string name="absoluteEnd" object="[flashx.textLayout.edit.SelectionManager]" text=".absoluteEnd" tiptext="The text position of the end of the selection, as an offset from the start of the text flow." version="" playername="" helpurl="flashx.textLayout.edit:SelectionManager:absoluteEnd:get"/>
                <string name="absoluteStart" object="[flashx.textLayout.edit.SelectionManager]" text=".absoluteStart" tiptext="The text position of the start of the selection, as an offset from the start of the text flow." version="" playername="" helpurl="flashx.textLayout.edit:SelectionManager:absoluteStart:get"/>
                <string name="activePosition" object="[flashx.textLayout.edit.SelectionManager]" text=".activePosition" tiptext="The active point of the selection." version="" playername="" helpurl="flashx.textLayout.edit:SelectionManager:activePosition:get"/>
                <string name="anchorPosition" object="[flashx.textLayout.edit.SelectionManager]" text=".anchorPosition" tiptext="The anchor point of the selection." version="" playername="" helpurl="flashx.textLayout.edit:SelectionManager:anchorPosition:get"/>
                <string name="currentSelectionFormat" object="[flashx.textLayout.edit.SelectionManager]" text=".currentSelectionFormat" tiptext="The current SelectionFormat object." version="" playername="" helpurl="flashx.textLayout.edit:SelectionManager:currentSelectionFormat:get"/>
                <string name="editingMode" object="[flashx.textLayout.edit.SelectionManager]" text=".editingMode" tiptext="The editing mode." version="" playername="" helpurl="flashx.textLayout.edit:SelectionManager:editingMode:get"/>
                <string name="focused" object="[flashx.textLayout.edit.SelectionManager]" text=".focused" tiptext="Indicates whether a container in the text flow has the focus." version="" playername="" helpurl="flashx.textLayout.edit:SelectionManager:focused:get"/>
                <string name="pointFormat" object="[flashx.textLayout.edit.SelectionManager]" text=".pointFormat" tiptext="The format that will be applied to inserted text." version="" playername="" helpurl="flashx.textLayout.edit:SelectionManager:pointFormat:get"/>
                <string name="textFlow" object="[flashx.textLayout.edit.SelectionManager]" text=".textFlow" tiptext="The TextFlow object managed by this selection manager." version="" playername="" helpurl="flashx.textLayout.edit:SelectionManager:textFlow:get"/>
                <string name="windowActive" object="[flashx.textLayout.edit.SelectionManager]" text=".windowActive" tiptext="Indicates whether the window associated with the text flow is active." version="" playername="" helpurl="flashx.textLayout.edit:SelectionManager:windowActive:get"/>
                <string name="focusedSelectionFormat" object="[flashx.textLayout.edit.SelectionManager]" text=".focusedSelectionFormat" tiptext="The SelectionFormat object used to draw the selection in a focused container." version="" playername="" helpurl="flashx.textLayout.edit:SelectionManager:focusedSelectionFormat:set"/>
                <string name="inactiveSelectionFormat" object="[flashx.textLayout.edit.SelectionManager]" text=".inactiveSelectionFormat" tiptext="The SelectionFormat object used to draw the selection when it is not in the active window." version="" playername="" helpurl="flashx.textLayout.edit:SelectionManager:inactiveSelectionFormat:set"/>
                <string name="unfocusedSelectionFormat" object="[flashx.textLayout.edit.SelectionManager]" text=".unfocusedSelectionFormat" tiptext="The SelectionFormat object used to draw the selection when it is not in a focused container, but is in the active window." version="" playername="" helpurl="flashx.textLayout.edit:SelectionManager:unfocusedSelectionFormat:set"/>
            </folder>
        </folder>
        <folder name="SelectionState" id="[flashx.textLayout.edit.SelectionState]" sort="true" index="true" asAncestors="flashx.textLayout.elements:TextRange,Object" tiptext="The SelectionState class represents a selection in a text flow." helpurl="flashx.textLayout.edit:SelectionState">
            <folder name="Methods" id="Methods" tiptext="Methods for class SelectionState" helpurl="flashx.textLayout.edit:SelectionState">
                <string name="SelectionState" object="[flashx.textLayout.edit.SelectionState]" text="new SelectionState(%root:flashx.textLayout.elements:TextFlow,anchorPosition:int,activePosition:int[,format:flashx.textLayout.formats:ITextLayoutFormat=null]%)" constructor="true" tiptext="Creates a SelectionState object." version="1.5" playername="" helpurl="flashx.textLayout.edit:SelectionState:SelectionState"/>
                <string name="updateRange" object="[flashx.textLayout.edit.SelectionState]" text=".updateRange(%newAnchorPosition:int,newActivePosition:int%):Boolean" tiptext="Updates the selection range with new anchor or active position values." version="" playername="" helpurl="flashx.textLayout.edit:SelectionState:updateRange"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class SelectionState" helpurl="flashx.textLayout.edit:SelectionState">
                <string name="pointFormat" object="[flashx.textLayout.edit.SelectionState]" text=".pointFormat" tiptext="The format attributes applied to inserted text." version="" playername="" helpurl="flashx.textLayout.edit:SelectionState:pointFormat:get"/>
            </folder>
        </folder>
        <folder name="TextClipboard" id="[flashx.textLayout.edit.TextClipboard]" sort="true" index="true" asAncestors="Object" tiptext="The TextClipboard class copies and pastes TextScrap objects to and from the system clipboard." helpurl="flashx.textLayout.edit:TextClipboard">
            <folder name="Methods" id="Methods" tiptext="Methods for class TextClipboard" helpurl="flashx.textLayout.edit:TextClipboard">
                <string name="getContents" object="[flashx.textLayout.edit.TextClipboard]" text="TextClipboard.getContents(%%):flashx.textLayout.edit:TextScrap" static="true" tiptext="Gets any text on the system clipboard as a TextScrap object." version="1.5" playername="" helpurl="flashx.textLayout.edit:TextClipboard:getContents"/>
                <string name="setContents" object="[flashx.textLayout.edit.TextClipboard]" text="TextClipboard.setContents(%scrap:flashx.textLayout.edit:TextScrap%):void" static="true" tiptext="Puts a TextScrap onto the system clipboard." version="1.5" playername="" helpurl="flashx.textLayout.edit:TextClipboard:setContents"/>
            </folder>
        </folder>
        <folder name="TextScrap" id="[flashx.textLayout.edit.TextScrap]" sort="true" index="true" asAncestors="Object" tiptext="The TextScrap class represents a fragment of a text flow." helpurl="flashx.textLayout.edit:TextScrap">
            <folder name="Methods" id="Methods" tiptext="Methods for class TextScrap" helpurl="flashx.textLayout.edit:TextScrap">
                <string name="TextScrap" object="[flashx.textLayout.edit.TextScrap]" text="new TextScrap(%[textFlow:flashx.textLayout.elements:TextFlow=null]%)" constructor="true" tiptext="Creates a TextScrap object." version="1.5" playername="" helpurl="flashx.textLayout.edit:TextScrap:TextScrap"/>
                <string name="clone" object="[flashx.textLayout.edit.TextScrap]" text=".clone(%%):flashx.textLayout.edit:TextScrap" tiptext="Creates a duplicate copy of this TextScrap object." version="1.5" playername="" helpurl="flashx.textLayout.edit:TextScrap:clone"/>
                <string name="createTextScrap" object="[flashx.textLayout.edit.TextScrap]" text="TextScrap.createTextScrap(%range:flashx.textLayout.elements:TextRange%):flashx.textLayout.edit:TextScrap" static="true" tiptext="Creates a TextScrap object from a range of text represented by a TextRange object." version="1.5" playername="" helpurl="flashx.textLayout.edit:TextScrap:createTextScrap"/>
            </folder>
        </folder>
    </folder>
        <folder name="flashx.textLayout.elements" id="flashx.textLayout.elements" sort="true" tiptext="Classes for package flashx.textLayout.elements" helpurl="flashx.textLayout.elements">
        <folder name="BreakElement" id="[flashx.textLayout.elements.BreakElement]" sort="true" index="true" asAncestors="flashx.textLayout.elements:SpecialCharacterElement,flashx.textLayout.elements:SpanElement,flashx.textLayout.elements:FlowLeafElement,flashx.textLayout.elements:FlowElement,Object" tiptext="The BreakElement class defines a line break, which provides for creating a line break in the text without creating a new paragraph." helpurl="flashx.textLayout.elements:BreakElement">
            <folder name="Methods" id="Methods" tiptext="Methods for class BreakElement" helpurl="flashx.textLayout.elements:BreakElement">
                <string name="BreakElement" object="[flashx.textLayout.elements.BreakElement]" text="new BreakElement(%%)" constructor="true" tiptext="Constructor." version="1.5" playername="" helpurl="flashx.textLayout.elements:BreakElement:BreakElement"/>
            </folder>
        </folder>
        <folder name="Configuration" id="[flashx.textLayout.elements.Configuration]" sort="true" index="true" asAncestors="Object" tiptext="The Configuration class is a primary point of integration between the Text Layout Framework and an application." helpurl="flashx.textLayout.elements:Configuration">
            <folder name="Methods" id="Methods" tiptext="Methods for class Configuration" helpurl="flashx.textLayout.elements:Configuration">
                <string name="Configuration" object="[flashx.textLayout.elements.Configuration]" text="new Configuration(%[initializeWithDefaults:Boolean=true]%)" constructor="true" tiptext="Constructor - creates a default configuration." version="1.5" playername="" helpurl="flashx.textLayout.elements:Configuration:Configuration"/>
                <string name="clone" object="[flashx.textLayout.elements.Configuration]" text=".clone(%%):flashx.textLayout.elements:Configuration" tiptext="Creates a clone of the Configuration object." version="1.5" playername="" helpurl="flashx.textLayout.elements:Configuration:clone"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class Configuration" helpurl="flashx.textLayout.elements:Configuration">
                <string name="defaultLinkActiveFormat" object="[flashx.textLayout.elements.Configuration]" text=".defaultLinkActiveFormat" tiptext="Specifies the active character format attributes that initially apply for all links (LinkElement objects) in the text flow." version="" playername="" helpurl="flashx.textLayout.elements:Configuration:defaultLinkActiveFormat:get"/>
                <string name="defaultLinkHoverFormat" object="[flashx.textLayout.elements.Configuration]" text=".defaultLinkHoverFormat" tiptext="Specifies the initial character format attributes that apply to a link (LinkElement) in the text flow whenthe cursor hovers over it." version="" playername="" helpurl="flashx.textLayout.elements:Configuration:defaultLinkHoverFormat:get"/>
                <string name="defaultLinkNormalFormat" object="[flashx.textLayout.elements.Configuration]" text=".defaultLinkNormalFormat" tiptext="Specifies the initial link attributes for all LinkElement objects in the text flow." version="" playername="" helpurl="flashx.textLayout.elements:Configuration:defaultLinkNormalFormat:get"/>
                <string name="enableAccessibility" object="[flashx.textLayout.elements.Configuration]" text=".enableAccessibility" tiptext="Specifies whether accessibility support is turned on or not." version="" playername="" helpurl="flashx.textLayout.elements:Configuration:enableAccessibility:get"/>
                <string name="flowComposerClass" object="[flashx.textLayout.elements.Configuration]" text=".flowComposerClass" tiptext="Specifies the type of flow composer to attach to a new TextFlow object by default." version="" playername="" helpurl="flashx.textLayout.elements:Configuration:flowComposerClass:get"/>
                <string name="focusedSelectionFormat" object="[flashx.textLayout.elements.Configuration]" text=".focusedSelectionFormat" tiptext="The initial selection format (SelectionFormat) for a text flow (TextFlow) when its window has focus." version="" playername="" helpurl="flashx.textLayout.elements:Configuration:focusedSelectionFormat:get"/>
                <string name="inactiveSelectionFormat" object="[flashx.textLayout.elements.Configuration]" text=".inactiveSelectionFormat" tiptext="The initial selection format (SelectionFormat) for a text flow (TextFlow) when its window is inactive." version="" playername="" helpurl="flashx.textLayout.elements:Configuration:inactiveSelectionFormat:get"/>
                <string name="inlineGraphicResolverFunction" object="[flashx.textLayout.elements.Configuration]" text=".inlineGraphicResolverFunction" tiptext="Specifies the callback used for resolving an inline graphic element." version="" playername="" helpurl="flashx.textLayout.elements:Configuration:inlineGraphicResolverFunction:get"/>
                <string name="manageEnterKey" object="[flashx.textLayout.elements.Configuration]" text=".manageEnterKey" tiptext="Specifies whether the Enter / Return key is entered as text by Text Layout Framework, to split a paragraph for example,or the client code handles it." version="" playername="" helpurl="flashx.textLayout.elements:Configuration:manageEnterKey:get"/>
                <string name="manageTabKey" object="[flashx.textLayout.elements.Configuration]" text=".manageTabKey" tiptext="Specifies whether the TAB key is entered as text by Text Layout Framework, or Flash Player or AIR handles it and turns it into a tabbed panel event." version="" playername="" helpurl="flashx.textLayout.elements:Configuration:manageTabKey:get"/>
                <string name="overflowPolicy" object="[flashx.textLayout.elements.Configuration]" text=".overflowPolicy" tiptext="Policy used for deciding whether the last line of a container fits in the container, or whether it overflows." version="" playername="" helpurl="flashx.textLayout.elements:Configuration:overflowPolicy:get"/>
                <string name="releaseLineCreationData" object="[flashx.textLayout.elements.Configuration]" text=".releaseLineCreationData" tiptext="Requests that the process of composing text release line creation data after composing each paragraph." version="" playername="" helpurl="flashx.textLayout.elements:Configuration:releaseLineCreationData:get"/>
                <string name="scrollDragDelay" object="[flashx.textLayout.elements.Configuration]" text=".scrollDragDelay" tiptext="Specifies a timed delay between one scroll and the next to prevent scrolling from going too fast." version="" playername="" helpurl="flashx.textLayout.elements:Configuration:scrollDragDelay:get"/>
                <string name="scrollDragPixels" object="[flashx.textLayout.elements.Configuration]" text=".scrollDragPixels" tiptext="Specifies the default number of pixels to scroll when the user initiates auto scrolling by dragging the selection." version="" playername="" helpurl="flashx.textLayout.elements:Configuration:scrollDragPixels:get"/>
                <string name="scrollMouseWheelMultiplier" object="[flashx.textLayout.elements.Configuration]" text=".scrollMouseWheelMultiplier" tiptext="Specifies the default number of pixels to scroll for Mouse wheel events." version="" playername="" helpurl="flashx.textLayout.elements:Configuration:scrollMouseWheelMultiplier:get"/>
                <string name="scrollPagePercentage" object="[flashx.textLayout.elements.Configuration]" text=".scrollPagePercentage" tiptext="Specifies the default percentage of the text flow to scroll for page scrolls." version="" playername="" helpurl="flashx.textLayout.elements:Configuration:scrollPagePercentage:get"/>
                <string name="textFlowInitialFormat" object="[flashx.textLayout.elements.Configuration]" text=".textFlowInitialFormat" tiptext="Specifies the initial format TextLayoutFormat configuration for a text flow (TextFlow object)." version="" playername="" helpurl="flashx.textLayout.elements:Configuration:textFlowInitialFormat:get"/>
                <string name="unfocusedSelectionFormat" object="[flashx.textLayout.elements.Configuration]" text=".unfocusedSelectionFormat" tiptext="The initial selection format that Text Layout Framework uses to draw the selection when the window is active but none of the containersin the TextFlow have focus." version="" playername="" helpurl="flashx.textLayout.elements:Configuration:unfocusedSelectionFormat:get"/>
            </folder>
        </folder>
        <folder name="DivElement" id="[flashx.textLayout.elements.DivElement]" sort="true" index="true" asAncestors="flashx.textLayout.elements:ContainerFormattedElement,flashx.textLayout.elements:ParagraphFormattedElement,flashx.textLayout.elements:FlowGroupElement,flashx.textLayout.elements:FlowElement,Object" tiptext="The DivElement class defines an element for grouping paragraphs (ParagraphElement objects)." helpurl="flashx.textLayout.elements:DivElement">
            <folder name="Methods" id="Methods" tiptext="Methods for class DivElement" helpurl="flashx.textLayout.elements:DivElement">
                <string name="DivElement" object="[flashx.textLayout.elements.DivElement]" text="new DivElement(%%)" constructor="true" tiptext="Constructor - creates a new DivElement object." version="1.5" playername="" helpurl="flashx.textLayout.elements:DivElement:DivElement"/>
            </folder>
        </folder>
        <folder name="FlowElement" id="[flashx.textLayout.elements.FlowElement]" sort="true" index="true" asAncestors="Object" tiptext="The text in a flow is stored in tree form with the elements of the tree representing logical divisions within the text." helpurl="flashx.textLayout.elements:FlowElement">
            <folder name="Methods" id="Methods" tiptext="Methods for class FlowElement" helpurl="flashx.textLayout.elements:FlowElement">
                <string name="FlowElement" object="[flashx.textLayout.elements.FlowElement]" text="new FlowElement(%%)" constructor="true" tiptext="Base class - invoking new FlowElement() throws an error exception." version="1.5" playername="" helpurl="flashx.textLayout.elements:FlowElement:FlowElement"/>
                <string name="clearStyle" object="[flashx.textLayout.elements.FlowElement]" text=".clearStyle(%styleProp:String%):void" tiptext="Clears the style specified by the styleProp parameter from this FlowElement object." version="1.5" playername="" helpurl="flashx.textLayout.elements:FlowElement:clearStyle"/>
                <string name="deepCopy" object="[flashx.textLayout.elements.FlowElement]" text=".deepCopy(%[relativeStart:int=0,relativeEnd:int=-1]%):flashx.textLayout.elements:FlowElement" tiptext="Makes a deep copy of this FlowElement object, including any children, copying the content between the two specified character positions and returning the copy as a FlowElement object." version="1.5" playername="" helpurl="flashx.textLayout.elements:FlowElement:deepCopy"/>
                <string name="equalUserStyles" object="[flashx.textLayout.elements.FlowElement]" text=".equalUserStyles(%otherElement:flashx.textLayout.elements:FlowElement%):Boolean" tiptext="Compare the userStyles of this with otherElement&apos;s userStyles." version="1.5" playername="" helpurl="flashx.textLayout.elements:FlowElement:equalUserStyles"/>
                <string name="getAbsoluteStart" object="[flashx.textLayout.elements.FlowElement]" text=".getAbsoluteStart(%%):int" tiptext="Returns the start location of the element in the text flow as an absolute index." version="1.5" playername="" helpurl="flashx.textLayout.elements:FlowElement:getAbsoluteStart"/>
                <string name="getCharAtPosition" object="[flashx.textLayout.elements.FlowElement]" text=".getCharAtPosition(%relativePosition:int%):String" tiptext="Returns the character at the specified position, relative to this FlowElement object." version="1.5" playername="" helpurl="flashx.textLayout.elements:FlowElement:getCharAtPosition"/>
                <string name="getCharCodeAtPosition" object="[flashx.textLayout.elements.FlowElement]" text=".getCharCodeAtPosition(%relativePosition:int%):int" tiptext="Returns the character code at the specified position, relative to this FlowElement." version="1.5" playername="" helpurl="flashx.textLayout.elements:FlowElement:getCharCodeAtPosition"/>
                <string name="getElementRelativeStart" object="[flashx.textLayout.elements.FlowElement]" text=".getElementRelativeStart(%ancestorElement:flashx.textLayout.elements:FlowElement%):int" tiptext="Returns the start of this element relative to an ancestor element." version="1.5" playername="" helpurl="flashx.textLayout.elements:FlowElement:getElementRelativeStart"/>
                <string name="getNextSibling" object="[flashx.textLayout.elements.FlowElement]" text=".getNextSibling(%%):flashx.textLayout.elements:FlowElement" tiptext="Returns the next FlowElement sibling in the text flow hierarchy." version="1.5" playername="" helpurl="flashx.textLayout.elements:FlowElement:getNextSibling"/>
                <string name="getParagraph" object="[flashx.textLayout.elements.FlowElement]" text=".getParagraph(%%):flashx.textLayout.elements:ParagraphElement" tiptext="Returns the ParagraphElement object associated with this element." version="1.5" playername="" helpurl="flashx.textLayout.elements:FlowElement:getParagraph"/>
                <string name="getPreviousSibling" object="[flashx.textLayout.elements.FlowElement]" text=".getPreviousSibling(%%):flashx.textLayout.elements:FlowElement" tiptext="Returns the previous FlowElement sibling in the text flow hierarchy." version="1.5" playername="" helpurl="flashx.textLayout.elements:FlowElement:getPreviousSibling"/>
                <string name="getStyle" object="[flashx.textLayout.elements.FlowElement]" text=".getStyle(%styleProp:String%)" tiptext="Returns the value of the style specified by the styleProp parameter, which specifies the style name and can include any user style name." version="1.5" playername="" helpurl="flashx.textLayout.elements:FlowElement:getStyle"/>
                <string name="getTextFlow" object="[flashx.textLayout.elements.FlowElement]" text=".getTextFlow(%%):flashx.textLayout.elements:TextFlow" tiptext="Climbs the text flow hierarchy to return the root TextFlow object for the element." version="1.5" playername="" helpurl="flashx.textLayout.elements:FlowElement:getTextFlow"/>
                <string name="getText" object="[flashx.textLayout.elements.FlowElement]" text=".getText(%[relativeStart:int=0,relativeEnd:int=-1,paragraphSeparator:String=]%):String" tiptext="Gets the specified range of text from a flow element." version="1.5" playername="" helpurl="flashx.textLayout.elements:FlowElement:getText"/>
                <string name="initialized" object="[flashx.textLayout.elements.FlowElement]" text=".initialized(%document:Object,id:String%):void" tiptext="Called for MXML objects after the implementing object has been created and all component properties specified on the MXML tag have been initialized." version="" playername="" helpurl="flashx.textLayout.elements:FlowElement:initialized"/>
                <string name="setStyle" object="[flashx.textLayout.elements.FlowElement]" text=".setStyle(%styleProp:String,newValue:*%):void" tiptext="Sets the style specified by the styleProp parameter to the value specified by thenewValue parameter." version="1.5" playername="" helpurl="flashx.textLayout.elements:FlowElement:setStyle"/>
                <string name="shallowCopy" object="[flashx.textLayout.elements.FlowElement]" text=".shallowCopy(%[relativeStart:int=0,relativeEnd:int=-1]%):flashx.textLayout.elements:FlowElement" tiptext="Makes a copy of this FlowElement object, copying the content between two specified character positions." version="1.5" playername="" helpurl="flashx.textLayout.elements:FlowElement:shallowCopy"/>
                <string name="splitAtPosition" object="[flashx.textLayout.elements.FlowElement]" text=".splitAtPosition(%relativePosition:int%):flashx.textLayout.elements:FlowElement" tiptext="Splits this FlowElement object at the position specified by the relativePosition parameter, which is a relative position in the text for this element." version="1.5" playername="" helpurl="flashx.textLayout.elements:FlowElement:splitAtPosition"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class FlowElement" helpurl="flashx.textLayout.elements:FlowElement">
                <string name="alignmentBaseline" object="[flashx.textLayout.elements.FlowElement]" text=".alignmentBaseline" tiptext="TextLayoutFormat: Specifies the baseline to which the dominant baseline aligns." version="" playername="" helpurl="flashx.textLayout.elements:FlowElement:alignmentBaseline:get"/>
                <string name="backgroundAlpha" object="[flashx.textLayout.elements.FlowElement]" text=".backgroundAlpha" tiptext="TextLayoutFormat: Alpha (transparency) value for the background (adopts default value if undefined during cascade)." version="" playername="" helpurl="flashx.textLayout.elements:FlowElement:backgroundAlpha:get"/>
                <string name="backgroundColor" object="[flashx.textLayout.elements.FlowElement]" text=".backgroundColor" tiptext="TextLayoutFormat: Background color of the text (adopts default value if undefined during cascade)." version="" playername="" helpurl="flashx.textLayout.elements:FlowElement:backgroundColor:get"/>
                <string name="baselineShift" object="[flashx.textLayout.elements.FlowElement]" text=".baselineShift" tiptext="TextLayoutFormat: Amount to shift the baseline from the dominantBaseline value." version="" playername="" helpurl="flashx.textLayout.elements:FlowElement:baselineShift:get"/>
                <string name="blockProgression" object="[flashx.textLayout.elements.FlowElement]" text=".blockProgression" tiptext="TextLayoutFormat: Specifies a vertical or horizontal progression of line placement." version="" playername="" helpurl="flashx.textLayout.elements:FlowElement:blockProgression:get"/>
                <string name="breakOpportunity" object="[flashx.textLayout.elements.FlowElement]" text=".breakOpportunity" tiptext="TextLayoutFormat: Controls where lines are allowed to break when breaking wrapping text into multiple lines." version="" playername="" helpurl="flashx.textLayout.elements:FlowElement:breakOpportunity:get"/>
                <string name="cffHinting" object="[flashx.textLayout.elements.FlowElement]" text=".cffHinting" tiptext="TextLayoutFormat: The type of CFF hinting used for this text." version="" playername="" helpurl="flashx.textLayout.elements:FlowElement:cffHinting:get"/>
                <string name="color" object="[flashx.textLayout.elements.FlowElement]" text=".color" tiptext="TextLayoutFormat: Color of the text." version="" playername="" helpurl="flashx.textLayout.elements:FlowElement:color:get"/>
                <string name="columnCount" object="[flashx.textLayout.elements.FlowElement]" text=".columnCount" tiptext="TextLayoutFormat: Number of text columns (adopts default value if undefined during cascade)." version="" playername="" helpurl="flashx.textLayout.elements:FlowElement:columnCount:get"/>
                <string name="columnGap" object="[flashx.textLayout.elements.FlowElement]" text=".columnGap" tiptext="TextLayoutFormat: Specifies the amount of gutter space, in pixels, to leave between the columns (adopts default value if undefined during cascade)." version="" playername="" helpurl="flashx.textLayout.elements:FlowElement:columnGap:get"/>
                <string name="columnWidth" object="[flashx.textLayout.elements.FlowElement]" text=".columnWidth" tiptext="TextLayoutFormat: Column width in pixels (adopts default value if undefined during cascade)." version="" playername="" helpurl="flashx.textLayout.elements:FlowElement:columnWidth:get"/>
                <string name="computedFormat" object="[flashx.textLayout.elements.FlowElement]" text=".computedFormat" tiptext="Returns the computed format attributes that are in effect for this element." version="" playername="" helpurl="flashx.textLayout.elements:FlowElement:computedFormat:get"/>
                <string name="coreStyles" object="[flashx.textLayout.elements.FlowElement]" text=".coreStyles" tiptext="Returns the core styles on a FlowElement instance." version="" playername="" helpurl="flashx.textLayout.elements:FlowElement:coreStyles:get"/>
                <string name="digitCase" object="[flashx.textLayout.elements.FlowElement]" text=".digitCase" tiptext="TextLayoutFormat: The type of digit case used for this text." version="" playername="" helpurl="flashx.textLayout.elements:FlowElement:digitCase:get"/>
                <string name="digitWidth" object="[flashx.textLayout.elements.FlowElement]" text=".digitWidth" tiptext="TextLayoutFormat: Type of digit width used for this text." version="" playername="" helpurl="flashx.textLayout.elements:FlowElement:digitWidth:get"/>
                <string name="direction" object="[flashx.textLayout.elements.FlowElement]" text=".direction" tiptext="TextLayoutFormat: Specifies the default bidirectional embedding level of the text in the text block." version="" playername="" helpurl="flashx.textLayout.elements:FlowElement:direction:get"/>
                <string name="dominantBaseline" object="[flashx.textLayout.elements.FlowElement]" text=".dominantBaseline" tiptext="TextLayoutFormat: Specifies which element baseline snaps to the alignmentBaseline to determine the vertical position of the element on the line." version="" playername="" helpurl="flashx.textLayout.elements:FlowElement:dominantBaseline:get"/>
                <string name="firstBaselineOffset" object="[flashx.textLayout.elements.FlowElement]" text=".firstBaselineOffset" tiptext="TextLayoutFormat: Specifies the baseline position of the first line in the container." version="" playername="" helpurl="flashx.textLayout.elements:FlowElement:firstBaselineOffset:get"/>
                <string name="fontFamily" object="[flashx.textLayout.elements.FlowElement]" text=".fontFamily" tiptext="TextLayoutFormat: The name of the font to use, or a comma-separated list of font names." version="" playername="" helpurl="flashx.textLayout.elements:FlowElement:fontFamily:get"/>
                <string name="fontLookup" object="[flashx.textLayout.elements.FlowElement]" text=".fontLookup" tiptext="TextLayoutFormat: Font lookup to use." version="" playername="" helpurl="flashx.textLayout.elements:FlowElement:fontLookup:get"/>
                <string name="fontSize" object="[flashx.textLayout.elements.FlowElement]" text=".fontSize" tiptext="TextLayoutFormat: The size of the text in pixels." version="" playername="" helpurl="flashx.textLayout.elements:FlowElement:fontSize:get"/>
                <string name="fontStyle" object="[flashx.textLayout.elements.FlowElement]" text=".fontStyle" tiptext="TextLayoutFormat: Style of text." version="" playername="" helpurl="flashx.textLayout.elements:FlowElement:fontStyle:get"/>
                <string name="fontWeight" object="[flashx.textLayout.elements.FlowElement]" text=".fontWeight" tiptext="TextLayoutFormat: Weight of text." version="" playername="" helpurl="flashx.textLayout.elements:FlowElement:fontWeight:get"/>
                <string name="format" object="[flashx.textLayout.elements.FlowElement]" text=".format" tiptext="TextLayoutFormat properties applied directly to this element." version="" playername="" helpurl="flashx.textLayout.elements:FlowElement:format:get"/>
                <string name="id" object="[flashx.textLayout.elements.FlowElement]" text=".id" tiptext="Assigns an identifying name to the element, making it possible to set a style for the element by referencing the id." version="" playername="" helpurl="flashx.textLayout.elements:FlowElement:id:get"/>
                <string name="justificationRule" object="[flashx.textLayout.elements.FlowElement]" text=".justificationRule" tiptext="TextLayoutFormat: Rule used to justify text in a paragraph." version="" playername="" helpurl="flashx.textLayout.elements:FlowElement:justificationRule:get"/>
                <string name="justificationStyle" object="[flashx.textLayout.elements.FlowElement]" text=".justificationStyle" tiptext="TextLayoutFormat: The style used for justification of the paragraph." version="" playername="" helpurl="flashx.textLayout.elements:FlowElement:justificationStyle:get"/>
                <string name="kerning" object="[flashx.textLayout.elements.FlowElement]" text=".kerning" tiptext="TextLayoutFormat: Kerning adjusts the pixels between certain character pairs to improve readability." version="" playername="" helpurl="flashx.textLayout.elements:FlowElement:kerning:get"/>
                <string name="leadingModel" object="[flashx.textLayout.elements.FlowElement]" text=".leadingModel" tiptext="TextLayoutFormat: Specifies the leading model, which is a combination of leading basis and leading direction." version="" playername="" helpurl="flashx.textLayout.elements:FlowElement:leadingModel:get"/>
                <string name="ligatureLevel" object="[flashx.textLayout.elements.FlowElement]" text=".ligatureLevel" tiptext="TextLayoutFormat: Controls which of the ligatures that are defined in the font may be used in the text." version="" playername="" helpurl="flashx.textLayout.elements:FlowElement:ligatureLevel:get"/>
                <string name="lineBreak" object="[flashx.textLayout.elements.FlowElement]" text=".lineBreak" tiptext="TextLayoutFormat: Controls word wrapping within the container (adopts default value if undefined during cascade)." version="" playername="" helpurl="flashx.textLayout.elements:FlowElement:lineBreak:get"/>
                <string name="lineHeight" object="[flashx.textLayout.elements.FlowElement]" text=".lineHeight" tiptext="TextLayoutFormat: Leading controls for the text." version="" playername="" helpurl="flashx.textLayout.elements:FlowElement:lineHeight:get"/>
                <string name="lineThrough" object="[flashx.textLayout.elements.FlowElement]" text=".lineThrough" tiptext="TextLayoutFormat: If true, applies strikethrough, a line drawn through the middle of the text." version="" playername="" helpurl="flashx.textLayout.elements:FlowElement:lineThrough:get"/>
                <string name="linkActiveFormat" object="[flashx.textLayout.elements.FlowElement]" text=".linkActiveFormat" tiptext="Defines the formatting attributes used for links in active state, when the mouse is down on a link." version="" playername="" helpurl="flashx.textLayout.elements:FlowElement:linkActiveFormat:get"/>
                <string name="linkHoverFormat" object="[flashx.textLayout.elements.FlowElement]" text=".linkHoverFormat" tiptext="Defines the formatting attributes used for links in hover state, when the mouse is within the bounds (rolling over) a link." version="" playername="" helpurl="flashx.textLayout.elements:FlowElement:linkHoverFormat:get"/>
                <string name="linkNormalFormat" object="[flashx.textLayout.elements.FlowElement]" text=".linkNormalFormat" tiptext="Defines the formatting attributes used for links in normal state." version="" playername="" helpurl="flashx.textLayout.elements:FlowElement:linkNormalFormat:get"/>
                <string name="locale" object="[flashx.textLayout.elements.FlowElement]" text=".locale" tiptext="TextLayoutFormat: The locale of the text." version="" playername="" helpurl="flashx.textLayout.elements:FlowElement:locale:get"/>
                <string name="paddingBottom" object="[flashx.textLayout.elements.FlowElement]" text=".paddingBottom" tiptext="TextLayoutFormat: Botttom inset in pixels (adopts default value if undefined during cascade)." version="" playername="" helpurl="flashx.textLayout.elements:FlowElement:paddingBottom:get"/>
                <string name="paddingLeft" object="[flashx.textLayout.elements.FlowElement]" text=".paddingLeft" tiptext="TextLayoutFormat: Left inset in pixels (adopts default value if undefined during cascade)." version="" playername="" helpurl="flashx.textLayout.elements:FlowElement:paddingLeft:get"/>
                <string name="paddingRight" object="[flashx.textLayout.elements.FlowElement]" text=".paddingRight" tiptext="TextLayoutFormat: Right inset in pixels (adopts default value if undefined during cascade)." version="" playername="" helpurl="flashx.textLayout.elements:FlowElement:paddingRight:get"/>
                <string name="paddingTop" object="[flashx.textLayout.elements.FlowElement]" text=".paddingTop" tiptext="TextLayoutFormat: Top inset in pixels (adopts default value if undefined during cascade)." version="" playername="" helpurl="flashx.textLayout.elements:FlowElement:paddingTop:get"/>
                <string name="paragraphEndIndent" object="[flashx.textLayout.elements.FlowElement]" text=".paragraphEndIndent" tiptext="TextLayoutFormat: A Number that specifies, in pixels, the amount to indent the paragraph&apos;s end edge." version="" playername="" helpurl="flashx.textLayout.elements:FlowElement:paragraphEndIndent:get"/>
                <string name="paragraphSpaceAfter" object="[flashx.textLayout.elements.FlowElement]" text=".paragraphSpaceAfter" tiptext="TextLayoutFormat: A Number that specifies the amount of space, in pixels, to leave after the paragraph." version="" playername="" helpurl="flashx.textLayout.elements:FlowElement:paragraphSpaceAfter:get"/>
                <string name="paragraphSpaceBefore" object="[flashx.textLayout.elements.FlowElement]" text=".paragraphSpaceBefore" tiptext="TextLayoutFormat: A Number that specifies the amount of space, in pixels, to leave before the paragraph." version="" playername="" helpurl="flashx.textLayout.elements:FlowElement:paragraphSpaceBefore:get"/>
                <string name="paragraphStartIndent" object="[flashx.textLayout.elements.FlowElement]" text=".paragraphStartIndent" tiptext="TextLayoutFormat: A Number that specifies, in pixels, the amount to indent the paragraph&apos;s start edge." version="" playername="" helpurl="flashx.textLayout.elements:FlowElement:paragraphStartIndent:get"/>
                <string name="parentRelativeEnd" object="[flashx.textLayout.elements.FlowElement]" text=".parentRelativeEnd" tiptext="Returns the relative end of this FlowElement object in the parent." version="" playername="" helpurl="flashx.textLayout.elements:FlowElement:parentRelativeEnd:get"/>
                <string name="parentRelativeStart" object="[flashx.textLayout.elements.FlowElement]" text=".parentRelativeStart" tiptext="Returns the relative start of this FlowElement object in the parent." version="" playername="" helpurl="flashx.textLayout.elements:FlowElement:parentRelativeStart:get"/>
                <string name="parent" object="[flashx.textLayout.elements.FlowElement]" text=".parent" tiptext="Returns the parent of this FlowElement object." version="" playername="" helpurl="flashx.textLayout.elements:FlowElement:parent:get"/>
                <string name="renderingMode" object="[flashx.textLayout.elements.FlowElement]" text=".renderingMode" tiptext="TextLayoutFormat: The rendering mode used for this text." version="" playername="" helpurl="flashx.textLayout.elements:FlowElement:renderingMode:get"/>
                <string name="styleName" object="[flashx.textLayout.elements.FlowElement]" text=".styleName" tiptext="Assigns an identifying class to the element, making it possible to set a style for the element by referencing the styleName." version="" playername="" helpurl="flashx.textLayout.elements:FlowElement:styleName:get"/>
                <string name="tabStops" object="[flashx.textLayout.elements.FlowElement]" text=".tabStops" tiptext="TextLayoutFormat: Specifies the tab stops associated with the paragraph." version="" playername="" helpurl="flashx.textLayout.elements:FlowElement:tabStops:get"/>
                <string name="textAlignLast" object="[flashx.textLayout.elements.FlowElement]" text=".textAlignLast" tiptext="TextLayoutFormat: Alignment of the last (or only) line in the paragraph relative to the container in justified text." version="" playername="" helpurl="flashx.textLayout.elements:FlowElement:textAlignLast:get"/>
                <string name="textAlign" object="[flashx.textLayout.elements.FlowElement]" text=".textAlign" tiptext="TextLayoutFormat: Alignment of lines in the paragraph relative to the container." version="" playername="" helpurl="flashx.textLayout.elements:FlowElement:textAlign:get"/>
                <string name="textAlpha" object="[flashx.textLayout.elements.FlowElement]" text=".textAlpha" tiptext="TextLayoutFormat: Alpha (transparency) value for the text." version="" playername="" helpurl="flashx.textLayout.elements:FlowElement:textAlpha:get"/>
                <string name="textDecoration" object="[flashx.textLayout.elements.FlowElement]" text=".textDecoration" tiptext="TextLayoutFormat: Decoration on text." version="" playername="" helpurl="flashx.textLayout.elements:FlowElement:textDecoration:get"/>
                <string name="textIndent" object="[flashx.textLayout.elements.FlowElement]" text=".textIndent" tiptext="TextLayoutFormat: A Number that specifies, in pixels, the amount to indent the first line of the paragraph." version="" playername="" helpurl="flashx.textLayout.elements:FlowElement:textIndent:get"/>
                <string name="textJustify" object="[flashx.textLayout.elements.FlowElement]" text=".textJustify" tiptext="TextLayoutFormat: Specifies options for justifying text." version="" playername="" helpurl="flashx.textLayout.elements:FlowElement:textJustify:get"/>
                <string name="textLength" object="[flashx.textLayout.elements.FlowElement]" text=".textLength" tiptext="Returns the total length of text owned by this FlowElement object and its children." version="" playername="" helpurl="flashx.textLayout.elements:FlowElement:textLength:get"/>
                <string name="textRotation" object="[flashx.textLayout.elements.FlowElement]" text=".textRotation" tiptext="TextLayoutFormat: Determines the number of degrees to rotate this text." version="" playername="" helpurl="flashx.textLayout.elements:FlowElement:textRotation:get"/>
                <string name="trackingLeft" object="[flashx.textLayout.elements.FlowElement]" text=".trackingLeft" tiptext="TextLayoutFormat: Number in pixels (or percent of fontSize, like 120%) indicating the amount of tracking (manual kerning) to be applied to the left of each character." version="" playername="" helpurl="flashx.textLayout.elements:FlowElement:trackingLeft:get"/>
                <string name="trackingRight" object="[flashx.textLayout.elements.FlowElement]" text=".trackingRight" tiptext="TextLayoutFormat: Number in pixels (or percent of fontSize, like 120%) indicating the amount of tracking (manual kerning) to be applied to the right of each character." version="" playername="" helpurl="flashx.textLayout.elements:FlowElement:trackingRight:get"/>
                <string name="typographicCase" object="[flashx.textLayout.elements.FlowElement]" text=".typographicCase" tiptext="TextLayoutFormat: The type of typographic case used for this text." version="" playername="" helpurl="flashx.textLayout.elements:FlowElement:typographicCase:get"/>
                <string name="userStyles" object="[flashx.textLayout.elements.FlowElement]" text=".userStyles" tiptext="Allows you to read and write user styles on a FlowElement object." version="" playername="" helpurl="flashx.textLayout.elements:FlowElement:userStyles:get"/>
                <string name="verticalAlign" object="[flashx.textLayout.elements.FlowElement]" text=".verticalAlign" tiptext="TextLayoutFormat: Vertical alignment or justification (adopts default value if undefined during cascade)." version="" playername="" helpurl="flashx.textLayout.elements:FlowElement:verticalAlign:get"/>
                <string name="whiteSpaceCollapse" object="[flashx.textLayout.elements.FlowElement]" text=".whiteSpaceCollapse" tiptext="TextLayoutFormat: Collapses or preserves whitespace when importing text into a TextFlow." version="" playername="" helpurl="flashx.textLayout.elements:FlowElement:whiteSpaceCollapse:get"/>
                <string name="tracking" object="[flashx.textLayout.elements.FlowElement]" text=".tracking" tiptext="Sets the tracking and is synonymous with the trackingRight property." version="" playername="" helpurl="flashx.textLayout.elements:FlowElement:tracking:set"/>
            </folder>
        </folder>
        <folder name="FlowGroupElement" id="[flashx.textLayout.elements.FlowGroupElement]" sort="true" index="true" asAncestors="flashx.textLayout.elements:FlowElement,Object" tiptext="The FlowGroupElement class is the base class for FlowElement objects that can have an array of children." helpurl="flashx.textLayout.elements:FlowGroupElement">
            <folder name="Methods" id="Methods" tiptext="Methods for class FlowGroupElement" helpurl="flashx.textLayout.elements:FlowGroupElement">
                <string name="FlowGroupElement" object="[flashx.textLayout.elements.FlowGroupElement]" text="new FlowGroupElement(%%)" constructor="true" tiptext="Base class - invoking new FlowGroupElement() throws an error exception." version="1.5" playername="" helpurl="flashx.textLayout.elements:FlowGroupElement:FlowGroupElement"/>
                <string name="addChildAt" object="[flashx.textLayout.elements.FlowGroupElement]" text=".addChildAt(%index:uint,child:flashx.textLayout.elements:FlowElement%):flashx.textLayout.elements:FlowElement" tiptext="Adds a child FlowElement object at the specified index position." version="1.5" playername="" helpurl="flashx.textLayout.elements:FlowGroupElement:addChildAt"/>
                <string name="addChild" object="[flashx.textLayout.elements.FlowGroupElement]" text=".addChild(%child:flashx.textLayout.elements:FlowElement%):flashx.textLayout.elements:FlowElement" tiptext="Appends a child FlowElement object." version="1.5" playername="" helpurl="flashx.textLayout.elements:FlowGroupElement:addChild"/>
                <string name="findChildIndexAtPosition" object="[flashx.textLayout.elements.FlowGroupElement]" text=".findChildIndexAtPosition(%relativePosition:int%):int" tiptext="Given a relative text position, find the index of the first child FlowElement that contains the relative position." version="1.5" playername="" helpurl="flashx.textLayout.elements:FlowGroupElement:findChildIndexAtPosition"/>
                <string name="findLeaf" object="[flashx.textLayout.elements.FlowGroupElement]" text=".findLeaf(%relativePosition:int%):flashx.textLayout.elements:FlowLeafElement" tiptext="Given a relative text position, find the leaf element that contains the position." version="1.5" playername="" helpurl="flashx.textLayout.elements:FlowGroupElement:findLeaf"/>
                <string name="getChildAt" object="[flashx.textLayout.elements.FlowGroupElement]" text=".getChildAt(%index:int%):flashx.textLayout.elements:FlowElement" tiptext="Returns the FlowElement child at the specified index." version="1.5" playername="" helpurl="flashx.textLayout.elements:FlowGroupElement:getChildAt"/>
                <string name="getChildIndex" object="[flashx.textLayout.elements.FlowGroupElement]" text=".getChildIndex(%child:flashx.textLayout.elements:FlowElement%):int" tiptext="Searches in children for the specified FlowElement object and returns its index position." version="1.5" playername="" helpurl="flashx.textLayout.elements:FlowGroupElement:getChildIndex"/>
                <string name="getFirstLeaf" object="[flashx.textLayout.elements.FlowGroupElement]" text=".getFirstLeaf(%%):flashx.textLayout.elements:FlowLeafElement" tiptext="Returns the first FlowLeafElement descendant of this group." version="1.5" playername="" helpurl="flashx.textLayout.elements:FlowGroupElement:getFirstLeaf"/>
                <string name="getLastLeaf" object="[flashx.textLayout.elements.FlowGroupElement]" text=".getLastLeaf(%%):flashx.textLayout.elements:FlowLeafElement" tiptext="Returns the last FlowLeafElement descendent of this group." version="1.5" playername="" helpurl="flashx.textLayout.elements:FlowGroupElement:getLastLeaf"/>
                <string name="getText" object="[flashx.textLayout.elements.FlowGroupElement]" text=".getText(%[relativeStart:int=0,relativeEnd:int=-1,paragraphSeparator:String=]%):String" tiptext="" version="" playername="" helpurl="flashx.textLayout.elements:FlowGroupElement:getText"/>
                <string name="removeChildAt" object="[flashx.textLayout.elements.FlowGroupElement]" text=".removeChildAt(%index:uint%):flashx.textLayout.elements:FlowElement" tiptext="Removes the child FlowElement object at the specified index position." version="1.5" playername="" helpurl="flashx.textLayout.elements:FlowGroupElement:removeChildAt"/>
                <string name="removeChild" object="[flashx.textLayout.elements.FlowGroupElement]" text=".removeChild(%child:flashx.textLayout.elements:FlowElement%):flashx.textLayout.elements:FlowElement" tiptext="Removes the specified child FlowElement object from the group." version="1.5" playername="" helpurl="flashx.textLayout.elements:FlowGroupElement:removeChild"/>
                <string name="replaceChildren" object="[flashx.textLayout.elements.FlowGroupElement]" text=".replaceChildren(%beginChildIndex:int,endChildIndex:int,rest:restParam%):void" tiptext="Replaces child elements in the group with the specified new elements." version="1.5" playername="" helpurl="flashx.textLayout.elements:FlowGroupElement:replaceChildren"/>
                <string name="splitAtIndex" object="[flashx.textLayout.elements.FlowGroupElement]" text=".splitAtIndex(%childIndex:int%):flashx.textLayout.elements:FlowGroupElement" tiptext="Splits this object at the position specified by the childIndex parameter." version="1.5" playername="" helpurl="flashx.textLayout.elements:FlowGroupElement:splitAtIndex"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class FlowGroupElement" helpurl="flashx.textLayout.elements:FlowGroupElement">
                <string name="mxmlChildren" object="[flashx.textLayout.elements.FlowGroupElement]" text=".mxmlChildren" tiptext="Appends an array of children to this object." version="" playername="" helpurl="flashx.textLayout.elements:FlowGroupElement:mxmlChildren:get"/>
                <string name="numChildren" object="[flashx.textLayout.elements.FlowGroupElement]" text=".numChildren" tiptext="Returns the number of FlowElement children that this FlowGroupElement object has." version="" playername="" helpurl="flashx.textLayout.elements:FlowGroupElement:numChildren:get"/>
            </folder>
        </folder>
        <folder name="FlowLeafElement" id="[flashx.textLayout.elements.FlowLeafElement]" sort="true" index="true" asAncestors="flashx.textLayout.elements:FlowElement,Object" tiptext="Base class for FlowElements that appear at the lowest level of the flow hierarchy." helpurl="flashx.textLayout.elements:FlowLeafElement">
            <folder name="Methods" id="Methods" tiptext="Methods for class FlowLeafElement" helpurl="flashx.textLayout.elements:FlowLeafElement">
                <string name="FlowLeafElement" object="[flashx.textLayout.elements.FlowLeafElement]" text="new FlowLeafElement(%%)" constructor="true" tiptext="Base class - invoking new FlowLeafElement() throws an error exception." version="1.5" playername="" helpurl="flashx.textLayout.elements:FlowLeafElement:FlowLeafElement"/>
                <string name="getComputedFontMetrics" object="[flashx.textLayout.elements.FlowLeafElement]" text=".getComputedFontMetrics(%%):flash.text.engine:FontMetrics" tiptext="Returns the FontMetrics object for the span." version="1.5" playername="" helpurl="flashx.textLayout.elements:FlowLeafElement:getComputedFontMetrics"/>
                <string name="getNextLeaf" object="[flashx.textLayout.elements.FlowLeafElement]" text=".getNextLeaf(%[limitElement:flashx.textLayout.elements:FlowGroupElement=null]%):flashx.textLayout.elements:FlowLeafElement" tiptext="Returns the next FlowLeafElement object." version="1.5" playername="" helpurl="flashx.textLayout.elements:FlowLeafElement:getNextLeaf"/>
                <string name="getPreviousLeaf" object="[flashx.textLayout.elements.FlowLeafElement]" text=".getPreviousLeaf(%[limitElement:flashx.textLayout.elements:FlowGroupElement=null]%):flashx.textLayout.elements:FlowLeafElement" tiptext="Returns the previous FlowLeafElement object." version="1.5" playername="" helpurl="flashx.textLayout.elements:FlowLeafElement:getPreviousLeaf"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class FlowLeafElement" helpurl="flashx.textLayout.elements:FlowLeafElement">
                <string name="computedFormat" object="[flashx.textLayout.elements.FlowLeafElement]" text=".computedFormat" tiptext="The computed text format attributes that are in effect for this element." version="" playername="" helpurl="flashx.textLayout.elements:FlowLeafElement:computedFormat:get"/>
                <string name="text" object="[flashx.textLayout.elements.FlowLeafElement]" text=".text" tiptext="The text associated with the FlowLeafElement: &lt;ul&gt; The value for SpanElement subclass will be one character less than textLength if this is the last span in a ParagraphELement. The value for BreakElement subclass is a U+2028 The value for TabElement subclass is a tab The value for InlineGraphicElement subclass is U+FDEF &lt;/p&gt;" version="" playername="" helpurl="flashx.textLayout.elements:FlowLeafElement:text:get"/>
            </folder>
        </folder>
        <folder name="GlobalSettings" id="[flashx.textLayout.elements.GlobalSettings]" sort="true" index="true" asAncestors="Object" tiptext="Configuration that applies to all TextFlow objects." helpurl="flashx.textLayout.elements:GlobalSettings">
            <folder name="Properties" id="Properties" tiptext="Properties for class GlobalSettings" helpurl="flashx.textLayout.elements:GlobalSettings">
                <string name="enableSearch" object="[flashx.textLayout.elements.GlobalSettings]" text=".enableSearch" tiptext="Controls whether the text will be visible to a search engine indexer." version="" playername="" helpurl="flashx.textLayout.elements:GlobalSettings:enableSearch:get"/>
                <string name="fontMapperFunction" object="[flashx.textLayout.elements.GlobalSettings]" text=".fontMapperFunction" tiptext="Specifies the callback used for font mapping." version="" playername="" helpurl="flashx.textLayout.elements:GlobalSettings:fontMapperFunction:get"/>
                <string name="resolveFontLookupFunction" object="[flashx.textLayout.elements.GlobalSettings]" text=".resolveFontLookupFunction" tiptext="Specifies the callback used for changing the FontLookup based on swfcontext." version="" playername="" helpurl="flashx.textLayout.elements:GlobalSettings:resolveFontLookupFunction:get"/>
                <string name="resourceStringFunction" object="[flashx.textLayout.elements.GlobalSettings]" text=".resourceStringFunction" tiptext="Function that takes two parameters, a resource id and an optional array of parameters to substitute into the string." version="" playername="" helpurl="flashx.textLayout.elements:GlobalSettings:resourceStringFunction:get"/>
            </folder>
        </folder>
        <folder name="IConfiguration" id="[flashx.textLayout.elements.IConfiguration]" sort="true" index="true" tiptext="Read-only interface to a configuration object." helpurl="flashx.textLayout.elements:IConfiguration">
            <folder name="Properties" id="Properties" tiptext="Properties for class IConfiguration" helpurl="flashx.textLayout.elements:IConfiguration">
                <string name="defaultLinkActiveFormat" object="[flashx.textLayout.elements.IConfiguration]" text=".defaultLinkActiveFormat" tiptext="Specifies the active character format attributes that initially apply for all links (LinkElement objects) in the text flow." version="" playername="" helpurl="flashx.textLayout.elements:IConfiguration:defaultLinkActiveFormat:get"/>
                <string name="defaultLinkHoverFormat" object="[flashx.textLayout.elements.IConfiguration]" text=".defaultLinkHoverFormat" tiptext="Specifies the initial character format attributes that apply to a link (LinkElement) in the text flow whenthe cursor hovers over it." version="" playername="" helpurl="flashx.textLayout.elements:IConfiguration:defaultLinkHoverFormat:get"/>
                <string name="defaultLinkNormalFormat" object="[flashx.textLayout.elements.IConfiguration]" text=".defaultLinkNormalFormat" tiptext="Specifies the initial link attributes for all LinkElement objects in the text flow." version="" playername="" helpurl="flashx.textLayout.elements:IConfiguration:defaultLinkNormalFormat:get"/>
                <string name="enableAccessibility" object="[flashx.textLayout.elements.IConfiguration]" text=".enableAccessibility" tiptext="Specifies whether accessibility support is turned on or not." version="" playername="" helpurl="flashx.textLayout.elements:IConfiguration:enableAccessibility:get"/>
                <string name="flowComposerClass" object="[flashx.textLayout.elements.IConfiguration]" text=".flowComposerClass" tiptext="Specifies the type of flow composer to attach to a new TextFlow object by default." version="" playername="" helpurl="flashx.textLayout.elements:IConfiguration:flowComposerClass:get"/>
                <string name="focusedSelectionFormat" object="[flashx.textLayout.elements.IConfiguration]" text=".focusedSelectionFormat" tiptext="The initial selection format (SelectionFormat) for a text flow (TextFlow) when its window has focus." version="" playername="" helpurl="flashx.textLayout.elements:IConfiguration:focusedSelectionFormat:get"/>
                <string name="inactiveSelectionFormat" object="[flashx.textLayout.elements.IConfiguration]" text=".inactiveSelectionFormat" tiptext="The initial selection format (SelectionFormat) for a text flow (TextFlow) when its window is inactive." version="" playername="" helpurl="flashx.textLayout.elements:IConfiguration:inactiveSelectionFormat:get"/>
                <string name="inlineGraphicResolverFunction" object="[flashx.textLayout.elements.IConfiguration]" text=".inlineGraphicResolverFunction" tiptext="Specifies the callback used for resolving an inline graphic element." version="" playername="" helpurl="flashx.textLayout.elements:IConfiguration:inlineGraphicResolverFunction:get"/>
                <string name="manageEnterKey" object="[flashx.textLayout.elements.IConfiguration]" text=".manageEnterKey" tiptext="Specifies whether the Enter / Return key is entered as text by Text Layout Framework, to split a paragraph for example,or the client code handles it." version="" playername="" helpurl="flashx.textLayout.elements:IConfiguration:manageEnterKey:get"/>
                <string name="manageTabKey" object="[flashx.textLayout.elements.IConfiguration]" text=".manageTabKey" tiptext="Specifies whether the TAB key is entered as text by Text Layout Framework, or Flash Player or AIR handles it and turns it into a tabbed panel event." version="" playername="" helpurl="flashx.textLayout.elements:IConfiguration:manageTabKey:get"/>
                <string name="overflowPolicy" object="[flashx.textLayout.elements.IConfiguration]" text=".overflowPolicy" tiptext="Policy used for deciding whether the last line of a container fits in the container, or whether it overflows." version="" playername="" helpurl="flashx.textLayout.elements:IConfiguration:overflowPolicy:get"/>
                <string name="releaseLineCreationData" object="[flashx.textLayout.elements.IConfiguration]" text=".releaseLineCreationData" tiptext="Requests that the process of composing text release line creation data after composing each paragraph." version="" playername="" helpurl="flashx.textLayout.elements:IConfiguration:releaseLineCreationData:get"/>
                <string name="scrollDragDelay" object="[flashx.textLayout.elements.IConfiguration]" text=".scrollDragDelay" tiptext="Specifies a timed delay between one scroll and the next to prevent scrolling from going too fast." version="" playername="" helpurl="flashx.textLayout.elements:IConfiguration:scrollDragDelay:get"/>
                <string name="scrollDragPixels" object="[flashx.textLayout.elements.IConfiguration]" text=".scrollDragPixels" tiptext="Specifies the default number of pixels to scroll when the user initiates auto scrolling by dragging the selection." version="" playername="" helpurl="flashx.textLayout.elements:IConfiguration:scrollDragPixels:get"/>
                <string name="scrollMouseWheelMultiplier" object="[flashx.textLayout.elements.IConfiguration]" text=".scrollMouseWheelMultiplier" tiptext="Specifies the default number of pixels to scroll for Mouse wheel events." version="" playername="" helpurl="flashx.textLayout.elements:IConfiguration:scrollMouseWheelMultiplier:get"/>
                <string name="scrollPagePercentage" object="[flashx.textLayout.elements.IConfiguration]" text=".scrollPagePercentage" tiptext="Specifies the default percentage of the text flow to scroll for page scrolls." version="" playername="" helpurl="flashx.textLayout.elements:IConfiguration:scrollPagePercentage:get"/>
                <string name="textFlowInitialFormat" object="[flashx.textLayout.elements.IConfiguration]" text=".textFlowInitialFormat" tiptext="Specifies the initial format TextLayoutFormat configuration for a text flow (TextFlow object)." version="" playername="" helpurl="flashx.textLayout.elements:IConfiguration:textFlowInitialFormat:get"/>
                <string name="unfocusedSelectionFormat" object="[flashx.textLayout.elements.IConfiguration]" text=".unfocusedSelectionFormat" tiptext="The initial selection format that Text Layout Framework uses to draw the selection when the window is active but none of the containersin the TextFlow have focus." version="" playername="" helpurl="flashx.textLayout.elements:IConfiguration:unfocusedSelectionFormat:get"/>
            </folder>
        </folder>
        <folder name="IFormatResolver" id="[flashx.textLayout.elements.IFormatResolver]" sort="true" index="true" tiptext="Interface to a format resolver." helpurl="flashx.textLayout.elements:IFormatResolver">
            <folder name="Methods" id="Methods" tiptext="Methods for class IFormatResolver" helpurl="flashx.textLayout.elements:IFormatResolver">
                <string name="getResolverForNewFlow" object="[flashx.textLayout.elements.IFormatResolver]" text=".getResolverForNewFlow(%oldFlow:flashx.textLayout.elements:TextFlow,newFlow:flashx.textLayout.elements:TextFlow%):flashx.textLayout.elements:IFormatResolver" tiptext="Returns the format resolver when a TextFlow is copied." version="1.5" playername="" helpurl="flashx.textLayout.elements:IFormatResolver:getResolverForNewFlow"/>
                <string name="invalidateAll" object="[flashx.textLayout.elements.IFormatResolver]" text=".invalidateAll(%textFlow:flashx.textLayout.elements:TextFlow%):void" tiptext="Invalidates any cached formatting information for a TextFlow so that formatting must be recomputed." version="1.5" playername="" helpurl="flashx.textLayout.elements:IFormatResolver:invalidateAll"/>
                <string name="invalidate" object="[flashx.textLayout.elements.IFormatResolver]" text=".invalidate(%target:Object%):void" tiptext="Invalidates cached formatting information on this element because, for example, the parent changed, or the id or the styleName changed." version="1.5" playername="" helpurl="flashx.textLayout.elements:IFormatResolver:invalidate"/>
                <string name="resolveFormat" object="[flashx.textLayout.elements.IFormatResolver]" text=".resolveFormat(%target:Object%):flashx.textLayout.formats:ITextLayoutFormat" tiptext="Given a FlowElement or ContainerController object, return any format settings for it." version="1.5" playername="" helpurl="flashx.textLayout.elements:IFormatResolver:resolveFormat"/>
                <string name="resolveUserFormat" object="[flashx.textLayout.elements.IFormatResolver]" text=".resolveUserFormat(%target:Object,userFormat:String%)" tiptext="Given a FlowElement or ContainerController object and the name of a format property, return the format value or undefined if the value is not found." version="1.5" playername="" helpurl="flashx.textLayout.elements:IFormatResolver:resolveUserFormat"/>
            </folder>
        </folder>
        <folder name="InlineGraphicElement" id="[flashx.textLayout.elements.InlineGraphicElement]" sort="true" index="true" asAncestors="flashx.textLayout.elements:FlowLeafElement,flashx.textLayout.elements:FlowElement,Object" tiptext="The InlineGraphicElement class handles graphic objects that display inline in the text." helpurl="flashx.textLayout.elements:InlineGraphicElement">
            <folder name="Methods" id="Methods" tiptext="Methods for class InlineGraphicElement" helpurl="flashx.textLayout.elements:InlineGraphicElement">
                <string name="InlineGraphicElement" object="[flashx.textLayout.elements.InlineGraphicElement]" text="new InlineGraphicElement(%%):void" constructor="true" tiptext="Constructor - create new InlineGraphicElement object" version="1.5" playername="" helpurl="flashx.textLayout.elements:InlineGraphicElement:InlineGraphicElement"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class InlineGraphicElement" helpurl="flashx.textLayout.elements:InlineGraphicElement">
                <string name="actualHeight" object="[flashx.textLayout.elements.InlineGraphicElement]" text=".actualHeight" tiptext="The actual height in effect." version="" playername="" helpurl="flashx.textLayout.elements:InlineGraphicElement:actualHeight:get"/>
                <string name="actualWidth" object="[flashx.textLayout.elements.InlineGraphicElement]" text=".actualWidth" tiptext="The actual width in effect." version="" playername="" helpurl="flashx.textLayout.elements:InlineGraphicElement:actualWidth:get"/>
                <string name="graphic" object="[flashx.textLayout.elements.InlineGraphicElement]" text=".graphic" tiptext="The embedded graphic." version="" playername="" helpurl="flashx.textLayout.elements:InlineGraphicElement:graphic:get"/>
                <string name="height" object="[flashx.textLayout.elements.InlineGraphicElement]" text=".height" tiptext="The height of the image." version="" playername="" helpurl="flashx.textLayout.elements:InlineGraphicElement:height:get"/>
                <string name="measuredHeight" object="[flashx.textLayout.elements.InlineGraphicElement]" text=".measuredHeight" tiptext="The natural height of the graphic." version="" playername="" helpurl="flashx.textLayout.elements:InlineGraphicElement:measuredHeight:get"/>
                <string name="measuredWidth" object="[flashx.textLayout.elements.InlineGraphicElement]" text=".measuredWidth" tiptext="The natural width of the graphic." version="" playername="" helpurl="flashx.textLayout.elements:InlineGraphicElement:measuredWidth:get"/>
                <string name="source" object="[flashx.textLayout.elements.InlineGraphicElement]" text=".source" tiptext="Sets the source for the graphic." version="" playername="" helpurl="flashx.textLayout.elements:InlineGraphicElement:source:get"/>
                <string name="status" object="[flashx.textLayout.elements.InlineGraphicElement]" text=".status" tiptext="The current status of the image." version="" playername="" helpurl="flashx.textLayout.elements:InlineGraphicElement:status:get"/>
                <string name="width" object="[flashx.textLayout.elements.InlineGraphicElement]" text=".width" tiptext="The width of the graphic." version="" playername="" helpurl="flashx.textLayout.elements:InlineGraphicElement:width:get"/>
            </folder>
        </folder>
        <folder name="InlineGraphicElementStatus" id="[flashx.textLayout.elements.InlineGraphicElementStatus]" sort="true" index="true" asAncestors="Object" tiptext="The InlineGraphicElementStatus class defines a set of constants for checking the value of InlineGraphicElement.status." helpurl="flashx.textLayout.elements:InlineGraphicElementStatus">
            <folder name="Properties" id="Properties" tiptext="Properties for class InlineGraphicElementStatus" helpurl="flashx.textLayout.elements:InlineGraphicElementStatus">
                <string name="ERROR" object="[flashx.textLayout.elements.InlineGraphicElementStatus]" text="InlineGraphicElementStatus.ERROR" constant="true" tiptext="An error occurred during loading of a referenced graphic." version="" playername="" helpurl="flashx.textLayout.elements:InlineGraphicElementStatus:ERROR"/>
                <string name="LOADING" object="[flashx.textLayout.elements.InlineGraphicElementStatus]" text="InlineGraphicElementStatus.LOADING" constant="true" tiptext="Load has been initiated (but not completed) on a graphic element that is a URL." version="" playername="" helpurl="flashx.textLayout.elements:InlineGraphicElementStatus:LOADING"/>
                <string name="LOAD_PENDING" object="[flashx.textLayout.elements.InlineGraphicElementStatus]" text="InlineGraphicElementStatus.LOAD_PENDING" constant="true" tiptext="Graphic element is an URL that has not been loaded." version="" playername="" helpurl="flashx.textLayout.elements:InlineGraphicElementStatus:LOAD_PENDING"/>
                <string name="READY" object="[flashx.textLayout.elements.InlineGraphicElementStatus]" text="InlineGraphicElementStatus.READY" constant="true" tiptext="Graphic is completely loaded and properly sized." version="" playername="" helpurl="flashx.textLayout.elements:InlineGraphicElementStatus:READY"/>
                <string name="SIZE_PENDING" object="[flashx.textLayout.elements.InlineGraphicElementStatus]" text="InlineGraphicElementStatus.SIZE_PENDING" constant="true" tiptext="Graphic element with auto or percentage width/height has completed loading but has not been recomposed." version="" playername="" helpurl="flashx.textLayout.elements:InlineGraphicElementStatus:SIZE_PENDING"/>
            </folder>
        </folder>
        <folder name="LinkElement" id="[flashx.textLayout.elements.LinkElement]" sort="true" index="true" asAncestors="flashx.textLayout.elements:SubParagraphGroupElement,flashx.textLayout.elements:FlowGroupElement,flashx.textLayout.elements:FlowElement,Object" tiptext="The LinkElement class defines a link to a URI (Universal Resource Identifier), which is executed when the user clicks it." helpurl="flashx.textLayout.elements:LinkElement">
            <folder name="Methods" id="Methods" tiptext="Methods for class LinkElement" helpurl="flashx.textLayout.elements:LinkElement">
                <string name="LinkElement" object="[flashx.textLayout.elements.LinkElement]" text="new LinkElement(%%)" constructor="true" tiptext="Constructor - creates a new LinkElement instance." version="1.5" playername="" helpurl="flashx.textLayout.elements:LinkElement:LinkElement"/>
                <string name="addEventListener" object="[flashx.textLayout.elements.LinkElement]" text=".addEventListener(%type:String,listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Registers an event listener object with an EventDispatcher object so that the listenerreceives notification of an event." version="1.5" playername="" helpurl="flashx.textLayout.elements:LinkElement:addEventListener"/>
                <string name="dispatchEvent" object="[flashx.textLayout.elements.LinkElement]" text=".dispatchEvent(%event:flash.events:Event%):Boolean" tiptext="Dispatches an event into the event flow." version="1.5" playername="" helpurl="flashx.textLayout.elements:LinkElement:dispatchEvent"/>
                <string name="hasEventListener" object="[flashx.textLayout.elements.LinkElement]" text=".hasEventListener(%type:String%):Boolean" tiptext="Checks whether the EventDispatcher object has any listeners registered for a specific type of event." version="1.5" playername="" helpurl="flashx.textLayout.elements:LinkElement:hasEventListener"/>
                <string name="removeEventListener" object="[flashx.textLayout.elements.LinkElement]" text=".removeEventListener(%type:String,listener:Function[,useCapture:Boolean=false]%):void" tiptext="Removes a listener from the EventDispatcher object." version="1.5" playername="" helpurl="flashx.textLayout.elements:LinkElement:removeEventListener"/>
                <string name="willTrigger" object="[flashx.textLayout.elements.LinkElement]" text=".willTrigger(%type:String%):Boolean" tiptext="Checks whether an event listener is registered with this EventDispatcher object or any of its ancestors for the specified event type." version="1.5" playername="" helpurl="flashx.textLayout.elements:LinkElement:willTrigger"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class LinkElement" helpurl="flashx.textLayout.elements:LinkElement">
                <string name="href" object="[flashx.textLayout.elements.LinkElement]" text=".href" tiptext="The Uniform Resource Identifier (URI) associated with the LinkElement object." version="" playername="" helpurl="flashx.textLayout.elements:LinkElement:href:get"/>
                <string name="linkState" object="[flashx.textLayout.elements.LinkElement]" text=".linkState" tiptext="The current state of the link." version="" playername="" helpurl="flashx.textLayout.elements:LinkElement:linkState:get"/>
                <string name="target" object="[flashx.textLayout.elements.LinkElement]" text=".target" tiptext="The Target value associated with the LinkElement." version="" playername="" helpurl="flashx.textLayout.elements:LinkElement:target:get"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class LinkElement" helpurl="flashx.textLayout.elements:LinkElement">
                <string name="click" object="[flashx.textLayout.elements.LinkElement]" text=".addEventListener(%type:String=FlowElementMouseEvent.CLICK{FlowElementMouseEvent.CLICK,FlowElementMouseEvent.ROLL_OUT,FlowElementMouseEvent.ROLL_OVER,FlowElementMouseEvent.MOUSE_MOVE,FlowElementMouseEvent.MOUSE_UP,FlowElementMouseEvent.MOUSE_DOWN},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the link is clicked." version="" playername="" helpurl="flashx.textLayout.elements:LinkElement__click"/>
                <string name="rollOut" object="[flashx.textLayout.elements.LinkElement]" text=".addEventListener(%type:String=FlowElementMouseEvent.ROLL_OUT{FlowElementMouseEvent.CLICK,FlowElementMouseEvent.ROLL_OUT,FlowElementMouseEvent.ROLL_OVER,FlowElementMouseEvent.MOUSE_MOVE,FlowElementMouseEvent.MOUSE_UP,FlowElementMouseEvent.MOUSE_DOWN},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the mouse goes out of the link." version="" playername="" helpurl="flashx.textLayout.elements:LinkElement__rollOut"/>
                <string name="rollOver" object="[flashx.textLayout.elements.LinkElement]" text=".addEventListener(%type:String=FlowElementMouseEvent.ROLL_OVER{FlowElementMouseEvent.CLICK,FlowElementMouseEvent.ROLL_OUT,FlowElementMouseEvent.ROLL_OVER,FlowElementMouseEvent.MOUSE_MOVE,FlowElementMouseEvent.MOUSE_UP,FlowElementMouseEvent.MOUSE_DOWN},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the mouse first enters the link." version="" playername="" helpurl="flashx.textLayout.elements:LinkElement__rollOver"/>
                <string name="mouseMove" object="[flashx.textLayout.elements.LinkElement]" text=".addEventListener(%type:String=FlowElementMouseEvent.MOUSE_MOVE{FlowElementMouseEvent.CLICK,FlowElementMouseEvent.ROLL_OUT,FlowElementMouseEvent.ROLL_OVER,FlowElementMouseEvent.MOUSE_MOVE,FlowElementMouseEvent.MOUSE_UP,FlowElementMouseEvent.MOUSE_DOWN},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the mouse passes over the link." version="" playername="" helpurl="flashx.textLayout.elements:LinkElement__mouseMove"/>
                <string name="mouseUp" object="[flashx.textLayout.elements.LinkElement]" text=".addEventListener(%type:String=FlowElementMouseEvent.MOUSE_UP{FlowElementMouseEvent.CLICK,FlowElementMouseEvent.ROLL_OUT,FlowElementMouseEvent.ROLL_OVER,FlowElementMouseEvent.MOUSE_MOVE,FlowElementMouseEvent.MOUSE_UP,FlowElementMouseEvent.MOUSE_DOWN},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the mouse is released over a link." version="" playername="" helpurl="flashx.textLayout.elements:LinkElement__mouseUp"/>
                <string name="mouseDown" object="[flashx.textLayout.elements.LinkElement]" text=".addEventListener(%type:String=FlowElementMouseEvent.MOUSE_DOWN{FlowElementMouseEvent.CLICK,FlowElementMouseEvent.ROLL_OUT,FlowElementMouseEvent.ROLL_OVER,FlowElementMouseEvent.MOUSE_MOVE,FlowElementMouseEvent.MOUSE_UP,FlowElementMouseEvent.MOUSE_DOWN},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the mouse is pressed down over a link." version="" playername="" helpurl="flashx.textLayout.elements:LinkElement__mouseDown"/>
            </folder>
        </folder>
        <folder name="LinkState" id="[flashx.textLayout.elements.LinkState]" sort="true" index="true" asAncestors="Object" tiptext="The LinkState class defines a set of constants for the linkState property of the LinkElement class." helpurl="flashx.textLayout.elements:LinkState">
            <folder name="Properties" id="Properties" tiptext="Properties for class LinkState" helpurl="flashx.textLayout.elements:LinkState">
                <string name="ACTIVE" object="[flashx.textLayout.elements.LinkState]" text="LinkState.ACTIVE" constant="true" tiptext="Value for the active state, which occurs when you hold the mouse down over a link." version="" playername="" helpurl="flashx.textLayout.elements:LinkState:ACTIVE"/>
                <string name="HOVER" object="[flashx.textLayout.elements.LinkState]" text="LinkState.HOVER" constant="true" tiptext="Value for the hover state, which occurs when you drag the mouse over a link." version="" playername="" helpurl="flashx.textLayout.elements:LinkState:HOVER"/>
                <string name="LINK" object="[flashx.textLayout.elements.LinkState]" text="LinkState.LINK" constant="true" tiptext="Value for the normal, default link state." version="" playername="" helpurl="flashx.textLayout.elements:LinkState:LINK"/>
            </folder>
        </folder>
        <folder name="OverflowPolicy" id="[flashx.textLayout.elements.OverflowPolicy]" sort="true" index="true" asAncestors="Object" tiptext="The OverflowPolicy class defines a set of constants for the overflowPolicy property of the IConfiguration class." helpurl="flashx.textLayout.elements:OverflowPolicy">
            <folder name="Properties" id="Properties" tiptext="Properties for class OverflowPolicy" helpurl="flashx.textLayout.elements:OverflowPolicy">
                <string name="FIT_ANY" object="[flashx.textLayout.elements.OverflowPolicy]" text="OverflowPolicy.FIT_ANY" constant="true" tiptext="Fit the line in the composition area if any part of the line fits." version="" playername="" helpurl="flashx.textLayout.elements:OverflowPolicy:FIT_ANY"/>
                <string name="FIT_DESCENDERS" object="[flashx.textLayout.elements.OverflowPolicy]" text="OverflowPolicy.FIT_DESCENDERS" constant="true" tiptext="Fit the line in the composition area if the area from the top to the baseline fits." version="" playername="" helpurl="flashx.textLayout.elements:OverflowPolicy:FIT_DESCENDERS"/>
            </folder>
        </folder>
        <folder name="ParagraphElement" id="[flashx.textLayout.elements.ParagraphElement]" sort="true" index="true" asAncestors="flashx.textLayout.elements:ParagraphFormattedElement,flashx.textLayout.elements:FlowGroupElement,flashx.textLayout.elements:FlowElement,Object" tiptext="The ParagraphElement class represents a paragraph in the text flow hierarchy." helpurl="flashx.textLayout.elements:ParagraphElement">
            <folder name="Methods" id="Methods" tiptext="Methods for class ParagraphElement" helpurl="flashx.textLayout.elements:ParagraphElement">
                <string name="ParagraphElement" object="[flashx.textLayout.elements.ParagraphElement]" text="new ParagraphElement(%%)" constructor="true" tiptext="Constructor - represents a paragraph in a text flow." version="1.5" playername="" helpurl="flashx.textLayout.elements:ParagraphElement:ParagraphElement"/>
                <string name="findNextAtomBoundary" object="[flashx.textLayout.elements.ParagraphElement]" text=".findNextAtomBoundary(%relativePosition:int%):int" tiptext="Scans ahead from the supplied position to find the location in the text of the next atom and returns the index." version="1.5" playername="" helpurl="flashx.textLayout.elements:ParagraphElement:findNextAtomBoundary"/>
                <string name="findNextWordBoundary" object="[flashx.textLayout.elements.ParagraphElement]" text=".findNextWordBoundary(%relativePosition:int%):int" tiptext="Returns the index of the next word boundary in the text." version="1.5" playername="" helpurl="flashx.textLayout.elements:ParagraphElement:findNextWordBoundary"/>
                <string name="findPreviousAtomBoundary" object="[flashx.textLayout.elements.ParagraphElement]" text=".findPreviousAtomBoundary(%relativePosition:int%):int" tiptext="Scans backward from the supplied position to find the location in the text of the previous atom and returns the index." version="1.5" playername="" helpurl="flashx.textLayout.elements:ParagraphElement:findPreviousAtomBoundary"/>
                <string name="findPreviousWordBoundary" object="[flashx.textLayout.elements.ParagraphElement]" text=".findPreviousWordBoundary(%relativePosition:int%):int" tiptext="Returns the index of the previous word boundary in the text." version="1.5" playername="" helpurl="flashx.textLayout.elements:ParagraphElement:findPreviousWordBoundary"/>
                <string name="getNextParagraph" object="[flashx.textLayout.elements.ParagraphElement]" text=".getNextParagraph(%%):flashx.textLayout.elements:ParagraphElement" tiptext="Returns the paragraph that follows this one, or null if there are no more paragraphs." version="1.5" playername="" helpurl="flashx.textLayout.elements:ParagraphElement:getNextParagraph"/>
                <string name="getPreviousParagraph" object="[flashx.textLayout.elements.ParagraphElement]" text=".getPreviousParagraph(%%):flashx.textLayout.elements:ParagraphElement" tiptext="Returns the paragraph that precedes this one, or null, if this paragraph is the first one in the TextFlow." version="1.5" playername="" helpurl="flashx.textLayout.elements:ParagraphElement:getPreviousParagraph"/>
            </folder>
        </folder>
        <folder name="SpanElement" id="[flashx.textLayout.elements.SpanElement]" sort="true" index="true" asAncestors="flashx.textLayout.elements:FlowLeafElement,flashx.textLayout.elements:FlowElement,Object" tiptext="The SpanElement class represents a run of text that has a single set of formatting attributes applied." helpurl="flashx.textLayout.elements:SpanElement">
            <folder name="Methods" id="Methods" tiptext="Methods for class SpanElement" helpurl="flashx.textLayout.elements:SpanElement">
                <string name="SpanElement" object="[flashx.textLayout.elements.SpanElement]" text="new SpanElement(%%):void" constructor="true" tiptext="Constructor - creates a SpanElement object to hold a run of text in a paragraph." version="1.5" playername="" helpurl="flashx.textLayout.elements:SpanElement:SpanElement"/>
                <string name="replaceText" object="[flashx.textLayout.elements.SpanElement]" text=".replaceText(%relativeStartPosition:int,relativeEndPosition:int,textValue:String%):void" tiptext="Updates the text in text span based on the specified start and end positions." version="1.5" playername="" helpurl="flashx.textLayout.elements:SpanElement:replaceText"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class SpanElement" helpurl="flashx.textLayout.elements:SpanElement">
                <string name="mxmlChildren" object="[flashx.textLayout.elements.SpanElement]" text=".mxmlChildren" tiptext="Sets text based on content within span tags; always deletes existing children." version="" playername="" helpurl="flashx.textLayout.elements:SpanElement:mxmlChildren:get"/>
                <string name="text" object="[flashx.textLayout.elements.SpanElement]" text=".text" tiptext="Receives the String of text that this SpanElement object holds." version="" playername="" helpurl="flashx.textLayout.elements:SpanElement:text:set"/>
            </folder>
        </folder>
        <folder name="SpecialCharacterElement" id="[flashx.textLayout.elements.SpecialCharacterElement]" sort="true" index="true" asAncestors="flashx.textLayout.elements:SpanElement,flashx.textLayout.elements:FlowLeafElement,flashx.textLayout.elements:FlowElement,Object" tiptext="The SpecialCharacterElement class is an abstract base class for elements that represent special characters." helpurl="flashx.textLayout.elements:SpecialCharacterElement">
            <folder name="Methods" id="Methods" tiptext="Methods for class SpecialCharacterElement" helpurl="flashx.textLayout.elements:SpecialCharacterElement">
                <string name="SpecialCharacterElement" object="[flashx.textLayout.elements.SpecialCharacterElement]" text="new SpecialCharacterElement(%%)" constructor="true" tiptext="Base class - invoking new SpecialCharacterElement() throws an error exception." version="1.5" playername="" helpurl="flashx.textLayout.elements:SpecialCharacterElement:SpecialCharacterElement"/>
            </folder>
        </folder>
        <folder name="SubParagraphGroupElement" id="[flashx.textLayout.elements.SubParagraphGroupElement]" sort="true" index="true" asAncestors="flashx.textLayout.elements:FlowGroupElement,flashx.textLayout.elements:FlowElement,Object" tiptext="The SubParagraphGroupElement class groups FlowLeafElements together." helpurl="flashx.textLayout.elements:SubParagraphGroupElement">
            <folder name="Methods" id="Methods" tiptext="Methods for class SubParagraphGroupElement" helpurl="flashx.textLayout.elements:SubParagraphGroupElement">
                <string name="SubParagraphGroupElement" object="[flashx.textLayout.elements.SubParagraphGroupElement]" text="new SubParagraphGroupElement(%%)" constructor="true" tiptext="Constructor - creates a new SubParagraphGroupElement instance." version="1.5" playername="" helpurl="flashx.textLayout.elements:SubParagraphGroupElement:SubParagraphGroupElement"/>
            </folder>
        </folder>
        <folder name="TabElement" id="[flashx.textLayout.elements.TabElement]" sort="true" index="true" asAncestors="flashx.textLayout.elements:SpecialCharacterElement,flashx.textLayout.elements:SpanElement,flashx.textLayout.elements:FlowLeafElement,flashx.textLayout.elements:FlowElement,Object" tiptext="The TabElement class represents a &amp;lt;tab/&amp;gt; in the text flow." helpurl="flashx.textLayout.elements:TabElement">
            <folder name="Methods" id="Methods" tiptext="Methods for class TabElement" helpurl="flashx.textLayout.elements:TabElement">
                <string name="TabElement" object="[flashx.textLayout.elements.TabElement]" text="new TabElement(%%)" constructor="true" tiptext="Constructor - creates a new TabElement instance." version="1.5" playername="" helpurl="flashx.textLayout.elements:TabElement:TabElement"/>
            </folder>
        </folder>
        <folder name="TCYElement" id="[flashx.textLayout.elements.TCYElement]" sort="true" index="true" asAncestors="flashx.textLayout.elements:SubParagraphGroupElement,flashx.textLayout.elements:FlowGroupElement,flashx.textLayout.elements:FlowElement,Object" tiptext="The TCYElement (Tatechuuyoko - ta-tae-chu-yo-ko) class is a subclass of SubParagraphGroupElement that causes text to draw horizontally within a vertical line." helpurl="flashx.textLayout.elements:TCYElement">
            <folder name="Methods" id="Methods" tiptext="Methods for class TCYElement" helpurl="flashx.textLayout.elements:TCYElement">
                <string name="TCYElement" object="[flashx.textLayout.elements.TCYElement]" text="new TCYElement(%%)" constructor="true" tiptext="Constructor - creates a new TCYElement instance." version="1.5" playername="" helpurl="flashx.textLayout.elements:TCYElement:TCYElement"/>
            </folder>
        </folder>
        <folder name="TextFlow" id="[flashx.textLayout.elements.TextFlow]" sort="true" index="true" asAncestors="flashx.textLayout.elements:ContainerFormattedElement,flashx.textLayout.elements:ParagraphFormattedElement,flashx.textLayout.elements:FlowGroupElement,flashx.textLayout.elements:FlowElement,Object" tiptext="The TextFlow class is responsible for managing all the text content of a story." helpurl="flashx.textLayout.elements:TextFlow">
            <folder name="Methods" id="Methods" tiptext="Methods for class TextFlow" helpurl="flashx.textLayout.elements:TextFlow">
                <string name="TextFlow" object="[flashx.textLayout.elements.TextFlow]" text="new TextFlow(%[config:flashx.textLayout.elements:IConfiguration=null]%)" constructor="true" tiptext="Constructor - creates a new TextFlow instance." version="1.5" playername="" helpurl="flashx.textLayout.elements:TextFlow:TextFlow"/>
                <string name="addEventListener" object="[flashx.textLayout.elements.TextFlow]" text=".addEventListener(%type:String,listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Registers an event listener object with an EventDispatcher object so that the listenerreceives notification of an event." version="1.5" playername="" helpurl="flashx.textLayout.elements:TextFlow:addEventListener"/>
                <string name="dispatchEvent" object="[flashx.textLayout.elements.TextFlow]" text=".dispatchEvent(%event:flash.events:Event%):Boolean" tiptext="Dispatches an event into the event flow." version="1.5" playername="" helpurl="flashx.textLayout.elements:TextFlow:dispatchEvent"/>
                <string name="getElementByID" object="[flashx.textLayout.elements.TextFlow]" text=".getElementByID(%idName:String%):flashx.textLayout.elements:FlowElement" tiptext="Returns an element whose id property matches the idName parameter." version="1.5" playername="" helpurl="flashx.textLayout.elements:TextFlow:getElementByID"/>
                <string name="getElementsByStyleName" object="[flashx.textLayout.elements.TextFlow]" text=".getElementsByStyleName(%styleNameValue:String%):Array" tiptext="Returns all elements that have styleName set to styleNameValue." version="1.5" playername="" helpurl="flashx.textLayout.elements:TextFlow:getElementsByStyleName"/>
                <string name="hasEventListener" object="[flashx.textLayout.elements.TextFlow]" text=".hasEventListener(%type:String%):Boolean" tiptext="Checks whether the EventDispatcher object has any listeners registered for a specific type of event." version="1.5" playername="" helpurl="flashx.textLayout.elements:TextFlow:hasEventListener"/>
                <string name="invalidateAllFormats" object="[flashx.textLayout.elements.TextFlow]" text=".invalidateAllFormats(%%):void" tiptext="Invalidates all formatting information for the TextFlow, forcing it to be recomputed." version="1.5" playername="" helpurl="flashx.textLayout.elements:TextFlow:invalidateAllFormats"/>
                <string name="removeEventListener" object="[flashx.textLayout.elements.TextFlow]" text=".removeEventListener(%type:String,listener:Function[,useCapture:Boolean=false]%):void" tiptext="Removes a listener from the EventDispatcher object." version="1.5" playername="" helpurl="flashx.textLayout.elements:TextFlow:removeEventListener"/>
                <string name="willTrigger" object="[flashx.textLayout.elements.TextFlow]" text=".willTrigger(%type:String%):Boolean" tiptext="Checks whether an event listener is registered with this EventDispatcher object or any of its ancestors for the specified event type." version="1.5" playername="" helpurl="flashx.textLayout.elements:TextFlow:willTrigger"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class TextFlow" helpurl="flashx.textLayout.elements:TextFlow">
                <string name="defaultConfiguration" object="[flashx.textLayout.elements.TextFlow]" text=".defaultConfiguration" tiptext="Default configuration for all new TextFlow objects if the configuration is not specified." version="" playername="" helpurl="flashx.textLayout.elements:TextFlow:defaultConfiguration"/>
                <string name="configuration" object="[flashx.textLayout.elements.TextFlow]" text=".configuration" tiptext="The Configuration object for this TextFlow object." version="" playername="" helpurl="flashx.textLayout.elements:TextFlow:configuration:get"/>
                <string name="flowComposer" object="[flashx.textLayout.elements.TextFlow]" text=".flowComposer" tiptext="Manages the containers for this element." version="" playername="" helpurl="flashx.textLayout.elements:TextFlow:flowComposer:get"/>
                <string name="formatResolver" object="[flashx.textLayout.elements.TextFlow]" text=".formatResolver" tiptext="A callback function for resolving element styles." version="" playername="" helpurl="flashx.textLayout.elements:TextFlow:formatResolver:get"/>
                <string name="generation" object="[flashx.textLayout.elements.TextFlow]" text=".generation" tiptext="The generation number for this TextFlow object." version="" playername="" helpurl="flashx.textLayout.elements:TextFlow:generation:get"/>
                <string name="hostFormat" object="[flashx.textLayout.elements.TextFlow]" text=".hostFormat" tiptext="The TextLayoutFormat object for this TextFlow object." version="" playername="" helpurl="flashx.textLayout.elements:TextFlow:hostFormat:get"/>
                <string name="interactionManager" object="[flashx.textLayout.elements.TextFlow]" text=".interactionManager" tiptext="The InteractionManager associated with this TextFlow object." version="" playername="" helpurl="flashx.textLayout.elements:TextFlow:interactionManager:get"/>
            </folder>
            <folder name="Events" id="Events" tiptext="Events for class TextFlow" helpurl="flashx.textLayout.elements:TextFlow">
                <string name="updateComplete" object="[flashx.textLayout.elements.TextFlow]" text=".addEventListener(%type:String=UpdateCompleteEvent.{UpdateCompleteEvent.,DamageEvent.,TextLayoutEvent.,StatusChangeEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,CompositionCompleteEvent.,SelectionEvent.,FlowOperationEvent.FLOW_OPERATION_COMPLETE,FlowOperationEvent.FLOW_OPERATION_END,FlowOperationEvent.FLOW_OPERATION_BEGIN},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched by a TextFlow object each time a container has had new DisplayObjects added or updated as a result of composition." version="" playername="" helpurl="flashx.textLayout.elements:TextFlow__updateComplete"/>
                <string name="damage" object="[flashx.textLayout.elements.TextFlow]" text=".addEventListener(%type:String=DamageEvent.{UpdateCompleteEvent.,DamageEvent.,TextLayoutEvent.,StatusChangeEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,CompositionCompleteEvent.,SelectionEvent.,FlowOperationEvent.FLOW_OPERATION_COMPLETE,FlowOperationEvent.FLOW_OPERATION_END,FlowOperationEvent.FLOW_OPERATION_BEGIN},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched by a TextFlow object each time it is damaged You can use this event to find out that the TextFlow has changed, but do not access the TextFlow itself when this event is sent out." version="" playername="" helpurl="flashx.textLayout.elements:TextFlow__damage"/>
                <string name="scroll" object="[flashx.textLayout.elements.TextFlow]" text=".addEventListener(%type:String=TextLayoutEvent.{UpdateCompleteEvent.,DamageEvent.,TextLayoutEvent.,StatusChangeEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,CompositionCompleteEvent.,SelectionEvent.,FlowOperationEvent.FLOW_OPERATION_COMPLETE,FlowOperationEvent.FLOW_OPERATION_END,FlowOperationEvent.FLOW_OPERATION_BEGIN},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched by a TextFlow object after text is scrolled within a controller container." version="" playername="" helpurl="flashx.textLayout.elements:TextFlow__scroll"/>
                <string name="inlineGraphicStatusChanged" object="[flashx.textLayout.elements.TextFlow]" text=".addEventListener(%type:String=StatusChangeEvent.{UpdateCompleteEvent.,DamageEvent.,TextLayoutEvent.,StatusChangeEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,CompositionCompleteEvent.,SelectionEvent.,FlowOperationEvent.FLOW_OPERATION_COMPLETE,FlowOperationEvent.FLOW_OPERATION_END,FlowOperationEvent.FLOW_OPERATION_BEGIN},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when a InlineGraphicElement is resized due to having width or height as auto or percent and the graphic has finished loading." version="" playername="" helpurl="flashx.textLayout.elements:TextFlow__inlineGraphicStatusChanged"/>
                <string name="click" object="[flashx.textLayout.elements.TextFlow]" text=".addEventListener(%type:String=FlowElementMouseEvent.{UpdateCompleteEvent.,DamageEvent.,TextLayoutEvent.,StatusChangeEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,CompositionCompleteEvent.,SelectionEvent.,FlowOperationEvent.FLOW_OPERATION_COMPLETE,FlowOperationEvent.FLOW_OPERATION_END,FlowOperationEvent.FLOW_OPERATION_BEGIN},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when any link is clicked." version="" playername="" helpurl="flashx.textLayout.elements:TextFlow__click"/>
                <string name="rollOut" object="[flashx.textLayout.elements.TextFlow]" text=".addEventListener(%type:String=FlowElementMouseEvent.{UpdateCompleteEvent.,DamageEvent.,TextLayoutEvent.,StatusChangeEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,CompositionCompleteEvent.,SelectionEvent.,FlowOperationEvent.FLOW_OPERATION_COMPLETE,FlowOperationEvent.FLOW_OPERATION_END,FlowOperationEvent.FLOW_OPERATION_BEGIN},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the mouse goes out of any link." version="" playername="" helpurl="flashx.textLayout.elements:TextFlow__rollOut"/>
                <string name="rollOver" object="[flashx.textLayout.elements.TextFlow]" text=".addEventListener(%type:String=FlowElementMouseEvent.{UpdateCompleteEvent.,DamageEvent.,TextLayoutEvent.,StatusChangeEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,CompositionCompleteEvent.,SelectionEvent.,FlowOperationEvent.FLOW_OPERATION_COMPLETE,FlowOperationEvent.FLOW_OPERATION_END,FlowOperationEvent.FLOW_OPERATION_BEGIN},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the mouse first enters any link." version="" playername="" helpurl="flashx.textLayout.elements:TextFlow__rollOver"/>
                <string name="mouseMove" object="[flashx.textLayout.elements.TextFlow]" text=".addEventListener(%type:String=FlowElementMouseEvent.{UpdateCompleteEvent.,DamageEvent.,TextLayoutEvent.,StatusChangeEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,CompositionCompleteEvent.,SelectionEvent.,FlowOperationEvent.FLOW_OPERATION_COMPLETE,FlowOperationEvent.FLOW_OPERATION_END,FlowOperationEvent.FLOW_OPERATION_BEGIN},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the mouse passes over any link." version="" playername="" helpurl="flashx.textLayout.elements:TextFlow__mouseMove"/>
                <string name="mouseUp" object="[flashx.textLayout.elements.TextFlow]" text=".addEventListener(%type:String=FlowElementMouseEvent.{UpdateCompleteEvent.,DamageEvent.,TextLayoutEvent.,StatusChangeEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,CompositionCompleteEvent.,SelectionEvent.,FlowOperationEvent.FLOW_OPERATION_COMPLETE,FlowOperationEvent.FLOW_OPERATION_END,FlowOperationEvent.FLOW_OPERATION_BEGIN},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the mouse is released over any link." version="" playername="" helpurl="flashx.textLayout.elements:TextFlow__mouseUp"/>
                <string name="mouseDown" object="[flashx.textLayout.elements.TextFlow]" text=".addEventListener(%type:String=FlowElementMouseEvent.{UpdateCompleteEvent.,DamageEvent.,TextLayoutEvent.,StatusChangeEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,CompositionCompleteEvent.,SelectionEvent.,FlowOperationEvent.FLOW_OPERATION_COMPLETE,FlowOperationEvent.FLOW_OPERATION_END,FlowOperationEvent.FLOW_OPERATION_BEGIN},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched when the mouse is pressed down over any link." version="" playername="" helpurl="flashx.textLayout.elements:TextFlow__mouseDown"/>
                <string name="compositionComplete" object="[flashx.textLayout.elements.TextFlow]" text=".addEventListener(%type:String=CompositionCompleteEvent.{UpdateCompleteEvent.,DamageEvent.,TextLayoutEvent.,StatusChangeEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,CompositionCompleteEvent.,SelectionEvent.,FlowOperationEvent.FLOW_OPERATION_COMPLETE,FlowOperationEvent.FLOW_OPERATION_END,FlowOperationEvent.FLOW_OPERATION_BEGIN},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched after every recompose." version="" playername="" helpurl="flashx.textLayout.elements:TextFlow__compositionComplete"/>
                <string name="selectionChange" object="[flashx.textLayout.elements.TextFlow]" text=".addEventListener(%type:String=SelectionEvent.{UpdateCompleteEvent.,DamageEvent.,TextLayoutEvent.,StatusChangeEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,CompositionCompleteEvent.,SelectionEvent.,FlowOperationEvent.FLOW_OPERATION_COMPLETE,FlowOperationEvent.FLOW_OPERATION_END,FlowOperationEvent.FLOW_OPERATION_BEGIN},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="Dispatched whenever the selection is changed." version="" playername="" helpurl="flashx.textLayout.elements:TextFlow__selectionChange"/>
                <string name="flowOperationComplete" object="[flashx.textLayout.elements.TextFlow]" text=".addEventListener(%type:String=FlowOperationEvent.FLOW_OPERATION_COMPLETE{UpdateCompleteEvent.,DamageEvent.,TextLayoutEvent.,StatusChangeEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,CompositionCompleteEvent.,SelectionEvent.,FlowOperationEvent.FLOW_OPERATION_COMPLETE,FlowOperationEvent.FLOW_OPERATION_END,FlowOperationEvent.FLOW_OPERATION_BEGIN},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="" version="" playername="" helpurl="flashx.textLayout.elements:TextFlow__flowOperationComplete"/>
                <string name="flowOperationEnd" object="[flashx.textLayout.elements.TextFlow]" text=".addEventListener(%type:String=FlowOperationEvent.FLOW_OPERATION_END{UpdateCompleteEvent.,DamageEvent.,TextLayoutEvent.,StatusChangeEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,CompositionCompleteEvent.,SelectionEvent.,FlowOperationEvent.FLOW_OPERATION_COMPLETE,FlowOperationEvent.FLOW_OPERATION_END,FlowOperationEvent.FLOW_OPERATION_BEGIN},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="" version="" playername="" helpurl="flashx.textLayout.elements:TextFlow__flowOperationEnd"/>
                <string name="flowOperationBegin" object="[flashx.textLayout.elements.TextFlow]" text=".addEventListener(%type:String=FlowOperationEvent.FLOW_OPERATION_BEGIN{UpdateCompleteEvent.,DamageEvent.,TextLayoutEvent.,StatusChangeEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,FlowElementMouseEvent.,CompositionCompleteEvent.,SelectionEvent.,FlowOperationEvent.FLOW_OPERATION_COMPLETE,FlowOperationEvent.FLOW_OPERATION_END,FlowOperationEvent.FLOW_OPERATION_BEGIN},listener:Function[,useCapture:Boolean=false,priority:int=0,useWeakReference:Boolean=false]%):void" tiptext="" version="" playername="" helpurl="flashx.textLayout.elements:TextFlow__flowOperationBegin"/>
            </folder>
        </folder>
        <folder name="TextRange" id="[flashx.textLayout.elements.TextRange]" sort="true" index="true" asAncestors="Object" tiptext="A read only class that describes a range of contiguous text." helpurl="flashx.textLayout.elements:TextRange">
            <folder name="Methods" id="Methods" tiptext="Methods for class TextRange" helpurl="flashx.textLayout.elements:TextRange">
                <string name="TextRange" object="[flashx.textLayout.elements.TextRange]" text="new TextRange(%root:flashx.textLayout.elements:TextFlow,anchorIndex:int,activeIndex:int%)" constructor="true" tiptext="Constructor - creates a new TextRange instance." version="1.5" playername="" helpurl="flashx.textLayout.elements:TextRange:TextRange"/>
                <string name="updateRange" object="[flashx.textLayout.elements.TextRange]" text=".updateRange(%newAnchorPosition:int,newActivePosition:int%):Boolean" tiptext="Update the range with new anchor or active position values." version="1.5" playername="" helpurl="flashx.textLayout.elements:TextRange:updateRange"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class TextRange" helpurl="flashx.textLayout.elements:TextRange">
                <string name="absoluteEnd" object="[flashx.textLayout.elements.TextRange]" text=".absoluteEnd" tiptext="End of the selection, as an absolute position in the TextFlow." version="" playername="" helpurl="flashx.textLayout.elements:TextRange:absoluteEnd:get"/>
                <string name="absoluteStart" object="[flashx.textLayout.elements.TextRange]" text=".absoluteStart" tiptext="Start of the selection, as an absolute position in the TextFlow." version="" playername="" helpurl="flashx.textLayout.elements:TextRange:absoluteStart:get"/>
                <string name="activePosition" object="[flashx.textLayout.elements.TextRange]" text=".activePosition" tiptext="Active position of the selection, as an absolute position in the TextFlow." version="" playername="" helpurl="flashx.textLayout.elements:TextRange:activePosition:get"/>
                <string name="anchorPosition" object="[flashx.textLayout.elements.TextRange]" text=".anchorPosition" tiptext="Anchor position of the selection, as an absolute position in the TextFlow." version="" playername="" helpurl="flashx.textLayout.elements:TextRange:anchorPosition:get"/>
                <string name="textFlow" object="[flashx.textLayout.elements.TextRange]" text=".textFlow" tiptext="Returns the TextFlow associated with the selection." version="" playername="" helpurl="flashx.textLayout.elements:TextRange:textFlow:get"/>
            </folder>
        </folder>
    </folder>
        <folder name="flashx.textLayout.events" id="flashx.textLayout.events" sort="true" tiptext="Classes for package flashx.textLayout.events" helpurl="flashx.textLayout.events">
        <folder name="CompositionCompleteEvent" id="[flashx.textLayout.events.CompositionCompleteEvent]" sort="true" index="true" asAncestors="flash.events:Event,Object" tiptext="A TextFlow instance dispatches this event after a compose operation completes." helpurl="flashx.textLayout.events:CompositionCompleteEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class CompositionCompleteEvent" helpurl="flashx.textLayout.events:CompositionCompleteEvent">
                <string name="CompositionCompleteEvent" object="[flashx.textLayout.events.CompositionCompleteEvent]" text="new CompositionCompleteEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,textFlow:flashx.textLayout.elements:TextFlow=null,compositionStart:int=0,compositionLength:int=0]%)" constructor="true" tiptext="Constructor" version="1.5" playername="" helpurl="flashx.textLayout.events:CompositionCompleteEvent:CompositionCompleteEvent"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class CompositionCompleteEvent" helpurl="flashx.textLayout.events:CompositionCompleteEvent">
                <string name="COMPOSITION_COMPLETE" object="[flashx.textLayout.events.CompositionCompleteEvent]" text="CompositionCompleteEvent.COMPOSITION_COMPLETE" constant="true" tiptext="Defines the value of the type property of a compositionComplete event object" version="" playername="" helpurl="flashx.textLayout.events:CompositionCompleteEvent:COMPOSITION_COMPLETE"/>
                <string name="compositionLength" object="[flashx.textLayout.events.CompositionCompleteEvent]" text=".compositionLength" tiptext="The number of characters composed." version="" playername="" helpurl="flashx.textLayout.events:CompositionCompleteEvent:compositionLength:get"/>
                <string name="compositionStart" object="[flashx.textLayout.events.CompositionCompleteEvent]" text=".compositionStart" tiptext="The start location of the text range affected by the composition, expressed as an index into the text flow." version="" playername="" helpurl="flashx.textLayout.events:CompositionCompleteEvent:compositionStart:get"/>
                <string name="textFlow" object="[flashx.textLayout.events.CompositionCompleteEvent]" text=".textFlow" tiptext="TextFlow on which composition has been completed." version="" playername="" helpurl="flashx.textLayout.events:CompositionCompleteEvent:textFlow:get"/>
            </folder>
        </folder>
        <folder name="DamageEvent" id="[flashx.textLayout.events.DamageEvent]" sort="true" index="true" asAncestors="flash.events:Event,Object" tiptext="A TextFlow instance dispatches this each time it is marked as damaged." helpurl="flashx.textLayout.events:DamageEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class DamageEvent" helpurl="flashx.textLayout.events:DamageEvent">
                <string name="DamageEvent" object="[flashx.textLayout.events.DamageEvent]" text="new DamageEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,textFlow:flashx.textLayout.elements:TextFlow=null,damageAbsoluteStart:int=0,damageLength:int=0]%)" constructor="true" tiptext="Constructor" version="1.5" playername="" helpurl="flashx.textLayout.events:DamageEvent:DamageEvent"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class DamageEvent" helpurl="flashx.textLayout.events:DamageEvent">
                <string name="DAMAGE" object="[flashx.textLayout.events.DamageEvent]" text="DamageEvent.DAMAGE" constant="true" tiptext="Event type for DamageEvent" version="" playername="" helpurl="flashx.textLayout.events:DamageEvent:DAMAGE"/>
                <string name="damageAbsoluteStart" object="[flashx.textLayout.events.DamageEvent]" text=".damageAbsoluteStart" tiptext="Absolute start of the damage" version="" playername="" helpurl="flashx.textLayout.events:DamageEvent:damageAbsoluteStart:get"/>
                <string name="damageLength" object="[flashx.textLayout.events.DamageEvent]" text=".damageLength" tiptext="Length of the damage" version="" playername="" helpurl="flashx.textLayout.events:DamageEvent:damageLength:get"/>
                <string name="textFlow" object="[flashx.textLayout.events.DamageEvent]" text=".textFlow" tiptext="TextFlow owning the damage" version="" playername="" helpurl="flashx.textLayout.events:DamageEvent:textFlow:get"/>
            </folder>
        </folder>
        <folder name="FlowElementMouseEvent" id="[flashx.textLayout.events.FlowElementMouseEvent]" sort="true" index="true" asAncestors="flash.events:Event,Object" tiptext="A LinkElement dispatches this event when it detects mouse activity." helpurl="flashx.textLayout.events:FlowElementMouseEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class FlowElementMouseEvent" helpurl="flashx.textLayout.events:FlowElementMouseEvent">
                <string name="FlowElementMouseEvent" object="[flashx.textLayout.events.FlowElementMouseEvent]" text="new FlowElementMouseEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=true,flowElement:flashx.textLayout.elements:FlowElement=null,originalEvent:flash.events:MouseEvent=null]%)" constructor="true" tiptext="Creates an event object that contains information about mouse activity." version="1.5" playername="" helpurl="flashx.textLayout.events:FlowElementMouseEvent:FlowElementMouseEvent"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class FlowElementMouseEvent" helpurl="flashx.textLayout.events:FlowElementMouseEvent">
                <string name="CLICK" object="[flashx.textLayout.events.FlowElementMouseEvent]" text="FlowElementMouseEvent.CLICK" constant="true" tiptext="" version="" playername="" helpurl="flashx.textLayout.events:FlowElementMouseEvent:CLICK"/>
                <string name="MOUSE_DOWN" object="[flashx.textLayout.events.FlowElementMouseEvent]" text="FlowElementMouseEvent.MOUSE_DOWN" constant="true" tiptext="" version="" playername="" helpurl="flashx.textLayout.events:FlowElementMouseEvent:MOUSE_DOWN"/>
                <string name="MOUSE_MOVE" object="[flashx.textLayout.events.FlowElementMouseEvent]" text="FlowElementMouseEvent.MOUSE_MOVE" constant="true" tiptext="" version="" playername="" helpurl="flashx.textLayout.events:FlowElementMouseEvent:MOUSE_MOVE"/>
                <string name="MOUSE_UP" object="[flashx.textLayout.events.FlowElementMouseEvent]" text="FlowElementMouseEvent.MOUSE_UP" constant="true" tiptext="" version="" playername="" helpurl="flashx.textLayout.events:FlowElementMouseEvent:MOUSE_UP"/>
                <string name="ROLL_OUT" object="[flashx.textLayout.events.FlowElementMouseEvent]" text="FlowElementMouseEvent.ROLL_OUT" constant="true" tiptext="" version="" playername="" helpurl="flashx.textLayout.events:FlowElementMouseEvent:ROLL_OUT"/>
                <string name="ROLL_OVER" object="[flashx.textLayout.events.FlowElementMouseEvent]" text="FlowElementMouseEvent.ROLL_OVER" constant="true" tiptext="" version="" playername="" helpurl="flashx.textLayout.events:FlowElementMouseEvent:ROLL_OVER"/>
                <string name="flowElement" object="[flashx.textLayout.events.FlowElementMouseEvent]" text=".flowElement" tiptext="The LinkElement that dispatched the event." version="" playername="" helpurl="flashx.textLayout.events:FlowElementMouseEvent:flowElement:get"/>
                <string name="originalEvent" object="[flashx.textLayout.events.FlowElementMouseEvent]" text=".originalEvent" tiptext="The original mouse event generated by the mouse activity." version="" playername="" helpurl="flashx.textLayout.events:FlowElementMouseEvent:originalEvent:get"/>
            </folder>
        </folder>
        <folder name="FlowOperationEvent" id="[flashx.textLayout.events.FlowOperationEvent]" sort="true" index="true" asAncestors="flash.events:Event,Object" tiptext="A TextFlow instance dispatches this event just before an operation commences and again just after an operation completes." helpurl="flashx.textLayout.events:FlowOperationEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class FlowOperationEvent" helpurl="flashx.textLayout.events:FlowOperationEvent">
                <string name="FlowOperationEvent" object="[flashx.textLayout.events.FlowOperationEvent]" text="new FlowOperationEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,operation:flashx.textLayout.operations:FlowOperation=null,level:int=0,error:Error=null]%)" constructor="true" tiptext="Creates an event object that contains information about a flow operation." version="1.5" playername="" helpurl="flashx.textLayout.events:FlowOperationEvent:FlowOperationEvent"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class FlowOperationEvent" helpurl="flashx.textLayout.events:FlowOperationEvent">
                <string name="FLOW_OPERATION_BEGIN" object="[flashx.textLayout.events.FlowOperationEvent]" text="FlowOperationEvent.FLOW_OPERATION_BEGIN" constant="true" tiptext="Defines the value of the type property of a flowOperationBegin event object." version="" playername="" helpurl="flashx.textLayout.events:FlowOperationEvent:FLOW_OPERATION_BEGIN"/>
                <string name="FLOW_OPERATION_COMPLETE" object="[flashx.textLayout.events.FlowOperationEvent]" text="FlowOperationEvent.FLOW_OPERATION_COMPLETE" constant="true" tiptext="Defines the value of the type property of a flowOperationComplete event object." version="" playername="" helpurl="flashx.textLayout.events:FlowOperationEvent:FLOW_OPERATION_COMPLETE"/>
                <string name="FLOW_OPERATION_END" object="[flashx.textLayout.events.FlowOperationEvent]" text="FlowOperationEvent.FLOW_OPERATION_END" constant="true" tiptext="Defines the value of the type property of a flowOperationEnd event object." version="" playername="" helpurl="flashx.textLayout.events:FlowOperationEvent:FLOW_OPERATION_END"/>
                <string name="error" object="[flashx.textLayout.events.FlowOperationEvent]" text=".error" tiptext="The error thrown, if any, during an operation." version="" playername="" helpurl="flashx.textLayout.events:FlowOperationEvent:error:get"/>
                <string name="level" object="[flashx.textLayout.events.FlowOperationEvent]" text=".level" tiptext="Operations may be merged into composite operations through nesting." version="" playername="" helpurl="flashx.textLayout.events:FlowOperationEvent:level:get"/>
                <string name="operation" object="[flashx.textLayout.events.FlowOperationEvent]" text=".operation" tiptext="The operation that is about to begin or has just ended." version="" playername="" helpurl="flashx.textLayout.events:FlowOperationEvent:operation:get"/>
            </folder>
        </folder>
        <folder name="SelectionEvent" id="[flashx.textLayout.events.SelectionEvent]" sort="true" index="true" asAncestors="flash.events:Event,Object" tiptext="A TextFlow instance dispatches a SelectionEvent object when an EditManager or SelectionManager changes or selects a range of text." helpurl="flashx.textLayout.events:SelectionEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class SelectionEvent" helpurl="flashx.textLayout.events:SelectionEvent">
                <string name="SelectionEvent" object="[flashx.textLayout.events.SelectionEvent]" text="new SelectionEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,selectionState:flashx.textLayout.edit:SelectionState=null]%)" constructor="true" tiptext="Creates an event object that contains information about a flow operation." version="1.5" playername="" helpurl="flashx.textLayout.events:SelectionEvent:SelectionEvent"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class SelectionEvent" helpurl="flashx.textLayout.events:SelectionEvent">
                <string name="SELECTION_CHANGE" object="[flashx.textLayout.events.SelectionEvent]" text="SelectionEvent.SELECTION_CHANGE" constant="true" tiptext="The SelectionEvent.SELECTION_CHANGE constant defines the value of the type property of the event object for a selection event." version="" playername="" helpurl="flashx.textLayout.events:SelectionEvent:SELECTION_CHANGE"/>
                <string name="selectionState" object="[flashx.textLayout.events.SelectionEvent]" text=".selectionState" tiptext="An object of type SelectionState that represents the selected range associated with this SelectionEvent." version="" playername="" helpurl="flashx.textLayout.events:SelectionEvent:selectionState:get"/>
            </folder>
        </folder>
        <folder name="StatusChangeEvent" id="[flashx.textLayout.events.StatusChangeEvent]" sort="true" index="true" asAncestors="flash.events:Event,Object" tiptext="A TextFlow instance dispatches this event when the status of a FlowElement changes." helpurl="flashx.textLayout.events:StatusChangeEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class StatusChangeEvent" helpurl="flashx.textLayout.events:StatusChangeEvent">
                <string name="StatusChangeEvent" object="[flashx.textLayout.events.StatusChangeEvent]" text="new StatusChangeEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,element:flashx.textLayout.elements:FlowElement=null,status:String=null,errorEvent:flash.events:ErrorEvent=null]%)" constructor="true" tiptext="Creates an event object that contains information about a status change." version="1.5" playername="" helpurl="flashx.textLayout.events:StatusChangeEvent:StatusChangeEvent"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class StatusChangeEvent" helpurl="flashx.textLayout.events:StatusChangeEvent">
                <string name="INLINE_GRAPHIC_STATUS_CHANGE" object="[flashx.textLayout.events.StatusChangeEvent]" text="StatusChangeEvent.INLINE_GRAPHIC_STATUS_CHANGE" constant="true" tiptext="Defines the value of the type property of a inlineGraphicStatusChanged event object." version="" playername="" helpurl="flashx.textLayout.events:StatusChangeEvent:INLINE_GRAPHIC_STATUS_CHANGE"/>
                <string name="element" object="[flashx.textLayout.events.StatusChangeEvent]" text=".element" tiptext="The FlowElement instance that has experienced a change in status." version="" playername="" helpurl="flashx.textLayout.events:StatusChangeEvent:element:get"/>
                <string name="errorEvent" object="[flashx.textLayout.events.StatusChangeEvent]" text=".errorEvent" tiptext="The ErrorEvent object that was dispatched as a result of the status change." version="" playername="" helpurl="flashx.textLayout.events:StatusChangeEvent:errorEvent:get"/>
                <string name="status" object="[flashx.textLayout.events.StatusChangeEvent]" text=".status" tiptext="The FlowElement&apos;s new status." version="" playername="" helpurl="flashx.textLayout.events:StatusChangeEvent:status:get"/>
            </folder>
        </folder>
        <folder name="TextLayoutEvent" id="[flashx.textLayout.events.TextLayoutEvent]" sort="true" index="true" asAncestors="flash.events:Event,Object" tiptext="A TextLayoutEvent instance represents an event, such as the TextLayoutEvent.SCROLL event, that does not require custom properties." helpurl="flashx.textLayout.events:TextLayoutEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class TextLayoutEvent" helpurl="flashx.textLayout.events:TextLayoutEvent">
                <string name="TextLayoutEvent" object="[flashx.textLayout.events.TextLayoutEvent]" text="new TextLayoutEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false]%)" constructor="true" tiptext="The TextLayoutEvent class represents the event object passed to the event listener for many Text Layout events." version="1.5" playername="" helpurl="flashx.textLayout.events:TextLayoutEvent:TextLayoutEvent"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class TextLayoutEvent" helpurl="flashx.textLayout.events:TextLayoutEvent">
                <string name="SCROLL" object="[flashx.textLayout.events.TextLayoutEvent]" text="TextLayoutEvent.SCROLL" constant="true" tiptext="The TextLayoutEvent.SCROLL constant defines the value of the type property of the event object for a scroll event." version="" playername="" helpurl="flashx.textLayout.events:TextLayoutEvent:SCROLL"/>
            </folder>
        </folder>
        <folder name="UpdateCompleteEvent" id="[flashx.textLayout.events.UpdateCompleteEvent]" sort="true" index="true" asAncestors="flash.events:Event,Object" tiptext="A TextFlow instance dispatches this event after any of its containers completes an update." helpurl="flashx.textLayout.events:UpdateCompleteEvent">
            <folder name="Methods" id="Methods" tiptext="Methods for class UpdateCompleteEvent" helpurl="flashx.textLayout.events:UpdateCompleteEvent">
                <string name="UpdateCompleteEvent" object="[flashx.textLayout.events.UpdateCompleteEvent]" text="new UpdateCompleteEvent(%type:String[,bubbles:Boolean=false,cancelable:Boolean=false,textFlow:flashx.textLayout.elements:TextFlow=null,controller:flashx.textLayout.container:ContainerController=null]%)" constructor="true" tiptext="Constructor" version="1.5" playername="" helpurl="flashx.textLayout.events:UpdateCompleteEvent:UpdateCompleteEvent"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class UpdateCompleteEvent" helpurl="flashx.textLayout.events:UpdateCompleteEvent">
                <string name="UPDATE_COMPLETE" object="[flashx.textLayout.events.UpdateCompleteEvent]" text="UpdateCompleteEvent.UPDATE_COMPLETE" constant="true" tiptext="Defines the value of the type property of an UpdateCompleteEvent object" version="" playername="" helpurl="flashx.textLayout.events:UpdateCompleteEvent:UPDATE_COMPLETE"/>
                <string name="controller" object="[flashx.textLayout.events.UpdateCompleteEvent]" text=".controller" tiptext="The controller of the container being updated" version="" playername="" helpurl="flashx.textLayout.events:UpdateCompleteEvent:controller:get"/>
                <string name="textFlow" object="[flashx.textLayout.events.UpdateCompleteEvent]" text=".textFlow" tiptext="TextFlow which has been updated." version="" playername="" helpurl="flashx.textLayout.events:UpdateCompleteEvent:textFlow:get"/>
            </folder>
        </folder>
    </folder>
        <folder name="flashx.textLayout.factory" id="flashx.textLayout.factory" sort="true" tiptext="Classes for package flashx.textLayout.factory" helpurl="flashx.textLayout.factory">
        <folder name="StringTextLineFactory" id="[flashx.textLayout.factory.StringTextLineFactory]" sort="true" index="true" asAncestors="flashx.textLayout.factory:TextLineFactoryBase,Object" tiptext="The StringTextLineFactory class provides a simple way to create TextLines from a string." helpurl="flashx.textLayout.factory:StringTextLineFactory">
            <folder name="Methods" id="Methods" tiptext="Methods for class StringTextLineFactory" helpurl="flashx.textLayout.factory:StringTextLineFactory">
                <string name="StringTextLineFactory" object="[flashx.textLayout.factory.StringTextLineFactory]" text="new StringTextLineFactory(%[configuration:flashx.textLayout.elements:IConfiguration=null]%):void" constructor="true" tiptext="Creates a StringTextLineFactory object." version="1.5" playername="" helpurl="flashx.textLayout.factory:StringTextLineFactory:StringTextLineFactory"/>
                <string name="createTextLines" object="[flashx.textLayout.factory.StringTextLineFactory]" text=".createTextLines(%callback:Function%):void" tiptext="Creates TextLine objects using the text currently assigned to this factory object." version="1.5" playername="" helpurl="flashx.textLayout.factory:StringTextLineFactory:createTextLines"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class StringTextLineFactory" helpurl="flashx.textLayout.factory:StringTextLineFactory">
                <string name="configuration" object="[flashx.textLayout.factory.StringTextLineFactory]" text=".configuration" tiptext="The configuration used by the internal TextFlow object." version="" playername="" helpurl="flashx.textLayout.factory:StringTextLineFactory:configuration:get"/>
                <string name="defaultConfiguration" object="[flashx.textLayout.factory.StringTextLineFactory]" text=".defaultConfiguration" tiptext="The default configuration used by this factory if none is specified." version="" playername="" helpurl="flashx.textLayout.factory:StringTextLineFactory:defaultConfiguration:get"/>
                <string name="paragraphFormat" object="[flashx.textLayout.factory.StringTextLineFactory]" text=".paragraphFormat" tiptext="The paragraph format." version="" playername="" helpurl="flashx.textLayout.factory:StringTextLineFactory:paragraphFormat:get"/>
                <string name="spanFormat" object="[flashx.textLayout.factory.StringTextLineFactory]" text=".spanFormat" tiptext="The character format." version="" playername="" helpurl="flashx.textLayout.factory:StringTextLineFactory:spanFormat:get"/>
                <string name="textFlowFormat" object="[flashx.textLayout.factory.StringTextLineFactory]" text=".textFlowFormat" tiptext="The text flow format." version="" playername="" helpurl="flashx.textLayout.factory:StringTextLineFactory:textFlowFormat:get"/>
                <string name="text" object="[flashx.textLayout.factory.StringTextLineFactory]" text=".text" tiptext="The text to convert into TextLine objects." version="" playername="" helpurl="flashx.textLayout.factory:StringTextLineFactory:text:get"/>
            </folder>
        </folder>
        <folder name="TextFlowTextLineFactory" id="[flashx.textLayout.factory.TextFlowTextLineFactory]" sort="true" index="true" asAncestors="flashx.textLayout.factory:TextLineFactoryBase,Object" tiptext="The TextFlowTextLineFactory class provides a simple way to create TextLines for displaying text from a text flow." helpurl="flashx.textLayout.factory:TextFlowTextLineFactory">
            <folder name="Methods" id="Methods" tiptext="Methods for class TextFlowTextLineFactory" helpurl="flashx.textLayout.factory:TextFlowTextLineFactory">
                <string name="TextFlowTextLineFactory" object="[flashx.textLayout.factory.TextFlowTextLineFactory]" text="new TextFlowTextLineFactory(%%):void" constructor="true" tiptext="Creates a TextFlowTextLineFactory object." version="1.5" playername="" helpurl="flashx.textLayout.factory:TextFlowTextLineFactory:TextFlowTextLineFactory"/>
                <string name="createTextLines" object="[flashx.textLayout.factory.TextFlowTextLineFactory]" text=".createTextLines(%callback:Function,textFlow:flashx.textLayout.elements:TextFlow%):void" tiptext="Creates TextLine objects from the specified text flow." version="1.5" playername="" helpurl="flashx.textLayout.factory:TextFlowTextLineFactory:createTextLines"/>
            </folder>
        </folder>
        <folder name="TextLineFactoryBase" id="[flashx.textLayout.factory.TextLineFactoryBase]" sort="true" index="true" asAncestors="Object" tiptext="The TextLineFactoryBase class serves as the base class for the Text Layout Framework text line factories." helpurl="flashx.textLayout.factory:TextLineFactoryBase">
            <folder name="Methods" id="Methods" tiptext="Methods for class TextLineFactoryBase" helpurl="flashx.textLayout.factory:TextLineFactoryBase">
                <string name="TextLineFactoryBase" object="[flashx.textLayout.factory.TextLineFactoryBase]" text="new TextLineFactoryBase(%%):void" constructor="true" tiptext="Base-class constructor for text line factories." version="1.5" playername="" helpurl="flashx.textLayout.factory:TextLineFactoryBase:TextLineFactoryBase"/>
                <string name="getContentBounds" object="[flashx.textLayout.factory.TextLineFactoryBase]" text=".getContentBounds(%%):flash.geom:Rectangle" tiptext="The smallest rectangle in which the layed-out content fits." version="1.5" playername="" helpurl="flashx.textLayout.factory:TextLineFactoryBase:getContentBounds"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class TextLineFactoryBase" helpurl="flashx.textLayout.factory:TextLineFactoryBase">
                <string name="compositionBounds" object="[flashx.textLayout.factory.TextLineFactoryBase]" text=".compositionBounds" tiptext="The rectangle within which text lines are created." version="" playername="" helpurl="flashx.textLayout.factory:TextLineFactoryBase:compositionBounds:get"/>
                <string name="horizontalScrollPolicy" object="[flashx.textLayout.factory.TextLineFactoryBase]" text=".horizontalScrollPolicy" tiptext="Specifies how lines are created when the composition bounds are not large enough." version="" playername="" helpurl="flashx.textLayout.factory:TextLineFactoryBase:horizontalScrollPolicy:get"/>
                <string name="isTruncated" object="[flashx.textLayout.factory.TextLineFactoryBase]" text=".isTruncated" tiptext="Indicates whether text was truncated when lines were last created." version="" playername="" helpurl="flashx.textLayout.factory:TextLineFactoryBase:isTruncated:get"/>
                <string name="swfContext" object="[flashx.textLayout.factory.TextLineFactoryBase]" text=".swfContext" tiptext="The ISWFContext instance used to make FTE calls as needed." version="" playername="" helpurl="flashx.textLayout.factory:TextLineFactoryBase:swfContext:get"/>
                <string name="truncationOptions" object="[flashx.textLayout.factory.TextLineFactoryBase]" text=".truncationOptions" tiptext="Specifies the options for truncating the text if it doesn&apos;t fit in the composition bounds." version="" playername="" helpurl="flashx.textLayout.factory:TextLineFactoryBase:truncationOptions:get"/>
                <string name="verticalScrollPolicy" object="[flashx.textLayout.factory.TextLineFactoryBase]" text=".verticalScrollPolicy" tiptext="Specifies how lines are created when the composition bounds are not large enough." version="" playername="" helpurl="flashx.textLayout.factory:TextLineFactoryBase:verticalScrollPolicy:get"/>
            </folder>
        </folder>
        <folder name="TruncationOptions" id="[flashx.textLayout.factory.TruncationOptions]" sort="true" index="true" asAncestors="Object" tiptext="The TruncationOptions class specifies options for limiting the number of lines of text created by a text line factory and for indicating when lines have been left out." helpurl="flashx.textLayout.factory:TruncationOptions">
            <folder name="Methods" id="Methods" tiptext="Methods for class TruncationOptions" helpurl="flashx.textLayout.factory:TruncationOptions">
                <string name="TruncationOptions" object="[flashx.textLayout.factory.TruncationOptions]" text="new TruncationOptions(%[truncationIndicator:String=unknown,lineCountLimit:int=unknown,truncationIndicatorFormat:flashx.textLayout.formats:ITextLayoutFormat=null]%)" constructor="true" tiptext="Creates a TruncationOptions object." version="1.5" playername="" helpurl="flashx.textLayout.factory:TruncationOptions:TruncationOptions"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class TruncationOptions" helpurl="flashx.textLayout.factory:TruncationOptions">
                <string name="HORIZONTAL_ELLIPSIS" object="[flashx.textLayout.factory.TruncationOptions]" text="TruncationOptions.HORIZONTAL_ELLIPSIS" constant="true" tiptext="Defines the truncationIndicator property value, \u2026, that represents a horizontal ellipsis." version="" playername="" helpurl="flashx.textLayout.factory:TruncationOptions:HORIZONTAL_ELLIPSIS"/>
                <string name="NO_LINE_COUNT_LIMIT" object="[flashx.textLayout.factory.TruncationOptions]" text="TruncationOptions.NO_LINE_COUNT_LIMIT" constant="true" tiptext="Defines the lineCountLimit property value, -1, that represents no limit." version="" playername="" helpurl="flashx.textLayout.factory:TruncationOptions:NO_LINE_COUNT_LIMIT"/>
                <string name="lineCountLimit" object="[flashx.textLayout.factory.TruncationOptions]" text=".lineCountLimit" tiptext="The maximum number of lines to create." version="" playername="" helpurl="flashx.textLayout.factory:TruncationOptions:lineCountLimit:get"/>
                <string name="truncationIndicatorFormat" object="[flashx.textLayout.factory.TruncationOptions]" text=".truncationIndicatorFormat" tiptext="The style applied to the truncation indicator string." version="" playername="" helpurl="flashx.textLayout.factory:TruncationOptions:truncationIndicatorFormat:get"/>
                <string name="truncationIndicator" object="[flashx.textLayout.factory.TruncationOptions]" text=".truncationIndicator" tiptext="A string used to indicate that content could not be fully displayed because of limits on the number of lines." version="" playername="" helpurl="flashx.textLayout.factory:TruncationOptions:truncationIndicator:get"/>
            </folder>
        </folder>
    </folder>
        <folder name="flashx.textLayout.formats" id="flashx.textLayout.formats" sort="true" tiptext="Classes for package flashx.textLayout.formats" helpurl="flashx.textLayout.formats">
        <folder name="BackgroundColor" id="[flashx.textLayout.formats.BackgroundColor]" sort="true" index="true" asAncestors="Object" tiptext="Defines a constant for specifying that the value of the backgroundColor property of the TextLayoutFormat class is &quot;transparent&quot;." helpurl="flashx.textLayout.formats:BackgroundColor">
            <folder name="Properties" id="Properties" tiptext="Properties for class BackgroundColor" helpurl="flashx.textLayout.formats:BackgroundColor">
                <string name="TRANSPARENT" object="[flashx.textLayout.formats.BackgroundColor]" text="BackgroundColor.TRANSPARENT" constant="true" tiptext="Transparent - no background color is applied." version="" playername="" helpurl="flashx.textLayout.formats:BackgroundColor:TRANSPARENT"/>
            </folder>
        </folder>
        <folder name="BaselineOffset" id="[flashx.textLayout.formats.BaselineOffset]" sort="true" index="true" asAncestors="Object" tiptext="Defines values for the firstBaselineOffset property of the TextLayoutFormat and ContainerFormattedElement classes." helpurl="flashx.textLayout.formats:BaselineOffset">
            <folder name="Properties" id="Properties" tiptext="Properties for class BaselineOffset" helpurl="flashx.textLayout.formats:BaselineOffset">
                <string name="ASCENT" object="[flashx.textLayout.formats.BaselineOffset]" text="BaselineOffset.ASCENT" constant="true" tiptext="Specifies an offset equal to the ascent of the line, that is, the ascent of the tallest font in the line, accounting for inline graphics as having the bottom of the graphic on the baseline." version="" playername="" helpurl="flashx.textLayout.formats:BaselineOffset:ASCENT"/>
                <string name="AUTO" object="[flashx.textLayout.formats.BaselineOffset]" text="BaselineOffset.AUTO" constant="true" tiptext="Aligns the ascent of the line with the container top inset." version="" playername="" helpurl="flashx.textLayout.formats:BaselineOffset:AUTO"/>
                <string name="LINE_HEIGHT" object="[flashx.textLayout.formats.BaselineOffset]" text="BaselineOffset.LINE_HEIGHT" constant="true" tiptext="Specifies an offset equal to the height of the line." version="" playername="" helpurl="flashx.textLayout.formats:BaselineOffset:LINE_HEIGHT"/>
            </folder>
        </folder>
        <folder name="BaselineShift" id="[flashx.textLayout.formats.BaselineShift]" sort="true" index="true" asAncestors="Object" tiptext="Defines constants for specifying subscript or superscript in the baselineShift property of the TextLayoutFormat class." helpurl="flashx.textLayout.formats:BaselineShift">
            <folder name="Properties" id="Properties" tiptext="Properties for class BaselineShift" helpurl="flashx.textLayout.formats:BaselineShift">
                <string name="SUBSCRIPT" object="[flashx.textLayout.formats.BaselineShift]" text="BaselineShift.SUBSCRIPT" constant="true" tiptext="Shifts baseline to the current subscript position." version="" playername="" helpurl="flashx.textLayout.formats:BaselineShift:SUBSCRIPT"/>
                <string name="SUPERSCRIPT" object="[flashx.textLayout.formats.BaselineShift]" text="BaselineShift.SUPERSCRIPT" constant="true" tiptext="Shifts baseline to the current superscript position." version="" playername="" helpurl="flashx.textLayout.formats:BaselineShift:SUPERSCRIPT"/>
            </folder>
        </folder>
        <folder name="BlockProgression" id="[flashx.textLayout.formats.BlockProgression]" sort="true" index="true" asAncestors="Object" tiptext="Defines values for the blockProgression property of the TextLayouFormat class." helpurl="flashx.textLayout.formats:BlockProgression">
            <folder name="Properties" id="Properties" tiptext="Properties for class BlockProgression" helpurl="flashx.textLayout.formats:BlockProgression">
                <string name="RL" object="[flashx.textLayout.formats.BlockProgression]" text="BlockProgression.RL" constant="true" tiptext="Specifies right to left block progression." version="" playername="" helpurl="flashx.textLayout.formats:BlockProgression:RL"/>
                <string name="TB" object="[flashx.textLayout.formats.BlockProgression]" text="BlockProgression.TB" constant="true" tiptext="Specifies top to bottom block progression." version="" playername="" helpurl="flashx.textLayout.formats:BlockProgression:TB"/>
            </folder>
        </folder>
        <folder name="Direction" id="[flashx.textLayout.formats.Direction]" sort="true" index="true" asAncestors="Object" tiptext="Defines values for setting the direction property of the TextLayoutFormat class." helpurl="flashx.textLayout.formats:Direction">
            <folder name="Properties" id="Properties" tiptext="Properties for class Direction" helpurl="flashx.textLayout.formats:Direction">
                <string name="LTR" object="[flashx.textLayout.formats.Direction]" text="Direction.LTR" constant="true" tiptext="Specifies left-to-right direction for text." version="" playername="" helpurl="flashx.textLayout.formats:Direction:LTR"/>
                <string name="RTL" object="[flashx.textLayout.formats.Direction]" text="Direction.RTL" constant="true" tiptext="Specifies right-to-left direction for text." version="" playername="" helpurl="flashx.textLayout.formats:Direction:RTL"/>
            </folder>
        </folder>
        <folder name="FormatValue" id="[flashx.textLayout.formats.FormatValue]" sort="true" index="true" asAncestors="Object" tiptext="Defines values for specifying that a formatting property is to inherit its parent&apos;s value or have it&apos;s value generated automatically." helpurl="flashx.textLayout.formats:FormatValue">
            <folder name="Properties" id="Properties" tiptext="Properties for class FormatValue" helpurl="flashx.textLayout.formats:FormatValue">
                <string name="AUTO" object="[flashx.textLayout.formats.FormatValue]" text="FormatValue.AUTO" constant="true" tiptext="Specifies that a property&apos;s value is automatically generated." version="" playername="" helpurl="flashx.textLayout.formats:FormatValue:AUTO"/>
                <string name="INHERIT" object="[flashx.textLayout.formats.FormatValue]" text="FormatValue.INHERIT" constant="true" tiptext="Specifies that a property is to inherit its parent&apos;s value." version="" playername="" helpurl="flashx.textLayout.formats:FormatValue:INHERIT"/>
            </folder>
        </folder>
        <folder name="ITabStopFormat" id="[flashx.textLayout.formats.ITabStopFormat]" sort="true" index="true" tiptext="This interface provides read access to tab stop-related properties." helpurl="flashx.textLayout.formats:ITabStopFormat">
            <folder name="Properties" id="Properties" tiptext="Properties for class ITabStopFormat" helpurl="flashx.textLayout.formats:ITabStopFormat">
                <string name="alignment" object="[flashx.textLayout.formats.ITabStopFormat]" text=".alignment" tiptext="The tab alignment for this tab stop." version="" playername="" helpurl="flashx.textLayout.formats:ITabStopFormat:alignment:get"/>
                <string name="decimalAlignmentToken" object="[flashx.textLayout.formats.ITabStopFormat]" text=".decimalAlignmentToken" tiptext="The alignment token to be used if the alignment is DECIMAL." version="" playername="" helpurl="flashx.textLayout.formats:ITabStopFormat:decimalAlignmentToken:get"/>
                <string name="position" object="[flashx.textLayout.formats.ITabStopFormat]" text=".position" tiptext="The position of the tab stop, in pixels, relative to the start of the line." version="" playername="" helpurl="flashx.textLayout.formats:ITabStopFormat:position:get"/>
            </folder>
        </folder>
        <folder name="ITextLayoutFormat" id="[flashx.textLayout.formats.ITextLayoutFormat]" sort="true" index="true" tiptext="This interface provides read access to FlowElements-related properties." helpurl="flashx.textLayout.formats:ITextLayoutFormat">
            <folder name="Properties" id="Properties" tiptext="Properties for class ITextLayoutFormat" helpurl="flashx.textLayout.formats:ITextLayoutFormat">
                <string name="alignmentBaseline" object="[flashx.textLayout.formats.ITextLayoutFormat]" text=".alignmentBaseline" tiptext="Specifies the baseline to which the dominant baseline aligns." version="" playername="" helpurl="flashx.textLayout.formats:ITextLayoutFormat:alignmentBaseline:get"/>
                <string name="backgroundAlpha" object="[flashx.textLayout.formats.ITextLayoutFormat]" text=".backgroundAlpha" tiptext="Alpha (transparency) value for the background (adopts default value if undefined during cascade)." version="" playername="" helpurl="flashx.textLayout.formats:ITextLayoutFormat:backgroundAlpha:get"/>
                <string name="backgroundColor" object="[flashx.textLayout.formats.ITextLayoutFormat]" text=".backgroundColor" tiptext="Background color of the text (adopts default value if undefined during cascade)." version="" playername="" helpurl="flashx.textLayout.formats:ITextLayoutFormat:backgroundColor:get"/>
                <string name="baselineShift" object="[flashx.textLayout.formats.ITextLayoutFormat]" text=".baselineShift" tiptext="Amount to shift the baseline from the dominantBaseline value." version="" playername="" helpurl="flashx.textLayout.formats:ITextLayoutFormat:baselineShift:get"/>
                <string name="blockProgression" object="[flashx.textLayout.formats.ITextLayoutFormat]" text=".blockProgression" tiptext="Specifies a vertical or horizontal progression of line placement." version="" playername="" helpurl="flashx.textLayout.formats:ITextLayoutFormat:blockProgression:get"/>
                <string name="breakOpportunity" object="[flashx.textLayout.formats.ITextLayoutFormat]" text=".breakOpportunity" tiptext="Controls where lines are allowed to break when breaking wrapping text into multiple lines." version="" playername="" helpurl="flashx.textLayout.formats:ITextLayoutFormat:breakOpportunity:get"/>
                <string name="cffHinting" object="[flashx.textLayout.formats.ITextLayoutFormat]" text=".cffHinting" tiptext="The type of CFF hinting used for this text." version="" playername="" helpurl="flashx.textLayout.formats:ITextLayoutFormat:cffHinting:get"/>
                <string name="color" object="[flashx.textLayout.formats.ITextLayoutFormat]" text=".color" tiptext="Color of the text." version="" playername="" helpurl="flashx.textLayout.formats:ITextLayoutFormat:color:get"/>
                <string name="columnCount" object="[flashx.textLayout.formats.ITextLayoutFormat]" text=".columnCount" tiptext="Number of text columns (adopts default value if undefined during cascade)." version="" playername="" helpurl="flashx.textLayout.formats:ITextLayoutFormat:columnCount:get"/>
                <string name="columnGap" object="[flashx.textLayout.formats.ITextLayoutFormat]" text=".columnGap" tiptext="Specifies the amount of gutter space, in pixels, to leave between the columns (adopts default value if undefined during cascade)." version="" playername="" helpurl="flashx.textLayout.formats:ITextLayoutFormat:columnGap:get"/>
                <string name="columnWidth" object="[flashx.textLayout.formats.ITextLayoutFormat]" text=".columnWidth" tiptext="Column width in pixels (adopts default value if undefined during cascade)." version="" playername="" helpurl="flashx.textLayout.formats:ITextLayoutFormat:columnWidth:get"/>
                <string name="digitCase" object="[flashx.textLayout.formats.ITextLayoutFormat]" text=".digitCase" tiptext="The type of digit case used for this text." version="" playername="" helpurl="flashx.textLayout.formats:ITextLayoutFormat:digitCase:get"/>
                <string name="digitWidth" object="[flashx.textLayout.formats.ITextLayoutFormat]" text=".digitWidth" tiptext="Type of digit width used for this text." version="" playername="" helpurl="flashx.textLayout.formats:ITextLayoutFormat:digitWidth:get"/>
                <string name="direction" object="[flashx.textLayout.formats.ITextLayoutFormat]" text=".direction" tiptext="Specifies the default bidirectional embedding level of the text in the text block." version="" playername="" helpurl="flashx.textLayout.formats:ITextLayoutFormat:direction:get"/>
                <string name="dominantBaseline" object="[flashx.textLayout.formats.ITextLayoutFormat]" text=".dominantBaseline" tiptext="Specifies which element baseline snaps to the alignmentBaseline to determine the vertical position of the element on the line." version="" playername="" helpurl="flashx.textLayout.formats:ITextLayoutFormat:dominantBaseline:get"/>
                <string name="firstBaselineOffset" object="[flashx.textLayout.formats.ITextLayoutFormat]" text=".firstBaselineOffset" tiptext="Specifies the baseline position of the first line in the container." version="" playername="" helpurl="flashx.textLayout.formats:ITextLayoutFormat:firstBaselineOffset:get"/>
                <string name="fontFamily" object="[flashx.textLayout.formats.ITextLayoutFormat]" text=".fontFamily" tiptext="The name of the font to use, or a comma-separated list of font names." version="" playername="" helpurl="flashx.textLayout.formats:ITextLayoutFormat:fontFamily:get"/>
                <string name="fontLookup" object="[flashx.textLayout.formats.ITextLayoutFormat]" text=".fontLookup" tiptext="Font lookup to use." version="" playername="" helpurl="flashx.textLayout.formats:ITextLayoutFormat:fontLookup:get"/>
                <string name="fontSize" object="[flashx.textLayout.formats.ITextLayoutFormat]" text=".fontSize" tiptext="The size of the text in pixels." version="" playername="" helpurl="flashx.textLayout.formats:ITextLayoutFormat:fontSize:get"/>
                <string name="fontStyle" object="[flashx.textLayout.formats.ITextLayoutFormat]" text=".fontStyle" tiptext="Style of text." version="" playername="" helpurl="flashx.textLayout.formats:ITextLayoutFormat:fontStyle:get"/>
                <string name="fontWeight" object="[flashx.textLayout.formats.ITextLayoutFormat]" text=".fontWeight" tiptext="Weight of text." version="" playername="" helpurl="flashx.textLayout.formats:ITextLayoutFormat:fontWeight:get"/>
                <string name="justificationRule" object="[flashx.textLayout.formats.ITextLayoutFormat]" text=".justificationRule" tiptext="Rule used to justify text in a paragraph." version="" playername="" helpurl="flashx.textLayout.formats:ITextLayoutFormat:justificationRule:get"/>
                <string name="justificationStyle" object="[flashx.textLayout.formats.ITextLayoutFormat]" text=".justificationStyle" tiptext="The style used for justification of the paragraph." version="" playername="" helpurl="flashx.textLayout.formats:ITextLayoutFormat:justificationStyle:get"/>
                <string name="kerning" object="[flashx.textLayout.formats.ITextLayoutFormat]" text=".kerning" tiptext="Kerning adjusts the pixels between certain character pairs to improve readability." version="" playername="" helpurl="flashx.textLayout.formats:ITextLayoutFormat:kerning:get"/>
                <string name="leadingModel" object="[flashx.textLayout.formats.ITextLayoutFormat]" text=".leadingModel" tiptext="Specifies the leading model, which is a combination of leading basis and leading direction." version="" playername="" helpurl="flashx.textLayout.formats:ITextLayoutFormat:leadingModel:get"/>
                <string name="ligatureLevel" object="[flashx.textLayout.formats.ITextLayoutFormat]" text=".ligatureLevel" tiptext="Controls which of the ligatures that are defined in the font may be used in the text." version="" playername="" helpurl="flashx.textLayout.formats:ITextLayoutFormat:ligatureLevel:get"/>
                <string name="lineBreak" object="[flashx.textLayout.formats.ITextLayoutFormat]" text=".lineBreak" tiptext="Controls word wrapping within the container (adopts default value if undefined during cascade)." version="" playername="" helpurl="flashx.textLayout.formats:ITextLayoutFormat:lineBreak:get"/>
                <string name="lineHeight" object="[flashx.textLayout.formats.ITextLayoutFormat]" text=".lineHeight" tiptext="Leading controls for the text." version="" playername="" helpurl="flashx.textLayout.formats:ITextLayoutFormat:lineHeight:get"/>
                <string name="lineThrough" object="[flashx.textLayout.formats.ITextLayoutFormat]" text=".lineThrough" tiptext="If true, applies strikethrough, a line drawn through the middle of the text." version="" playername="" helpurl="flashx.textLayout.formats:ITextLayoutFormat:lineThrough:get"/>
                <string name="locale" object="[flashx.textLayout.formats.ITextLayoutFormat]" text=".locale" tiptext="The locale of the text." version="" playername="" helpurl="flashx.textLayout.formats:ITextLayoutFormat:locale:get"/>
                <string name="paddingBottom" object="[flashx.textLayout.formats.ITextLayoutFormat]" text=".paddingBottom" tiptext="Botttom inset in pixels (adopts default value if undefined during cascade)." version="" playername="" helpurl="flashx.textLayout.formats:ITextLayoutFormat:paddingBottom:get"/>
                <string name="paddingLeft" object="[flashx.textLayout.formats.ITextLayoutFormat]" text=".paddingLeft" tiptext="Left inset in pixels (adopts default value if undefined during cascade)." version="" playername="" helpurl="flashx.textLayout.formats:ITextLayoutFormat:paddingLeft:get"/>
                <string name="paddingRight" object="[flashx.textLayout.formats.ITextLayoutFormat]" text=".paddingRight" tiptext="Right inset in pixels (adopts default value if undefined during cascade)." version="" playername="" helpurl="flashx.textLayout.formats:ITextLayoutFormat:paddingRight:get"/>
                <string name="paddingTop" object="[flashx.textLayout.formats.ITextLayoutFormat]" text=".paddingTop" tiptext="Top inset in pixels (adopts default value if undefined during cascade)." version="" playername="" helpurl="flashx.textLayout.formats:ITextLayoutFormat:paddingTop:get"/>
                <string name="paragraphEndIndent" object="[flashx.textLayout.formats.ITextLayoutFormat]" text=".paragraphEndIndent" tiptext="A Number that specifies, in pixels, the amount to indent the paragraph&apos;s end edge." version="" playername="" helpurl="flashx.textLayout.formats:ITextLayoutFormat:paragraphEndIndent:get"/>
                <string name="paragraphSpaceAfter" object="[flashx.textLayout.formats.ITextLayoutFormat]" text=".paragraphSpaceAfter" tiptext="A Number that specifies the amount of space, in pixels, to leave after the paragraph." version="" playername="" helpurl="flashx.textLayout.formats:ITextLayoutFormat:paragraphSpaceAfter:get"/>
                <string name="paragraphSpaceBefore" object="[flashx.textLayout.formats.ITextLayoutFormat]" text=".paragraphSpaceBefore" tiptext="A Number that specifies the amount of space, in pixels, to leave before the paragraph." version="" playername="" helpurl="flashx.textLayout.formats:ITextLayoutFormat:paragraphSpaceBefore:get"/>
                <string name="paragraphStartIndent" object="[flashx.textLayout.formats.ITextLayoutFormat]" text=".paragraphStartIndent" tiptext="A Number that specifies, in pixels, the amount to indent the paragraph&apos;s start edge." version="" playername="" helpurl="flashx.textLayout.formats:ITextLayoutFormat:paragraphStartIndent:get"/>
                <string name="renderingMode" object="[flashx.textLayout.formats.ITextLayoutFormat]" text=".renderingMode" tiptext="The rendering mode used for this text." version="" playername="" helpurl="flashx.textLayout.formats:ITextLayoutFormat:renderingMode:get"/>
                <string name="tabStops" object="[flashx.textLayout.formats.ITextLayoutFormat]" text=".tabStops" tiptext="Specifies the tab stops associated with the paragraph." version="" playername="" helpurl="flashx.textLayout.formats:ITextLayoutFormat:tabStops:get"/>
                <string name="textAlignLast" object="[flashx.textLayout.formats.ITextLayoutFormat]" text=".textAlignLast" tiptext="Alignment of the last (or only) line in the paragraph relative to the container in justified text." version="" playername="" helpurl="flashx.textLayout.formats:ITextLayoutFormat:textAlignLast:get"/>
                <string name="textAlign" object="[flashx.textLayout.formats.ITextLayoutFormat]" text=".textAlign" tiptext="Alignment of lines in the paragraph relative to the container." version="" playername="" helpurl="flashx.textLayout.formats:ITextLayoutFormat:textAlign:get"/>
                <string name="textAlpha" object="[flashx.textLayout.formats.ITextLayoutFormat]" text=".textAlpha" tiptext="Alpha (transparency) value for the text." version="" playername="" helpurl="flashx.textLayout.formats:ITextLayoutFormat:textAlpha:get"/>
                <string name="textDecoration" object="[flashx.textLayout.formats.ITextLayoutFormat]" text=".textDecoration" tiptext="Decoration on text." version="" playername="" helpurl="flashx.textLayout.formats:ITextLayoutFormat:textDecoration:get"/>
                <string name="textIndent" object="[flashx.textLayout.formats.ITextLayoutFormat]" text=".textIndent" tiptext="A Number that specifies, in pixels, the amount to indent the first line of the paragraph." version="" playername="" helpurl="flashx.textLayout.formats:ITextLayoutFormat:textIndent:get"/>
                <string name="textJustify" object="[flashx.textLayout.formats.ITextLayoutFormat]" text=".textJustify" tiptext="Specifies options for justifying text." version="" playername="" helpurl="flashx.textLayout.formats:ITextLayoutFormat:textJustify:get"/>
                <string name="textRotation" object="[flashx.textLayout.formats.ITextLayoutFormat]" text=".textRotation" tiptext="Determines the number of degrees to rotate this text." version="" playername="" helpurl="flashx.textLayout.formats:ITextLayoutFormat:textRotation:get"/>
                <string name="trackingLeft" object="[flashx.textLayout.formats.ITextLayoutFormat]" text=".trackingLeft" tiptext="Number in pixels (or percent of fontSize, like 120%) indicating the amount of tracking (manual kerning) to be applied to the left of each character." version="" playername="" helpurl="flashx.textLayout.formats:ITextLayoutFormat:trackingLeft:get"/>
                <string name="trackingRight" object="[flashx.textLayout.formats.ITextLayoutFormat]" text=".trackingRight" tiptext="Number in pixels (or percent of fontSize, like 120%) indicating the amount of tracking (manual kerning) to be applied to the right of each character." version="" playername="" helpurl="flashx.textLayout.formats:ITextLayoutFormat:trackingRight:get"/>
                <string name="typographicCase" object="[flashx.textLayout.formats.ITextLayoutFormat]" text=".typographicCase" tiptext="The type of typographic case used for this text." version="" playername="" helpurl="flashx.textLayout.formats:ITextLayoutFormat:typographicCase:get"/>
                <string name="verticalAlign" object="[flashx.textLayout.formats.ITextLayoutFormat]" text=".verticalAlign" tiptext="Vertical alignment or justification (adopts default value if undefined during cascade)." version="" playername="" helpurl="flashx.textLayout.formats:ITextLayoutFormat:verticalAlign:get"/>
                <string name="whiteSpaceCollapse" object="[flashx.textLayout.formats.ITextLayoutFormat]" text=".whiteSpaceCollapse" tiptext="Collapses or preserves whitespace when importing text into a TextFlow." version="" playername="" helpurl="flashx.textLayout.formats:ITextLayoutFormat:whiteSpaceCollapse:get"/>
            </folder>
        </folder>
        <folder name="JustificationRule" id="[flashx.textLayout.formats.JustificationRule]" sort="true" index="true" asAncestors="Object" tiptext="Defines values for setting the justificationRule property of the TextLayoutFormat class." helpurl="flashx.textLayout.formats:JustificationRule">
            <folder name="Properties" id="Properties" tiptext="Properties for class JustificationRule" helpurl="flashx.textLayout.formats:JustificationRule">
                <string name="EAST_ASIAN" object="[flashx.textLayout.formats.JustificationRule]" text="JustificationRule.EAST_ASIAN" constant="true" tiptext="Specifies East Asian justification rules." version="" playername="" helpurl="flashx.textLayout.formats:JustificationRule:EAST_ASIAN"/>
                <string name="SPACE" object="[flashx.textLayout.formats.JustificationRule]" text="JustificationRule.SPACE" constant="true" tiptext="Specifies justification for Latin and other horizontal scripts that divide words using spaces." version="" playername="" helpurl="flashx.textLayout.formats:JustificationRule:SPACE"/>
            </folder>
        </folder>
        <folder name="LeadingModel" id="[flashx.textLayout.formats.LeadingModel]" sort="true" index="true" asAncestors="Object" tiptext="Defines values for setting the leadingModel property of the TextLayoutFormat class, composed of valid combinations of leading basis and leading direction." helpurl="flashx.textLayout.formats:LeadingModel">
            <folder name="Properties" id="Properties" tiptext="Properties for class LeadingModel" helpurl="flashx.textLayout.formats:LeadingModel">
                <string name="APPROXIMATE_TEXT_FIELD" object="[flashx.textLayout.formats.LeadingModel]" text="LeadingModel.APPROXIMATE_TEXT_FIELD" constant="true" tiptext="Specifies a leading model that approximates the line spacing behavior of TextField." version="" playername="" helpurl="flashx.textLayout.formats:LeadingModel:APPROXIMATE_TEXT_FIELD"/>
                <string name="ASCENT_DESCENT_UP" object="[flashx.textLayout.formats.LeadingModel]" text="LeadingModel.ASCENT_DESCENT_UP" constant="true" tiptext="Specifies that leading basis is ASCENT/DESCENT and leading direction is UP." version="" playername="" helpurl="flashx.textLayout.formats:LeadingModel:ASCENT_DESCENT_UP"/>
                <string name="AUTO" object="[flashx.textLayout.formats.LeadingModel]" text="LeadingModel.AUTO" constant="true" tiptext="Specifies that leading model is chosen automatically based on the paragraph&apos;s locale property." version="" playername="" helpurl="flashx.textLayout.formats:LeadingModel:AUTO"/>
                <string name="IDEOGRAPHIC_CENTER_DOWN" object="[flashx.textLayout.formats.LeadingModel]" text="LeadingModel.IDEOGRAPHIC_CENTER_DOWN" constant="true" tiptext="Specifies that leading basis is IDEOGRAPHIC_CENTER and leading direction is down." version="" playername="" helpurl="flashx.textLayout.formats:LeadingModel:IDEOGRAPHIC_CENTER_DOWN"/>
                <string name="IDEOGRAPHIC_CENTER_UP" object="[flashx.textLayout.formats.LeadingModel]" text="LeadingModel.IDEOGRAPHIC_CENTER_UP" constant="true" tiptext="Specifies that leading basis is IDEOGRAPHIC_CENTER and leading direction is UP." version="" playername="" helpurl="flashx.textLayout.formats:LeadingModel:IDEOGRAPHIC_CENTER_UP"/>
                <string name="IDEOGRAPHIC_TOP_DOWN" object="[flashx.textLayout.formats.LeadingModel]" text="LeadingModel.IDEOGRAPHIC_TOP_DOWN" constant="true" tiptext="Specifies that leading basis is IDEOGRAPHIC_TOP and leading direction is DOWN." version="" playername="" helpurl="flashx.textLayout.formats:LeadingModel:IDEOGRAPHIC_TOP_DOWN"/>
                <string name="IDEOGRAPHIC_TOP_UP" object="[flashx.textLayout.formats.LeadingModel]" text="LeadingModel.IDEOGRAPHIC_TOP_UP" constant="true" tiptext="Specifies that leading basis is IDEOGRAPHIC_TOP and leading direction is UP." version="" playername="" helpurl="flashx.textLayout.formats:LeadingModel:IDEOGRAPHIC_TOP_UP"/>
                <string name="ROMAN_UP" object="[flashx.textLayout.formats.LeadingModel]" text="LeadingModel.ROMAN_UP" constant="true" tiptext="Specifies that leading basis is ROMAN and leading direction is UP." version="" playername="" helpurl="flashx.textLayout.formats:LeadingModel:ROMAN_UP"/>
            </folder>
        </folder>
        <folder name="LineBreak" id="[flashx.textLayout.formats.LineBreak]" sort="true" index="true" asAncestors="Object" tiptext="Defines values for setting the lineBreak property of TextLayoutFormat to specify how lines are broken within wrapping text." helpurl="flashx.textLayout.formats:LineBreak">
            <folder name="Properties" id="Properties" tiptext="Properties for class LineBreak" helpurl="flashx.textLayout.formats:LineBreak">
                <string name="EXPLICIT" object="[flashx.textLayout.formats.LineBreak]" text="LineBreak.EXPLICIT" constant="true" tiptext="Specifies that lines break only at explicit return or line feed characters." version="" playername="" helpurl="flashx.textLayout.formats:LineBreak:EXPLICIT"/>
                <string name="TO_FIT" object="[flashx.textLayout.formats.LineBreak]" text="LineBreak.TO_FIT" constant="true" tiptext="Specifies that lines wrap to fit the container width." version="" playername="" helpurl="flashx.textLayout.formats:LineBreak:TO_FIT"/>
            </folder>
        </folder>
        <folder name="TabStopFormat" id="[flashx.textLayout.formats.TabStopFormat]" sort="true" index="true" asAncestors="Object" tiptext="The TabStopFormat class represents the properties of a tab stop in a paragraph." helpurl="flashx.textLayout.formats:TabStopFormat">
            <folder name="Methods" id="Methods" tiptext="Methods for class TabStopFormat" helpurl="flashx.textLayout.formats:TabStopFormat">
                <string name="TabStopFormat" object="[flashx.textLayout.formats.TabStopFormat]" text="new TabStopFormat(%[initialValues:flashx.textLayout.formats:ITabStopFormat=null]%)" constructor="true" tiptext="Creates a new TabStopFormat object." version="1.5" playername="" helpurl="flashx.textLayout.formats:TabStopFormat:TabStopFormat"/>
                <string name="apply" object="[flashx.textLayout.formats.TabStopFormat]" text=".apply(%incoming:flashx.textLayout.formats:ITabStopFormat%):void" tiptext="Replaces property values in this TabStopFormat object with the values of properties that are set in the incoming ITabStopFormat instance." version="1.5" playername="" helpurl="flashx.textLayout.formats:TabStopFormat:apply"/>
                <string name="concatInheritOnly" object="[flashx.textLayout.formats.TabStopFormat]" text=".concatInheritOnly(%incoming:flashx.textLayout.formats:ITabStopFormat%):void" tiptext="Concatenates the values of properties in the incoming ITabStopFormat instance with the values of this TabStopFormat object." version="1.5" playername="" helpurl="flashx.textLayout.formats:TabStopFormat:concatInheritOnly"/>
                <string name="concat" object="[flashx.textLayout.formats.TabStopFormat]" text=".concat(%incoming:flashx.textLayout.formats:ITabStopFormat%):void" tiptext="Concatenates the values of properties in the incoming ITabStopFormat instance with the values of this TabStopFormat object." version="1.5" playername="" helpurl="flashx.textLayout.formats:TabStopFormat:concat"/>
                <string name="copy" object="[flashx.textLayout.formats.TabStopFormat]" text=".copy(%values:flashx.textLayout.formats:ITabStopFormat%):void" tiptext="Copies TabStopFormat settings from the values ITabStopFormat instance into this TabStopFormat object." version="1.5" playername="" helpurl="flashx.textLayout.formats:TabStopFormat:copy"/>
                <string name="isEqual" object="[flashx.textLayout.formats.TabStopFormat]" text="TabStopFormat.isEqual(%p1:flashx.textLayout.formats:ITabStopFormat,p2:flashx.textLayout.formats:ITabStopFormat%):Boolean" static="true" tiptext="Compares properties in ITabStopFormat instance p1 with properties in ITabStopFormat instance p2 and returns true if all properties match." version="1.5" playername="" helpurl="flashx.textLayout.formats:TabStopFormat:isEqual"/>
                <string name="removeClashing" object="[flashx.textLayout.formats.TabStopFormat]" text=".removeClashing(%incoming:flashx.textLayout.formats:ITabStopFormat%):void" tiptext="Sets properties in this TabStopFormat object to undefined if they do not match those in the incoming ITabStopFormat instance." version="1.5" playername="" helpurl="flashx.textLayout.formats:TabStopFormat:removeClashing"/>
                <string name="removeMatching" object="[flashx.textLayout.formats.TabStopFormat]" text=".removeMatching(%incoming:flashx.textLayout.formats:ITabStopFormat%):void" tiptext="Sets properties in this TabStopFormat object to undefined if they match those in the incoming ITabStopFormat instance." version="1.5" playername="" helpurl="flashx.textLayout.formats:TabStopFormat:removeMatching"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class TabStopFormat" helpurl="flashx.textLayout.formats:TabStopFormat">
                <string name="alignment" object="[flashx.textLayout.formats.TabStopFormat]" text=".alignment" tiptext="The tab alignment for this tab stop." version="" playername="" helpurl="flashx.textLayout.formats:TabStopFormat:alignment:get"/>
                <string name="decimalAlignmentToken" object="[flashx.textLayout.formats.TabStopFormat]" text=".decimalAlignmentToken" tiptext="The alignment token to be used if the alignment is DECIMAL." version="" playername="" helpurl="flashx.textLayout.formats:TabStopFormat:decimalAlignmentToken:get"/>
                <string name="defaultFormat" object="[flashx.textLayout.formats.TabStopFormat]" text=".defaultFormat" tiptext="Returns a TabStopFormat object with default settings." version="" playername="" helpurl="flashx.textLayout.formats:TabStopFormat:defaultFormat:get"/>
                <string name="position" object="[flashx.textLayout.formats.TabStopFormat]" text=".position" tiptext="The position of the tab stop, in pixels, relative to the start of the line." version="" playername="" helpurl="flashx.textLayout.formats:TabStopFormat:position:get"/>
            </folder>
        </folder>
        <folder name="TextAlign" id="[flashx.textLayout.formats.TextAlign]" sort="true" index="true" asAncestors="Object" tiptext="Defines values for setting the textAlign and textAlignLast properties of the TextLayoutFormat class." helpurl="flashx.textLayout.formats:TextAlign">
            <folder name="Properties" id="Properties" tiptext="Properties for class TextAlign" helpurl="flashx.textLayout.formats:TextAlign">
                <string name="CENTER" object="[flashx.textLayout.formats.TextAlign]" text="TextAlign.CENTER" constant="true" tiptext="Specifies center alignment within the container." version="" playername="" helpurl="flashx.textLayout.formats:TextAlign:CENTER"/>
                <string name="END" object="[flashx.textLayout.formats.TextAlign]" text="TextAlign.END" constant="true" tiptext="Specifies end edge alignment - text is aligned opposite from the writing order." version="" playername="" helpurl="flashx.textLayout.formats:TextAlign:END"/>
                <string name="JUSTIFY" object="[flashx.textLayout.formats.TextAlign]" text="TextAlign.JUSTIFY" constant="true" tiptext="Specifies that text is justified within the lines so they fill the container space." version="" playername="" helpurl="flashx.textLayout.formats:TextAlign:JUSTIFY"/>
                <string name="LEFT" object="[flashx.textLayout.formats.TextAlign]" text="TextAlign.LEFT" constant="true" tiptext="Specifies left edge alignment." version="" playername="" helpurl="flashx.textLayout.formats:TextAlign:LEFT"/>
                <string name="RIGHT" object="[flashx.textLayout.formats.TextAlign]" text="TextAlign.RIGHT" constant="true" tiptext="Specifies right edge alignment." version="" playername="" helpurl="flashx.textLayout.formats:TextAlign:RIGHT"/>
                <string name="START" object="[flashx.textLayout.formats.TextAlign]" text="TextAlign.START" constant="true" tiptext="Specifies start edge alignment - text is aligned to match the writing order." version="" playername="" helpurl="flashx.textLayout.formats:TextAlign:START"/>
            </folder>
        </folder>
        <folder name="TextDecoration" id="[flashx.textLayout.formats.TextDecoration]" sort="true" index="true" asAncestors="Object" tiptext="Defines values for the textDecoration property of the TextLayoutFormat class." helpurl="flashx.textLayout.formats:TextDecoration">
            <folder name="Properties" id="Properties" tiptext="Properties for class TextDecoration" helpurl="flashx.textLayout.formats:TextDecoration">
                <string name="NONE" object="[flashx.textLayout.formats.TextDecoration]" text="TextDecoration.NONE" constant="true" tiptext="Specifies normal text - no decoration applied" version="" playername="" helpurl="flashx.textLayout.formats:TextDecoration:NONE"/>
                <string name="UNDERLINE" object="[flashx.textLayout.formats.TextDecoration]" text="TextDecoration.UNDERLINE" constant="true" tiptext="Specifies that text is underlined." version="" playername="" helpurl="flashx.textLayout.formats:TextDecoration:UNDERLINE"/>
            </folder>
        </folder>
        <folder name="TextJustify" id="[flashx.textLayout.formats.TextJustify]" sort="true" index="true" asAncestors="Object" tiptext="Defines values for setting the textJustify property of the TextLayoutFormat class." helpurl="flashx.textLayout.formats:TextJustify">
            <folder name="Properties" id="Properties" tiptext="Properties for class TextJustify" helpurl="flashx.textLayout.formats:TextJustify">
                <string name="DISTRIBUTE" object="[flashx.textLayout.formats.TextJustify]" text="TextJustify.DISTRIBUTE" constant="true" tiptext="Specifies that justification is to add space both to space characters and between individual letters." version="" playername="" helpurl="flashx.textLayout.formats:TextJustify:DISTRIBUTE"/>
                <string name="INTER_WORD" object="[flashx.textLayout.formats.TextJustify]" text="TextJustify.INTER_WORD" constant="true" tiptext="Specifies that justification is to add space to space characters." version="" playername="" helpurl="flashx.textLayout.formats:TextJustify:INTER_WORD"/>
            </folder>
        </folder>
        <folder name="TextLayoutFormat" id="[flashx.textLayout.formats.TextLayoutFormat]" sort="true" index="true" asAncestors="Object" tiptext="The TextLayoutFormat class holds all of the text layout properties." helpurl="flashx.textLayout.formats:TextLayoutFormat">
            <folder name="Methods" id="Methods" tiptext="Methods for class TextLayoutFormat" helpurl="flashx.textLayout.formats:TextLayoutFormat">
                <string name="TextLayoutFormat" object="[flashx.textLayout.formats.TextLayoutFormat]" text="new TextLayoutFormat(%[initialValues:flashx.textLayout.formats:ITextLayoutFormat=null]%)" constructor="true" tiptext="Creates a new TextLayoutFormat object." version="1.5" playername="" helpurl="flashx.textLayout.formats:TextLayoutFormat:TextLayoutFormat"/>
                <string name="apply" object="[flashx.textLayout.formats.TextLayoutFormat]" text=".apply(%incoming:flashx.textLayout.formats:ITextLayoutFormat%):void" tiptext="Replaces property values in this TextLayoutFormat object with the values of properties that are set in the incoming ITextLayoutFormat instance." version="1.5" playername="" helpurl="flashx.textLayout.formats:TextLayoutFormat:apply"/>
                <string name="concatInheritOnly" object="[flashx.textLayout.formats.TextLayoutFormat]" text=".concatInheritOnly(%incoming:flashx.textLayout.formats:ITextLayoutFormat%):void" tiptext="Concatenates the values of properties in the incoming ITextLayoutFormat instance with the values of this TextLayoutFormat object." version="1.5" playername="" helpurl="flashx.textLayout.formats:TextLayoutFormat:concatInheritOnly"/>
                <string name="concat" object="[flashx.textLayout.formats.TextLayoutFormat]" text=".concat(%incoming:flashx.textLayout.formats:ITextLayoutFormat%):void" tiptext="Concatenates the values of properties in the incoming ITextLayoutFormat instance with the values of this TextLayoutFormat object." version="1.5" playername="" helpurl="flashx.textLayout.formats:TextLayoutFormat:concat"/>
                <string name="copy" object="[flashx.textLayout.formats.TextLayoutFormat]" text=".copy(%values:flashx.textLayout.formats:ITextLayoutFormat%):void" tiptext="Copies TextLayoutFormat settings from the values ITextLayoutFormat instance into this TextLayoutFormat object." version="1.5" playername="" helpurl="flashx.textLayout.formats:TextLayoutFormat:copy"/>
                <string name="isEqual" object="[flashx.textLayout.formats.TextLayoutFormat]" text="TextLayoutFormat.isEqual(%p1:flashx.textLayout.formats:ITextLayoutFormat,p2:flashx.textLayout.formats:ITextLayoutFormat%):Boolean" static="true" tiptext="Compares properties in ITextLayoutFormat instance p1 with properties in ITextLayoutFormat instance p2 and returns true if all properties match." version="1.5" playername="" helpurl="flashx.textLayout.formats:TextLayoutFormat:isEqual"/>
                <string name="removeClashing" object="[flashx.textLayout.formats.TextLayoutFormat]" text=".removeClashing(%incoming:flashx.textLayout.formats:ITextLayoutFormat%):void" tiptext="Sets properties in this TextLayoutFormat object to undefined if they do not match those in the incoming ITextLayoutFormat instance." version="1.5" playername="" helpurl="flashx.textLayout.formats:TextLayoutFormat:removeClashing"/>
                <string name="removeMatching" object="[flashx.textLayout.formats.TextLayoutFormat]" text=".removeMatching(%incoming:flashx.textLayout.formats:ITextLayoutFormat%):void" tiptext="Sets properties in this TextLayoutFormat object to undefined if they match those in the incoming ITextLayoutFormat instance." version="1.5" playername="" helpurl="flashx.textLayout.formats:TextLayoutFormat:removeMatching"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class TextLayoutFormat" helpurl="flashx.textLayout.formats:TextLayoutFormat">
                <string name="alignmentBaseline" object="[flashx.textLayout.formats.TextLayoutFormat]" text=".alignmentBaseline" tiptext="Specifies the baseline to which the dominant baseline aligns." version="" playername="" helpurl="flashx.textLayout.formats:TextLayoutFormat:alignmentBaseline:get"/>
                <string name="backgroundAlpha" object="[flashx.textLayout.formats.TextLayoutFormat]" text=".backgroundAlpha" tiptext="Alpha (transparency) value for the background (adopts default value if undefined during cascade)." version="" playername="" helpurl="flashx.textLayout.formats:TextLayoutFormat:backgroundAlpha:get"/>
                <string name="backgroundColor" object="[flashx.textLayout.formats.TextLayoutFormat]" text=".backgroundColor" tiptext="Background color of the text (adopts default value if undefined during cascade)." version="" playername="" helpurl="flashx.textLayout.formats:TextLayoutFormat:backgroundColor:get"/>
                <string name="baselineShift" object="[flashx.textLayout.formats.TextLayoutFormat]" text=".baselineShift" tiptext="Amount to shift the baseline from the dominantBaseline value." version="" playername="" helpurl="flashx.textLayout.formats:TextLayoutFormat:baselineShift:get"/>
                <string name="blockProgression" object="[flashx.textLayout.formats.TextLayoutFormat]" text=".blockProgression" tiptext="Specifies a vertical or horizontal progression of line placement." version="" playername="" helpurl="flashx.textLayout.formats:TextLayoutFormat:blockProgression:get"/>
                <string name="breakOpportunity" object="[flashx.textLayout.formats.TextLayoutFormat]" text=".breakOpportunity" tiptext="Controls where lines are allowed to break when breaking wrapping text into multiple lines." version="" playername="" helpurl="flashx.textLayout.formats:TextLayoutFormat:breakOpportunity:get"/>
                <string name="cffHinting" object="[flashx.textLayout.formats.TextLayoutFormat]" text=".cffHinting" tiptext="The type of CFF hinting used for this text." version="" playername="" helpurl="flashx.textLayout.formats:TextLayoutFormat:cffHinting:get"/>
                <string name="color" object="[flashx.textLayout.formats.TextLayoutFormat]" text=".color" tiptext="Color of the text." version="" playername="" helpurl="flashx.textLayout.formats:TextLayoutFormat:color:get"/>
                <string name="columnCount" object="[flashx.textLayout.formats.TextLayoutFormat]" text=".columnCount" tiptext="Number of text columns (adopts default value if undefined during cascade)." version="" playername="" helpurl="flashx.textLayout.formats:TextLayoutFormat:columnCount:get"/>
                <string name="columnGap" object="[flashx.textLayout.formats.TextLayoutFormat]" text=".columnGap" tiptext="Specifies the amount of gutter space, in pixels, to leave between the columns (adopts default value if undefined during cascade)." version="" playername="" helpurl="flashx.textLayout.formats:TextLayoutFormat:columnGap:get"/>
                <string name="columnWidth" object="[flashx.textLayout.formats.TextLayoutFormat]" text=".columnWidth" tiptext="Column width in pixels (adopts default value if undefined during cascade)." version="" playername="" helpurl="flashx.textLayout.formats:TextLayoutFormat:columnWidth:get"/>
                <string name="defaultFormat" object="[flashx.textLayout.formats.TextLayoutFormat]" text=".defaultFormat" tiptext="Returns a TextLayoutFormat object with default settings." version="" playername="" helpurl="flashx.textLayout.formats:TextLayoutFormat:defaultFormat:get"/>
                <string name="digitCase" object="[flashx.textLayout.formats.TextLayoutFormat]" text=".digitCase" tiptext="The type of digit case used for this text." version="" playername="" helpurl="flashx.textLayout.formats:TextLayoutFormat:digitCase:get"/>
                <string name="digitWidth" object="[flashx.textLayout.formats.TextLayoutFormat]" text=".digitWidth" tiptext="Type of digit width used for this text." version="" playername="" helpurl="flashx.textLayout.formats:TextLayoutFormat:digitWidth:get"/>
                <string name="direction" object="[flashx.textLayout.formats.TextLayoutFormat]" text=".direction" tiptext="Specifies the default bidirectional embedding level of the text in the text block." version="" playername="" helpurl="flashx.textLayout.formats:TextLayoutFormat:direction:get"/>
                <string name="dominantBaseline" object="[flashx.textLayout.formats.TextLayoutFormat]" text=".dominantBaseline" tiptext="Specifies which element baseline snaps to the alignmentBaseline to determine the vertical position of the element on the line." version="" playername="" helpurl="flashx.textLayout.formats:TextLayoutFormat:dominantBaseline:get"/>
                <string name="firstBaselineOffset" object="[flashx.textLayout.formats.TextLayoutFormat]" text=".firstBaselineOffset" tiptext="Specifies the baseline position of the first line in the container." version="" playername="" helpurl="flashx.textLayout.formats:TextLayoutFormat:firstBaselineOffset:get"/>
                <string name="fontFamily" object="[flashx.textLayout.formats.TextLayoutFormat]" text=".fontFamily" tiptext="The name of the font to use, or a comma-separated list of font names." version="" playername="" helpurl="flashx.textLayout.formats:TextLayoutFormat:fontFamily:get"/>
                <string name="fontLookup" object="[flashx.textLayout.formats.TextLayoutFormat]" text=".fontLookup" tiptext="Font lookup to use." version="" playername="" helpurl="flashx.textLayout.formats:TextLayoutFormat:fontLookup:get"/>
                <string name="fontSize" object="[flashx.textLayout.formats.TextLayoutFormat]" text=".fontSize" tiptext="The size of the text in pixels." version="" playername="" helpurl="flashx.textLayout.formats:TextLayoutFormat:fontSize:get"/>
                <string name="fontStyle" object="[flashx.textLayout.formats.TextLayoutFormat]" text=".fontStyle" tiptext="Style of text." version="" playername="" helpurl="flashx.textLayout.formats:TextLayoutFormat:fontStyle:get"/>
                <string name="fontWeight" object="[flashx.textLayout.formats.TextLayoutFormat]" text=".fontWeight" tiptext="Weight of text." version="" playername="" helpurl="flashx.textLayout.formats:TextLayoutFormat:fontWeight:get"/>
                <string name="justificationRule" object="[flashx.textLayout.formats.TextLayoutFormat]" text=".justificationRule" tiptext="Rule used to justify text in a paragraph." version="" playername="" helpurl="flashx.textLayout.formats:TextLayoutFormat:justificationRule:get"/>
                <string name="justificationStyle" object="[flashx.textLayout.formats.TextLayoutFormat]" text=".justificationStyle" tiptext="The style used for justification of the paragraph." version="" playername="" helpurl="flashx.textLayout.formats:TextLayoutFormat:justificationStyle:get"/>
                <string name="kerning" object="[flashx.textLayout.formats.TextLayoutFormat]" text=".kerning" tiptext="Kerning adjusts the pixels between certain character pairs to improve readability." version="" playername="" helpurl="flashx.textLayout.formats:TextLayoutFormat:kerning:get"/>
                <string name="leadingModel" object="[flashx.textLayout.formats.TextLayoutFormat]" text=".leadingModel" tiptext="Specifies the leading model, which is a combination of leading basis and leading direction." version="" playername="" helpurl="flashx.textLayout.formats:TextLayoutFormat:leadingModel:get"/>
                <string name="ligatureLevel" object="[flashx.textLayout.formats.TextLayoutFormat]" text=".ligatureLevel" tiptext="Controls which of the ligatures that are defined in the font may be used in the text." version="" playername="" helpurl="flashx.textLayout.formats:TextLayoutFormat:ligatureLevel:get"/>
                <string name="lineBreak" object="[flashx.textLayout.formats.TextLayoutFormat]" text=".lineBreak" tiptext="Controls word wrapping within the container (adopts default value if undefined during cascade)." version="" playername="" helpurl="flashx.textLayout.formats:TextLayoutFormat:lineBreak:get"/>
                <string name="lineHeight" object="[flashx.textLayout.formats.TextLayoutFormat]" text=".lineHeight" tiptext="Leading controls for the text." version="" playername="" helpurl="flashx.textLayout.formats:TextLayoutFormat:lineHeight:get"/>
                <string name="lineThrough" object="[flashx.textLayout.formats.TextLayoutFormat]" text=".lineThrough" tiptext="If true, applies strikethrough, a line drawn through the middle of the text." version="" playername="" helpurl="flashx.textLayout.formats:TextLayoutFormat:lineThrough:get"/>
                <string name="locale" object="[flashx.textLayout.formats.TextLayoutFormat]" text=".locale" tiptext="The locale of the text." version="" playername="" helpurl="flashx.textLayout.formats:TextLayoutFormat:locale:get"/>
                <string name="paddingBottom" object="[flashx.textLayout.formats.TextLayoutFormat]" text=".paddingBottom" tiptext="Botttom inset in pixels (adopts default value if undefined during cascade)." version="" playername="" helpurl="flashx.textLayout.formats:TextLayoutFormat:paddingBottom:get"/>
                <string name="paddingLeft" object="[flashx.textLayout.formats.TextLayoutFormat]" text=".paddingLeft" tiptext="Left inset in pixels (adopts default value if undefined during cascade)." version="" playername="" helpurl="flashx.textLayout.formats:TextLayoutFormat:paddingLeft:get"/>
                <string name="paddingRight" object="[flashx.textLayout.formats.TextLayoutFormat]" text=".paddingRight" tiptext="Right inset in pixels (adopts default value if undefined during cascade)." version="" playername="" helpurl="flashx.textLayout.formats:TextLayoutFormat:paddingRight:get"/>
                <string name="paddingTop" object="[flashx.textLayout.formats.TextLayoutFormat]" text=".paddingTop" tiptext="Top inset in pixels (adopts default value if undefined during cascade)." version="" playername="" helpurl="flashx.textLayout.formats:TextLayoutFormat:paddingTop:get"/>
                <string name="paragraphEndIndent" object="[flashx.textLayout.formats.TextLayoutFormat]" text=".paragraphEndIndent" tiptext="A Number that specifies, in pixels, the amount to indent the paragraph&apos;s end edge." version="" playername="" helpurl="flashx.textLayout.formats:TextLayoutFormat:paragraphEndIndent:get"/>
                <string name="paragraphSpaceAfter" object="[flashx.textLayout.formats.TextLayoutFormat]" text=".paragraphSpaceAfter" tiptext="A Number that specifies the amount of space, in pixels, to leave after the paragraph." version="" playername="" helpurl="flashx.textLayout.formats:TextLayoutFormat:paragraphSpaceAfter:get"/>
                <string name="paragraphSpaceBefore" object="[flashx.textLayout.formats.TextLayoutFormat]" text=".paragraphSpaceBefore" tiptext="A Number that specifies the amount of space, in pixels, to leave before the paragraph." version="" playername="" helpurl="flashx.textLayout.formats:TextLayoutFormat:paragraphSpaceBefore:get"/>
                <string name="paragraphStartIndent" object="[flashx.textLayout.formats.TextLayoutFormat]" text=".paragraphStartIndent" tiptext="A Number that specifies, in pixels, the amount to indent the paragraph&apos;s start edge." version="" playername="" helpurl="flashx.textLayout.formats:TextLayoutFormat:paragraphStartIndent:get"/>
                <string name="renderingMode" object="[flashx.textLayout.formats.TextLayoutFormat]" text=".renderingMode" tiptext="The rendering mode used for this text." version="" playername="" helpurl="flashx.textLayout.formats:TextLayoutFormat:renderingMode:get"/>
                <string name="tabStops" object="[flashx.textLayout.formats.TextLayoutFormat]" text=".tabStops" tiptext="Specifies the tab stops associated with the paragraph." version="" playername="" helpurl="flashx.textLayout.formats:TextLayoutFormat:tabStops:get"/>
                <string name="textAlignLast" object="[flashx.textLayout.formats.TextLayoutFormat]" text=".textAlignLast" tiptext="Alignment of the last (or only) line in the paragraph relative to the container in justified text." version="" playername="" helpurl="flashx.textLayout.formats:TextLayoutFormat:textAlignLast:get"/>
                <string name="textAlign" object="[flashx.textLayout.formats.TextLayoutFormat]" text=".textAlign" tiptext="Alignment of lines in the paragraph relative to the container." version="" playername="" helpurl="flashx.textLayout.formats:TextLayoutFormat:textAlign:get"/>
                <string name="textAlpha" object="[flashx.textLayout.formats.TextLayoutFormat]" text=".textAlpha" tiptext="Alpha (transparency) value for the text." version="" playername="" helpurl="flashx.textLayout.formats:TextLayoutFormat:textAlpha:get"/>
                <string name="textDecoration" object="[flashx.textLayout.formats.TextLayoutFormat]" text=".textDecoration" tiptext="Decoration on text." version="" playername="" helpurl="flashx.textLayout.formats:TextLayoutFormat:textDecoration:get"/>
                <string name="textIndent" object="[flashx.textLayout.formats.TextLayoutFormat]" text=".textIndent" tiptext="A Number that specifies, in pixels, the amount to indent the first line of the paragraph." version="" playername="" helpurl="flashx.textLayout.formats:TextLayoutFormat:textIndent:get"/>
                <string name="textJustify" object="[flashx.textLayout.formats.TextLayoutFormat]" text=".textJustify" tiptext="Specifies options for justifying text." version="" playername="" helpurl="flashx.textLayout.formats:TextLayoutFormat:textJustify:get"/>
                <string name="textRotation" object="[flashx.textLayout.formats.TextLayoutFormat]" text=".textRotation" tiptext="Determines the number of degrees to rotate this text." version="" playername="" helpurl="flashx.textLayout.formats:TextLayoutFormat:textRotation:get"/>
                <string name="trackingLeft" object="[flashx.textLayout.formats.TextLayoutFormat]" text=".trackingLeft" tiptext="Number in pixels (or percent of fontSize, like 120%) indicating the amount of tracking (manual kerning) to be applied to the left of each character." version="" playername="" helpurl="flashx.textLayout.formats:TextLayoutFormat:trackingLeft:get"/>
                <string name="trackingRight" object="[flashx.textLayout.formats.TextLayoutFormat]" text=".trackingRight" tiptext="Number in pixels (or percent of fontSize, like 120%) indicating the amount of tracking (manual kerning) to be applied to the right of each character." version="" playername="" helpurl="flashx.textLayout.formats:TextLayoutFormat:trackingRight:get"/>
                <string name="typographicCase" object="[flashx.textLayout.formats.TextLayoutFormat]" text=".typographicCase" tiptext="The type of typographic case used for this text." version="" playername="" helpurl="flashx.textLayout.formats:TextLayoutFormat:typographicCase:get"/>
                <string name="verticalAlign" object="[flashx.textLayout.formats.TextLayoutFormat]" text=".verticalAlign" tiptext="Vertical alignment or justification (adopts default value if undefined during cascade)." version="" playername="" helpurl="flashx.textLayout.formats:TextLayoutFormat:verticalAlign:get"/>
                <string name="whiteSpaceCollapse" object="[flashx.textLayout.formats.TextLayoutFormat]" text=".whiteSpaceCollapse" tiptext="Collapses or preserves whitespace when importing text into a TextFlow." version="" playername="" helpurl="flashx.textLayout.formats:TextLayoutFormat:whiteSpaceCollapse:get"/>
            </folder>
        </folder>
        <folder name="TLFTypographicCase" id="[flashx.textLayout.formats.TLFTypographicCase]" sort="true" index="true" asAncestors="Object" tiptext="Defines values for the typographicCase property of the TextLayoutFormat class." helpurl="flashx.textLayout.formats:TLFTypographicCase">
            <folder name="Properties" id="Properties" tiptext="Properties for class TLFTypographicCase" helpurl="flashx.textLayout.formats:TLFTypographicCase">
                <string name="CAPS_TO_SMALL_CAPS" object="[flashx.textLayout.formats.TLFTypographicCase]" text="TLFTypographicCase.CAPS_TO_SMALL_CAPS" constant="true" tiptext="Specifies that uppercase characters use small-caps glyphs on output." version="" playername="" helpurl="flashx.textLayout.formats:TLFTypographicCase:CAPS_TO_SMALL_CAPS"/>
                <string name="DEFAULT" object="[flashx.textLayout.formats.TLFTypographicCase]" text="TLFTypographicCase.DEFAULT" constant="true" tiptext="Specifies default typographic case -- no special features applied." version="" playername="" helpurl="flashx.textLayout.formats:TLFTypographicCase:DEFAULT"/>
                <string name="LOWERCASE_TO_SMALL_CAPS" object="[flashx.textLayout.formats.TLFTypographicCase]" text="TLFTypographicCase.LOWERCASE_TO_SMALL_CAPS" constant="true" tiptext="Converts all lowercase characters to uppercase, then applies small caps to only the characters that the conversion changed." version="" playername="" helpurl="flashx.textLayout.formats:TLFTypographicCase:LOWERCASE_TO_SMALL_CAPS"/>
                <string name="LOWERCASE" object="[flashx.textLayout.formats.TLFTypographicCase]" text="TLFTypographicCase.LOWERCASE" constant="true" tiptext="Specifies that all characters use lowercase glyphs on output." version="" playername="" helpurl="flashx.textLayout.formats:TLFTypographicCase:LOWERCASE"/>
                <string name="UPPERCASE" object="[flashx.textLayout.formats.TLFTypographicCase]" text="TLFTypographicCase.UPPERCASE" constant="true" tiptext="Specifies that all characters use uppercase glyphs on output." version="" playername="" helpurl="flashx.textLayout.formats:TLFTypographicCase:UPPERCASE"/>
            </folder>
        </folder>
        <folder name="VerticalAlign" id="[flashx.textLayout.formats.VerticalAlign]" sort="true" index="true" asAncestors="Object" tiptext="Defines values for the verticalAlign property of the TextLayoutFormat class." helpurl="flashx.textLayout.formats:VerticalAlign">
            <folder name="Properties" id="Properties" tiptext="Properties for class VerticalAlign" helpurl="flashx.textLayout.formats:VerticalAlign">
                <string name="BOTTOM" object="[flashx.textLayout.formats.VerticalAlign]" text="VerticalAlign.BOTTOM" constant="true" tiptext="Specifies alignment with the bottom edge of the frame." version="" playername="" helpurl="flashx.textLayout.formats:VerticalAlign:BOTTOM"/>
                <string name="JUSTIFY" object="[flashx.textLayout.formats.VerticalAlign]" text="VerticalAlign.JUSTIFY" constant="true" tiptext="Specifies vertical line justification within the frame" version="" playername="" helpurl="flashx.textLayout.formats:VerticalAlign:JUSTIFY"/>
                <string name="MIDDLE" object="[flashx.textLayout.formats.VerticalAlign]" text="VerticalAlign.MIDDLE" constant="true" tiptext="Specifies alignment with the middle of the frame." version="" playername="" helpurl="flashx.textLayout.formats:VerticalAlign:MIDDLE"/>
                <string name="TOP" object="[flashx.textLayout.formats.VerticalAlign]" text="VerticalAlign.TOP" constant="true" tiptext="Specifies alignment with the top edge of the frame." version="" playername="" helpurl="flashx.textLayout.formats:VerticalAlign:TOP"/>
            </folder>
        </folder>
        <folder name="WhiteSpaceCollapse" id="[flashx.textLayout.formats.WhiteSpaceCollapse]" sort="true" index="true" asAncestors="Object" tiptext="Defines values for setting the whiteSpaceCollapse property of the TextLayoutFormat class." helpurl="flashx.textLayout.formats:WhiteSpaceCollapse">
            <folder name="Properties" id="Properties" tiptext="Properties for class WhiteSpaceCollapse" helpurl="flashx.textLayout.formats:WhiteSpaceCollapse">
                <string name="COLLAPSE" object="[flashx.textLayout.formats.WhiteSpaceCollapse]" text="WhiteSpaceCollapse.COLLAPSE" constant="true" tiptext="Collapse whitespace when importing text (default)." version="" playername="" helpurl="flashx.textLayout.formats:WhiteSpaceCollapse:COLLAPSE"/>
                <string name="PRESERVE" object="[flashx.textLayout.formats.WhiteSpaceCollapse]" text="WhiteSpaceCollapse.PRESERVE" constant="true" tiptext="Preserves whitespace when importing text." version="" playername="" helpurl="flashx.textLayout.formats:WhiteSpaceCollapse:PRESERVE"/>
            </folder>
        </folder>
    </folder>
        <folder name="flashx.textLayout.operations" id="flashx.textLayout.operations" sort="true" tiptext="Classes for package flashx.textLayout.operations" helpurl="flashx.textLayout.operations">
        <folder name="ApplyElementIDOperation" id="[flashx.textLayout.operations.ApplyElementIDOperation]" sort="true" index="true" asAncestors="flashx.textLayout.operations:FlowElementOperation,flashx.textLayout.operations:FlowTextOperation,flashx.textLayout.operations:FlowOperation,Object" tiptext="The ChangeElementIDOperation class encapsulates an element ID change." helpurl="flashx.textLayout.operations:ApplyElementIDOperation">
            <folder name="Methods" id="Methods" tiptext="Methods for class ApplyElementIDOperation" helpurl="flashx.textLayout.operations:ApplyElementIDOperation">
                <string name="ApplyElementIDOperation" object="[flashx.textLayout.operations.ApplyElementIDOperation]" text="new ApplyElementIDOperation(%operationState:flashx.textLayout.edit:SelectionState,targetElement:flashx.textLayout.elements:FlowElement,newID:String[,relativeStart:int=0,relativeEnd:int=-1]%)" constructor="true" tiptext="Creates a ChangeElementIDOperation object." version="1.5" playername="" helpurl="flashx.textLayout.operations:ApplyElementIDOperation:ApplyElementIDOperation"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class ApplyElementIDOperation" helpurl="flashx.textLayout.operations:ApplyElementIDOperation">
                <string name="newID" object="[flashx.textLayout.operations.ApplyElementIDOperation]" text=".newID" tiptext="The ID assigned by this operation." version="" playername="" helpurl="flashx.textLayout.operations:ApplyElementIDOperation:newID:get"/>
            </folder>
        </folder>
        <folder name="ApplyElementStyleNameOperation" id="[flashx.textLayout.operations.ApplyElementStyleNameOperation]" sort="true" index="true" asAncestors="flashx.textLayout.operations:FlowElementOperation,flashx.textLayout.operations:FlowTextOperation,flashx.textLayout.operations:FlowOperation,Object" tiptext="The ApplyElementStyleNameOperation class encapsulates a style name change." helpurl="flashx.textLayout.operations:ApplyElementStyleNameOperation">
            <folder name="Methods" id="Methods" tiptext="Methods for class ApplyElementStyleNameOperation" helpurl="flashx.textLayout.operations:ApplyElementStyleNameOperation">
                <string name="ApplyElementStyleNameOperation" object="[flashx.textLayout.operations.ApplyElementStyleNameOperation]" text="new ApplyElementStyleNameOperation(%operationState:flashx.textLayout.edit:SelectionState,targetElement:flashx.textLayout.elements:FlowElement,newStyleName:String[,relativeStart:int=0,relativeEnd:int=-1]%)" constructor="true" tiptext="Creates a ApplyElementStyleNameOperation object." version="1.5" playername="" helpurl="flashx.textLayout.operations:ApplyElementStyleNameOperation:ApplyElementStyleNameOperation"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class ApplyElementStyleNameOperation" helpurl="flashx.textLayout.operations:ApplyElementStyleNameOperation">
                <string name="newStyleName" object="[flashx.textLayout.operations.ApplyElementStyleNameOperation]" text=".newStyleName" tiptext="The style name assigned by this operation." version="" playername="" helpurl="flashx.textLayout.operations:ApplyElementStyleNameOperation:newStyleName:get"/>
            </folder>
        </folder>
        <folder name="ApplyElementUserStyleOperation" id="[flashx.textLayout.operations.ApplyElementUserStyleOperation]" sort="true" index="true" asAncestors="flashx.textLayout.operations:FlowElementOperation,flashx.textLayout.operations:FlowTextOperation,flashx.textLayout.operations:FlowOperation,Object" tiptext="The ApplyElementUserStyleOperation class encapsulates a change in a style value of an element." helpurl="flashx.textLayout.operations:ApplyElementUserStyleOperation">
            <folder name="Methods" id="Methods" tiptext="Methods for class ApplyElementUserStyleOperation" helpurl="flashx.textLayout.operations:ApplyElementUserStyleOperation">
                <string name="ApplyElementUserStyleOperation" object="[flashx.textLayout.operations.ApplyElementUserStyleOperation]" text="new ApplyElementUserStyleOperation(%operationState:flashx.textLayout.edit:SelectionState,targetElement:flashx.textLayout.elements:FlowElement,styleName:String,value:*[,relativeStart:int=0,relativeEnd:int=-1]%)" constructor="true" tiptext="Creates a ApplyElementUserStyleOperation object." version="1.5" playername="" helpurl="flashx.textLayout.operations:ApplyElementUserStyleOperation:ApplyElementUserStyleOperation"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class ApplyElementUserStyleOperation" helpurl="flashx.textLayout.operations:ApplyElementUserStyleOperation">
                <string name="newValue" object="[flashx.textLayout.operations.ApplyElementUserStyleOperation]" text=".newValue" tiptext="The new style value." version="" playername="" helpurl="flashx.textLayout.operations:ApplyElementUserStyleOperation:newValue:get"/>
                <string name="styleName" object="[flashx.textLayout.operations.ApplyElementUserStyleOperation]" text=".styleName" tiptext="The name of the style changed." version="" playername="" helpurl="flashx.textLayout.operations:ApplyElementUserStyleOperation:styleName:get"/>
            </folder>
        </folder>
        <folder name="ApplyFormatOperation" id="[flashx.textLayout.operations.ApplyFormatOperation]" sort="true" index="true" asAncestors="flashx.textLayout.operations:FlowTextOperation,flashx.textLayout.operations:FlowOperation,Object" tiptext="The ApplyFormatOperation class encapsulates a style change." helpurl="flashx.textLayout.operations:ApplyFormatOperation">
            <folder name="Methods" id="Methods" tiptext="Methods for class ApplyFormatOperation" helpurl="flashx.textLayout.operations:ApplyFormatOperation">
                <string name="ApplyFormatOperation" object="[flashx.textLayout.operations.ApplyFormatOperation]" text="new ApplyFormatOperation(%operationState:flashx.textLayout.edit:SelectionState,leafFormat:flashx.textLayout.formats:ITextLayoutFormat,paragraphFormat:flashx.textLayout.formats:ITextLayoutFormat[,containerFormat:flashx.textLayout.formats:ITextLayoutFormat=null]%)" constructor="true" tiptext="Creates an ApplyFormatOperation object." version="1.5" playername="" helpurl="flashx.textLayout.operations:ApplyFormatOperation:ApplyFormatOperation"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class ApplyFormatOperation" helpurl="flashx.textLayout.operations:ApplyFormatOperation">
                <string name="containerFormat" object="[flashx.textLayout.operations.ApplyFormatOperation]" text=".containerFormat" tiptext="The format properties to apply to the containers in the range." version="" playername="" helpurl="flashx.textLayout.operations:ApplyFormatOperation:containerFormat:get"/>
                <string name="leafFormat" object="[flashx.textLayout.operations.ApplyFormatOperation]" text=".leafFormat" tiptext="The format properties to apply to the leaf elements in the range." version="" playername="" helpurl="flashx.textLayout.operations:ApplyFormatOperation:leafFormat:get"/>
                <string name="paragraphFormat" object="[flashx.textLayout.operations.ApplyFormatOperation]" text=".paragraphFormat" tiptext="The format properties to apply to the paragraphs in the range." version="" playername="" helpurl="flashx.textLayout.operations:ApplyFormatOperation:paragraphFormat:get"/>
            </folder>
        </folder>
        <folder name="ApplyFormatToElementOperation" id="[flashx.textLayout.operations.ApplyFormatToElementOperation]" sort="true" index="true" asAncestors="flashx.textLayout.operations:FlowElementOperation,flashx.textLayout.operations:FlowTextOperation,flashx.textLayout.operations:FlowOperation,Object" tiptext="The ApplyFormatToElementOperation class encapsulates a style change to an element." helpurl="flashx.textLayout.operations:ApplyFormatToElementOperation">
            <folder name="Methods" id="Methods" tiptext="Methods for class ApplyFormatToElementOperation" helpurl="flashx.textLayout.operations:ApplyFormatToElementOperation">
                <string name="ApplyFormatToElementOperation" object="[flashx.textLayout.operations.ApplyFormatToElementOperation]" text="new ApplyFormatToElementOperation(%operationState:flashx.textLayout.edit:SelectionState,targetElement:flashx.textLayout.elements:FlowElement,format:flashx.textLayout.formats:ITextLayoutFormat[,relativeStart:int=0,relativeEnd:int=-1]%)" constructor="true" tiptext="Creates an ApplyFormatToElementOperation object." version="1.5" playername="" helpurl="flashx.textLayout.operations:ApplyFormatToElementOperation:ApplyFormatToElementOperation"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class ApplyFormatToElementOperation" helpurl="flashx.textLayout.operations:ApplyFormatToElementOperation">
                <string name="format" object="[flashx.textLayout.operations.ApplyFormatToElementOperation]" text=".format" tiptext="The character formats applied in this operation." version="" playername="" helpurl="flashx.textLayout.operations:ApplyFormatToElementOperation:format:get"/>
            </folder>
        </folder>
        <folder name="ApplyLinkOperation" id="[flashx.textLayout.operations.ApplyLinkOperation]" sort="true" index="true" asAncestors="flashx.textLayout.operations:FlowTextOperation,flashx.textLayout.operations:FlowOperation,Object" tiptext="The ApplyLinkOperation class encapsulates a link creation or modification operation." helpurl="flashx.textLayout.operations:ApplyLinkOperation">
            <folder name="Methods" id="Methods" tiptext="Methods for class ApplyLinkOperation" helpurl="flashx.textLayout.operations:ApplyLinkOperation">
                <string name="ApplyLinkOperation" object="[flashx.textLayout.operations.ApplyLinkOperation]" text="new ApplyLinkOperation(%operationState:flashx.textLayout.edit:SelectionState,href:String,target:String,extendToLinkBoundary:Boolean%)" constructor="true" tiptext="Creates an ApplyLinkOperation object." version="1.5" playername="" helpurl="flashx.textLayout.operations:ApplyLinkOperation:ApplyLinkOperation"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class ApplyLinkOperation" helpurl="flashx.textLayout.operations:ApplyLinkOperation">
                <string name="extendToLinkBoundary" object="[flashx.textLayout.operations.ApplyLinkOperation]" text=".extendToLinkBoundary" tiptext="Whether to extend the selection to include the entire text of any existing links overlapped by the selection, and then apply the change." version="" playername="" helpurl="flashx.textLayout.operations:ApplyLinkOperation:extendToLinkBoundary:get"/>
                <string name="href" object="[flashx.textLayout.operations.ApplyLinkOperation]" text=".href" tiptext="The URI to be associated with the link." version="" playername="" helpurl="flashx.textLayout.operations:ApplyLinkOperation:href:get"/>
                <string name="target" object="[flashx.textLayout.operations.ApplyLinkOperation]" text=".target" tiptext="The target of the link." version="" playername="" helpurl="flashx.textLayout.operations:ApplyLinkOperation:target:get"/>
            </folder>
        </folder>
        <folder name="ApplyTCYOperation" id="[flashx.textLayout.operations.ApplyTCYOperation]" sort="true" index="true" asAncestors="flashx.textLayout.operations:FlowTextOperation,flashx.textLayout.operations:FlowOperation,Object" tiptext="The ApplyTCYOperation class encapsulates a TCY transformation." helpurl="flashx.textLayout.operations:ApplyTCYOperation">
            <folder name="Methods" id="Methods" tiptext="Methods for class ApplyTCYOperation" helpurl="flashx.textLayout.operations:ApplyTCYOperation">
                <string name="ApplyTCYOperation" object="[flashx.textLayout.operations.ApplyTCYOperation]" text="new ApplyTCYOperation(%operationState:flashx.textLayout.edit:SelectionState,tcyOn:Boolean%)" constructor="true" tiptext="Creates an ApplyTCYOperation object." version="1.5" playername="" helpurl="flashx.textLayout.operations:ApplyTCYOperation:ApplyTCYOperation"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class ApplyTCYOperation" helpurl="flashx.textLayout.operations:ApplyTCYOperation">
                <string name="tcyOn" object="[flashx.textLayout.operations.ApplyTCYOperation]" text=".tcyOn" tiptext="Indicates whether the operation applies or removes TCY formatting." version="" playername="" helpurl="flashx.textLayout.operations:ApplyTCYOperation:tcyOn:get"/>
            </folder>
        </folder>
        <folder name="ClearFormatOnElementOperation" id="[flashx.textLayout.operations.ClearFormatOnElementOperation]" sort="true" index="true" asAncestors="flashx.textLayout.operations:FlowElementOperation,flashx.textLayout.operations:FlowTextOperation,flashx.textLayout.operations:FlowOperation,Object" tiptext="The ClearFormatOnElementOperation class encapsulates a style change to an element." helpurl="flashx.textLayout.operations:ClearFormatOnElementOperation">
            <folder name="Methods" id="Methods" tiptext="Methods for class ClearFormatOnElementOperation" helpurl="flashx.textLayout.operations:ClearFormatOnElementOperation">
                <string name="ClearFormatOnElementOperation" object="[flashx.textLayout.operations.ClearFormatOnElementOperation]" text="new ClearFormatOnElementOperation(%operationState:flashx.textLayout.edit:SelectionState,targetElement:flashx.textLayout.elements:FlowElement,format:flashx.textLayout.formats:ITextLayoutFormat[,relativeStart:int=0,relativeEnd:int=-1]%)" constructor="true" tiptext="Creates an ClearFormatOnElementOperation object." version="1.5" playername="" helpurl="flashx.textLayout.operations:ClearFormatOnElementOperation:ClearFormatOnElementOperation"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class ClearFormatOnElementOperation" helpurl="flashx.textLayout.operations:ClearFormatOnElementOperation">
                <string name="format" object="[flashx.textLayout.operations.ClearFormatOnElementOperation]" text=".format" tiptext="The character formats applied in this operation." version="" playername="" helpurl="flashx.textLayout.operations:ClearFormatOnElementOperation:format:get"/>
            </folder>
        </folder>
        <folder name="ClearFormatOperation" id="[flashx.textLayout.operations.ClearFormatOperation]" sort="true" index="true" asAncestors="flashx.textLayout.operations:FlowTextOperation,flashx.textLayout.operations:FlowOperation,Object" tiptext="The ClearFormatOperation class encapsulates a way to undefine formats." helpurl="flashx.textLayout.operations:ClearFormatOperation">
            <folder name="Methods" id="Methods" tiptext="Methods for class ClearFormatOperation" helpurl="flashx.textLayout.operations:ClearFormatOperation">
                <string name="ClearFormatOperation" object="[flashx.textLayout.operations.ClearFormatOperation]" text="new ClearFormatOperation(%operationState:flashx.textLayout.edit:SelectionState,leafFormat:flashx.textLayout.formats:ITextLayoutFormat,paragraphFormat:flashx.textLayout.formats:ITextLayoutFormat[,containerFormat:flashx.textLayout.formats:ITextLayoutFormat=null]%)" constructor="true" tiptext="Creates an ClearFormatOperation object." version="1.5" playername="" helpurl="flashx.textLayout.operations:ClearFormatOperation:ClearFormatOperation"/>
                <string name="redo" object="[flashx.textLayout.operations.ClearFormatOperation]" text=".redo(%%):flashx.textLayout.edit:SelectionState" tiptext="" version="" playername="" helpurl="flashx.textLayout.operations:ClearFormatOperation:redo"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class ClearFormatOperation" helpurl="flashx.textLayout.operations:ClearFormatOperation">
                <string name="containerFormat" object="[flashx.textLayout.operations.ClearFormatOperation]" text=".containerFormat" tiptext="The format properties to undefine on the containers in the range." version="" playername="" helpurl="flashx.textLayout.operations:ClearFormatOperation:containerFormat:get"/>
                <string name="leafFormat" object="[flashx.textLayout.operations.ClearFormatOperation]" text=".leafFormat" tiptext="The format properties to undefine on the leaf elements in the range." version="" playername="" helpurl="flashx.textLayout.operations:ClearFormatOperation:leafFormat:get"/>
                <string name="paragraphFormat" object="[flashx.textLayout.operations.ClearFormatOperation]" text=".paragraphFormat" tiptext="The format properties to undefine on the paragraphs in the range." version="" playername="" helpurl="flashx.textLayout.operations:ClearFormatOperation:paragraphFormat:get"/>
            </folder>
        </folder>
        <folder name="CompositeOperation" id="[flashx.textLayout.operations.CompositeOperation]" sort="true" index="true" asAncestors="flashx.textLayout.operations:FlowOperation,Object" tiptext="The CompositeOperation class encapsulates a group of transformations managed as a unit." helpurl="flashx.textLayout.operations:CompositeOperation">
            <folder name="Methods" id="Methods" tiptext="Methods for class CompositeOperation" helpurl="flashx.textLayout.operations:CompositeOperation">
                <string name="CompositeOperation" object="[flashx.textLayout.operations.CompositeOperation]" text="new CompositeOperation(%[operations:Array=null]%)" constructor="true" tiptext="Creates a CompositeOperation object." version="1.5" playername="" helpurl="flashx.textLayout.operations:CompositeOperation:CompositeOperation"/>
                <string name="addOperation" object="[flashx.textLayout.operations.CompositeOperation]" text=".addOperation(%operation:flashx.textLayout.operations:FlowOperation%):void" tiptext="Adds an additional operation to the end of the list." version="1.5" playername="" helpurl="flashx.textLayout.operations:CompositeOperation:addOperation"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class CompositeOperation" helpurl="flashx.textLayout.operations:CompositeOperation">
                <string name="operations" object="[flashx.textLayout.operations.CompositeOperation]" text=".operations" tiptext="An array containing the operations grouped by this composite operation." version="" playername="" helpurl="flashx.textLayout.operations:CompositeOperation:operations:get"/>
            </folder>
        </folder>
        <folder name="CopyOperation" id="[flashx.textLayout.operations.CopyOperation]" sort="true" index="true" asAncestors="flashx.textLayout.operations:FlowTextOperation,flashx.textLayout.operations:FlowOperation,Object" tiptext="The CopyOperation class encapsulates a copy operation." helpurl="flashx.textLayout.operations:CopyOperation">
            <folder name="Methods" id="Methods" tiptext="Methods for class CopyOperation" helpurl="flashx.textLayout.operations:CopyOperation">
                <string name="CopyOperation" object="[flashx.textLayout.operations.CopyOperation]" text="new CopyOperation(%operationState:flashx.textLayout.edit:SelectionState%)" constructor="true" tiptext="Creates a CopyOperation object." version="1.5" playername="" helpurl="flashx.textLayout.operations:CopyOperation:CopyOperation"/>
            </folder>
        </folder>
        <folder name="CutOperation" id="[flashx.textLayout.operations.CutOperation]" sort="true" index="true" asAncestors="flashx.textLayout.operations:FlowTextOperation,flashx.textLayout.operations:FlowOperation,Object" tiptext="The CutOperation class encapsulates a cut operation." helpurl="flashx.textLayout.operations:CutOperation">
            <folder name="Methods" id="Methods" tiptext="Methods for class CutOperation" helpurl="flashx.textLayout.operations:CutOperation">
                <string name="CutOperation" object="[flashx.textLayout.operations.CutOperation]" text="new CutOperation(%operationState:flashx.textLayout.edit:SelectionState,scrapToCut:flashx.textLayout.edit:TextScrap%)" constructor="true" tiptext="Creates a CutOperation object." version="1.5" playername="" helpurl="flashx.textLayout.operations:CutOperation:CutOperation"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class CutOperation" helpurl="flashx.textLayout.operations:CutOperation">
                <string name="scrapToCut" object="[flashx.textLayout.operations.CutOperation]" text=".scrapToCut" tiptext="scrapToCut the original removed text" version="" playername="" helpurl="flashx.textLayout.operations:CutOperation:scrapToCut:get"/>
            </folder>
        </folder>
        <folder name="DeleteTextOperation" id="[flashx.textLayout.operations.DeleteTextOperation]" sort="true" index="true" asAncestors="flashx.textLayout.operations:FlowTextOperation,flashx.textLayout.operations:FlowOperation,Object" tiptext="The DeleteTextOperation class encapsulates the deletion of a range of text." helpurl="flashx.textLayout.operations:DeleteTextOperation">
            <folder name="Methods" id="Methods" tiptext="Methods for class DeleteTextOperation" helpurl="flashx.textLayout.operations:DeleteTextOperation">
                <string name="DeleteTextOperation" object="[flashx.textLayout.operations.DeleteTextOperation]" text="new DeleteTextOperation(%operationState:flashx.textLayout.edit:SelectionState[,deleteSelectionState:flashx.textLayout.edit:SelectionState=null,allowMerge:Boolean=false]%)" constructor="true" tiptext="Creates a DeleteTextOperation operation." version="1.5" playername="" helpurl="flashx.textLayout.operations:DeleteTextOperation:DeleteTextOperation"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class DeleteTextOperation" helpurl="flashx.textLayout.operations:DeleteTextOperation">
                <string name="allowMerge" object="[flashx.textLayout.operations.DeleteTextOperation]" text=".allowMerge" tiptext="Indicates whether this operation can be merged with operations executed before or after it." version="" playername="" helpurl="flashx.textLayout.operations:DeleteTextOperation:allowMerge:get"/>
                <string name="deleteSelectionState" object="[flashx.textLayout.operations.DeleteTextOperation]" text=".deleteSelectionState" tiptext="deleteSelectionState The range of text to delete" version="" playername="" helpurl="flashx.textLayout.operations:DeleteTextOperation:deleteSelectionState:get"/>
            </folder>
        </folder>
        <folder name="FlowElementOperation" id="[flashx.textLayout.operations.FlowElementOperation]" sort="true" index="true" asAncestors="flashx.textLayout.operations:FlowTextOperation,flashx.textLayout.operations:FlowOperation,Object" tiptext="The FlowElementOperation class is the base class for operations that transform a FlowElement." helpurl="flashx.textLayout.operations:FlowElementOperation">
            <folder name="Methods" id="Methods" tiptext="Methods for class FlowElementOperation" helpurl="flashx.textLayout.operations:FlowElementOperation">
                <string name="FlowElementOperation" object="[flashx.textLayout.operations.FlowElementOperation]" text="new FlowElementOperation(%operationState:flashx.textLayout.edit:SelectionState,targetElement:flashx.textLayout.elements:FlowElement[,relativeStart:int=0,relativeEnd:int=-1]%)" constructor="true" tiptext="Creates a FlowElementOperation object." version="1.5" playername="" helpurl="flashx.textLayout.operations:FlowElementOperation:FlowElementOperation"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class FlowElementOperation" helpurl="flashx.textLayout.operations:FlowElementOperation">
                <string name="relativeEnd" object="[flashx.textLayout.operations.FlowElementOperation]" text=".relativeEnd" tiptext="An offset from the start of the targetElement." version="" playername="" helpurl="flashx.textLayout.operations:FlowElementOperation:relativeEnd:get"/>
                <string name="relativeStart" object="[flashx.textLayout.operations.FlowElementOperation]" text=".relativeStart" tiptext="An offset from the beginning of the targetElement." version="" playername="" helpurl="flashx.textLayout.operations:FlowElementOperation:relativeStart:get"/>
                <string name="targetElement" object="[flashx.textLayout.operations.FlowElementOperation]" text=".targetElement" tiptext="Specifies the element this operation modifies." version="" playername="" helpurl="flashx.textLayout.operations:FlowElementOperation:targetElement:get"/>
            </folder>
        </folder>
        <folder name="FlowOperation" id="[flashx.textLayout.operations.FlowOperation]" sort="true" index="true" asAncestors="Object" tiptext="The FlowOperation class is the base class for all Text Layout Framework operations." helpurl="flashx.textLayout.operations:FlowOperation">
            <folder name="Methods" id="Methods" tiptext="Methods for class FlowOperation" helpurl="flashx.textLayout.operations:FlowOperation">
                <string name="FlowOperation" object="[flashx.textLayout.operations.FlowOperation]" text="new FlowOperation(%textFlow:flashx.textLayout.elements:TextFlow%)" constructor="true" tiptext="Creates the FlowOperation object." version="1.5" playername="" helpurl="flashx.textLayout.operations:FlowOperation:FlowOperation"/>
                <string name="canUndo" object="[flashx.textLayout.operations.FlowOperation]" text=".canUndo(%%):Boolean" tiptext="Test if this operation be placed on the undo stack." version="1.5" playername="" helpurl="flashx.textLayout.operations:FlowOperation:canUndo"/>
                <string name="doOperation" object="[flashx.textLayout.operations.FlowOperation]" text=".doOperation(%%):Boolean" tiptext="Executes the operation." version="1.5" playername="" helpurl="flashx.textLayout.operations:FlowOperation:doOperation"/>
                <string name="redo" object="[flashx.textLayout.operations.FlowOperation]" text=".redo(%%):flashx.textLayout.edit:SelectionState" tiptext="Re-executes the operation." version="1.5" playername="" helpurl="flashx.textLayout.operations:FlowOperation:redo"/>
                <string name="undo" object="[flashx.textLayout.operations.FlowOperation]" text=".undo(%%):flashx.textLayout.edit:SelectionState" tiptext="Reverses the operation." version="1.5" playername="" helpurl="flashx.textLayout.operations:FlowOperation:undo"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class FlowOperation" helpurl="flashx.textLayout.operations:FlowOperation">
                <string name="userData" object="[flashx.textLayout.operations.FlowOperation]" text=".userData" tiptext="Arbitrary data associated with an element." version="" playername="" helpurl="flashx.textLayout.operations:FlowOperation:userData"/>
                <string name="beginGeneration" object="[flashx.textLayout.operations.FlowOperation]" text=".beginGeneration" tiptext="The text flow generation before the operation." version="" playername="" helpurl="flashx.textLayout.operations:FlowOperation:beginGeneration:get"/>
                <string name="endGeneration" object="[flashx.textLayout.operations.FlowOperation]" text=".endGeneration" tiptext="The text flow generation after the operation." version="" playername="" helpurl="flashx.textLayout.operations:FlowOperation:endGeneration:get"/>
                <string name="textFlow" object="[flashx.textLayout.operations.FlowOperation]" text=".textFlow" tiptext="The TextFlow object to which this operation is applied." version="" playername="" helpurl="flashx.textLayout.operations:FlowOperation:textFlow:get"/>
            </folder>
        </folder>
        <folder name="FlowTextOperation" id="[flashx.textLayout.operations.FlowTextOperation]" sort="true" index="true" asAncestors="flashx.textLayout.operations:FlowOperation,Object" tiptext="The FlowTextOperation is the base class for operations that transform a range of text." helpurl="flashx.textLayout.operations:FlowTextOperation">
            <folder name="Methods" id="Methods" tiptext="Methods for class FlowTextOperation" helpurl="flashx.textLayout.operations:FlowTextOperation">
                <string name="FlowTextOperation" object="[flashx.textLayout.operations.FlowTextOperation]" text="new FlowTextOperation(%operationState:flashx.textLayout.edit:SelectionState%)" constructor="true" tiptext="Creates the FlowTextOperation object." version="1.5" playername="" helpurl="flashx.textLayout.operations:FlowTextOperation:FlowTextOperation"/>
                <string name="redo" object="[flashx.textLayout.operations.FlowTextOperation]" text=".redo(%%):flashx.textLayout.edit:SelectionState" tiptext="Re-executes the operation." version="1.5" playername="" helpurl="flashx.textLayout.operations:FlowTextOperation:redo"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class FlowTextOperation" helpurl="flashx.textLayout.operations:FlowTextOperation">
                <string name="absoluteEnd" object="[flashx.textLayout.operations.FlowTextOperation]" text=".absoluteEnd" tiptext="The absolute end point of the range of text to which this operation is applied." version="" playername="" helpurl="flashx.textLayout.operations:FlowTextOperation:absoluteEnd:get"/>
                <string name="absoluteStart" object="[flashx.textLayout.operations.FlowTextOperation]" text=".absoluteStart" tiptext="The absolute start point of the range of text to which this operation is applied." version="" playername="" helpurl="flashx.textLayout.operations:FlowTextOperation:absoluteStart:get"/>
                <string name="originalSelectionState" object="[flashx.textLayout.operations.FlowTextOperation]" text=".originalSelectionState" tiptext="The selection state at the start of the operation." version="" playername="" helpurl="flashx.textLayout.operations:FlowTextOperation:originalSelectionState:get"/>
            </folder>
        </folder>
        <folder name="InsertInlineGraphicOperation" id="[flashx.textLayout.operations.InsertInlineGraphicOperation]" sort="true" index="true" asAncestors="flashx.textLayout.operations:FlowTextOperation,flashx.textLayout.operations:FlowOperation,Object" tiptext="The InsertInlineGraphicOperation class encapsulates the insertion of an inline graphic into a text flow." helpurl="flashx.textLayout.operations:InsertInlineGraphicOperation">
            <folder name="Methods" id="Methods" tiptext="Methods for class InsertInlineGraphicOperation" helpurl="flashx.textLayout.operations:InsertInlineGraphicOperation">
                <string name="InsertInlineGraphicOperation" object="[flashx.textLayout.operations.InsertInlineGraphicOperation]" text="new InsertInlineGraphicOperation(%operationState:flashx.textLayout.edit:SelectionState,source:Object,width:Object,height:Object[,options:Object=null]%)" constructor="true" tiptext="Creates an InsertInlineGraphicsOperation object." version="1.5" playername="" helpurl="flashx.textLayout.operations:InsertInlineGraphicOperation:InsertInlineGraphicOperation"/>
                <string name="redo" object="[flashx.textLayout.operations.InsertInlineGraphicOperation]" text=".redo(%%):flashx.textLayout.edit:SelectionState" tiptext="Re-executes the operation after it has been undone." version="1.5" playername="" helpurl="flashx.textLayout.operations:InsertInlineGraphicOperation:redo"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class InsertInlineGraphicOperation" helpurl="flashx.textLayout.operations:InsertInlineGraphicOperation">
                <string name="height" object="[flashx.textLayout.operations.InsertInlineGraphicOperation]" text=".height" tiptext="The height of the image." version="" playername="" helpurl="flashx.textLayout.operations:InsertInlineGraphicOperation:height:get"/>
                <string name="options" object="[flashx.textLayout.operations.InsertInlineGraphicOperation]" text=".options" tiptext="options are not supported" version="" playername="" helpurl="flashx.textLayout.operations:InsertInlineGraphicOperation:options:get"/>
                <string name="source" object="[flashx.textLayout.operations.InsertInlineGraphicOperation]" text=".source" tiptext="Sets the source for the graphic." version="" playername="" helpurl="flashx.textLayout.operations:InsertInlineGraphicOperation:source:get"/>
                <string name="width" object="[flashx.textLayout.operations.InsertInlineGraphicOperation]" text=".width" tiptext="The width of the graphic." version="" playername="" helpurl="flashx.textLayout.operations:InsertInlineGraphicOperation:width:get"/>
            </folder>
        </folder>
        <folder name="InsertTextOperation" id="[flashx.textLayout.operations.InsertTextOperation]" sort="true" index="true" asAncestors="flashx.textLayout.operations:FlowTextOperation,flashx.textLayout.operations:FlowOperation,Object" tiptext="The InsertTextOperation class encapsulates a text insertion operation." helpurl="flashx.textLayout.operations:InsertTextOperation">
            <folder name="Methods" id="Methods" tiptext="Methods for class InsertTextOperation" helpurl="flashx.textLayout.operations:InsertTextOperation">
                <string name="InsertTextOperation" object="[flashx.textLayout.operations.InsertTextOperation]" text="new InsertTextOperation(%operationState:flashx.textLayout.edit:SelectionState,text:String[,deleteSelectionState:flashx.textLayout.edit:SelectionState=null]%)" constructor="true" tiptext="Creates an InsertTextOperation object." version="1.5" playername="" helpurl="flashx.textLayout.operations:InsertTextOperation:InsertTextOperation"/>
                <string name="redo" object="[flashx.textLayout.operations.InsertTextOperation]" text=".redo(%%):flashx.textLayout.edit:SelectionState" tiptext="Re-executes the operation after it has been undone." version="1.5" playername="" helpurl="flashx.textLayout.operations:InsertTextOperation:redo"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class InsertTextOperation" helpurl="flashx.textLayout.operations:InsertTextOperation">
                <string name="characterFormat" object="[flashx.textLayout.operations.InsertTextOperation]" text=".characterFormat" tiptext="The character format applied to the inserted text." version="" playername="" helpurl="flashx.textLayout.operations:InsertTextOperation:characterFormat:get"/>
                <string name="deleteSelectionState" object="[flashx.textLayout.operations.InsertTextOperation]" text=".deleteSelectionState" tiptext="The text deleted by this operation, if any." version="" playername="" helpurl="flashx.textLayout.operations:InsertTextOperation:deleteSelectionState:get"/>
                <string name="text" object="[flashx.textLayout.operations.InsertTextOperation]" text=".text" tiptext="The text inserted by this operation." version="" playername="" helpurl="flashx.textLayout.operations:InsertTextOperation:text:get"/>
            </folder>
        </folder>
        <folder name="ModifyInlineGraphicOperation" id="[flashx.textLayout.operations.ModifyInlineGraphicOperation]" sort="true" index="true" asAncestors="flashx.textLayout.operations:FlowTextOperation,flashx.textLayout.operations:FlowOperation,Object" tiptext="The InsertInlineGraphicOperation class encapsulates the modification of an existing inline graphic." helpurl="flashx.textLayout.operations:ModifyInlineGraphicOperation">
            <folder name="Methods" id="Methods" tiptext="Methods for class ModifyInlineGraphicOperation" helpurl="flashx.textLayout.operations:ModifyInlineGraphicOperation">
                <string name="ModifyInlineGraphicOperation" object="[flashx.textLayout.operations.ModifyInlineGraphicOperation]" text="new ModifyInlineGraphicOperation(%operationState:flashx.textLayout.edit:SelectionState,source:Object,width:Object,height:Object[,options:Object=null]%)" constructor="true" tiptext="Creates a ModifyInlineGraphicsOperation object." version="1.5" playername="" helpurl="flashx.textLayout.operations:ModifyInlineGraphicOperation:ModifyInlineGraphicOperation"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class ModifyInlineGraphicOperation" helpurl="flashx.textLayout.operations:ModifyInlineGraphicOperation">
                <string name="height" object="[flashx.textLayout.operations.ModifyInlineGraphicOperation]" text=".height" tiptext="The height of the image." version="" playername="" helpurl="flashx.textLayout.operations:ModifyInlineGraphicOperation:height:get"/>
                <string name="options" object="[flashx.textLayout.operations.ModifyInlineGraphicOperation]" text=".options" tiptext="options are not supported" version="" playername="" helpurl="flashx.textLayout.operations:ModifyInlineGraphicOperation:options:get"/>
                <string name="source" object="[flashx.textLayout.operations.ModifyInlineGraphicOperation]" text=".source" tiptext="Sets the source for the graphic." version="" playername="" helpurl="flashx.textLayout.operations:ModifyInlineGraphicOperation:source:get"/>
                <string name="width" object="[flashx.textLayout.operations.ModifyInlineGraphicOperation]" text=".width" tiptext="The width of the graphic." version="" playername="" helpurl="flashx.textLayout.operations:ModifyInlineGraphicOperation:width:get"/>
            </folder>
        </folder>
        <folder name="PasteOperation" id="[flashx.textLayout.operations.PasteOperation]" sort="true" index="true" asAncestors="flashx.textLayout.operations:FlowTextOperation,flashx.textLayout.operations:FlowOperation,Object" tiptext="The PasteOperation class encapsulates a paste operation." helpurl="flashx.textLayout.operations:PasteOperation">
            <folder name="Methods" id="Methods" tiptext="Methods for class PasteOperation" helpurl="flashx.textLayout.operations:PasteOperation">
                <string name="PasteOperation" object="[flashx.textLayout.operations.PasteOperation]" text="new PasteOperation(%operationState:flashx.textLayout.edit:SelectionState,textScrap:flashx.textLayout.edit:TextScrap%)" constructor="true" tiptext="Creates a PasteOperation object." version="1.5" playername="" helpurl="flashx.textLayout.operations:PasteOperation:PasteOperation"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class PasteOperation" helpurl="flashx.textLayout.operations:PasteOperation">
                <string name="textScrap" object="[flashx.textLayout.operations.PasteOperation]" text=".textScrap" tiptext="textScrap the text being pasted" version="" playername="" helpurl="flashx.textLayout.operations:PasteOperation:textScrap:get"/>
            </folder>
        </folder>
        <folder name="RedoOperation" id="[flashx.textLayout.operations.RedoOperation]" sort="true" index="true" asAncestors="flashx.textLayout.operations:FlowOperation,Object" tiptext="The RedoOperation class encapsulates a redo operation." helpurl="flashx.textLayout.operations:RedoOperation">
            <folder name="Methods" id="Methods" tiptext="Methods for class RedoOperation" helpurl="flashx.textLayout.operations:RedoOperation">
                <string name="RedoOperation" object="[flashx.textLayout.operations.RedoOperation]" text="new RedoOperation(%operation:flashx.textLayout.operations:FlowOperation%)" constructor="true" tiptext="Creates a RedoOperation object." version="1.5" playername="" helpurl="flashx.textLayout.operations:RedoOperation:RedoOperation"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class RedoOperation" helpurl="flashx.textLayout.operations:RedoOperation">
                <string name="operation" object="[flashx.textLayout.operations.RedoOperation]" text=".operation" tiptext="The operation to redo." version="" playername="" helpurl="flashx.textLayout.operations:RedoOperation:operation:get"/>
            </folder>
        </folder>
        <folder name="SplitParagraphOperation" id="[flashx.textLayout.operations.SplitParagraphOperation]" sort="true" index="true" asAncestors="flashx.textLayout.operations:FlowTextOperation,flashx.textLayout.operations:FlowOperation,Object" tiptext="The SplitParagraphOperation class encapsulates a change that splits a paragraph into two elements." helpurl="flashx.textLayout.operations:SplitParagraphOperation">
            <folder name="Methods" id="Methods" tiptext="Methods for class SplitParagraphOperation" helpurl="flashx.textLayout.operations:SplitParagraphOperation">
                <string name="SplitParagraphOperation" object="[flashx.textLayout.operations.SplitParagraphOperation]" text="new SplitParagraphOperation(%operationState:flashx.textLayout.edit:SelectionState%)" constructor="true" tiptext="Creates a SplitParagraphOperation object." version="1.5" playername="" helpurl="flashx.textLayout.operations:SplitParagraphOperation:SplitParagraphOperation"/>
            </folder>
        </folder>
        <folder name="UndoOperation" id="[flashx.textLayout.operations.UndoOperation]" sort="true" index="true" asAncestors="flashx.textLayout.operations:FlowOperation,Object" tiptext="The UndoOperation class encapsulates an undo operation." helpurl="flashx.textLayout.operations:UndoOperation">
            <folder name="Methods" id="Methods" tiptext="Methods for class UndoOperation" helpurl="flashx.textLayout.operations:UndoOperation">
                <string name="UndoOperation" object="[flashx.textLayout.operations.UndoOperation]" text="new UndoOperation(%op:flashx.textLayout.operations:FlowOperation%)" constructor="true" tiptext="Creates an UndoOperation object." version="1.5" playername="" helpurl="flashx.textLayout.operations:UndoOperation:UndoOperation"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class UndoOperation" helpurl="flashx.textLayout.operations:UndoOperation">
                <string name="operation" object="[flashx.textLayout.operations.UndoOperation]" text=".operation" tiptext="The operation to undo." version="" playername="" helpurl="flashx.textLayout.operations:UndoOperation:operation:get"/>
            </folder>
        </folder>
    </folder>
        <folder name="flashx.textLayout.utils" id="flashx.textLayout.utils" sort="true" tiptext="Classes for package flashx.textLayout.utils" helpurl="flashx.textLayout.utils">
        <folder name="CharacterUtil" id="[flashx.textLayout.utils.CharacterUtil]" sort="true" index="true" asAncestors="Object" tiptext="Utilities for managing and getting information about characters." helpurl="flashx.textLayout.utils:CharacterUtil">
            <folder name="Methods" id="Methods" tiptext="Methods for class CharacterUtil" helpurl="flashx.textLayout.utils:CharacterUtil">
                <string name="isHighSurrogate" object="[flashx.textLayout.utils.CharacterUtil]" text="CharacterUtil.isHighSurrogate(%charCode:int%):Boolean" static="true" tiptext="Returns true if the charCode argument is a high word in a surrogate pair." version="1.5" playername="" helpurl="flashx.textLayout.utils:CharacterUtil:isHighSurrogate"/>
                <string name="isLowSurrogate" object="[flashx.textLayout.utils.CharacterUtil]" text="CharacterUtil.isLowSurrogate(%charCode:int%):Boolean" static="true" tiptext="Returns true if the charCode argument is a low word in a surrogate pair." version="1.5" playername="" helpurl="flashx.textLayout.utils:CharacterUtil:isLowSurrogate"/>
                <string name="isWhitespace" object="[flashx.textLayout.utils.CharacterUtil]" text="CharacterUtil.isWhitespace(%charCode:int%):Boolean" static="true" tiptext="Returns true if charCode is a whitespace character." version="1.5" playername="" helpurl="flashx.textLayout.utils:CharacterUtil:isWhitespace"/>
            </folder>
        </folder>
        <folder name="NavigationUtil" id="[flashx.textLayout.utils.NavigationUtil]" sort="true" index="true" asAncestors="Object" tiptext="Utilities for manipulating a TextRange The methods of this class are static and must be called using the syntax NavigationUtil.method(parameter)." helpurl="flashx.textLayout.utils:NavigationUtil">
            <folder name="Methods" id="Methods" tiptext="Methods for class NavigationUtil" helpurl="flashx.textLayout.utils:NavigationUtil">
                <string name="endOfDocument" object="[flashx.textLayout.utils.NavigationUtil]" text="NavigationUtil.endOfDocument(%range:flashx.textLayout.elements:TextRange[,extendSelection:Boolean=false]%):Boolean" static="true" tiptext="Sets the TextRange at the end of the document." version="1.5" playername="" helpurl="flashx.textLayout.utils:NavigationUtil:endOfDocument"/>
                <string name="endOfLine" object="[flashx.textLayout.utils.NavigationUtil]" text="NavigationUtil.endOfLine(%range:flashx.textLayout.elements:TextRange[,extendSelection:Boolean=false]%):Boolean" static="true" tiptext="Sets the TextRange at the end of the line." version="1.5" playername="" helpurl="flashx.textLayout.utils:NavigationUtil:endOfLine"/>
                <string name="endOfParagraph" object="[flashx.textLayout.utils.NavigationUtil]" text="NavigationUtil.endOfParagraph(%range:flashx.textLayout.elements:TextRange[,extendSelection:Boolean=false]%):Boolean" static="true" tiptext="Sets the TextRange at the end of the paragraph." version="1.5" playername="" helpurl="flashx.textLayout.utils:NavigationUtil:endOfParagraph"/>
                <string name="nextAtomPosition" object="[flashx.textLayout.utils.NavigationUtil]" text="NavigationUtil.nextAtomPosition(%flowRoot:flashx.textLayout.elements:TextFlow,absolutePos:int%):int" static="true" tiptext="Returns the absolute position of the next atom." version="1.5" playername="" helpurl="flashx.textLayout.utils:NavigationUtil:nextAtomPosition"/>
                <string name="nextCharacter" object="[flashx.textLayout.utils.NavigationUtil]" text="NavigationUtil.nextCharacter(%range:flashx.textLayout.elements:TextRange[,extendSelection:Boolean=false]%):Boolean" static="true" tiptext="Sets the TextRange forward by one character." version="1.5" playername="" helpurl="flashx.textLayout.utils:NavigationUtil:nextCharacter"/>
                <string name="nextLine" object="[flashx.textLayout.utils.NavigationUtil]" text="NavigationUtil.nextLine(%range:flashx.textLayout.elements:TextRange[,extendSelection:Boolean=false]%):Boolean" static="true" tiptext="Sets the TextRange down one line" version="1.5" playername="" helpurl="flashx.textLayout.utils:NavigationUtil:nextLine"/>
                <string name="nextPage" object="[flashx.textLayout.utils.NavigationUtil]" text="NavigationUtil.nextPage(%range:flashx.textLayout.elements:TextRange[,extendSelection:Boolean=false]%):Boolean" static="true" tiptext="Sets the TextRange down one page." version="1.5" playername="" helpurl="flashx.textLayout.utils:NavigationUtil:nextPage"/>
                <string name="nextWordPosition" object="[flashx.textLayout.utils.NavigationUtil]" text="NavigationUtil.nextWordPosition(%flowRoot:flashx.textLayout.elements:TextFlow,absolutePos:int%):int" static="true" tiptext="Returns the absolute position of the beginning of the next word." version="1.5" playername="" helpurl="flashx.textLayout.utils:NavigationUtil:nextWordPosition"/>
                <string name="nextWord" object="[flashx.textLayout.utils.NavigationUtil]" text="NavigationUtil.nextWord(%range:flashx.textLayout.elements:TextRange[,extendSelection:Boolean=false]%):Boolean" static="true" tiptext="Sets the TextRange forward by one word." version="1.5" playername="" helpurl="flashx.textLayout.utils:NavigationUtil:nextWord"/>
                <string name="previousAtomPosition" object="[flashx.textLayout.utils.NavigationUtil]" text="NavigationUtil.previousAtomPosition(%flowRoot:flashx.textLayout.elements:TextFlow,absolutePos:int%):int" static="true" tiptext="Returns the absolute position of the previous atom." version="1.5" playername="" helpurl="flashx.textLayout.utils:NavigationUtil:previousAtomPosition"/>
                <string name="previousCharacter" object="[flashx.textLayout.utils.NavigationUtil]" text="NavigationUtil.previousCharacter(%range:flashx.textLayout.elements:TextRange[,extendSelection:Boolean=false]%):Boolean" static="true" tiptext="Sets the TextRange backward by one character." version="1.5" playername="" helpurl="flashx.textLayout.utils:NavigationUtil:previousCharacter"/>
                <string name="previousLine" object="[flashx.textLayout.utils.NavigationUtil]" text="NavigationUtil.previousLine(%range:flashx.textLayout.elements:TextRange[,extendSelection:Boolean=false]%):Boolean" static="true" tiptext="Sets the TextRange up one line." version="1.5" playername="" helpurl="flashx.textLayout.utils:NavigationUtil:previousLine"/>
                <string name="previousPage" object="[flashx.textLayout.utils.NavigationUtil]" text="NavigationUtil.previousPage(%range:flashx.textLayout.elements:TextRange[,extendSelection:Boolean=false]%):Boolean" static="true" tiptext="Sets the TextRange up one page." version="1.5" playername="" helpurl="flashx.textLayout.utils:NavigationUtil:previousPage"/>
                <string name="previousWordPosition" object="[flashx.textLayout.utils.NavigationUtil]" text="NavigationUtil.previousWordPosition(%flowRoot:flashx.textLayout.elements:TextFlow,absolutePos:int%):int" static="true" tiptext="Returns absolute position of the beginning of the previous word." version="1.5" playername="" helpurl="flashx.textLayout.utils:NavigationUtil:previousWordPosition"/>
                <string name="previousWord" object="[flashx.textLayout.utils.NavigationUtil]" text="NavigationUtil.previousWord(%range:flashx.textLayout.elements:TextRange[,extendSelection:Boolean=false]%):Boolean" static="true" tiptext="Sets the TextRange backward by one word." version="1.5" playername="" helpurl="flashx.textLayout.utils:NavigationUtil:previousWord"/>
                <string name="startOfDocument" object="[flashx.textLayout.utils.NavigationUtil]" text="NavigationUtil.startOfDocument(%range:flashx.textLayout.elements:TextRange[,extendSelection:Boolean=false]%):Boolean" static="true" tiptext="Sets the TextRange at the beginning of the document." version="1.5" playername="" helpurl="flashx.textLayout.utils:NavigationUtil:startOfDocument"/>
                <string name="startOfLine" object="[flashx.textLayout.utils.NavigationUtil]" text="NavigationUtil.startOfLine(%range:flashx.textLayout.elements:TextRange[,extendSelection:Boolean=false]%):Boolean" static="true" tiptext="Sets the TextRange at the beginning of the line." version="1.5" playername="" helpurl="flashx.textLayout.utils:NavigationUtil:startOfLine"/>
                <string name="startOfParagraph" object="[flashx.textLayout.utils.NavigationUtil]" text="NavigationUtil.startOfParagraph(%range:flashx.textLayout.elements:TextRange[,extendSelection:Boolean=false]%):Boolean" static="true" tiptext="Sets the TextRange at the beginning of the paragraph." version="1.5" playername="" helpurl="flashx.textLayout.utils:NavigationUtil:startOfParagraph"/>
            </folder>
        </folder>
    </folder>
        <folder name="flashx.undo" id="flashx.undo" sort="true" tiptext="Classes for package flashx.undo" helpurl="flashx.undo">
        <folder name="IOperation" id="[flashx.undo.IOperation]" sort="true" index="true" tiptext="IOperation defines the interface for operations that can be undone and redone." helpurl="flashx.undo:IOperation">
            <folder name="Methods" id="Methods" tiptext="Methods for class IOperation" helpurl="flashx.undo:IOperation">
                <string name="performRedo" object="[flashx.undo.IOperation]" text=".performRedo(%%):void" tiptext="Reperforms the operation." version="1.5" playername="" helpurl="flashx.undo:IOperation:performRedo"/>
                <string name="performUndo" object="[flashx.undo.IOperation]" text=".performUndo(%%):void" tiptext="Reverses the operation." version="1.5" playername="" helpurl="flashx.undo:IOperation:performUndo"/>
            </folder>
        </folder>
        <folder name="IUndoManager" id="[flashx.undo.IUndoManager]" sort="true" index="true" tiptext="IUndoManager defines the interface for managing the undo and redo stacks." helpurl="flashx.undo:IUndoManager">
            <folder name="Methods" id="Methods" tiptext="Methods for class IUndoManager" helpurl="flashx.undo:IUndoManager">
                <string name="canRedo" object="[flashx.undo.IUndoManager]" text=".canRedo(%%):Boolean" tiptext="Indicates whether there is currently an operation that can be redone." version="1.5" playername="" helpurl="flashx.undo:IUndoManager:canRedo"/>
                <string name="canUndo" object="[flashx.undo.IUndoManager]" text=".canUndo(%%):Boolean" tiptext="Indicates whether there is currently an operation that can be undone." version="1.5" playername="" helpurl="flashx.undo:IUndoManager:canUndo"/>
                <string name="clearAll" object="[flashx.undo.IUndoManager]" text=".clearAll(%%):void" tiptext="Clears both the undo and the redo histories." version="1.5" playername="" helpurl="flashx.undo:IUndoManager:clearAll"/>
                <string name="clearRedo" object="[flashx.undo.IUndoManager]" text=".clearRedo(%%):void" tiptext="Clears the redo stack." version="1.5" playername="" helpurl="flashx.undo:IUndoManager:clearRedo"/>
                <string name="peekRedo" object="[flashx.undo.IUndoManager]" text=".peekRedo(%%):flashx.undo:IOperation" tiptext="Returns the next operation to be redone." version="1.5" playername="" helpurl="flashx.undo:IUndoManager:peekRedo"/>
                <string name="peekUndo" object="[flashx.undo.IUndoManager]" text=".peekUndo(%%):flashx.undo:IOperation" tiptext="Returns the next operation to be undone." version="1.5" playername="" helpurl="flashx.undo:IUndoManager:peekUndo"/>
                <string name="popRedo" object="[flashx.undo.IUndoManager]" text=".popRedo(%%):flashx.undo:IOperation" tiptext="Removes the next operation to be redone from the redo stack, and returns it." version="1.5" playername="" helpurl="flashx.undo:IUndoManager:popRedo"/>
                <string name="popUndo" object="[flashx.undo.IUndoManager]" text=".popUndo(%%):flashx.undo:IOperation" tiptext="Removes the next operation to be undone from the undo stack, and returns it." version="1.5" playername="" helpurl="flashx.undo:IUndoManager:popUndo"/>
                <string name="pushRedo" object="[flashx.undo.IUndoManager]" text=".pushRedo(%operation:flashx.undo:IOperation%):void" tiptext="Adds a redoable operation to the redo stack." version="1.5" playername="" helpurl="flashx.undo:IUndoManager:pushRedo"/>
                <string name="pushUndo" object="[flashx.undo.IUndoManager]" text=".pushUndo(%operation:flashx.undo:IOperation%):void" tiptext="Adds an undoable operation to the undo stack." version="1.5" playername="" helpurl="flashx.undo:IUndoManager:pushUndo"/>
                <string name="redo" object="[flashx.undo.IUndoManager]" text=".redo(%%):void" tiptext="Removes the next IOperation object from the redo stack and calls the performRedo() function of that object." version="" playername="" helpurl="flashx.undo:IUndoManager:redo"/>
                <string name="undo" object="[flashx.undo.IUndoManager]" text=".undo(%%):void" tiptext="Removes the next IOperation object from the undo stack and calls the performUndo() function of that object." version="" playername="" helpurl="flashx.undo:IUndoManager:undo"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class IUndoManager" helpurl="flashx.undo:IUndoManager">
                <string name="undoAndRedoItemLimit" object="[flashx.undo.IUndoManager]" text=".undoAndRedoItemLimit" tiptext="The maximum number of undoable or redoable operations to track." version="" playername="" helpurl="flashx.undo:IUndoManager:undoAndRedoItemLimit:get"/>
            </folder>
        </folder>
        <folder name="UndoManager" id="[flashx.undo.UndoManager]" sort="true" index="true" asAncestors="Object" tiptext="The UndoManager class manages the history of editing operations on a text flow so that these operations can be undone and redone." helpurl="flashx.undo:UndoManager">
            <folder name="Methods" id="Methods" tiptext="Methods for class UndoManager" helpurl="flashx.undo:UndoManager">
                <string name="UndoManager" object="[flashx.undo.UndoManager]" text="new UndoManager(%%)" constructor="true" tiptext="Creates an UndoManager object." version="1.5" playername="" helpurl="flashx.undo:UndoManager:UndoManager"/>
                <string name="canRedo" object="[flashx.undo.UndoManager]" text=".canRedo(%%):Boolean" tiptext="Indicates whether there is currently an operation that can be redone." version="1.5" playername="" helpurl="flashx.undo:UndoManager:canRedo"/>
                <string name="canUndo" object="[flashx.undo.UndoManager]" text=".canUndo(%%):Boolean" tiptext="Indicates whether there is currently an operation that can be undone." version="1.5" playername="" helpurl="flashx.undo:UndoManager:canUndo"/>
                <string name="clearAll" object="[flashx.undo.UndoManager]" text=".clearAll(%%):void" tiptext="Clears both the undo and the redo histories." version="1.5" playername="" helpurl="flashx.undo:UndoManager:clearAll"/>
                <string name="clearRedo" object="[flashx.undo.UndoManager]" text=".clearRedo(%%):void" tiptext="Clears the redo stack." version="1.5" playername="" helpurl="flashx.undo:UndoManager:clearRedo"/>
                <string name="peekRedo" object="[flashx.undo.UndoManager]" text=".peekRedo(%%):flashx.undo:IOperation" tiptext="Returns the next operation to be redone." version="1.5" playername="" helpurl="flashx.undo:UndoManager:peekRedo"/>
                <string name="peekUndo" object="[flashx.undo.UndoManager]" text=".peekUndo(%%):flashx.undo:IOperation" tiptext="Returns the next operation to be undone." version="1.5" playername="" helpurl="flashx.undo:UndoManager:peekUndo"/>
                <string name="popRedo" object="[flashx.undo.UndoManager]" text=".popRedo(%%):flashx.undo:IOperation" tiptext="Removes the next operation to be redone from the redo stack, and returns it." version="1.5" playername="" helpurl="flashx.undo:UndoManager:popRedo"/>
                <string name="popUndo" object="[flashx.undo.UndoManager]" text=".popUndo(%%):flashx.undo:IOperation" tiptext="Removes the next operation to be undone from the undo stack, and returns it." version="1.5" playername="" helpurl="flashx.undo:UndoManager:popUndo"/>
                <string name="pushRedo" object="[flashx.undo.UndoManager]" text=".pushRedo(%operation:flashx.undo:IOperation%):void" tiptext="Adds a redoable operation to the redo stack." version="1.5" playername="" helpurl="flashx.undo:UndoManager:pushRedo"/>
                <string name="pushUndo" object="[flashx.undo.UndoManager]" text=".pushUndo(%operation:flashx.undo:IOperation%):void" tiptext="Adds an undoable operation to the undo stack." version="1.5" playername="" helpurl="flashx.undo:UndoManager:pushUndo"/>
                <string name="redo" object="[flashx.undo.UndoManager]" text=".redo(%%):void" tiptext="Removes the next IOperation object from the redo stack and calls the performRedo() function of that object." version="1.5" playername="" helpurl="flashx.undo:UndoManager:redo"/>
                <string name="undo" object="[flashx.undo.UndoManager]" text=".undo(%%):void" tiptext="Removes the next IOperation object from the undo stack and calls the performUndo() function of that object." version="1.5" playername="" helpurl="flashx.undo:UndoManager:undo"/>
            </folder>
            <folder name="Properties" id="Properties" tiptext="Properties for class UndoManager" helpurl="flashx.undo:UndoManager">
                <string name="undoAndRedoItemLimit" object="[flashx.undo.UndoManager]" text=".undoAndRedoItemLimit" tiptext="The maximum number of undoable or redoable operations to track." version="" playername="" helpurl="flashx.undo:UndoManager:undoAndRedoItemLimit:get"/>
            </folder>
        </folder>
    </folder>
        <folder name="Language Elements" id="Language Elements" sort="true" tiptext="Language elements that perform or specify an action at runtime">
            <folder name="Statements, Keywords &amp; Directives" id="Statements, Keywords &amp; Directives" sort="true" tiptext="Statements to be used in expressions" helpurl="statements:">
                <folder name="statement" id="statement" sort="true" tiptext="Language elements that perform or specify an action at runtime.">
                    <action id="break" name="break" quickey="br" text="break;\n" tiptext="Appears within a loop (for , for..in, for each..in, do..while or while) or within a block of statements associated with a particular case within a switch statement." version="9" helpurl="statements:break"/>
                    <action id="case" name="case" quickey="ce" text="case condition :\n" tiptext="Defines a condition for the switch statement." version="9" helpurl="statements:case"/>
                    <action id="continue" name="continue" quickey="co" text="continue;\n" tiptext="Jumps past all remaining statements in the innermost loop and starts the next iteration of the loop as if control had passed through to the end of the loop normally." version="9" helpurl="statements:continue"/>
                    <action id="default" name="default" quickey="dt" text="default :\n" tiptext="Defines the default case for a switch statement." version="9" helpurl="statements:default"/>
                    <action id="do while" name="do..while" quickey="do" text="do {\n} while (% condition %);\n" tiptext="Similar to a while loop, except that the statements are executed once before the initial evaluation of the condition." version="9" helpurl="statements:do..while"/>
                    <action id="else" name="else" quickey="el" text="} else {\n" tiptext="Specifies the statements to run if the condition in the if statement returns false." version="9" helpurl="statements:else"/>
                    <action id="for" name="for" quickey="fr" text="for (% init; condition; next %) {\n}\n" tiptext="Evaluates the init (initialize) expression once and then starts a looping sequence." version="9" helpurl="statements:for"/>
                    <action id="for in" name="for..in" quickey="fi" text="for (% $iterator$ in $object$ %) {\n}\n" tiptext="Iterates over the properties of an object or elements in an array and executes the statement for each property or element." version="9" helpurl="statements:for..in"/>
                    <action id="for each in" name="for each..in" text="for each (% $iterator$ in $object$ %) {\n}\n" tiptext="Iterates over the items in a collection." version="9" helpurl="statements:for each..in"/>
                    <action id="if" name="if" quickey="if" text="if (% condition %) {\n}\n" tiptext="Evaluates a condition to determine the next action in a SWF file." version="9" helpurl="statements:if"/>
                    <action id="label" name="label" text="" tiptext="Associates a statement with an identifier that can be referenced by break or continue." version="9" helpurl="statements:label"/>
                    <action id="return" name="return" quickey="rt" text="return (%%);\n" tiptext="Returns from a function, optionally specifying a return value." version="9" helpurl="statements:return"/>
                    <string name="super" text="super" tiptext="Invokes the superclass version of a method or constructor." version="9" helpurl="statements:super"/>
                    <action id="switch" name="switch" quickey="sw" text="switch (% condition %) {\n}\n" tiptext="Causes control to transfer to one of several statements, depending on the value of an expression." version="9" helpurl="statements:switch"/>
                    <action id="throw" name="throw" quickey="th" text="throw %expression%;\n" tiptext="Generates, or throws , an error that can be handled, or caught , by a catch{} code block." version="9" helpurl="statements:throw"/>
                    <ifmode mode="SCRIPT_ASSIST_ON">
                        <action id="try" name="try" quickey="ty" text="try {\n}\n" tiptext="Try a block of code with exception handling" version="7.0" helpurl="statements:try"/>
                    </ifmode>
                    <ifmode mode="SCRIPT_ASSIST_ON">
                        <action id="catch" name="catch" quickey="ch" text="catch (% variable %) {\n}\n" tiptext="Catches an exception" version="7.0" helpurl="statements:catch"/>
                    </ifmode>
                    <ifmode mode="SCRIPT_ASSIST_ON">
                        <action id="finally" name="finally" quickey="fy" text="finally {\n}\n" tiptext="Executes code after exception handling" version="7.0" helpurl="statements:finally"/>
                    </ifmode>
                    <ifmode mode="SCRIPT_ASSIST_OFF">
                        <string name="try..catch..finally" text="try {\n}\ncatch (% variable %) {\n}\nfinally {\n}\n" tiptext="Enclose a block of code in which an error can occur, and then respond to the error." version="9" helpurl="statements:try..catch..finally"/>
                    </ifmode>
                    <ifmode mode="SCRIPT_ASSIST_ON">
                        <action id="evaluate" name="evaluate" quickey="ev" text="" tiptext="Evaluates an arbitrary expression" version="7.0" helpurl="statements:evaluate"/>
                    </ifmode>
                    <action id="while" name="while" quickey="wh" text="while (% condition %) {\n}\n" tiptext="Evaluates a condition and if the condition evaluates to true , executes a statement or series of statements before looping back to evaluate the condition again." version="9" helpurl="statements:while"/>
                    <action id="with" name="with" quickey="wt" text="with (% object %) {\n}\n" tiptext="Establishes a default object to be used for the execution of a statement or statements." version="9" helpurl="statements:with"/>
                </folder>
                <folder name="definition keyword" id="definition keyword" sort="true" tiptext="Used to define entities such as variables, functions, classes, and interfaces.">
                    <action id="class" name="class" quickey="cl" text="class %name% {\n}\n" tiptext="Defines a class, which lets you instantiate objects that share methods and properties that you define." version="9" helpurl="statements:class"/>
                    <string name="extends" text="extends" tiptext="Defines a class that is a subclass of another class." version="9" helpurl="statements:extends"/>
                    <action id="function" name="function" quickey="fn" text="function %name% () {\n}\n" tiptext="Comprises a set of statements that you define to perform a certain task." version="9" helpurl="statements:function"/>
                    <string name="get" text="get" tiptext="Defines a read accessor, a method which can be read like a property." version="9" helpurl="statements:get"/>
                    <string name="implements" text="implements" tiptext="Specifies that a class must define all the methods declared in the interface (or interfaces) being implemented." version="9" helpurl="statements:implements"/>
                    <action id="interface" name="interface" text="interface" tiptext="Defines an interface." version="9" helpurl="statements:interface"/>
                    <string name="package" text="package" tiptext="Allows you to organize your code into discrete groups that can be imported by other scripts." version="9" helpurl="statements:package"/>
                    <string name="namespace" text="namespace" tiptext="Allows you to control the visibility of definitions." version="9" helpurl="statements:namespace"/>
                    <string name="... (rest) parameter" text="..." tiptext="Specifies that a function will accept any number of comma-delimited arguments." version="9" helpurl="statements:... (rest) parameter"/>
                    <string name="set" text="set" tiptext="Defines a setter, which is a method that appears in the public interface as a property." version="9" helpurl="statements:set"/>
                    <string name="const" text="const" tiptext="Specifies a constant, which is a variable that can only be assigned a value once." version="9" helpurl="statements:const"/>
                    <action id="var" name="var" quickey="vr" text="var %%;\n" tiptext="Specifies a variable." version="9" helpurl="statements:var"/>
                </folder>
                <folder name="directive" id="directive" sort="true" tiptext="Statements and definitions that can have an effect at compile time or runtime.">
                    <string name="default xml namespace" text="default xml namespace" tiptext="The default xml namespace statement sets the default namespace to use for XML objects." version="9" helpurl="statements:default xml namespace"/>
                    <action id="import" name="import" text="import" tiptext="Makes classes and packages available to your code." version="9" helpurl="statements:import"/>
                    <action id="include" name="include" text="include" tiptext="Includes the contents of the specified file, as if the commands in the file are part of the calling script." version="" helpurl="statements:include"/>
                    <string name="use namespace" text="use namespace" tiptext="Causes the specified namespaces to be added to the set of open namespaces." version="9" helpurl="statements:use namespace"/>
                </folder>
                <folder name="attribute keyword" id="attribute keyword" sort="true" tiptext="Used to alter the meaning of definitions, and can be applied to class, variable, function, and namespace definitions.">
                    <string name="dynamic" text="dynamic" tiptext="Specifies that instances of a class may possess dynamic properties added at runtime." version="9" helpurl="statements:dynamic"/>
                    <string name="private" text="private" tiptext="Specifies that a variable, constant, method or namespace is available only to the class that declares or defines it." version="9" helpurl="statements:private"/>
                    <string name="protected" text="protected" tiptext="Specifies that a variable, constant or method is available only to the class that declares or defines it or to subclasses of that class." version="9" helpurl="statements:protected"/>
                    <string name="native" text="native" tiptext="Specifies that a function or method is implemented by Flash Player in native code." version="9" helpurl="statements:native"/>
                    <string name="internal" text="internal" tiptext="Specifies that a class, variable, constant or function is available to any caller within the same package." version="9" helpurl="statements:internal"/>
                    <string name="override" text="override" tiptext="Specifies that a method replaces (shadows) an inherited method." version="9" helpurl="statements:override"/>
                    <string name="final" text="final" tiptext="Specifies that a method cannot be overridden." version="9" helpurl="statements:final"/>
                    <string name="public" text="public" tiptext="Specifies that a class, variable, constant or method is available to any caller." version="9" helpurl="statements:public"/>
                    <string name="static" text="static" tiptext="Specifies that a variable, constant or method belongs to the class, as opposed to instances of the class." version="9" helpurl="statements:static"/>
                </folder>
                <folder name="primary expression keyword" id="primary expression keyword" sort="true" tiptext="Used to represent literal values.">
                    <string name="this" text="this" tiptext="A reference to a method&apos;s containing object." version="9" helpurl="statements:this"/>
                    <string name="false" text="false" tiptext="A Boolean value representing false." version="9" helpurl="statements:false"/>
                    <string name="null" text="null" tiptext="A special value that can be assigned to variables or returned by a function if no data was provided." version="9" helpurl="statements:null"/>
                    <string name="true" text="true" tiptext="A Boolean value representing true." version="9" helpurl="statements:true"/>
                </folder>
                <folder name="namespace" id="namespace" sort="true" tiptext="A context for identifiers.">
                    <string name="AS3" text="" tiptext="Defines methods and properties of the core ActionScript classes that are fixed properties instead of prototype properties." version="" helpurl="statements:AS3"/>
                    <string name="flash_proxy" text="" tiptext="Defines methods of the Proxy class." version="" helpurl="statements:flash_proxy"/>
                    <string name="object_proxy" text="" tiptext="Defines methods of the ObjectProxy class." version="" helpurl="statements:object_proxy"/>
                </folder>
            </folder>
            <folder name="Operators" tiptext="Symbolic operators used to combine, compare, or midify values" sort="true" helpurl="operators:">
                <folder name="other" sort="false" tiptext="Miscellaneous operators">
                    <string name="[] (array access)" text="[]" tiptext="Initializes a new array or multidimensional array with the specified elements (a0, and so on), or accesses elements in an array." version="9" helpurl="operators:array access"/>
                    <string name="as" text="as" tiptext="Checks whether expression is compatible with data type datatype." version="9" helpurl="operators:as"/>
                    <string name=", (comma)" text="," tiptext="Evaluates expression1, then expression2, and so on." version="9" helpurl="operators:comma"/>
                    <string name="?: (conditional)" text="?:" tiptext="Instructs Flash to evaluate expression1, and if the value of  expression1 is true, it returns the value of expression2 ; otherwise it returns the value of expression3." version="9" helpurl="operators:conditional"/>
                    <string name="delete" text="delete" tiptext="Destroys the object reference specified by the reference parameter, and returns true if the reference is successfully deleted; false otherwise." version="9" helpurl="operators:delete"/>
                    <string name=". (dot)" text="." tiptext="Used to navigate movie clip hierarchies to access nested (child) movie clips, variables, or properties." version="9" helpurl="operators:dot"/>
                    <string name="in" text="in" tiptext="Checks whether expression1 is a property of expression2." version="9" helpurl="operators:in"/>
                    <string name="instanceof" text="instanceof" tiptext="Evaluates whether an object belongs to a specific class." version="9" helpurl="operators:instanceof"/>
                    <string name="is" text="is" tiptext="Checks whether expression1 is compatible with data type expression2." version="9" helpurl="operators:is"/>
                    <string name=":: (name qualifier)" text="::" tiptext="Used to identify the namespace of a property, a method, an XML property, or an XML attribute." version="9" helpurl="operators:name qualifier"/>
                    <string name="new" text="new" tiptext="Creates a new, initially anonymous, object and calls the function identified by the constructor parameter." version="5" helpurl="operators:new"/>
                    <string name="{} (object initializer)" text="{}" tiptext="Creates a new object and initializes it with the specified name and value property pairs." version="9" helpurl="operators:object initializer"/>
                    <string name="() (parentheses)" text="()" tiptext="Performs a grouping operation on one or more parameters, performs sequential evaluation of expressions, or surrounds one or more parameters and passes them as parameters to a function outside the parentheses." version="9" helpurl="operators:parentheses"/>
                    <string name="/ (RegExp delimiter)" text="/" tiptext="When used before and after characters, the forward slash character (/) define a regular expression literal." version="9" helpurl="operators:RegExp delimiter"/>
                    <string name=": (type)" text=":" tiptext="Used for strict data typing; this operator specifies the variable type, function return type, or function parameter type." version="9" helpurl="operators:type"/>
                    <string name="typeof" text="typeof" tiptext="Evaluate the expression and returns a string specifying its type." version="9" helpurl="operators:typeof"/>
                    <string name="void" text="void" tiptext="The void operator evaluates an expression and then discards its value, returning an undefined value." version="9" helpurl="operators:void"/>
                </folder>
                <folder name="logical" sort="false" tiptext="logical operators">
                    <string name="&amp;&amp; (logical AND)" text="&amp;&amp;" tiptext="Performs a Boolean operation on the values of one or both of the expressions." version="9" helpurl="operators:logical AND"/>
                    <string name="&amp;&amp;= (logical AND assignment)" text="&amp;&amp;=" tiptext="Assigns expression1 the value of expression1 &amp;amp;&amp;amp; expression2." version="9" helpurl="operators:logical AND assignment"/>
                    <string name="! (logical NOT)" text="!" tiptext="Inverts the Boolean value of a variable or expression." version="9" helpurl="operators:logical NOT"/>
                    <string name="|| (logical OR)" text="||" tiptext="Evaluates expression1 (the expression on the left side of the operator) and returns true if the expression evaluates to true." version="9" helpurl="operators:logical OR"/>
                    <string name="||= (logical OR assignment)" text="||=" tiptext="Assigns expression1 the value of expression1 || expression2." version="9" helpurl="operators:logical OR assignment"/>
                </folder>
                <folder name="comparison" sort="false" tiptext="comparison operators">
                    <string name="== (equality)" text="==" tiptext="Tests two expressions for equality." version="9" helpurl="operators:equality"/>
                    <string name="&gt; (greater than)" text="&gt;" tiptext="Compares two expressions and determines whether expression1 is greater than expression2 ; if it is, the operator returns true." version="9" helpurl="operators:greater than"/>
                    <string name="&gt;= (greater than or equal to)" text="&gt;=" tiptext="Compares two expressions and determines whether expression1 is greater than or equal to expression2 ; if it is, the operator returns true." version="9" helpurl="operators:greater than or equal to"/>
                    <string name="!= (inequality)" text="!=" tiptext="Tests for the exact opposite of the equality (==) operator." version="9" helpurl="operators:inequality"/>
                    <string name="&lt; (less than)" text="&lt;" tiptext="Compares two expressions and determines whether expression1 is less than expression2 ; if so, the operator returns true." version="9" helpurl="operators:less than"/>
                    <string name="&lt;= (less than or equal to)" text="&lt;=" tiptext="Compares two expressions and determines whether expression1 is less than or equal to expression2 ; if it is, the operator returns true." version="9" helpurl="operators:less than or equal to"/>
                    <string name="=== (strict equality)" text="===" tiptext="Tests two expressions for equality; the strict equality (===) operator performs in the same way as the equality (==) operator, except that data types are not converted." version="9" helpurl="operators:strict equality"/>
                    <string name="!== (strict inequality)" text="!==" tiptext="Tests for the exact opposite of the strict equality (===) operator." version="9" helpurl="operators:strict inequality"/>
                </folder>
                <folder name="comment" sort="false" tiptext="comment operators">
                    <action id="comment" name="/*..*/ (block comment delimiter)" text="/* %% */\n" tiptext="Indicates one or more lines of script comments." version="9" helpurl="operators:block comment delimiter"/>
                    <action id="comment" quickey="//" name="// (line comment delimiter)" text="// %%\n" tiptext="Indicates the beginning of a script comment." version="9" helpurl="operators:line comment delimiter"/>
                </folder>
                <folder name="arithmetic" sort="false" tiptext="arithmetic operators">
                    <string name="+ (addition)" text="+" tiptext="Adds numeric expressions." version="9" helpurl="operators:addition"/>
                    <string name="-- (decrement)" text="--" tiptext="A pre-decrement and post-decrement unary operator that subtracts 1 from the expression." version="9" helpurl="operators:decrement"/>
                    <string name="/ (division)" text="/" tiptext="Divides expression1 by expression2." version="9" helpurl="operators:division"/>
                    <string name="++ (increment)" text="++" tiptext="A pre-increment and post-increment unary operator that adds 1 to  expression ." version="9" helpurl="operators:increment"/>
                    <string name="% (modulo)" text="%" tiptext="Calculates the remainder of expression1 divided by  expression2." version="9" helpurl="operators:modulo"/>
                    <string name="* (multiplication)" text="*" tiptext="Multiplies two numerical expressions." version="9" helpurl="operators:multiplication"/>
                    <string name="- (subtraction)" text="-" tiptext="Used for negating or subtracting." version="9" helpurl="operators:subtraction"/>
                </folder>
                <folder name="arithmetic compound assignment" sort="false" tiptext="compound arithmetic operators">
                    <string name="+= (addition assignment)" text="+=" tiptext="Assigns expression1 the value of  expression1 + expression2." version="9" helpurl="operators:addition assignment"/>
                    <string name="/= (division assignment)" text="/=" tiptext="Assigns expression1 the value of  expression1 / expression2." version="9" helpurl="operators:division assignment"/>
                    <string name="%= (modulo assignment)" text="%=" tiptext="Assigns expression1 the value of  expression1 % expression2." version="9" helpurl="operators:modulo assignment"/>
                    <string name="*= (multiplication assignment)" text="*=" tiptext="Operator (arithmetic compound assignment); assigns expression1 the value of  expression1 * expression2." version="9" helpurl="operators:multiplication assignment"/>
                    <string name="-= (subtraction assignment)" text="-=" tiptext="Assigns expression1 the value of  expression1 - expression2." version="9" helpurl="operators:subtraction assignment"/>
                </folder>
                <folder name="bitwise" sort="false" tiptext="bitwise operators">
                    <string name="&amp; (bitwise AND)" text="&amp;" tiptext="Converts expression1 and  expression2 to 32-bit unsigned integers, and performs a Boolean AND operation on each bit of the integer parameters." version="9" helpurl="operators:bitwise AND"/>
                    <string name="&lt;&lt; (bitwise left shift)" text="&lt;&lt;" tiptext="Converts expression1 and expression2 to 32-bit integers, and shifts all the bits in expression1 to the left by the number of places specified by the integer resulting from the conversion of expression2." version="9" helpurl="operators:bitwise left shift"/>
                    <string name="~ (bitwise NOT)" text="~" tiptext="Also known as the one&apos;s complement operator or the bitwise complement operator." version="9" helpurl="operators:bitwise NOT"/>
                    <string name="| (bitwise OR)" text="|" tiptext="Converts expression1 and expression2 to 32-bit unsigned integers, and places a 1 in each bit position where the corresponding bits of either  expression1 or expression2 are 1." version="9" helpurl="operators:bitwise OR"/>
                    <string name="&gt;&gt; (bitwise right shift)" text="&gt;&gt;" tiptext="Converts expression1 and expression2 to 32-bit integers, and shifts all the bits in expression1 to the right by the number of places specified by the integer that results from the conversion of expression2." version="9" helpurl="operators:bitwise right shift"/>
                    <string name="&gt;&gt;&gt; (bitwise unsigned right shift)" text="&gt;&gt;&gt;" tiptext="The same as the bitwise right shift (&amp;gt;&amp;gt;) operator except that it does not preserve the sign of the original expression because the bits on the left are always filled with 0." version="9" helpurl="operators:bitwise unsigned right shift"/>
                    <string name="^ (bitwise XOR)" text="^" tiptext="Converts expression1 and expression2 to 32-bit unsigned integers, and returns a 1 in each bit position where the corresponding bits in expression1 or expression2, but not both, are 1." version="9" helpurl="operators:bitwise XOR"/>
                </folder>
                <folder name="bitwise compound assignment" sort="false" tiptext="compound bitwise operators">
                    <string name="&amp;= (bitwise AND assignment)" text="&amp;=" tiptext="Assigns expression1 the value of expression1 &amp;amp; expression2." version="9" helpurl="operators:bitwise AND assignment"/>
                    <string name="&lt;&lt;= (bitwise left shift and assignment)" text="&lt;&lt;=" tiptext="This operator performs a bitwise left shift (&amp;lt;&amp;lt;=) operation and stores the contents as a result in expression1." version="9" helpurl="operators:bitwise left shift and assignment"/>
                    <string name="|= (bitwise OR assignment)" text="|=" tiptext="Assigns expression1 the value of  expression1 | expression2." version="9" helpurl="operators:bitwise OR assignment"/>
                    <string name="&gt;&gt;= (bitwise right shift and assignment)" text="&gt;&gt;=" tiptext="This operator performs a bitwise right-shift operation and stores the contents as a result in expression1." version="9" helpurl="operators:bitwise right shift and assignment"/>
                    <string name="&gt;&gt;&gt;= (bitwise unsigned right shift and assignment)" text="&gt;&gt;&gt;=" tiptext="Performs an unsigned bitwise right-shift operation and stores the contents as a result in expression1." version="9" helpurl="operators:bitwise unsigned right shift and assignment"/>
                    <string name="^= (bitwise XOR assignment)" text="^=" tiptext="Assigns expression1 the value of  expression1 ^ expression2." version="9" helpurl="operators:bitwise XOR assignment"/>
                </folder>
                <folder name="string" sort="false" tiptext="string operators">
                    <string name="+ (concatenation)" text="+" tiptext="Concatenates (combines) strings." version="9" helpurl="operators:concatenation"/>
                    <string name="+= (concatenation assignment)" text="+=" tiptext="Assigns expression1 the value of  expression1 + expression2." version="9" helpurl="operators:concatenation assignment"/>
                    <string name="&quot; (string delimiter)" text="&quot;" tiptext="When used before and after characters, quotation marks (&quot;) indicate that the characters have a literal value." version="9" helpurl="operators:string delimiter"/>
                </folder>
                <folder name="assignment" sort="false" tiptext="assignment operators">
                    <string name="= (assignment)" text="=" tiptext="Assigns the value of expression2 (the parameter on the right) to the variable, array element, or property in expression1." version="9" helpurl="operators:assignment"/>
                </folder>
                <folder name="XML" sort="false" tiptext="XML operators">
                    <string name="@ (attribute identifier)" text="@" tiptext="Use the XML @ (at sign) operator to identify attributes of an XML or XMLList object." version="9" helpurl="operators:attribute identifier"/>
                    <string name="{ } (braces (XML))" text="{ }" tiptext="Use the XML { and } operators to pass data by reference (from other variables) into an XML or XMLList literal." version="9" helpurl="operators:braces (XML)"/>
                    <string name="[ ] (brackets (XML))" text="[ ]" tiptext="Accesses a property or attribute of an XML or XMLList object." version="9" helpurl="operators:brackets (XML)"/>
                    <string name="+ (concatenation (XMLList))" text="+" tiptext="Use the XML + (concatenation) operator to concatenate XMLList objects." version="9" helpurl="operators:concatenation (XMLList)"/>
                    <string name="+= (concatenation assignment (XMLList))" text="+=" tiptext="Assigns expression1, which is an XMLList object, the value of expression1 + expression2." version="9" helpurl="operators:concatenation assignment (XMLList)"/>
                    <string name="delete (XML)" text="delete (XML)" tiptext="Deletes the XML elements or attributes specified." version="9" helpurl="operators:delete (XML)"/>
                    <string name=".. (descendant accessor)" text=".." tiptext="Use the XML descendant accessor (..) operator to navigate to descendant elements of an XML or XMLList object, or (combined with the @ operator) to return attributes descendants." version="9" helpurl="operators:descendant accessor"/>
                    <string name=". (dot (XML))" text="." tiptext="Navigates to child elements of an XML or XMLList object, or (combined with the @ operator) returns attributes of an XML or XMLList object." version="9" helpurl="operators:dot (XML)"/>
                    <string name="( ) (parentheses (XML))" text="( )" tiptext="Use the ( and ) operators to evaluate an expression in an E4X XML construct." version="9" helpurl="operators:parentheses (XML)"/>
                    <string name="&lt; &gt; (XML literal tag delimiter)" text="&lt; &gt;" tiptext="Use the &amp;lt; and &amp;gt; operators to define an XML tag in an XML literal." version="9" helpurl="operators:XML literal tag delimiter"/>
                </folder>
            </folder>
            <folder name="Special Types" tiptext="Special Types for strong typing" sort="true" helpurl="specialTypes:">
                <string name="*" text="*" tiptext="Specifies that a property is untyped." version="9" helpurl="specialTypes:*"/>
                <string name="void" text="void" object="void" tiptext="Specifies that a function cannot return any value." version="9" helpurl="specialTypes:void"/>
                <string name="Null" text="Null" object="Null" tiptext="A special data type that represents the lack of a value." version="9" helpurl="specialTypes:Null"/>
            </folder>
        </folder>
    </actionspanel>
    <codehints>
        <package name="adobe.utils" children="CustomActions,XMLUI,MMEndCommand,MMExecute"/>
        <package name="air.desktop" children="URLFilePromise"/>
        <package name="air.net" children="SecureSocketMonitor,ServiceMonitor,SocketMonitor,URLMonitor"/>
        <package name="air.update" children="ApplicationUpdater,ApplicationUpdaterUI"/>
        <package name="air.update.events" children="DownloadErrorEvent,StatusFileUpdateErrorEvent,StatusFileUpdateEvent,StatusUpdateErrorEvent,StatusUpdateEvent,UpdateEvent"/>
        <package name="fl.accessibility" children="AccImpl,ButtonAccImpl,CheckBoxAccImpl,ComboBoxAccImpl,DataGridAccImpl,LabelButtonAccImpl,ListAccImpl,RadioButtonAccImpl,SelectableListAccImpl,TileListAccImpl,UIComponentAccImpl"/>
        <package name="fl.containers" children="BaseScrollPane,ScrollPane,UILoader"/>
        <package name="fl.controls" children="BaseButton,Button,ButtonLabelPlacement,CheckBox,ColorPicker,ComboBox,DataGrid,Label,LabelButton,List,NumericStepper,ProgressBar,ProgressBarDirection,ProgressBarMode,RadioButton,RadioButtonGroup,ScrollBar,ScrollBarDirection,ScrollPolicy,SelectableList,Slider,SliderDirection,TextArea,TextInput,TileList,UIScrollBar"/>
        <package name="fl.controls.dataGridClasses" children="DataGridCellEditor,DataGridColumn,HeaderRenderer"/>
        <package name="fl.controls.listClasses" children="CellRenderer,ICellRenderer,ImageCell,ListData,TileListData"/>
        <package name="fl.controls.progressBarClasses" children="IndeterminateBar"/>
        <package name="fl.core" children="InvalidationType,UIComponent"/>
        <package name="fl.data" children="DataProvider,SimpleCollectionItem,TileListCollectionItem"/>
        <package name="fl.display" children="ProLoader,ProLoaderInfo"/>
        <package name="fl.events" children="ColorPickerEvent,ComponentEvent,DataChangeEvent,DataChangeType,DataGridEvent,DataGridEventReason,InteractionInputType,ListEvent,RSLErrorEvent,RSLEvent,ScrollEvent,SliderEvent,SliderEventClickTarget"/>
        <package name="fl.ik" children="IKArmature,IKBone,IKEvent,IKJoint,IKManager,IKMover"/>
        <package name="fl.lang" children="Locale"/>
        <package name="fl.livepreview" children="LivePreviewParent"/>
        <package name="fl.managers" children="FocusManager,IFocusManager,IFocusManagerComponent,IFocusManagerGroup,StyleManager"/>
        <package name="fl.motion" children="AdjustColor,Animator,Animator3D,AnimatorBase,AnimatorFactory,AnimatorFactory3D,AnimatorFactoryBase,AnimatorFactoryUniversal,AnimatorUniversal,BezierEase,BezierSegment,Color,ColorMatrix,CustomEase,DynamicMatrix,FunctionEase,ITween,Keyframe,KeyframeBase,MatrixTransformer,Motion,MotionBase,MotionEvent,RotateDirection,SimpleEase,Source,Tweenables"/>
        <package name="fl.motion.easing" children="Back,Bounce,Circular,Cubic,Elastic,Exponential,Linear,Quadratic,Quartic,Quintic,Sine"/>
        <package name="fl.rsl" children="RSLInfo,RSLPreloader,SWZInfo"/>
        <package name="fl.text" children="TLFTextField"/>
        <package name="fl.transitions" children="Blinds,Fade,Fly,Iris,Photo,PixelDissolve,Rotate,Squeeze,Transition,TransitionManager,Tween,TweenEvent,Wipe,Zoom"/>
        <package name="fl.transitions.easing" children="Back,Bounce,Elastic,None,Regular,Strong"/>
        <package name="fl.video" children="AutoLayoutEvent,CaptionChangeEvent,CaptionTargetEvent,CuePointType,FLVPlayback,FLVPlaybackCaptioning,INCManager,IVPEvent,LayoutEvent,MetadataEvent,NCManager,NCManagerNative,SkinErrorEvent,SoundEvent,VideoAlign,VideoError,VideoEvent,VideoPlayer,VideoProgressEvent,VideoScaleMode,VideoState"/>
        <package name="flash.accessibility" children="Accessibility,AccessibilityImplementation,AccessibilityProperties,ISearchableText,ISimpleTextSelection"/>
        <package name="flash.data" children="EncryptedLocalStore,SQLCollationType,SQLColumnNameStyle,SQLColumnSchema,SQLConnection,SQLIndexSchema,SQLMode,SQLResult,SQLSchema,SQLSchemaResult,SQLStatement,SQLTableSchema,SQLTransactionLockType,SQLTriggerSchema,SQLViewSchema"/>
        <package name="flash.desktop" children="Clipboard,ClipboardFormats,ClipboardTransferMode,DockIcon,Icon,IFilePromise,InteractiveIcon,InvokeEventReason,NativeApplication,NativeDragActions,NativeDragManager,NativeDragOptions,NativeProcess,NativeProcessStartupInfo,NotificationType,SystemIdleMode,SystemTrayIcon,Updater"/>
        <package name="flash.display" children="ActionScriptVersion,AVM1Movie,Bitmap,BitmapData,BitmapDataChannel,BlendMode,CapsStyle,ColorCorrection,ColorCorrectionSupport,DisplayObject,DisplayObjectContainer,FocusDirection,FrameLabel,GradientType,Graphics,GraphicsBitmapFill,GraphicsEndFill,GraphicsGradientFill,GraphicsPath,GraphicsPathCommand,GraphicsPathWinding,GraphicsShaderFill,GraphicsSolidFill,GraphicsStroke,GraphicsTrianglePath,IBitmapDrawable,IGraphicsData,IGraphicsFill,IGraphicsPath,IGraphicsStroke,InteractiveObject,InterpolationMethod,JointStyle,LineScaleMode,Loader,LoaderInfo,MorphShape,MovieClip,NativeMenu,NativeMenuItem,NativeWindow,NativeWindowDisplayState,NativeWindowInitOptions,NativeWindowResize,NativeWindowSystemChrome,NativeWindowType,PixelSnapping,Scene,Screen,Shader,ShaderData,ShaderInput,ShaderJob,ShaderParameter,ShaderParameterType,ShaderPrecision,Shape,SimpleButton,SpreadMethod,Sprite,Stage,StageAlign,StageAspectRatio,StageDisplayState,StageOrientation,StageQuality,StageScaleMode,SWFVersion,TriangleCulling"/>
        <package name="flash.errors" children="DRMManagerError,EOFError,IllegalOperationError,InvalidSWFError,IOError,MemoryError,ScriptTimeoutError,SQLError,SQLErrorOperation,StackOverflowError"/>
        <package name="flash.events" children="AccelerometerEvent,ActivityEvent,AsyncErrorEvent,BrowserInvokeEvent,ContextMenuEvent,DataEvent,DatagramSocketDataEvent,DNSResolverEvent,DRMAuthenticateEvent,DRMAuthenticationCompleteEvent,DRMAuthenticationErrorEvent,DRMErrorEvent,DRMStatusEvent,ErrorEvent,Event,EventDispatcher,EventPhase,FileListEvent,FocusEvent,FullScreenEvent,GeolocationEvent,GestureEvent,GesturePhase,HTMLUncaughtScriptExceptionEvent,HTTPStatusEvent,IEventDispatcher,IMEEvent,InvokeEvent,IOErrorEvent,KeyboardEvent,LocationChangeEvent,MediaEvent,MouseEvent,NativeDragEvent,NativeProcessExitEvent,NativeWindowBoundsEvent,NativeWindowDisplayStateEvent,NetStatusEvent,OutputProgressEvent,PressAndTapGestureEvent,ProgressEvent,SampleDataEvent,ScreenMouseEvent,SecurityErrorEvent,ServerSocketConnectEvent,ShaderEvent,SoftKeyboardEvent,SoftKeyboardTrigger,SQLErrorEvent,SQLEvent,SQLUpdateEvent,StageOrientationEvent,StageVideoAvailabilityEvent,StageVideoEvent,StatusEvent,StorageVolumeChangeEvent,SyncEvent,TextEvent,TimerEvent,TouchEvent,TransformGestureEvent,UncaughtErrorEvent,UncaughtErrorEvents,VideoEvent"/>
        <package name="flash.external" children="ExtensionContext,ExternalInterface"/>
        <package name="flash.filesystem" children="File,FileMode,FileStream,StorageVolume,StorageVolumeInfo"/>
        <package name="flash.filters" children="BevelFilter,BitmapFilter,BitmapFilterQuality,BitmapFilterType,BlurFilter,ColorMatrixFilter,ConvolutionFilter,DisplacementMapFilter,DisplacementMapFilterMode,DropShadowFilter,GlowFilter,GradientBevelFilter,GradientGlowFilter,ShaderFilter"/>
        <package name="flash.geom" children="ColorTransform,Matrix,Matrix3D,Orientation3D,PerspectiveProjection,Point,Rectangle,Transform,Utils3D,Vector3D"/>
        <package name="flash.globalization" children="Collator,CollatorMode,CurrencyFormatter,CurrencyParseResult,DateTimeFormatter,DateTimeNameContext,DateTimeNameStyle,DateTimeStyle,LastOperationStatus,LocaleID,NationalDigitsType,NumberFormatter,NumberParseResult,StringTools"/>
        <package name="flash.html" children="HTMLHistoryItem,HTMLHost,HTMLLoader,HTMLPDFCapability,HTMLSWFCapability,HTMLWindowCreateOptions"/>
        <package name="flash.media" children="Camera,CameraRoll,CameraUI,ID3Info,MediaPromise,MediaType,Microphone,Sound,SoundChannel,SoundCodec,SoundLoaderContext,SoundMixer,SoundTransform,StageVideo,StageVideoAvailability,StageWebView,Video,VideoStatus,scanHardware"/>
        <package name="flash.net" children="DatagramSocket,FileFilter,FileReference,FileReferenceList,GroupSpecifier,IDynamicPropertyOutput,IDynamicPropertyWriter,InterfaceAddress,IPVersion,LocalConnection,NetConnection,NetGroup,NetGroupInfo,NetGroupReceiveMode,NetGroupReplicationStrategy,NetGroupSendMode,NetGroupSendResult,NetStream,NetStreamAppendBytesAction,NetStreamInfo,NetStreamMulticastInfo,NetStreamPlayOptions,NetStreamPlayTransitions,NetworkInfo,NetworkInterface,ObjectEncoding,Responder,SecureSocket,ServerSocket,SharedObject,SharedObjectFlushStatus,Socket,URLLoader,URLLoaderDataFormat,URLRequest,URLRequestDefaults,URLRequestHeader,URLRequestMethod,URLStream,URLVariables,XMLSocket,getClassByAlias,navigateToURL,registerClassAlias,sendToURL"/>
        <package name="flash.net.dns" children="AAAARecord,ARecord,DNSResolver,MXRecord,PTRRecord,ResourceRecord,SRVRecord"/>
        <package name="flash.net.drm" children="AuthenticationMethod,DRMContentData,DRMManager,DRMPlaybackTimeWindow,DRMVoucher,LoadVoucherSetting,VoucherAccessInfo"/>
        <package name="flash.printing" children="PaperSize,PrintJob,PrintJobOptions,PrintJobOrientation,PrintMethod,PrintUIOptions"/>
        <package name="flash.profiler" children="showRedrawRegions"/>
        <package name="flash.sampler" children="DeleteObjectSample,NewObjectSample,Sample,StackFrame,clearSamples,getGetterInvocationCount,getInvocationCount,getLexicalScopes,getMasterString,getMemberNames,getSampleCount,getSamples,getSavedThis,getSetterInvocationCount,getSize,isGetterSetter,pauseSampling,sampleInternalAllocs,setSamplerCallback,startSampling,stopSampling"/>
        <package name="flash.security" children="CertificateStatus,IURIDereferencer,ReferencesValidationSetting,RevocationCheckSettings,SignatureStatus,SignerTrustSettings,XMLSignatureValidator"/>
        <package name="flash.sensors" children="Accelerometer,Geolocation"/>
        <package name="flash.system" children="ApplicationDomain,Capabilities,ImageDecodingPolicy,IME,IMEConversionMode,JPEGLoaderContext,LoaderContext,Security,SecurityDomain,SecurityPanel,System,SystemUpdater,SystemUpdaterType,TouchscreenType,fscommand"/>
        <package name="flash.text" children="AntiAliasType,CSMSettings,Font,FontStyle,FontType,GridFitType,StaticText,StyleSheet,TextColorType,TextDisplayMode,TextExtent,TextField,TextFieldAutoSize,TextFieldType,TextFormat,TextFormatAlign,TextInteractionMode,TextLineMetrics,TextRenderer,TextSnapshot"/>
        <package name="flash.text.engine" children="BreakOpportunity,CFFHinting,ContentElement,DigitCase,DigitWidth,EastAsianJustifier,ElementFormat,FontDescription,FontLookup,FontMetrics,FontPosture,FontWeight,GraphicElement,GroupElement,JustificationStyle,Kerning,LigatureLevel,LineJustification,RenderingMode,SpaceJustifier,TabAlignment,TabStop,TextBaseline,TextBlock,TextElement,TextJustifier,TextLine,TextLineCreationResult,TextLineMirrorRegion,TextLineValidity,TextRotation,TypographicCase"/>
        <package name="flash.text.ime" children="CompositionAttributeRange,IIMEClient"/>
        <package name="flash.ui" children="ContextMenu,ContextMenuBuiltInItems,ContextMenuClipboardItems,ContextMenuItem,Keyboard,KeyboardType,KeyLocation,Mouse,MouseCursor,MouseCursorData,Multitouch,MultitouchInputMode"/>
        <package name="flash.utils" children="ByteArray,CompressionAlgorithm,Dictionary,Endian,IDataInput,IDataOutput,IExternalizable,Proxy,Timer,describeType,escapeMultiByte,getDefinitionByName,getQualifiedClassName,getQualifiedSuperclassName,getTimer,unescapeMultiByte,clearInterval,clearTimeout,setInterval,setTimeout"/>
        <package name="flash.xml" children="XMLDocument,XMLNode,XMLNodeType"/>
        <package name="flashx.textLayout.compose" children="FlowComposerBase,FlowDamageType,IFlowComposer,ISWFContext,ITextLineCreator,IVerticalJustificationLine,StandardFlowComposer,TextFlowLine,TextFlowLineLocation,TextLineRecycler"/>
        <package name="flashx.textLayout.container" children="ColumnState,ContainerController,ISandboxSupport,ScrollPolicy,TextContainerManager"/>
        <package name="flashx.textLayout.conversion" children="ConversionType,ITextExporter,ITextImporter,PlainTextExporter,TextConverter"/>
        <package name="flashx.textLayout.edit" children="EditingMode,EditManager,ElementRange,IEditManager,IInteractionEventHandler,ISelectionManager,SelectionFormat,SelectionManager,SelectionState,TextClipboard,TextScrap"/>
        <package name="flashx.textLayout.elements" children="BreakElement,Configuration,ContainerFormattedElement,DivElement,FlowElement,FlowGroupElement,FlowLeafElement,GlobalSettings,IConfiguration,IFormatResolver,InlineGraphicElement,InlineGraphicElementStatus,LinkElement,LinkState,OverflowPolicy,ParagraphElement,ParagraphFormattedElement,SpanElement,SpecialCharacterElement,SubParagraphGroupElement,TabElement,TCYElement,TextFlow,TextRange"/>
        <package name="flashx.textLayout.events" children="CompositionCompleteEvent,DamageEvent,FlowElementMouseEvent,FlowOperationEvent,SelectionEvent,StatusChangeEvent,TextLayoutEvent,UpdateCompleteEvent"/>
        <package name="flashx.textLayout.factory" children="StringTextLineFactory,TextFlowTextLineFactory,TextLineFactoryBase,TruncationOptions"/>
        <package name="flashx.textLayout.formats" children="BackgroundColor,BaselineOffset,BaselineShift,BlockProgression,Direction,FormatValue,ITabStopFormat,ITextLayoutFormat,JustificationRule,LeadingModel,LineBreak,TabStopFormat,TextAlign,TextDecoration,TextJustify,TextLayoutFormat,TLFTypographicCase,VerticalAlign,WhiteSpaceCollapse"/>
        <package name="flashx.textLayout.operations" children="ApplyElementIDOperation,ApplyElementStyleNameOperation,ApplyElementUserStyleOperation,ApplyFormatOperation,ApplyFormatToElementOperation,ApplyLinkOperation,ApplyTCYOperation,ClearFormatOnElementOperation,ClearFormatOperation,CompositeOperation,CopyOperation,CutOperation,DeleteTextOperation,FlowElementOperation,FlowOperation,FlowTextOperation,InsertInlineGraphicOperation,InsertTextOperation,ModifyInlineGraphicOperation,PasteOperation,RedoOperation,SplitParagraphOperation,UndoOperation"/>
        <package name="flashx.textLayout.utils" children="CharacterUtil,NavigationUtil"/>
        <package name="flashx.undo" children="IOperation,IUndoManager,UndoManager"/>
        <typeinfo pattern="*_mc" object="flash.display.MovieClip"/>
        <typeinfo pattern="*_array" object="Array"/>
        <typeinfo pattern="*_str" object="String"/>
        <typeinfo pattern="*_btn" object="flash.display.SimpleButton"/>
        <typeinfo pattern="*_txt" object="flash.text.TextField"/>
        <typeinfo pattern="*_fmt" object="flash.text.TextFormat"/>
        <typeinfo pattern="*_date" object="Date"/>
        <typeinfo pattern="*_sound" object="flash.media.Sound"/>
        <typeinfo pattern="*_xml" object="XML"/>
        <typeinfo pattern="*_xmlnode" object="flash.xml.XMLNode"/>
        <typeinfo pattern="*_xmlsocket" object="flash.net.XMLSocket"/>
        <typeinfo pattern="*_color" object="fl.motion.Color"/>
        <typeinfo pattern="*_cm" object="flash.ui.ContextMenu"/>
        <typeinfo pattern="*_cmi" object="flash.ui.ContextMenuItem"/>
        <typeinfo pattern="*_pj" object="flash.printing.PrintJob"/>
        <typeinfo pattern="*_err" object="Error"/>
        <typeinfo pattern="*_cam" object="flash.media.Camera"/>
        <typeinfo pattern="*_lc" object="flash.net.LocalConnection"/>
        <typeinfo pattern="*_mic" object="flash.media.Microphone"/>
        <typeinfo pattern="*_nc" object="flash.net.NetConnection"/>
        <typeinfo pattern="*_ns" object="flash.net.NetStream"/>
        <typeinfo pattern="*_so" object="flash.net.SharedObject"/>
        <typeinfo pattern="*_video" object="flash.media.Video"/>
    </codehints>
</toolbox>
